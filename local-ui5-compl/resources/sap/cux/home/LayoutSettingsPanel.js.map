{"version":3,"file":"LayoutSettingsPanel.js","names":["sap","ui","define","Log","Button","Column","ColumnListItem","HBox","MessageBox","ObjectIdentifier","Table","Text","ToggleButton","VBox","Element","Icon","Lib","DragDropInfo","JSONModel","__BaseSettingsPanel","___flexibility_Layoutflexibility","___utils_Constants","__PersonalisationUtils","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","CHANGE_TYPES","SETTINGS_PANELS_KEYS","PersonalisationUtils","LayoutSettingsPanel","extend","metadata","library","constructor","_constructor","id","settings","BaseSettingsPanel.prototype.constructor.call","this","_isCollapseHandlerAttached","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","LAYOUT","_i18nBundle","getText","addAggregation","_getContent","getId","text","press","resetMyhomeSettings","attachPanelNavigated","_loadSections","_manageSectionsChanges","createShowHideChangeFile","_createShowHideChangeFile","oControlEvent","_this","toggle","getSource","bValue","getPressed","oContext","getBindingContext","getObject","visible","_getPanel","getSections","find","section","completeId","sChangeType","UNHIDE","HIDE","oWrapperItem","getElementById","push","selectorElement","changeSpecificData","changeType","Promise","resolve","_saveManageSectionsDialog","then","setTimeout","adjustLayout","_switchToCollapsedViewIfRequired","e","reject","containers","layout","isLayoutExpanded","getProperty","forEach","container","toggleFullScreen","_getSelectedPanel","_this2","_calculateSectionsState","_orderedSections","JSON","parse","stringify","oSection","sContainerType","title","String","_controlModel","_layoutTable","setModel","bindItems","path","template","type","cells","alignItems","items","src","addStyleClass","justifyContent","width","tooltip","icon","enabled","event","pressed","ariaLabelledBy","attachEvent","_rearrangeLayoutIfRequired","currentLayoutElements","getItems","Array","isArray","_allLayoutElements","length","isOrderChanged","some","element","index","removeAllItems","addItem","oHeader","_setHeaderIntro","oTable","setLayoutTable","oContentVBox","renderType","oHeaderText","oHeaderVBox","backgroundDesign","_setLayoutTable","columns","dragDropConfig","sourceAggregation","targetAggregation","groupName","dropPosition","drop","onDropManageSections","_this3","_persistUserChanges","changes","appComponent","getOwnerComponent","tableModel","getModel","refresh","finally","mProperties","load","name","require","ControlPersonalizationWriteAPI","add","ignoreVariantManagement","aGeneratedChanges","save","selector","catch","oError","Error","error","message","_getActualIndex","expandedElementConfig","_getCurrentExpandedElement","targetContainer","splice","indexOfItem","findIndex","_rearrangeLayoutElements","sourceIndex","targetIndex","_onDropManageSections","oEvent","_this4","oWrapper","wrapperId","oDragItem","getParameter","draggedControl","iDragItemIndex","getParent","oDropItem","droppedControl","iDropItemIndex","_temp","sectionOrder","dragObject","dropObject","actualDragItemIndex","actualDropItemIndex","setSections","MOVE","movedElements","source","aggregation","target","draggedContainer","droppedContainer","_resetMyhomeSettings","_this5","show","QUESTION","actions","Action","CANCEL","onClose","oAction","_temp2","aChangesForDeletion","reset","selectors","changeTypes","resetSections","closeSettingsDialog"],"sources":["LayoutSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport Column from \"sap/m/Column\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport HBox from \"sap/m/HBox\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Table from \"sap/m/Table\";\nimport Text from \"sap/m/Text\";\nimport ToggleButton from \"sap/m/ToggleButton\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Icon from \"sap/ui/core/Icon\";\nimport Lib from \"sap/ui/core/Lib\";\nimport DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel, { $BaseSettingsPanelSettings } from \"./BaseSettingsPanel\";\nimport Layout from \"./Layout\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IControlPersonalizationWriteAPI, IDragEvent, IElement, IManagePersChanges } from \"./interface/LayoutInterface\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\n\n/**\n *\n * Class for My Home Layout Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.LayoutSettingsPanel\n */\nexport default class LayoutSettingsPanel extends BaseSettingsPanel {\n\tprivate _layoutTable!: Table;\n\tpublic _i18nBundle!: ResourceBundle;\n\tprivate _orderedSections!: IElement[];\n\tprivate _manageSectionsChanges!: IManagePersChanges[];\n\tprivate _controlModel!: JSONModel;\n\tprivate _allLayoutElements!: BaseContainer[];\n\tprivate _isCollapseHandlerAttached: boolean = false;\n\n\tconstructor(id?: string | $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.LAYOUT);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"layout\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://grid\");\n\n\t\t// //setup layout content\n\t\tthis.addAggregation(\"content\", this._getContent());\n\t\tthis.addAggregation(\n\t\t\t\"actionButtons\",\n\t\t\tnew Button({\n\t\t\t\tid: `${this.getId()}-layoutResetBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"resetButton\"),\n\t\t\t\tpress: () => {\n\t\t\t\t\tthis.resetMyhomeSettings();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => void this._loadSections());\n\t\tthis._manageSectionsChanges = [];\n\t}\n\n\t/**\n\t * Method to set visibility of the container sections\n\t * Toggle button pressed event handler\n\t *\n\t * @private\n\t */\n\tprivate async createShowHideChangeFile(oControlEvent: Event): Promise<void> {\n\t\tconst toggle = oControlEvent.getSource<ToggleButton>();\n\t\tconst bValue = !toggle.getPressed();\n\t\tconst oContext = toggle.getBindingContext()?.getObject() as IElement;\n\n\t\toContext.visible = bValue;\n\t\t(this._getPanel() as Layout).getSections().find((section) => section.completeId === oContext.completeId)!.visible = bValue;\n\n\t\tconst sChangeType = bValue ? CHANGE_TYPES.UNHIDE : CHANGE_TYPES.HIDE;\n\t\tconst oWrapperItem = Element.getElementById(oContext.completeId) as BaseContainer;\n\t\t// visibility handling\n\t\t// const layout = this._getPanel() as Layout;\n\t\t// const isPagesAvailable = layout?.getPagesAvailable();\n\t\t// const isCustomNewsVisible = layout?.customNewAvailable();\n\n\t\t//****review this code */\n\t\t// const isPageSection = oContext.sContainerType === \"sap.cux.home.NewsAndPagesContainer\",\n\t\t// bIsPageSectionDisabled = isPageSection && !isPagesAvailable && !isCustomNewsVisible;\n\t\t// if (!bIsPageSectionDisabled) {\n\t\tthis._manageSectionsChanges.push({\n\t\t\tselectorElement: oWrapperItem,\n\t\t\tchangeSpecificData: {\n\t\t\t\tchangeType: sChangeType\n\t\t\t}\n\t\t});\n\t\t// }\n\t\tawait this._saveManageSectionsDialog();\n\t\tsetTimeout(() => oWrapperItem.adjustLayout());\n\n\t\t// switch to collapsed view if the container is in expanded view\n\t\tif (!bValue) {\n\t\t\tthis._switchToCollapsedViewIfRequired([oWrapperItem]);\n\t\t}\n\t}\n\n\t/**\n\t * Switches the layout to collapsed view if the current container is in expanded view\n\t *\n\t * @private\n\t * @param {BaseContainer} container - container instance to check\n\t * @returns {void}\n\t */\n\tprivate _switchToCollapsedViewIfRequired(containers: BaseContainer[]): void {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\n\t\tif (isLayoutExpanded) {\n\t\t\tcontainers.forEach((container) => {\n\t\t\t\tlayout.toggleFullScreen(container._getSelectedPanel());\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Method to load the sections\n\t *\n\t * @private\n\t */\n\tprivate async _loadSections(): Promise<void> {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tawait layout._calculateSectionsState();\n\n\t\tthis._orderedSections = JSON.parse(JSON.stringify(layout.getSections())) as IElement[];\n\t\t// not a good way as there could be more than one insights container, discuss\n\t\tthis._orderedSections.forEach((oSection) => {\n\t\t\tif (oSection.sContainerType === \"sap.cux.home.InsightsContainer\" && !oSection.title) {\n\t\t\t\toSection.title = String(this._i18nBundle?.getText(\"insights\"));\n\t\t\t}\n\t\t});\n\t\tthis._controlModel = new JSONModel(this._orderedSections);\n\t\tthis._layoutTable.setModel(this._controlModel);\n\n\t\tthis._layoutTable.bindItems({\n\t\t\tpath: \"/\",\n\t\t\ttemplate: new ColumnListItem({\n\t\t\t\ttype: \"Inactive\",\n\t\t\t\tcells: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew Icon({\n\t\t\t\t\t\t\t\tsrc: \"sap-icon://vertical-grip\"\n\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\"),\n\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew ObjectIdentifier({\n\t\t\t\t\t\t\t\t\t\ttitle: \"{title}\",\n\t\t\t\t\t\t\t\t\t\ttext: \"{text}\",\n\t\t\t\t\t\t\t\t\t\ttooltip: \"{title}\"\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew ToggleButton({\n\t\t\t\t\t\t\t\t\t\ttooltip:\n\t\t\t\t\t\t\t\t\t\t\t\"{= ${visible} ? '\" +\n\t\t\t\t\t\t\t\t\t\t\tthis._i18nBundle.getText(\"hideBtn\") +\n\t\t\t\t\t\t\t\t\t\t\t\"' : '\" +\n\t\t\t\t\t\t\t\t\t\t\tthis._i18nBundle.getText(\"showBtn\") +\n\t\t\t\t\t\t\t\t\t\t\t\"' }\",\n\t\t\t\t\t\t\t\t\t\ticon: \"sap-icon://show\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\t\t\t\t\tenabled: \"{= !${blocked}}\",\n\t\t\t\t\t\t\t\t\t\tpress: (event: Event) => {\n\t\t\t\t\t\t\t\t\t\t\tvoid this.createShowHideChangeFile(event);\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tpressed: \"{= !${visible}}\",\n\t\t\t\t\t\t\t\t\t\tariaLabelledBy: [\"selectLabel\"]\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"insightsListItem insightsListMargin\")\n\t\t});\n\n\t\t// attach collapse event handler to rearrange layout elements if required\n\t\tif (!this._isCollapseHandlerAttached) {\n\t\t\tlayout.attachEvent(\"onCollapse\", () => this._rearrangeLayoutIfRequired());\n\t\t}\n\t}\n\n\t/**\n\t * Rearranges the layout elements if their order has changed.\n\t *\n\t * @private\n\t */\n\tprivate _rearrangeLayoutIfRequired(): void {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst currentLayoutElements = layout.getItems();\n\n\t\tif (Array.isArray(this._allLayoutElements) && currentLayoutElements.length === this._allLayoutElements.length) {\n\t\t\tconst isOrderChanged = currentLayoutElements.some((element, index) => {\n\t\t\t\treturn element.getId() !== this._allLayoutElements[index].getId();\n\t\t\t});\n\n\t\t\tif (isOrderChanged) {\n\t\t\t\tlayout.removeAllItems();\n\t\t\t\tthis._allLayoutElements.forEach((element) => {\n\t\t\t\t\tlayout.addItem(element);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel content.\n\t */\n\tprivate _getContent(): VBox {\n\t\tconst oHeader = this._setHeaderIntro();\n\t\tconst oTable = this.setLayoutTable();\n\n\t\tconst oContentVBox = new VBox(this.getId() + \"--idNewsPageOuterVBoX\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\trenderType: \"Bare\",\n\t\t\titems: [oHeader, oTable]\n\t\t});\n\t\treturn oContentVBox;\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel Header.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel's Header content.\n\t */\n\tprivate _setHeaderIntro(): VBox {\n\t\tconst oHeaderText = new Text(this.getId() + \"--idCustLayoutText\", {\n\t\t\ttext: this._i18nBundle.getText(\"layoutIntroMsg\")\n\t\t});\n\t\tconst oHeaderVBox = new VBox(this.getId() + \"--idLayoutIntroText\", {\n\t\t\tbackgroundDesign: \"Solid\",\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oHeaderText],\n\t\t\trenderType: \"Bare\"\n\t\t}).addStyleClass(\"sapUiSmallMargin\");\n\t\treturn oHeaderVBox;\n\t}\n\n\t/**\n\t * Returns the content for the Layout Table.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the Layout Settings Panel'sTable.\n\t */\n\tprivate setLayoutTable(): Table {\n\t\tif (!this._layoutTable) {\n\t\t\tthis._layoutTable = new Table(this.getId() + \"--idManageSectionsTable\", {\n\t\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\t\titems: [],\n\n\t\t\t\tcolumns: [\n\t\t\t\t\tnew Column(this.getId() + \"--idSectionTitleColumn\", {\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t],\n\t\t\t\tdragDropConfig: new DragDropInfo(this.getId() + \"--idManageSectionsDragInfo\", {\n\t\t\t\t\tsourceAggregation: \"items\",\n\t\t\t\t\ttargetAggregation: \"items\",\n\t\t\t\t\tgroupName: \"manageSectionsItems\",\n\t\t\t\t\tdropPosition: \"On\",\n\t\t\t\t\tdrop: (event: DropInfo$DropEvent) => {\n\t\t\t\t\t\tvoid this.onDropManageSections(event);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"sapContrastPlus sapUiSmallMarginBeginEnd sapUiTinyMarginBottom\");\n\t\t}\n\n\t\treturn this._layoutTable;\n\t}\n\n\t/**\n\t * Function to save section changes of MyHomeSettingsDialog\n\t *\n\t * @private\n\t */\n\tprivate async _saveManageSectionsDialog(): Promise<void> {\n\t\treturn this._persistUserChanges({\n\t\t\tchanges: this._manageSectionsChanges,\n\t\t\tappComponent: PersonalisationUtils.getOwnerComponent(this._getPanel() as Layout)\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconst tableModel = this._layoutTable.getModel() as JSONModel;\n\t\t\t\ttableModel.refresh();\n\t\t\t\tthis._controlModel.refresh();\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis._manageSectionsChanges = [];\n\t\t\t});\n\t}\n\n\t/**\n\t * Function to persist user changes\n\t *\n\t * @private\n\t */\n\tprivate _persistUserChanges(mProperties: { changes: IManagePersChanges[]; appComponent: Component | undefined }): Promise<void> {\n\t\treturn Lib.load({ name: \"sap.ui.fl\" }).then(function () {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tsap.ui.require(\n\t\t\t\t\t[\"sap/ui/fl/write/api/ControlPersonalizationWriteAPI\"],\n\t\t\t\t\tfunction (ControlPersonalizationWriteAPI: IControlPersonalizationWriteAPI) {\n\t\t\t\t\t\tControlPersonalizationWriteAPI.add({\n\t\t\t\t\t\t\tchanges: mProperties.changes,\n\t\t\t\t\t\t\tignoreVariantManagement: true\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(function (aGeneratedChanges) {\n\t\t\t\t\t\t\t\treturn resolve(\n\t\t\t\t\t\t\t\t\tControlPersonalizationWriteAPI.save({\n\t\t\t\t\t\t\t\t\t\tselector: {\n\t\t\t\t\t\t\t\t\t\t\tappComponent: mProperties.appComponent\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tchanges: aGeneratedChanges\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (oError) {\n\t\t\t\t\t\t\t\tif (oError instanceof Error) {\n\t\t\t\t\t\t\t\t\tLog.error(\"Unable to Save User Change: \" + oError.message);\n\t\t\t\t\t\t\t\t\treturn reject(oError);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the actual index of a layout element by its ID.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the layout element to find.\n\t * @returns {number} The index of the layout element.\n\t */\n\tprivate _getActualIndex(id: string): number {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tthis._allLayoutElements = this._allLayoutElements || [...layout.getItems()];\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\t\tconst expandedElementConfig = layout._getCurrentExpandedElement();\n\n\t\tif (isLayoutExpanded && expandedElementConfig) {\n\t\t\t// add the expanded element if it isn't already in the list\n\t\t\tif (!this._allLayoutElements.some((element) => element.getId() === expandedElementConfig.targetContainer.getId())) {\n\t\t\t\tthis._allLayoutElements.splice(\n\t\t\t\t\tlayout.indexOfItem(expandedElementConfig.targetContainer),\n\t\t\t\t\t0,\n\t\t\t\t\texpandedElementConfig.targetContainer\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this._allLayoutElements.findIndex((element) => element.getId() === id);\n\t}\n\n\t/**\n\t * Rearranges the layout elements by moving an element from the source index to the target index.\n\t *\n\t * @private\n\t * @param {number} sourceIndex - The index of the element to move.\n\t * @param {number} targetIndex - The index to move the element to.\n\t */\n\tprivate _rearrangeLayoutElements(sourceIndex: number, targetIndex: number): void {\n\t\tconst container = this._allLayoutElements.splice(sourceIndex, 1)[0];\n\t\tthis._allLayoutElements.splice(targetIndex, 0, container);\n\t}\n\n\t/**\n\t * Function to execute drag and drop among sections\n\t *\n\t * @private\n\t */\n\tprivate async onDropManageSections(oEvent: DropInfo$DropEvent | IDragEvent): Promise<void> {\n\t\tconst oWrapper = this._getPanel() as Layout;\n\t\tconst wrapperId = oWrapper.getId();\n\t\tconst oDragItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"draggedControl\") ||\n\t\t\t(oEvent as IDragEvent).draggedControl) as ColumnListItem;\n\t\tconst iDragItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDragItem);\n\t\tconst oDropItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"droppedControl\") ||\n\t\t\t(oEvent as IDragEvent).droppedControl) as ColumnListItem;\n\t\tconst iDropItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDropItem);\n\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tconst sectionOrder = this._orderedSections;\n\t\t\tconst dragObject = oDragItem.getBindingContext()?.getObject() as IElement;\n\t\t\tconst dropObject = oDropItem.getBindingContext()?.getObject() as IElement;\n\n\t\t\tconst actualDragItemIndex = this._getActualIndex(dragObject.completeId);\n\t\t\tconst actualDropItemIndex = this._getActualIndex(dropObject.completeId);\n\t\t\tthis._rearrangeLayoutElements(actualDragItemIndex, actualDropItemIndex);\n\n\t\t\tsectionOrder.splice(iDragItemIndex, 1);\n\t\t\tsectionOrder.splice(iDropItemIndex, 0, dragObject);\n\t\t\toWrapper.setSections(sectionOrder);\n\n\t\t\tthis._manageSectionsChanges.push({\n\t\t\t\tselectorElement: oWrapper,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.MOVE,\n\t\t\t\t\tmovedElements: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: dragObject.completeId,\n\t\t\t\t\t\t\tsourceIndex: actualDragItemIndex,\n\t\t\t\t\t\t\ttargetIndex: actualDropItemIndex\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tsource: {\n\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t},\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tawait this._saveManageSectionsDialog();\n\n\t\t\t//switch to collapsed view if any of the containers is in expanded view\n\t\t\tconst draggedContainer = Element.getElementById(dragObject.completeId) as BaseContainer;\n\t\t\tconst droppedContainer = Element.getElementById(dropObject.completeId) as BaseContainer;\n\t\t\tthis._switchToCollapsedViewIfRequired([draggedContainer, droppedContainer]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to reset MyHome settings changes\n\t *\n\t * @private\n\t */\n\tprivate resetMyhomeSettings(): void {\n\t\tMessageBox.show(this._i18nBundle.getText(\"reset_cards_confirmation_msg\") as string, {\n\t\t\tid: \"resetCardsConfirmation\",\n\t\t\ticon: MessageBox.Icon.QUESTION,\n\t\t\ttitle: this._i18nBundle.getText(\"reset_cards_confirmation_title\"),\n\t\t\tactions: [this._i18nBundle.getText(\"reset_cards_button\") as string, MessageBox.Action.CANCEL],\n\t\t\tonClose: async (oAction: string) => {\n\t\t\t\tif (oAction === this._i18nBundle.getText(\"reset_cards_button\")) {\n\t\t\t\t\tconst aChangesForDeletion: (BaseContainer | BaseLayout)[] = [];\n\n\t\t\t\t\tfor (let section of this._orderedSections) {\n\t\t\t\t\t\tconst element = Element.getElementById(section.completeId) as BaseContainer;\n\t\t\t\t\t\taChangesForDeletion.push(element);\n\t\t\t\t\t}\n\t\t\t\t\t// Revert Changes Related to DragnDrop\n\t\t\t\t\taChangesForDeletion.push(this._getPanel() as Layout);\n\t\t\t\t\tawait Lib.load({ name: \"sap.ui.fl\" }).then(() => {\n\t\t\t\t\t\tsap.ui.require(\n\t\t\t\t\t\t\t[\"sap/ui/fl/write/api/ControlPersonalizationWriteAPI\"],\n\t\t\t\t\t\t\t(ControlPersonalizationWriteAPI: IControlPersonalizationWriteAPI) => {\n\t\t\t\t\t\t\t\tvoid ControlPersonalizationWriteAPI.reset({\n\t\t\t\t\t\t\t\t\tselectors: aChangesForDeletion,\n\t\t\t\t\t\t\t\t\tchangeTypes: [CHANGE_TYPES.MOVE, CHANGE_TYPES.UNHIDE, CHANGE_TYPES.HIDE]\n\t\t\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\t\t\tconst layout = this._getPanel() as Layout;\n\t\t\t\t\t\t\t\t\tlayout.resetSections();\n\t\t\t\t\t\t\t\t\tlayout.closeSettingsDialog();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]}