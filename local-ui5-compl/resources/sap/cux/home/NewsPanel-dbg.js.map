{"version":3,"file":"NewsPanel-dbg.js","names":["sap","ui","define","Log","SlideTile","EventBus","DateFormat","XMLModel","Container","__BaseNewsPanel","__MenuItem","__NewsGroup","__NewsItem","___library","___utils_FESRUtil","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","BaseNewsPanel","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_for","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","MenuItem","_catch","recover","NewsGroup","NewsItem","NewsType","addFESRId","PersonalisationUtils","UshellPersonalizer","BASE_URL","NEWS_FEED_READ_API","NEWS_FEED_TRANSLATION_API","NEWS_FEED_COUNT_URL","DEFAULT_FEED_COUNT","fnImagePlaceholder","sPath","N","Array","from","length","i","CUSTOM_NEWS_FEED","TITLE","LINK","VALIDITY","PREPARATION_REQUIRED","EXCLUDE_FIELDS","IMAGE_URL","FESR_STEP_NAME","EMPTY_DATA_ERROR_CODE","CUSTOM_IMAGES","Finance","Manufacturing","Sales","NewsPanel","extend","metadata","library","properties","url","type","group","defaultValue","visibility","RSS","customFeedKey","customFileName","showCustom","newsAvailable","aggregations","newsGroup","singularName","multiple","constructor","_constructor","id","settings","BaseNewsPanel.prototype.constructor.call","init","_init","BaseNewsPanel.prototype.init.call","oNewsTile","getId","displayTime","width","height","addStyleClass","getNewsWrapper","addContent","setProperty","_i18nBundle","getText","_eventBus","getInstance","menuItem","title","icon","press","handleEditNews","addAggregation","getData","_getData","sUrl","getUrl","_temp2","getProperty","Promise","resolve","initializeXmlModel","_this$initializeXmlMo","oNewsModel","setModel","_temp","bNewsLoad","getPersContainerId","getOwnerComponent","_UshellPersonalizer$g","oPersonalizer","read","_this$oPersonalizer$r","oPersData","sCustomNewsFeedKey","getCustomFeedKey","setCustomNewsFeed","handleFeedError","_getCustomFeedKey","oAdaptationData","customNewsFeedKey","_getUrl","_initializeXmlModel","_this2","oParent","getParent","setDefaultBindingMode","attachRequestCompleted","oEvent","panelLoadedFn","loaded","count","oDocument","getSource","loadNewsFeed","publish","showError","date","Date","attachRequestFailed","_loadNewsFeed","noOfFeeds","_this3","_temp4","querySelector","oBindingInfo","path","bindNewsTile","_temp3","extractAllImageUrls","_handleFeedError","generateErrorMessage","setVisible","setURL","_setURL","_this4","_bindNewsTile","oSlideTile","bindAggregation","templateShareable","factory","sId","oContext","newsInfo","getObject","oTile","getElementsByTagName","textContent","subTitle","imageUrl","footer","formatDate","getTile","_extractAllImageUrls","_this5","_temp5","oItemElement","extractImage","oImageUrl","createElement","appendChild","_formatDate","oPublished","toRelativeDateTime","getFavNewsFeed","_getFavNewsFeed","aFavNewsFeed","_extractImage","sHrefLink","fnLoadPlaceholderImage","sPrefix","require","toUrl","image","fetch","res","text","sHTML","aMatches","match","isArray","catch","_toRelativeDateTime","oDate","oRelativeDateFormatter","getDateTimeInstance","style","relative","relativeStyle","format","_setCustomNewsFeed","sFeedId","_this6","_this6$oPersonalizer$","favNewsFeed","items","all","getCustomNewsFeedCount","getCustomNewsFeed","showAllPreparationRequired","_ref","iFeedCount","aFeeds","Error","filter","oNewsFeed","includes","loadCustomNewsFeed","err","error","_getCustomNewsFeedCount","_this7","_temp8","_fetch","_temp6","json","_temp7","_await$fetch$json","pCustomNewsFeedCount","encodeURI","undefined","_getCustomNewsFeed","_this8","getNewsFeedDetailsUrl","changeId","pCustomNewsFeed","getAuthNewsFeed","oResponse","oFeedDict","forEach","oFeed","push","getCustomFeedImage","_getNewsFeedDetailsUrl","oNews","_getAuthNewsFeed","sNewsUrl","_this9","getAllAvailableApps","getNewsFeedDetails","_ref2","aAvailableApps","aNewsFeed","arrangeNewsFeeds","_arrangeNewsFeeds","aAuthNewsFeed","Category","ImpactedArtifacts","aImpactedArtifacts","split","impactedArtifact","oImpactedArtifact","isAuthFeed","_isAuthFeed","fioriIdSplitter","aTokens","sFioriId","trim","index","findIndex","oApp","signature","parameters","_getAllAvailableApps","getServiceAsync","oService","_oAdapter","_aInbounds","message","_getNewsFeedDetails","_this10","_temp11","_fetch2","_temp9","_temp10","_await$fetch$json2","pNewsFeed","fnFormattedLabel","sLabel","replace","getTranslatedText","_ref3","newsResponse","translationResponse","aNews","JSON","parse","stringify","aTranslation","map","aFields","Object","keys","aExpandFields","oField","oTranslatedField","find","oTranslation","ColumnName","toUpperCase","oTranslatedFieldName","TranslatedName","label","Link","expanded","expandFields","_getTranslatedText","_this11","_temp14","_fetch3","_temp12","_temp13","_await$fetch$json3","_loadCustomNewsFeed","feeds","oXMLResponse","parseJsonToXml","setData","_parseJsonToXml","_transformJsonForXml","aData","data","item","_jsonToXml","xml","key","transformedJson","rootToken","replaceAll","parser","DOMParser","parseFromString","_getCustomFeedImage","sFileName","sFileBasePath","sFilePath","files","randomIndex","randomArray","window","Uint32Array","crypto","getRandomValues"],"sources":["NewsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport SlideTile from \"sap/m/SlideTile\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport XMLModel from \"sap/ui/model/xml/XMLModel\";\nimport Container from \"sap/ushell/Container\";\nimport BaseNewsPanel, { $BaseNewsPanelSettings } from \"./BaseNewsPanel\";\nimport MenuItem from \"./MenuItem\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsGroup from \"./NewsGroup\";\nimport NewsItem from \"./NewsItem\";\nimport { NewsType } from \"./library\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\ninterface IBindingInfo {\n\tpath: string;\n\tlength: number;\n}\n\ninterface INewsResponse {\n\tvalue: ICustomNewsFeed[];\n}\n\ninterface INewsFeedPromise {\n\t[key: string]: Promise<INewsResponse | ICustomNewsFeed[]>;\n}\n\nexport interface ICustomNewsFeed {\n\t[key: string]: string | boolean | INewsLink | number | INewsLink[] | INewsParam;\n}\n\nexport interface INewsItem {\n\tchangeId: string;\n\ttitle?: string;\n\tshowAllPreparationRequired?: boolean;\n}\n\ninterface ITranslatedText {\n\tColumnName?: string;\n\tTranslatedName?: string;\n}\n\ninterface IAppConfiguration {\n\t_oAdapter: {\n\t\t_aInbounds: IAvailableApp[];\n\t};\n}\n\ninterface IAvailableApp {\n\tsemanticObject?: string;\n\taction?: string;\n\tid?: string;\n\ttitle?: string;\n\tpermanentKey?: string;\n\tcontentProviderId?: string;\n\tresolutionResult?: {\n\t\t[key: string]: string;\n\t};\n\tdeviceTypes?: {\n\t\t[key: string]: boolean;\n\t};\n\tsignature: {\n\t\tparameters: {\n\t\t\t[key: string]: IAppParameter;\n\t\t};\n\t\tadditionalParameters?: string;\n\t};\n}\n\ninterface IAppParameter {\n\tdefaultValue?: {\n\t\tvalue: string;\n\t\tformat: string;\n\t};\n\trequired: boolean;\n}\n\nexport interface INewsLink {\n\t[key: string]: string;\n}\n\nexport interface INewsParam {\n\t[key: string]: { [key: string]: string };\n}\n\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\",\n\tNEWS_FEED_READ_API = BASE_URL + \"insights_read_srv/0001/\" + \"NEWS_FEED\",\n\tNEWS_FEED_TRANSLATION_API = BASE_URL + \"insights_read_srv/0001/\" + \"NewsFeedColumnTranslation\",\n\tNEWS_FEED_COUNT_URL = NEWS_FEED_READ_API + \"/$count\",\n\tDEFAULT_FEED_COUNT = 7,\n\tfnImagePlaceholder = function (sPath: string, N: number) {\n\t\treturn Array.from({ length: N }, function (v, i) {\n\t\t\treturn sPath + \"/\" + (i + 1) + \".jpg\";\n\t\t});\n\t};\n\nconst CUSTOM_NEWS_FEED = {\n\t\tTITLE: \"LineOfBusiness\",\n\t\tLINK: \"WhatsNewDocument\",\n\t\tVALIDITY: \"ValidAsOf\",\n\t\tPREPARATION_REQUIRED: \"PreparationRequired\",\n\t\tEXCLUDE_FIELDS: [\n\t\t\t\"ChangeId\",\n\t\t\t\"LineNumber\",\n\t\t\t\"LineOfBusiness\",\n\t\t\t\"SolutionArea\",\n\t\t\t\"Title\",\n\t\t\t\"Description\",\n\t\t\t\"Type\",\n\t\t\t\"ValidAsOf\",\n\t\t\t\"WhatsNewDocument\",\n\t\t\t\"Link\"\n\t\t],\n\t\tIMAGE_URL: \"sap/cux/home/img/CustomNewsFeed/\",\n\t\tFESR_STEP_NAME: \"custNewsSlide-press\",\n\t\tEMPTY_DATA_ERROR_CODE: \"NODATA\"\n\t},\n\tCUSTOM_IMAGES: { [key: string]: string[] } = {\n\t\t\"Application Platform and Infrastructure\": fnImagePlaceholder(\"ApplicationPlatformandInfrastructure\", 3),\n\t\t\"Asset Management\": fnImagePlaceholder(\"AssetManagement\", 3),\n\t\t\"Cross Applications\": fnImagePlaceholder(\"CrossApplications\", 3),\n\t\tFinance: fnImagePlaceholder(\"Finance\", 3),\n\t\tManufacturing: fnImagePlaceholder(\"Manufacturing\", 3),\n\t\t\"R&D / Engineering\": fnImagePlaceholder(\"RnDandEngineering\", 3),\n\t\tSales: fnImagePlaceholder(\"Sales\", 3),\n\t\t\"Sourcing and Procurement\": fnImagePlaceholder(\"SourcingandProcurement\", 3),\n\t\t\"Supply Chain\": fnImagePlaceholder(\"SupplyChain\", 3),\n\t\tdefault: [\"default.jpg\"]\n\t};\n\n/**\n *\n * Panel class for managing and storing News.\n *\n * @extends sap.cux.home.BaseNewsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.NewsPanel\n */\nexport default class NewsPanel extends BaseNewsPanel {\n\tprivate oNewsTile!: SlideTile;\n\tprivate oNewsModel!: XMLModel;\n\tprivate image!: number;\n\tprivate pCustomNewsFeed!: INewsFeedPromise;\n\tprivate pCustomNewsFeedCount!: { [key: string]: Promise<number> };\n\tprivate pNewsFeed!: INewsFeedPromise;\n\tprivate bNewsLoad!: boolean;\n\tprivate oPersonalizer!: UshellPersonalizer;\n\tprivate oPersData!: IPersonalizationData;\n\tprivate aFavNewsFeed!: { items: string[]; showAllPreparationRequired: boolean };\n\tprivate _eventBus!: EventBus;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The URL of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Type of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttype: {\n\t\t\t\ttype: \"sap.cux.home.NewsType\",\n\t\t\t\tgroup: \"Misc\",\n\t\t\t\tvisibility: \"public\",\n\t\t\t\tdefaultValue: NewsType.RSS\n\t\t\t},\n\t\t\t/**\n\t\t\t * The key of custom news feed.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcustomFeedKey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * The filename of custom news feed.\n\t\t\t *\n\t\t\t */\n\t\t\tcustomFileName: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * The flag for custom news feed is checked or not.\n\t\t\t */\n\t\t\tshowCustom: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\t\t\t/**\n\t\t\t * The flag to determine rss feed will load or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tnewsAvailable: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * newsGroup aggregation for News\n\t\t\t */\n\t\t\tnewsGroup: { type: \"sap.cux.home.NewsGroup\", singularName: \"newsGroup\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tconstructor(idOrSettings?: string | $BaseNewsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseNewsPanelSettings);\n\t/**\n\t * Constructor for a new News Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseNewsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.oNewsTile = new SlideTile(this.getId() + \"--idNewsSlide\", {\n\t\t\tdisplayTime: 20000,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"17rem\"\n\t\t}).addStyleClass(\"newsTileMaxWidth sapUiSmallMarginTop sapUiSmallMarginBottom\");\n\n\t\tthis.getNewsWrapper().addContent(this.oNewsTile);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"newsTitle\"));\n\t\tthis._eventBus = EventBus.getInstance();\n\n\t\tconst menuItem = new MenuItem(`${this.getId()}-manageNews`, {\n\t\t\ttitle: this._i18nBundle.getText(\"mngNews\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: this.handleEditNews.bind(this)\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", menuItem);\n\t\taddFESRId(menuItem, \"manageNews\");\n\t}\n\n\t/**\n\t * Retrieves news data asynchronously.\n\t * If the news model is not initialized, it initializes the XML model and loads news feed data.\n\t * @returns {Promise} A promise that resolves when the news data is retrieved.\n\t */\n\n\tpublic async getData() {\n\t\tconst sUrl: string = this.getUrl();\n\t\tif (sUrl && !this.getProperty(\"showCustom\")) {\n\t\t\tthis.oNewsModel = await this.initializeXmlModel(sUrl);\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t} else if (this.getProperty(\"showCustom\")) {\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oPersonalizer = await UshellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t\t);\n\t\t\tthis.oPersData = await this.oPersonalizer.read();\n\t\t\tconst sCustomNewsFeedKey = this.getCustomFeedKey();\n\t\t\tif (sCustomNewsFeedKey) {\n\t\t\t\tvoid this.setCustomNewsFeed(sCustomNewsFeedKey);\n\t\t\t} else {\n\t\t\t\tthis.handleFeedError();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the custom news feed key property of NewsPanel\n\t * @returns {string} custom news feed key\n\t */\n\tpublic getCustomFeedKey(): string {\n\t\tconst sCustomNewsFeedKey = this.getProperty(\"customFeedKey\") as string;\n\t\tif (sCustomNewsFeedKey) {\n\t\t\treturn sCustomNewsFeedKey;\n\t\t} else {\n\t\t\treturn this.oPersData?.oAdaptationData?.customNewsFeedKey as string;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Url property of NewsPanel\n\t * @returns {any}\n\t */\n\tpublic getUrl(): string {\n\t\treturn this.getProperty(\"url\") as string;\n\t}\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t */\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t * @param {string} sUrl rss url to load the news feed\n\t * @returns {Promise<XMLModel>} XML Document containing the news feeds\n\t */\n\tprivate async initializeXmlModel(sUrl: string): Promise<XMLModel> {\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\treturn new Promise((resolve) => {\n\t\t\tconst oNewsModel = new XMLModel(sUrl);\n\t\t\toNewsModel.setDefaultBindingMode(\"OneWay\");\n\t\t\toNewsModel.attachRequestCompleted((oEvent: Event) => {\n\t\t\t\tvoid (async () => {\n\t\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst oDocument = oEvent.getSource<XMLModel>().getData() as XMLDocument;\n\t\t\t\t\tawait this.loadNewsFeed(oDocument, 0);\n\t\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: false, date: new Date() });\n\t\t\t\t\tresolve(oNewsModel);\n\t\t\t\t})();\n\t\t\t});\n\t\t\toNewsModel.attachRequestFailed(() => {\n\t\t\t\tthis.handleFeedError();\n\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: false, count: 0 });\n\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t}\n\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: true, date: new Date() });\n\t\t\t\tresolve(oNewsModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Loads the news feed based on the provided document and number of feeds.\n\t * Determines the feed type (RSS, feed, custom) and binds the news tile accordingly.\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async loadNewsFeed(oDocument: Document, noOfFeeds: number) {\n\t\tlet oBindingInfo: IBindingInfo;\n\t\tif (!oDocument?.querySelector(\"customFeed\")) {\n\t\t\tawait this.extractAllImageUrls(oDocument, noOfFeeds || DEFAULT_FEED_COUNT);\n\t\t}\n\n\t\tif (!!oDocument?.querySelector(\"rss\") && !!oDocument?.querySelector(\"item\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/channel/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (!!oDocument?.querySelector(\"feed\") && !!oDocument?.querySelector(\"entry\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/entry/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (!!oDocument?.querySelector(\"customFeed\") && !!oDocument?.querySelector(\"item\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t\treturn;\n\t\t}\n\t\tthis.bindNewsTile(this.oNewsTile, oBindingInfo);\n\t}\n\n\t/**\n\t * Handles errors that occur during the loading of the news feed.\n\t * @returns {void}\n\t */\n\tpublic handleFeedError(): void {\n\t\tif (this.getProperty(\"showCustom\")) {\n\t\t\tthis.generateErrorMessage().setVisible(true);\n\t\t\tthis.oNewsTile.setVisible(false);\n\t\t} else {\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(false);\n\t\t\tthis.setProperty(\"newsAvailable\", false);\n\t\t}\n\t}\n\n\tpublic async setURL(url: string) {\n\t\tthis.setProperty(\"showCustom\", false);\n\t\tthis.setProperty(\"newsAvailable\", true);\n\t\tthis.generateErrorMessage().setVisible(false);\n\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(true);\n\t\tthis.oNewsTile.setVisible(true);\n\t\tthis.setProperty(\"url\", url);\n\t\tawait this.getData();\n\t}\n\n\t/**\n\t * Binds the news tile with the provided binding information.\n\t * @param {sap.m.SlideTile} oSlideTile - The SlideTile control to be bound.\n\t * @param {IBindingInfo} oBindingInfo - The binding information containing the path and length of the aggregation.\n\t */\n\tprivate bindNewsTile(oSlideTile: SlideTile, oBindingInfo: IBindingInfo): void {\n\t\tif (oBindingInfo) {\n\t\t\toSlideTile.bindAggregation(\"tiles\", {\n\t\t\t\tpath: oBindingInfo.path,\n\t\t\t\tlength: oBindingInfo.length,\n\t\t\t\ttemplateShareable: false,\n\t\t\t\tfactory: (sId: string, oContext: Context) => {\n\t\t\t\t\tconst newsInfo = oContext.getObject() as XMLDocument;\n\t\t\t\t\tlet oTile;\n\t\t\t\t\tif (newsInfo.getElementsByTagName(\"link\").length > 0) {\n\t\t\t\t\t\toTile = new NewsItem(\"\", {\n\t\t\t\t\t\t\turl: newsInfo.getElementsByTagName(\"link\")[0].textContent as string,\n\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\tsubTitle: newsInfo.getElementsByTagName(\"description\")[0].textContent as string,\n\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")[0].textContent as string,\n\t\t\t\t\t\t\tfooter: this.formatDate(newsInfo.getElementsByTagName(\"pubDate\")[0].textContent as string)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\toTile = new NewsGroup(\"\", {\n\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\tsubTitle: this._i18nBundle.getText(\"newsFeedDescription\") as string,\n\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")[0].textContent as string,\n\t\t\t\t\t\t\tfooter: newsInfo.getElementsByTagName(\"footer\")[0].textContent as string\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.addAggregation(\"newsItems\", oTile, true);\n\t\t\t\t\treturn oTile.getTile();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Extracts images for all the news tiles\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async extractAllImageUrls(oDocument: Document, noOfFeeds: number) {\n\t\tfor (let i = 0; i < noOfFeeds; i++) {\n\t\t\tconst oItemElement = oDocument?.getElementsByTagName(\"item\")[i];\n\t\t\tconst sUrl: string = await this.extractImage(oItemElement.getElementsByTagName(\"link\")[0].textContent as string);\n\t\t\tconst oImageUrl = oDocument.createElement(\"imageUrl\");\n\t\t\toImageUrl.textContent = sUrl;\n\t\t\toItemElement.appendChild(oImageUrl);\n\t\t}\n\t}\n\n\t/**\n\t * Formats the publication date or the update date to a relative date-time format.\n\t * @param {string} oPublished - The publication date.\n\t * @returns {string} The formatted relative date-time string.\n\t */\n\tprivate formatDate(oPublished: string): string {\n\t\treturn this.toRelativeDateTime(new Date(oPublished));\n\t}\n\n\t/**\n\t * Returns the favourite news feed for the custom news\n\t * @returns {any}\n\t */\n\tpublic getFavNewsFeed() {\n\t\treturn this.aFavNewsFeed;\n\t}\n\n\t/**\n\t * Extracts the image URL from the provided HREF link or link.\n\t * @param {string} sHrefLink - The HREF link containing the image URL.\n\t * @returns {Promise} A promise that resolves to the extracted image URL.\n\t */\n\tprivate extractImage(sHrefLink: string): Promise<string> {\n\t\tconst fnLoadPlaceholderImage = () => {\n\t\t\tconst sPrefix = sap.ui.require.toUrl(\"sap.cux.home/src/sap/cux/home/utils/\");\n\t\t\tthis.image = this.image ? this.image + 1 : 1;\n\t\t\tthis.image = this.image < 9 ? this.image : 1;\n\t\t\treturn `${sPrefix}/imgNews/${this.image}.jpg`;\n\t\t};\n\n\t\treturn fetch(sHrefLink)\n\t\t\t.then((res) => res.text())\n\t\t\t.then((sHTML) => {\n\t\t\t\tconst aMatches = sHTML.match(/<meta[^>]*property=[\"']og:image[\"'][^>]*content=[\"']([^\"']+)[\"'][^>]*>/i);\n\t\t\t\treturn Array.isArray(aMatches) && aMatches[1] ? aMatches[1] : fnLoadPlaceholderImage();\n\t\t\t})\n\t\t\t.catch(fnLoadPlaceholderImage);\n\t}\n\n\t/**\n\t * Converts the given date to a relative date-time format.\n\t * @param {Date} oDate - The date to be converted.\n\t * @returns {string} The date in relative date-time format.\n\t */\n\tprivate toRelativeDateTime(oDate: Date): string {\n\t\tconst oRelativeDateFormatter = DateFormat.getDateTimeInstance({\n\t\t\tstyle: \"medium\",\n\t\t\trelative: true,\n\t\t\trelativeStyle: \"short\"\n\t\t});\n\t\treturn oRelativeDateFormatter.format(new Date(oDate));\n\t}\n\n\t/**\n\t * This method retrieves the count and feeds of the custom news feed asynchronously.\n\t * If the count is not zero, it loads the custom news feed data and returns the feeds.\n\t * @param {string} sFeedId - The ID of the custom news feed to set.\n\t * @returns {Promise} A promise that resolves to an array of news feeds.\n\t */\n\tpublic async setCustomNewsFeed(sFeedId: string): Promise<void> {\n\t\ttry {\n\t\t\tthis.oNewsTile.setVisible(true);\n\t\t\tthis.generateErrorMessage().setVisible(false);\n\t\t\tthis.oPersData = await this.oPersonalizer?.read();\n\t\t\tthis.aFavNewsFeed = (this.oPersData?.favNewsFeed as { items: string[]; showAllPreparationRequired: boolean }) || { items: [] };\n\t\t\tlet [iFeedCount, aFeeds] = await Promise.all([\n\t\t\t\tthis.getCustomNewsFeedCount(sFeedId),\n\t\t\t\tthis.getCustomNewsFeed(sFeedId, this.aFavNewsFeed.showAllPreparationRequired)\n\t\t\t]);\n\t\t\tif (aFeeds.length === 0 || iFeedCount === 0) {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t\t//filer selected feeds from all news feed\n\t\t\tif (this.aFavNewsFeed?.items?.length) {\n\t\t\t\taFeeds = aFeeds.filter((oNewsFeed) => {\n\t\t\t\t\treturn this.aFavNewsFeed?.items.includes(oNewsFeed.title as string);\n\t\t\t\t});\n\t\t\t} else if (this.aFavNewsFeed?.items?.length === 0) {\n\t\t\t\tthrow new Error(\"Error: No news feed available\");\n\t\t\t}\n\t\t\tthis.loadCustomNewsFeed(aFeeds);\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthis.handleFeedError();\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the count of custom news feed items identified by the provided feed ID.\n\t * @param {string} sFeedId - The ID of the custom news feed.\n\t * @returns {Promise} A Promise that resolves to the count of custom news feed items.\n\t */\n\tpublic async getCustomNewsFeedCount(sFeedId: string): Promise<number> {\n\t\tlet sUrl = encodeURI(NEWS_FEED_COUNT_URL + \"?$filter=ChangeId\" + \" eq \" + \"'\" + sFeedId + \"'\");\n\t\tthis.pCustomNewsFeedCount = this.pCustomNewsFeedCount ? this.pCustomNewsFeedCount : {};\n\t\tthis.pCustomNewsFeedCount[sUrl] =\n\t\t\tthis.pCustomNewsFeedCount[sUrl] !== undefined\n\t\t\t\t? this.pCustomNewsFeedCount[sUrl]\n\t\t\t\t: ((await (await fetch(sUrl)).json()) as Promise<number>);\n\t\treturn this.pCustomNewsFeedCount[sUrl];\n\t}\n\n\t/**\n\t * Retrieves custom news feed items identified by the provided feed ID and settings.\n\t * It processes the response data and returns an array of custom news feed items.\n\t * @param {string} sFeedId - The ID of the custom news feed.\n\t * @param {boolean} showAllPreparationRequired - Indicates whether to show all preparation required.\n\t * @returns {Promise} A Promise that resolves to an array of custom news feed items.\n\t */\n\tpublic async getCustomNewsFeed(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\ttry {\n\t\t\tconst sUrl = this.getNewsFeedDetailsUrl({ changeId: sFeedId, showAllPreparationRequired: showAllPreparationRequired });\n\t\t\tthis.pCustomNewsFeed = this.pCustomNewsFeed ? this.pCustomNewsFeed : {};\n\t\t\tthis.pCustomNewsFeed[sUrl] =\n\t\t\t\tthis.pCustomNewsFeed[sUrl] !== undefined\n\t\t\t\t\t? this.pCustomNewsFeed[sUrl]\n\t\t\t\t\t: (this.getAuthNewsFeed(sUrl) as Promise<ICustomNewsFeed[]>);\n\t\t\tconst oResponse = await this.pCustomNewsFeed[sUrl];\n\t\t\tconst oFeedDict: { [key: string]: string } = {};\n\t\t\tconst aFeeds: ICustomNewsFeed[] = [];\n\t\t\tif ((oResponse as ICustomNewsFeed[])?.length > 0) {\n\t\t\t\t(oResponse as ICustomNewsFeed[]).forEach((oFeed: ICustomNewsFeed) => {\n\t\t\t\t\tconst title = oFeed[CUSTOM_NEWS_FEED.TITLE] as INewsLink;\n\t\t\t\t\tif (!oFeedDict[title.value]) {\n\t\t\t\t\t\taFeeds.push({\n\t\t\t\t\t\t\ttitle: title.value,\n\t\t\t\t\t\t\tfooter: (oFeed[CUSTOM_NEWS_FEED.VALIDITY] as INewsLink).value,\n\t\t\t\t\t\t\timageUrl: this.getCustomFeedImage(title.value)\n\t\t\t\t\t\t});\n\t\t\t\t\t\toFeedDict[title.value] = title.value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn aFeeds;\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthrow new Error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the URL for retrieving news feed details based on the provided news object.\n\t * The generated URL limits the number of results to 999.\n\t * @param {INewsItem} oNews - The news object containing properties such as changeId, title, and showAllPreparationRequired.\n\t * @returns {string} The URL for retrieving news feed details.\n\t */\n\tpublic getNewsFeedDetailsUrl(oNews: INewsItem) {\n\t\tlet sUrl = NEWS_FEED_READ_API + \"?$filter=ChangeId eq \" + \"'\" + oNews.changeId + \"'\";\n\t\tsUrl = oNews.title ? sUrl + \" and LineOfBusiness eq \" + \"'\" + encodeURI(oNews.title) + \"'\" : sUrl;\n\t\tsUrl = oNews.showAllPreparationRequired ? sUrl + \" and PreparationRequired eq true\" : sUrl;\n\t\treturn sUrl + \"&$top=999\";\n\t}\n\n\t/**\n\t * Retrieves the news feed from the specified URL after applying authorization filtering based on the available apps.\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {string} sNewsUrl - The URL of the news feed.\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tpublic async getAuthNewsFeed(sNewsUrl: string) {\n\t\ttry {\n\t\t\tconst [aAvailableApps, aNewsFeed] = await Promise.all([this.getAllAvailableApps(), this.getNewsFeedDetails(sNewsUrl)]);\n\t\t\tif (aAvailableApps.length === 0) {\n\t\t\t\treturn aNewsFeed;\n\t\t\t}\n\t\t\treturn this.arrangeNewsFeeds(aNewsFeed, aAvailableApps);\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {ICustomNewsFeed[]} aNewsFeed - array of news feed\n\t * @param {IAvailableApp[]} aAvailableApps - array of all availabel apps\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tprivate arrangeNewsFeeds(aNewsFeed: ICustomNewsFeed[], aAvailableApps: IAvailableApp[]) {\n\t\tconst aAuthNewsFeed: ICustomNewsFeed[] = [];\n\n\t\taNewsFeed.forEach((oNewsFeed: ICustomNewsFeed) => {\n\t\t\tif ((oNewsFeed.Category as INewsLink).value !== \"App\" || !(oNewsFeed.ImpactedArtifacts as INewsLink).value) {\n\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t} else {\n\t\t\t\tconst aImpactedArtifacts: string[] = (oNewsFeed.ImpactedArtifacts as INewsLink).value.split(\"\\n\");\n\t\t\t\tfor (let impactedArtifact of aImpactedArtifacts) {\n\t\t\t\t\tconst oImpactedArtifact = impactedArtifact;\n\t\t\t\t\tif (oImpactedArtifact && this.isAuthFeed(aAvailableApps, impactedArtifact)) {\n\t\t\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn aAuthNewsFeed;\n\t}\n\n\t/**\n\t * takes all available apps list and the impacted atifact from the news and returns if it's valid\n\t * @param {IAvailableApp[]} aAvailableApps - Array of all available apps\n\t * @param {string} oImpactedArtifact - impacted artifact form the news\n\t * @returns {boolean} checks if the news is authenticated with the available apps list\n\t */\n\tprivate isAuthFeed(aAvailableApps: IAvailableApp[], oImpactedArtifact: string) {\n\t\tconst fioriIdSplitter = \"|\";\n\t\tif (oImpactedArtifact.includes(fioriIdSplitter)) {\n\t\t\tconst aTokens = oImpactedArtifact.split(fioriIdSplitter);\n\t\t\tconst sFioriId = (aTokens[aTokens.length - 1] || \"\").trim();\n\t\t\tif (sFioriId) {\n\t\t\t\tconst index = aAvailableApps.findIndex((oApp: IAvailableApp) => {\n\t\t\t\t\treturn sFioriId === oApp?.signature?.parameters[\"sap-fiori-id\"]?.defaultValue?.value;\n\t\t\t\t});\n\t\t\t\treturn index > -1;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Retrieves all available apps from the ClientSideTargetResolution service for authorization filtering.\n\t * @returns {Array} An array of available apps.\n\t */\n\tprivate async getAllAvailableApps(): Promise<IAvailableApp[]> {\n\t\ttry {\n\t\t\tconst oService = await Container.getServiceAsync<IAppConfiguration>(\"ClientSideTargetResolution\");\n\t\t\treturn oService?._oAdapter._aInbounds || [];\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the news feed details from the specified URL, including translation and formatting of field labels.\n\t * @param {string} sUrl - The URL of the news feed details.\n\t * @returns {Array} The array of news feed items with translated and formatted field labels.\n\t */\n\tprivate async getNewsFeedDetails(sUrl: string): Promise<ICustomNewsFeed[]> {\n\t\tthis.pNewsFeed = this.pNewsFeed ? this.pNewsFeed : {};\n\t\tthis.pNewsFeed[sUrl] =\n\t\t\tthis.pNewsFeed[sUrl] !== undefined\n\t\t\t\t? this.pNewsFeed[sUrl]\n\t\t\t\t: ((await (await fetch(sUrl)).json()) as Promise<{ value: ICustomNewsFeed[] }>);\n\t\tconst fnFormattedLabel = (sLabel: string) => sLabel.replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\n\t\tconst [newsResponse, translationResponse] = await Promise.all([\n\t\t\tthis.pNewsFeed[sUrl],\n\t\t\tthis.getTranslatedText(this.getCustomFeedKey())\n\t\t]);\n\t\tconst aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify((newsResponse as INewsResponse).value || [])) as ICustomNewsFeed[];\n\t\tconst aTranslation = JSON.parse(JSON.stringify((translationResponse as INewsResponse).value || [])) as ITranslatedText[];\n\t\treturn aNews.map((oNews: ICustomNewsFeed) => {\n\t\t\tconst aFields = Object.keys(oNews);\n\t\t\tconst aExpandFields: INewsLink[] = [];\n\t\t\taFields.forEach((oField) => {\n\t\t\t\tconst oTranslatedField = aTranslation.find(\n\t\t\t\t\t(oTranslation: ITranslatedText) => oTranslation?.ColumnName?.toUpperCase() === oField.toUpperCase()\n\t\t\t\t);\n\t\t\t\tconst oTranslatedFieldName = (oTranslatedField?.TranslatedName as string) || fnFormattedLabel(oField);\n\t\t\t\toNews[oField] = { label: oTranslatedFieldName, value: oNews[oField] as string } as INewsLink;\n\t\t\t\tif (!CUSTOM_NEWS_FEED.EXCLUDE_FIELDS.includes(oField)) {\n\t\t\t\t\taExpandFields.push(oNews[oField]);\n\t\t\t\t}\n\t\t\t});\n\t\t\toNews.Link = {\n\t\t\t\tlabel: this._i18nBundle.getText(\"readMoreLink\") as string,\n\t\t\t\tvalue: oNews[CUSTOM_NEWS_FEED.LINK] as string,\n\t\t\t\ttext: \"Link\"\n\t\t\t};\n\t\t\toNews.expanded = aNews.length === 1;\n\t\t\toNews.expandFields = aExpandFields;\n\t\t\treturn oNews;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves translated text for news feed fields based on the specified feed ID.\n\t * @param {string} sFeedId - The ID of the custom news feed\n\t * @returns {Promise} A promise resolving to the translated text for news feed fields.\n\t */\n\tprivate async getTranslatedText(sFeedId: string) {\n\t\ttry {\n\t\t\tconst sUrl = NEWS_FEED_TRANSLATION_API + \"?$filter=Changeid eq '\" + sFeedId + \"'\";\n\t\t\tthis.pCustomNewsFeed = this.pCustomNewsFeed ? this.pCustomNewsFeed : {};\n\t\t\tthis.pCustomNewsFeed[sUrl] =\n\t\t\t\tthis.pCustomNewsFeed[sUrl] !== undefined\n\t\t\t\t\t? this.pCustomNewsFeed[sUrl]\n\t\t\t\t\t: ((await (await fetch(sUrl)).json()) as Promise<ICustomNewsFeed[]>);\n\t\t\treturn this.pCustomNewsFeed[sUrl];\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Loads custom news feed into the news panel after parsing JSON feed data to XML format.\n\t * @param {Array} feeds - The array of custom news feed items.\n\t */\n\tprivate loadCustomNewsFeed(feeds: ICustomNewsFeed[]) {\n\t\tconst oXMLResponse = this.parseJsonToXml(JSON.parse(JSON.stringify(feeds)) as JSON[]);\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\tif (!this.oNewsModel) {\n\t\t\tthis.oNewsModel = new XMLModel(oXMLResponse);\n\t\t\tif (!this.bNewsLoad) {\n\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\tthis.bNewsLoad = true;\n\t\t\t}\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t} else {\n\t\t\tthis.oNewsModel.setData(oXMLResponse);\n\t\t}\n\t\tvoid this.loadNewsFeed(oXMLResponse, feeds.length);\n\t}\n\n\t/**\n\t * Parses JSON data into XML format.\n\t * @param {JSON[]} json - The JSON data to be parsed into XML.\n\t * @returns {XMLDocument} The XML document representing the parsed JSON data.\n\t */\n\tprivate parseJsonToXml(json: JSON[]): XMLDocument {\n\t\tconst _transformJsonForXml = (aData: JSON[]) => aData.map((data: JSON) => ({ item: data }));\n\t\tconst _jsonToXml = (json: JSON) => {\n\t\t\tlet xml = \"\";\n\t\t\tlet key: string;\n\t\t\tfor (key in json) {\n\t\t\t\tconst value = json[key as keyof typeof json];\n\t\t\t\tif (value) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\t\txml += `<${key}>${_jsonToXml(value)}</${key}>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txml += `<${key}>${value as string}</${key}>`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn xml.replace(/<\\/?\\d+>/g, \"\");\n\t\t};\n\t\tconst transformedJson: JSON = JSON.parse(JSON.stringify(_transformJsonForXml(json))) as JSON;\n\t\tlet xml = \"<?xml version='1.0' encoding='UTF-8'?>\";\n\t\tconst rootToken = \"customFeed\";\n\t\txml += `<${rootToken}>`;\n\t\txml += _jsonToXml(transformedJson);\n\t\txml += `</${rootToken}>`;\n\t\txml = xml.replaceAll(\"&\", \"&amp;\");\n\t\tconst parser = new DOMParser();\n\t\treturn parser.parseFromString(xml, \"text/xml\");\n\t}\n\n\t/**\n\t * Randomly selects an image from the available images for the feed item.\n\t * @param {string} sFileName - The file name of the custom news feed item.\n\t * @returns {string} The URL of the image for the feed item.\n\t */\n\tpublic getCustomFeedImage(sFileName: string) {\n\t\tconst sFileBasePath = sap.ui.require.toUrl(CUSTOM_NEWS_FEED.IMAGE_URL);\n\t\tlet sFilePath = sFileBasePath + CUSTOM_IMAGES.default[0];\n\t\tconst files = CUSTOM_IMAGES[sFileName] || [];\n\t\tlet randomIndex = 0;\n\t\tif (files.length > 0) {\n\t\t\tconst randomArray = new window.Uint32Array(1);\n\t\t\twindow.crypto.getRandomValues(randomArray);\n\t\t\trandomIndex = randomArray[0] % 3;\n\t\t\tsFilePath = sFileBasePath + files[randomIndex];\n\t\t}\n\t\treturn sFilePath;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}