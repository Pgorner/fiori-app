{"version":3,"file":"SettingsDialog-dbg-dbg.js","names":["sap","ui","define","Bar","Button","List","Page","SplitApp","StandardListItem","Title","Element","Device","__BaseSettingsDialog","___utils_Device","_interopRequireDefault","obj","__esModule","default","BaseSettingsDialog","calculateDeviceType","DeviceType","SettingsDialog","extend","renderer","apiVersion","init","_init","BaseSettingsDialog.prototype.init.call","_controlMap","Map","setContentWidth","setStretch","setCustomHeader","_setCustomHeader","addButton","getId","text","_i18nBundle","getText","type","press","close","addContent","title","showHeader","content","_getPageContent","_menuBtn","icon","tooltip","_toggleMasterPage","contentLeft","contentMiddle","isMasterShown","_splitApp","deviceType","_deviceType","Tablet","toMaster","_masterPage","hideMaster","showMaster","_updateHeaderButtonVisibility","Mobile","setVisible","orientation","portrait","tooltipText","setTooltip","_menuList","mode","itemPress","event","_navigateToDetailPage","addStyleClass","masterPages","masterButton","_hideNavigationButton","context","listItem","getParameter","firstPanel","getPanels","selectedKey","data","getProperty","setProperty","detailPage","getElementById","toDetail","getMode","selectedPanel","find","panel","firePanelNavigated","removeSelections","pageItem","setTimeout","setSelectedItem","focus","navigationButton","getSource","destroy","onBeforeRendering","_onBeforeRendering","BaseSettingsDialog.prototype.onBeforeRendering.call","forEach","addItem","_getPageListItem","addDetailPage","_getDetailPage","settingsPanel","id","get","iconDensityAware","set","page","backgroundDesign","getAggregation","actionButton","addHeaderContent"],"sources":["SettingsDialog.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Event as JQueryEvent } from \"jquery\";\nimport Bar from \"sap/m/Bar\";\nimport Button from \"sap/m/Button\";\nimport List from \"sap/m/List\";\nimport Page from \"sap/m/Page\";\nimport SplitApp from \"sap/m/SplitApp\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Title from \"sap/m/Title\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport Device from \"sap/ui/Device\";\nimport BaseSettingsDialog from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { calculateDeviceType, DeviceType } from \"./utils/Device\";\n\n/**\n *\n * Dialog class for My Home Settings.\n *\n * @extends BaseSettingsDialog\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.SettingsDialog\n */\nexport default class SettingsDialog extends BaseSettingsDialog {\n\tprivate _controlMap!: Map<string, Control | Element>;\n\tprivate _menuBtn!: Button;\n\tprivate _menuList!: List;\n\tprivate _masterPage!: Page;\n\tprivate _splitApp!: SplitApp;\n\tprivate _deviceType!: DeviceType;\n\n\tstatic renderer = {\n\t\tapiVersion: 2\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._controlMap = new Map();\n\n\t\t//setup dialog\n\t\tthis.setContentWidth(\"72rem\");\n\t\tthis.setStretch(false);\n\t\tthis.setCustomHeader(this._setCustomHeader());\n\n\t\t//setup dialog buttons\n\t\tthis.addButton(\n\t\t\tnew Button(`${this.getId()}-close-btn`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"closeSettings\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: () => this.close()\n\t\t\t})\n\t\t);\n\n\t\t//setup dialog content\n\t\tthis.addContent(\n\t\t\tnew Page(`${this.getId()}-settingsPage`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\t\tshowHeader: false,\n\t\t\t\tcontent: this._getPageContent()\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Creates and sets a custom header for the SettingsDialog.\n\t *\n\t * @private\n\t * @returns {Bar} The custom header bar for the SettingsDialog.\n\t */\n\tprivate _setCustomHeader(): Bar {\n\t\tthis._menuBtn = new Button(`${this.getId()}-menu-btn`, {\n\t\t\ticon: \"sap-icon://menu2\",\n\t\t\ttooltip: this._i18nBundle.getText(\"showMenu\"),\n\t\t\tpress: () => this._toggleMasterPage()\n\t\t});\n\t\treturn new Bar(`${this.getId()}-header`, {\n\t\t\tcontentLeft: [this._menuBtn],\n\t\t\tcontentMiddle: [\n\t\t\t\tnew Title(`${this.getId()}-dialog-title`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"myHomeSettings\")\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Toggles the visibility of the master page in the SettingsDialog based on the current device width.\n\t * If the device width is less than 600 pixels or equal to or greater than 1024 pixels, the master\n\t * page is always shown. Otherwise, it toggles the visibility of the master page.\n\t *\n\t * @private\n\t */\n\tprivate _toggleMasterPage(): void {\n\t\tconst isMasterShown = this._splitApp.isMasterShown();\n\t\tconst deviceType = this._deviceType || calculateDeviceType();\n\t\tif (deviceType !== DeviceType.Tablet) {\n\t\t\tthis._splitApp.toMaster(this._masterPage.getId(), \"slide\");\n\t\t} else {\n\t\t\tif (isMasterShown) {\n\t\t\t\tthis._splitApp.hideMaster();\n\t\t\t} else {\n\t\t\t\tthis._splitApp.showMaster();\n\t\t\t}\n\t\t}\n\t\tthis._updateHeaderButtonVisibility(!isMasterShown);\n\t}\n\n\t/**\n\t * Update header button\n\t *\n\t * @param {boolean} isMasterShown If master page is shown\n\t * @private\n\t */\n\tprivate _updateHeaderButtonVisibility(isMasterShown: boolean): void {\n\t\tconst deviceType = this._deviceType || calculateDeviceType();\n\t\tif (deviceType === DeviceType.Mobile) {\n\t\t\t// Hide or show the menu button on mobile\n\t\t\tthis._menuBtn.setVisible(!isMasterShown);\n\t\t} else if (deviceType === DeviceType.Tablet) {\n\t\t\tif (Device.orientation?.portrait) {\n\t\t\t\t// Show menu button in portrait mode with a tooltip\n\t\t\t\tconst tooltipText = this._i18nBundle.getText(isMasterShown ? \"ToggleButtonHide\" : \"ToggleButtonShow\");\n\t\t\t\tthis._menuBtn.setVisible(true);\n\t\t\t\tif (tooltipText) {\n\t\t\t\t\t// Only set the tooltip if a valid string is available\n\t\t\t\t\tthis._menuBtn.setTooltip(tooltipText);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Hide or show the menu button in other orientations\n\t\t\t\tthis._menuBtn.setVisible(!isMasterShown);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generates the content for the SettingsDialog, including the master page and split app.\n\t *\n\t * @private\n\t * @returns {SplitApp} The split app containing the master page and detail pages for the SettingsDialog.\n\t */\n\tprivate _getPageContent(): SplitApp {\n\t\tthis._menuList = new List(`${this.getId()}-master-pages-list`, {\n\t\t\tmode: \"SingleSelectMaster\",\n\t\t\titemPress: (event: Event) => this._navigateToDetailPage(event)\n\t\t}).addStyleClass(\"sapCuxMasterPageList\");\n\t\tthis._masterPage = new Page(`${this.getId()}-master-page`, {\n\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\tshowHeader: false,\n\t\t\tcontent: [this._menuList]\n\t\t});\n\t\tthis._splitApp = new SplitApp(`${this.getId()}-settingsApp`, {\n\t\t\tmode: \"ShowHideMode\",\n\t\t\tmasterPages: [this._masterPage],\n\t\t\tmasterButton: (event: Event) => this._hideNavigationButton(event)\n\t\t});\n\n\t\treturn this._splitApp;\n\t}\n\n\t/**\n\t * Navigates to the detail page associated with the selected item in the master page list.\n\t *\n\t * @private\n\t * @param {Event} event The item press event from the master page list.\n\t */\n\tprivate _navigateToDetailPage(event: Event<{ listItem?: StandardListItem }> | string, context?: object): void {\n\t\t//update selected key\n\t\tconst listItem = typeof event === \"string\" ? event : event.getParameter?.(\"listItem\");\n\t\tconst firstPanel = this.getPanels()[0];\n\t\tconst selectedKey = ((listItem as StandardListItem)?.data?.(\"key\") || event || firstPanel?.getProperty(\"key\")) as string;\n\t\tthis.setProperty(\"selectedKey\", selectedKey, true);\n\n\t\t//navigate to detail page\n\t\tconst detailPage = Element.getElementById(`${selectedKey}-detail-page`) as Page;\n\t\tthis._splitApp.toDetail(detailPage.getId(), \"slide\");\n\t\tthis._splitApp.hideMaster();\n\t\tif (this._splitApp.getMode() === \"ShowHideMode\") {\n\t\t\tthis._updateHeaderButtonVisibility(false);\n\t\t}\n\n\t\t//fire panel navigated event\n\t\tconst selectedPanel = this.getPanels().find(\n\t\t\t(panel: BaseSettingsPanel) => panel.getProperty(\"key\") === selectedKey\n\t\t) as BaseSettingsPanel;\n\t\tselectedPanel?.firePanelNavigated({ context });\n\n\t\t//select list item\n\t\tthis._menuList.removeSelections(true);\n\t\tconst pageItem = Element.getElementById(`${selectedKey}-page-item`) as StandardListItem;\n\t\tsetTimeout(() => {\n\t\t\tthis._menuList.setSelectedItem(pageItem);\n\t\t\tpageItem.focus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Hides the navigation button associated with the provided event.\n\t *\n\t * @private\n\t * @param {Event} event The event triggering the hide action.\n\t */\n\tprivate _hideNavigationButton(event: Event): void {\n\t\tconst navigationButton = Element.getElementById(`${event.getSource<SplitApp>().getId()}-MasterBtn`) as Button;\n\t\tnavigationButton?.destroy();\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method.\n\t * Prepares the SettingsDialog content and navigate to the selected detail page.\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic onBeforeRendering(event: JQueryEvent): void {\n\t\tsuper.onBeforeRendering(event);\n\n\t\t//setup master and detail page content\n\t\tthis.getPanels().forEach((panel: BaseSettingsPanel) => {\n\t\t\tthis._menuList.addItem(this._getPageListItem(panel));\n\t\t\tthis._splitApp.addDetailPage(this._getDetailPage(panel));\n\t\t});\n\n\t\t//navigate to detail page\n\t\tconst selectedKey = this.getProperty(\"selectedKey\") as string;\n\t\tconst context = this.getProperty(\"context\") as object;\n\t\tthis._navigateToDetailPage(selectedKey, context);\n\t}\n\n\t/**\n\t * Generates a list item for the master page list based on the settings panel.\n\t * The list item displays the title and icon of the settings panel.\n\t *\n\t * @private\n\t * @param {BaseSettingsPanel} settingsPanel The settings panel for which to generate the list item.\n\t * @returns {StandardListItem} The list item control representing the settings panel in the master page list.\n\t */\n\tprivate _getPageListItem(settingsPanel: BaseSettingsPanel): StandardListItem {\n\t\tconst id = `${settingsPanel.getProperty(\"key\")}-page-item`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst listItem = new StandardListItem(id, {\n\t\t\t\ttitle: settingsPanel.getProperty(\"title\") as string,\n\t\t\t\ticon: settingsPanel.getProperty(\"icon\") as string,\n\t\t\t\ttype: \"Navigation\",\n\t\t\t\ticonDensityAware: false\n\t\t\t});\n\t\t\tlistItem.data(\"key\", settingsPanel.getProperty(\"key\"));\n\t\t\tthis._controlMap.set(id, listItem);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as StandardListItem;\n\t}\n\n\t/**\n\t * Generates a detail page for the SettingsDialog based on the provided settings panel.\n\t *\n\t * @private\n\t * @param {BaseSettingsPanel} settingsPanel The settings panel for which to generate the detail page.\n\t * @returns {Page} The detail page control representing the settings panel.\n\t */\n\tprivate _getDetailPage(settingsPanel: BaseSettingsPanel): Page {\n\t\tconst id = `${settingsPanel.getProperty(\"key\")}-detail-page`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst page = new Page(id, {\n\t\t\t\ttitle: settingsPanel.getProperty(\"title\") as string,\n\t\t\t\tbackgroundDesign: \"List\",\n\t\t\t\tshowHeader: settingsPanel.getProperty(\"showHeader\") as boolean\n\t\t\t});\n\n\t\t\t//add settings panel action buttons\n\t\t\t((settingsPanel.getAggregation(\"actionButtons\") || []) as Button[]).forEach((actionButton) => {\n\t\t\t\tpage.addHeaderContent(actionButton);\n\t\t\t});\n\n\t\t\tthis._controlMap.set(id, page);\n\t\t}\n\n\t\t//add settings panel content\n\t\t(settingsPanel.getAggregation(\"content\") as Control[]).forEach((content) => (this._controlMap.get(id) as Page).addContent(content));\n\n\t\treturn this._controlMap.get(id) as Page;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}