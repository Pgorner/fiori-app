{"version":3,"file":"NewsPanel-dbg-dbg.js","names":["sap","ui","define","Log","SlideTile","EventBus","DateFormat","XMLModel","Container","__BaseNewsPanel","__MenuItem","__NewsGroup","__NewsItem","___library","___utils_FESRUtil","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","BaseNewsPanel","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_for","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","MenuItem","_catch","recover","NewsGroup","NewsItem","NewsType","addFESRId","PersonalisationUtils","UshellPersonalizer","BASE_URL","NEWS_FEED_READ_API","NEWS_FEED_TRANSLATION_API","NEWS_FEED_COUNT_URL","DEFAULT_FEED_COUNT","fnImagePlaceholder","sPath","N","Array","from","length","i","CUSTOM_NEWS_FEED","TITLE","LINK","VALIDITY","PREPARATION_REQUIRED","EXCLUDE_FIELDS","IMAGE_URL","FESR_STEP_NAME","EMPTY_DATA_ERROR_CODE","CUSTOM_IMAGES","Finance","Manufacturing","Sales","NewsPanel","extend","metadata","library","properties","url","type","group","defaultValue","visibility","RSS","customFeedKey","customFileName","showCustom","newsAvailable","aggregations","newsGroup","singularName","multiple","constructor","_constructor","id","settings","BaseNewsPanel.prototype.constructor.call","init","_init","BaseNewsPanel.prototype.init.call","oNewsTile","getId","displayTime","width","height","addStyleClass","getNewsWrapper","addContent","setProperty","_i18nBundle","getText","_eventBus","getInstance","menuItem","title","icon","press","handleEditNews","addAggregation","getData","_getData","sUrl","getUrl","_temp2","getProperty","Promise","resolve","initializeXmlModel","_this$initializeXmlMo","oNewsModel","setModel","_temp","bNewsLoad","getPersContainerId","getOwnerComponent","_UshellPersonalizer$g","oPersonalizer","read","_this$oPersonalizer$r","oPersData","sCustomNewsFeedKey","getCustomFeedKey","setCustomNewsFeed","handleFeedError","_getCustomFeedKey","oAdaptationData","customNewsFeedKey","_getUrl","_initializeXmlModel","_this2","oParent","getParent","setDefaultBindingMode","attachRequestCompleted","oEvent","panelLoadedFn","loaded","count","oDocument","getSource","loadNewsFeed","publish","showError","date","Date","attachRequestFailed","_loadNewsFeed","noOfFeeds","_this3","_temp4","querySelector","oBindingInfo","path","bindNewsTile","_temp3","extractAllImageUrls","_handleFeedError","generateErrorMessage","setVisible","setURL","_setURL","_this4","_bindNewsTile","oSlideTile","bindAggregation","templateShareable","factory","sId","oContext","newsInfo","getObject","oTile","getElementsByTagName","textContent","subTitle","imageUrl","footer","formatDate","getTile","_extractAllImageUrls","_this5","_temp5","oItemElement","extractImage","oImageUrl","createElement","appendChild","_formatDate","oPublished","toRelativeDateTime","getFavNewsFeed","_getFavNewsFeed","aFavNewsFeed","_extractImage","sHrefLink","fnLoadPlaceholderImage","sPrefix","require","toUrl","image","fetch","res","text","sHTML","aMatches","match","isArray","catch","_toRelativeDateTime","oDate","oRelativeDateFormatter","getDateTimeInstance","style","relative","relativeStyle","format","_setCustomNewsFeed","sFeedId","_this6","_this6$oPersonalizer$","favNewsFeed","items","all","getCustomNewsFeedCount","getCustomNewsFeed","showAllPreparationRequired","_ref","iFeedCount","aFeeds","Error","filter","oNewsFeed","includes","loadCustomNewsFeed","err","error","_getCustomNewsFeedCount","_this7","_temp8","_fetch","_temp6","json","_temp7","_await$fetch$json","pCustomNewsFeedCount","encodeURI","undefined","_getCustomNewsFeed","_this8","getNewsFeedDetailsUrl","changeId","pCustomNewsFeed","getAuthNewsFeed","oResponse","oFeedDict","forEach","oFeed","push","getCustomFeedImage","_getNewsFeedDetailsUrl","oNews","_getAuthNewsFeed","sNewsUrl","_this9","getAllAvailableApps","getNewsFeedDetails","_ref2","aAvailableApps","aNewsFeed","arrangeNewsFeeds","_arrangeNewsFeeds","aAuthNewsFeed","Category","ImpactedArtifacts","aImpactedArtifacts","split","impactedArtifact","oImpactedArtifact","isAuthFeed","_isAuthFeed","fioriIdSplitter","aTokens","sFioriId","trim","index","findIndex","oApp","signature","parameters","_getAllAvailableApps","getServiceAsync","oService","_oAdapter","_aInbounds","message","_getNewsFeedDetails","_this10","_temp11","_fetch2","_temp9","_temp10","_await$fetch$json2","pNewsFeed","fnFormattedLabel","sLabel","replace","getTranslatedText","_ref3","newsResponse","translationResponse","aNews","JSON","parse","stringify","aTranslation","map","aFields","Object","keys","aExpandFields","oField","oTranslatedField","find","oTranslation","ColumnName","toUpperCase","oTranslatedFieldName","TranslatedName","label","Link","expanded","expandFields","_getTranslatedText","_this11","_temp14","_fetch3","_temp12","_temp13","_await$fetch$json3","_loadCustomNewsFeed","feeds","oXMLResponse","parseJsonToXml","setData","_parseJsonToXml","_transformJsonForXml","aData","data","item","_jsonToXml","xml","key","transformedJson","rootToken","replaceAll","parser","DOMParser","parseFromString","_getCustomFeedImage","sFileName","sFileBasePath","sFilePath","files","randomIndex","randomArray","window","Uint32Array","crypto","getRandomValues"],"sources":["NewsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport SlideTile from \"sap/m/SlideTile\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport XMLModel from \"sap/ui/model/xml/XMLModel\";\nimport Container from \"sap/ushell/Container\";\nimport BaseNewsPanel, { $BaseNewsPanelSettings } from \"./BaseNewsPanel\";\nimport MenuItem from \"./MenuItem\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsGroup from \"./NewsGroup\";\nimport NewsItem from \"./NewsItem\";\nimport { NewsType } from \"./library\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\ninterface IBindingInfo {\n\tpath: string;\n\tlength: number;\n}\n\ninterface INewsResponse {\n\tvalue: ICustomNewsFeed[];\n}\n\ninterface INewsFeedPromise {\n\t[key: string]: Promise<INewsResponse | ICustomNewsFeed[]>;\n}\n\nexport interface ICustomNewsFeed {\n\t[key: string]: string | boolean | INewsLink | number | INewsLink[] | INewsParam;\n}\n\nexport interface INewsItem {\n\tchangeId: string;\n\ttitle?: string;\n\tshowAllPreparationRequired?: boolean;\n}\n\ninterface ITranslatedText {\n\tColumnName?: string;\n\tTranslatedName?: string;\n}\n\ninterface IAppConfiguration {\n\t_oAdapter: {\n\t\t_aInbounds: IAvailableApp[];\n\t};\n}\n\ninterface IAvailableApp {\n\tsemanticObject?: string;\n\taction?: string;\n\tid?: string;\n\ttitle?: string;\n\tpermanentKey?: string;\n\tcontentProviderId?: string;\n\tresolutionResult?: {\n\t\t[key: string]: string;\n\t};\n\tdeviceTypes?: {\n\t\t[key: string]: boolean;\n\t};\n\tsignature: {\n\t\tparameters: {\n\t\t\t[key: string]: IAppParameter;\n\t\t};\n\t\tadditionalParameters?: string;\n\t};\n}\n\ninterface IAppParameter {\n\tdefaultValue?: {\n\t\tvalue: string;\n\t\tformat: string;\n\t};\n\trequired: boolean;\n}\n\nexport interface INewsLink {\n\t[key: string]: string;\n}\n\nexport interface INewsParam {\n\t[key: string]: { [key: string]: string };\n}\n\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\",\n\tNEWS_FEED_READ_API = BASE_URL + \"insights_read_srv/0001/\" + \"NEWS_FEED\",\n\tNEWS_FEED_TRANSLATION_API = BASE_URL + \"insights_read_srv/0001/\" + \"NewsFeedColumnTranslation\",\n\tNEWS_FEED_COUNT_URL = NEWS_FEED_READ_API + \"/$count\",\n\tDEFAULT_FEED_COUNT = 7,\n\tfnImagePlaceholder = function (sPath: string, N: number) {\n\t\treturn Array.from({ length: N }, function (v, i) {\n\t\t\treturn sPath + \"/\" + (i + 1) + \".jpg\";\n\t\t});\n\t};\n\nconst CUSTOM_NEWS_FEED = {\n\t\tTITLE: \"LineOfBusiness\",\n\t\tLINK: \"WhatsNewDocument\",\n\t\tVALIDITY: \"ValidAsOf\",\n\t\tPREPARATION_REQUIRED: \"PreparationRequired\",\n\t\tEXCLUDE_FIELDS: [\n\t\t\t\"ChangeId\",\n\t\t\t\"LineNumber\",\n\t\t\t\"LineOfBusiness\",\n\t\t\t\"SolutionArea\",\n\t\t\t\"Title\",\n\t\t\t\"Description\",\n\t\t\t\"Type\",\n\t\t\t\"ValidAsOf\",\n\t\t\t\"WhatsNewDocument\",\n\t\t\t\"Link\"\n\t\t],\n\t\tIMAGE_URL: \"sap/cux/home/img/CustomNewsFeed/\",\n\t\tFESR_STEP_NAME: \"custNewsSlide-press\",\n\t\tEMPTY_DATA_ERROR_CODE: \"NODATA\"\n\t},\n\tCUSTOM_IMAGES: { [key: string]: string[] } = {\n\t\t\"Application Platform and Infrastructure\": fnImagePlaceholder(\"ApplicationPlatformandInfrastructure\", 3),\n\t\t\"Asset Management\": fnImagePlaceholder(\"AssetManagement\", 3),\n\t\t\"Cross Applications\": fnImagePlaceholder(\"CrossApplications\", 3),\n\t\tFinance: fnImagePlaceholder(\"Finance\", 3),\n\t\tManufacturing: fnImagePlaceholder(\"Manufacturing\", 3),\n\t\t\"R&D / Engineering\": fnImagePlaceholder(\"RnDandEngineering\", 3),\n\t\tSales: fnImagePlaceholder(\"Sales\", 3),\n\t\t\"Sourcing and Procurement\": fnImagePlaceholder(\"SourcingandProcurement\", 3),\n\t\t\"Supply Chain\": fnImagePlaceholder(\"SupplyChain\", 3),\n\t\tdefault: [\"default.jpg\"]\n\t};\n\n/**\n *\n * Panel class for managing and storing News.\n *\n * @extends sap.cux.home.BaseNewsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.NewsPanel\n */\nexport default class NewsPanel extends BaseNewsPanel {\n\tprivate oNewsTile!: SlideTile;\n\tprivate oNewsModel!: XMLModel;\n\tprivate image!: number;\n\tprivate pCustomNewsFeed!: INewsFeedPromise;\n\tprivate pCustomNewsFeedCount!: { [key: string]: Promise<number> };\n\tprivate pNewsFeed!: INewsFeedPromise;\n\tprivate bNewsLoad!: boolean;\n\tprivate oPersonalizer!: UshellPersonalizer;\n\tprivate oPersData!: IPersonalizationData;\n\tprivate aFavNewsFeed!: { items: string[]; showAllPreparationRequired: boolean };\n\tprivate _eventBus!: EventBus;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The URL of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Type of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttype: {\n\t\t\t\ttype: \"sap.cux.home.NewsType\",\n\t\t\t\tgroup: \"Misc\",\n\t\t\t\tvisibility: \"public\",\n\t\t\t\tdefaultValue: NewsType.RSS\n\t\t\t},\n\t\t\t/**\n\t\t\t * The key of custom news feed.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcustomFeedKey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * The filename of custom news feed.\n\t\t\t *\n\t\t\t */\n\t\t\tcustomFileName: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * The flag for custom news feed is checked or not.\n\t\t\t */\n\t\t\tshowCustom: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\t\t\t/**\n\t\t\t * The flag to determine rss feed will load or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tnewsAvailable: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * newsGroup aggregation for News\n\t\t\t */\n\t\t\tnewsGroup: { type: \"sap.cux.home.NewsGroup\", singularName: \"newsGroup\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tconstructor(idOrSettings?: string | $BaseNewsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseNewsPanelSettings);\n\t/**\n\t * Constructor for a new News Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseNewsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.oNewsTile = new SlideTile(this.getId() + \"--idNewsSlide\", {\n\t\t\tdisplayTime: 20000,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"17rem\"\n\t\t}).addStyleClass(\"newsTileMaxWidth sapUiSmallMarginTop sapUiSmallMarginBottom\");\n\n\t\tthis.getNewsWrapper().addContent(this.oNewsTile);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"newsTitle\"));\n\t\tthis._eventBus = EventBus.getInstance();\n\n\t\tconst menuItem = new MenuItem(`${this.getId()}-manageNews`, {\n\t\t\ttitle: this._i18nBundle.getText(\"mngNews\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: this.handleEditNews.bind(this)\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", menuItem);\n\t\taddFESRId(menuItem, \"manageNews\");\n\t}\n\n\t/**\n\t * Retrieves news data asynchronously.\n\t * If the news model is not initialized, it initializes the XML model and loads news feed data.\n\t * @returns {Promise} A promise that resolves when the news data is retrieved.\n\t */\n\n\tpublic async getData() {\n\t\tconst sUrl: string = this.getUrl();\n\t\tif (sUrl && !this.getProperty(\"showCustom\")) {\n\t\t\tthis.oNewsModel = await this.initializeXmlModel(sUrl);\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t} else if (this.getProperty(\"showCustom\")) {\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oPersonalizer = await UshellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t\t);\n\t\t\tthis.oPersData = await this.oPersonalizer.read();\n\t\t\tconst sCustomNewsFeedKey = this.getCustomFeedKey();\n\t\t\tif (sCustomNewsFeedKey) {\n\t\t\t\tvoid this.setCustomNewsFeed(sCustomNewsFeedKey);\n\t\t\t} else {\n\t\t\t\tthis.handleFeedError();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the custom news feed key property of NewsPanel\n\t * @returns {string} custom news feed key\n\t */\n\tpublic getCustomFeedKey(): string {\n\t\tconst sCustomNewsFeedKey = this.getProperty(\"customFeedKey\") as string;\n\t\tif (sCustomNewsFeedKey) {\n\t\t\treturn sCustomNewsFeedKey;\n\t\t} else {\n\t\t\treturn this.oPersData?.oAdaptationData?.customNewsFeedKey as string;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Url property of NewsPanel\n\t * @returns {any}\n\t */\n\tpublic getUrl(): string {\n\t\treturn this.getProperty(\"url\") as string;\n\t}\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t */\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t * @param {string} sUrl rss url to load the news feed\n\t * @returns {Promise<XMLModel>} XML Document containing the news feeds\n\t */\n\tprivate async initializeXmlModel(sUrl: string): Promise<XMLModel> {\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\treturn new Promise((resolve) => {\n\t\t\tconst oNewsModel = new XMLModel(sUrl);\n\t\t\toNewsModel.setDefaultBindingMode(\"OneWay\");\n\t\t\toNewsModel.attachRequestCompleted((oEvent: Event) => {\n\t\t\t\tvoid (async () => {\n\t\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst oDocument = oEvent.getSource<XMLModel>().getData() as XMLDocument;\n\t\t\t\t\tawait this.loadNewsFeed(oDocument, 0);\n\t\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: false, date: new Date() });\n\t\t\t\t\tresolve(oNewsModel);\n\t\t\t\t})();\n\t\t\t});\n\t\t\toNewsModel.attachRequestFailed(() => {\n\t\t\t\tthis.handleFeedError();\n\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: false, count: 0 });\n\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t}\n\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: true, date: new Date() });\n\t\t\t\tresolve(oNewsModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Loads the news feed based on the provided document and number of feeds.\n\t * Determines the feed type (RSS, feed, custom) and binds the news tile accordingly.\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async loadNewsFeed(oDocument: Document, noOfFeeds: number) {\n\t\tlet oBindingInfo: IBindingInfo;\n\t\tif (!oDocument?.querySelector(\"customFeed\")) {\n\t\t\tawait this.extractAllImageUrls(oDocument, noOfFeeds || DEFAULT_FEED_COUNT);\n\t\t}\n\n\t\tif (!!oDocument?.querySelector(\"rss\") && !!oDocument?.querySelector(\"item\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/channel/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (!!oDocument?.querySelector(\"feed\") && !!oDocument?.querySelector(\"entry\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/entry/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (!!oDocument?.querySelector(\"customFeed\") && !!oDocument?.querySelector(\"item\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t\treturn;\n\t\t}\n\t\tthis.bindNewsTile(this.oNewsTile, oBindingInfo);\n\t}\n\n\t/**\n\t * Handles errors that occur during the loading of the news feed.\n\t * @returns {void}\n\t */\n\tpublic handleFeedError(): void {\n\t\tif (this.getProperty(\"showCustom\")) {\n\t\t\tthis.generateErrorMessage().setVisible(true);\n\t\t\tthis.oNewsTile.setVisible(false);\n\t\t} else {\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(false);\n\t\t\tthis.setProperty(\"newsAvailable\", false);\n\t\t}\n\t}\n\n\tpublic async setURL(url: string) {\n\t\tthis.setProperty(\"showCustom\", false);\n\t\tthis.setProperty(\"newsAvailable\", true);\n\t\tthis.generateErrorMessage().setVisible(false);\n\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(true);\n\t\tthis.oNewsTile.setVisible(true);\n\t\tthis.setProperty(\"url\", url);\n\t\tawait this.getData();\n\t}\n\n\t/**\n\t * Binds the news tile with the provided binding information.\n\t * @param {sap.m.SlideTile} oSlideTile - The SlideTile control to be bound.\n\t * @param {IBindingInfo} oBindingInfo - The binding information containing the path and length of the aggregation.\n\t */\n\tprivate bindNewsTile(oSlideTile: SlideTile, oBindingInfo: IBindingInfo): void {\n\t\tif (oBindingInfo) {\n\t\t\toSlideTile.bindAggregation(\"tiles\", {\n\t\t\t\tpath: oBindingInfo.path,\n\t\t\t\tlength: oBindingInfo.length,\n\t\t\t\ttemplateShareable: false,\n\t\t\t\tfactory: (sId: string, oContext: Context) => {\n\t\t\t\t\tconst newsInfo = oContext.getObject() as XMLDocument;\n\t\t\t\t\tlet oTile;\n\t\t\t\t\tif (newsInfo.getElementsByTagName(\"link\").length > 0) {\n\t\t\t\t\t\toTile = new NewsItem(\"\", {\n\t\t\t\t\t\t\turl: newsInfo.getElementsByTagName(\"link\")[0].textContent as string,\n\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\tsubTitle: newsInfo.getElementsByTagName(\"description\")[0].textContent as string,\n\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")[0].textContent as string,\n\t\t\t\t\t\t\tfooter: this.formatDate(newsInfo.getElementsByTagName(\"pubDate\")[0].textContent as string)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\toTile = new NewsGroup(\"\", {\n\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\tsubTitle: this._i18nBundle.getText(\"newsFeedDescription\") as string,\n\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")[0].textContent as string,\n\t\t\t\t\t\t\tfooter: newsInfo.getElementsByTagName(\"footer\")[0].textContent as string\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.addAggregation(\"newsItems\", oTile, true);\n\t\t\t\t\treturn oTile.getTile();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Extracts images for all the news tiles\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async extractAllImageUrls(oDocument: Document, noOfFeeds: number) {\n\t\tfor (let i = 0; i < noOfFeeds; i++) {\n\t\t\tconst oItemElement = oDocument?.getElementsByTagName(\"item\")[i];\n\t\t\tconst sUrl: string = await this.extractImage(oItemElement.getElementsByTagName(\"link\")[0].textContent as string);\n\t\t\tconst oImageUrl = oDocument.createElement(\"imageUrl\");\n\t\t\toImageUrl.textContent = sUrl;\n\t\t\toItemElement.appendChild(oImageUrl);\n\t\t}\n\t}\n\n\t/**\n\t * Formats the publication date or the update date to a relative date-time format.\n\t * @param {string} oPublished - The publication date.\n\t * @returns {string} The formatted relative date-time string.\n\t */\n\tprivate formatDate(oPublished: string): string {\n\t\treturn this.toRelativeDateTime(new Date(oPublished));\n\t}\n\n\t/**\n\t * Returns the favourite news feed for the custom news\n\t * @returns {any}\n\t */\n\tpublic getFavNewsFeed() {\n\t\treturn this.aFavNewsFeed;\n\t}\n\n\t/**\n\t * Extracts the image URL from the provided HREF link or link.\n\t * @param {string} sHrefLink - The HREF link containing the image URL.\n\t * @returns {Promise} A promise that resolves to the extracted image URL.\n\t */\n\tprivate extractImage(sHrefLink: string): Promise<string> {\n\t\tconst fnLoadPlaceholderImage = () => {\n\t\t\tconst sPrefix = sap.ui.require.toUrl(\"sap.cux.home/src/sap/cux/home/utils/\");\n\t\t\tthis.image = this.image ? this.image + 1 : 1;\n\t\t\tthis.image = this.image < 9 ? this.image : 1;\n\t\t\treturn `${sPrefix}/imgNews/${this.image}.jpg`;\n\t\t};\n\n\t\treturn fetch(sHrefLink)\n\t\t\t.then((res) => res.text())\n\t\t\t.then((sHTML) => {\n\t\t\t\tconst aMatches = sHTML.match(/<meta[^>]*property=[\"']og:image[\"'][^>]*content=[\"']([^\"']+)[\"'][^>]*>/i);\n\t\t\t\treturn Array.isArray(aMatches) && aMatches[1] ? aMatches[1] : fnLoadPlaceholderImage();\n\t\t\t})\n\t\t\t.catch(fnLoadPlaceholderImage);\n\t}\n\n\t/**\n\t * Converts the given date to a relative date-time format.\n\t * @param {Date} oDate - The date to be converted.\n\t * @returns {string} The date in relative date-time format.\n\t */\n\tprivate toRelativeDateTime(oDate: Date): string {\n\t\tconst oRelativeDateFormatter = DateFormat.getDateTimeInstance({\n\t\t\tstyle: \"medium\",\n\t\t\trelative: true,\n\t\t\trelativeStyle: \"short\"\n\t\t});\n\t\treturn oRelativeDateFormatter.format(new Date(oDate));\n\t}\n\n\t/**\n\t * This method retrieves the count and feeds of the custom news feed asynchronously.\n\t * If the count is not zero, it loads the custom news feed data and returns the feeds.\n\t * @param {string} sFeedId - The ID of the custom news feed to set.\n\t * @returns {Promise} A promise that resolves to an array of news feeds.\n\t */\n\tpublic async setCustomNewsFeed(sFeedId: string): Promise<void> {\n\t\ttry {\n\t\t\tthis.oNewsTile.setVisible(true);\n\t\t\tthis.generateErrorMessage().setVisible(false);\n\t\t\tthis.oPersData = await this.oPersonalizer?.read();\n\t\t\tthis.aFavNewsFeed = (this.oPersData?.favNewsFeed as { items: string[]; showAllPreparationRequired: boolean }) || { items: [] };\n\t\t\tlet [iFeedCount, aFeeds] = await Promise.all([\n\t\t\t\tthis.getCustomNewsFeedCount(sFeedId),\n\t\t\t\tthis.getCustomNewsFeed(sFeedId, this.aFavNewsFeed.showAllPreparationRequired)\n\t\t\t]);\n\t\t\tif (aFeeds.length === 0 || iFeedCount === 0) {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t\t//filer selected feeds from all news feed\n\t\t\tif (this.aFavNewsFeed?.items?.length) {\n\t\t\t\taFeeds = aFeeds.filter((oNewsFeed) => {\n\t\t\t\t\treturn this.aFavNewsFeed?.items.includes(oNewsFeed.title as string);\n\t\t\t\t});\n\t\t\t} else if (this.aFavNewsFeed?.items?.length === 0) {\n\t\t\t\tthrow new Error(\"Error: No news feed available\");\n\t\t\t}\n\t\t\tthis.loadCustomNewsFeed(aFeeds);\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthis.handleFeedError();\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the count of custom news feed items identified by the provided feed ID.\n\t * @param {string} sFeedId - The ID of the custom news feed.\n\t * @returns {Promise} A Promise that resolves to the count of custom news feed items.\n\t */\n\tpublic async getCustomNewsFeedCount(sFeedId: string): Promise<number> {\n\t\tlet sUrl = encodeURI(NEWS_FEED_COUNT_URL + \"?$filter=ChangeId\" + \" eq \" + \"'\" + sFeedId + \"'\");\n\t\tthis.pCustomNewsFeedCount = this.pCustomNewsFeedCount ? this.pCustomNewsFeedCount : {};\n\t\tthis.pCustomNewsFeedCount[sUrl] =\n\t\t\tthis.pCustomNewsFeedCount[sUrl] !== undefined\n\t\t\t\t? this.pCustomNewsFeedCount[sUrl]\n\t\t\t\t: ((await (await fetch(sUrl)).json()) as Promise<number>);\n\t\treturn this.pCustomNewsFeedCount[sUrl];\n\t}\n\n\t/**\n\t * Retrieves custom news feed items identified by the provided feed ID and settings.\n\t * It processes the response data and returns an array of custom news feed items.\n\t * @param {string} sFeedId - The ID of the custom news feed.\n\t * @param {boolean} showAllPreparationRequired - Indicates whether to show all preparation required.\n\t * @returns {Promise} A Promise that resolves to an array of custom news feed items.\n\t */\n\tpublic async getCustomNewsFeed(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\ttry {\n\t\t\tconst sUrl = this.getNewsFeedDetailsUrl({ changeId: sFeedId, showAllPreparationRequired: showAllPreparationRequired });\n\t\t\tthis.pCustomNewsFeed = this.pCustomNewsFeed ? this.pCustomNewsFeed : {};\n\t\t\tthis.pCustomNewsFeed[sUrl] =\n\t\t\t\tthis.pCustomNewsFeed[sUrl] !== undefined\n\t\t\t\t\t? this.pCustomNewsFeed[sUrl]\n\t\t\t\t\t: (this.getAuthNewsFeed(sUrl) as Promise<ICustomNewsFeed[]>);\n\t\t\tconst oResponse = await this.pCustomNewsFeed[sUrl];\n\t\t\tconst oFeedDict: { [key: string]: string } = {};\n\t\t\tconst aFeeds: ICustomNewsFeed[] = [];\n\t\t\tif ((oResponse as ICustomNewsFeed[])?.length > 0) {\n\t\t\t\t(oResponse as ICustomNewsFeed[]).forEach((oFeed: ICustomNewsFeed) => {\n\t\t\t\t\tconst title = oFeed[CUSTOM_NEWS_FEED.TITLE] as INewsLink;\n\t\t\t\t\tif (!oFeedDict[title.value]) {\n\t\t\t\t\t\taFeeds.push({\n\t\t\t\t\t\t\ttitle: title.value,\n\t\t\t\t\t\t\tfooter: (oFeed[CUSTOM_NEWS_FEED.VALIDITY] as INewsLink).value,\n\t\t\t\t\t\t\timageUrl: this.getCustomFeedImage(title.value)\n\t\t\t\t\t\t});\n\t\t\t\t\t\toFeedDict[title.value] = title.value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn aFeeds;\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthrow new Error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the URL for retrieving news feed details based on the provided news object.\n\t * The generated URL limits the number of results to 999.\n\t * @param {INewsItem} oNews - The news object containing properties such as changeId, title, and showAllPreparationRequired.\n\t * @returns {string} The URL for retrieving news feed details.\n\t */\n\tpublic getNewsFeedDetailsUrl(oNews: INewsItem) {\n\t\tlet sUrl = NEWS_FEED_READ_API + \"?$filter=ChangeId eq \" + \"'\" + oNews.changeId + \"'\";\n\t\tsUrl = oNews.title ? sUrl + \" and LineOfBusiness eq \" + \"'\" + encodeURI(oNews.title) + \"'\" : sUrl;\n\t\tsUrl = oNews.showAllPreparationRequired ? sUrl + \" and PreparationRequired eq true\" : sUrl;\n\t\treturn sUrl + \"&$top=999\";\n\t}\n\n\t/**\n\t * Retrieves the news feed from the specified URL after applying authorization filtering based on the available apps.\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {string} sNewsUrl - The URL of the news feed.\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tpublic async getAuthNewsFeed(sNewsUrl: string) {\n\t\ttry {\n\t\t\tconst [aAvailableApps, aNewsFeed] = await Promise.all([this.getAllAvailableApps(), this.getNewsFeedDetails(sNewsUrl)]);\n\t\t\tif (aAvailableApps.length === 0) {\n\t\t\t\treturn aNewsFeed;\n\t\t\t}\n\t\t\treturn this.arrangeNewsFeeds(aNewsFeed, aAvailableApps);\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {ICustomNewsFeed[]} aNewsFeed - array of news feed\n\t * @param {IAvailableApp[]} aAvailableApps - array of all availabel apps\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tprivate arrangeNewsFeeds(aNewsFeed: ICustomNewsFeed[], aAvailableApps: IAvailableApp[]) {\n\t\tconst aAuthNewsFeed: ICustomNewsFeed[] = [];\n\n\t\taNewsFeed.forEach((oNewsFeed: ICustomNewsFeed) => {\n\t\t\tif ((oNewsFeed.Category as INewsLink).value !== \"App\" || !(oNewsFeed.ImpactedArtifacts as INewsLink).value) {\n\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t} else {\n\t\t\t\tconst aImpactedArtifacts: string[] = (oNewsFeed.ImpactedArtifacts as INewsLink).value.split(\"\\n\");\n\t\t\t\tfor (let impactedArtifact of aImpactedArtifacts) {\n\t\t\t\t\tconst oImpactedArtifact = impactedArtifact;\n\t\t\t\t\tif (oImpactedArtifact && this.isAuthFeed(aAvailableApps, impactedArtifact)) {\n\t\t\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn aAuthNewsFeed;\n\t}\n\n\t/**\n\t * takes all available apps list and the impacted atifact from the news and returns if it's valid\n\t * @param {IAvailableApp[]} aAvailableApps - Array of all available apps\n\t * @param {string} oImpactedArtifact - impacted artifact form the news\n\t * @returns {boolean} checks if the news is authenticated with the available apps list\n\t */\n\tprivate isAuthFeed(aAvailableApps: IAvailableApp[], oImpactedArtifact: string) {\n\t\tconst fioriIdSplitter = \"|\";\n\t\tif (oImpactedArtifact.includes(fioriIdSplitter)) {\n\t\t\tconst aTokens = oImpactedArtifact.split(fioriIdSplitter);\n\t\t\tconst sFioriId = (aTokens[aTokens.length - 1] || \"\").trim();\n\t\t\tif (sFioriId) {\n\t\t\t\tconst index = aAvailableApps.findIndex((oApp: IAvailableApp) => {\n\t\t\t\t\treturn sFioriId === oApp?.signature?.parameters[\"sap-fiori-id\"]?.defaultValue?.value;\n\t\t\t\t});\n\t\t\t\treturn index > -1;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Retrieves all available apps from the ClientSideTargetResolution service for authorization filtering.\n\t * @returns {Array} An array of available apps.\n\t */\n\tprivate async getAllAvailableApps(): Promise<IAvailableApp[]> {\n\t\ttry {\n\t\t\tconst oService = await Container.getServiceAsync<IAppConfiguration>(\"ClientSideTargetResolution\");\n\t\t\treturn oService?._oAdapter._aInbounds || [];\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the news feed details from the specified URL, including translation and formatting of field labels.\n\t * @param {string} sUrl - The URL of the news feed details.\n\t * @returns {Array} The array of news feed items with translated and formatted field labels.\n\t */\n\tprivate async getNewsFeedDetails(sUrl: string): Promise<ICustomNewsFeed[]> {\n\t\tthis.pNewsFeed = this.pNewsFeed ? this.pNewsFeed : {};\n\t\tthis.pNewsFeed[sUrl] =\n\t\t\tthis.pNewsFeed[sUrl] !== undefined\n\t\t\t\t? this.pNewsFeed[sUrl]\n\t\t\t\t: ((await (await fetch(sUrl)).json()) as Promise<{ value: ICustomNewsFeed[] }>);\n\t\tconst fnFormattedLabel = (sLabel: string) => sLabel.replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\n\t\tconst [newsResponse, translationResponse] = await Promise.all([\n\t\t\tthis.pNewsFeed[sUrl],\n\t\t\tthis.getTranslatedText(this.getCustomFeedKey())\n\t\t]);\n\t\tconst aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify((newsResponse as INewsResponse).value || [])) as ICustomNewsFeed[];\n\t\tconst aTranslation = JSON.parse(JSON.stringify((translationResponse as INewsResponse).value || [])) as ITranslatedText[];\n\t\treturn aNews.map((oNews: ICustomNewsFeed) => {\n\t\t\tconst aFields = Object.keys(oNews);\n\t\t\tconst aExpandFields: INewsLink[] = [];\n\t\t\taFields.forEach((oField) => {\n\t\t\t\tconst oTranslatedField = aTranslation.find(\n\t\t\t\t\t(oTranslation: ITranslatedText) => oTranslation?.ColumnName?.toUpperCase() === oField.toUpperCase()\n\t\t\t\t);\n\t\t\t\tconst oTranslatedFieldName = (oTranslatedField?.TranslatedName as string) || fnFormattedLabel(oField);\n\t\t\t\toNews[oField] = { label: oTranslatedFieldName, value: oNews[oField] as string } as INewsLink;\n\t\t\t\tif (!CUSTOM_NEWS_FEED.EXCLUDE_FIELDS.includes(oField)) {\n\t\t\t\t\taExpandFields.push(oNews[oField]);\n\t\t\t\t}\n\t\t\t});\n\t\t\toNews.Link = {\n\t\t\t\tlabel: this._i18nBundle.getText(\"readMoreLink\") as string,\n\t\t\t\tvalue: oNews[CUSTOM_NEWS_FEED.LINK] as string,\n\t\t\t\ttext: \"Link\"\n\t\t\t};\n\t\t\toNews.expanded = aNews.length === 1;\n\t\t\toNews.expandFields = aExpandFields;\n\t\t\treturn oNews;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves translated text for news feed fields based on the specified feed ID.\n\t * @param {string} sFeedId - The ID of the custom news feed\n\t * @returns {Promise} A promise resolving to the translated text for news feed fields.\n\t */\n\tprivate async getTranslatedText(sFeedId: string) {\n\t\ttry {\n\t\t\tconst sUrl = NEWS_FEED_TRANSLATION_API + \"?$filter=Changeid eq '\" + sFeedId + \"'\";\n\t\t\tthis.pCustomNewsFeed = this.pCustomNewsFeed ? this.pCustomNewsFeed : {};\n\t\t\tthis.pCustomNewsFeed[sUrl] =\n\t\t\t\tthis.pCustomNewsFeed[sUrl] !== undefined\n\t\t\t\t\t? this.pCustomNewsFeed[sUrl]\n\t\t\t\t\t: ((await (await fetch(sUrl)).json()) as Promise<ICustomNewsFeed[]>);\n\t\t\treturn this.pCustomNewsFeed[sUrl];\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Loads custom news feed into the news panel after parsing JSON feed data to XML format.\n\t * @param {Array} feeds - The array of custom news feed items.\n\t */\n\tprivate loadCustomNewsFeed(feeds: ICustomNewsFeed[]) {\n\t\tconst oXMLResponse = this.parseJsonToXml(JSON.parse(JSON.stringify(feeds)) as JSON[]);\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\tif (!this.oNewsModel) {\n\t\t\tthis.oNewsModel = new XMLModel(oXMLResponse);\n\t\t\tif (!this.bNewsLoad) {\n\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\tthis.bNewsLoad = true;\n\t\t\t}\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t} else {\n\t\t\tthis.oNewsModel.setData(oXMLResponse);\n\t\t}\n\t\tvoid this.loadNewsFeed(oXMLResponse, feeds.length);\n\t}\n\n\t/**\n\t * Parses JSON data into XML format.\n\t * @param {JSON[]} json - The JSON data to be parsed into XML.\n\t * @returns {XMLDocument} The XML document representing the parsed JSON data.\n\t */\n\tprivate parseJsonToXml(json: JSON[]): XMLDocument {\n\t\tconst _transformJsonForXml = (aData: JSON[]) => aData.map((data: JSON) => ({ item: data }));\n\t\tconst _jsonToXml = (json: JSON) => {\n\t\t\tlet xml = \"\";\n\t\t\tlet key: string;\n\t\t\tfor (key in json) {\n\t\t\t\tconst value = json[key as keyof typeof json];\n\t\t\t\tif (value) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\t\txml += `<${key}>${_jsonToXml(value)}</${key}>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txml += `<${key}>${value as string}</${key}>`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn xml.replace(/<\\/?\\d+>/g, \"\");\n\t\t};\n\t\tconst transformedJson: JSON = JSON.parse(JSON.stringify(_transformJsonForXml(json))) as JSON;\n\t\tlet xml = \"<?xml version='1.0' encoding='UTF-8'?>\";\n\t\tconst rootToken = \"customFeed\";\n\t\txml += `<${rootToken}>`;\n\t\txml += _jsonToXml(transformedJson);\n\t\txml += `</${rootToken}>`;\n\t\txml = xml.replaceAll(\"&\", \"&amp;\");\n\t\tconst parser = new DOMParser();\n\t\treturn parser.parseFromString(xml, \"text/xml\");\n\t}\n\n\t/**\n\t * Randomly selects an image from the available images for the feed item.\n\t * @param {string} sFileName - The file name of the custom news feed item.\n\t * @returns {string} The URL of the image for the feed item.\n\t */\n\tpublic getCustomFeedImage(sFileName: string) {\n\t\tconst sFileBasePath = sap.ui.require.toUrl(CUSTOM_NEWS_FEED.IMAGE_URL);\n\t\tlet sFilePath = sFileBasePath + CUSTOM_IMAGES.default[0];\n\t\tconst files = CUSTOM_IMAGES[sFileName] || [];\n\t\tlet randomIndex = 0;\n\t\tif (files.length > 0) {\n\t\t\tconst randomArray = new window.Uint32Array(1);\n\t\t\twindow.crypto.getRandomValues(randomArray);\n\t\t\trandomIndex = randomArray[0] % 3;\n\t\t\tsFilePath = sFileBasePath + files[randomIndex];\n\t\t}\n\t\treturn sFilePath;\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAHA;;AAAAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,2TAAAC,GAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,eAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,iBAAA,EAAAC,sBAAA,EAAAC,oBAAA;EAAA;;EAAA,SAAAC,uBAAAC,GAAA;IAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,CAAAE,OAAA,mBAAAF,GAAA,CAAAE,OAAA,GAAAF,GAAA;EAAA;EAuCO,SAAAG,QAAiBC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC3C,IAAI,CAACF,IAAI,CAACG,CAAC,EAAE;MACZ,IAAID,KAAK,YAAAE,KAAiB,EAAE;QAC3B,IAAIF,KAAK,CAACC,CAAC,EAAE;UACZ,IAAIF,KAAK,GAAG,CAAC,EAAE;YACdA,KAAK,GAAGC,KAAK,CAACC,CAAC;UAChB;UACAD,KAAK,GAAGA,KAAK,CAACG,CAAC;QAChB,CAAC,MAAM;UACNH,KAAK,CAACI,CAAC,GAAGP,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC;UACzC;QACD;MACD;MACA,IAAIC,KAAK,IAAIA,KAAK,CAACM,IAAI,EAAE;QACxBN,KAAK,CAACM,IAAI,CAACT,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,EAAEF,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC,CAAC;QACxE;MACD;MACAA,IAAI,CAACG,CAAC,GAAGF,KAAK;MACdD,IAAI,CAACK,CAAC,GAAGH,KAAK;MACd,MAAMO,QAAQ,GAAGT,IAAI,CAACM,CAAC;MACvB,IAAIG,QAAQ,EAAE;QACbA,QAAQ,CAACT,IAAI,CAAC;MACf;IACD;EACD;EAAC,MAhDMU,aAAa,GAAAf,sBAAA,CAAAR,eAAA;EAAA,MAdPiB,KAAA,GAAQ,aAAc,YAAW;IAC7C,SAAAA,MAAA,EAAiB,CAAC;IAClBA,KAAA,CAAMO,SAAS,CAACH,IAAI,GAAG,UAASI,WAAW,EAAEC,UAAU,EAAE;MACxD,MAAMC,MAAM,GAAG,IAAAV,KAAA,CAAU,CAAC;MAC1B,MAAMH,KAAK,GAAG,IAAI,CAACE,CAAC;MACpB,IAAIF,KAAK,EAAE;QACV,MAAMc,QAAQ,GAAGd,KAAK,GAAG,CAAC,GAAGW,WAAW,GAAGC,UAAU;QACrD,IAAIE,QAAQ,EAAE;UACb,IAAI;YACHhB,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACV,CAAC,CAAC,CAAC;UACrC,CAAC,CAAC,OAAOW,CAAC,EAAE;YACXjB,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEE,CAAC,CAAC;UACtB;UACA,OAAOF,MAAM;QACd,CAAC,MAAM;UACN,OAAO,IAAI;QACZ;MACD;MACA,IAAI,CAACR,CAAC,GAAG,UAASW,KAAK,EAAE;QACxB,IAAI;UACH,MAAMf,KAAK,GAAGe,KAAK,CAACZ,CAAC;UACrB,IAAIY,KAAK,CAACd,CAAC,GAAG,CAAC,EAAE;YAChBJ,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEF,WAAW,GAAGA,WAAW,CAACV,KAAK,CAAC,GAAGA,KAAK,CAAC;UAC7D,CAAC,MAAM,IAAIW,UAAU,EAAE;YACtBd,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAED,UAAU,CAACX,KAAK,CAAC,CAAC;UACtC,CAAC,MAAM;YACNH,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEZ,KAAK,CAAC;UAC1B;QACD,CAAC,CAAC,OAAOc,CAAC,EAAE;UACXjB,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEE,CAAC,CAAC;QACtB;MACD,CAAC;MACD,OAAOF,MAAM;IACd,CAAC;IACD,OAAAV,KAAA;EACD,CAAC,CAAE,CAAC;EA6BG,SAASc,cAAcA,CAACC,QAAQ,EAAE;IACxC,OAAOA,QAAQ,YAAYf,KAAK,IAAIe,QAAQ,CAAChB,CAAC,GAAG,CAAC;EACnD;EA4LO,SAASiB,IAAIA,CAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;IACxC,IAAIC,KAAK;IACT,SAAS;MACR,IAAIC,cAAc,GAAGJ,IAAI,CAAC,CAAC;MAC3B,IAAIH,cAAc,CAACO,cAAc,CAAC,EAAE;QACnCA,cAAc,GAAGA,cAAc,CAACpB,CAAC;MAClC;MACA,IAAI,CAACoB,cAAc,EAAE;QACpB,OAAOX,MAAM;MACd;MACA,IAAIW,cAAc,CAACjB,IAAI,EAAE;QACxBgB,KAAK,GAAG,CAAC;QACT;MACD;MACA,IAAIV,MAAM,GAAGS,IAAI,CAAC,CAAC;MACnB,IAAIT,MAAM,IAAIA,MAAM,CAACN,IAAI,EAAE;QAC1B,IAAIU,cAAc,CAACJ,MAAM,CAAC,EAAE;UAC3BA,MAAM,GAAGA,MAAM,CAACX,CAAC;QAClB,CAAC,MAAM;UACNqB,KAAK,GAAG,CAAC;UACT;QACD;MACD;MACA,IAAIF,MAAM,EAAE;QACX,IAAII,WAAW,GAAGJ,MAAM,CAAC,CAAC;QAC1B,IAAII,WAAW,IAAIA,WAAW,CAAClB,IAAI,IAAI,CAACU,cAAc,CAACQ,WAAW,CAAC,EAAE;UACpEF,KAAK,GAAG,CAAC;UACT;QACD;MACD;IACD;IACA,IAAIxB,IAAI,GAAG,IAAII,KAAK,CAAC,CAAC;IACtB,IAAIuB,MAAM,GAAG5B,OAAO,CAACQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC;IACxC,CAACwB,KAAK,KAAK,CAAC,GAAGC,cAAc,CAACjB,IAAI,CAACoB,gBAAgB,CAAC,GAAGJ,KAAK,KAAK,CAAC,GAAGV,MAAM,CAACN,IAAI,CAACqB,gBAAgB,CAAC,GAAGH,WAAW,CAAClB,IAAI,CAACsB,kBAAkB,CAAC,EAAEtB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;IAC/J,OAAO3B,IAAI;IACX,SAAS6B,gBAAgBA,CAAC3B,KAAK,EAAE;MAChCY,MAAM,GAAGZ,KAAK;MACd,GAAG;QACF,IAAIoB,MAAM,EAAE;UACXI,WAAW,GAAGJ,MAAM,CAAC,CAAC;UACtB,IAAII,WAAW,IAAIA,WAAW,CAAClB,IAAI,IAAI,CAACU,cAAc,CAACQ,WAAW,CAAC,EAAE;YACpEA,WAAW,CAAClB,IAAI,CAACsB,kBAAkB,CAAC,CAACtB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;YACzD;UACD;QACD;QACAF,cAAc,GAAGJ,IAAI,CAAC,CAAC;QACvB,IAAI,CAACI,cAAc,IAAKP,cAAc,CAACO,cAAc,CAAC,IAAI,CAACA,cAAc,CAACpB,CAAE,EAAE;UAC7EN,OAAO,CAACC,IAAI,EAAE,CAAC,EAAEc,MAAM,CAAC;UACxB;QACD;QACA,IAAIW,cAAc,CAACjB,IAAI,EAAE;UACxBiB,cAAc,CAACjB,IAAI,CAACoB,gBAAgB,CAAC,CAACpB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;UAC1D;QACD;QACAb,MAAM,GAAGS,IAAI,CAAC,CAAC;QACf,IAAIL,cAAc,CAACJ,MAAM,CAAC,EAAE;UAC3BA,MAAM,GAAGA,MAAM,CAACT,CAAC;QAClB;MACD,CAAC,QAAQ,CAACS,MAAM,IAAI,CAACA,MAAM,CAACN,IAAI;MAChCM,MAAM,CAACN,IAAI,CAACqB,gBAAgB,CAAC,CAACrB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;IACnD;IACA,SAASC,gBAAgBA,CAACH,cAAc,EAAE;MACzC,IAAIA,cAAc,EAAE;QACnBX,MAAM,GAAGS,IAAI,CAAC,CAAC;QACf,IAAIT,MAAM,IAAIA,MAAM,CAACN,IAAI,EAAE;UAC1BM,MAAM,CAACN,IAAI,CAACqB,gBAAgB,CAAC,CAACrB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;QACnD,CAAC,MAAM;UACNE,gBAAgB,CAACf,MAAM,CAAC;QACzB;MACD,CAAC,MAAM;QACNf,OAAO,CAACC,IAAI,EAAE,CAAC,EAAEc,MAAM,CAAC;MACzB;IACD;IACA,SAASgB,kBAAkBA,CAAA,EAAG;MAC7B,IAAIL,cAAc,GAAGJ,IAAI,CAAC,CAAC,EAAE;QAC5B,IAAII,cAAc,CAACjB,IAAI,EAAE;UACxBiB,cAAc,CAACjB,IAAI,CAACoB,gBAAgB,CAAC,CAACpB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;QAC3D,CAAC,MAAM;UACNC,gBAAgB,CAACH,cAAc,CAAC;QACjC;MACD,CAAC,MAAM;QACN1B,OAAO,CAACC,IAAI,EAAE,CAAC,EAAEc,MAAM,CAAC;MACzB;IACD;EACD;EAAC,MAnUMiB,QAAQ,GAAApC,sBAAA,CAAAP,UAAA;EAkiBR,SAAS4C,MAAMA,CAACT,IAAI,EAAEU,OAAO,EAAE;IACrC,IAAI;MACH,IAAInB,MAAM,GAAGS,IAAI,CAAC,CAAC;IACpB,CAAC,CAAC,OAAMP,CAAC,EAAE;MACV,OAAOiB,OAAO,CAACjB,CAAC,CAAC;IAClB;IACA,IAAIF,MAAM,IAAIA,MAAM,CAACN,IAAI,EAAE;MAC1B,OAAOM,MAAM,CAACN,IAAI,CAAC,KAAK,CAAC,EAAEyB,OAAO,CAAC;IACpC;IACA,OAAOnB,MAAM;EACd;EAAC,MA1iBMoB,SAAS,GAAAvC,sBAAA,CAAAN,WAAA;EAAA,MACT8C,QAAQ,GAAAxC,sBAAA,CAAAL,UAAA;EAAA,MACN8C,QAAQ,GAAA7C,UAAA;EAAA,MACR8C,SAAS,GAAA7C,iBAAA;EAAA,MACX8C,oBAAoB,GAAA3C,sBAAA,CAAAF,sBAAA;EAAA,MACpB8C,kBAAkB,GAAA5C,sBAAA,CAAAD,oBAAA;EAyEzB,MAAM8C,QAAQ,GAAG,4CAA4C;IAC5DC,kBAAkB,GAAGD,QAAQ,GAAG,yBAAyB,GAAG,WAAW;IACvEE,yBAAyB,GAAGF,QAAQ,GAAG,yBAAyB,GAAG,2BAA2B;IAC9FG,mBAAmB,GAAGF,kBAAkB,GAAG,SAAS;IACpDG,kBAAkB,GAAG,CAAC;IACtBC,kBAAkB,GAAG,SAAAA,CAAUC,KAAa,EAAEC,CAAS,EAAE;MACxD,OAAOC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEH;MAAE,CAAC,EAAE,UAAU1C,CAAC,EAAE8C,CAAC,EAAE;QAChD,OAAOL,KAAK,GAAG,GAAG,IAAIK,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;MACtC,CAAC,CAAC;IACH,CAAC;EAEF,MAAMC,gBAAgB,GAAG;MACvBC,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAE,kBAAkB;MACxBC,QAAQ,EAAE,WAAW;MACrBC,oBAAoB,EAAE,qBAAqB;MAC3CC,cAAc,EAAE,CACf,UAAU,EACV,YAAY,EACZ,gBAAgB,EAChB,cAAc,EACd,OAAO,EACP,aAAa,EACb,MAAM,EACN,WAAW,EACX,kBAAkB,EAClB,MAAM,CACN;MACDC,SAAS,EAAE,kCAAkC;MAC7CC,cAAc,EAAE,qBAAqB;MACrCC,qBAAqB,EAAE;IACxB,CAAC;IACDC,aAA0C,GAAG;MAC5C,yCAAyC,EAAEhB,kBAAkB,CAAC,sCAAsC,EAAE,CAAC,CAAC;MACxG,kBAAkB,EAAEA,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,CAAC;MAC5D,oBAAoB,EAAEA,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,CAAC;MAChEiB,OAAO,EAAEjB,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAC;MACzCkB,aAAa,EAAElB,kBAAkB,CAAC,eAAe,EAAE,CAAC,CAAC;MACrD,mBAAmB,EAAEA,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,CAAC;MAC/DmB,KAAK,EAAEnB,kBAAkB,CAAC,OAAO,EAAE,CAAC,CAAC;MACrC,0BAA0B,EAAEA,kBAAkB,CAAC,wBAAwB,EAAE,CAAC,CAAC;MAC3E,cAAc,EAAEA,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC;MACpD/C,OAAO,EAAE,CAAC,aAAa;IACxB,CAAC;;EAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfA,MAgBqBmE,SAAS,GAASvD,aAAa,CAAAwD,MAAA;IAanCC,QAAQ,EAAoB;MAC3CC,OAAO,EAAE,cAAc;MACvBC,UAAU,EAAE;QACX;AACH;AACA;AACA;AACA;QACGC,GAAG,EAAE;UAAEC,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAS,CAAC;QAC9E;AACH;AACA;AACA;AACA;QACGH,IAAI,EAAE;UACLA,IAAI,EAAE,uBAAuB;UAC7BC,KAAK,EAAE,MAAM;UACbE,UAAU,EAAE,QAAQ;UACpBD,YAAY,EAAErC,QAAQ,CAACuC;QACxB,CAAC;QACD;AACH;AACA;AACA;AACA;QACGC,aAAa,EAAE;UAAEL,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAS,CAAC;QACxF;AACH;AACA;AACA;QACGG,cAAc,EAAE;UAAEN,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAG,CAAC;QACnE;AACH;AACA;QACGK,UAAU,EAAE;UAAEP,IAAI,EAAE,SAAS;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAC;QACnE;AACH;AACA;AACA;AACA;QACGM,aAAa,EAAE;UAAER,IAAI,EAAE,SAAS;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,IAAI;UAAEC,UAAU,EAAE;QAAS;MAC3F,CAAC;MACDM,YAAY,EAAE;QACb;AACH;AACA;QACGC,SAAS,EAAE;UAAEV,IAAI,EAAE,wBAAwB;UAAEW,YAAY,EAAE,WAAW;UAAEC,QAAQ,EAAE,IAAI;UAAET,UAAU,EAAE;QAAS;MAC9G;IACD,CAAC;IAID;AACD;AACA;AACA;AACA;AACA;IACQU,WAAW,WAAAC,aAACC,EAAW,EAAEC,QAAiC,EAAE;MAClEC,wCAAA,OAAMF,EAAE,EAAEC,QAAQ;IACnB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACQE,IAAI,WAAAC,MAAA,EAAS;MACnBC,iCAAA;MAEA,IAAI,CAACC,SAAS,GAAG,IAAI9G,SAAS,CAAC,IAAI,CAAC+G,KAAK,CAAC,CAAC,GAAG,eAAe,EAAE;QAC9DC,WAAW,EAAE,KAAK;QAClBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACT,CAAC,CAAC,CAACC,aAAa,CAAC,6DAA6D,CAAC;MAE/E,IAAI,CAACC,cAAc,CAAC,CAAC,CAACC,UAAU,CAAC,IAAI,CAACP,SAAS,CAAC;MAChD,IAAI,CAACQ,WAAW,CAAC,OAAO,EAAE,IAAI,CAACC,WAAW,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;MAChE,IAAI,CAACC,SAAS,GAAGxH,QAAQ,CAACyH,WAAW,CAAC,CAAC;MAEvC,MAAMC,QAAQ,GAAG,IAAI1E,QAAQ,CAAC,GAAG,IAAI,CAAC8D,KAAK,CAAC,CAAC,aAAa,EAAE;QAC3Da,KAAK,EAAE,IAAI,CAACL,WAAW,CAACC,OAAO,CAAC,SAAS,CAAC;QAC1CK,IAAI,EAAE,iBAAiB;QACvBC,KAAK,EAAE,IAAI,CAACC,cAAc,CAACtG,IAAI,CAAC,IAAI;MACrC,CAAC,CAAC;MACF,IAAI,CAACuG,cAAc,CAAC,WAAW,EAAEL,QAAQ,CAAC;MAC1CpE,SAAS,CAACoE,QAAQ,EAAE,YAAY,CAAC;IAClC,CAAC;IAED;AACD;AACA;AACA;AACA;IAEcM,OAAO,WAAAC,SAAA;MAAA,IAAG;QAAA,MAAA/F,KAAA,GACD,IAAI;QAAzB,MAAMgG,IAAY,GAAGhG,KAAA,CAAKiG,MAAM,CAAC,CAAC;QAAC,MAAAC,MAAA;UAAA,IAC/BF,IAAI,IAAI,CAAChG,KAAA,CAAKmG,WAAW,CAAC,YAAY,CAAC;YAAA,OAAAC,OAAA,CAAAC,OAAA,CAClBrG,KAAA,CAAKsG,kBAAkB,CAACN,IAAI,CAAC,EAAAzG,IAAA,WAAAgH,qBAAA;cAArDvG,KAAA,CAAKwG,UAAU,GAAAD,qBAAsC;cACrDvG,KAAA,CAAK2E,SAAS,CAAC8B,QAAQ,CAACzG,KAAA,CAAKwG,UAAU,CAAC;YAAC;UAAA;YAAA,MAAAE,KAAA;cAAA,IAC/B1G,KAAA,CAAKmG,WAAW,CAAC,YAAY,CAAC;gBACxCnG,KAAA,CAAK2G,SAAS,GAAG3G,KAAA,CAAK2G,SAAS,IAAI,KAAK;gBAAC,OAAAP,OAAA,CAAAC,OAAA,CACd/E,kBAAkB,CAACiE,WAAW,CACxDlE,oBAAoB,CAACuF,kBAAkB,CAAA5G,KAAK,CAAC,EAC7CqB,oBAAoB,CAACwF,iBAAiB,CAAA7G,KAAK,CAC5C,CAAC,EAAAT,IAAA,WAAAuH,qBAAA;kBAHD9G,KAAA,CAAK+G,aAAa,GAAAD,qBAGjB;kBAAC,OAAAV,OAAA,CAAAC,OAAA,CACqBrG,KAAA,CAAK+G,aAAa,CAACC,IAAI,CAAC,CAAC,EAAAzH,IAAA,WAAA0H,qBAAA;oBAAhDjH,KAAA,CAAKkH,SAAS,GAAAD,qBAAkC;oBAChD,MAAME,kBAAkB,GAAGnH,KAAA,CAAKoH,gBAAgB,CAAC,CAAC;oBAAC,IAC/CD,kBAAkB;sBACrB,KAAKnH,KAAA,CAAKqH,iBAAiB,CAACF,kBAAkB,CAAC;oBAAC;sBAEhDnH,KAAA,CAAKsH,eAAe,CAAC,CAAC;oBAAC;kBAAA;gBAAA;cAAA;gBAGxBtH,KAAA,CAAKsH,eAAe,CAAC,CAAC;cAAC;YAAA;YAAA,IAAAZ,KAAA,IAAAA,KAAA,CAAAnH,IAAA,SAAAmH,KAAA,CAAAnH,IAAA;UAAA;QAAA;QAAA,OAAA6G,OAAA,CAAAC,OAAA,CAAAH,MAAA,IAAAA,MAAA,CAAA3G,IAAA,GAAA2G,MAAA,CAAA3G,IAAA;MAEzB,CAAC,QAAAQ,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;IACQqH,gBAAgB,WAAAG,kBAAA,EAAW;MACjC,MAAMJ,kBAAkB,GAAG,IAAI,CAAChB,WAAW,CAAC,eAAe,CAAW;MACtE,IAAIgB,kBAAkB,EAAE;QACvB,OAAOA,kBAAkB;MAC1B,CAAC,MAAM;QACN,OAAO,IAAI,CAACD,SAAS,EAAEM,eAAe,EAAEC,iBAAiB;MAC1D;IACD,CAAC;IAED;AACD;AACA;AACA;IACQxB,MAAM,WAAAyB,QAAA,EAAW;MACvB,OAAO,IAAI,CAACvB,WAAW,CAAC,KAAK,CAAC;IAC/B,CAAC;IAED;AACD;AACA;AACA;IAEC;AACD;AACA;AACA;AACA;AACA;IACeG,kBAAkB,WAAAqB,oBAAC3B,IAAY;MAAA,IAAqB;QAAA,MAAA4B,MAAA,GACjD,IAAI;QAApB,MAAMC,OAAO,GAAGD,MAAA,CAAKE,SAAS,CAAC,CAA0B;QACzD,OAAA1B,OAAA,CAAAC,OAAA,CAAO,IAAID,OAAO,CAAEC,OAAO,IAAK;UAC/B,MAAMG,UAAU,GAAG,IAAIxI,QAAQ,CAACgI,IAAI,CAAC;UACrCQ,UAAU,CAACuB,qBAAqB,CAAC,QAAQ,CAAC;UAC1CvB,UAAU,CAACwB,sBAAsB,CAAEC,MAAa,IAAK;YACpD,KAAK;cAAA,IAAa;gBACjB,IAAI,CAACL,MAAA,CAAKjB,SAAS,EAAE;kBACpBkB,OAAO,EAAEK,aAAa,CAAC,MAAM,EAAE;oBAAEC,MAAM,EAAE,IAAI;oBAAEC,KAAK,EAAEzG;kBAAmB,CAAC,CAAC;kBAC3EiG,MAAA,CAAKjB,SAAS,GAAG,IAAI;gBACtB;gBACA,MAAM0B,SAAS,GAAGJ,MAAM,CAACK,SAAS,CAAW,CAAC,CAACxC,OAAO,CAAC,CAAgB;gBAAC,OAAAM,OAAA,CAAAC,OAAA,CAClEuB,MAAA,CAAKW,YAAY,CAACF,SAAS,EAAE,CAAC,CAAC,EAAA9I,IAAA;kBACrCqI,MAAA,CAAKtC,SAAS,CAACkD,OAAO,CAAC,gBAAgB,EAAE,oBAAoB,EAAE;oBAAEC,SAAS,EAAE,KAAK;oBAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC;kBAAE,CAAC,CAAC;kBACtGtC,OAAO,CAACG,UAAU,CAAC;gBAAC;cACrB,CAAC,QAAAzG,CAAA;gBAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;cAAA;YAAA,EAAE,CAAC;UACL,CAAC,CAAC;UACFyG,UAAU,CAACoC,mBAAmB,CAAC,MAAM;YACpChB,MAAA,CAAKN,eAAe,CAAC,CAAC;YACtB,IAAI,CAACM,MAAA,CAAKjB,SAAS,EAAE;cACpBkB,OAAO,EAAEK,aAAa,CAAC,MAAM,EAAE;gBAAEC,MAAM,EAAE,KAAK;gBAAEC,KAAK,EAAE;cAAE,CAAC,CAAC;cAC3DR,MAAA,CAAKjB,SAAS,GAAG,IAAI;YACtB;YACAiB,MAAA,CAAKtC,SAAS,CAACkD,OAAO,CAAC,gBAAgB,EAAE,oBAAoB,EAAE;cAAEC,SAAS,EAAE,IAAI;cAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC;YAAE,CAAC,CAAC;YACrGtC,OAAO,CAACG,UAAU,CAAC;UACpB,CAAC,CAAC;QACH,CAAC,CAAC;MACH,CAAC,QAAAzG,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;IACewI,YAAY,WAAAM,cAACR,SAAmB,EAAES,SAAiB;MAAA,IAAE;QAAA,MAAAC,MAAA,GAG3D,IAAI;QAAA,SAAAC,OAAA;UAGX,IAAI,CAAC,CAACX,SAAS,EAAEY,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAACZ,SAAS,EAAEY,aAAa,CAAC,MAAM,CAAC,EAAE;YAC5EC,YAAY,GAAG;cACdC,IAAI,EAAE,gBAAgB;cACtBlH,MAAM,EAAE6G,SAAS,IAAInH;YACtB,CAAC;UACF,CAAC,MAAM,IAAI,CAAC,CAAC0G,SAAS,EAAEY,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAACZ,SAAS,EAAEY,aAAa,CAAC,OAAO,CAAC,EAAE;YACrFC,YAAY,GAAG;cACdC,IAAI,EAAE,SAAS;cACflH,MAAM,EAAE6G,SAAS,IAAInH;YACtB,CAAC;UACF,CAAC,MAAM,IAAI,CAAC,CAAC0G,SAAS,EAAEY,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAACZ,SAAS,EAAEY,aAAa,CAAC,MAAM,CAAC,EAAE;YAC1FC,YAAY,GAAG;cACdC,IAAI,EAAE,QAAQ;cACdlH,MAAM,EAAE6G,SAAS,IAAInH;YACtB,CAAC;UACF,CAAC,MAAM;YACNoH,MAAA,CAAKzB,eAAe,CAAC,CAAC;YACtB;UACD;UACAyB,MAAA,CAAKK,YAAY,CAACL,MAAA,CAAKpE,SAAS,EAAEuE,YAAY,CAAC;QAAC;QAxBhD,IAAIA,YAA0B;QAAC,MAAAG,MAAA;UAAA,IAC3B,CAAChB,SAAS,EAAEY,aAAa,CAAC,YAAY,CAAC;YAAA,OAAA7C,OAAA,CAAAC,OAAA,CACpC0C,MAAA,CAAKO,mBAAmB,CAACjB,SAAS,EAAES,SAAS,IAAInH,kBAAkB,CAAC,EAAApC,IAAA;UAAA;QAAA;QAAA,OAAA6G,OAAA,CAAAC,OAAA,CAAAgD,MAAA,IAAAA,MAAA,CAAA9J,IAAA,GAAA8J,MAAA,CAAA9J,IAAA,CAAAyJ,MAAA,IAAAA,MAAA,CAAAK,MAAA;MAuB5E,CAAC,QAAAtJ,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;IACQuH,eAAe,WAAAiC,iBAAA,EAAS;MAC9B,IAAI,IAAI,CAACpD,WAAW,CAAC,YAAY,CAAC,EAAE;QACnC,IAAI,CAACqD,oBAAoB,CAAC,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC9E,SAAS,CAAC8E,UAAU,CAAC,KAAK,CAAC;MACjC,CAAC,MAAM;QACN,CAAC,IAAI,CAACxE,cAAc,CAAC,CAAC,EAAE6C,SAAS,CAAC,CAAC,EAAa2B,UAAU,CAAC,KAAK,CAAC;QACjE,IAAI,CAACtE,WAAW,CAAC,eAAe,EAAE,KAAK,CAAC;MACzC;IACD,CAAC;IAEYuE,MAAM,WAAAC,QAACtG,GAAW;MAAA,IAAE;QAAA,MAAAuG,MAAA,GAChC,IAAI;QAAJA,MAAA,CAAKzE,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC;QACrCyE,MAAA,CAAKzE,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC;QACvCyE,MAAA,CAAKJ,oBAAoB,CAAC,CAAC,CAACC,UAAU,CAAC,KAAK,CAAC;QAC7C,CAACG,MAAA,CAAK3E,cAAc,CAAC,CAAC,EAAE6C,SAAS,CAAC,CAAC,EAAa2B,UAAU,CAAC,IAAI,CAAC;QAChEG,MAAA,CAAKjF,SAAS,CAAC8E,UAAU,CAAC,IAAI,CAAC;QAC/BG,MAAA,CAAKzE,WAAW,CAAC,KAAK,EAAE9B,GAAG,CAAC;QAAC,OAAA+C,OAAA,CAAAC,OAAA,CACvBuD,MAAA,CAAK9D,OAAO,CAAC,CAAC,EAAAvG,IAAA;MACrB,CAAC,QAAAQ,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACSqJ,YAAY,WAAAS,cAACC,UAAqB,EAAEZ,YAA0B,EAAQ;MAC7E,IAAIA,YAAY,EAAE;QACjBY,UAAU,CAACC,eAAe,CAAC,OAAO,EAAE;UACnCZ,IAAI,EAAED,YAAY,CAACC,IAAI;UACvBlH,MAAM,EAAEiH,YAAY,CAACjH,MAAM;UAC3B+H,iBAAiB,EAAE,KAAK;UACxBC,OAAO,EAAEA,CAACC,GAAW,EAAEC,QAAiB,KAAK;YAC5C,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,SAAS,CAAC,CAAgB;YACpD,IAAIC,KAAK;YACT,IAAIF,QAAQ,CAACG,oBAAoB,CAAC,MAAM,CAAC,CAACtI,MAAM,GAAG,CAAC,EAAE;cACrDqI,KAAK,GAAG,IAAIpJ,QAAQ,CAAC,EAAE,EAAE;gBACxBmC,GAAG,EAAE+G,QAAQ,CAACG,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;gBACnE/E,KAAK,EAAE2E,QAAQ,CAACG,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;gBACtEC,QAAQ,EAAEL,QAAQ,CAACG,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;gBAC/EE,QAAQ,EAAEN,QAAQ,CAACG,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;gBAC5EG,MAAM,EAAE,IAAI,CAACC,UAAU,CAACR,QAAQ,CAACG,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;cAC1F,CAAC,CAAC;YACH,CAAC,MAAM;cACNF,KAAK,GAAG,IAAIrJ,SAAS,CAAC,EAAE,EAAE;gBACzBwE,KAAK,EAAE2E,QAAQ,CAACG,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;gBACtEC,QAAQ,EAAE,IAAI,CAACrF,WAAW,CAACC,OAAO,CAAC,qBAAqB,CAAW;gBACnEqF,QAAQ,EAAEN,QAAQ,CAACG,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;gBAC5EG,MAAM,EAAEP,QAAQ,CAACG,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC;cACpD,CAAC,CAAC;YACH;YACA,IAAI,CAAC3E,cAAc,CAAC,WAAW,EAAEyE,KAAK,EAAE,IAAI,CAAC;YAC7C,OAAOA,KAAK,CAACO,OAAO,CAAC,CAAC;UACvB;QACD,CAAC,CAAC;MACH;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACevB,mBAAmB,WAAAwB,qBAACzC,SAAmB,EAAES,SAAiB;MAAA,IAAE;QAAA,MAAAiC,MAAA,GAG7C,IAAI;QAF3B,IAAI7I,CAAC,GAAG,CAAC;QAAA,MAAA8I,MAAA,GAAA7K,IAAA;UAAA,OAAE+B,CAAC,GAAG4G,SAAS;QAAA;UAAA,OAAE5G,CAAC,EAAE;QAAA,eAAE;UACnC,MAAM+I,YAAY,GAAG5C,SAAS,EAAEkC,oBAAoB,CAAC,MAAM,CAAC,CAACrI,CAAC,CAAC;UAAC,OAAAkE,OAAA,CAAAC,OAAA,CACrC0E,MAAA,CAAKG,YAAY,CAACD,YAAY,CAACV,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB,CAAC,EAAAjL,IAAA,WAA1GyG,IAAY;YAClB,MAAMmF,SAAS,GAAG9C,SAAS,CAAC+C,aAAa,CAAC,UAAU,CAAC;YACrDD,SAAS,CAACX,WAAW,GAAGxE,IAAI;YAC5BiF,YAAY,CAACI,WAAW,CAACF,SAAS,CAAC;UAAC;QACrC,CAAC;QAAA,OAAA/E,OAAA,CAAAC,OAAA,CAAA2E,MAAA,IAAAA,MAAA,CAAAzL,IAAA,GAAAyL,MAAA,CAAAzL,IAAA;MACF,CAAC,QAAAQ,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACS6K,UAAU,WAAAU,YAACC,UAAkB,EAAU;MAC9C,OAAO,IAAI,CAACC,kBAAkB,CAAC,IAAI7C,IAAI,CAAC4C,UAAU,CAAC,CAAC;IACrD,CAAC;IAED;AACD;AACA;AACA;IACQE,cAAc,WAAAC,gBAAA,EAAG;MACvB,OAAO,IAAI,CAACC,YAAY;IACzB,CAAC;IAED;AACD;AACA;AACA;AACA;IACST,YAAY,WAAAU,cAACC,SAAiB,EAAmB;MACxD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;QACpC,MAAMC,OAAO,GAAGtO,GAAG,CAACC,EAAE,CAACsO,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;QAC5E,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC;QAC5C,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC;QAC5C,OAAO,GAAGH,OAAO,YAAY,IAAI,CAACG,KAAK,MAAM;MAC9C,CAAC;MAED,OAAOC,KAAK,CAACN,SAAS,CAAC,CACrBtM,IAAI,CAAE6M,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzB9M,IAAI,CAAE+M,KAAK,IAAK;QAChB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAAC,yEAAyE,CAAC;QACvG,OAAOzK,KAAK,CAAC0K,OAAO,CAACF,QAAQ,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,GAAGT,sBAAsB,CAAC,CAAC;MACvF,CAAC,CAAC,CACDY,KAAK,CAACZ,sBAAsB,CAAC;IAChC,CAAC;IAED;AACD;AACA;AACA;AACA;IACSN,kBAAkB,WAAAmB,oBAACC,KAAW,EAAU;MAC/C,MAAMC,sBAAsB,GAAG9O,UAAU,CAAC+O,mBAAmB,CAAC;QAC7DC,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,IAAI;QACdC,aAAa,EAAE;MAChB,CAAC,CAAC;MACF,OAAOJ,sBAAsB,CAACK,MAAM,CAAC,IAAIvE,IAAI,CAACiE,KAAK,CAAC,CAAC;IACtD,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACcvF,iBAAiB,WAAA8F,mBAACC,OAAe;MAAA,IAAiB;QAAA,MAAAC,MAAA,GAE7D,IAAI;QAAA,OAAAjH,OAAA,CAAAC,OAAA,CAAAtF,MAAA,aADD;UACHsM,MAAA,CAAK1I,SAAS,CAAC8E,UAAU,CAAC,IAAI,CAAC;UAC/B4D,MAAA,CAAK7D,oBAAoB,CAAC,CAAC,CAACC,UAAU,CAAC,KAAK,CAAC;UAAC,OAAArD,OAAA,CAAAC,OAAA,CACvBgH,MAAA,CAAKtG,aAAa,EAAEC,IAAI,CAAC,CAAC,EAAAzH,IAAA,WAAA+N,qBAAA;YAAjDD,MAAA,CAAKnG,SAAS,GAAAoG,qBAAmC;YACjDD,MAAA,CAAK1B,YAAY,GAAI0B,MAAA,CAAKnG,SAAS,EAAEqG,WAAW,IAAiE;cAAEC,KAAK,EAAE;YAAG,CAAC;YAAC,OAAApH,OAAA,CAAAC,OAAA,CAC9FD,OAAO,CAACqH,GAAG,CAAC,CAC5CJ,MAAA,CAAKK,sBAAsB,CAACN,OAAO,CAAC,EACpCC,MAAA,CAAKM,iBAAiB,CAACP,OAAO,EAAEC,MAAA,CAAK1B,YAAY,CAACiC,0BAA0B,CAAC,CAC7E,CAAC,EAAArO,IAAA,WAAAsO,IAAA;cAAA,IAHE,CAACC,UAAU,EAAEC,MAAM,CAAC,GAAAF,IAAA;cAIxB,IAAIE,MAAM,CAAC9L,MAAM,KAAK,CAAC,IAAI6L,UAAU,KAAK,CAAC,EAAE;gBAC5C,MAAM,IAAIE,KAAK,CAAC,CAAC;cAClB;cACA;cACA,IAAIX,MAAA,CAAK1B,YAAY,EAAE6B,KAAK,EAAEvL,MAAM,EAAE;gBACrC8L,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAEC,SAAS,IAAK;kBACrC,OAAOb,MAAA,CAAK1B,YAAY,EAAE6B,KAAK,CAACW,QAAQ,CAACD,SAAS,CAACzI,KAAe,CAAC;gBACpE,CAAC,CAAC;cACH,CAAC,MAAM,IAAI4H,MAAA,CAAK1B,YAAY,EAAE6B,KAAK,EAAEvL,MAAM,KAAK,CAAC,EAAE;gBAClD,MAAM,IAAI+L,KAAK,CAAC,+BAA+B,CAAC;cACjD;cACAX,MAAA,CAAKe,kBAAkB,CAACL,MAAM,CAAC;YAAC;UAAA;QACjC,CAAC,YAAQM,GAAG,EAAE;UACbzQ,GAAG,CAAC0Q,KAAK,CAACD,GAAa,CAAC;UACxBhB,MAAA,CAAK/F,eAAe,CAAC,CAAC;QACvB,CAAC;MACF,CAAC,QAAAvH,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACc2N,sBAAsB,WAAAa,wBAACnB,OAAe;MAAA,IAAmB;QAAA,MAAAoB,MAAA,GAErE,IAAI;QAAA,SAAAC,OAAAC,MAAA;UAAA,OAAAC,MAAA,GAAAD,MAAA,GAAAtI,OAAA,CAAAC,OAAA,CAIQqI,MAAA,CAAoBE,IAAI,CAAC,CAAC,EAAArP,IAAA,CAAAsP,MAAA;QAAA;QAAA,SAAAA,OAAAC,iBAAA;UAHtCN,MAAA,CAAKO,oBAAoB,CAAC/I,IAAI,CAAC,GAC9B2I,MAAA,GAAAG,iBAAA,GAAAA,iBAE0D;UAC3D,OAAON,MAAA,CAAKO,oBAAoB,CAAC/I,IAAI,CAAC;QAAC;QANvC,IAAIA,IAAI,GAAGgJ,SAAS,CAACtN,mBAAmB,GAAG,mBAAmB,GAAG,MAAM,GAAG,GAAG,GAAG0L,OAAO,GAAG,GAAG,CAAC;QAC9FoB,MAAA,CAAKO,oBAAoB,GAAGP,MAAA,CAAKO,oBAAoB,GAAGP,MAAA,CAAKO,oBAAoB,GAAG,CAAC,CAAC;QAAC,MAAAJ,MAAA,GAEtFH,MAAA,CAAKO,oBAAoB,CAAC/I,IAAI,CAAC,KAAKiJ,SAAS;QAAA,OAAA7I,OAAA,CAAAC,OAAA,CAAAsI,MAAA,GAAAF,MAAA,CAAAI,MAAA,CAC1CL,MAAA,CAAKO,oBAAoB,CAAC/I,IAAI,CAAC,KAAAI,OAAA,CAAAC,OAAA,CAChB8F,KAAK,CAACnG,IAAI,CAAC,EAAAzG,IAAA,CAAAkP,MAAA;MAE/B,CAAC,QAAA1O,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACc4N,iBAAiB,WAAAuB,mBAAC9B,OAAe,EAAEQ,0BAAmC;MAAA,IAA8B;QAAA,MAAAuB,MAAA,GAElG,IAAI;QAAA,OAAA/I,OAAA,CAAAC,OAAA,CAAAtF,MAAA,aADd;UACH,MAAMiF,IAAI,GAAGmJ,MAAA,CAAKC,qBAAqB,CAAC;YAAEC,QAAQ,EAAEjC,OAAO;YAAEQ,0BAA0B,EAAEA;UAA2B,CAAC,CAAC;UACtHuB,MAAA,CAAKG,eAAe,GAAGH,MAAA,CAAKG,eAAe,GAAGH,MAAA,CAAKG,eAAe,GAAG,CAAC,CAAC;UACvEH,MAAA,CAAKG,eAAe,CAACtJ,IAAI,CAAC,GACzBmJ,MAAA,CAAKG,eAAe,CAACtJ,IAAI,CAAC,KAAKiJ,SAAS,GACrCE,MAAA,CAAKG,eAAe,CAACtJ,IAAI,CAAC,GACzBmJ,MAAA,CAAKI,eAAe,CAACvJ,IAAI,CAAgC;UAAC,OAAAI,OAAA,CAAAC,OAAA,CACvC8I,MAAA,CAAKG,eAAe,CAACtJ,IAAI,CAAC,EAAAzG,IAAA,WAA5CiQ,SAAS;YACf,MAAMC,SAAoC,GAAG,CAAC,CAAC;YAC/C,MAAM1B,MAAyB,GAAG,EAAE;YACpC,IAAKyB,SAAS,EAAwBvN,MAAM,GAAG,CAAC,EAAE;cAChDuN,SAAS,CAAuBE,OAAO,CAAEC,KAAsB,IAAK;gBACpE,MAAMlK,KAAK,GAAGkK,KAAK,CAACxN,gBAAgB,CAACC,KAAK,CAAc;gBACxD,IAAI,CAACqN,SAAS,CAAChK,KAAK,CAACxG,KAAK,CAAC,EAAE;kBAC5B8O,MAAM,CAAC6B,IAAI,CAAC;oBACXnK,KAAK,EAAEA,KAAK,CAACxG,KAAK;oBAClB0L,MAAM,EAAGgF,KAAK,CAACxN,gBAAgB,CAACG,QAAQ,CAAC,CAAerD,KAAK;oBAC7DyL,QAAQ,EAAEyE,MAAA,CAAKU,kBAAkB,CAACpK,KAAK,CAACxG,KAAK;kBAC9C,CAAC,CAAC;kBACFwQ,SAAS,CAAChK,KAAK,CAACxG,KAAK,CAAC,GAAGwG,KAAK,CAACxG,KAAK;gBACrC;cACD,CAAC,CAAC;YACH;YACA,OAAO8O,MAAM;UAAC;QACf,CAAC,YAAQM,GAAG,EAAE;UACbzQ,GAAG,CAAC0Q,KAAK,CAACD,GAAa,CAAC;UACxB,MAAM,IAAIL,KAAK,CAACK,GAAa,CAAC;QAC/B,CAAC;MACF,CAAC,QAAAtO,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;IACQqP,qBAAqB,WAAAU,uBAACC,KAAgB,EAAE;MAC9C,IAAI/J,IAAI,GAAGxE,kBAAkB,GAAG,uBAAuB,GAAG,GAAG,GAAGuO,KAAK,CAACV,QAAQ,GAAG,GAAG;MACpFrJ,IAAI,GAAG+J,KAAK,CAACtK,KAAK,GAAGO,IAAI,GAAG,yBAAyB,GAAG,GAAG,GAAGgJ,SAAS,CAACe,KAAK,CAACtK,KAAK,CAAC,GAAG,GAAG,GAAGO,IAAI;MACjGA,IAAI,GAAG+J,KAAK,CAACnC,0BAA0B,GAAG5H,IAAI,GAAG,kCAAkC,GAAGA,IAAI;MAC1F,OAAOA,IAAI,GAAG,WAAW;IAC1B,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACcuJ,eAAe,WAAAS,iBAACC,QAAgB;MAAA,IAAE;QAAA,MAAAC,MAAA,GAEU,IAAI;QAAA,OAAA9J,OAAA,CAAAC,OAAA,CAAAtF,MAAA,aADxD;UAAA,OAAAqF,OAAA,CAAAC,OAAA,CACuCD,OAAO,CAACqH,GAAG,CAAC,CAACyC,MAAA,CAAKC,mBAAmB,CAAC,CAAC,EAAED,MAAA,CAAKE,kBAAkB,CAACH,QAAQ,CAAC,CAAC,CAAC,EAAA1Q,IAAA,WAAA8Q,KAAA;YAAA,IAAhH,CAACC,cAAc,EAAEC,SAAS,CAAC,GAAAF,KAAA;YAAA,OAC7BC,cAAc,CAACrO,MAAM,KAAK,CAAC,GACvBsO,SAAS,GAEVL,MAAA,CAAKM,gBAAgB,CAACD,SAAS,EAAED,cAAc,CAAC;UAAA;QACxD,CAAC,YAAQjC,GAAG,EAAE;UACbzQ,GAAG,CAAC0Q,KAAK,CAACD,GAAa,CAAC;QACzB,CAAC;MACF,CAAC,QAAAtO,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACSyQ,gBAAgB,WAAAC,kBAACF,SAA4B,EAAED,cAA+B,EAAE;MACvF,MAAMI,aAAgC,GAAG,EAAE;MAE3CH,SAAS,CAACb,OAAO,CAAExB,SAA0B,IAAK;QACjD,IAAKA,SAAS,CAACyC,QAAQ,CAAe1R,KAAK,KAAK,KAAK,IAAI,CAAEiP,SAAS,CAAC0C,iBAAiB,CAAe3R,KAAK,EAAE;UAC3GyR,aAAa,CAACd,IAAI,CAAC1B,SAAS,CAAC;QAC9B,CAAC,MAAM;UACN,MAAM2C,kBAA4B,GAAI3C,SAAS,CAAC0C,iBAAiB,CAAe3R,KAAK,CAAC6R,KAAK,CAAC,IAAI,CAAC;UACjG,KAAK,IAAIC,gBAAgB,IAAIF,kBAAkB,EAAE;YAChD,MAAMG,iBAAiB,GAAGD,gBAAgB;YAC1C,IAAIC,iBAAiB,IAAI,IAAI,CAACC,UAAU,CAACX,cAAc,EAAES,gBAAgB,CAAC,EAAE;cAC3EL,aAAa,CAACd,IAAI,CAAC1B,SAAS,CAAC;cAC7B;YACD;UACD;QACD;MACD,CAAC,CAAC;MACF,OAAOwC,aAAa;IACrB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACSO,UAAU,WAAAC,YAACZ,cAA+B,EAAEU,iBAAyB,EAAE;MAC9E,MAAMG,eAAe,GAAG,GAAG;MAC3B,IAAIH,iBAAiB,CAAC7C,QAAQ,CAACgD,eAAe,CAAC,EAAE;QAChD,MAAMC,OAAO,GAAGJ,iBAAiB,CAACF,KAAK,CAACK,eAAe,CAAC;QACxD,MAAME,QAAQ,GAAG,CAACD,OAAO,CAACA,OAAO,CAACnP,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,EAAEqP,IAAI,CAAC,CAAC;QAC3D,IAAID,QAAQ,EAAE;UACb,MAAME,KAAK,GAAGjB,cAAc,CAACkB,SAAS,CAAEC,IAAmB,IAAK;YAC/D,OAAOJ,QAAQ,KAAKI,IAAI,EAAEC,SAAS,EAAEC,UAAU,CAAC,cAAc,CAAC,EAAEnO,YAAY,EAAEvE,KAAK;UACrF,CAAC,CAAC;UACF,OAAOsS,KAAK,GAAG,CAAC,CAAC;QAClB;MACD;MACA,OAAO,IAAI;IACZ,CAAC;IAED;AACD;AACA;AACA;IACepB,mBAAmB,WAAAyB,qBAAA;MAAA,IAA6B;QAAA,OAAAxL,OAAA,CAAAC,OAAA,CAAAtF,MAAA,aACzD;UAAA,OAAAqF,OAAA,CAAAC,OAAA,CACoBpI,SAAS,CAAC4T,eAAe,CAAoB,4BAA4B,CAAC,EAAAtS,IAAA,WAA3FuS,QAAQ;YACd,OAAOA,QAAQ,EAAEC,SAAS,CAACC,UAAU,IAAI,EAAE;UAAC;QAC7C,CAAC,YAAQ3D,GAAG,EAAE;UACb,IAAIA,GAAG,YAAYL,KAAK,EAAE;YACzBpQ,GAAG,CAAC0Q,KAAK,CAACD,GAAG,CAAC4D,OAAO,CAAC;UACvB;UACA,OAAO,EAAE;QACV,CAAC;MACF,CAAC,QAAAlS,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACeqQ,kBAAkB,WAAA8B,oBAAClM,IAAY;MAAA,IAA8B;QAAA,MAAAmM,OAAA,GAC1E,IAAI;QAAA,SAAAC,QAAAC,OAAA;UAAA,OAAAC,MAAA,GAAAD,OAAA,GAAAjM,OAAA,CAAAC,OAAA,CAIQgM,OAAA,CAAoBzD,IAAI,CAAC,CAAC,EAAArP,IAAA,CAAAgT,OAAA;QAAA;QAAA,SAAAA,QAAAC,kBAAA;UAHtCL,OAAA,CAAKM,SAAS,CAACzM,IAAI,CAAC,GACnBsM,MAAA,GAAAE,kBAAA,GAAAA,kBAEgF;UACjF,MAAME,gBAAgB,GAAIC,MAAc,IAAKA,MAAM,CAACC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC;UAAC,OAAAxM,OAAA,CAAAC,OAAA,CACzCD,OAAO,CAACqH,GAAG,CAAC,CAC7D0E,OAAA,CAAKM,SAAS,CAACzM,IAAI,CAAC,EACpBmM,OAAA,CAAKU,iBAAiB,CAACV,OAAA,CAAK/K,gBAAgB,CAAC,CAAC,CAAC,CAC/C,CAAC,EAAA7H,IAAA,WAAAuT,KAAA;YAAA,IAHI,CAACC,YAAY,EAAEC,mBAAmB,CAAC,GAAAF,KAAA;YAIzC,MAAMG,KAAwB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAEL,YAAY,CAAmB9T,KAAK,IAAI,EAAE,CAAC,CAAsB;YAC7H,MAAMoU,YAAY,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAEJ,mBAAmB,CAAmB/T,KAAK,IAAI,EAAE,CAAC,CAAsB;YACxH,OAAOgU,KAAK,CAACK,GAAG,CAAEvD,KAAsB,IAAK;cAC5C,MAAMwD,OAAO,GAAGC,MAAM,CAACC,IAAI,CAAC1D,KAAK,CAAC;cAClC,MAAM2D,aAA0B,GAAG,EAAE;cACrCH,OAAO,CAAC7D,OAAO,CAAEiE,MAAM,IAAK;gBAC3B,MAAMC,gBAAgB,GAAGP,YAAY,CAACQ,IAAI,CACxCC,YAA6B,IAAKA,YAAY,EAAEC,UAAU,EAAEC,WAAW,CAAC,CAAC,KAAKL,MAAM,CAACK,WAAW,CAAC,CACnG,CAAC;gBACD,MAAMC,oBAAoB,GAAIL,gBAAgB,EAAEM,cAAc,IAAexB,gBAAgB,CAACiB,MAAM,CAAC;gBACrG5D,KAAK,CAAC4D,MAAM,CAAC,GAAG;kBAAEQ,KAAK,EAAEF,oBAAoB;kBAAEhV,KAAK,EAAE8Q,KAAK,CAAC4D,MAAM;gBAAY,CAAc;gBAC5F,IAAI,CAACxR,gBAAgB,CAACK,cAAc,CAAC2L,QAAQ,CAACwF,MAAM,CAAC,EAAE;kBACtDD,aAAa,CAAC9D,IAAI,CAACG,KAAK,CAAC4D,MAAM,CAAC,CAAC;gBAClC;cACD,CAAC,CAAC;cACF5D,KAAK,CAACqE,IAAI,GAAG;gBACZD,KAAK,EAAEhC,OAAA,CAAK/M,WAAW,CAACC,OAAO,CAAC,cAAc,CAAW;gBACzDpG,KAAK,EAAE8Q,KAAK,CAAC5N,gBAAgB,CAACE,IAAI,CAAW;gBAC7CgK,IAAI,EAAE;cACP,CAAC;cACD0D,KAAK,CAACsE,QAAQ,GAAGpB,KAAK,CAAChR,MAAM,KAAK,CAAC;cACnC8N,KAAK,CAACuE,YAAY,GAAGZ,aAAa;cAClC,OAAO3D,KAAK;YACb,CAAC,CAAC;UAAC;QAAA;QAjCHoC,OAAA,CAAKM,SAAS,GAAGN,OAAA,CAAKM,SAAS,GAAGN,OAAA,CAAKM,SAAS,GAAG,CAAC,CAAC;QAAC,MAAAH,MAAA,GAErDH,OAAA,CAAKM,SAAS,CAACzM,IAAI,CAAC,KAAKiJ,SAAS;QAAA,OAAA7I,OAAA,CAAAC,OAAA,CAAAiM,MAAA,GAAAF,OAAA,CAAAG,OAAA,CAC/BJ,OAAA,CAAKM,SAAS,CAACzM,IAAI,CAAC,KAAAI,OAAA,CAAAC,OAAA,CACL8F,KAAK,CAACnG,IAAI,CAAC,EAAAzG,IAAA,CAAA6S,OAAA;MA8B/B,CAAC,QAAArS,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACe8S,iBAAiB,WAAA0B,mBAACnH,OAAe;MAAA,IAAE;QAAA,MAAAoH,OAAA,GAG/C,IAAI;QAAA,OAAApO,OAAA,CAAAC,OAAA,CAAAtF,MAAA,aAFD;UAAA,SAAA0T,QAAAC,OAAA;YAAA,OAAAC,OAAA,GAAAD,OAAA,GAAAtO,OAAA,CAAAC,OAAA,CAMSqO,OAAA,CAAoB9F,IAAI,CAAC,CAAC,EAAArP,IAAA,CAAAqV,OAAA;UAAA;UAAA,SAAAA,QAAAC,kBAAA;YAHtCL,OAAA,CAAKlF,eAAe,CAACtJ,IAAI,CAAC,GACzB2O,OAAA,GAAAE,kBAAA,GAAAA,kBAEqE;YACtE,OAAOL,OAAA,CAAKlF,eAAe,CAACtJ,IAAI,CAAC;UAAC;UANlC,MAAMA,IAAI,GAAGvE,yBAAyB,GAAG,wBAAwB,GAAG2L,OAAO,GAAG,GAAG;UACjFoH,OAAA,CAAKlF,eAAe,GAAGkF,OAAA,CAAKlF,eAAe,GAAGkF,OAAA,CAAKlF,eAAe,GAAG,CAAC,CAAC;UAAC,MAAAqF,OAAA,GAEvEH,OAAA,CAAKlF,eAAe,CAACtJ,IAAI,CAAC,KAAKiJ,SAAS;UAAA,OAAA0F,OAAA,GAAAF,OAAA,CAAAG,OAAA,CACrCJ,OAAA,CAAKlF,eAAe,CAACtJ,IAAI,CAAC,KAAAI,OAAA,CAAAC,OAAA,CACX8F,KAAK,CAACnG,IAAI,CAAC,EAAAzG,IAAA,CAAAkV,OAAA;QAE/B,CAAC,YAAQpG,GAAG,EAAE;UACb,IAAIA,GAAG,YAAYL,KAAK,EAAE;YACzBpQ,GAAG,CAAC0Q,KAAK,CAACD,GAAG,CAAC4D,OAAO,CAAC;UACvB;UACA,OAAO,EAAE;QACV,CAAC;MACF,CAAC,QAAAlS,CAAA;QAAA,OAAAqG,OAAA,CAAA1F,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;IACSqO,kBAAkB,WAAA0G,oBAACC,KAAwB,EAAE;MACpD,MAAMC,YAAY,GAAG,IAAI,CAACC,cAAc,CAAC/B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC2B,KAAK,CAAC,CAAW,CAAC;MACrF,MAAMlN,OAAO,GAAG,IAAI,CAACC,SAAS,CAAC,CAA0B;MACzD,IAAI,CAAC,IAAI,CAACtB,UAAU,EAAE;QACrB,IAAI,CAACA,UAAU,GAAG,IAAIxI,QAAQ,CAACgX,YAAY,CAAC;QAC5C,IAAI,CAAC,IAAI,CAACrO,SAAS,EAAE;UACpBkB,OAAO,EAAEK,aAAa,CAAC,MAAM,EAAE;YAAEC,MAAM,EAAE,IAAI;YAAEC,KAAK,EAAEzG;UAAmB,CAAC,CAAC;UAC3E,IAAI,CAACgF,SAAS,GAAG,IAAI;QACtB;QACA,IAAI,CAAChC,SAAS,CAAC8B,QAAQ,CAAC,IAAI,CAACD,UAAU,CAAC;MACzC,CAAC,MAAM;QACN,IAAI,CAACA,UAAU,CAAC0O,OAAO,CAACF,YAAY,CAAC;MACtC;MACA,KAAK,IAAI,CAACzM,YAAY,CAACyM,YAAY,EAAED,KAAK,CAAC9S,MAAM,CAAC;IACnD,CAAC;IAED;AACD;AACA;AACA;AACA;IACSgT,cAAc,WAAAE,gBAACvG,IAAY,EAAe;MACjD,MAAMwG,oBAAoB,GAAIC,KAAa,IAAKA,KAAK,CAAC/B,GAAG,CAAEgC,IAAU,KAAM;QAAEC,IAAI,EAAED;MAAK,CAAC,CAAC,CAAC;MAC3F,MAAME,UAAU,GAAI5G,IAAU,IAAK;QAClC,IAAI6G,GAAG,GAAG,EAAE;QACZ,IAAIC,GAAW;QACf,KAAKA,GAAG,IAAI9G,IAAI,EAAE;UACjB,MAAM3P,KAAK,GAAG2P,IAAI,CAAC8G,GAAG,CAAsB;UAC5C,IAAIzW,KAAK,EAAE;YACV,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;cAC9BwW,GAAG,IAAI,IAAIC,GAAG,IAAIF,UAAU,CAACvW,KAAK,CAAC,KAAKyW,GAAG,GAAG;YAC/C,CAAC,MAAM;cACND,GAAG,IAAI,IAAIC,GAAG,IAAIzW,KAAK,KAAeyW,GAAG,GAAG;YAC7C;UACD;QACD;QACA,OAAOD,GAAG,CAAC7C,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;MACpC,CAAC;MACD,MAAM+C,eAAqB,GAAGzC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACgC,oBAAoB,CAACxG,IAAI,CAAC,CAAC,CAAS;MAC5F,IAAI6G,GAAG,GAAG,wCAAwC;MAClD,MAAMG,SAAS,GAAG,YAAY;MAC9BH,GAAG,IAAI,IAAIG,SAAS,GAAG;MACvBH,GAAG,IAAID,UAAU,CAACG,eAAe,CAAC;MAClCF,GAAG,IAAI,KAAKG,SAAS,GAAG;MACxBH,GAAG,GAAGA,GAAG,CAACI,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC;MAClC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,OAAOD,MAAM,CAACE,eAAe,CAACP,GAAG,EAAE,UAAU,CAAC;IAC/C,CAAC;IAED;AACD;AACA;AACA;AACA;IACQ5F,kBAAkB,WAAAoG,oBAACC,SAAiB,EAAE;MAC5C,MAAMC,aAAa,GAAG1Y,GAAG,CAACC,EAAE,CAACsO,OAAO,CAACC,KAAK,CAAC9J,gBAAgB,CAACM,SAAS,CAAC;MACtE,IAAI2T,SAAS,GAAGD,aAAa,GAAGvT,aAAa,CAAC/D,OAAO,CAAC,CAAC,CAAC;MACxD,MAAMwX,KAAK,GAAGzT,aAAa,CAACsT,SAAS,CAAC,IAAI,EAAE;MAC5C,IAAII,WAAW,GAAG,CAAC;MACnB,IAAID,KAAK,CAACpU,MAAM,GAAG,CAAC,EAAE;QACrB,MAAMsU,WAAW,GAAG,IAAIC,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;QAC7CD,MAAM,CAACE,MAAM,CAACC,eAAe,CAACJ,WAAW,CAAC;QAC1CD,WAAW,GAAGC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;QAChCH,SAAS,GAAGD,aAAa,GAAGE,KAAK,CAACC,WAAW,CAAC;MAC/C;MACA,OAAOF,SAAS;IACjB;EAAC;EAAA,OAjqBmBpT,SAAS;AAAA","ignoreList":[]}