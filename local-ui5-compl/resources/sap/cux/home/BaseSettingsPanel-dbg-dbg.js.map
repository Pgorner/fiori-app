{"version":3,"file":"BaseSettingsPanel-dbg-dbg.js","names":["sap","ui","define","Element","Lib","BaseSettingsPanel","extend","metadata","library","properties","key","type","group","defaultValue","visibility","title","icon","showHeader","defaultAggregation","aggregations","content","singularName","multiple","actionButtons","associations","panel","events","panelNavigated","parameters","context","constructor","_constructor","id","settings","Element.prototype.constructor.call","_keyuserChanges","init","_init","_i18nBundle","getResourceBundleFor","_getPanel","getElementById","getAssociation","_persistDialog","container","getParent","layout","setProperty","getKeyUserChanges","_getKeyUserChanges","addKeyUserChanges","_addKeyUserChanges","change","push","clearKeyUserChanges","_clearKeyUserChanges"],"sources":["BaseSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BasePanel from \"./BasePanel\";\nimport { $BaseSettingsPanelSettings } from \"./BaseSettingsPanel\";\nimport { IKeyUserChange } from \"./interface/KeyUserInterface\";\n\n/**\n *\n * Abstract base class for panels inside My Home Settings Dialog.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @abstract\n * @private\n *\n * @alias sap.cux.home.BaseSettingsPanel\n */\nexport default abstract class BaseSettingsPanel extends Element {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _keyuserChanges: Array<IKeyUserChange> = [];\n\n\tconstructor(id?: string | $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Key of the settings panel.\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Title of the settings panel.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Icon of the settings panel.\n\t\t\t */\n\t\t\ticon: { type: \"sap.ui.core.URI\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies if header should be shown for the settings panel page.\n\t\t\t */\n\t\t\tshowHeader: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Content aggregation of the settings panel.\n\t\t\t */\n\t\t\tcontent: { type: \"sap.ui.core.Control\", singularName: \"content\", multiple: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Holds the actions to be shown within the settings panel.\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\", visibility: \"hidden\" }\n\t\t},\n\t\tassociations: {\n\t\t\t/**\n\t\t\t * Associations of the settings panel.\n\t\t\t * Id of the panel associated with the settings panel to be provided.\n\t\t\t * In case of multiple panels with same Id, the first panel will be associated.\n\t\t\t * If no panel is found with the provided id, the settings panel will not be associated with any panel.\n\t\t\t */\n\t\t\tpanel: { type: \"string\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Fired whenever the panel has been navigated to.\n\t\t\t */\n\t\t\tpanelNavigated: {\n\t\t\t\tparameters: {\n\t\t\t\t\tcontext: { type: \"object\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t}\n\n\t/**\n\t * Retrieves the BasePanel or BaseLayout associated with the BaseSettingsPanel.\n\t *\n\t * @returns {BasePanel | BaseLayout} The panel or layout associated with the BaseSettingsPanel\n\t * @private\n\t */\n\tprotected _getPanel(): BasePanel | BaseLayout {\n\t\treturn Element.getElementById(this.getAssociation(\"panel\", null) as string) as BasePanel | BaseLayout;\n\t}\n\n\t/**\n\t * Persists the dialog state by setting a property on the parent layout\n\t * indicating that the settings dialog should be persisted.\n\t *\n\t * @private\n\t */\n\tprotected _persistDialog(): void {\n\t\tconst panel = this._getPanel();\n\t\tconst container = panel?.getParent() as BaseContainer;\n\t\tconst layout = container?.getParent() as BaseLayout;\n\n\t\tlayout?.setProperty(\"settingsDialogPersisted\", true, true);\n\t}\n\n\t/**\n\t * Returns the KeyUser Changes made by user.\n\t *\n\t * @public\n\t */\n\tpublic getKeyUserChanges(): Array<IKeyUserChange> {\n\t\treturn this._keyuserChanges;\n\t}\n\n\t/**\n\t * Add Changes made by user in case of KeyUser Settings Panel.\n\t *\n\t * @public\n\t */\n\tpublic addKeyUserChanges(change: IKeyUserChange): void {\n\t\tthis._keyuserChanges.push(change);\n\t}\n\n\t/**\n\t * Clear all KeyUser Changes made by user.\n\t *\n\t * @public\n\t */\n\tpublic clearKeyUserChanges(): void {\n\t\tthis._keyuserChanges = [];\n\t}\n}\n"],"mappings":"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","ignoreList":[]}