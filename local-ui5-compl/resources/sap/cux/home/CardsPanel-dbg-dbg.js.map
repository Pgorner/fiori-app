{"version":3,"file":"CardsPanel-dbg-dbg.js","names":["sap","ui","define","Log","GridContainer","GridContainerSettings","SelectionVariant","CardHelper","InsightsInMemoryCachingHost","HBox","HeaderContainer","VBox","EventBus","DragDropInfo","sap_ui_core_library","Card","JSONModel","Container","S4MyHome","__BasePanel","__MenuItem","__AppManager","___utils_Constants","___utils_Device","___utils_DragDropUtils","___utils_FESRUtil","__PersonalisationUtils","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","dnd","_finallyRethrows","finalizer","bind","BasePanel","MenuItem","AppManager","FEATURE_TOGGLES","SETTINGS_PANELS_KEYS","DeviceType","fetchElementProperties","attachKeyboardHandler","addFESRId","PersonalisationUtils","UShellPersonalizer","cardsMenuItems","RECOMMENDATION_PATH","runtimeHostCreated","CardsPanel","extend","metadata","library","properties","title","type","group","defaultValue","visibility","key","fullScreenName","defaultAggregation","aggregations","cards","multiple","singularName","events","handleHidePanel","parameters","handleUnhidePanel","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","aVisibleCardInstances","cardsInViewport","_appSwitched","appManagerInstance","getInstance","init","_init","_this","BasePanel.prototype.init.call","setProperty","_i18nBundle","getText","cardWidth","getDeviceType","Mobile","cardHeight","_oData","userVisibleCards","userAllCards","_controlModel","refreshMenuItem","getId","REFRESH","icon","press","refreshCards","editCardsMenuItem","EDIT_CARDS","event","_handleEditCards","menuItems","oEventBus","subscribe","sChannelId","sEventId","oData","Promise","resolve","_createCards","rerenderCards","_importdone","reject","_setupHeader","getServiceAsync","_getServiceAsync","cardHelperInstance","_addRuntimeHost","_toggleCardActivity","_this2","toggleUserActions","show","getParameter","_temp2","_temp","attachRouteMatched","aCards","_this3","_getManifestEntryFromCard","oCard","sEntry","cardWithManifestPromise","manifestEntry","getManifestEntry","_pManifestReady","attachManifestReady","_this4","_this5","_this6","_this7","_this8","runtimeHost","action","oEvent","sType","oParameters","_temp3","ibnTarget","preventDefault","oIntegrationCardManifest","aHeaderActions","header","actions","oCheckSemanticProperty","configuration","_semanticDateRangeSetting","value","JSON","parse","Object","keys","length","processSemanticDate","aContentActions","getContentActions","oHeaderAction","oContentAction","bOldCardExtension","indexOf","_manageOldCardExtension","navigationService","navigate","target","params","ibnParams","text","_refreshCardData","visible","oEntry","cacheType","cardId","getParent","_getLayout","openSettingsDialog","INSIGHTS_CARDS","oCardParams","aRelevantFilters","_relevantODataFilters","bRelevantFilters","aRelevantParams","_relevantODataParameters","bRelevantParams","oCardDataSource","dataSources","oFilterService","filterService","oDataSourceSettings","odataVersion","getParentAppDetails","descriptorContent","parentApp","semanticObject","intents","isNavigationSupported","_navigationService$is","aResponses","supported","sShellHash","semanticURL","shellHash","oCardSV","getCombinedParameters","forEach","sParamName","sFilterName","oCardParamsFilterName","aSelectOptions","SelectOptions","aRanges","Ranges","Sign","Option","Low","massAddSelectOption","oTempParam","selectionVariant","toJSONObject","stringify","_getContentActions","manifest","content","item","row","stateData","status","publish","require","InsightsCacheData","sCardId","cacheDataInstance","clearCache","refreshData","menuItem","addAggregation","actionButtons","actionButton","renderPanel","_renderPanel","_this9","_rerenderCards","_this10","_temp5","cardsContainer","setBusy","_getUserVisibleCardModel","oUserVisibleCardModel","getProperty","_temp4","_showCards","_checkForRecommendationCards","error","Error","message","fireHandleHidePanel","_wasThrown","_result","_adjustLayout","_this11","_getPersonalization","_this11$_getPersonali","oPersonalizer","read","oPersData","_exit","_temp7","_result2","showRecommendationCards","_temp6","undefined","getRecommenedCards","aRecommendedCards","_this11$_handleRecomm","_handleRecommendationCards","_this12","cardManifests","map","_updateRecommendationStatus","fireHandleUnhidePanel","updatePanelsItemCount","getMetadata","getName","scrollStep","scrollStepByItem","gridLayout","scrollTime","showDividers","cardsContainerSettings","columnSize","rowSize","gap","addStyleClass","setLayout","addDragDropConfig","sourceAggregation","targetAggregation","dropPosition","DropPosition","Between","dropLayout","DropLayout","Horizontal","drop","_handleCardsDnd","attachBrowserEvent","disablenavigation","metaKey","ctrlKey","dragDropEvent","_addContent","sDefaultAggreName","getDefaultAggregationName","removeAllAggregation","oUserCard","width","height","host","push","items","overlay","overlayHBoxWrapper","addItem","oPreviewVBox","direction","justifyContent","parent","getSource","isA","handleRemoveActions","_handleRemoveActions","handleAddActions","_handleAddActions","_refreshCards","card","_this13","sInsertPosition","oDragItem","iDragItemIndex","indexOfItem","oDropItem","iDropItemIndex","_temp8","_getUserAllCardModel","userAllCardsModel","updateCardList","_updateCardList","_this14","aUserVisibleCards","aUserAllCards","sDragedPositionRank","rank","sDropedPositionRank","iUpdatedDragItemIndex","findIndex","iUpdatedDropItemIndex","_temp9","aUpdatedCards","handleDndCardsRanking","_updateMultipleCards","_sortCardsOnRank","filter","sort","a","b","persContainerId","getPersContainerId","ownerComponent","getOwnerComponent","_this15","isFeatureEnabled","RECOMMENDATION","bRecommendationEnabled","_temp11","showRecommendation","write","_temp10","_this15$_getPersonali","_calculateVisibleCardCount","pageDomRef","getDomRef","deviceType","count","sectionDomRef","childNodes","domProperties","iAvailableWidth","_calculateCardWidth","Math","floor","containerWidth","minWidth","maxWidth","margin","layout","isFullScreenEnabled","isElementExpanded","_getCurrentExpandedElementName","cardCount","slice","getManifest","cardWrapper","toggleFullScreenElements","setWidth","setColumnSize"],"sources":["CardsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport CardHelper from \"sap/insights/CardHelper\";\nimport InsightsInMemoryCachingHost from \"sap/insights/base/InMemoryCachingHost\";\nimport Button from \"sap/m/Button\";\nimport HBox from \"sap/m/HBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport ManagedObject, { MetadataOptions } from \"sap/ui/base/ManagedObject\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { DropInfo$DropEventParameters } from \"sap/ui/core/dnd/DropInfo\";\nimport { dnd } from \"sap/ui/core/library\";\nimport Card from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Container from \"sap/ushell/Container\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport BasePanel from \"./BasePanel\";\nimport { $CardsPanelSettings } from \"./CardsPanel\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport MenuItem from \"./MenuItem\";\nimport {\n\tICard,\n\tICardActionParameters,\n\tICardHelper,\n\tICardHelperInstance,\n\tICardManifest,\n\tInsightsCacheData,\n\tIsapApp,\n\tIsapCard\n} from \"./interface/CardsInterface\";\nimport AppManager from \"./utils/AppManager\";\nimport { FEATURE_TOGGLES, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { attachKeyboardHandler } from \"./utils/DragDropUtils\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UShellPersonalizer from \"./utils/UshellPersonalizer\";\n\nexport enum cardsMenuItems {\n\tREFRESH = \"cards-refresh\",\n\tEDIT_CARDS = \"cards-editCards\"\n}\n\ninterface IcardActionEvent {\n\tgetParameter(sParam: string): unknown;\n\tpreventDefault(): void;\n}\n\nexport interface Intent {\n\ttarget: {\n\t\tsemanticObject: string;\n\t\taction: string;\n\t};\n\tparams?: {\n\t\t[key: string]: string;\n\t};\n}\nconst RECOMMENDATION_PATH = \"showRecommendation\";\nlet runtimeHostCreated = false;\n\n/**\n *\n * Panel class for managing and storing Insights Cards.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122.0\n *\n * @internal\n * @experimental Since 1.122\n * @public\n *\n * @alias sap.cux.home.CardsPanel\n */\n\nexport default class CardsPanel extends BasePanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", defaultValue: \"SI2\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"cards\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Aggregation of cards available within the cards panel\n\t\t\t */\n\t\t\tcards: { type: \"sap.ui.integration.widgets.Card\", multiple: true, singularName: \"card\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\thandleHidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t},\n\t\t\thandleUnhidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t}\n\t\t}\n\t};\n\tprivate cardHelperInstance!: ICardHelperInstance;\n\tprivate cardsContainer!: GridContainer | HeaderContainer;\n\tprivate aVisibleCardInstances: Card[] = [];\n\tpublic menuItems!: MenuItem[];\n\tpublic actionButtons!: Button[];\n\tprivate _oData!: Record<string, unknown>;\n\tprivate _controlModel!: JSONModel;\n\tprivate oPersonalizer!: UShellPersonalizer;\n\tprivate appManagerInstance;\n\tprivate runtimeHost!: InsightsInMemoryCachingHost;\n\tprivate cardsContainerSettings!: GridContainerSettings;\n\tprivate cardWidth!: string;\n\tprivate cardHeight!: string;\n\tprivate cardsInViewport: Card[] = [];\n\tprivate oEventBus!: EventBus;\n\tprivate _appSwitched: boolean = false;\n\n\tconstructor(idOrSettings?: string | $CardsPanelSettings);\n\tconstructor(id?: string, settings?: $CardsPanelSettings);\n\t/**\n\t * Constructor for a new card panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $CardsPanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.appManagerInstance = AppManager.getInstance();\n\t}\n\n\tpublic async init() {\n\t\tsuper.init();\n\t\tthis.setProperty(\"title\", `${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsCardsTitle\")}`);\n\t\tthis.cardWidth = this.getDeviceType() === DeviceType.Mobile ? \"17rem\" : \"22rem\";\n\t\tthis.cardHeight = this.getDeviceType() === DeviceType.Mobile ? \"25.5rem\" : \"33rem\";\n\n\t\t//Initialize Tiles Model\n\t\tthis._oData = {\n\t\t\tuserVisibleCards: [] as ICard[],\n\t\t\tuserAllCards: [] as ICard[]\n\t\t};\n\t\tthis._controlModel = new JSONModel(this._oData);\n\n\t\t// Setup Menu Items\n\t\tconst refreshMenuItem = new MenuItem(`${this.getId()}-${cardsMenuItems.REFRESH}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"refresh\"),\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\tpress: () => this.refreshCards()\n\t\t});\n\t\taddFESRId(refreshMenuItem, \"cardsRefresh\");\n\t\tconst editCardsMenuItem = new MenuItem(`${this.getId()}-${cardsMenuItems.EDIT_CARDS}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"manageCards\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: (event: Event) => this._handleEditCards(event)\n\t\t});\n\t\taddFESRId(editCardsMenuItem, \"manageCards\");\n\n\t\tthis.menuItems = [refreshMenuItem, editCardsMenuItem];\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\t// Subscribe to the event\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"cardsImport\",\n\t\t\tasync (sChannelId?: string, sEventId?: string, oData?) => {\n\t\t\t\tawait this._createCards(oData as ICardManifest[]);\n\t\t\t\tawait this.rerenderCards();\n\t\t\t\tthis._importdone();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\t// Setup Header Content\n\t\tthis._setupHeader();\n\t\tthis.cardHelperInstance = await (CardHelper as ICardHelper).getServiceAsync();\n\n\t\t// Setup Host For Cards\n\t\tif (!runtimeHostCreated) {\n\t\t\tthis._addRuntimeHost();\n\t\t}\n\t\t// Toggles the activity of cards\n\t\tthis._toggleCardActivity();\n\t}\n\n\t/**\n\t * Toggles the activity of cards on route change.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _toggleCardActivity(): void {\n\t\tconst toggleUserActions = async (event: Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\tif (show) {\n\t\t\t\tif (this._appSwitched) {\n\t\t\t\t\tawait this.rerenderCards();\n\t\t\t\t\tthis._appSwitched = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._appSwitched = true;\n\t\t\t}\n\t\t};\n\n\t\tS4MyHome.attachRouteMatched({}, toggleUserActions, this);\n\t}\n\n\t/**\n\t * Create imported cards\n\t * @param {ICardManifest[]} aCards - array of card manifests\n\t * @returns {any}\n\t */\n\tprivate async _createCards(aCards: ICardManifest[]) {\n\t\tawait this.cardHelperInstance?._createCards(aCards);\n\t\treturn this.rerenderCards();\n\t}\n\n\t/**\n\t * Retrieves a manifest entry from a card.\n\t * If the manifest entry is not immediately available, it waits for the manifest to be ready.\n\t *\n\t * @param {object} oCard - The card object from which to retrieve the manifest entry.\n\t * @param {string} sEntry - The manifest entry key to retrieve.\n\t * @returns {Promise<ICardManifest | undefined>} A promise that resolves with the manifest entry value.\n\t */\n\tprivate _getManifestEntryFromCard(oCard: Card, sEntry: string): Promise<ICardManifest | undefined> {\n\t\tconst cardWithManifestPromise = oCard as Card & { _pManifestReady?: Promise<ICardManifest | undefined> };\n\t\tconst manifestEntry = oCard.getManifestEntry(sEntry) as ICardManifest | undefined;\n\t\tif (manifestEntry) {\n\t\t\treturn Promise.resolve(manifestEntry);\n\t\t} else {\n\t\t\tif (!cardWithManifestPromise._pManifestReady) {\n\t\t\t\tcardWithManifestPromise._pManifestReady = new Promise<ICardManifest | undefined>((resolve) => {\n\t\t\t\t\toCard.attachManifestReady(() => {\n\t\t\t\t\t\tresolve(oCard.getManifestEntry(sEntry) as ICardManifest | undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn cardWithManifestPromise._pManifestReady;\n\t\t}\n\t}\n\n\tprivate _addRuntimeHost() {\n\t\tthis.runtimeHost = new InsightsInMemoryCachingHost(\"runtimeHost\", {\n\t\t\taction: async (oEvent: IcardActionEvent) => {\n\t\t\t\tconst sType = oEvent.getParameter(\"type\") as string;\n\t\t\t\tlet oParameters = (oEvent.getParameter(\"parameters\") as ICardActionParameters) || {};\n\n\t\t\t\tif (sType === \"Navigation\" && oParameters.ibnTarget) {\n\t\t\t\t\toEvent.preventDefault();\n\t\t\t\t\tconst oCard = (oEvent.getParameter(\"card\") as Card) || {},\n\t\t\t\t\t\toIntegrationCardManifest = (oCard?.getManifestEntry(\"sap.card\") || {}) as IsapCard,\n\t\t\t\t\t\taHeaderActions = oIntegrationCardManifest?.header?.actions || [];\n\n\t\t\t\t\t//processing semantic date as param for navigation\n\t\t\t\t\t//check to verify if _semanticDateRangeSetting property is present in manifest\n\t\t\t\t\tlet oCheckSemanticProperty;\n\t\t\t\t\tif (oIntegrationCardManifest?.configuration?.parameters?._semanticDateRangeSetting?.value) {\n\t\t\t\t\t\toCheckSemanticProperty = JSON.parse(\n\t\t\t\t\t\t\toIntegrationCardManifest.configuration.parameters._semanticDateRangeSetting.value\n\t\t\t\t\t\t) as object;\n\t\t\t\t\t}\n\t\t\t\t\tif (oCheckSemanticProperty && Object.keys(oCheckSemanticProperty).length) {\n\t\t\t\t\t\toParameters = this.cardHelperInstance.processSemanticDate(\n\t\t\t\t\t\t\toParameters,\n\t\t\t\t\t\t\toIntegrationCardManifest\n\t\t\t\t\t\t) as ICardActionParameters;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet aContentActions = this.getContentActions(oIntegrationCardManifest) || [];\n\n\t\t\t\t\tconst oHeaderAction = aHeaderActions[0] || {},\n\t\t\t\t\t\toContentAction = aContentActions[0] || {};\n\n\t\t\t\t\tconst bOldCardExtension = !!(\n\t\t\t\t\t\t(oHeaderAction?.parameters &&\n\t\t\t\t\t\t\ttypeof oHeaderAction.parameters === \"string\" &&\n\t\t\t\t\t\t\toHeaderAction.parameters.indexOf(\"{= extension.formatters.addPropertyValueToAppState\") > -1) ||\n\t\t\t\t\t\t(oContentAction?.parameters &&\n\t\t\t\t\t\t\ttypeof oContentAction.parameters === \"string\" &&\n\t\t\t\t\t\t\toContentAction.parameters.indexOf(\"{= extension.formatters.addPropertyValueToAppState\") > -1)\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._manageOldCardExtension(bOldCardExtension, oEvent, oParameters);\n\n\t\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\t\tawait navigationService.navigate({\n\t\t\t\t\t\ttarget: oParameters.ibnTarget,\n\t\t\t\t\t\tparams: oParameters.ibnParams\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"Custom\",\n\t\t\t\t\ttext: this._i18nBundle?.getText(\"refresh\"),\n\t\t\t\t\ticon: \"sap-icon://refresh\",\n\t\t\t\t\taction: (oCard: Card) => {\n\t\t\t\t\t\tthis._refreshCardData(oCard);\n\t\t\t\t\t},\n\t\t\t\t\tvisible: async (oCard: Card) => {\n\t\t\t\t\t\tconst oEntry = await this._getManifestEntryFromCard(oCard, \"sap.insights\");\n\t\t\t\t\t\treturn oEntry && !oEntry.cacheType;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: \"Custom\",\n\t\t\t\t\ttext: this._i18nBundle?.getText(\"viewFilteredBy\"),\n\t\t\t\t\ticon: \"sap-icon://filter\",\n\t\t\t\t\taction: (oCard: Card) => {\n\t\t\t\t\t\tconst cardId = (oCard.getManifestEntry(\"sap.app\") as IsapApp).id;\n\t\t\t\t\t\t(this.getParent() as InsightsContainer)\n\t\t\t\t\t\t\t?._getLayout()\n\t\t\t\t\t\t\t.openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_CARDS, { cardId });\n\t\t\t\t\t},\n\t\t\t\t\tvisible: async (oCard: Card) => {\n\t\t\t\t\t\tconst oEntry = await this._getManifestEntryFromCard(oCard, \"sap.insights\");\n\t\t\t\t\t\tif (oEntry) {\n\t\t\t\t\t\t\tconst oCardParams = (oCard.getManifestEntry(\"sap.card\") as IsapCard)?.configuration?.parameters;\n\t\t\t\t\t\t\tconst aRelevantFilters = oCardParams?._relevantODataFilters?.value || [];\n\t\t\t\t\t\t\tconst bRelevantFilters = aRelevantFilters?.length;\n\t\t\t\t\t\t\tconst aRelevantParams = oCardParams?._relevantODataParameters?.value || [];\n\t\t\t\t\t\t\tconst bRelevantParams = aRelevantParams?.length;\n\t\t\t\t\t\t\tconst oCardDataSource = (oCard.getManifestEntry(\"sap.app\") as IsapApp).dataSources;\n\t\t\t\t\t\t\tconst oFilterService = oCardDataSource?.filterService;\n\t\t\t\t\t\t\tconst oDataSourceSettings = oFilterService?.settings;\n\t\t\t\t\t\t\t// show ViewFilteredBy Option only if relevantFilters or relevantParameters are there and is OdataV2 version\n\t\t\t\t\t\t\treturn !!(\n\t\t\t\t\t\t\t\t(bRelevantFilters || bRelevantParams) &&\n\t\t\t\t\t\t\t\toDataSourceSettings &&\n\t\t\t\t\t\t\t\toDataSourceSettings.odataVersion === \"2.0\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: \"Custom\",\n\t\t\t\t\ttext: this._i18nBundle?.getText(\"navigateToParent\"),\n\t\t\t\t\ticon: \"sap-icon://display-more\",\n\t\t\t\t\tvisible: async (oCard: Card) => {\n\t\t\t\t\t\treturn this._getManifestEntryFromCard(oCard, \"sap.insights\").then(async (oEntry: ICardManifest | undefined) => {\n\t\t\t\t\t\t\tif (oEntry) {\n\t\t\t\t\t\t\t\tconst parentApp = await this.cardHelperInstance.getParentAppDetails({\n\t\t\t\t\t\t\t\t\tdescriptorContent: oCard.getManifestEntry(\"/\") as ICardManifest\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (parentApp.semanticObject && parentApp.action) {\n\t\t\t\t\t\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\t\t\t\t\t\tconst intents: Intent[] = [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\t\tsemanticObject: parentApp.semanticObject,\n\t\t\t\t\t\t\t\t\t\t\t\taction: parentApp.action\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\tconst aResponses = (await navigationService.isNavigationSupported(intents)) as { supported: boolean }[];\n\t\t\t\t\t\t\t\t\treturn aResponses[0].supported || false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\taction: async (oCard: Card) => {\n\t\t\t\t\t\tconst parentApp = await this.cardHelperInstance.getParentAppDetails({\n\t\t\t\t\t\t\tdescriptorContent: oCard.getManifestEntry(\"/\") as ICardManifest\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst sShellHash = parentApp.semanticURL || parentApp.semanticObject;\n\t\t\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\t\t\tawait navigationService.navigate({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tshellHash: sShellHash\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\truntimeHostCreated = true;\n\t}\n\n\t/**\n\t * Updates parameters for an old card extension\n\t * @private\n\t * @param {boolean} bOldCardExtension - Determines whether the card is using an old card extension.\n\t * @param {IcardActionEvent} oEvent - An event object\n\t * @param {ICardActionParameters} oParameters - Parameter object\n\t */\n\n\tprivate _manageOldCardExtension(bOldCardExtension: boolean, oEvent: IcardActionEvent, oParameters: ICardActionParameters) {\n\t\tif (bOldCardExtension) {\n\t\t\tconst oCardSV = new SelectionVariant();\n\t\t\tconst oCardParams = (oEvent.getParameter(\"card\") as Card).getCombinedParameters();\n\t\t\t(oCardParams?._relevantODataParameters as string[]).forEach((sParamName: string) => {\n\t\t\t\tif (oParameters.ibnParams) {\n\t\t\t\t\toParameters.ibnParams[sParamName] = oCardParams[sParamName];\n\t\t\t\t}\n\t\t\t});\n\t\t\t(oCardParams?._relevantODataFilters as string[]).forEach((sFilterName: string) => {\n\t\t\t\tconst oCardParamsFilterName = JSON.parse(oCardParams[sFilterName] as string) as {\n\t\t\t\t\tParameters: unknown;\n\t\t\t\t\tSelectOptions: { PropertyName: string; Ranges: { Sign: string; Option: string; Low: string }[] }[];\n\t\t\t\t};\n\t\t\t\tconst aSelectOptions = oCardParamsFilterName.SelectOptions[0];\n\t\t\t\tconst aRanges = aSelectOptions.Ranges;\n\t\t\t\tif (aRanges?.length === 1 && aRanges[0].Sign === \"I\" && aRanges[0].Option === \"EQ\") {\n\t\t\t\t\tif (oParameters.ibnParams) {\n\t\t\t\t\t\toParameters.ibnParams[sFilterName] = aRanges[0].Low;\n\t\t\t\t\t}\n\t\t\t\t} else if (aRanges?.length > 0) {\n\t\t\t\t\toCardSV.massAddSelectOption(sFilterName, aRanges);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst oTempParam = JSON.parse(oParameters?.ibnParams?.[\"sap-xapp-state-data\"] as string) as Record<string, unknown>;\n\t\t\toTempParam.selectionVariant = oCardSV.toJSONObject();\n\t\t\tif (oParameters.ibnParams) {\n\t\t\t\toParameters.ibnParams[\"sap-xapp-state-data\"] = JSON.stringify(oTempParam);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves actions for a card based on its content type.\n\t *\n\t * @private\n\t * @param {IsapCard} manifest - manifest object\n\t */\n\tprivate getContentActions(manifest: IsapCard) {\n\t\tif (manifest.type === \"List\") {\n\t\t\treturn manifest?.content?.item?.actions;\n\t\t} else if (manifest.type === \"Table\") {\n\t\t\treturn manifest?.content?.row?.actions;\n\t\t} else {\n\t\t\treturn manifest?.content?.actions;\n\t\t}\n\t}\n\n\tprivate _importdone() {\n\t\tconst stateData = { status: true };\n\t\tthis.oEventBus.publish(\"importChannel\", \"cardsImported\", stateData);\n\t}\n\n\tprivate _refreshCardData(oCard: Card) {\n\t\tsap.ui.require([\"sap/insights/base/CacheData\"], (InsightsCacheData: InsightsCacheData) => {\n\t\t\tconst sCardId = (oCard.getManifestEntry(\"sap.app\") as IsapApp).id;\n\t\t\tconst cacheDataInstance = InsightsCacheData.getInstance();\n\t\t\tcacheDataInstance.clearCache(sCardId);\n\t\t\toCard.refreshData();\n\t\t});\n\t}\n\n\tprivate _setupHeader() {\n\t\tthis.menuItems?.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t\tthis.actionButtons?.forEach((actionButton) => this.addAggregation(\"actionButtons\", actionButton));\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t}\n\n\tpublic async renderPanel(): Promise<void> {\n\t\tawait this.rerenderCards();\n\t}\n\n\tprivate async rerenderCards() {\n\t\ttry {\n\t\t\t// Enable Loader if container is present\n\t\t\tthis.cardsContainer?.setBusy(true);\n\t\t\t// Fetch Cards from insights service\n\t\t\tconst oUserVisibleCardModel = await this.cardHelperInstance?._getUserVisibleCardModel();\n\t\t\tconst aCards = oUserVisibleCardModel.getProperty(\"/cards\") as ICard[];\n\t\t\tthis._controlModel.setProperty(\"/userVisibleCards\", aCards);\n\t\t\tif (aCards?.length) {\n\t\t\t\tthis._showCards(aCards);\n\t\t\t} else {\n\t\t\t\tawait this._checkForRecommendationCards();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tLog.error(error.message);\n\t\t\t}\n\t\t\tthis.fireHandleHidePanel();\n\t\t} finally {\n\t\t\tthis.cardsContainer?.setBusy(false);\n\t\t\tthis._adjustLayout();\n\t\t}\n\t}\n\n\tprivate async _checkForRecommendationCards() {\n\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\tconst oPersData = await this.oPersonalizer.read();\n\t\tconst showRecommendationCards = oPersData?.[RECOMMENDATION_PATH] as boolean;\n\t\tif (showRecommendationCards === undefined) {\n\t\t\tconst aRecommendedCards = await this.appManagerInstance.getRecommenedCards();\n\t\t\tif (aRecommendedCards) {\n\t\t\t\treturn this._handleRecommendationCards(aRecommendedCards);\n\t\t\t}\n\t\t}\n\t\tthis.fireHandleHidePanel();\n\t}\n\n\t/**\n\t * Handle Recommendation Cards\n\t * @param aRecommendedCards\n\t * @private\n\t */\n\tprivate async _handleRecommendationCards(aRecommendedCards: ICard[]) {\n\t\tconst cardManifests = aRecommendedCards.map((oCard) => oCard.descriptorContent);\n\t\tawait this.cardHelperInstance?._createCards(cardManifests);\n\t\tawait this._updateRecommendationStatus();\n\t\treturn this.rerenderCards();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tprivate _showCards(aCards: ICard[]) {\n\t\tthis.fireHandleUnhidePanel();\n\t\t(this.getParent() as InsightsContainer)?.updatePanelsItemCount(aCards.length, this.getMetadata().getName());\n\t\tif (this.getProperty(\"title\")) {\n\t\t\tthis.setProperty(\n\t\t\t\t\"title\",\n\t\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsCardsTitle\")} (${aCards.length})`\n\t\t\t);\n\t\t}\n\t\t// Create GridList Wrapper for all cards if not created\n\t\tif (!this.cardsContainer) {\n\t\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\t\tthis.cardsContainer = new HeaderContainer(`${this.getId()}-insightsCardsMobileFlexBox`, {\n\t\t\t\t\tscrollStep: 0,\n\t\t\t\t\tscrollStepByItem: 1,\n\t\t\t\t\tgridLayout: true,\n\t\t\t\t\tscrollTime: 1000,\n\t\t\t\t\tshowDividers: false,\n\t\t\t\t\tvisible: this.getDeviceType() === DeviceType.Mobile\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.cardsContainerSettings = new GridContainerSettings({\n\t\t\t\t\tcolumnSize: this.cardWidth,\n\t\t\t\t\trowSize: this.cardHeight,\n\t\t\t\t\tgap: \"1rem\"\n\t\t\t\t});\n\t\t\t\tthis.cardsContainer = new GridContainer(`${this.getId()}-insightsCardsFlexBox`, {})\n\t\t\t\t\t.addStyleClass(\"sapUiSmallMarginTop\")\n\t\t\t\t\t.setLayout(this.cardsContainerSettings);\n\t\t\t}\n\t\t\tthis.cardsContainer\n\t\t\t\t.addDragDropConfig(\n\t\t\t\t\tnew DragDropInfo({\n\t\t\t\t\t\tsourceAggregation: \"items\",\n\t\t\t\t\t\ttargetAggregation: \"items\",\n\t\t\t\t\t\tdropPosition: dnd.DropPosition.Between,\n\t\t\t\t\t\tdropLayout: dnd.DropLayout.Horizontal,\n\t\t\t\t\t\tdrop: (oEvent) => void this._handleCardsDnd(oEvent)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.attachBrowserEvent(\"keydown\", (event: KeyboardEvent) => {\n\t\t\t\t\tconst disablenavigation = event.metaKey || event.ctrlKey;\n\t\t\t\t\tvoid attachKeyboardHandler(event, disablenavigation, (dragDropEvent: Event) => this._handleCardsDnd(dragDropEvent));\n\t\t\t\t});\n\n\t\t\tthis._addContent(this.cardsContainer);\n\t\t} else {\n\t\t\tconst sDefaultAggreName = this.cardsContainer.getMetadata().getDefaultAggregationName();\n\t\t\tthis.cardsContainer.removeAllAggregation(sDefaultAggreName);\n\t\t\tthis.aVisibleCardInstances = [];\n\t\t\tthis.cardsInViewport = [];\n\t\t}\n\n\t\taCards.forEach((oCard) => {\n\t\t\tconst manifest = oCard.descriptorContent;\n\t\t\t// Create Card Instance\n\t\t\tconst oUserCard = new Card({\n\t\t\t\twidth: this.cardWidth,\n\t\t\t\theight: this.cardHeight,\n\t\t\t\tmanifest,\n\t\t\t\thost: this.runtimeHost as Control\n\t\t\t});\n\n\t\t\tthis.aVisibleCardInstances.push(oUserCard);\n\n\t\t\tthis.addAggregation(\"cards\", oUserCard, true);\n\n\t\t\tconst items: Control[] = [oUserCard];\n\n\t\t\t// Add overlay in case of List and Table Card\n\t\t\tconst sType = manifest[\"sap.card\"].type;\n\t\t\tif (sType === \"Table\" || sType === \"List\") {\n\t\t\t\tconst overlay = new HBox({\n\t\t\t\t\twidth: this.cardWidth,\n\t\t\t\t\theight: \"2rem\"\n\t\t\t\t}).addStyleClass(\"insightsCardOverflowTop\");\n\t\t\t\tconst overlayHBoxWrapper = new HBox({\n\t\t\t\t\theight: \"0\"\n\t\t\t\t}).addStyleClass(\"sapMFlexBoxJustifyCenter\");\n\t\t\t\toverlayHBoxWrapper.addItem(overlay);\n\t\t\t\titems.push(overlayHBoxWrapper);\n\t\t\t}\n\n\t\t\t// Create Wrapper VBox for Card\n\t\t\tconst oPreviewVBox = new VBox({\n\t\t\t\tdirection: \"Column\",\n\t\t\t\tjustifyContent: \"Center\",\n\t\t\t\titems: items\n\t\t\t});\n\n\t\t\t// add VBox as item to GridList\n\t\t\tconst sDefaultAggreName = this.cardsContainer.getMetadata().getDefaultAggregationName();\n\t\t\tthis.cardsContainer.addAggregation(sDefaultAggreName, oPreviewVBox);\n\t\t});\n\t\tthis.cardsContainer.setBusy(false);\n\t}\n\n\tprivate _handleEditCards(event: Event) {\n\t\t/* If called from Panel Header event.source() will return TilesPanel, if called from Insights Container event.source() will return InsightsContainer.\n\t\t_getLayout is available at Container Level*/\n\t\tlet parent: ManagedObject = event.getSource<CardsPanel>().getParent() || this;\n\t\tif (parent?.isA(\"sap.cux.home.CardsPanel\")) {\n\t\t\tparent = parent.getParent() as ManagedObject;\n\t\t}\n\t\t(parent as InsightsContainer)?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_CARDS);\n\t}\n\n\tpublic handleRemoveActions() {\n\t\tthis.setProperty(\"title\", \"\");\n\t\tthis.setProperty(\"enableSettings\", false);\n\t\tthis.setProperty(\"enableFullScreen\", false);\n\t\tthis.removeAllAggregation(\"actionButtons\");\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t}\n\n\tpublic handleAddActions() {\n\t\tthis.setProperty(\n\t\t\t\"title\",\n\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsCardsTitle\")} (${(this._controlModel.getProperty(\"/userVisibleCards\") as ICard[])?.length})`\n\t\t);\n\t\tthis.setProperty(\"enableSettings\", true);\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t\tthis._setupHeader();\n\t}\n\n\tprivate refreshCards() {\n\t\t// This should be done via Host once implemented\n\t\tthis.aVisibleCardInstances.forEach((card) => card.refreshData());\n\t}\n\n\tprivate async _handleCardsDnd(oEvent: Event<DropInfo$DropEventParameters>) {\n\t\tconst sInsertPosition = oEvent.getParameter(\"dropPosition\") as string,\n\t\t\toDragItem = oEvent.getParameter(\"draggedControl\") as Control,\n\t\t\tiDragItemIndex = (oDragItem.getParent() as GridContainer)?.indexOfItem(oDragItem),\n\t\t\toDropItem = oEvent.getParameter(\"droppedControl\") as Control,\n\t\t\tiDropItemIndex = (oDragItem.getParent() as GridContainer).indexOfItem(oDropItem);\n\n\t\tthis.cardsContainer?.setBusy(true);\n\t\t// take the moved item from dragIndex and add to dropindex\n\t\ttry {\n\t\t\tif (!(this._controlModel.getProperty(\"/userAllCards\") as ICard[]).length) {\n\t\t\t\tconst userAllCardsModel = await this.cardHelperInstance._getUserAllCardModel();\n\t\t\t\tthis._controlModel.setProperty(\"/userAllCards\", userAllCardsModel.getProperty(\"/cards\"));\n\t\t\t\tawait this.updateCardList(sInsertPosition, iDropItemIndex, iDragItemIndex);\n\t\t\t} else {\n\t\t\t\tawait this.updateCardList(sInsertPosition, iDropItemIndex, iDragItemIndex);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tLog.error(error.message);\n\t\t\t}\n\t\t\tthis.cardsContainer?.setBusy(false);\n\t\t}\n\t}\n\n\tprivate async updateCardList(sInsertPosition: string, iDropItemIndex: number, iDragItemIndex: number) {\n\t\tconst aUserVisibleCards = this._controlModel.getProperty(\"/userVisibleCards\") as ICard[],\n\t\t\taUserAllCards = this._controlModel.getProperty(\"/userAllCards\") as ICard[],\n\t\t\tsDragedPositionRank = aUserVisibleCards[iDragItemIndex]?.rank,\n\t\t\tsDropedPositionRank = aUserVisibleCards[iDropItemIndex]?.rank;\n\t\tlet iUpdatedDragItemIndex = aUserAllCards.findIndex((oCard: ICard) => oCard.rank === sDragedPositionRank),\n\t\t\tiUpdatedDropItemIndex = aUserAllCards.findIndex((oCard: ICard) => oCard.rank === sDropedPositionRank);\n\n\t\tif (\n\t\t\t(sInsertPosition === \"Before\" && iDragItemIndex === iDropItemIndex - 1) ||\n\t\t\t(sInsertPosition === \"After\" && iDragItemIndex === iDropItemIndex + 1) ||\n\t\t\tiDragItemIndex === iDropItemIndex\n\t\t) {\n\t\t\tthis.cardsContainer?.setBusy(false);\n\t\t\treturn;\n\t\t}\n\t\tif (sInsertPosition === \"Before\" && iUpdatedDragItemIndex < iUpdatedDropItemIndex) {\n\t\t\tiUpdatedDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iUpdatedDragItemIndex > iUpdatedDropItemIndex) {\n\t\t\tiUpdatedDropItemIndex++;\n\t\t}\n\t\tif (iUpdatedDragItemIndex !== iUpdatedDropItemIndex) {\n\t\t\tconst aUpdatedCards = this.cardHelperInstance.handleDndCardsRanking(\n\t\t\t\tiUpdatedDragItemIndex,\n\t\t\t\tiUpdatedDropItemIndex,\n\t\t\t\taUserAllCards\n\t\t\t);\n\t\t\tawait this.cardHelperInstance._updateMultipleCards(aUpdatedCards, \"PUT\");\n\t\t\tthis._sortCardsOnRank(aUserAllCards);\n\t\t\tthis._controlModel.setProperty(\"/userAllCards\", aUserAllCards);\n\t\t\tthis._controlModel.setProperty(\n\t\t\t\t\"/userVisibleCards\",\n\t\t\t\taUserAllCards.filter((oCard: ICard) => oCard.visibility)\n\t\t\t);\n\t\t\tawait this.rerenderCards();\n\t\t} else {\n\t\t\tthis.cardsContainer?.setBusy(false);\n\t\t}\n\t}\n\n\tprivate _sortCardsOnRank(aCards: ICard[]) {\n\t\t// Sort Cards based on it rank property where rank is a alphanumeric string\n\t\taCards.sort((a, b) => {\n\t\t\tif (a.rank && b.rank) {\n\t\t\t\tif (a.rank < b.rank) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a.rank > b.rank) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\tprivate _getPersonalization() {\n\t\tconst persContainerId = PersonalisationUtils.getPersContainerId(this);\n\t\tconst ownerComponent = PersonalisationUtils.getOwnerComponent(this) as Component;\n\t\treturn UShellPersonalizer.getInstance(persContainerId, ownerComponent);\n\t}\n\n\t/**\n\t * Updates the recommendation status based on the feature toggle.\n\t * @returns {Promise} A promise that resolves when the recommendation status is updated.\n\t */\n\tprivate async _updateRecommendationStatus() {\n\t\tconst bRecommendationEnabled = await this.appManagerInstance.isFeatureEnabled(FEATURE_TOGGLES.RECOMMENDATION);\n\t\tif (bRecommendationEnabled) {\n\t\t\tif (!this.oPersonalizer) {\n\t\t\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\t\t}\n\t\t\tlet oPersData = await this.oPersonalizer.read();\n\t\t\tif (!oPersData) {\n\t\t\t\toPersData = {};\n\t\t\t}\n\t\t\toPersData.showRecommendation = true;\n\t\t\treturn this.oPersonalizer.write(oPersData);\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the number of visible cards that can fit within the available width of the parent container.\n\t *\n\t * @private\n\t * @returns {number} - The number of visible cards.\n\t */\n\tprivate _calculateVisibleCardCount() {\n\t\tconst pageDomRef = (this.getParent() as InsightsContainer)._getLayout().getDomRef();\n\t\tconst deviceType = this.getDeviceType();\n\t\tlet count = 1;\n\n\t\tif (pageDomRef) {\n\t\t\tconst sectionDomRef = pageDomRef.childNodes[0] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tconst iAvailableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tlet cardWidth = deviceType === DeviceType.Mobile ? 17 : this._calculateCardWidth(iAvailableWidth);\n\n\t\t\t// Calculate and log the number of cards that can fit\n\t\t\tcount =\n\t\t\t\tdeviceType === DeviceType.Mobile ? this.aVisibleCardInstances.length : Math.floor(iAvailableWidth / (cardWidth * 16 + 14));\n\t\t\tthis.cardWidth = `${cardWidth}rem`;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Calculates the optimal card width based on the given container width.\n\t *\n\t * @param {number} containerWidth - The width of the container in which the cards will be placed.\n\t * @returns {number} - The calculated card width in rem units.\n\t */\n\tprivate _calculateCardWidth(containerWidth: number): number {\n\t\tconst minWidth = 304;\n\t\tconst maxWidth = 352;\n\t\tconst margin = 14;\n\t\tlet count = 1;\n\t\tlet cardWidth = minWidth;\n\n\t\t//calculate the maximum number of cards that can fit in the container within the range of min and max width\n\t\twhile (containerWidth / count >= minWidth + margin) {\n\t\t\tcardWidth = containerWidth / count;\n\t\t\tcount += 1;\n\t\t}\n\t\tcardWidth -= margin;\n\t\tcardWidth = cardWidth > maxWidth ? maxWidth : cardWidth;\n\t\treturn cardWidth / 16;\n\t}\n\n\t/**\n\t * Adjusts the layout of the cards panel based on the current layout and device type.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic _adjustLayout() {\n\t\tconst layout = (this.getParent() as InsightsContainer)?._getLayout();\n\t\tconst isFullScreenEnabled = this.getProperty(\"enableFullScreen\") as boolean;\n\t\tlet cardWidth = this.cardWidth;\n\n\t\tif (layout && isFullScreenEnabled) {\n\t\t\tconst isElementExpanded = layout._getCurrentExpandedElementName() === this.getProperty(\"fullScreenName\");\n\t\t\tconst cardCount = isElementExpanded ? this.aVisibleCardInstances.length : this._calculateVisibleCardCount();\n\n\t\t\t// update cards in viewport\n\t\t\tif (cardCount !== this.cardsInViewport.length) {\n\t\t\t\tthis.cardsInViewport = this.aVisibleCardInstances.slice(0, cardCount);\n\n\t\t\t\tconst sDefaultAggreName = this.cardsContainer.getMetadata().getDefaultAggregationName();\n\t\t\t\tthis.cardsContainer.removeAllAggregation(sDefaultAggreName);\n\t\t\t\tthis.cardsInViewport.forEach((card) => {\n\t\t\t\t\tconst manifest = card.getManifest() as ICardManifest;\n\t\t\t\t\tconst sType = manifest[\"sap.card\"]?.type;\n\t\t\t\t\tlet overlayHBoxWrapper!: HBox;\n\t\t\t\t\tif (sType === \"Table\" || sType === \"List\") {\n\t\t\t\t\t\tconst overlay = new HBox({\n\t\t\t\t\t\t\twidth: this.cardWidth,\n\t\t\t\t\t\t\theight: \"2rem\"\n\t\t\t\t\t\t}).addStyleClass(\"insightsCardOverflowLayer insightsCardOverflowTop\");\n\t\t\t\t\t\toverlayHBoxWrapper = new HBox({\n\t\t\t\t\t\t\theight: \"0\"\n\t\t\t\t\t\t}).addStyleClass(\"sapMFlexBoxJustifyCenter\");\n\t\t\t\t\t\toverlayHBoxWrapper.addItem(overlay);\n\t\t\t\t\t}\n\t\t\t\t\tconst cardWrapper = new VBox({\n\t\t\t\t\t\tdirection: \"Column\",\n\t\t\t\t\t\tjustifyContent: \"Center\",\n\t\t\t\t\t\titems: [card]\n\t\t\t\t\t});\n\t\t\t\t\tif (overlayHBoxWrapper) {\n\t\t\t\t\t\tcardWrapper.addItem(overlayHBoxWrapper);\n\t\t\t\t\t}\n\t\t\t\t\tconst sDefaultAggreName = this.cardsContainer.getMetadata().getDefaultAggregationName();\n\t\t\t\t\tthis.cardsContainer.addAggregation(sDefaultAggreName, cardWrapper);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// show/hide Full Screen Button if available\n\t\t\t(this.getParent() as InsightsContainer)?.toggleFullScreenElements(\n\t\t\t\tthis,\n\t\t\t\tthis.aVisibleCardInstances.length > cardCount,\n\t\t\t\tisElementExpanded\n\t\t\t);\n\t\t} else {\n\t\t\tthis.cardWidth = this.getDeviceType() === DeviceType.Mobile ? \"17rem\" : \"22rem\";\n\t\t}\n\n\t\t// update width of cards on resize\n\t\tif (cardWidth !== this.cardWidth) {\n\t\t\tthis.aVisibleCardInstances.forEach((card) => card.setWidth(this.cardWidth));\n\t\t\tthis.cardsContainerSettings?.setColumnSize(this.cardWidth);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}