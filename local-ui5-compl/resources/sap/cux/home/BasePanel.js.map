{"version":3,"file":"BasePanel.js","names":["sap","ui","define","Element","Lib","___utils_Device","calculateDeviceType","BasePanel","extend","metadata","library","properties","title","type","group","defaultValue","key","tooltip","visibility","enableSettings","enableKeyUserSettings","enableFullScreen","fullScreenName","defaultAggregation","aggregations","content","multiple","singularName","actionButtons","menuItems","events","onExpand","associations","fullScreenButton","constructor","_constructor","id","settings","Element.prototype.constructor.call","this","init","_init","_content","_i18nBundle","getResourceBundleFor","_getContent","getAggregation","_addContent","control","push","insertAggregation","getParent","_addToPanel","_setCount","count","_setPanelCount","getDeviceType","_getDeviceType","container"],"sources":["BasePanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport BaseContainer from \"./BaseContainer\";\nimport { $BasePanelSettings } from \"./BasePanel\";\nimport { DeviceType, calculateDeviceType } from \"./utils/Device\";\n\n/**\n *\n * Abstract base panel class for My Home layout control panel.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BasePanel\n */\nexport default abstract class BasePanel extends Element {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _content!: Control[];\n\n\tconstructor(id?: string | $BasePanelSettings);\n\tconstructor(id?: string, settings?: $BasePanelSettings);\n\tconstructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the panel.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Key for the panel.\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Tooltip for the panel.\n\t\t\t */\n\t\t\ttooltip: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies whether settings should be enabled for the panel.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies whether key user settings should be enabled for the panel.\n\t\t\t */\n\t\t\tenableKeyUserSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\", defaultValue: true },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t * This property specifies the parameter key expected in the URL query string\n\t\t\t * to identify the container to be expanded.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Specifies the content aggregation of the panel.\n\t\t\t */\n\t\t\tcontent: { multiple: true, singularName: \"content\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies the actions to be shown within the panel.\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\" },\n\t\t\t/**\n\t\t\t * Specifies the items that are shown within the dropdown menu of the panel.\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired before the container is expanded.\n\t\t\t */\n\t\t\tonExpand: {}\n\t\t},\n\t\tassociations: {\n\t\t\tfullScreenButton: { type: \"sap.m.Button\", multiple: false, singularName: \"fullScreenButton\", visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._content = [];\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t}\n\n\t/**\n\t * Cache and return panel content since the content would\n\t * have a different inner control as parent after rendering\n\t *\n\t * @private\n\t * @returns {Control[]} - array of panel content\n\t */\n\tpublic _getContent(): Control[] {\n\t\tthis._content = this._content || this.getAggregation(\"content\");\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Overridden method for adding content to a panel so that\n\t * it's added to the corresponding layout-specific inner\n\t * control as well\n\t *\n\t * @private\n\t * @param {Control} control - control to be added to the content\n\t */\n\tpublic _addContent(control: Control): void {\n\t\tthis._content = this._content || this.getAggregation(\"content\");\n\t\tthis._content.push(control);\n\t\tthis.insertAggregation(\"content\", control, 0);\n\n\t\t//Insert into parent's layout control\n\t\t(this.getParent() as BaseContainer)?._addToPanel(this, control);\n\t}\n\n\t/**\n\t * Updates the count information of IconTabFilter of IconTabBar inner control\n\t * in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {string} count - updated count information\n\t */\n\tpublic _setCount(count?: string): void {\n\t\t(this.getParent() as BaseContainer)?._setPanelCount(this, count);\n\t}\n\n\t/**\n\t * Retrieves the device type for the current panel.\n\t *\n\t * @private\n\t * @returns {DeviceType} - The device type of the parent container if it exists,\n\t * otherwise calculates and returns the device type based on the current device width.\n\t */\n\tprotected getDeviceType(): DeviceType {\n\t\tconst container = this.getParent() as BaseContainer;\n\t\treturn container ? container.getDeviceType() : calculateDeviceType();\n\t}\n}\n"],"mappings":";;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,oEAAAC,EAAAC,EAAAC,GAAA,mBAYqBC,EAAmBD,EAAA,uBAExC,MAiB8BE,EAAkBJ,EAAOK,OAAA,0BAUtCC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,MAAO,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAItDC,IAAK,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIpDE,QAAS,CAAEJ,KAAM,SAAUC,MAAO,OAAQC,aAAc,GAAIG,WAAY,UAIxEC,eAAgB,CAAEN,KAAM,UAAWC,MAAO,OAAQI,WAAY,UAI9DE,sBAAuB,CAAEP,KAAM,UAAWC,MAAO,OAAQI,WAAY,SAAUH,aAAc,MAI7FM,iBAAkB,CAAER,KAAM,UAAWC,MAAO,OAAQI,WAAY,UAMhEI,eAAgB,CAAET,KAAM,SAAUC,MAAO,OAAQI,WAAY,WAE9DK,mBAAoB,UACpBC,aAAc,CAIbC,QAAS,CAAEC,SAAU,KAAMC,aAAc,UAAWT,WAAY,UAIhEU,cAAe,CAAEf,KAAM,eAAgBa,SAAU,KAAMC,aAAc,gBAIrEE,UAAW,CAAEhB,KAAM,wBAAyBa,SAAU,KAAMC,aAAc,aAE3EG,OAAQ,CAIPC,SAAU,CAAC,GAEZC,aAAc,CACbC,iBAAkB,CAAEpB,KAAM,eAAgBa,SAAU,MAAOC,aAAc,mBAAoBT,WAAY,YA5D3GgB,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAoEOG,KAAI,SAAAC,IACVF,KAAKG,SAAW,GAChBH,KAAKI,YAAcvC,EAAIwC,qBAAqB,oBAC7C,EASOC,YAAW,SAAAA,IACjBN,KAAKG,SAAWH,KAAKG,UAAYH,KAAKO,eAAe,WACrD,OAAOP,KAAKG,QACb,EAUOK,YAAW,SAAAA,EAACC,GAClBT,KAAKG,SAAWH,KAAKG,UAAYH,KAAKO,eAAe,WACrDP,KAAKG,SAASO,KAAKD,GACnBT,KAAKW,kBAAkB,UAAWF,EAAS,GAG1CT,KAAKY,aAA+BC,YAAYb,KAAMS,EACxD,EASOK,UAAS,SAAAA,EAACC,GACff,KAAKY,aAA+BI,eAAehB,KAAMe,EAC3D,EASUE,cAAa,SAAAC,IACtB,MAAMC,EAAYnB,KAAKY,YACvB,OAAOO,EAAYA,EAAUF,gBAAkBlD,GAChD,IAAC,OAnI4BC,CAAS","ignoreList":[]}