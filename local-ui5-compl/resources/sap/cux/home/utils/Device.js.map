{"version":3,"file":"Device.js","names":["sap","ui","define","Device","DeviceWidth","Mobile","Tablet","Desktop","DeviceType","calculateDeviceType","width","arguments","length","undefined","resize","system","phone","LargeDesktop","fetchElementProperties","domRef","properties","oProperties","forEach","property","parseFloat","window","getComputedStyle","getPropertyValue","__exports","__esModule"],"sources":["Device.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Device from \"sap/ui/Device\";\n\n/** Device widths in px */\nconst DeviceWidth = {\n\tMobile: 600,\n\tTablet: 1024,\n\tDesktop: 1440\n};\n\nexport enum DeviceType {\n\tMobile = \"Mobile\",\n\tTablet = \"Tablet\",\n\tDesktop = \"Desktop\",\n\tLargeDesktop = \"LargeDesktop\"\n}\n\n/**\n * Calculates the device type based on the given width.\n *\n * @param {number} [width=Device.resize.width] - The width of the device. Defaults to the current device width.\n * @returns {DeviceType} - The calculated device type.\n */\nexport function calculateDeviceType(width: number = Device.resize.width): DeviceType {\n\tif (width < DeviceWidth.Mobile || Device.system.phone) {\n\t\treturn DeviceType.Mobile;\n\t} else if (width < DeviceWidth.Tablet) {\n\t\treturn DeviceType.Tablet;\n\t} else if (width < DeviceWidth.Desktop) {\n\t\treturn DeviceType.Desktop;\n\t} else {\n\t\treturn DeviceType.LargeDesktop;\n\t}\n}\n\n/**\n * Fetches the specified CSS properties of a given DOM element and returns them as a record.\n *\n * @param {Element} domRef - The DOM element from which to fetch the properties.\n * @param {string[]} properties - An array of property names to fetch.\n * @returns {Record<string, number>} - A record where the keys are property names and the values are the corresponding property values as numbers.\n */\nexport function fetchElementProperties(domRef: Element, properties: string[]): Record<string, number> {\n\tconst oProperties: Record<string, number> = {};\n\tproperties.forEach((property) => {\n\t\toProperties[property] = parseFloat(window.getComputedStyle(domRef).getPropertyValue(property));\n\t});\n\n\treturn oProperties;\n}\n"],"mappings":";;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAAAC,GAAA,aAQA,MAAMC,EAAc,CACnBC,OAAQ,IACRC,OAAQ,KACRC,QAAS,MACR,IAEUC,EAAU,SAAVA,KAAU,mBAAVA,EAAU,mBAAVA,EAAU,qBAAVA,EAAU,sCAAVA,CAAU,EAAVA,GAAU,IAaf,SAASC,IAAqE,IAAjDC,EAAaC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAGR,EAAOW,OAAOJ,MACjE,GAAIA,EAAQN,EAAYC,QAAUF,EAAOY,OAAOC,MAAO,CACtD,OAAOR,EAAWH,MACnB,MAAO,GAAIK,EAAQN,EAAYE,OAAQ,CACtC,OAAOE,EAAWF,MACnB,MAAO,GAAII,EAAQN,EAAYG,QAAS,CACvC,OAAOC,EAAWD,OACnB,KAAO,CACN,OAAOC,EAAWS,YACnB,CACD,CASO,SAASC,EAAuBC,EAAiBC,GACvD,MAAMC,EAAsC,CAAC,EAC7CD,EAAWE,QAASC,IACnBF,EAAYE,GAAYC,WAAWC,OAAOC,iBAAiBP,GAAQQ,iBAAiBJ,MAGrF,OAAOF,CACR,CAAC,IAAAO,EAAA,CAAAC,WAAA,MAAAD,EAAApB,aAAAoB,EAAAnB,sBAAAmB,EAAAV,yBAAA,OAAAU,CAAA","ignoreList":[]}