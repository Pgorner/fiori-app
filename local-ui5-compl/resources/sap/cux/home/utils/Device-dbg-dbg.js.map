{"version":3,"file":"Device-dbg-dbg.js","names":["sap","ui","define","Device","DeviceWidth","Mobile","Tablet","Desktop","DeviceType","calculateDeviceType","width","arguments","length","undefined","resize","system","phone","LargeDesktop","fetchElementProperties","domRef","properties","oProperties","forEach","property","parseFloat","window","getComputedStyle","getPropertyValue","__exports","__esModule"],"sources":["Device.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Device from \"sap/ui/Device\";\n\n/** Device widths in px */\nconst DeviceWidth = {\n\tMobile: 600,\n\tTablet: 1024,\n\tDesktop: 1440\n};\n\nexport enum DeviceType {\n\tMobile = \"Mobile\",\n\tTablet = \"Tablet\",\n\tDesktop = \"Desktop\",\n\tLargeDesktop = \"LargeDesktop\"\n}\n\n/**\n * Calculates the device type based on the given width.\n *\n * @param {number} [width=Device.resize.width] - The width of the device. Defaults to the current device width.\n * @returns {DeviceType} - The calculated device type.\n */\nexport function calculateDeviceType(width: number = Device.resize.width): DeviceType {\n\tif (width < DeviceWidth.Mobile || Device.system.phone) {\n\t\treturn DeviceType.Mobile;\n\t} else if (width < DeviceWidth.Tablet) {\n\t\treturn DeviceType.Tablet;\n\t} else if (width < DeviceWidth.Desktop) {\n\t\treturn DeviceType.Desktop;\n\t} else {\n\t\treturn DeviceType.LargeDesktop;\n\t}\n}\n\n/**\n * Fetches the specified CSS properties of a given DOM element and returns them as a record.\n *\n * @param {Element} domRef - The DOM element from which to fetch the properties.\n * @param {string[]} properties - An array of property names to fetch.\n * @returns {Record<string, number>} - A record where the keys are property names and the values are the corresponding property values as numbers.\n */\nexport function fetchElementProperties(domRef: Element, properties: string[]): Record<string, number> {\n\tconst oProperties: Record<string, number> = {};\n\tproperties.forEach((property) => {\n\t\toProperties[property] = parseFloat(window.getComputedStyle(domRef).getPropertyValue(property));\n\t});\n\n\treturn oProperties;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAHA;;AAAAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,8BAAAC,MAAA;EAAA;;EAOA;EACA,MAAMC,WAAW,GAAG;IACnBC,MAAM,EAAE,GAAG;IACXC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE;EACV,CAAC;EAAC,IAEUC,UAAU,0BAAVA,UAAU;IAAVA,UAAU;IAAVA,UAAU;IAAVA,UAAU;IAAVA,UAAU;IAAA,OAAVA,UAAU;EAAA,EAAVA,UAAU;EAOtB;AACA;AACA;AACA;AACA;AACA;EACO,SAASC,mBAAmBA,CAAA,EAAkD;IAAA,IAAjDC,KAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,MAAM,CAACW,MAAM,CAACJ,KAAK;IACtE,IAAIA,KAAK,GAAGN,WAAW,CAACC,MAAM,IAAIF,MAAM,CAACY,MAAM,CAACC,KAAK,EAAE;MACtD,OAAOR,UAAU,CAACH,MAAM;IACzB,CAAC,MAAM,IAAIK,KAAK,GAAGN,WAAW,CAACE,MAAM,EAAE;MACtC,OAAOE,UAAU,CAACF,MAAM;IACzB,CAAC,MAAM,IAAII,KAAK,GAAGN,WAAW,CAACG,OAAO,EAAE;MACvC,OAAOC,UAAU,CAACD,OAAO;IAC1B,CAAC,MAAM;MACN,OAAOC,UAAU,CAACS,YAAY;IAC/B;EACD;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAASC,sBAAsBA,CAACC,MAAe,EAAEC,UAAoB,EAA0B;IACrG,MAAMC,WAAmC,GAAG,CAAC,CAAC;IAC9CD,UAAU,CAACE,OAAO,CAAEC,QAAQ,IAAK;MAChCF,WAAW,CAACE,QAAQ,CAAC,GAAGC,UAAU,CAACC,MAAM,CAACC,gBAAgB,CAACP,MAAM,CAAC,CAACQ,gBAAgB,CAACJ,QAAQ,CAAC,CAAC;IAC/F,CAAC,CAAC;IAEF,OAAOF,WAAW;EACnB;EAAC,IAAAO,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAApB,UAAA,GAAAA,UAAA;EAAAoB,SAAA,CAAAnB,mBAAA,GAAAA,mBAAA;EAAAmB,SAAA,CAAAV,sBAAA,GAAAA,sBAAA;EAAA,OAAAU,SAAA;AAAA","ignoreList":[]}