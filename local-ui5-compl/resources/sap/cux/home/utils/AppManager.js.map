{"version":3,"file":"AppManager.js","names":["sap","ui","define","Log","Formatting","ResourceBundle","VersionInfo","BaseObject","ODataModelV2","Config","Container","___CardSkeleton","___Constants","__DataFormatUtils","__HttpHelper","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","CardSkeleton","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","_forTo","array","check","i","reject","_cycle","length","DEFAULT_BG_COLOR","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","FALLBACK_ICON","FEATURE_TOGGLES","FEATURE_TOGGLE_SRVC_URL","MYHOME_PAGE_ID","MYHOME_SPACE_ID","MYINSIGHT_SECTION_ID","RECOMMENDATION_SRVC_URL","RECOMMENDED_CARD_LIMIT","DataFormatUtils","HttpHelper","CONSTANTS","MUST_INCLUDE_RECOMMEDED_APPS","_parseSBParameters","oParam","oParsedParams","JSON","parse","oError","error","Error","message","String","undefined","_getTileProperties","vizConfigFLP","oTileProperties","_instantiationData","chip","configuration","oConfig","tileConfiguration","oTileConfig","TILE_PROPERTIES","_getAppId","sAppId","semanticObject","action","semanticAction","_getTargetUrl","sTargetURL","evaluationId","_isSmartBusinessTile","oVisualization","vizType","startsWith","_getAppTitleSubTitle","oApp","oAppTileInfo","bags","sb_tileProperties","texts","title","subtitle","description","_linkDuplicateVizs","aVizs","forEach","oDuplicateViz","filter","oViz","appId","visualization","id","persConfig","sectionIndex","duplicateApps","_isGUIVisualization","parameters","_isMustIncludeRecommendation","recViz","fioriId","includes","_isVisualizationAlreadyAdded","favoriteVisualizations","some","favViz","AppManager","aRequestQueue","bInsightsSectionPresent","vizDataModified","constructor","super","getInstance","Instance","_fetchRequestFromQueue","bForceRefresh","Promise","resolve","getServiceAsync","oSpaceContentService","oPageLoadPromise","oRequestedPage","find","oRequest","pageId","getPage","pageLoadPromise","_fetchDynamicVizs","fetchFavVizs","aFavApps","oDynApp","isCount","isSmartBusinessTile","_getSections","arguments","_this2","oPage","aSections","sections","iRecentAppSectionIndex","findIndex","oSection","_temp2","_temp","_oMoveAppsPromise","moveSection","_fetchMyHomeVizs","_this3","iSectionIndex","visualizations","iVisualizationIndex","vizConfig","oVizInfo","oldAppId","targetURL","url","leanURL","getLeanURL","BGColor","key","isFav","isSection","icon","icons","indicatorDataSource","path","contentProviderId","sectionTitle","sectionId","visualizationIndex","isDefaultSection","isPresetSection","preset","_copyDynamicVizs","_this4","aDynamicVizs","all","map","oDynViz","addVisualization","vizId","bPreventGrouping","_this5","aMyHomeVizs","aVisibleFavVizs","_filterDuplicateVizs","_addGroupInformation","fetchInsightApps","sSectionTitle","_this6","_temp5","fnFetchInsightsApps","_temp4","insightsSectionIndex","_temp3","last","addSection","sectionProperties","visualizationId","spaceContentService","removeVisualizations","_ref","vizIds","_this7","_temp7","targetSection","_temp6","deleteVisualization","updateVisualizations","_ref2","sourceSectionIndex","sourceVisualizationIndex","oVisualizationData","updateVisualization","createInsightSection","_exit","_this8","_temp9","_result","_temp8","iMyInsightSectionIndex","_this8$addSection","visible","mProperties","getSectionVisualizations","forceRefresh","_this9","aApps","apps","addBookMark","bookmark","moveConfig","_this10","oBookmarkService","getContentNodes","aContentNodes","oMyHomeSpace","contentNode","children","addBookmark","createBookMarkData","moveVisualization","getVisualization","_this11","sectionVisualizations","sectionVisualization","_this12","targetSectionIndex","targetVisualizationIndex","aVisibleFavoriteVizs","bReturnDuplicateVizs","iVizIndex","iFirstIndex","oTempApp","aFavoriteVizs","aRecentVizs","oExistingSection","index","badge","toString","oPagesService","iPageIndex","getPageIndex","_getFeatureToggles","sFeatureToggleUrl","FEATURE_TOGGLE_KEYS","Object","keys","toggleFilter","sToggleKey","join","GetJSON","_HttpHelper$GetJSON","oResponse","isFeatureEnabled","sToggleId","_this13","aFeatureToggles","oToggle","oFeatureToggle","ToggleId","State","_getRecommenedFioriIds","_this14","RECOMMENDATION","recommendationEnabled","_exit2","_temp11","_result3","recommendedFioriIds","_temp10","_HttpHelper$GetJSON2","response","app_id","_Promise$resolve","_getCatalogApps","SearchableContent","getApps","includeAppsWithoutVisualizations","_isListReport","page","component","name","isAddCardToInsightsHidden","settings","tableSettings","addCardtoInsightsHidden","_checkValidManifests","manifest","hasRequiredDataSource","dataSources","mainService","pages","Array","isArray","_getOdataModel","oManifest","datasource","annotationUrls","annotations","sname","uri","urls","oDataModel","annotationURI","loadAnnotationsJoined","attachMetadataLoaded","attachMetadataFailed","_getEntitySet","entitySet","_hasMandatoryProperties","oEntitySet","aProperties","oProperty","_getParametersisedEntitySetParams","oMetaModel","sEntitySet","bInfoParams","oResult","entitySetName","navPropertyName","getODataEntitySet","oEntityType","getODataEntityType","entityType","aNavigationProperties","navigationProperty","oNavProperty","oNavigationEntitySet","getODataAssociationEnd","oNavigationEntityType","type","getODataAssociationSetEnd","propertyRef","navProp","property","navProperty","aSubNavigationProperties","bBackAssociationPresent","oSubNavigationProperty","sSubNavigationEntityType","_getColumnDetail","oLineItemContext","oColumnObject","Value","Path","getODataProperty","Bool","sColumnKeyDescription","sColumnValue","sNavigation","aSemKeyAnnotation","bIsPropertySemanticKey","oAnnotation","PropertyPath","concat","sTextArragement","_setColumnTextValue","identifier","importance","sTextArrangementType","EnumMember","split","_getManifestCardData","lineItem","oParentApp","mainServiceUri","serviceUrl","aColumns","oColumn","oItem","aColumnSorted","sortCollectionByImportance","column","splice","cardTitle","subTitle","columns","loadI18n","manifestUrl","_this15","_temp13","_RBManifestMap","absoluteUrl","i18nBundleUrl","URL","href","_temp12","create","bundleUrl","async","terminologies","oResourceBundle","getI18nValueOrDefaultString","sValue","oRB","sPath","substring","getText","_getAttributeValue","oAttribute","oAttributeValue","oDateFormatOptions","stringify","pattern","getDatePattern","_getManifest","oInput","cardSkeletonCopy","oCard","Date","now","header","oContent","content","item","attributes","data","request","actions","ibnTarget","parentAppId","cardType","versions","ui5","versionInfo","version","buildTimestamp","_getCardMainfest","aAppIds","_this16","_getInboundApps","_ref3","aInbounds","aCatalog","load","_VersionInfo$load","aAppUrls","signature","defaultValue","oCatalog","resolutionResult","applicationDependencies","aManifestPromises","fetch","json","_response$json","aManifest","validManifests","manifestObj","odataPromises","model","getMetaModel","aMetaModel","cardPromises","_exit3","_temp15","_result5","cardInput","oLineItem","parameterDetails","paramEntitySet","ui5ComponentName","_temp14","i18n","i18nResourceBundle","_this16$_getManifest","cards","card","_removeDuplicateCards","aCards","oCardDict","aResult","sCardTitle","descriptorContent","getRecommenedCards","_this17","aManifests","aRecManifests","slice","aRecommendedCards","rec","getRecommendedVisualizations","_this18","_temp18","_recommendedVisualizations","_temp17","_temp16","finalRecommendations","mustIncludeRecommendations","_getVisualizationsByFioriIds","_ref4","recommendedVisualizations","service","_oAdapter","_aInbounds","fioriIds","_this19","visitedVisualizations","Map","_ref5","inbounds","catalogApps","authorizedApps","inbound","app","matchingVizualizations","catalogApp","guiVisualizations","matchingVizualization","nonGuiVisualizations","recommendedVisualization","has","set"],"sources":["AppManager.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport Model from \"sap/ui/model/Model\";\nimport ODataMetaModel, { EntitySet, EntityType, Property } from \"sap/ui/model/odata/ODataMetaModel\";\nimport ODataModelV2 from \"sap/ui/model/odata/v2/ODataModel\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport Bookmark from \"sap/ushell/services/BookmarkV2\";\nimport ClientSideTargetResolution from \"sap/ushell/services/ClientSideTargetResolution\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport SpaceContent from \"sap/ushell/services/SpaceContent\";\nimport { ICustomVisualization, IParseSBParameters, ISection, ISectionAndVisualization, IVisualization } from \"../interface/AppsInterface\";\nimport { ICard, ICardManifest } from \"../interface/CardsInterface\";\nimport { IPage } from \"../interface/PageSpaceInterface\";\nimport { CardSkeleton } from \"./CardSkeleton\";\nimport {\n\tDEFAULT_BG_COLOR,\n\tFALLBACK_ICON,\n\tFEATURE_TOGGLES,\n\tFEATURE_TOGGLE_SRVC_URL,\n\tMYHOME_PAGE_ID,\n\tMYHOME_SPACE_ID,\n\tMYINSIGHT_SECTION_ID,\n\tRECOMMENDATION_SRVC_URL,\n\tRECOMMENDED_CARD_LIMIT\n} from \"./Constants\";\nimport DataFormatUtils from \"./DataFormatUtils\";\nimport HttpHelper from \"./HttpHelper\";\n\nconst CONSTANTS = {\n\tMUST_INCLUDE_RECOMMEDED_APPS: [\"F0862\", \"F1823\"] //My Inbox and Manage Timesheet apps\n};\n\ninterface IFeatureToggles {\n\tRECOMMENDATION: string;\n\tTASK_ACTIONS: string;\n}\n\ninterface IGenericApp {\n\tcomponent?: {\n\t\tname?: string;\n\t\tsettings?: {\n\t\t\ttableSettings?: {\n\t\t\t\taddCardtoInsightsHidden?: boolean;\n\t\t\t};\n\t\t};\n\t};\n\tentitySet?: IEntitySet;\n}\n\nexport interface IEntitySet extends EntitySet {\n\t\"Org.OData.Capabilities.V1.FilterRestrictions\"?: {\n\t\tRequiredProperties?: Array<unknown>;\n\t};\n}\n\ninterface IEntityType extends EntityType {\n\t\"com.sap.vocabularies.UI.v1.LineItem\": Array<ILineItemContext>;\n\t\"sap:semantics\": string;\n\t\"com.sap.vocabularies.Common.v1.SemanticKey\": Array<{\n\t\tPropertyPath: string;\n\t}>;\n\t\"com.sap.vocabularies.UI.v1.TextArrangement\": {\n\t\tEnumMember: string;\n\t};\n\t\"com.sap.vocabularies.Common.v1.Label\": {\n\t\tString: string;\n\t};\n\tproperty: Property[];\n}\n\ninterface ILineItemContext {\n\tValue: {\n\t\tPath: string;\n\t};\n\t\"com.sap.vocabularies.UI.v1.Importance\": string;\n\t\"com.sap.vocabularies.UI.v1.Hidden\": {\n\t\tBool: boolean;\n\t};\n}\n\ninterface IManifestCardData {\n\tcardTitle?: string;\n\tsubTitle: string;\n\turl: string;\n\tsemanticObject: string;\n\taction: string;\n\tid?: string;\n\tcolumns: Array<unknown>;\n}\n\nconst _parseSBParameters = (oParam: object | string | undefined): IParseSBParameters | undefined => {\n\tlet oParsedParams: IParseSBParameters | undefined = {};\n\tif (oParam) {\n\t\tif (typeof oParam === \"object\") {\n\t\t\toParsedParams = oParam;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\toParsedParams = JSON.parse(oParam) as object;\n\t\t\t} catch (oError) {\n\t\t\t\tLog.error(oError instanceof Error ? oError.message : String(oError));\n\t\t\t\toParsedParams = undefined;\n\t\t\t}\n\t\t}\n\t}\n\treturn oParsedParams;\n};\n\nconst _getTileProperties = (vizConfigFLP?: IVisualization): IParseSBParameters | undefined => {\n\tlet oTileProperties: IParseSBParameters | undefined = {};\n\tif (vizConfigFLP?._instantiationData?.chip?.configuration) {\n\t\tconst oConfig: IParseSBParameters | undefined = _parseSBParameters(vizConfigFLP._instantiationData.chip.configuration);\n\t\tif (oConfig?.tileConfiguration) {\n\t\t\tconst oTileConfig: IParseSBParameters | undefined = _parseSBParameters(oConfig.tileConfiguration);\n\t\t\tif (oTileConfig) {\n\t\t\t\toTileProperties = _parseSBParameters(oTileConfig.TILE_PROPERTIES);\n\t\t\t}\n\t\t}\n\t}\n\treturn oTileProperties;\n};\n\nconst _getAppId = (vizConfigFLP: IVisualization | undefined): string => {\n\tlet sAppId = \"\";\n\tlet oTileProperties: IParseSBParameters | undefined = {};\n\tif (vizConfigFLP?.target?.semanticObject && vizConfigFLP?.target?.action) {\n\t\tsAppId = `#${vizConfigFLP.target.semanticObject}-${vizConfigFLP.target.action}`;\n\t} else if (vizConfigFLP?._instantiationData?.chip?.configuration) {\n\t\toTileProperties = _getTileProperties(vizConfigFLP);\n\t\tif (oTileProperties?.semanticObject && oTileProperties?.semanticAction) {\n\t\t\tsAppId = `#${oTileProperties?.semanticObject}-${oTileProperties?.semanticAction}`;\n\t\t}\n\t}\n\treturn sAppId;\n};\n\nconst _getTargetUrl = (vizConfigFLP: IVisualization | undefined) => {\n\tlet sTargetURL = _getAppId(vizConfigFLP) || \"\";\n\tconst oTileProperties = _getTileProperties(vizConfigFLP);\n\tif (oTileProperties?.evaluationId) {\n\t\tsTargetURL += \"?EvaluationId=\" + oTileProperties.evaluationId;\n\t}\n\treturn sTargetURL;\n};\n\nconst _isSmartBusinessTile = (oVisualization: IVisualization): boolean => {\n\treturn oVisualization.vizType?.startsWith(\"X-SAP-UI2-CHIP:SSB\");\n};\n\n// get App Title in case of value not present at root level\nconst _getAppTitleSubTitle = (oApp: IVisualization, vizConfigFLP: IVisualization): { title: string; subtitle: string } => {\n\tconst oAppTileInfo = vizConfigFLP?._instantiationData?.chip?.bags?.sb_tileProperties?.texts;\n\treturn {\n\t\ttitle: oApp.title ? oApp.title : oAppTileInfo?.title || \"\",\n\t\tsubtitle: oApp.subtitle ? oApp.subtitle : oAppTileInfo?.description || \"\"\n\t};\n};\n\n/**\n * Link Duplicate Visualizations to a single visualization\n *\n * @param {object[]} aVizs - array of visualizations\n * @returns {object[]} arry of visualizations after linking duplicate visualizations\n * @private\n */\nconst _linkDuplicateVizs = (aVizs: ICustomVisualization[]) => {\n\taVizs.forEach((oDuplicateViz) => {\n\t\taVizs\n\t\t\t.filter(\n\t\t\t\t(oViz) =>\n\t\t\t\t\toViz.appId === oDuplicateViz.appId &&\n\t\t\t\t\toViz?.visualization?.id !== oDuplicateViz?.visualization?.id &&\n\t\t\t\t\toViz.persConfig?.sectionIndex === oDuplicateViz.persConfig?.sectionIndex\n\t\t\t)\n\t\t\t.forEach((oViz) => {\n\t\t\t\toViz?.persConfig?.duplicateApps?.push(oDuplicateViz);\n\t\t\t});\n\t});\n\n\treturn aVizs;\n};\n\nconst _isGUIVisualization = (visualization: AppData) => {\n\treturn visualization?.target?.parameters?.[\"sap-ui-tech-hint\"]?.value?.value === \"GUI\";\n};\n\nconst _isMustIncludeRecommendation = (recViz: ICustomVisualization) => {\n\treturn recViz.fioriId && CONSTANTS.MUST_INCLUDE_RECOMMEDED_APPS.includes(recViz.fioriId);\n};\n\nconst _isVisualizationAlreadyAdded = (visualization: ICustomVisualization, favoriteVisualizations: ICustomVisualization[]) => {\n\treturn !favoriteVisualizations.some(\n\t\t(favViz) =>\n\t\t\tfavViz.visualization?.target?.semanticObject === visualization.visualization?.target?.semanticObject &&\n\t\t\tfavViz.visualization?.target?.action === visualization.visualization?.target?.action\n\t);\n};\n\n/**\n *\n * @class Provides the AppManager Class used for fetch and process user apps.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n * @hidden\n *\n * @alias sap.cux.home.util.AppManager\n */\nexport default class AppManager extends BaseObject {\n\tprivate aRequestQueue: { pageId: string; pageLoadPromise: Promise<IPage> }[] = [];\n\tprivate _oMoveAppsPromise!: Promise<void>;\n\tprivate bInsightsSectionPresent: boolean = false;\n\tpublic insightsSectionIndex!: number;\n\tstatic Instance: AppManager;\n\tprivate recommendedFioriIds!: string[];\n\tprivate versionInfo!: {\n\t\tversion: string;\n\t\tbuildTimestamp: string;\n\t};\n\tprivate _RBManifestMap!: Record<string, ResourceBundle>;\n\tprivate _recommendedVisualizations!: ICustomVisualization[];\n\tprivate vizDataModified: boolean = false;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tstatic getInstance() {\n\t\tif (!AppManager.Instance) {\n\t\t\tAppManager.Instance = new AppManager();\n\t\t}\n\t\treturn AppManager.Instance;\n\t}\n\t/**\n\t * Returns page load promise from the request queue if it exists, adds it to the queue if it doesn't\n\t *\n\t * @param {string} sPageId - page id\n\t * @param {boolean} bForceRefresh - force reload of data if true\n\t * @returns {Promise} - returns a promise which resolves with the requested page data\n\t * @private\n\t */\n\tprivate async _fetchRequestFromQueue(bForceRefresh: boolean): Promise<IPage> {\n\t\tconst oSpaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tlet oPageLoadPromise: Promise<IPage>;\n\t\tthis.aRequestQueue = this.aRequestQueue || [];\n\n\t\t//Check if request already exists in the queue, if not add it\n\t\tconst oRequestedPage = this.aRequestQueue.find((oRequest) => oRequest.pageId === MYHOME_PAGE_ID);\n\t\tif (!oRequestedPage || bForceRefresh === true || this.vizDataModified === true) {\n\t\t\tthis.vizDataModified = false;\n\t\t\toPageLoadPromise = oSpaceContentService.getPage(MYHOME_PAGE_ID);\n\t\t\tif (oRequestedPage) {\n\t\t\t\toRequestedPage.pageLoadPromise = oPageLoadPromise;\n\t\t\t} else {\n\t\t\t\tthis.aRequestQueue.push({\n\t\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\t\tpageLoadPromise: oPageLoadPromise\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\toPageLoadPromise = oRequestedPage.pageLoadPromise;\n\t\t}\n\n\t\treturn oPageLoadPromise;\n\t}\n\t/**\n\t * Returns all dynamic visualizations present in MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all dynamic visualizations in MyHome page\n\t * @private\n\t */\n\tprivate _fetchDynamicVizs(bForceRefresh: boolean) {\n\t\treturn this.fetchFavVizs(bForceRefresh, true).then((aFavApps: ICustomVisualization[]) =>\n\t\t\taFavApps.filter((oDynApp) => oDynApp.isCount || oDynApp.isSmartBusinessTile)\n\t\t);\n\t}\n\t/**\n\t * Returns all the sections that are available in the MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all sections available in MyHome page\n\t * @private\n\t */\n\tpublic async _getSections(bForceRefresh: boolean = false): Promise<ISection[]> {\n\t\tconst oPage: IPage = await this._fetchRequestFromQueue(bForceRefresh);\n\t\tconst aSections = (oPage && oPage.sections) || [],\n\t\t\tiRecentAppSectionIndex: number = aSections.findIndex((oSection) => oSection.default);\n\t\tif (iRecentAppSectionIndex > 0) {\n\t\t\tif (this._oMoveAppsPromise !== undefined) {\n\t\t\t\tthis._oMoveAppsPromise = this.moveSection(iRecentAppSectionIndex, 0);\n\t\t\t\tawait this._oMoveAppsPromise;\n\t\t\t}\n\t\t\treturn this._getSections(true);\n\t\t} else {\n\t\t\treturn aSections;\n\t\t}\n\t}\n\t/**\n\t * Models and returns all visualizations available in MyHome page\n\t *\n\t * @param {bool} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all apps available in MyHome page\n\t * @private\n\t */\n\tprivate async _fetchMyHomeVizs(bForceRefresh: boolean): Promise<ICustomVisualization[]> {\n\t\tconst aVizs: ICustomVisualization[] = [];\n\t\tconst aSections = await this._getSections(bForceRefresh);\n\t\taSections.forEach((oSection: ISection, iSectionIndex: number) => {\n\t\t\toSection?.visualizations?.forEach((oVisualization: IVisualization, iVisualizationIndex: number) => {\n\t\t\t\tconst vizConfig = oVisualization.vizConfig,\n\t\t\t\t\toVizInfo = vizConfig?.[\"sap.app\"] || ({ title: \"?\" } as IVisualization),\n\t\t\t\t\toViz = {} as ICustomVisualization;\n\n\t\t\t\toViz.oldAppId = _getAppId(vizConfig?.[\"sap.flp\"]);\n\t\t\t\toViz.appId = oVisualization?.targetURL; // Using targetURL as unique identifier as in certian scenario vizConfig can be empty.\n\t\t\t\toViz.url = oVisualization?.targetURL;\n\t\t\t\tif (!oViz.url && _isSmartBusinessTile(oVisualization)) {\n\t\t\t\t\toViz.url = _getTargetUrl(vizConfig?.[\"sap.flp\"]);\n\t\t\t\t}\n\t\t\t\toViz.leanURL = DataFormatUtils.getLeanURL(oViz.url);\n\t\t\t\toViz.title = oVisualization?.title || _getAppTitleSubTitle(oVizInfo, oVisualization)?.title;\n\t\t\t\toViz.subtitle = oVisualization.subtitle || _getAppTitleSubTitle(oVizInfo, oVisualization).subtitle;\n\t\t\t\toViz.BGColor = DEFAULT_BG_COLOR().key;\n\t\t\t\toViz.isFav = true;\n\t\t\t\toViz.isSection = false;\n\t\t\t\toViz.icon = vizConfig?.[\"sap.ui\"]?.icons?.icon || FALLBACK_ICON;\n\t\t\t\tif (oVisualization?.indicatorDataSource) {\n\t\t\t\t\toViz.isCount = true;\n\t\t\t\t\toViz.indicatorDataSource = oVisualization.indicatorDataSource.path;\n\t\t\t\t\toViz.contentProviderId = oVisualization.contentProviderId;\n\t\t\t\t}\n\t\t\t\toViz.isSmartBusinessTile = _isSmartBusinessTile(oVisualization);\n\t\t\t\t// Add FLP Personalization Config\n\t\t\t\toViz.persConfig = {\n\t\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\t\tsectionTitle: oSection.title,\n\t\t\t\t\tsectionId: oSection.id,\n\t\t\t\t\tsectionIndex: iSectionIndex,\n\t\t\t\t\tvisualizationIndex: iVisualizationIndex,\n\t\t\t\t\tisDefaultSection: oSection.default,\n\t\t\t\t\tisPresetSection: oSection.preset,\n\t\t\t\t\tduplicateApps: []\n\t\t\t\t};\n\t\t\t\toViz.visualization = oVisualization;\n\t\t\t\t// Title and Subtitle in visualization are required in Insights Dialog.\n\t\t\t\toViz.visualization.title = oViz.title;\n\t\t\t\toViz.visualization.subtitle = oViz.subtitle;\n\t\t\t\taVizs.push(oViz);\n\t\t\t});\n\t\t});\n\t\treturn aVizs;\n\t}\n\t/**\n\t * Copies all Dynamic visualizations to Insights section\n\t *\n\t * @returns {Promise} - resolves to void and copy all the visualizations\n\t * @private\n\t */\n\tprivate async _copyDynamicVizs() {\n\t\tconst aDynamicVizs: ICustomVisualization[] = await this._fetchDynamicVizs(true);\n\t\treturn Promise.all(\n\t\t\taDynamicVizs.map((oDynViz: ICustomVisualization) => {\n\t\t\t\treturn this.addVisualization(oDynViz.visualization!.vizId, MYINSIGHT_SECTION_ID);\n\t\t\t})\n\t\t);\n\t}\n\t/**\n\t * Returns a list of all favorite vizualizations in MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of vizualizations data\n\t * @param {boolean} bPreventGrouping - prevent vizualizations grouping\n\t * @returns {Promise} - resolves to array of favourite vizualizations in MyHome page\n\t * @private\n\t */\n\tpublic async fetchFavVizs(bForceRefresh: boolean, bPreventGrouping?: boolean): Promise<ISectionAndVisualization[]> {\n\t\tconst aMyHomeVizs = await this._fetchMyHomeVizs(bForceRefresh);\n\t\tconst aVisibleFavVizs = aMyHomeVizs.filter(\n\t\t\t(oViz) => oViz.persConfig && oViz.persConfig.sectionId !== MYINSIGHT_SECTION_ID && oViz.url && oViz.title\n\t\t);\n\n\t\tif (bPreventGrouping) {\n\t\t\treturn this._filterDuplicateVizs(_linkDuplicateVizs(aVisibleFavVizs), false);\n\t\t} else {\n\t\t\treturn this._addGroupInformation(aVisibleFavVizs);\n\t\t}\n\t}\n\t/**\n\t * Returns all vizualizations present in the Insights Section\n\t *\n\t * @param {boolean} bForceRefresh - force reload insights vizualizations data\n\t * @param {string} sSectionTitle - optional, title of insights section to be used while creating insights section\n\t * @returns {Promise} - resolves to an array with all vizualizations in Insights section\n\t */\n\tpublic async fetchInsightApps(bForceRefresh: boolean, sSectionTitle: string) {\n\t\tconst fnFetchInsightsApps = async () => {\n\t\t\tconst aVizs = await this._fetchMyHomeVizs(bForceRefresh);\n\t\t\treturn aVizs.filter((oViz) => oViz.persConfig?.sectionId === MYINSIGHT_SECTION_ID && oViz.url && oViz.title);\n\t\t};\n\n\t\tif (!this.bInsightsSectionPresent) {\n\t\t\tconst aSections: ISection[] = await this._getSections(bForceRefresh);\n\t\t\tthis.insightsSectionIndex = aSections.findIndex(function (oSection) {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\tthis.insightsSectionIndex === -1 &&\n\t\t\t\t(Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) && \n\t\t\t\tthis.bInsightsSectionPresent === false\n\t\t\t) {\n\t\t\t\tthis.bInsightsSectionPresent = true;\n\t\t\t\tawait this.addSection({\n\t\t\t\t\tsectionIndex: aSections?.length,\n\t\t\t\t\tsectionProperties: {\n\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\ttitle: sSectionTitle\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait this._copyDynamicVizs();\n\t\t\t} else {\n\t\t\t\tthis.bInsightsSectionPresent = true;\n\t\t\t}\n\t\t}\n\n\t\treturn await fnFetchInsightsApps();\n\t}\n\n\t/**\n\t * Add visualization to a particular section\n\t *\n\t * @param {string} visualizationId - The id of the visualization to add.\n\t * @param {string} sectionId - The id of the section the visualization should be added to (optional parameter)\n\t * @returns {Promise} resolves to void after adding app to a section\n\t * @private\n\t */\n\tpublic async addVisualization(visualizationId: string, sectionId: string | undefined = undefined): Promise<void> {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tawait spaceContentService.addVisualization(MYHOME_PAGE_ID, sectionId, visualizationId);\n\t}\n\n\t/**\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.sectionId - section id from which visualizations should be removed\n\t * @param {object[]} mProperties.appIds - array of url of visualizations that has to be deleted\n\t * @param {boolean} mProperties.ignoreDuplicateApps - if true doesn't remove the duplicate apps, else removes the duplicate apps as well\n\t * @private\n\t * @returns {Promise} resolves after all visualizations are deleted\n\t */\n\tpublic async removeVisualizations({ sectionId, vizIds }: { sectionId: string; vizIds: string[] }) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tfor (const vizId of vizIds) {\n\t\t\ttry {\n\t\t\t\tconst sections = await this._getSections(true);\n\t\t\t\tconst sectionIndex = sections.findIndex((oSection) => oSection.id === sectionId);\n\t\t\t\tconst targetSection = sectionIndex > -1 ? sections[sectionIndex] : null;\n\t\t\t\tconst visualizationIndex = targetSection?.visualizations?.findIndex((oVisualization) => oVisualization.id === vizId) ?? -1;\n\t\t\t\tif (visualizationIndex > -1) {\n\t\t\t\t\tawait spaceContentService.deleteVisualization(MYHOME_PAGE_ID, sectionIndex, visualizationIndex);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(error as string);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.pageId - page id from which visualizations should be updated\n\t * @param {object[]} mProperties.sourceSectionIndex - section index in which visualization that has to be updated\n\t * @param {boolean} mProperties.sourceVisualizationIndex - visualization index in the which should be updated\n\t * @param {boolean} mProperties.oVisualizationData - visualization data which will be updated for the vizualisation\n\t * @private\n\t * @returns {Promise} resolves to void\n\t */\n\tpublic async updateVisualizations({\n\t\tpageId,\n\t\tsourceSectionIndex,\n\t\tsourceVisualizationIndex,\n\t\toVisualizationData\n\t}: {\n\t\tpageId: string;\n\t\tsourceSectionIndex: number;\n\t\tsourceVisualizationIndex: number;\n\t\toVisualizationData: { displayFormatHint: string };\n\t}) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\treturn spaceContentService.updateVisualization(pageId, sourceSectionIndex, sourceVisualizationIndex, oVisualizationData);\n\t}\n\n\t/**\n\t * Create Insight Section if not already present\n\t *\n\t * @param {string} sSectionTitle - optional, section title\n\t * @returns {Promise} - resolves to insight section created\n\t */\n\tpublic async createInsightSection(sSectionTitle: string) {\n\t\tif (!this.bInsightsSectionPresent) {\n\t\t\tconst aSections = await this._getSections();\n\t\t\tconst iMyInsightSectionIndex = aSections.findIndex(function (oSection) {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t});\n\n\t\t\t//check if myinsight section exists, if not create one\n\t\t\tif (\n\t\t\t\tiMyInsightSectionIndex === -1 &&\n\t\t\t\t(Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\"))\n\t\t\t) {\n\t\t\t\treturn this.addSection({\n\t\t\t\t\tsectionIndex: aSections.length,\n\t\t\t\t\tsectionProperties: {\n\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\ttitle: sSectionTitle,\n\t\t\t\t\t\tvisible: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Adds a section\n\t *\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.sectionIndex - section index\n\t * @param {object} mProperties.sectionProperties - section properties\n\t * @returns {Promise} resolves to void and creates the section\n\t * @private\n\t */\n\tpublic async addSection(mProperties: ISection) {\n\t\tconst { sectionIndex, sectionProperties } = mProperties;\n\t\tconst oSpaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tawait oSpaceContentService.addSection(MYHOME_PAGE_ID, sectionIndex, {\n\t\t\t...sectionProperties,\n\t\t\tvisible: true\n\t\t});\n\t}\n\n\t/**\n\t * Returns visualizations for a given section\n\t * @param {string} sectionId - section id\n\t * @param {boolean} [forceRefresh=false] - force reload of data if true\n\t * @returns {Promise} resolves to array of visualizations\n\t * @private\n\t */\n\tpublic async getSectionVisualizations(sectionId?: string, forceRefresh = false): Promise<ICustomVisualization[]> {\n\t\tconst aApps: ISectionAndVisualization[] = await this.fetchFavVizs(forceRefresh);\n\t\tif (sectionId) {\n\t\t\treturn aApps.find((oViz) => oViz.isSection && oViz.id === sectionId)?.apps || [];\n\t\t} else {\n\t\t\treturn aApps.filter((oViz) => !oViz.isSection); //return recently added apps\n\t\t}\n\t}\n\n\t/**\n\t * Adds a bookmark.\n\t * @private\n\t * @param {Object} bookmark - The bookmark data object.\n\t * @returns {Promise<void>} - A Promise that resolves once the bookmark is added.\n\t */\n\tpublic async addBookMark(\n\t\tbookmark: IVisualization,\n\t\tmoveConfig?: {\n\t\t\tsourceSectionIndex: number;\n\t\t\tsourceVisualizationIndex: number;\n\t\t\ttargetSectionIndex: number;\n\t\t\ttargetVisualizationIndex: number;\n\t\t}\n\t) {\n\t\tconst oBookmarkService: Bookmark = await Container.getServiceAsync(\"BookmarkV2\");\n\t\tconst aContentNodes = await oBookmarkService.getContentNodes();\n\t\tconst oMyHomeSpace = aContentNodes.find((contentNode) => contentNode.id === MYHOME_SPACE_ID);\n\t\tconst contentNode = oMyHomeSpace?.children?.find((contentNode) => contentNode.id === MYHOME_PAGE_ID);\n\t\tawait oBookmarkService.addBookmark(DataFormatUtils.createBookMarkData(bookmark), contentNode);\n\t\tif (moveConfig) {\n\t\t\treturn this.moveVisualization(moveConfig);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Retrieves the visualization with the specified appId within the specified section.\n\t * @param {string} appId - appId of the visualization for.\n\t * @param {string} sectionId - The ID of the section containing the visualization.\n\t * @param {boolean} [forceRefresh=false] - Whether to force a refresh of the section's cache.\n\t * @returns {Promise<object|null>} A promise that resolves with the visualization object if found, or null if not found.\n\t * @private\n\t */\n\tpublic async getVisualization(appId: string, sectionId?: string, forceRefresh = false) {\n\t\tconst sectionVisualizations = await this.getSectionVisualizations(sectionId, forceRefresh);\n\t\treturn sectionVisualizations.find((sectionVisualization) => sectionVisualization.appId === appId);\n\t}\n\n\t/**\n\t * Moves a visualization from source section to target section.\n\t * @param {object} moveConfig - Configuration object containing details for moving the visualization.\n\t * @param {number} moveConfig.sourceSectionIndex - Index of the source section.\n\t * @param {number} moveConfig.sourceVisualizationIndex - Index of the visualization within the source section.\n\t * @param {number} moveConfig.targetSectionIndex - Index of the target section.\n\t * @param {number} moveConfig.targetVisualizationIndex - Index at which the visualization will be placed within the target section.\n\t * @returns {Promise<void>} A promise that resolves to void after the move operation.\n\t * @private\n\t */\n\tpublic async moveVisualization(moveConfig: {\n\t\tsourceSectionIndex: number;\n\t\tsourceVisualizationIndex: number;\n\t\ttargetSectionIndex: number;\n\t\ttargetVisualizationIndex: number;\n\t}) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tthis.vizDataModified = true;\n\t\treturn spaceContentService.moveVisualization(\n\t\t\tMYHOME_PAGE_ID,\n\t\t\tmoveConfig.sourceSectionIndex,\n\t\t\tmoveConfig.sourceVisualizationIndex,\n\t\t\tmoveConfig.targetSectionIndex,\n\t\t\tmoveConfig.targetVisualizationIndex\n\t\t);\n\t}\n\n\t/**\n\t * Filters out duplicate visualizations from a list of all visualizations\n\t *\n\t * @param {object[]} aVisibleFavoriteVizs - array containing list of all visualizations\n\t * @param {boolean} bReturnDuplicateVizs - flag when set to true, returns only the duplicate apps\n\t * @returns {object[]} filtered array of vizualisations\n\t * @private\n\t */\n\tpublic _filterDuplicateVizs(aVisibleFavoriteVizs: ICustomVisualization[], bReturnDuplicateVizs: boolean) {\n\t\treturn aVisibleFavoriteVizs.filter((oViz, iVizIndex, aVizs) => {\n\t\t\tconst iFirstIndex = aVizs.findIndex((oTempApp) => oTempApp.appId === oViz.appId);\n\t\t\treturn bReturnDuplicateVizs ? iFirstIndex !== iVizIndex : iFirstIndex === iVizIndex;\n\t\t});\n\t}\n\n\t/**\n\t * Add Grouping Information to visualizations list, and return concatenated list.\n\t *\n\t * @param {object[]} aFavoriteVizs - list of all favorite visualizations\n\t * @returns {object[]} - concatenated list contaning grouping information as well\n\t * @private\n\t */\n\tprivate _addGroupInformation(aFavoriteVizs: ICustomVisualization[]) {\n\t\tconst aRecentVizs: ICustomVisualization[] = [],\n\t\t\taSections: ISection[] = [];\n\t\tlet oExistingSection: ISection | undefined;\n\n\t\t_linkDuplicateVizs(aFavoriteVizs).forEach((oViz) => {\n\t\t\tif (oViz.persConfig?.isDefaultSection) {\n\t\t\t\taRecentVizs.push(oViz);\n\t\t\t} else {\n\t\t\t\toExistingSection = aSections.find((oSection) => oSection.isSection && oSection.id === oViz.persConfig?.sectionId);\n\n\t\t\t\tif (!oExistingSection) {\n\t\t\t\t\taSections.push({\n\t\t\t\t\t\tid: oViz.persConfig?.sectionId,\n\t\t\t\t\t\tindex: oViz.persConfig?.sectionIndex,\n\t\t\t\t\t\ttitle: oViz.persConfig?.sectionTitle || \"\",\n\t\t\t\t\t\tbadge: \"1\",\n\t\t\t\t\t\tBGColor: DEFAULT_BG_COLOR().key,\n\t\t\t\t\t\ticon: \"sap-icon://folder-full\",\n\t\t\t\t\t\tisSection: true,\n\t\t\t\t\t\tisPresetSection: oViz.persConfig?.isPresetSection,\n\t\t\t\t\t\tapps: [oViz]\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\toExistingSection.apps?.push(oViz);\n\t\t\t\t\toExistingSection.badge = oExistingSection.apps?.length.toString();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//filter out duplicate apps only from recent apps list\n\t\treturn [...aSections, ...this._filterDuplicateVizs(aRecentVizs, false)];\n\t}\n\n\t/**\n\t * Move a section within a page\n\t *\n\t * @param {number} sourceSectionIndex - source index (previous index of the section in the page before move)\n\t * @param {number} targetSectionIndex - target index (desired index of the section in the page after move)\n\t * @returns {Promise} resolves to void  and moves the section to desired index within the page\n\t * @private\n\t */\n\tpublic async moveSection(sourceSectionIndex: number, targetSectionIndex: number): Promise<void> {\n\t\treturn Container.getServiceAsync(\"Pages\").then(function (oPagesService: {\n\t\t\tgetPageIndex: (id: string) => number;\n\t\t\tmoveSection: (index: number, sourceIndex: number, targetIndex: number) => void;\n\t\t}) {\n\t\t\tconst iPageIndex: number = oPagesService.getPageIndex(MYHOME_PAGE_ID);\n\t\t\treturn oPagesService.moveSection(iPageIndex, sourceSectionIndex, targetSectionIndex);\n\t\t} as () => void);\n\t}\n\n\t/**\n\t * Returns array of all feature toggles\n\t *\n\t * @returns {object[]} - returns array of all feature toggles.\n\t */\n\tprivate async _getFeatureToggles() {\n\t\tlet sFeatureToggleUrl = FEATURE_TOGGLE_SRVC_URL + \"?$filter=\";\n\t\tconst FEATURE_TOGGLE_KEYS = Object.keys(FEATURE_TOGGLES);\n\t\tconst toggleFilter = FEATURE_TOGGLE_KEYS.map((sToggleKey) => {\n\t\t\treturn \"ToggleId eq '\" + FEATURE_TOGGLES[sToggleKey as keyof IFeatureToggles] + \"'\";\n\t\t}).join(\" or \");\n\t\tsFeatureToggleUrl = sFeatureToggleUrl + \"(\" + toggleFilter + \")\";\n\t\tconst oResponse = (await HttpHelper.GetJSON(sFeatureToggleUrl)) as {\n\t\t\terror: { message: string };\n\t\t\tvalue: Array<{ ToggleId: string; State: string }>;\n\t\t};\n\t\tif (oResponse?.error) {\n\t\t\tthrow new Error(oResponse.error.message);\n\t\t}\n\t\treturn oResponse?.value || [];\n\t}\n\n\t/**\n\t * Checks if feature is enabled or not.\n\t *\n\t * @param {string} sToggleId - feature toggle id\n\t * @returns {boolean} - returns true if feature is enabled.\n\t */\n\tpublic async isFeatureEnabled(sToggleId: string) {\n\t\ttry {\n\t\t\tconst aFeatureToggles = await this._getFeatureToggles();\n\t\t\tconst oToggle = aFeatureToggles.find((oFeatureToggle) => {\n\t\t\t\treturn oFeatureToggle.ToggleId === sToggleId;\n\t\t\t});\n\t\t\treturn oToggle && oToggle.State === \"\" ? false : true;\n\t\t} catch (error) {\n\t\t\tLog.error(\"Unable to load feature toggles: \" + (error as Error).message);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Fetch Recommended Fiori IDs\n\t *\n\t * @returns {Promise} resolves to array of recommended fiori ids\n\t * @private\n\t */\n\tprivate async _getRecommenedFioriIds(bForceRefresh: boolean = false): Promise<string[]> {\n\t\tconst recommendationEnabled = await this.isFeatureEnabled(FEATURE_TOGGLES.RECOMMENDATION);\n\t\tif (!recommendationEnabled) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\tif (!this.recommendedFioriIds || bForceRefresh) {\n\t\t\ttry {\n\t\t\t\tconst response = (await HttpHelper.GetJSON(RECOMMENDATION_SRVC_URL)) as {\n\t\t\t\t\terror: { message: string };\n\t\t\t\t\tvalue: Array<{ app_id: string }>;\n\t\t\t\t};\n\t\t\t\tthis.recommendedFioriIds =\n\t\t\t\t\tresponse?.value?.map((oApp) => {\n\t\t\t\t\t\treturn oApp.app_id;\n\t\t\t\t\t}) || [];\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(\"Unable to load feature toggles: \" + (error as Error).message);\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t}\n\t\treturn this.recommendedFioriIds;\n\t}\n\n\t/**\n\t * Fetch Catalog Apps\n\t *\n\t * @returns {Promise} resolves to array of Catalog Apps\n\t * @private\n\t */\n\tpublic async _getCatalogApps() {\n\t\ttry {\n\t\t\tconst SearchableContent = await Container.getServiceAsync<SearchableContent>(\"SearchableContent\");\n\t\t\treturn SearchableContent.getApps({ includeAppsWithoutVisualizations: false });\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while fetching catalog apps: \" + (error as Error).message);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Check If Page is List Report\n\t *\n\t * @param {object} page - page object\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\tprivate _isListReport(page?: IGenericApp) {\n\t\treturn page?.component?.name === \"sap.suite.ui.generic.template.ListReport\";\n\t}\n\n\t/**\n\t * Checks whether page settings contains addCardtoInsightsHidden\n\t * @param {object} page - page object\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\t// checks whether page settings contains addCardtoInsightsHidden\n\tprivate isAddCardToInsightsHidden(page?: IGenericApp) {\n\t\treturn page?.component?.settings?.tableSettings?.addCardtoInsightsHidden;\n\t}\n\n\t/**\n\t * check Valid Manifests\n\t *\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\n\tprivate _checkValidManifests(manifest: ICardManifest) {\n\t\tconst hasRequiredDataSource = manifest[\"sap.ui.generic.app\"] && manifest[\"sap.app\"]?.dataSources?.mainService;\n\t\tif (!hasRequiredDataSource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pages = manifest[\"sap.ui.generic.app\"]?.pages as Array<IGenericApp> | Record<string, IGenericApp>;\n\t\t// if its not list report component or if listreport page settings has\n\t\t// isAddCardToInsightsHidden as true, then do not recommend the card\n\t\tif (Array.isArray(pages)) {\n\t\t\treturn this._isListReport(pages[0]) && !this.isAddCardToInsightsHidden(pages[0]);\n\t\t} else if (Object.keys(pages).length) {\n\t\t\treturn Object.keys(pages).some((key: string) => {\n\t\t\t\tif ((pages as Record<string, unknown>)[key]) {\n\t\t\t\t\treturn this._isListReport(pages[key]) && !this.isAddCardToInsightsHidden(pages[key]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get OData Model\n\t *\n\t * @param {object} manifest - manifest object\n\t * @returns {object} returns OData Model\n\t * @private\n\t */\n\tprivate _getOdataModel(oManifest: ICardManifest) {\n\t\treturn new Promise(function (resolve) {\n\t\t\tconst datasource = oManifest?.[\"sap.app\"]?.dataSources;\n\t\t\tconst mainService = datasource?.mainService;\n\t\t\tconst annotationUrls = mainService?.settings?.annotations\n\t\t\t\t.map((sname) => {\n\t\t\t\t\tif (datasource && datasource[sname]) {\n\t\t\t\t\t\treturn datasource[sname]?.uri;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.filter((urls) => urls !== undefined);\n\t\t\tconst oDataModel = new ODataModelV2(mainService?.uri as string, {\n\t\t\t\tannotationURI: annotationUrls as string[],\n\t\t\t\tloadAnnotationsJoined: true\n\t\t\t});\n\t\t\toDataModel.attachMetadataLoaded(() => {\n\t\t\t\tresolve(oDataModel);\n\t\t\t});\n\t\t\toDataModel.attachMetadataFailed(() => {\n\t\t\t\tresolve(oDataModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get Entity Set\n\t *\n\t * @param {object} manifest - manifest object\n\t * @returns {string} returns entity set\n\t * @private\n\t */\n\tprivate _getEntitySet(manifest: ICardManifest) {\n\t\tconst pages = manifest[\"sap.ui.generic.app\"]?.pages;\n\t\tif (Array.isArray(pages)) {\n\t\t\treturn pages[0].entitySet;\n\t\t} else if (pages) {\n\t\t\tfor (const key in pages as Record<string, IGenericApp>) {\n\t\t\t\tconst oApp = pages[key] as IGenericApp;\n\t\t\t\tif (oApp.component && oApp.component?.name === \"sap.suite.ui.generic.template.ListReport\") {\n\t\t\t\t\treturn oApp.entitySet;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * function returns true if the passed entityset / properties have mandatory properties\n\t *\n\t * @param {EntitySet} oEntitySet - Entity set\n\t * @param {Array} aProperties - Additional Properties\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\tprivate _hasMandatoryProperties(oEntitySet: IEntitySet, aProperties?: Property[]) {\n\t\t// if entityset has required properties in filter restrictions return true\n\t\tif (oEntitySet?.[\"Org.OData.Capabilities.V1.FilterRestrictions\"]?.[\"RequiredProperties\"]?.length) {\n\t\t\treturn true;\n\t\t} else if (aProperties?.length) {\n\t\t\t// iterate through all properties and return true if any property is mandatory or sap:rquired-in-filter is true\n\t\t\treturn aProperties.some((oProperty: Record<string, string> | Property) => {\n\t\t\t\treturn (\n\t\t\t\t\tObject.keys(oProperty).length &&\n\t\t\t\t\t((oProperty as Record<string, string>)[\"sap:parameter\"] === \"mandatory\" ||\n\t\t\t\t\t\t(oProperty as Record<string, string>)[\"sap:required-in-filter\"] === \"true\")\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get Parametersised Entity Set Params\n\t *\n\t * @param {ODataMetaModel} oMetaModel - Meta Model\n\t * @param {string} sEntitySet - Entity Set\n\t * @param {boolean} bIsParamEntitySet - Is Param Entity Set\n\t * @returns {object} returns entity set params\n\t * @private\n\t */\n\tprivate _getParametersisedEntitySetParams(oMetaModel: ODataMetaModel, sEntitySet: string, bInfoParams: boolean) {\n\t\tif (!oMetaModel) {\n\t\t\tthrow new Error(\"OData Model needs to be passed as an argument\");\n\t\t}\n\n\t\tconst oResult: { entitySetName: string | undefined | null; parameters: Array<object | string>; navPropertyName: string | null } = {\n\t\t\tentitySetName: null,\n\t\t\tparameters: [],\n\t\t\tnavPropertyName: null\n\t\t};\n\n\t\tconst oEntitySet = oMetaModel.getODataEntitySet(sEntitySet) as IEntitySet;\n\t\tconst oEntityType = oMetaModel.getODataEntityType(oEntitySet.entityType) as IEntityType;\n\t\tconst aNavigationProperties = oEntityType.navigationProperty;\n\n\t\tif (!aNavigationProperties) {\n\t\t\treturn oResult;\n\t\t}\n\t\t// filter the parameter entityset for extracting it's key and it's entityset name\n\t\taNavigationProperties.forEach(function (oNavProperty) {\n\t\t\tconst oNavigationEntitySet = oMetaModel.getODataAssociationEnd(oEntityType, oNavProperty.name);\n\t\t\tconst oNavigationEntityType = oNavigationEntitySet && (oMetaModel.getODataEntityType(oNavigationEntitySet.type) as IEntityType);\n\t\t\tif (oNavigationEntityType?.[\"sap:semantics\"] !== \"parameters\" || !oNavigationEntityType.key) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toResult.entitySetName = oMetaModel.getODataAssociationSetEnd(oEntityType, oNavProperty.name)?.entitySet as string;\n\t\t\tfor (let value of oNavigationEntityType.key.propertyRef) {\n\t\t\t\tif (bInfoParams) {\n\t\t\t\t\tconst navProp = oNavigationEntityType.property;\n\t\t\t\t\tfor (let navProperty of navProp) {\n\t\t\t\t\t\tif (navProperty.name === value.name) {\n\t\t\t\t\t\t\toResult.parameters.push(navProperty);\n\t\t\t\t\t\t\toResult.entitySetName = oMetaModel.getODataAssociationSetEnd(oEntityType, oNavProperty.name)?.entitySet;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toResult.parameters.push(value.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst aSubNavigationProperties = oNavigationEntityType.navigationProperty;\n\t\t\t// Parameter entityset must have association back to main entityset.\n\t\t\tconst bBackAssociationPresent = aSubNavigationProperties?.some(function (oSubNavigationProperty) {\n\t\t\t\tconst sSubNavigationEntityType = oMetaModel.getODataAssociationEnd(\n\t\t\t\t\toNavigationEntityType as EntityType,\n\t\t\t\t\toSubNavigationProperty.name\n\t\t\t\t)?.type;\n\t\t\t\t//if entityset.entitytype is same as subnavigation entitytype then it's a back association\n\t\t\t\toResult.navPropertyName = sSubNavigationEntityType === oEntitySet.entityType ? oSubNavigationProperty.name : null;\n\t\t\t\treturn oResult.navPropertyName;\n\t\t\t});\n\t\t\treturn bBackAssociationPresent && oResult.navPropertyName && oResult.entitySetName;\n\t\t});\n\t\treturn oResult;\n\t}\n\n\t/**\n\t * Get Column Detail\n\t *\n\t * @param {object} oEntityType - entity type object\n\t * @param {object} oMetaModel - meta model object\n\t * @param {object} oColumn - column object\n\t * @returns {object} returns column detail\n\t * @private\n\t */\n\tprivate _getColumnDetail(oEntityType: IEntityType, oMetaModel: ODataMetaModel, oLineItemContext: ILineItemContext) {\n\t\tlet oProperty,\n\t\t\toColumnObject: Record<string, unknown> = {};\n\t\ttype oDataProprty = Record<\n\t\t\tstring,\n\t\t\t{ Bool?: boolean; Path?: string; \"com.sap.vocabularies.UI.v1.TextArrangement\"?: { EnumMember: string } }\n\t\t>;\n\t\tif (oLineItemContext.Value?.Path) {\n\t\t\toProperty = oMetaModel.getODataProperty(oEntityType, oLineItemContext.Value.Path) as oDataProprty | Property;\n\t\t}\n\t\tif (\n\t\t\t!oProperty ||\n\t\t\t(oProperty as oDataProprty)[\"com.sap.vocabularies.UI.v1.Hidden\"]?.Bool ||\n\t\t\toLineItemContext[\"com.sap.vocabularies.UI.v1.Hidden\"]?.Bool\n\t\t) {\n\t\t\treturn oColumnObject;\n\t\t}\n\t\t// if there is field control path binding then ignore the column\n\t\tif ((oProperty as oDataProprty)[\"com.sap.vocabularies.Common.v1.FieldControl\"]?.Path) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet sColumnKeyDescription = (oProperty as oDataProprty)[\"com.sap.vocabularies.Common.v1.Text\"]?.Path || \"\";\n\t\tsColumnKeyDescription = \"{\" + sColumnKeyDescription + \"}\";\n\t\tlet sColumnValue = \"{\" + (oProperty.name as string) + \"}\";\n\t\tlet sNavigation = \"\"; //need to improve\n\t\tconst aSemKeyAnnotation = oEntityType[\"com.sap.vocabularies.Common.v1.SemanticKey\"];\n\t\tconst bIsPropertySemanticKey =\n\t\t\t!!aSemKeyAnnotation &&\n\t\t\taSemKeyAnnotation.some(function (oAnnotation) {\n\t\t\t\treturn oAnnotation.PropertyPath === (oProperty as oDataProprty).name;\n\t\t\t});\n\n\t\tif ((oProperty as oDataProprty)[\"Org.OData.Measures.V1.ISOCurrency\"]?.Path) {\n\t\t\tsColumnValue = sColumnValue.concat(\n\t\t\t\t\" \" + \"{\" + sNavigation + (oProperty as oDataProprty)[\"Org.OData.Measures.V1.ISOCurrency\"].Path + \"}\"\n\t\t\t);\n\t\t}\n\t\tif ((oProperty as oDataProprty)[\"Org.OData.Measures.V1.Unit\"]?.Path) {\n\t\t\tsColumnValue = sColumnValue.concat(\n\t\t\t\t\" \" + \"{\" + sNavigation + (oProperty as oDataProprty)[\"Org.OData.Measures.V1.Unit\"].Path + \"}\"\n\t\t\t);\n\t\t}\n\n\t\tif ((oProperty as oDataProprty)[\"com.sap.vocabularies.Common.v1.Text\"]?.Path) {\n\t\t\tlet sTextArragement = (oProperty as oDataProprty)[\"com.sap.vocabularies.Common.v1.Text\"][\n\t\t\t\t\"com.sap.vocabularies.UI.v1.TextArrangement\"\n\t\t\t];\n\t\t\tif (!sTextArragement) {\n\t\t\t\tsTextArragement = oEntityType[\"com.sap.vocabularies.UI.v1.TextArrangement\"];\n\t\t\t}\n\n\t\t\tthis._setColumnTextValue(sTextArragement, oColumnObject, sColumnKeyDescription, sColumnValue);\n\t\t} else {\n\t\t\toColumnObject[\"value\"] = sColumnValue;\n\t\t\tif (bIsPropertySemanticKey) {\n\t\t\t\toColumnObject.identifier = bIsPropertySemanticKey;\n\t\t\t}\n\t\t}\n\t\toColumnObject.path = (oProperty as oDataProprty)[\"com.sap.vocabularies.Common.v1.Text\"]\n\t\t\t? (oProperty as oDataProprty)[\"com.sap.vocabularies.Common.v1.Text\"].Path\n\t\t\t: oProperty.name;\n\t\toColumnObject.importance = oLineItemContext[\"com.sap.vocabularies.UI.v1.Importance\"];\n\t\toColumnObject.type = oProperty.type;\n\t\treturn oColumnObject;\n\t}\n\n\t/**\n\t * Sets display text format of column\n\t *\n\t * @private\n\t * @param {{EnumMember: string} | undefined} sTextArragement - sTextArragement object\n\t * @param {Record<string, unknown>} oColumnObject - Object containing column details\n\t * @param {string} sColumnKeyDescription - Description field to include in text value\n\t * @param {string} sColumnValue - The value to include in Text value\n\t */\n\tprivate _setColumnTextValue(\n\t\tsTextArragement: { EnumMember: string } | undefined,\n\t\toColumnObject: Record<string, unknown>,\n\t\tsColumnKeyDescription: string,\n\t\tsColumnValue: string\n\t) {\n\t\tconst sTextArrangementType = sTextArragement?.EnumMember.split(\"/\")[1];\n\n\t\tif (sTextArrangementType === \"TextOnly\") {\n\t\t\toColumnObject[\"value\"] = \"{= $\" + sColumnKeyDescription + \" === '' ? '' : $\" + sColumnKeyDescription + \"}\";\n\t\t} else if (sTextArrangementType === \"TextLast\") {\n\t\t\toColumnObject[\"value\"] =\n\t\t\t\t\"{= $\" +\n\t\t\t\tsColumnValue +\n\t\t\t\t\" === '' ? '' : $\" +\n\t\t\t\tsColumnValue +\n\t\t\t\t\"}\" +\n\t\t\t\t\"{= $\" +\n\t\t\t\tsColumnKeyDescription +\n\t\t\t\t\" === '' ? '' : ' (' + ($\" +\n\t\t\t\tsColumnKeyDescription +\n\t\t\t\t\") + ')'}\";\n\t\t} else if (sTextArrangementType === \"TextSeparate\") {\n\t\t\toColumnObject[\"value\"] = \"{= $\" + sColumnValue + \" === '' ? '' : $\" + sColumnValue + \"}\";\n\t\t} else {\n\t\t\t// Default case\n\t\t\toColumnObject[\"value\"] =\n\t\t\t\t\"{= $\" +\n\t\t\t\tsColumnKeyDescription +\n\t\t\t\t\" === '' ? '' : $\" +\n\t\t\t\tsColumnKeyDescription +\n\t\t\t\t\"}\" +\n\t\t\t\t\"{= $\" +\n\t\t\t\tsColumnValue +\n\t\t\t\t\" === '' ? '' : ' (' + ($\" +\n\t\t\t\tsColumnValue +\n\t\t\t\t\") + ')'}\";\n\t\t}\n\t}\n\n\t/**\n\t * Get Manifest Card Data\n\t *\n\t * @param {object} manifest - manifest object\n\t * @param {object} entityType - entity type object\n\t * @param {object} lineItem - line item object\n\t * @param {string} entitySet - entity set\n\t * @param {object} parentApp - parent app object\n\t * @param {object} metaModel - meta model object\n\t * @returns {object} returns card data\n\t * @private\n\t */\n\tprivate _getManifestCardData(\n\t\tmanifest: ICardManifest,\n\t\toEntityType: IEntityType,\n\t\tlineItem: Array<ILineItemContext>,\n\t\tentitySet: IEntitySet | string,\n\t\toParentApp: unknown,\n\t\toMetaModel: ODataMetaModel\n\t): IManifestCardData {\n\t\tconst mainServiceUri = manifest?.[\"sap.app\"]?.dataSources.mainService.uri;\n\t\tconst serviceUrl =\n\t\t\tmainServiceUri?.[mainServiceUri.length - 1] === \"/\"\n\t\t\t\t? mainServiceUri + (entitySet as string)\n\t\t\t\t: mainServiceUri + \"/\" + (entitySet as string);\n\n\t\t//get the column details for each of the lineitem columns\n\t\tconst aColumns = lineItem\n\t\t\t?.map((oColumn) => {\n\t\t\t\treturn this._getColumnDetail(oEntityType, oMetaModel, oColumn);\n\t\t\t})\n\t\t\t.filter(function (oItem) {\n\t\t\t\t// if no column or if path of column is complex path then filter it out\n\t\t\t\treturn oItem !== undefined && (oItem as { path: string }).path.split(\"/\").length <= 1;\n\t\t\t});\n\t\t//sort  the column based on their importance and then splice the first 4 columns\n\t\tconst aColumnSorted = DataFormatUtils.sortCollectionByImportance(aColumns)\n\t\t\t.map((column) => {\n\t\t\t\ttype prop = { path: string; type: string; value: string };\n\t\t\t\treturn { path: (column as prop).path, type: (column as prop).type, value: (column as prop).value };\n\t\t\t})\n\t\t\t.splice(0, 4);\n\t\treturn {\n\t\t\tcardTitle: manifest?.[\"sap.app\"]?.title,\n\t\t\tsubTitle: oEntityType[\"com.sap.vocabularies.Common.v1.Label\"]\n\t\t\t\t? \"Top 5 \" + oEntityType[\"com.sap.vocabularies.Common.v1.Label\"].String\n\t\t\t\t: \"\",\n\t\t\turl: serviceUrl + \"?$top=5&skip=0\",\n\t\t\tsemanticObject: (oParentApp as { semanticObject: string }).semanticObject,\n\t\t\taction: (oParentApp as { action: string }).action,\n\t\t\tid: manifest?.[\"sap.app\"]?.id,\n\t\t\tcolumns: aColumnSorted\n\t\t};\n\t}\n\n\t/**\n\t * Load I18n\n\t *\n\t * @param {object} manifest - manifest object\n\t * @param {string} manifestUrl - manifest url\n\t * @returns {object} returns resource bundle\n\t * @private\n\t */\n\tprivate async loadI18n(manifest: ICardManifest, manifestUrl: string) {\n\t\t// construct abslute url for properties file relative to manifest url\n\t\tconst i18nBundleUrl = manifest?.[\"sap.app\"]?.[\"i18n\"][\"bundleUrl\"] as string;\n\t\tconst absoluteUrl = new URL(i18nBundleUrl, manifestUrl).href;\n\t\tthis._RBManifestMap = this._RBManifestMap || {};\n\t\tif (!this._RBManifestMap[absoluteUrl]) {\n\t\t\tconst oResourceBundle = await ResourceBundle.create({\n\t\t\t\t// specify url of the base .properties file\n\t\t\t\tbundleUrl: absoluteUrl,\n\t\t\t\tasync: true,\n\t\t\t\tterminologies: manifest[\"sap.app\"]?.[\"i18n\"][\"terminologies\"]\n\t\t\t});\n\t\t\tthis._RBManifestMap[absoluteUrl] = oResourceBundle;\n\t\t}\n\t\treturn this._RBManifestMap[absoluteUrl];\n\t}\n\n\t/**\n\t * Get I18n Value Or Default String\n\t *\n\t * @param {string} sValue - value\n\t * @param {object} oResourceBundle - resource bundle object\n\t * @returns {string} returns string\n\t * @private\n\t */\n\tprivate getI18nValueOrDefaultString(sValue: string, oRB: ResourceBundle) {\n\t\tlet sPath = \"\";\n\t\tif (sValue && sValue.startsWith(\"{{\")) {\n\t\t\tsPath = sValue.substring(2, sValue.length - 2);\n\t\t} else if (sValue && sValue.startsWith(\"{\")) {\n\t\t\tsPath = sValue.substring(1, sValue.length - 1);\n\t\t}\n\t\treturn sPath ? oRB.getText(sPath) : sValue;\n\t}\n\n\t/**\n\t * Get Attribute Value\n\t *\n\t * @param {object} oColumn - column object\n\t * @returns {string} returns attribute value\n\t * @private\n\t */\n\tprivate _getAttributeValue(oAttribute: unknown) {\n\t\ttype attribute = { value: string; path: string; type: string };\n\t\tlet oAttributeValue = !(oAttribute as attribute).value.startsWith(\"{\")\n\t\t\t? \"{= extension.formatters.stringFormatter(${\" + (oAttribute as attribute).path + \"}) }\"\n\t\t\t: (oAttribute as attribute).value;\n\t\tif ((oAttribute as attribute).type === \"Edm.Date\" || (oAttribute as attribute).type === \"Edm.DateTime\") {\n\t\t\tconst oDateFormatOptions = JSON.stringify({\n\t\t\t\tpattern: Formatting.getDatePattern(\"short\")\n\t\t\t});\n\t\t\toAttributeValue =\n\t\t\t\t\"{=${\" +\n\t\t\t\t(oAttribute as attribute).path +\n\t\t\t\t\"}?format.dateTime(${\" +\n\t\t\t\t(oAttribute as attribute).path +\n\t\t\t\t\"}, \" +\n\t\t\t\toDateFormatOptions +\n\t\t\t\t\") : ''}\";\n\t\t}\n\t\treturn oAttributeValue;\n\t}\n\n\t/**\n\t * Get Manifest\n\t *\n\t * @param {object} cardInput - card input object\n\t * @returns {object} returns manifest\n\t * @private\n\t */\n\tprivate _getManifest(oInput: IManifestCardData) {\n\t\tconst cardSkeletonCopy = JSON.parse(JSON.stringify(CardSkeleton)) as ICardManifest;\n\t\tconst oApp = cardSkeletonCopy[\"sap.app\"];\n\t\tconst oCard = cardSkeletonCopy[\"sap.card\"];\n\t\tif (oApp) {\n\t\t\toApp.id = \"user.\" + oInput.id + \".\" + Date.now();\n\t\t\toApp.title = (oCard.header as { title: string }).title = oInput.cardTitle as string;\n\t\t\toApp.subTitle = (oCard.header as { subTitle: string }).subTitle = oInput.subTitle;\n\t\t}\n\t\tconst oContent = oCard.content;\n\t\toContent.item.title = this._getAttributeValue(oInput.columns[0]);\n\t\toContent.item.description = this._getAttributeValue(oInput.columns[1]);\n\t\toContent.item.attributes[0] = {\n\t\t\tvalue: this._getAttributeValue(oInput.columns[2]),\n\t\t\tvisible: \"{= !!${\" + (oInput.columns[2] as { path: string }).path + \"} }\"\n\t\t};\n\t\toContent.data.request.url = oInput.url;\n\n\t\toContent.item.actions = oCard.header.actions = [\n\t\t\t{\n\t\t\t\ttype: \"Navigation\",\n\t\t\t\tparameters: {\n\t\t\t\t\tibnTarget: {\n\t\t\t\t\t\tsemanticObject: oInput.semanticObject,\n\t\t\t\t\t\taction: oInput.action\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\tcardSkeletonCopy[\"sap.insights\"] = {\n\t\t\tparentAppId: oInput.id as string,\n\t\t\tcardType: \"RT\",\n\t\t\tversions: {\n\t\t\t\tui5: this.versionInfo.version + \"-\" + this.versionInfo.buildTimestamp\n\t\t\t},\n\t\t\tvisible: true\n\t\t};\n\n\t\treturn cardSkeletonCopy;\n\t}\n\n\t/**\n\t * Fetch Card Mainfest\n\t *\n\t * @param {string[]} aAppIds - array of app ids\n\t * @returns {Promise} resolves to array of card manifest\n\t * @private\n\t */\n\tprivate async _getCardMainfest(aAppIds: string[]) {\n\t\tconst [aInbounds, aCatalog] = await Promise.all([this._getInboundApps(), this._getCatalogApps()]);\n\t\tthis.versionInfo = (await VersionInfo.load()) as { version: string; buildTimestamp: string };\n\n\t\tlet aAppUrls = aAppIds\n\t\t\t.map((appId) => {\n\t\t\t\tconst oApp = aInbounds.find((oItem) => {\n\t\t\t\t\treturn oItem?.signature?.parameters?.[\"sap-fiori-id\"]?.defaultValue?.value === appId;\n\t\t\t\t});\n\n\t\t\t\tif (oApp) {\n\t\t\t\t\tconst oViz = aCatalog.find((oCatalog) => {\n\t\t\t\t\t\treturn oApp.semanticObject === oCatalog.target?.semanticObject && oApp.action === oCatalog.target?.action;\n\t\t\t\t\t});\n\t\t\t\t\treturn (oViz && oApp?.resolutionResult?.applicationDependencies?.manifest) as string;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t})\n\t\t\t.filter((url) => {\n\t\t\t\treturn url !== undefined;\n\t\t\t});\n\n\t\tconst aManifestPromises = aAppUrls.map(async (url) => {\n\t\t\tconst response = await fetch(String(url));\n\t\t\tconst manifest = (await response.json()) as ICardManifest;\n\t\t\treturn {\n\t\t\t\turl: response.url,\n\t\t\t\tmanifest: manifest\n\t\t\t};\n\t\t});\n\n\t\tconst aManifest = await Promise.all(aManifestPromises);\n\n\t\tconst validManifests = aManifest.filter((manifestObj) => {\n\t\t\treturn this._checkValidManifests(manifestObj.manifest);\n\t\t});\n\n\t\tconst odataPromises = validManifests.map((manifestObj) => {\n\t\t\treturn this._getOdataModel(manifestObj.manifest).then((model) => {\n\t\t\t\treturn (model as Model).getMetaModel();\n\t\t\t});\n\t\t});\n\n\t\tconst aMetaModel = await Promise.all(odataPromises);\n\t\tconst cardPromises = validManifests.map(async (manifestObj, index) => {\n\t\t\ttry {\n\t\t\t\tconst oMetaModel = aMetaModel[index] as ODataMetaModel;\n\t\t\t\tconst entitySet = this._getEntitySet(manifestObj.manifest);\n\t\t\t\tif (!entitySet) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst oEntitySet = oMetaModel.getODataEntitySet(entitySet as string) as IEntitySet;\n\t\t\t\tconst oEntityType = oMetaModel.getODataEntityType(oEntitySet.entityType) as IEntityType;\n\t\t\t\tconst oLineItem = oEntityType[\"com.sap.vocabularies.UI.v1.LineItem\"];\n\t\t\t\tif (!oLineItem || this._hasMandatoryProperties(oEntitySet, oEntityType.property)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst parameterDetails = this._getParametersisedEntitySetParams(oMetaModel, entitySet as string, true);\n\t\t\t\tif (parameterDetails && parameterDetails.entitySetName && parameterDetails.parameters.length) {\n\t\t\t\t\tconst paramEntitySet = oMetaModel.getODataEntitySet(parameterDetails.entitySetName) as EntitySet;\n\t\t\t\t\tif (this._hasMandatoryProperties(paramEntitySet, parameterDetails.parameters as Property[])) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst oParentApp = aInbounds.find(function (oApp) {\n\t\t\t\t\treturn oApp.resolutionResult && oApp.resolutionResult.ui5ComponentName === manifestObj?.manifest?.[\"sap.app\"]?.id;\n\t\t\t\t});\n\t\t\t\tconst cardInput = this._getManifestCardData(\n\t\t\t\t\tmanifestObj.manifest,\n\t\t\t\t\toEntityType,\n\t\t\t\t\toLineItem,\n\t\t\t\t\tentitySet as IEntitySet,\n\t\t\t\t\toParentApp as unknown,\n\t\t\t\t\toMetaModel\n\t\t\t\t);\n\t\t\t\t// if less than 3 columns are present in the card, then do not recommend the card\n\t\t\t\tif (cardInput.columns.length < 3) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (typeof manifestObj?.manifest?.[\"sap.app\"]?.i18n === \"object\") {\n\t\t\t\t\tconst i18nBundleUrl = manifestObj.manifest[\"sap.app\"].i18n.bundleUrl;\n\t\t\t\t\t//if manifest title is not resolved load the resource bundle of the parent app and get the text\n\t\t\t\t\tif (\n\t\t\t\t\t\ti18nBundleUrl &&\n\t\t\t\t\t\t(manifestObj.manifest[\"sap.app\"].title.startsWith(\"i18n>\") || manifestObj.manifest[\"sap.app\"].title.startsWith(\"{\"))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst i18nResourceBundle = await this.loadI18n(manifestObj.manifest, manifestObj.url);\n\t\t\t\t\t\tcardInput.cardTitle = this.getI18nValueOrDefaultString(cardInput.cardTitle as string, i18nResourceBundle);\n\t\t\t\t\t\treturn this._getManifest(cardInput);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._getManifest(cardInput);\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(error as string);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\tconst cards = await Promise.all(cardPromises);\n\t\treturn cards.filter((card) => {\n\t\t\treturn card !== undefined;\n\t\t});\n\t}\n\n\t/**\n\t * Remove Duplicate Cards\n\t *\n\t * @param {object[]} aCards - array of cards\n\t * @returns {object[]} returns array of cards\n\t * @private\n\t */\n\tprivate _removeDuplicateCards(aCards: ICard[]) {\n\t\tconst oCardDict: Record<string, unknown> = {};\n\t\tconst aResult: ICard[] = [];\n\t\taCards.forEach((oCard) => {\n\t\t\tconst sCardTitle = oCard?.descriptorContent?.[\"sap.card\"]?.header?.title || \"\";\n\t\t\tif (!oCardDict[sCardTitle]) {\n\t\t\t\taResult.push(oCard);\n\t\t\t\toCardDict[sCardTitle] = true;\n\t\t\t}\n\t\t});\n\t\treturn aResult;\n\t}\n\n\t/**\n\t * Fetch Recommended Cards\n\t *\n\t * @returns {Promise} resolves to array of recommended cards\n\t * @private\n\t */\n\tpublic async getRecommenedCards() {\n\t\ttry {\n\t\t\tconst aAppIds = await this._getRecommenedFioriIds();\n\t\t\tconst aManifests = await this._getCardMainfest(aAppIds);\n\t\t\tconst aRecManifests = aManifests.slice(0, RECOMMENDED_CARD_LIMIT);\n\t\t\tconst aRecommendedCards = aRecManifests.map((manifest) => {\n\t\t\t\tlet id;\n\t\t\t\tif (manifest) {\n\t\t\t\t\tmanifest[\"sap.card\"].rec = true;\n\t\t\t\t\tid = manifest[\"sap.app\"]?.id as string;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tid,\n\t\t\t\t\tdescriptorContent: manifest\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn this._removeDuplicateCards(aRecommendedCards as ICard[]);\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while fetching recommended cards: \" + (error as Error).message);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a list of recommended visualizations for the user.\n\t *\n\t * The final list is composed of up to 10 recommendations, with must-include visualizations prioritized.\n\t * If no recommended visualizations are available or if an error occurs, it returns an empty array.\n\t *\n\t * @private\n\t * @async\n\t * @param {boolean} [forceRefresh=false] - If `true`, forces a refresh of the recommended visualizations\n\t *                                         regardless of whether they are cached.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves to an array of recommended visualizations.\n\t *                                            The array is limited to 10 visualizations, including must-include recommendations.\n\t */\n\tpublic async getRecommendedVisualizations(forceRefresh: boolean = false) {\n\t\tif (!this._recommendedVisualizations || forceRefresh) {\n\t\t\tconst recommendedFioriIds = await this._getRecommenedFioriIds(forceRefresh);\n\t\t\tif (recommendedFioriIds.length) {\n\t\t\t\tlet finalRecommendations: ICustomVisualization[] = [];\n\t\t\t\tlet mustIncludeRecommendations: ICustomVisualization[] = [];\n\t\t\t\tlet [recommendedVisualizations, favoriteVisualizations] = await Promise.all([\n\t\t\t\t\tthis._getVisualizationsByFioriIds(recommendedFioriIds),\n\t\t\t\t\tthis._fetchMyHomeVizs(forceRefresh)\n\t\t\t\t]);\n\t\t\t\t//filter out recommendations that are already added\n\t\t\t\trecommendedVisualizations = recommendedVisualizations.filter((recViz) =>\n\t\t\t\t\t_isVisualizationAlreadyAdded(recViz, favoriteVisualizations)\n\t\t\t\t);\n\t\t\t\trecommendedVisualizations.forEach((recViz) => {\n\t\t\t\t\tif (_isMustIncludeRecommendation(recViz)) {\n\t\t\t\t\t\tmustIncludeRecommendations.push(recViz);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinalRecommendations.push(recViz);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//return only 10 recommended apps along with 'MyInbox' and 'Manage My Timesheet' if user has access to these apps.\n\t\t\t\tthis._recommendedVisualizations = finalRecommendations\n\t\t\t\t\t.slice(0, 10 - mustIncludeRecommendations.length)\n\t\t\t\t\t.concat(mustIncludeRecommendations);\n\t\t\t} else {\n\t\t\t\tthis._recommendedVisualizations = [];\n\t\t\t}\n\t\t}\n\t\treturn this._recommendedVisualizations;\n\t}\n\n\t/**\n\t * Asynchronously retrieves the list of inbound applications from the SAP Fiori client-side target resolution service.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<Array>} A promise that resolves to an array of inbound applications.\n\t *                            If an error occurs or the inbound applications are not available, it resolves to an empty array.\n\t */\n\tprivate async _getInboundApps() {\n\t\ttry {\n\t\t\tconst service = await Container.getServiceAsync<ClientSideTargetResolution>(\"ClientSideTargetResolution\");\n\t\t\treturn service?._oAdapter?._aInbounds || [];\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while fetching inbound apps: \" + (error as Error).message);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves visualizations based on a list of Fiori IDs.\n\t *\n\t * This function processes the given Fiori IDs to find associated visualizations. It does so by fetching\n\t * inbound applications and catalog apps, then matching the Fiori IDs to filter out and gather relevant visualizations.\n\t * The function distinguishes between GUI and non-GUI visualizations, prioritizing non-GUI visualizations if both types are found.\n\t * It also ensures that each visualization is unique based on its URL and title, avoiding duplicates.\n\t *\n\t * @private\n\t * @async\n\t * @param {string[]} fioriIds - An array of Fiori IDs to search for visualizations.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves to an array of unique visualizations associated with the provided Fiori IDs.\n\t */\n\tprivate async _getVisualizationsByFioriIds(fioriIds: string[]) {\n\t\tconst visualizations: ICustomVisualization[] = [];\n\t\tconst visitedVisualizations: Map<string, boolean> = new Map<string, boolean>();\n\t\tconst [inbounds, catalogApps] = await Promise.all([this._getInboundApps(), this._getCatalogApps()]);\n\t\tfioriIds.forEach((fioriId) => {\n\t\t\t// get all inbounds with the fiori id\n\t\t\tconst authorizedApps = inbounds.filter(function (inbound) {\n\t\t\t\treturn inbound?.signature.parameters[\"sap-fiori-id\"]?.defaultValue?.value === fioriId;\n\t\t\t});\n\t\t\tauthorizedApps.forEach((app) => {\n\t\t\t\t//filter apps that matched semantic object action\n\t\t\t\tlet matchingVizualizations = catalogApps.filter((catalogApp) => {\n\t\t\t\t\treturn catalogApp?.target?.semanticObject === app.semanticObject && catalogApp.target.action === app.action;\n\t\t\t\t});\n\n\t\t\t\tconst guiVisualizations = matchingVizualizations.filter((matchingVizualization) =>\n\t\t\t\t\t_isGUIVisualization(matchingVizualization)\n\t\t\t\t);\n\t\t\t\tconst nonGuiVisualizations = matchingVizualizations.filter(\n\t\t\t\t\t(matchingVizualization) => !_isGUIVisualization(matchingVizualization)\n\t\t\t\t);\n\t\t\t\t//if both gui and non-gui visualizations exists, then consider only non-gui visualizations for recommendation.\n\t\t\t\tif (guiVisualizations.length > 0 && nonGuiVisualizations.length > 0) {\n\t\t\t\t\tmatchingVizualizations = [...nonGuiVisualizations];\n\t\t\t\t}\n\n\t\t\t\tmatchingVizualizations.forEach((matchingVizualization) => {\n\t\t\t\t\tlet visualization = matchingVizualization.visualizations[0];\n\t\t\t\t\tlet recommendedVisualization: ICustomVisualization = {\n\t\t\t\t\t\ttitle: visualization.title,\n\t\t\t\t\t\tsubtitle: visualization.subtitle,\n\t\t\t\t\t\ticon: visualization.icon,\n\t\t\t\t\t\turl: visualization.targetURL,\n\t\t\t\t\t\tvizId: visualization.vizId,\n\t\t\t\t\t\tfioriId: fioriId,\n\t\t\t\t\t\tvisualization: visualization\n\t\t\t\t\t};\n\t\t\t\t\t//if app with same url or title already recommended, then don't consider it.\n\t\t\t\t\tif (\n\t\t\t\t\t\t!visitedVisualizations.has(recommendedVisualization.url!) ||\n\t\t\t\t\t\t!visitedVisualizations.has(recommendedVisualization.title!)\n\t\t\t\t\t) {\n\t\t\t\t\t\tvisitedVisualizations.set(recommendedVisualization.url!, true);\n\t\t\t\t\t\tvisitedVisualizations.set(recommendedVisualization.title!, true);\n\t\t\t\t\t\tvisualizations.push(recommendedVisualization);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn visualizations;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}