{"version":3,"file":"TilesPanel-dbg.js","names":["sap","ui","define","GridContainer","GridContainerItemLayoutData","Button","CustomListItem","Dialog","HBox","HeaderContainer","IllustratedMessage","Label","List","ObjectIdentifier","Title","sap_m_library","EventBus","Icon","Lib","DragDropInfo","sap_ui_core_library","JSONModel","Config","Container","S4MyHome","__BasePanel","__MenuItem","__AppManager","___utils_Constants","___utils_Device","___utils_DragDropUtils","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","ButtonType","dnd","BasePanel","MenuItem","AppManager","DEFAULT_BG_COLOR","END_USER_COLORS","MYHOME_PAGE_ID","MYINSIGHT_SECTION_ID","SETTINGS_PANELS_KEYS","DeviceType","fetchElementProperties","attachKeyboardHandler","addFESRId","addFESRSemanticStepName","FESR_EVENTS","tilesMenuItems","DisplayFormat","_showAddApps","last","TilesPanel","extend","metadata","library","properties","title","type","group","defaultValue","visibility","key","fullScreenName","defaultAggregation","aggregations","tiles","multiple","singularName","events","handleHidePanel","parameters","handleUnhidePanel","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","this","_insightsSectionTitle","_i18nBundle","getText","_addFromFavDialogId","getId","init","_init","_this","BasePanel.prototype.init.call","_controlMap","Map","_oData","activateInsightsTiles","_controlModel","appManagerInstance","getInstance","setProperty","refreshMenuItem","REFRESH","icon","press","refreshData","addfromFavAppMenuItem","ADD_APPS","_handleAddFromFavApps","editTilesMenuItem","EDIT_TILES","event","handleEditTiles","menuItems","addTilesButton","text","actionButtons","_setupHeader","Promise","resolve","getServiceAsync","_Container$getService","VizInstantiationService","oEventBus","subscribe","sChannelId","sEventId","oData","createInsightSection","_addSectionViz","_adjustLayout","_importdone","reject","_toggleTileActivity","_this2","toggleUserActions","show","getParameter","_temp","attachRouteMatched","aSectionViz","sSectionId","reduce","promiseChain","oViz","isBookmark","addBookMark","addVisualization","vizId","stateData","status","publish","forEach","menuItem","addAggregation","actionButton","renderPanel","_renderPanel","bRefresh","arguments","length","undefined","_exit","_this3","_temp3","_result2","_temp2","tilesContainer","_createWrapperFlexBox","_await$_this3$refresh","error","fireHandleHidePanel","_refreshData","refreshTiles","_this4","fetchInsightApps","_this4$appManagerInst","_temp5","aInsightsApps","fireHandleUnhidePanel","sDefaultAggreName","getMetadata","getDefaultAggregationName","dynamicTiles","getAggregation","refresh","_getInsightsContainer","updatePanelsItemCount","getName","getProperty","bIsSmartBusinessTilePresent","some","oApp","isSmartBusinessTile","_temp4","load","name","getDeviceType","Mobile","scrollStep","scrollStepByItem","gridLayout","scrollTime","showDividers","addStyleClass","setModel","bindAggregation","path","factory","context","getObject","oVisualization","instantiateVisualization","visualization","setLayoutData","minRows","columns","getDisplayFormat","Standard","bindProperty","addDragDropConfig","sourceAggregation","targetAggregation","dropPosition","DropPosition","Between","dropLayout","DropLayout","Horizontal","drop","oEvent","_handleTilesDnd","attachBrowserEvent","disablenavigation","metaKey","ctrlKey","dragDropEvent","_addContent","sInsertPosition","oDragItem","oDropItem","iDragItemIndex","getParent","indexOfItem","iDropItemIndex","_DragnDropTiles","_this5","oDisplacedItem","oItemMoved","splice","moveConfigs","pageId","sourceSectionIndex","persConfig","sectionIndex","sourceVisualizationIndex","visualizationIndex","targetSectionIndex","targetVisualizationIndex","moveVisualization","_handleEditTiles","parent","getSource","isA","_getLayout","openSettingsDialog","INSIGHTS_TILES","handleRemoveActions","_handleRemoveActions","removeAllAggregation","handleAddActions","_handleAddActions","_closeAddFromFavDialog","get","close","navigateToAppFinder","_navigateToAppFinder","groupId","navigationService","navigationObject","pageID","sectionID","navigate","target","shellHash","JSON","stringify","_getLegendColor","color","find","oColor","value","_this6","_getFavToAdd","appsToAdd","dialog","_generateAddFromFavAppsDialog","setVisible","_generateAddFromFavAppsListItems","open","_this7","fetchFavVizs","aFavApps","aDynamicApps","filter","oDynApp","isCount","aFilteredFavApps","iAppIndex","findIndex","oInsightApps","targetURL","_getSelectedInsights","list","getSelectedItems","destroyItems","listItems","map","app","index","content","alignItems","items","src","backgroundColor","BGColor","width","height","size","subtitle","tooltip","data","item","addItem","getAppFinderBtn","btnType","appFinderBtn","visible","Default","PRESS","setAddBtnEnabled","selectedItems","setEnabled","set","mode","selectionChange","addButton","_addFromFavApps","enabled","illustrationSize","illustrationType","description","wrapping","justifyContent","Transparent","contentWidth","contentHeight","endButton","bind","escapeHandler","buttons","_this8","setBusy","promise","oMovingConfig","insightsSectionIndex","displayFormatHint","supportedDisplayFormats","includes","_temp6","_calculateVisibleTileCount","insightsApps","layoutDomRef","getDomRef","apps","count","sectionDomRef","childNodes","domProperties","availableWidth","widthMap","StandardWide","nextTileWidth","layout","isFullScreenEnabled","isMobileDevice","visibleTileCount","isElementExpanded","_getCurrentExpandedElementName","slice","toggleFullScreenElements","insightsContainer"],"sources":["TilesPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerItemLayoutData from \"sap/f/GridContainerItemLayoutData\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Title from \"sap/m/Title\";\nimport { ButtonType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Icon from \"sap/ui/core/Icon\";\nimport Lib from \"sap/ui/core/Lib\";\nimport DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { DropInfo$DropEventParameters } from \"sap/ui/core/dnd/DropInfo\";\nimport { dnd } from \"sap/ui/core/library\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport BasePanel from \"./BasePanel\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport MenuItem from \"./MenuItem\";\nimport { $TilesPanelSettings } from \"./TilesPanel\";\nimport { ICustomVisualization, ISectionAndVisualization, IVisualization } from \"./interface/AppsInterface\";\nimport AppManager from \"./utils/AppManager\";\nimport { DEFAULT_BG_COLOR, END_USER_COLORS, MYHOME_PAGE_ID, MYINSIGHT_SECTION_ID, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { attachKeyboardHandler } from \"./utils/DragDropUtils\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\n\nexport enum tilesMenuItems {\n\tREFRESH = \"tiles-refresh\",\n\tADD_APPS = \"tiles-addSmartApps\",\n\tEDIT_TILES = \"tiles-editTiles\"\n}\n\nexport enum DisplayFormat {\n\tStandard = \"standard\",\n\tStandardWide = \"standardWide\"\n}\n\nconst _showAddApps = () => {\n\treturn (Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) as boolean;\n};\n\n/**\n *\n * Tiles Panel class for managing and storing Insights Tiles.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122.0\n *\n * @internal\n * @experimental Since 1.122\n * @public\n *\n * @alias sap.cux.home.TilesPanel\n */\n\nexport default class TilesPanel extends BasePanel {\n\tconstructor(idOrSettings?: string | $TilesPanelSettings);\n\tconstructor(id?: string, settings?: $TilesPanelSettings);\n\t/**\n\t * Constructor for a new Tiles Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $TilesPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\tprivate _oData!: Record<string, unknown>;\n\tprivate _insightsSectionTitle: string = this._i18nBundle.getText(\"insights\") as string;\n\tprivate _addFromFavDialogId: string = `${this.getId()}-addFromFavDialog`;\n\tprivate appManagerInstance!: AppManager;\n\tprivate VizInstantiationService!: VisualizationInstantiation;\n\tprivate tilesContainer!: GridContainer | HeaderContainer;\n\tprivate aInsightsApps!: ICustomVisualization[];\n\tprivate _controlModel!: JSONModel;\n\tpublic _controlMap!: Map<string, Control | Element>;\n\tpublic menuItems!: MenuItem[];\n\tpublic actionButtons!: Button[];\n\tprivate oEventBus!: EventBus;\n\tprivate insightsContainer!: InsightsContainer;\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the tiles panel\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Key for the tiles panel\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", defaultValue: \"SI1\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"tiles\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Aggregation of tiles available within the tiles Panel\n\t\t\t */\n\t\t\ttiles: { type: \"sap.cux.home.App\", multiple: true, singularName: \"tile\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\thandleHidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t},\n\t\t\thandleUnhidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t}\n\t\t}\n\t};\n\n\tasync init() {\n\t\tsuper.init();\n\t\tthis._controlMap = new Map();\n\t\t//Initialise Tiles Model\n\t\tthis._oData = {\n\t\t\ttiles: [] as ICustomVisualization[],\n\t\t\tactivateInsightsTiles: true\n\t\t};\n\t\tthis._controlModel = new JSONModel(this._oData);\n\t\tthis.appManagerInstance = AppManager.getInstance();\n\t\tthis.setProperty(\"title\", `${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsTilesTitle\")}`);\n\t\tconst refreshMenuItem = new MenuItem(tilesMenuItems.REFRESH, {\n\t\t\ttitle: this._i18nBundle.getText(\"refresh\"),\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\tpress: () => void this.refreshData(true)\n\t\t});\n\t\taddFESRId(refreshMenuItem, \"tilesRefresh\");\n\t\tconst addfromFavAppMenuItem = new MenuItem(tilesMenuItems.ADD_APPS, {\n\t\t\ttitle: this._i18nBundle.getText(\"addSmartApps\"),\n\t\t\ticon: \"sap-icon://duplicate\",\n\t\t\tpress: () => void this._handleAddFromFavApps()\n\t\t});\n\t\taddFESRId(addfromFavAppMenuItem, \"smartAppsDialog\");\n\t\tconst editTilesMenuItem = new MenuItem(tilesMenuItems.EDIT_TILES, {\n\t\t\ttitle: this._i18nBundle.getText(\"editLinkTiles\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: (event: Event) => this.handleEditTiles(event)\n\t\t});\n\t\taddFESRId(editTilesMenuItem, \"manageTiles\");\n\n\t\tthis.menuItems = [refreshMenuItem, addfromFavAppMenuItem, editTilesMenuItem];\n\n\t\tconst addTilesButton = new Button({\n\t\t\tid: `${this.getId()}-addTilesButton`,\n\t\t\ttext: this._i18nBundle.getText(\"appFinderLink\"),\n\t\t\tpress: () => void this._handleAddFromFavApps()\n\t\t});\n\t\taddFESRId(addTilesButton, \"smartAppsDialog\");\n\n\t\tthis.actionButtons = [addTilesButton];\n\n\t\t// Setup Header Content\n\t\tthis._setupHeader();\n\t\tthis.VizInstantiationService = await Container.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\");\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\t// Subscribe to the event\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"tilesImport\",\n\t\t\tasync (sChannelId?: string, sEventId?: string, oData?) => {\n\t\t\t\tawait this.appManagerInstance.createInsightSection(this._i18nBundle.getText(\"insightsTiles\") as string);\n\t\t\t\tawait this._addSectionViz(oData as IVisualization[], MYINSIGHT_SECTION_ID);\n\n\t\t\t\tthis._adjustLayout();\n\t\t\t\tthis._importdone();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\t// Toggles the activity of tiles\n\t\tthis._toggleTileActivity();\n\t}\n\n\t/**\n\t * Toggles the activity of tiles on route change.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _toggleTileActivity(): void {\n\t\tconst toggleUserActions = async (event: Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\tthis._controlModel.setProperty(\"/activateInsightsTiles\", show);\n\t\t\tif (show) {\n\t\t\t\tawait this.refreshData(true);\n\t\t\t}\n\t\t};\n\n\t\tS4MyHome.attachRouteMatched({}, toggleUserActions, this);\n\t}\n\n\t/**\n\t * Takes the visualizations and add it to the provided section id\n\t * @param {IVisualization[]} aSectionViz - array of visualizations\n\t * @param {string} sSectionId - section id where the visualizations to be added\n\t * @returns {any}\n\t */\n\tprivate _addSectionViz(aSectionViz: IVisualization[], sSectionId: string) {\n\t\treturn aSectionViz.reduce((promiseChain, oViz) => {\n\t\t\treturn promiseChain.then(() => {\n\t\t\t\tif (oViz.isBookmark) {\n\t\t\t\t\treturn this.appManagerInstance.addBookMark(oViz);\n\t\t\t\t} else {\n\t\t\t\t\treturn sSectionId\n\t\t\t\t\t\t? this.appManagerInstance.addVisualization(oViz.vizId, sSectionId)\n\t\t\t\t\t\t: this.appManagerInstance.addVisualization(oViz.vizId);\n\t\t\t\t}\n\t\t\t});\n\t\t}, Promise.resolve());\n\t}\n\n\tprivate _importdone() {\n\t\tconst stateData = { status: true };\n\t\tthis.oEventBus.publish(\"importChannel\", \"tilesImported\", stateData);\n\t}\n\n\tprivate _setupHeader() {\n\t\tthis.menuItems.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t\tthis.actionButtons.forEach((actionButton) => this.addAggregation(\"actionButtons\", actionButton));\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t}\n\n\tpublic async renderPanel(bRefresh: boolean = false): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.tilesContainer || bRefresh) {\n\t\t\t\tthis._createWrapperFlexBox();\n\t\t\t\treturn await this.refreshData();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tthis.fireHandleHidePanel();\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tpublic async refreshData(refreshTiles: boolean = false) {\n\t\tthis.aInsightsApps = await this.appManagerInstance.fetchInsightApps(true, this._insightsSectionTitle);\n\t\tconst bIsSmartBusinessTilePresent = this.aInsightsApps.some((oApp) => oApp.isSmartBusinessTile);\n\t\tif (bIsSmartBusinessTilePresent) {\n\t\t\tawait Lib.load({ name: \"sap.cloudfnd.smartbusiness.lib.reusetiles\" });\n\t\t}\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t\tif (this.aInsightsApps?.length) {\n\t\t\tthis.fireHandleUnhidePanel();\n\t\t\tif (refreshTiles && this.tilesContainer) {\n\t\t\t\tconst sDefaultAggreName = this.tilesContainer.getMetadata().getDefaultAggregationName();\n\t\t\t\tconst dynamicTiles = (this.tilesContainer.getAggregation(sDefaultAggreName) as ManagedObject[]) || [];\n\t\t\t\tdynamicTiles.forEach((tiles) => (tiles as ICustomVisualization).refresh?.());\n\t\t\t}\n\t\t\tthis.fireHandleUnhidePanel();\n\t\t\tthis._getInsightsContainer().updatePanelsItemCount(this.aInsightsApps.length, this.getMetadata().getName());\n\t\t\tif (this.getProperty(\"title\")) {\n\t\t\t\tthis.setProperty(\n\t\t\t\t\t\"title\",\n\t\t\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this.aInsightsApps.length})`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fireHandleHidePanel();\n\t\t}\n\n\t\t//adjust layout\n\t\tthis._adjustLayout();\n\t}\n\n\tprivate _createWrapperFlexBox() {\n\t\tif (!this.tilesContainer) {\n\t\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\t\tthis.tilesContainer = new HeaderContainer(`${this.getId()}-insightsTilesMobileContainer`, {\n\t\t\t\t\tscrollStep: 0,\n\t\t\t\t\tscrollStepByItem: 1,\n\t\t\t\t\tgridLayout: true,\n\t\t\t\t\tscrollTime: 1000,\n\t\t\t\t\tshowDividers: false\n\t\t\t\t}).addStyleClass(\"sectionMarginTopTilesInsight sapMHeaderContainerAlign sapMHeaderContainerMarginBottom tilesBoxShadow\");\n\t\t\t} else {\n\t\t\t\tthis.tilesContainer = new GridContainer(`${this.getId()}-insightsTilesContainer`, {}).addStyleClass(\n\t\t\t\t\t\"insightTiles sapUiSmallMarginTop sapUiSmallMarginBottom\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.tilesContainer.setModel(this._controlModel);\n\t\t\tconst sDefaultAggreName = this.tilesContainer.getMetadata().getDefaultAggregationName();\n\t\t\tthis.tilesContainer.bindAggregation(sDefaultAggreName, {\n\t\t\t\tpath: \"/tiles\",\n\t\t\t\tfactory: (id: string, context: Context): ManagedObject => {\n\t\t\t\t\tconst oApp = context.getObject() as ICustomVisualization,\n\t\t\t\t\t\toVisualization = this.VizInstantiationService.instantiateVisualization(oApp.visualization) as ICustomVisualization;\n\t\t\t\t\toVisualization.setLayoutData?.(\n\t\t\t\t\t\tnew GridContainerItemLayoutData({\n\t\t\t\t\t\t\tminRows: 2,\n\t\t\t\t\t\t\tcolumns: oVisualization.getDisplayFormat?.() === DisplayFormat.Standard ? 2 : 4\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\toVisualization?.bindProperty?.(\"active\", \"/activateInsightsTiles\");\n\t\t\t\t\treturn oVisualization as ManagedObject;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.tilesContainer\n\t\t\t\t.addDragDropConfig(\n\t\t\t\t\tnew DragDropInfo({\n\t\t\t\t\t\tsourceAggregation: \"items\",\n\t\t\t\t\t\ttargetAggregation: \"items\",\n\t\t\t\t\t\tdropPosition: dnd.DropPosition.Between,\n\t\t\t\t\t\tdropLayout: dnd.DropLayout.Horizontal,\n\t\t\t\t\t\tdrop: (oEvent) => this._handleTilesDnd(oEvent)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.attachBrowserEvent(\"keydown\", (event: KeyboardEvent) => {\n\t\t\t\t\tconst disablenavigation = event.metaKey || event.ctrlKey;\n\t\t\t\t\tvoid attachKeyboardHandler(event, disablenavigation, (dragDropEvent: Event) => this._handleTilesDnd(dragDropEvent));\n\t\t\t\t});\n\t\t}\n\t\tthis._addContent(this.tilesContainer);\n\t}\n\n\tprivate _handleTilesDnd(oEvent: Event<DropInfo$DropEventParameters>) {\n\t\tconst sInsertPosition = oEvent.getParameter?.(\"dropPosition\"),\n\t\t\toDragItem = oEvent?.getParameter?.(\"draggedControl\") as Control,\n\t\t\toDropItem = oEvent.getParameter(\"droppedControl\") as Control,\n\t\t\tiDragItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDragItem);\n\t\tlet iDropItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDropItem);\n\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex === iDropItemIndex - 1) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex === iDropItemIndex + 1) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tvoid this._DragnDropTiles(iDragItemIndex, iDropItemIndex, sInsertPosition as string);\n\t\t}\n\t}\n\n\tprivate async _DragnDropTiles(iDragItemIndex: number, iDropItemIndex: number, sInsertPosition: string) {\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex < iDropItemIndex) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex > iDropItemIndex) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\t\tconst oDisplacedItem = this.aInsightsApps[iDropItemIndex],\n\t\t\toItemMoved = this.aInsightsApps.splice(iDragItemIndex, 1)[0];\n\t\tthis.aInsightsApps.splice(iDropItemIndex, 0, oItemMoved);\n\t\tconst moveConfigs = {\n\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\tsourceSectionIndex: oItemMoved.persConfig?.sectionIndex as number,\n\t\t\tsourceVisualizationIndex: oItemMoved.persConfig?.visualizationIndex as number,\n\t\t\ttargetSectionIndex: oDisplacedItem.persConfig?.sectionIndex as number,\n\t\t\ttargetVisualizationIndex: oDisplacedItem.persConfig?.visualizationIndex as number\n\t\t};\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t\tawait this.appManagerInstance.moveVisualization(moveConfigs);\n\t\tawait this.renderPanel(true);\n\t}\n\n\tprivate handleEditTiles(event: Event) {\n\t\t/* If called from Panel Header event.source() will return TilesPanel, if called from Insights Container event.source() will return InsightsContainer.\n\t\t_getLayout is available at Container Level*/\n\t\tlet parent: ManagedObject = event.getSource<TilesPanel>().getParent() || this;\n\t\tif (parent?.isA(\"sap.cux.home.TilesPanel\")) {\n\t\t\tparent = parent.getParent() as ManagedObject;\n\t\t}\n\t\t(parent as InsightsContainer)?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_TILES);\n\t}\n\n\tpublic handleRemoveActions() {\n\t\tthis.setProperty(\"title\", \"\");\n\t\tthis.setProperty(\"enableSettings\", false);\n\t\tthis.setProperty(\"enableFullScreen\", false);\n\t\tthis.removeAllAggregation(\"actionButtons\");\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t}\n\n\tpublic handleAddActions() {\n\t\tthis.setProperty(\n\t\t\t\"title\",\n\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this.aInsightsApps.length})`\n\t\t);\n\t\tthis.setProperty(\"enableSettings\", true);\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t\tthis._setupHeader();\n\t}\n\n\tprivate _closeAddFromFavDialog() {\n\t\t(this._controlMap.get(this._addFromFavDialogId) as Dialog)?.close();\n\t}\n\n\t/**\n\t * Navigates to the App Finder with optional group Id.\n\t * @async\n\t * @private\n\t * @param {string} [groupId] - Optional group Id\n\t */\n\tprivate async navigateToAppFinder(groupId?: string) {\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst navigationObject: { pageID: string; sectionID?: string } = {\n\t\t\tpageID: MYHOME_PAGE_ID,\n\t\t\tsectionID: MYINSIGHT_SECTION_ID\n\t\t};\n\t\tif (groupId) {\n\t\t\tnavigationObject.sectionID = groupId;\n\t\t}\n\t\tawait navigationService.navigate({\n\t\t\ttarget: {\n\t\t\t\tshellHash: `Shell-appfinder?&/catalog/${JSON.stringify(navigationObject)}`\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the key of the legend color based on the provided color value.\n\t * @param {string} color - The color value for which to retrieve the legend color key.\n\t * @returns {string} The legend color key corresponding to the provided color value, or the default background color key if not found.\n\t * @private\n\t */\n\tprivate _getLegendColor(color: string) {\n\t\treturn END_USER_COLORS().find((oColor) => oColor.value === color) || DEFAULT_BG_COLOR();\n\t}\n\n\t/**\n\t * Handles the addition of tiles from favorite apps.\n\t * @returns {Promise<void>} A Promise that resolves when the operation is complete.\n\t * @private\n\t */\n\tprivate async _handleAddFromFavApps() {\n\t\tconst appsToAdd = await this._getFavToAdd();\n\t\tconst dialog = this._generateAddFromFavAppsDialog();\n\t\t(this._controlMap.get(`${this._addFromFavDialogId}-errorMessage`) as IllustratedMessage)?.setVisible(appsToAdd.length === 0);\n\t\tthis._generateAddFromFavAppsListItems(appsToAdd);\n\t\tdialog.open();\n\t}\n\n\tprivate async _getFavToAdd(): Promise<ISectionAndVisualization[]> {\n\t\tconst aFavApps: ISectionAndVisualization[] = await this.appManagerInstance.fetchFavVizs(false, true);\n\t\tconst aDynamicApps = aFavApps.filter(function (oDynApp) {\n\t\t\treturn oDynApp.isCount || oDynApp.isSmartBusinessTile;\n\t\t});\n\n\t\tconst aFilteredFavApps = aDynamicApps.filter((oDynApp) => {\n\t\t\tconst iAppIndex = this.aInsightsApps.findIndex(function (oInsightApps) {\n\t\t\t\treturn (\n\t\t\t\t\t(!oDynApp.visualization?.isBookmark && oInsightApps.visualization?.vizId === oDynApp.visualization?.vizId) ||\n\t\t\t\t\t(oDynApp.visualization?.isBookmark && oInsightApps.visualization?.targetURL === oDynApp.visualization?.targetURL)\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn iAppIndex === -1;\n\t\t});\n\n\t\treturn aFilteredFavApps;\n\t}\n\n\t/**\n\t * Retrieves the selected Apps from the dialog.\n\t * @returns {sap.m.ListItemBase[]} An array of selected Apps.\n\t * @private\n\t */\n\tprivate _getSelectedInsights() {\n\t\tconst list = this._controlMap.get(`${this._addFromFavDialogId}-list`) as List;\n\t\treturn list.getSelectedItems() || [];\n\t}\n\n\tprivate _generateAddFromFavAppsListItems(appsToAdd: ISectionAndVisualization[]) {\n\t\tconst id = this._addFromFavDialogId;\n\t\tconst list = this._controlMap.get(`${id}-list`) as List;\n\t\tif (appsToAdd.length) {\n\t\t\tlist.destroyItems();\n\t\t\tconst listItems = appsToAdd.map(\n\t\t\t\t(app, index) =>\n\t\t\t\t\tnew CustomListItem({\n\t\t\t\t\t\tid: `${id}-listItem-${index}`,\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content`,\n\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Icon({\n\t\t\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content-icon`,\n\t\t\t\t\t\t\t\t\t\tsrc: app.icon,\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: this._getLegendColor(app.BGColor || \"\").value,\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\twidth: \"2.25rem\",\n\t\t\t\t\t\t\t\t\t\theight: \"2.25rem\",\n\t\t\t\t\t\t\t\t\t\tsize: \"1.25rem\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiRoundedBorder sapUiTinyMargin\"),\n\t\t\t\t\t\t\t\t\tnew ObjectIdentifier({\n\t\t\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content-identifier`,\n\t\t\t\t\t\t\t\t\t\ttitle: app.title,\n\t\t\t\t\t\t\t\t\t\ttext: app.subtitle,\n\t\t\t\t\t\t\t\t\t\ttooltip: app.title\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMargin\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t\t\t.addStyleClass(\"sapUiContentPadding\")\n\t\t\t\t\t\t.data(\"app\", app) as CustomListItem\n\t\t\t);\n\t\t\tlistItems.forEach((item) => list.addItem(item));\n\t\t}\n\t\tlist?.setVisible(appsToAdd.length !== 0);\n\t}\n\n\tprivate _generateAddFromFavAppsDialog(): Dialog {\n\t\tconst id = this._addFromFavDialogId;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst getAppFinderBtn = (id: string, btnType?: ButtonType) => {\n\t\t\t\tconst appFinderBtn = new Button(id, {\n\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\ttext: this._i18nBundle.getText(\"appFinderBtn\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tthis._closeAddFromFavDialog();\n\t\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t\t},\n\t\t\t\t\tvisible: _showAddApps(),\n\t\t\t\t\ttype: btnType || ButtonType.Default\n\t\t\t\t});\n\t\t\t\taddFESRSemanticStepName(appFinderBtn, FESR_EVENTS.PRESS, \"tilesAppFinder\");\n\t\t\t\treturn appFinderBtn;\n\t\t\t};\n\t\t\tconst setAddBtnEnabled = () => {\n\t\t\t\tconst selectedItems = this._getSelectedInsights();\n\t\t\t\t(this._controlMap.get(`${id}-addBtn`) as Button).setEnabled(selectedItems.length > 0);\n\t\t\t};\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-list`,\n\t\t\t\tnew List({\n\t\t\t\t\tid: `${id}-list`,\n\t\t\t\t\tmode: \"MultiSelect\",\n\t\t\t\t\tselectionChange: setAddBtnEnabled\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst addButton = new Button({\n\t\t\t\tid: `${id}-addBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"addBtn\"),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this._addFromFavApps();\n\t\t\t\t},\n\t\t\t\tenabled: false\n\t\t\t});\n\t\t\taddFESRSemanticStepName(addButton, FESR_EVENTS.PRESS, \"addSmartApps\");\n\t\t\tthis._controlMap.set(`${id}-addBtn`, addButton);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-errorMessage`,\n\t\t\t\tnew IllustratedMessage({\n\t\t\t\t\tid: `${id}-errorMessage`,\n\t\t\t\t\tillustrationSize: \"Spot\",\n\t\t\t\t\tillustrationType: \"sapIllus-AddDimensions\",\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"noAppsTitle\"),\n\t\t\t\t\tdescription: this._i18nBundle.getText(\"tilesSectionNoDataDescription\"),\n\t\t\t\t\tvisible: true\n\t\t\t\t}).addStyleClass(\"sapUiLargeMarginTop\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"addSmartApps\"),\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew Label({\n\t\t\t\t\t\t\tid: `${id}-label`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"suggTileDialogLabel\"),\n\t\t\t\t\t\t\twrapping: true\n\t\t\t\t\t\t}).addStyleClass(\"sapMTitleAlign sapUiTinyMarginTopBottom sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\tid: `${id}-textContainer`,\n\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Title({\n\t\t\t\t\t\t\t\t\tid: `${id}-text`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"suggTileDialogTitle\")\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tgetAppFinderBtn(`${id}-addAppsBtn`, ButtonType.Transparent)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop dialogHeader sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tthis._controlMap.get(`${id}-list`) as List,\n\t\t\t\t\t\tthis._controlMap.get(`${id}-errorMessage`) as IllustratedMessage\n\t\t\t\t\t],\n\t\t\t\t\tcontentWidth: \"42.75rem\",\n\t\t\t\t\tcontentHeight: \"32.5rem\",\n\t\t\t\t\tendButton: new Button({\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"closeBtn\"),\n\t\t\t\t\t\tpress: this._closeAddFromFavDialog.bind(this)\n\t\t\t\t\t}),\n\t\t\t\t\tescapeHandler: this._closeAddFromFavDialog.bind(this),\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tthis._controlMap.get(`${id}-addBtn`) as Button,\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\tid: `${id}-cancelBtn`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\t\t\t\t\tpress: this._closeAddFromFavDialog.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapContrastPlus sapCuxAddFromInsightsDialog\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\tprivate async _addFromFavApps() {\n\t\tconst dialog = this._controlMap.get(this._addFromFavDialogId) as Dialog;\n\t\tdialog.setBusy(true);\n\t\tconst selectedItems = this._getSelectedInsights();\n\t\tawait selectedItems.reduce(async (promise, oApp) => {\n\t\t\tawait promise;\n\t\t\tconst app = oApp.data(\"app\") as ISectionAndVisualization;\n\t\t\tconst oMovingConfig = {\n\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\tsourceSectionIndex: app.persConfig?.sectionIndex as number,\n\t\t\t\tsourceVisualizationIndex: app.persConfig?.visualizationIndex as number,\n\t\t\t\ttargetSectionIndex: this.appManagerInstance.insightsSectionIndex,\n\t\t\t\ttargetVisualizationIndex: -1\n\t\t\t};\n\t\t\tif (app.visualization?.displayFormatHint !== \"standard\" && app.visualization?.displayFormatHint !== \"standardWide\") {\n\t\t\t\tif (app.visualization?.supportedDisplayFormats?.includes(\"standard\")) {\n\t\t\t\t\tapp.visualization.displayFormatHint = \"standard\";\n\t\t\t\t} else if (app.visualization?.supportedDisplayFormats?.includes(\"standardWide\")) {\n\t\t\t\t\tapp.visualization.displayFormatHint = \"standardWide\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add Selected App to Insights Section\n\t\t\tif (!app.visualization?.vizId) {\n\t\t\t\t(app.visualization as IVisualization).vizId = app.visualization?.targetURL || \"\";\n\t\t\t}\n\t\t\tif (app.visualization?.isBookmark === true) {\n\t\t\t\tawait this.appManagerInstance.addBookMark(app.visualization, oMovingConfig);\n\t\t\t} else {\n\t\t\t\tawait this.appManagerInstance.addVisualization(app.visualization?.vizId as string, MYINSIGHT_SECTION_ID);\n\t\t\t}\n\t\t}, Promise.resolve());\n\n\t\tawait this.refreshData();\n\t\tdialog.setBusy(false);\n\t\tdialog.close();\n\t}\n\n\t/**\n\t * Calculates the number of visible tiles that can fit within the available width of the parent container.\n\t *\n\t * @private\n\t * @param {ICustomVisualization[]} insightsApps - An array of custom visualizations to be displayed as tiles.\n\t * @returns {number} - The number of visible tiles.\n\t */\n\tprivate _calculateVisibleTileCount(insightsApps: ICustomVisualization[]): number {\n\t\tconst layoutDomRef = this._getInsightsContainer()?._getLayout()?.getDomRef();\n\t\tconst apps = insightsApps || [];\n\t\tlet count = 0;\n\n\t\tif (layoutDomRef && apps.length) {\n\t\t\tconst sectionDomRef = layoutDomRef.childNodes[0] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tlet availableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tconst widthMap = {} as Record<DisplayFormat, number>;\n\n\t\t\twidthMap[DisplayFormat.Standard] = 176 + 16; // Width + Gap\n\t\t\twidthMap[DisplayFormat.StandardWide] = 368 + 16; // Width + Gap\n\n\t\t\tlet nextTileWidth = widthMap[(apps[count].visualization?.displayFormatHint || DisplayFormat.Standard) as DisplayFormat];\n\t\t\tdo {\n\t\t\t\tavailableWidth -= nextTileWidth;\n\t\t\t\t++count;\n\t\t\t\tnextTileWidth =\n\t\t\t\t\twidthMap[((apps[count] && apps[count].visualization?.displayFormatHint) || DisplayFormat.Standard) as DisplayFormat];\n\t\t\t} while (availableWidth > nextTileWidth);\n\t\t}\n\n\t\treturn count || 1;\n\t}\n\n\t/**\n\t * Adjusts the layout of the tiles panel based on the current layout and device type.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic _adjustLayout() {\n\t\tconst layout = this._getInsightsContainer()?._getLayout();\n\t\tconst isFullScreenEnabled = this.getProperty(\"enableFullScreen\") as boolean;\n\t\tconst isMobileDevice = this.getDeviceType() === DeviceType.Mobile;\n\n\t\tif (layout && isFullScreenEnabled) {\n\t\t\tconst visibleTileCount = isMobileDevice ? this.aInsightsApps?.length : this._calculateVisibleTileCount(this.aInsightsApps);\n\t\t\tconst isElementExpanded = layout._getCurrentExpandedElementName() === this.getProperty(\"fullScreenName\");\n\t\t\tthis._controlModel.setProperty(\n\t\t\t\t\"/tiles\",\n\t\t\t\tisElementExpanded ? this.aInsightsApps : this.aInsightsApps?.slice(0, visibleTileCount)\n\t\t\t);\n\n\t\t\t//Show/Hide Full Screen Button if available\n\t\t\tthis._getInsightsContainer()?.toggleFullScreenElements(this, this.aInsightsApps?.length > visibleTileCount, isElementExpanded);\n\t\t}\n\t}\n\n\tprivate _getInsightsContainer(): InsightsContainer {\n\t\tif (!this.insightsContainer) {\n\t\t\tthis.insightsContainer = this.getParent() as InsightsContainer;\n\t\t}\n\t\treturn this.insightsContainer;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}