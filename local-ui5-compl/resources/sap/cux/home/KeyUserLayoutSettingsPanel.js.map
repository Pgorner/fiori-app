{"version":3,"file":"KeyUserLayoutSettingsPanel.js","names":["sap","ui","define","Column","ColumnListItem","HBox","ObjectIdentifier","Table","ToggleButton","CustomData","DragDropInfo","Element","Icon","__BaseSettingsPanel","___flexibility_Layoutflexibility","___utils_Constants","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","CHANGE_TYPES","KEYUSER_SETTINGS_PANELS_KEYS","KeyUserLayoutSettingsPanel","extend","metadata","library","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","LAYOUT","_i18nBundle","getText","addAggregation","getContent","attachPanelNavigated","layout","_getPanel","resetSections","loadSections","_getContent","layoutTable","getId","width","items","columns","dragDropConfig","sourceAggregation","targetAggregation","groupName","dropPosition","drop","event","onDropLayoutSettings","addStyleClass","_loadSections","_this","Promise","resolve","_calculateSectionsState","then","orderedSections","getSections","keyUserSettingsDialog","getParent","removeAllItems","forEach","section","addItem","type","hasDetailsPage","completeId","cells","alignItems","src","justifyContent","title","text","tooltip","visible","icon","enabled","blocked","press","createShowHideChangeFile","pressed","ariaLabelledBy","navigateToPage","getDetailsPage","customData","key","value","e","reject","_onDropLayoutSettings","wrapper","wrapperId","dragItem","getParameter","draggedControl","dragItemIndex","indexOfItem","dropItem","droppedControl","dropItemIndex","sectionOrder","dragObject","data","dropObject","actualDragItemIndex","_getActualIndex","actualDropItemIndex","_rearrangeLayoutElements","splice","setSections","addKeyUserChanges","selectorControl","changeSpecificData","changeType","MOVE","content","movedElements","id","sourceIndex","targetIndex","source","aggregation","target","_allLayoutElements","getItems","isLayoutExpanded","getProperty","expandedElementConfig","_getCurrentExpandedElement","some","element","targetContainer","findIndex","container","_createShowHideChangeFile","oControlEvent","isCheckBoxSelected","keyUserChanges","getKeyUserChanges","UNHIDE","HIDE","oExistingChange","find","oChange","getElementById"],"sources":["KeyUserLayoutSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Column from \"sap/m/Column\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport HBox from \"sap/m/HBox\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Table from \"sap/m/Table\";\nimport ToggleButton, { ToggleButton$PressEvent } from \"sap/m/ToggleButton\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Icon from \"sap/ui/core/Icon\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IDragEvent, IElement } from \"./interface/LayoutInterface\";\nimport KeyUserSettingsDialog from \"./KeyUserSettingsDialog\";\nimport Layout from \"./Layout\";\nimport { KEYUSER_SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\n\n/**\n *\n * Class for Layout Settings Panel for KeyUser Settings Dialog.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.KeyUserLayoutSettingsPanel\n */\nexport default class KeyUserLayoutSettingsPanel extends BaseSettingsPanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\n\tprivate layoutTable!: Table;\n\tprivate orderedSections!: IElement[];\n\tprivate _allLayoutElements!: BaseContainer[];\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", KEYUSER_SETTINGS_PANELS_KEYS.LAYOUT);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"editModeTitle\"));\n\n\t\t// //setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tconst layout = this._getPanel() as Layout;\n\t\t\tlayout.resetSections();\n\t\t\tvoid this.loadSections();\n\t\t});\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel content.\n\t */\n\tprivate getContent(): Table {\n\t\tif (!this.layoutTable) {\n\t\t\tthis.layoutTable = new Table(this.getId() + \"--idLayoutSettingsTable\", {\n\t\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\t\titems: [],\n\t\t\t\tcolumns: [\n\t\t\t\t\tnew Column(this.getId() + \"--idSectionTitleColumn\", {\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t],\n\t\t\t\tdragDropConfig: new DragDropInfo(this.getId() + \"--idLayoutSettingsDragInfo\", {\n\t\t\t\t\tsourceAggregation: \"items\",\n\t\t\t\t\ttargetAggregation: \"items\",\n\t\t\t\t\tgroupName: \"LayoutSettingsItems\",\n\t\t\t\t\tdropPosition: \"On\",\n\t\t\t\t\tdrop: (event: DropInfo$DropEvent) => {\n\t\t\t\t\t\tthis.onDropLayoutSettings(event);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"layoutSettingsTable sapContrastPlus sapUiSmallMarginBegin\");\n\t\t}\n\t\treturn this.layoutTable;\n\t}\n\n\t/**\n\t * Method to load the sections\n\t *\n\t * @private\n\t */\n\tprivate async loadSections(): Promise<void> {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tawait layout._calculateSectionsState();\n\t\tthis.orderedSections = layout.getSections() || [];\n\n\t\tconst keyUserSettingsDialog = this.getParent() as KeyUserSettingsDialog;\n\n\t\tthis.layoutTable.removeAllItems();\n\t\tthis.orderedSections.forEach((section: IElement) => {\n\t\t\tthis.layoutTable\n\t\t\t\t.addItem(\n\t\t\t\t\tnew ColumnListItem({\n\t\t\t\t\t\ttype: (this.getParent() as KeyUserSettingsDialog)?.hasDetailsPage?.(section.completeId) ? \"Navigation\" : \"Inactive\",\n\t\t\t\t\t\tcells: [\n\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Icon({\n\t\t\t\t\t\t\t\t\t\tsrc: \"sap-icon://vertical-grip\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\"),\n\t\t\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\t\tnew ObjectIdentifier({\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: section.title,\n\t\t\t\t\t\t\t\t\t\t\t\ttext: section.text,\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip: section.title\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\tnew ToggleButton({\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip: section.visible\n\t\t\t\t\t\t\t\t\t\t\t\t\t? this._i18nBundle.getText(\"hideBtn\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t: this._i18nBundle.getText(\"showBtn\"),\n\t\t\t\t\t\t\t\t\t\t\t\ticon: \"sap-icon://show\",\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\t\t\t\t\t\t\tenabled: !section.blocked,\n\t\t\t\t\t\t\t\t\t\t\t\tpress: (event) => this.createShowHideChangeFile(event, section),\n\t\t\t\t\t\t\t\t\t\t\t\tpressed: !section.visible,\n\t\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy: [\"selectLabel\"]\n\t\t\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\tpress: () => keyUserSettingsDialog?.navigateToPage?.(keyUserSettingsDialog.getDetailsPage(section.completeId)),\n\t\t\t\t\t\tcustomData: new CustomData({\n\t\t\t\t\t\t\tkey: \"sectionObject\",\n\t\t\t\t\t\t\tvalue: section\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.addStyleClass(\"insightsListItem insightsListMargin\");\n\t\t});\n\t}\n\n\t/**\n\t * Function to execute drag and drop among sections\n\t *\n\t * @private\n\t */\n\tprivate onDropLayoutSettings(event: DropInfo$DropEvent | IDragEvent) {\n\t\tconst wrapper = this._getPanel() as Layout | Control;\n\t\tconst wrapperId = wrapper.getId();\n\t\tconst dragItem = ((event as DropInfo$DropEvent).getParameter?.(\"draggedControl\") ||\n\t\t\t(event as IDragEvent).draggedControl) as ColumnListItem;\n\t\tconst dragItemIndex = (dragItem.getParent() as Table)?.indexOfItem(dragItem);\n\t\tconst dropItem = ((event as DropInfo$DropEvent).getParameter?.(\"droppedControl\") ||\n\t\t\t(event as IDragEvent).droppedControl) as ColumnListItem;\n\t\tconst dropItemIndex = (dragItem.getParent() as Table)?.indexOfItem(dropItem);\n\n\t\tif (dragItemIndex !== dropItemIndex) {\n\t\t\tconst sectionOrder = this.orderedSections;\n\t\t\tconst dragObject = dragItem.data(\"sectionObject\") as IElement;\n\t\t\tconst dropObject = dropItem.data(\"sectionObject\") as IElement;\n\n\t\t\tconst actualDragItemIndex = this._getActualIndex(dragObject.completeId);\n\t\t\tconst actualDropItemIndex = this._getActualIndex(dropObject.completeId);\n\t\t\tthis._rearrangeLayoutElements(actualDragItemIndex, actualDropItemIndex);\n\n\t\t\tsectionOrder.splice(dragItemIndex, 1);\n\t\t\tsectionOrder.splice(dropItemIndex, 0, dragObject);\n\t\t\t(wrapper as Layout).setSections(sectionOrder);\n\n\t\t\tthis.addKeyUserChanges({\n\t\t\t\tselectorControl: wrapper as Control,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.MOVE,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\tmovedElements: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: dragObject.completeId,\n\t\t\t\t\t\t\t\tsourceIndex: actualDragItemIndex,\n\t\t\t\t\t\t\t\ttargetIndex: actualDropItemIndex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvoid this.loadSections();\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the actual index of a layout element by its ID.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the layout element to find.\n\t * @returns {number} The index of the layout element.\n\t */\n\tprivate _getActualIndex(id: string): number {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tthis._allLayoutElements = this._allLayoutElements || [...layout.getItems()];\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\t\tconst expandedElementConfig = layout._getCurrentExpandedElement();\n\n\t\tif (isLayoutExpanded && expandedElementConfig) {\n\t\t\t// add the expanded element if it isn't already in the list\n\t\t\tif (!this._allLayoutElements.some((element) => element.getId() === expandedElementConfig.targetContainer.getId())) {\n\t\t\t\tthis._allLayoutElements.splice(\n\t\t\t\t\tlayout.indexOfItem(expandedElementConfig.targetContainer),\n\t\t\t\t\t0,\n\t\t\t\t\texpandedElementConfig.targetContainer\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this._allLayoutElements.findIndex((element) => element.getId() === id);\n\t}\n\n\t/**\n\t * Rearranges the layout elements by moving an element from the source index to the target index.\n\t *\n\t * @private\n\t * @param {number} sourceIndex - The index of the element to move.\n\t * @param {number} targetIndex - The index to move the element to.\n\t */\n\tprivate _rearrangeLayoutElements(sourceIndex: number, targetIndex: number): void {\n\t\tconst container = this._allLayoutElements.splice(sourceIndex, 1)[0];\n\t\tthis._allLayoutElements.splice(targetIndex, 0, container);\n\t}\n\n\t/**\n\t * Method to set visibility of the container sections\n\t * Toggle button pressed event handler\n\t *\n\t * @private\n\t */\n\tprivate createShowHideChangeFile(oControlEvent: ToggleButton$PressEvent, section: IElement): void {\n\t\tconst isCheckBoxSelected: boolean = !oControlEvent.getParameter(\"pressed\");\n\t\tconst keyUserChanges = this.getKeyUserChanges();\n\t\tconst changeType = isCheckBoxSelected ? CHANGE_TYPES.UNHIDE : CHANGE_TYPES.HIDE;\n\t\tconst oExistingChange = keyUserChanges.find((oChange) => {\n\t\t\treturn oChange.selectorControl.getId() === section.completeId;\n\t\t});\n\n\t\t//Check if the change already exists\n\t\tif (oExistingChange) {\n\t\t\toExistingChange.changeSpecificData.changeType = changeType;\n\t\t} else {\n\t\t\tthis.addKeyUserChanges({\n\t\t\t\tselectorControl: Element.getElementById(section.completeId) as Control,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}