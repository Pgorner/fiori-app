{"version":3,"file":"SituationPanel-dbg-dbg.js","names":["sap","ui","define","Log","Formatting","NavigationHandler","SelectionVariant","GenericTile","Text","TileContent","sap_m_library","Component","DateFormat","NumberFormat","ODataModel","S4MyHome","__ToDoPanel","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","LoadState","URLHelper","ValueColor","ToDoPanel","NavigationHelperError","SituationPanel","extend","constructor","_constructor","id","settings","ToDoPanel.prototype.constructor.call","init","_init","ToDoPanel.prototype.init.call","setProperty","_i18nBundle","getText","generateRequestUrls","_generateRequestUrls","cardCount","language","getLanguageTag","getCountUrl","getDataUrl","toUpperCase","generateCardTemplate","_generateCardTemplate","context","mode","frameType","pressEnabled","header","_getSituationMessage","getProperty","headerImage","valueColor","Critical","state","press","event","_onPressSituation","tileContent","content","text","footer","formatDate","rawText","params","arguments","length","undefined","split","composedText","replaceAll","forEach","param","SitnInstceAttribName","attributeSource","SitnInstceAttribSource","paramName","matchedAttributes","_InstanceAttributeValue","reduce","attribute","push","formattedValues","attributeMatched","rawVal","SitnInstceAttribValue","trim","formattedVal","SitnInstceAttribEntityType","_getDateFormatter","format","parse","endsWith","substring","_getNumberFormatter","Number","join","_dateFormatter","datePattern","getDatePattern","getDateInstance","pattern","_decimalFormatter","getFloatInstance","decimalSeparator","getNumberSymbol","groupingSeparator","groupingEnabled","_this","control","getSource","getBindingContext","status","SitnInstceKey","SitnEngineType","getObject","url","getTargetAppUrl","_temp3","Loading","_temp2","_temp","Promise","resolve","_fetchNavigationTargetData","_this$_fetchNavigatio","navigationTargetData","_executeNavigation","getOwnerComponentFor","getParent","error","_sErrorCode","redirect","reject","_getSituationsModel","_situationsModel","serviceUrl","instanceId","situationEngineType","_this2","oContextBindingNavigation","bindContext","$expand","_NavigationParam","$select","requestObject","_oContextBindingNavig","SitnInstanceID","SitnSemanticObject","SitnSemanticObjectAction","SituationNotifParamName","SituationNotifParameterVal","Error","message","oData","ownerComponent","navigationHandler","oSelectionVariant","map","addSelectOption","sNavigationParameters","toJSONString","navigate","getNoDataText","_getNoDataText"],"sources":["SituationPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport NavigationHandler from \"sap/fe/navigation/NavigationHandler\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport Text from \"sap/m/Text\";\nimport TileContent from \"sap/m/TileContent\";\nimport { LoadState, URLHelper, ValueColor } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport ToDoPanel, { $ToDoPanelSettings, IToDoPanel } from \"./ToDoPanel\";\nimport ToDosContainer from \"./ToDosContainer\";\n\ninterface Situation {\n\tSitnInstceKey: string;\n\tSitnInstceCreatedAtDateTime: string;\n\tSitnEngineType: string;\n\t_InstanceAttribute: InstanceAttribute[];\n\t_InstanceText: InstanceText;\n\tstatus?: LoadState;\n}\n\ninterface InstanceAttribute {\n\tSitnInstceKey: string;\n\tSitnInstceAttribName: string;\n\tSitnInstceAttribSource: string;\n\tSitnInstceAttribEntityType: string;\n\t_InstanceAttributeValue: InstanceAttributeValue[];\n}\n\ninterface InstanceAttributeValue {\n\tSitnInstceKey: string;\n\tSitnInstceAttribName: string;\n\tSitnInstceAttribSource: string;\n\tSitnInstceAttribValue: string;\n}\n\ninterface InstanceText {\n\tSituationTitle: string;\n\tSituationText: string;\n}\n\ninterface NavigationData {\n\tSitnInstanceID: string;\n\tSitnSemanticObject: string;\n\tSitnSemanticObjectAction: string;\n\t_NavigationParam: NavigationParam[];\n}\n\ninterface NavigationParam {\n\tSituationNotifParamName: string;\n\tSituationNotifParameterVal: string;\n}\n\nclass NavigationHelperError {\n\tpublic _sErrorCode!: string;\n}\n\n/**\n *\n * Panel class for managing and storing Situation cards.\n *\n * @extends ToDoPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.SituationPanel\n */\nexport default class SituationPanel extends ToDoPanel implements IToDoPanel {\n\tprivate _situationsModel!: ODataModel;\n\tprivate _dateFormatter!: DateFormat;\n\tprivate _decimalFormatter!: NumberFormat;\n\n\t/**\n\t * Constructor for a new Situation Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $ToDoPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//Configure Header\n\t\tthis.setProperty(\"key\", \"situations\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"situationsTabTitle\"));\n\t}\n\n\t/**\n\t * Generates request URLs for fetching data based on the specified card count.\n\t * Overridden method to provide situation-specific URLs.\n\t *\n\t * @private\n\t * @override\n\t * @param {number} cardCount - The number of cards to retrieve.\n\t * @returns {string[]} An array of request URLs.\n\t */\n\tpublic generateRequestUrls(cardCount: number): string[] {\n\t\tconst language = Formatting.getLanguageTag().language || \"\";\n\t\treturn [\n\t\t\tthis.getCountUrl(),\n\t\t\t`${this.getDataUrl()}&$expand=_InstanceAttribute($expand=_InstanceAttributeValue($filter=(Language eq '${language.toUpperCase()}' or Language eq ''))),_InstanceText($filter=(Language eq '${language.toUpperCase()}' or Language eq ''))&$skip=0&$top=${cardCount}`\n\t\t];\n\t}\n\n\t/**\n\t * Generates a card template for situations.\n\t * Overridden method from To-Do panel to generate situation-specific card template.\n\t *\n\t * @private\n\t * @override\n\t * @param {string} id The ID for the template card.\n\t * @param {Context} context The context object.\n\t * @returns {Control} The generated card control template.\n\t */\n\tpublic generateCardTemplate(id: string, context: Context): Control {\n\t\treturn new GenericTile(`${id}-actionTile`, {\n\t\t\tmode: \"ActionMode\",\n\t\t\tframeType: \"TwoByOne\",\n\t\t\tpressEnabled: true,\n\t\t\theader: this._getSituationMessage(\n\t\t\t\tcontext.getProperty(\"_InstanceText/0/SituationTitle\") as string,\n\t\t\t\tcontext.getProperty(\"_InstanceAttribute\") as InstanceAttribute[]\n\t\t\t),\n\t\t\theaderImage: \"sap-icon://alert\",\n\t\t\tvalueColor: ValueColor.Critical,\n\t\t\tstate: context.getProperty(\"status\") as LoadState,\n\t\t\tpress: (event: Event) => {\n\t\t\t\tvoid this._onPressSituation(event);\n\t\t\t},\n\t\t\ttileContent: [\n\t\t\t\tnew TileContent(`${id}-actionTileContent`, {\n\t\t\t\t\tcontent: new Text(`${id}-text`, {\n\t\t\t\t\t\ttext: this._getSituationMessage(\n\t\t\t\t\t\t\tcontext.getProperty(\"_InstanceText/0/SituationText\") as string,\n\t\t\t\t\t\t\tcontext.getProperty(\"_InstanceAttribute\") as InstanceAttribute[]\n\t\t\t\t\t\t)\n\t\t\t\t\t}),\n\t\t\t\t\tfooter: S4MyHome.formatDate(context.getProperty(\"SitnInstceCreatedAtDateTime\") as string)\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Compose the situation message by replacing placeholders with formatted parameter values.\n\t *\n\t * @private\n\t * @param {string} rawText - The raw text containing placeholders.\n\t * @param {InstanceAttribute[]} params - An array of parameters to replace in the text.\n\t * @returns {string} The composed text with replaced placeholders.\n\t */\n\tprivate _getSituationMessage(rawText: string, params: InstanceAttribute[] = []): string {\n\t\tif (!rawText?.split) {\n\t\t\treturn rawText;\n\t\t}\n\n\t\tlet composedText = rawText.replaceAll(\"\\n\", \" \");\n\n\t\tparams.forEach((param) => {\n\t\t\tif (param.SitnInstceAttribName?.length > 0) {\n\t\t\t\tconst attributeSource = `0${param.SitnInstceAttribSource}`;\n\t\t\t\tconst paramName = `${attributeSource}.${param.SitnInstceAttribName}`;\n\t\t\t\tconst matchedAttributes = param._InstanceAttributeValue.reduce(function (matchedAttributes, attribute) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tattribute.SitnInstceAttribSource === param.SitnInstceAttribSource &&\n\t\t\t\t\t\tattribute.SitnInstceAttribName === param.SitnInstceAttribName\n\t\t\t\t\t) {\n\t\t\t\t\t\tmatchedAttributes.push(attribute);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn matchedAttributes;\n\t\t\t\t}, [] as InstanceAttributeValue[]);\n\n\t\t\t\tconst formattedValues: string[] = [];\n\t\t\t\tmatchedAttributes.forEach((attributeMatched) => {\n\t\t\t\t\tlet rawVal = attributeMatched?.SitnInstceAttribValue?.trim() || \"\";\n\t\t\t\t\tlet formattedVal;\n\n\t\t\t\t\tswitch (param.SitnInstceAttribEntityType) {\n\t\t\t\t\t\tcase \"Edm.DateTime\":\n\t\t\t\t\t\t\tformattedVal = this._getDateFormatter().format(this._getDateFormatter().parse(rawVal));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Edm.Decimal\":\n\t\t\t\t\t\t\t// If the parameter string ends with a minus sign, move it to the first position\n\t\t\t\t\t\t\tif (rawVal.endsWith(\"-\")) {\n\t\t\t\t\t\t\t\trawVal = `-${rawVal.substring(0, rawVal.length - 1)}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tformattedVal = this._getNumberFormatter().format(Number(rawVal));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tformattedVal = rawVal;\n\t\t\t\t\t}\n\n\t\t\t\t\tformattedValues.push(formattedVal);\n\t\t\t\t});\n\n\t\t\t\t// Replace placeholders with formatted values\n\t\t\t\tcomposedText = composedText.split(`{${paramName}}`).join(formattedValues.join(\", \"));\n\t\t\t}\n\t\t});\n\n\t\treturn composedText;\n\t}\n\n\t/**\n\t * Gets the date formatter instance using the medium date pattern.\n\t *\n\t * @returns {DateFormat} The date formatter instance.\n\t */\n\tprivate _getDateFormatter(): DateFormat {\n\t\tif (!this._dateFormatter) {\n\t\t\tconst datePattern = Formatting.getDatePattern(\"medium\") || \"dd/MM/yyyy\";\n\t\t\tthis._dateFormatter = DateFormat.getDateInstance({ pattern: datePattern });\n\t\t}\n\n\t\treturn this._dateFormatter;\n\t}\n\n\t/**\n\t * Gets the number formatter instance using the settings retrieved from Configuration.\n\t *\n\t * @returns {NumberFormat} The number formatter instance.\n\t */\n\tprivate _getNumberFormatter(): NumberFormat {\n\t\tif (!this._decimalFormatter) {\n\t\t\tthis._decimalFormatter = NumberFormat.getFloatInstance({\n\t\t\t\tdecimalSeparator: Formatting.getNumberSymbol(\"decimal\") || \".\",\n\t\t\t\tgroupingSeparator: Formatting.getNumberSymbol(\"group\") || \",\",\n\t\t\t\tgroupingEnabled: true\n\t\t\t});\n\t\t}\n\n\t\treturn this._decimalFormatter;\n\t}\n\n\t/**\n\t * Handle the press event for a situation.\n\t *\n\t * @private\n\t * @param {Event} event - The event object.\n\t */\n\tprivate async _onPressSituation(event: Event): Promise<void> {\n\t\tconst control = event.getSource<GenericTile>();\n\t\tconst context = control.getBindingContext();\n\t\tconst { status, SitnInstceKey: id, SitnEngineType } = context?.getObject() as Situation;\n\t\tconst url = this.getTargetAppUrl();\n\n\t\tif (status !== LoadState.Loading) {\n\t\t\tif (id) {\n\t\t\t\ttry {\n\t\t\t\t\tconst navigationTargetData = (await this._fetchNavigationTargetData(id, SitnEngineType)) as NavigationData;\n\t\t\t\t\tawait this._executeNavigation(\n\t\t\t\t\t\tnavigationTargetData,\n\t\t\t\t\t\tComponent.getOwnerComponentFor(this.getParent() as ToDosContainer) as Component\n\t\t\t\t\t);\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tif (\n\t\t\t\t\t\terror instanceof NavigationHelperError &&\n\t\t\t\t\t\tSitnEngineType === \"1\" &&\n\t\t\t\t\t\terror._sErrorCode === \"NavigationHandler.isIntentSupported.notSupported\"\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Navigate to the situations app\n\t\t\t\t\t\tURLHelper.redirect(this.getTargetAppUrl(), false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tURLHelper.redirect(url, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the Situations model. If the model does not exist, it creates a new one.\n\t *\n\t * @private\n\t * @returns {ODataModel} The Situations model instance.\n\t */\n\tprivate _getSituationsModel(): ODataModel {\n\t\tif (!this._situationsModel) {\n\t\t\tthis._situationsModel = new ODataModel({\n\t\t\t\tserviceUrl: \"/sap/opu/odata4/sap/a_sitn2mblinstce_v4/srvd/sap/a_sitn2mblinstce_srv/0002/\"\n\t\t\t});\n\t\t}\n\n\t\treturn this._situationsModel;\n\t}\n\n\t/**\n\t * Fetches navigation target data based on the provided instance ID.\n\t *\n\t * @private\n\t * @async\n\t * @param {string} instanceId - The instance ID for which to fetch navigation data.\n\t * @param {string} situationEngineType - Situation Engine Type\n\t * @returns {Promise<NavigationTargetData>} A promise that resolves with an object containing navigation data.\n\t */\n\tprivate async _fetchNavigationTargetData(instanceId: string, situationEngineType: string): Promise<NavigationData | undefined> {\n\t\ttry {\n\t\t\tif (situationEngineType === \"1\") {\n\t\t\t\tconst oContextBindingNavigation = this._getSituationsModel().bindContext(`/Navigation/${instanceId}`, undefined, {\n\t\t\t\t\t$expand: { _NavigationParam: { $select: [\"SituationNotifParamName\", \"SituationNotifParameterVal\"] } },\n\t\t\t\t\t$select: [\"SitnInstanceID\", \"SitnSemanticObject\", \"SitnSemanticObjectAction\"]\n\t\t\t\t});\n\t\t\t\treturn (await oContextBindingNavigation.requestObject()) as NavigationData;\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tSitnInstanceID: instanceId,\n\t\t\t\t\tSitnSemanticObject: \"SituationInstance\",\n\t\t\t\t\tSitnSemanticObjectAction: \"display\",\n\t\t\t\t\t_NavigationParam: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSituationNotifParamName: \"ui-type\",\n\t\t\t\t\t\t\tSituationNotifParameterVal: \"extended\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSituationNotifParamName: \"SitnInstceKey\",\n\t\t\t\t\t\t\tSituationNotifParameterVal: instanceId\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(error instanceof Error ? error.message : \"\");\n\t\t}\n\t}\n\n\t/**\n\t * Executes navigation based on provided data.\n\t *\n\t * @private\n\t * @param {NavigationData} oData - Data object containing navigation parameters.\n\t * @param {Component} ownerComponent - The owner component initiating the navigation.\n\t * @returns {Promise<void>} A promise that resolves or rejects based on the navigation result.\n\t */\n\tprivate _executeNavigation(oData: NavigationData, ownerComponent: Component): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t//@ts-expect-error: params\n\t\t\tconst navigationHandler = new NavigationHandler(ownerComponent);\n\t\t\tconst oSelectionVariant = new SelectionVariant();\n\t\t\toData._NavigationParam?.map(function (param) {\n\t\t\t\tif (param.SituationNotifParamName) {\n\t\t\t\t\toSelectionVariant.addSelectOption(param.SituationNotifParamName, \"I\", \"EQ\", param.SituationNotifParameterVal);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst sNavigationParameters = oSelectionVariant.toJSONString();\n\t\t\tnavigationHandler.navigate(\n\t\t\t\toData.SitnSemanticObject,\n\t\t\t\toData.SitnSemanticObjectAction,\n\t\t\t\tsNavigationParameters,\n\t\t\t\tresolve,\n\t\t\t\t(error: unknown) => reject(error as Error)\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Get the text for the \"No Data\" message.\n\t *\n\t * @private\n\t * @returns {string} The text for the \"No Data\" message.\n\t */\n\tpublic getNoDataText(): string {\n\t\treturn this._i18nBundle.getText(\"noSituationTitle\") as string;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}