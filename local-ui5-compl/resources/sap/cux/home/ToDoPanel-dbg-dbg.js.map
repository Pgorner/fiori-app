{"version":3,"file":"ToDoPanel-dbg-dbg.js","names":["sap","ui","define","Log","Card","GridContainer","GridContainerSettings","Button","GenericTile","HeaderContainer","IllustratedMessage","Text","TileContent","VBox","sap_m_library","Device","UI5Element","DateFormat","JSONModel","__BasePanel","__MenuItem","__ToDosContainer","__BatchHelper","___utils_Device","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","Priority","_finallyRethrows","finalizer","bind","URLHelper","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","observer","prototype","onFulfilled","onRejected","callback","_this","_isSettledPact","thenable","_forTo","array","check","i","reject","_cycle","length","BasePanel","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","MenuItem","ToDosContainer","BatchHelper","DeviceType","fetchElementProperties","addFESRId","TaskPriority","Constants","SITUATION_ICON","PLACEHOLDER_ITEMS_COUNT","TODO_CARDS_LIMIT","TODO_SECTION_LIMIT","TODOS_REFRESH_INTERVAL","MOBILE_DEVICE_MAX_WIDTH","DEFAULT_TITLE_HEIGHT","DEFAULT_CARD_HEIGHT","DEFAULT_TAB_HEADER_HEIGHT","calculateCardWidth","availableWidth","minWidth","maxWidth","gap","count","cardWidth","Math","min","ToDoPanel","extend","metadata","library","properties","baseUrl","type","group","defaultValue","visibility","countUrl","dataUrl","targetAppUrl","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","init","_init","BasePanel.prototype.init.call","_oData","isLoaded","hasError","getSupported","isExpandedOnce","isCountCalledOnce","illustrationType","refreshInfo","_toRelativeDateTime","Date","horizontalCardCount","illustrationTitle","_i18nBundle","getText","illustrationDescription","isPhone","resize","width","system","phone","tiles","Array","fill","status","displayTiles","_controlModel","requests","_toDoWrapper","getId","renderType","items","_generateCardContainer","_generateMobileCardContainer","_generateErrorMessage","setModel","_addContent","menuItem","title","icon","press","_onPressRefresh","addAggregation","_refreshBtn","text","setProperty","attachEvent","Promise","resolve","_beforePanelExpand","_cardContainer","inlineBlockLayout","snapToRow","visible","layout","columns","columnSize","addStyleClass","_mobileCardContainer","scrollStep","gridLayout","scrollTime","showDividers","_errorCard","_errorMessage","illustrationSize","description","content","getParent","_getSelectedPanel","_loadCards","forceRefresh","_this2","_loadToDos","undefined","_bindInnerControls","selectedKey","getProperty","_isElementExpanded","_setCount","_getSupported","setTimeout","_generatePlaceHolderTiles","_generateRequestObject","onlyCount","concat","_submitBatch","_setSectionRefreshInterval","lastRefreshedTime","_updateRefreshInformation","_switchTabIfRequired","_updateHeaderIfExclusive","catch","error","Error","message","finally","refresh","_adjustLayout","_handleError","getTargetAppUrl","removeContent","_isExclusivePanel","_setTitle","String","_innerControlsBound","bindAggregation","path","factory","context","generateCardTemplate","bindProperty","_generateCardTemplate","mode","frameType","pressEnabled","header","tileContent","priority","priorityText","_toPriorityText","footer","_toPriority","VERY_HIGH","VeryHigh","None","HIGH","High","MEDIUM","Medium","LOW","Low","key","_cardCount","_getVisibleCardCount","isPlaceholder","calculationProperties","_getLayout","isElementExpanded","targetDomRef","getDomRef","containerDomRef","_getFullScreenContainer","childNodes","isMobileDevice","cardCount","getHorizontalCardCount","getVerticalCardCount","toDosContainer","_getCurrentExpandedElementName","_getHorizontalCardCount","domRef","domProperties","Object","slice","reduce","propertyValue","max","floor","_getVerticalCardCount","titleHeight","calculateTitleHeight","availableHeight","height","margin","cardHeight","verticalCardCount","_calculateTitleHeight","container","containerHeaderRef","getElementById","iconTabBarHeaderRef","_getInnerControl","defaultHeight","clientHeight","options","_this3","urls","generateRequestUrls","splice","baseURL","getBaseUrl","requestURLs","success","args","onDataReceived","Number","_handleEmptyCards","_generateRequestUrls","queryString","getDataUrl","includes","getCountUrl","_onDataReceived","results","arguments","_this4","getNoDataText","allPanels","getContent","supportedPanels","filter","panel","clearInterval","refreshFn","setInterval","_updateContainerHeader","displayCards","getDeviceType","Mobile","toggleFullScreenElements","date","inputDate","isNaN","relativeDateFormatter","format","_getNoDataText","_parseResponse","response","d","numericD","numericResponse","_this5","all","map","request","createMultipartRequest","responses","processedResponses","JSON","parse","_temp","_wasThrown","_result","_clearRequests","_isLoaded","_setLoaded","_setSupported","isSupported","_getAppIntent","pattern","match","semanticObject","action","params","paramsArray","split","param","_this6","_interrupt","_temp5","_temp3","nextAvailablePanel","panels","getAggregation","_temp4","_temp2","_getCardCount","_onPressViewAll","redirect","_this7","_temp6","getDateTimeInstance","style","relative","relativeStyle"],"sources":["ToDoPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Card from \"sap/f/Card\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport Button from \"sap/m/Button\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport Text from \"sap/m/Text\";\nimport TileContent from \"sap/m/TileContent\";\nimport VBox from \"sap/m/VBox\";\nimport { LoadState, Priority, URLHelper } from \"sap/m/library\";\nimport Device from \"sap/ui/Device\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BasePanel from \"./BasePanel\";\nimport MenuItem from \"./MenuItem\";\nimport { $ToDoPanelSettings } from \"./ToDoPanel\";\nimport ToDosContainer from \"./ToDosContainer\";\nimport BatchHelper from \"./utils/BatchHelper\";\nimport { DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { addFESRId } from \"./utils/FESRUtil\";\n\nexport interface IToDoPanel {\n\tgenerateCardTemplate(id: string, context: Context): Control;\n\tgenerateRequestUrls?(cardCount: number): string[];\n\tonDataReceived?(data: unknown[], options?: RequestOptions): Promise<void>;\n\tgetNoDataText?(): string;\n}\n\ninterface Request {\n\tbaseURL: string;\n\trequestURLs: string[];\n\tsuccess(args: unknown[]): Promise<void>;\n}\n\nexport interface CalculationProperties {\n\tisPlaceholder?: boolean;\n}\n\nexport interface Intent {\n\ttarget: {\n\t\tsemanticObject: string;\n\t\taction: string;\n\t};\n\tparams: {\n\t\t[key: string]: string;\n\t};\n}\n\nexport interface RequestOptions {\n\ttype: string;\n\tonlyCount?: boolean;\n}\n\nexport interface Response {\n\td?: {\n\t\tresults?: unknown[];\n\t};\n\tresults?: unknown[];\n\tvalue?: unknown[];\n}\n\nexport enum TaskPriority {\n\tVERY_HIGH = \"VERY_HIGH\",\n\tHIGH = \"HIGH\",\n\tMEDIUM = \"MEDIUM\",\n\tLOW = \"LOW\"\n}\n\nconst Constants = {\n\tSITUATION_ICON: \"sap-icon://message-warning\",\n\tPLACEHOLDER_ITEMS_COUNT: 5,\n\tTODO_CARDS_LIMIT: 100,\n\tTODO_SECTION_LIMIT: 6,\n\tTODOS_REFRESH_INTERVAL: 65000,\n\tMOBILE_DEVICE_MAX_WIDTH: 600,\n\tDEFAULT_TITLE_HEIGHT: 33,\n\tDEFAULT_CARD_HEIGHT: 168,\n\tDEFAULT_TAB_HEADER_HEIGHT: 44\n};\n\n/**\n * Calculates the card width based on the available width and certain constraints.\n *\n * @param {number} availableWidth - The available width for card rendering.\n * @returns {number} The calculated card width within specified constraints.\n */\nfunction calculateCardWidth(availableWidth: number): number {\n\tconst minWidth = 320;\n\tconst maxWidth = 400;\n\tconst gap = 14.5;\n\tlet count = 1;\n\tlet cardWidth = minWidth;\n\n\twhile (availableWidth / count >= minWidth + gap) {\n\t\tcardWidth = availableWidth / count;\n\t\tcount += 1;\n\t}\n\n\treturn Math.min(cardWidth - gap, maxWidth);\n}\n\n/**\n *\n * Abstract Panel class for managing and storing To-Do cards.\n *\n * @extends BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.ToDoPanel\n */\nexport default abstract class ToDoPanel extends BasePanel implements IToDoPanel {\n\tprotected _oData!: Record<string, unknown>;\n\tprotected requests!: Request[];\n\tprivate _controlModel!: JSONModel;\n\tprivate _toDoWrapper!: VBox;\n\tprivate _cardContainer!: GridContainer;\n\tprivate _mobileCardContainer!: HeaderContainer;\n\tprivate _errorCard!: Card;\n\tprivate _errorMessage!: IllustratedMessage;\n\tprivate _refreshBtn!: Button;\n\tprivate _loadToDos!: Promise<void> | undefined;\n\tprivate _innerControlsBound!: boolean;\n\tprivate _cardCount!: number;\n\n\tconstructor(id?: string | $ToDoPanelSettings);\n\tconstructor(id?: string, settings?: $ToDoPanelSettings);\n\t/**\n\t * Constructor for a new To-Dos Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $ToDoPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Specifies the base URL for batching requests sent from the panel.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tbaseUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the URL for fetching the count of requested to-do cards.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcountUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the URL from where the to-do cards should be fetched.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tdataUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the URL of the target application associated with the to-do cards.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttargetAppUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" }\n\t\t}\n\t};\n\n\tstatic relativeDateFormatter = DateFormat.getDateTimeInstance({\n\t\tstyle: \"medium\",\n\t\trelative: true,\n\t\trelativeStyle: \"short\"\n\t});\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//Initialise ToDos Model\n\t\tthis._oData = {\n\t\t\tlength: 0,\n\t\t\tisLoaded: false,\n\t\t\thasError: false,\n\t\t\tcardWidth: \"20rem\",\n\t\t\tgetSupported: false,\n\t\t\tisExpandedOnce: false,\n\t\t\tisCountCalledOnce: false,\n\t\t\tillustrationType: \"sapIllus-NoTasks\",\n\t\t\trefreshInfo: this._toRelativeDateTime(new Date()),\n\t\t\thorizontalCardCount: Constants.PLACEHOLDER_ITEMS_COUNT,\n\t\t\tillustrationTitle: this._i18nBundle.getText(\"noToDoTitle\"),\n\t\t\tillustrationDescription: this._i18nBundle.getText(\"noToDoDesc\"),\n\t\t\tisPhone: Device.resize.width < Constants.MOBILE_DEVICE_MAX_WIDTH || Device.system.phone,\n\t\t\ttiles: new Array(Constants.PLACEHOLDER_ITEMS_COUNT).fill({ status: \"Loading\" }),\n\t\t\tdisplayTiles: new Array(Constants.PLACEHOLDER_ITEMS_COUNT).fill({ status: \"Loading\" })\n\t\t};\n\t\tthis._controlModel = new JSONModel(this._oData);\n\n\t\t//Initialize Request Queue\n\t\tthis.requests = [];\n\n\t\t//Add Wrapper Container to Panel\n\t\tthis._toDoWrapper = new VBox(`${this.getId()}-toDosWrapper`, {\n\t\t\trenderType: \"Bare\",\n\t\t\titems: [this._generateCardContainer(), this._generateMobileCardContainer(), this._generateErrorMessage()]\n\t\t});\n\t\tthis._toDoWrapper.setModel(this._controlModel);\n\t\tthis._addContent(this._toDoWrapper);\n\n\t\t//Setup Common Menu Items\n\t\tconst menuItem = new MenuItem(`${this.getId()}-refresh`, {\n\t\t\ttitle: this._i18nBundle.getText(\"refresh\"),\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\tpress: () => this._onPressRefresh()\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", menuItem);\n\t\taddFESRId(menuItem, \"todosRefresh\");\n\n\t\t//Setup Common Action Buttons\n\t\tthis._refreshBtn = new Button(`${this.getId()}-refreshBtn`, {\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\ttext: this._toRelativeDateTime(new Date()),\n\t\t\tpress: () => this._onPressRefresh()\n\t\t});\n\t\taddFESRId(this._refreshBtn, \"manualTodoRefresh\");\n\t\tthis.addAggregation(\"actionButtons\", this._refreshBtn);\n\n\t\t//Configure Full Screen and Expand Event handlers\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t\tthis.attachEvent(\"onExpand\", async () => {\n\t\t\tawait this._beforePanelExpand();\n\t\t});\n\t}\n\n\t/**\n\t * Generates the card container (GridContainer) for displaying cards.\n\t *\n\t * @private\n\t * @returns {GridContainer} The generated card container.\n\t */\n\tprivate _generateCardContainer(): GridContainer {\n\t\t//create container\n\t\tif (!this._cardContainer) {\n\t\t\tthis._cardContainer = new GridContainer(`${this.getId()}-flexContainer`, {\n\t\t\t\tinlineBlockLayout: true,\n\t\t\t\tsnapToRow: true,\n\t\t\t\tvisible: \"{= !${/isPhone} && !${/hasError} && (!${/isLoaded} || ${/length} > 0) }\",\n\t\t\t\tlayout: new GridContainerSettings(`${this.getId()}-layout`, {\n\t\t\t\t\tcolumns: \"{/horizontalCardCount}\",\n\t\t\t\t\tcolumnSize: \"{/cardWidth}\",\n\t\t\t\t\tgap: \"1rem\"\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"sapCuxToDoCardsContainer\");\n\t\t}\n\n\t\treturn this._cardContainer;\n\t}\n\n\t/**\n\t * Generates the mobile card container (HeaderContainer) for displaying cards on mobile devices.\n\t *\n\t * @private\n\t * @returns {HeaderContainer} The generated mobile card container.\n\t */\n\tprivate _generateMobileCardContainer(): HeaderContainer {\n\t\t// Create a HeaderContainer for mobile devices\n\t\tif (!this._mobileCardContainer) {\n\t\t\tthis._mobileCardContainer = new HeaderContainer(`${this.getId()}-headerContainer`, {\n\t\t\t\tvisible: \"{/isPhone}\",\n\t\t\t\tscrollStep: 0,\n\t\t\t\tgridLayout: true,\n\t\t\t\tscrollTime: 1000,\n\t\t\t\tshowDividers: false\n\t\t\t});\n\n\t\t\tthis._mobileCardContainer.addStyleClass(\"sapMHeaderContainerAlign sapMHeaderContainerToDoAlign toDoCardHeight\");\n\t\t}\n\n\t\treturn this._mobileCardContainer;\n\t}\n\n\t/**\n\t * Generates the error message card for displaying error messages.\n\t *\n\t * @private\n\t * @returns {Card} The generated error message card.\n\t */\n\tprivate _generateErrorMessage(): Card {\n\t\tif (!this._errorCard) {\n\t\t\tthis._errorMessage = new IllustratedMessage(`${this.getId()}-errorMessage`, {\n\t\t\t\tillustrationSize: \"Base\",\n\t\t\t\ttitle: \"{/illustrationTitle}\",\n\t\t\t\tdescription: \"{/illustrationDescription}\",\n\t\t\t\tillustrationType: \"{/illustrationType}\"\n\t\t\t});\n\t\t\tthis._errorCard = new Card(`${this.getId()}-errorCard`, {\n\t\t\t\tcontent: this._errorMessage,\n\t\t\t\tvisible: \"{= ${/tiles/length} === 0 || ${/hasError} === true }\"\n\t\t\t});\n\t\t}\n\n\t\treturn this._errorCard;\n\t}\n\n\t/**\n\t * Handler for the Refresh button for each panel.\n\t * Reloads the selected panel\n\t *\n\t * @async\n\t * @private\n\t */\n\tprivate _onPressRefresh(): void {\n\t\tvoid ((this.getParent() as ToDosContainer)?._getSelectedPanel() as ToDoPanel)?._loadCards(true);\n\t}\n\n\t/**\n\t * Loads the To-Do cards for the panel.\n\t *\n\t * @private\n\t * @param {boolean} forceRefresh - force refresh cards\n\t * @returns {Promise<void>} A promise that resolves when the cards are loaded.\n\t */\n\tpublic async _loadCards(forceRefresh?: boolean): Promise<void> {\n\t\tif (this._loadToDos !== undefined && !forceRefresh) {\n\t\t\treturn this._loadToDos;\n\t\t} else {\n\t\t\tthis._bindInnerControls();\n\t\t\tthis._loadToDos = new Promise((resolve) => {\n\t\t\t\tconst selectedKey = this.getParent()?.getProperty(\"selectedKey\") as string;\n\t\t\t\tconst requests: Request[] = [];\n\n\t\t\t\tthis._oData.isLoaded = false;\n\t\t\t\tthis._oData.isCountCalledOnce = false;\n\t\t\t\tthis._oData.isExpandedOnce = this._isElementExpanded();\n\t\t\t\tthis._setCount();\n\n\t\t\t\tif (this._getSupported()) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Load Placeholder Cards\n\t\t\t\t\t\tthis._generatePlaceHolderTiles();\n\n\t\t\t\t\t\t// Add Initial Batch Requests\n\t\t\t\t\t\trequests.push(\n\t\t\t\t\t\t\tthis._generateRequestObject({ type: selectedKey, onlyCount: selectedKey !== this.getProperty(\"key\") })\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.requests = this.requests.concat(requests);\n\n\t\t\t\t\t\t//Submit Batch Requests\n\t\t\t\t\t\tthis._submitBatch()\n\t\t\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\t\t\tthis._oData.isLoaded = selectedKey === this.getProperty(\"key\");\n\t\t\t\t\t\t\t\tthis._oData.isCountCalledOnce = true;\n\t\t\t\t\t\t\t\tthis._setCount(this._oData.length as string);\n\t\t\t\t\t\t\t\tthis._setSectionRefreshInterval();\n\t\t\t\t\t\t\t\tthis._oData.refreshInfo = this._toRelativeDateTime(new Date());\n\t\t\t\t\t\t\t\tthis._oData.lastRefreshedTime = new Date();\n\t\t\t\t\t\t\t\tthis._updateRefreshInformation();\n\t\t\t\t\t\t\t\tawait this._switchTabIfRequired();\n\t\t\t\t\t\t\t\tthis._updateHeaderIfExclusive();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((error: unknown) => {\n\t\t\t\t\t\t\t\tLog.error(error instanceof Error ? error.message : \"\");\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\tthis._controlModel.refresh();\n\t\t\t\t\t\t\t\tthis._adjustLayout();\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._handleError(`User not authorized to access: + ${this.getTargetAppUrl()}`);\n\n\t\t\t\t\t// Remove Item from IconTabBar\n\t\t\t\t\t(this.getParent() as ToDosContainer)?.removeContent(this);\n\n\t\t\t\t\t//resolve the promise\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this._loadToDos;\n\t}\n\n\t/**\n\t * Update Container Header if the panel is exclusive\n\t *\n\t * @private\n\t */\n\tprivate _updateHeaderIfExclusive() {\n\t\tif (this._isExclusivePanel()) {\n\t\t\t(this.getParent() as ToDosContainer)._setTitle(`${this._i18nBundle.getText(\"toDosTitle\")} (${String(this._oData.length)})`);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a one-time binding of inner controls for the ToDoPanel.\n\t * @private\n\t */\n\tprivate _bindInnerControls(): void {\n\t\tif (!this._innerControlsBound) {\n\t\t\t//bind card container\n\t\t\tthis._cardContainer.bindAggregation(\"items\", {\n\t\t\t\tpath: \"/displayTiles\",\n\t\t\t\tlength: Constants.TODO_CARDS_LIMIT,\n\t\t\t\tfactory: (id, context) => this.generateCardTemplate(id, context)?.bindProperty?.(\"width\", { path: \"/cardWidth\" })\n\t\t\t});\n\n\t\t\t//bind mobile card container\n\t\t\tthis._mobileCardContainer.bindAggregation(\"content\", {\n\t\t\t\tpath: \"/displayTiles\",\n\t\t\t\tlength: Constants.TODO_CARDS_LIMIT,\n\t\t\t\tfactory: this.generateCardTemplate.bind(this)\n\t\t\t});\n\n\t\t\tthis._innerControlsBound = true;\n\t\t}\n\t}\n\n\t/**\n\t * Generate a default card template for the Current Panel.\n\t * An extended panel can have it's own template by overridding\n\t * this method and providing a custom card template.\n\t *\n\t * @public\n\t * @param {string} id The ID for the template.\n\t * @param {object} context The context for the template.\n\t * @returns {object} The generated card template.\n\t */\n\tpublic generateCardTemplate(id: string, context: Context): Control {\n\t\treturn new GenericTile(`${id}-tile`, {\n\t\t\tmode: \"ActionMode\",\n\t\t\tframeType: \"TwoByOne\",\n\t\t\tpressEnabled: true,\n\t\t\theader: context.getProperty(\"title\") as string,\n\t\t\twidth: context.getProperty(\"/cardWidth\") as string,\n\t\t\tstate: context.getProperty(\"status\") as LoadState,\n\t\t\ttileContent: [\n\t\t\t\tnew TileContent(`${id}-tileContent`, {\n\t\t\t\t\tpriority: context.getProperty(\"priority\") as Priority,\n\t\t\t\t\tpriorityText: this._toPriorityText(context.getProperty(\"priority\") as Priority),\n\t\t\t\t\tfooter: context.getProperty(\"footerText\") as string,\n\t\t\t\t\tcontent: new Text(`${id}-situationContent`, {\n\t\t\t\t\t\ttext: context.getProperty(\"message\") as string\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Convert a priority string to a corresponding priority value.\n\t *\n\t * @private\n\t * @param {TaskPriority} priority - The task priority string.\n\t * @returns {string} The corresponding priority value.\n\t */\n\tpublic _toPriority(priority: TaskPriority): Priority {\n\t\tif (priority === TaskPriority.VERY_HIGH) {\n\t\t\treturn Priority.VeryHigh ? Priority.VeryHigh : Priority.None;\n\t\t} else if (priority === TaskPriority.HIGH) {\n\t\t\treturn Priority.High;\n\t\t} else if (priority === TaskPriority.MEDIUM) {\n\t\t\treturn Priority.Medium;\n\t\t} else if (priority === TaskPriority.LOW) {\n\t\t\treturn Priority.Low;\n\t\t} else {\n\t\t\treturn Priority.None;\n\t\t}\n\t}\n\n\t/**\n\t * Convert a priority string to a corresponding priority text.\n\t *\n\t * @private\n\t * @param {Priority} priority - The priority string.\n\t * @returns {string} The corresponding priority text.\n\t */\n\tpublic _toPriorityText(priority: Priority): string {\n\t\tlet key;\n\t\tif (priority === Priority.VeryHigh) {\n\t\t\tkey = \"veryHighPriority\";\n\t\t} else if (priority === Priority.High) {\n\t\t\tkey = \"highPriority\";\n\t\t} else if (priority === Priority.Medium) {\n\t\t\tkey = \"mediumPriority\";\n\t\t} else if (priority === Priority.Low) {\n\t\t\tkey = \"lowPriority\";\n\t\t} else {\n\t\t\tkey = \"nonePriority\";\n\t\t}\n\n\t\treturn this._i18nBundle.getText(key) as string;\n\t}\n\n\t/**\n\t * Generates placeholder tiles for the panel.\n\t *\n\t * @private\n\t */\n\tprivate _generatePlaceHolderTiles(): void {\n\t\tthis._cardCount = this._getVisibleCardCount({ isPlaceholder: true });\n\t\tthis._oData.displayTiles = this._oData.tiles = new Array(this._cardCount).fill({ status: \"Loading\" });\n\t\tthis._oData.isLoaded = this._oData.hasError = false;\n\t\tthis._controlModel.refresh();\n\t}\n\n\t/**\n\t * Calculates the number of visible cards that can fit within the available space of the To-Dos panel.\n\t *\n\t * @private\n\t * @param {CalculationProperties} [calculationProperties] - Optional properties to assist in the calculation.\n\t * @returns {number} - The number of visible cards.\n\t */\n\tprivate _getVisibleCardCount(calculationProperties?: CalculationProperties): number {\n\t\tconst layout = (this.getParent() as ToDosContainer)?._getLayout();\n\t\tlet isElementExpanded = false;\n\t\tlet targetDomRef = this._toDoWrapper?.getDomRef();\n\n\t\tif (layout) {\n\t\t\tisElementExpanded = this._isElementExpanded();\n\t\t\tconst containerDomRef = (isElementExpanded ? layout._getFullScreenContainer() : layout).getDomRef();\n\t\t\ttargetDomRef = containerDomRef?.childNodes[0] as Element;\n\t\t}\n\n\t\tconst isMobileDevice = this._controlModel.getProperty(\"/isPhone\") as boolean;\n\t\tlet cardCount = isMobileDevice ? Constants.TODO_SECTION_LIMIT : 1;\n\n\t\tif (targetDomRef && !isMobileDevice) {\n\t\t\t// @ts-expect-error Calculate Horizontal Card Count\n\t\t\tcardCount = this.getHorizontalCardCount(targetDomRef, calculationProperties);\n\n\t\t\tif (isElementExpanded) {\n\t\t\t\t// @ts-expect-error Calculate Vertical Card Count\n\t\t\t\tcardCount *= this.getVerticalCardCount(targetDomRef, calculationProperties);\n\t\t\t}\n\n\t\t\t//Restrict cards to the maximum limit\n\t\t\tcardCount = cardCount > Constants.TODO_CARDS_LIMIT ? Constants.TODO_CARDS_LIMIT : cardCount;\n\t\t}\n\n\t\treturn cardCount;\n\t}\n\n\t/**\n\t * Checks if the current element is expanded to full screen.\n\t *\n\t * @private\n\t * @returns {boolean} - True if the element is expanded, otherwise false.\n\t */\n\tprivate _isElementExpanded(): boolean {\n\t\tconst toDosContainer = this.getParent() as ToDosContainer;\n\t\tconst layout = toDosContainer._getLayout();\n\t\treturn layout?._getCurrentExpandedElementName() === toDosContainer.getProperty(\"fullScreenName\");\n\t}\n\n\t/**\n\t * Calculates the number of horizontal cards that can fit within the available width of the given DOM element.\n\t *\n\t * @private\n\t * @param {Element} domRef - The DOM element to calculate the horizontal card count for.\n\t * @returns {number} - The number of horizontal cards that can fit within the available width.\n\t */\n\tprotected getHorizontalCardCount(domRef: Element): number {\n\t\tconst domProperties = fetchElementProperties(domRef, [\"width\", \"padding-left\", \"padding-right\", \"margin-left\", \"margin-right\"]);\n\t\tconst availableWidth = Object.values(domProperties)\n\t\t\t.slice(1)\n\t\t\t.reduce((width, propertyValue) => width - propertyValue, domProperties[\"width\"]);\n\t\tconst cardWidth = calculateCardWidth(availableWidth);\n\n\t\t// Calculate Horizontal Card Count\n\t\tlet horizontalCardCount = Math.max(Math.floor(availableWidth / cardWidth), 1);\n\t\tthis._controlModel.setProperty(\"/cardWidth\", `${cardWidth / 16}rem`);\n\t\tthis._controlModel.setProperty(\"/horizontalCardCount\", horizontalCardCount);\n\n\t\treturn horizontalCardCount;\n\t}\n\n\t/**\n\t * Calculates the number of vertical cards that can fit within the available height of the given DOM element.\n\t *\n\t * @private\n\t * @param {Element} domRef - The DOM element to calculate the vertical card count for.\n\t * @returns {number} - The number of vertical cards that can fit within the available height.\n\t */\n\tprotected getVerticalCardCount(domRef: Element): number {\n\t\tconst domProperties = fetchElementProperties(domRef, [\"height\", \"padding-top\"]);\n\t\tconst titleHeight = this.calculateTitleHeight();\n\t\tconst availableHeight = domProperties.height - domProperties[\"padding-top\"] * 2 - titleHeight;\n\t\tconst margin = 14;\n\t\tconst cardHeight = Constants.DEFAULT_CARD_HEIGHT + margin;\n\t\tconst verticalCardCount = Math.max(Math.floor(availableHeight / cardHeight), 2); //minimum of 2 rows should be displayed\n\n\t\treturn verticalCardCount;\n\t}\n\n\t/**\n\t * Calculates the combined height of the title and tab header for the To-Dos panel.\n\t *\n\t * @private\n\t * @returns {number} - The combined height of the title and tab header.\n\t */\n\tprotected calculateTitleHeight(): number {\n\t\tconst container = this.getParent() as ToDosContainer;\n\t\tconst containerHeaderRef = UI5Element.getElementById(`${container.getId()}-header`)?.getDomRef();\n\t\tconst iconTabBarHeaderRef = UI5Element.getElementById(`${container._getInnerControl().getId()}--header`)?.getDomRef();\n\t\tconst defaultHeight = Constants.DEFAULT_TITLE_HEIGHT + Constants.DEFAULT_TAB_HEADER_HEIGHT;\n\t\tlet titleHeight = 0;\n\n\t\tif (containerHeaderRef && iconTabBarHeaderRef) {\n\t\t\ttitleHeight = containerHeaderRef.clientHeight + iconTabBarHeaderRef.clientHeight;\n\t\t}\n\n\t\treturn Math.max(titleHeight, defaultHeight);\n\t}\n\n\t/**\n\t * Generates a request object for batch requests.\n\t *\n\t * @private\n\t * @param {RequestOptions} options - Additional properties for generating the request object.\n\t * @param {boolean} [options.onlyCount] - Whether to include only the count in the request.\n\t * @returns {Object} The generated request object.\n\t */\n\tprivate _generateRequestObject(options: RequestOptions): Request {\n\t\tconst cardCount = this._getVisibleCardCount();\n\t\tconst urls = this.generateRequestUrls?.(cardCount);\n\n\t\tif (options?.onlyCount) {\n\t\t\turls.splice(1);\n\t\t}\n\n\t\treturn {\n\t\t\tbaseURL: this.getBaseUrl(),\n\t\t\trequestURLs: urls,\n\t\t\tsuccess: async (args: unknown[]): Promise<void> => {\n\t\t\t\t//data process extension for panels\n\t\t\t\tawait this.onDataReceived(args.splice(1), options);\n\n\t\t\t\t//set card count and handle empty cards\n\t\t\t\tthis._oData.length = Number(args[0]);\n\t\t\t\tthis._handleEmptyCards();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Generates request URLs for fetching data based on the specified card count.\n\t *\n\t * @private\n\t * @param {number} cardCount - The number of cards to retrieve.\n\t * @returns {string[]} An array of request URLs.\n\t */\n\tpublic generateRequestUrls(cardCount: number): string[] {\n\t\tconst queryString = `$skip=0&$top=${cardCount}`;\n\t\tlet dataUrl = this.getDataUrl();\n\t\tdataUrl = dataUrl.includes(\"?\") ? `${dataUrl}&${queryString}` : `${dataUrl}?${queryString}`;\n\n\t\treturn [this.getCountUrl(), dataUrl];\n\t}\n\n\t/**\n\t * Hook for processing data fetched from a batch call.\n\t * This method can be overridden to perform additional data processing operations.\n\t *\n\t * @private\n\t * @async\n\t * @param {unknown[]} results - Data retrieved from the batch call.\n\t * @param {RequestOptions} options - Additional options for parsing the data.\n\t * Structure may vary based on the backend service.\n\t */\n\tpublic async onDataReceived(results: unknown[] = [], options?: RequestOptions): Promise<void> {\n\t\tif (!options || (options && !options.onlyCount)) {\n\t\t\tthis._oData.displayTiles = this._oData.tiles = results[0] || [];\n\t\t}\n\n\t\tawait Promise.resolve();\n\t}\n\n\t/**\n\t * Handles the scenario when there are no cards to display.\n\t * Updates the illustration and description based on the selected panel and card count.\n\t *\n\t * @private\n\t */\n\tprivate _handleEmptyCards() {\n\t\tif (Number(this._oData.length) === 0) {\n\t\t\tthis._oData.illustrationType = \"sapIllus-EmptyPlanningCalendar\";\n\t\t\tthis._oData.illustrationTitle = this._isExclusivePanel()\n\t\t\t\t? this._i18nBundle.getText(\"noToDoTitle\")\n\t\t\t\t: this._i18nBundle.getText(this.getNoDataText());\n\t\t\tthis._oData.illustrationDescription = this._isExclusivePanel()\n\t\t\t\t? this._i18nBundle.getText(\"noToDoDesc\")\n\t\t\t\t: this._i18nBundle.getText(\"emptyToDoDesc\");\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the panel is exclusive based on support and the number of panels.\n\t *\n\t * @private\n\t * @returns {boolean} True if the panel is exclusive, otherwise false.\n\t */\n\tprivate _isExclusivePanel(): boolean {\n\t\tconst allPanels = (this.getParent() as ToDosContainer).getContent() as ToDoPanel[];\n\t\tconst supportedPanels = allPanels.filter((panel) => panel._getSupported());\n\n\t\treturn supportedPanels.length === 1 || (allPanels.length === 1 && this._getSupported());\n\t}\n\n\t/**\n\t * Sets the interval for refreshing the section.\n\t *\n\t * @private\n\t */\n\tprivate _setSectionRefreshInterval(): void {\n\t\tclearInterval(this._oData.refreshFn as number);\n\t\tthis._oData.refreshFn = setInterval(() => {\n\t\t\tthis._oData.lastRefreshedTime = this._oData.lastRefreshedTime || new Date();\n\t\t\tthis._oData.refreshInfo = this._toRelativeDateTime(this._oData.lastRefreshedTime as Date);\n\t\t\tthis._updateRefreshInformation();\n\t\t}, Constants.TODOS_REFRESH_INTERVAL);\n\t}\n\n\t/**\n\t * Updates the refresh information and adjusts the layout.\n\t *\n\t * @private\n\t */\n\tpublic _updateRefreshInformation(): void {\n\t\tconst container = this.getParent() as ToDosContainer;\n\t\tif (container.getProperty(\"selectedKey\") === this.getProperty(\"key\")) {\n\t\t\tthis._refreshBtn.setProperty(\"text\", this._oData.refreshInfo, true);\n\t\t\tcontainer._updateContainerHeader(this);\n\t\t}\n\n\t\tthis._adjustLayout();\n\t}\n\n\t/**\n\t * Adjusts the layout based on card count and device type.\n\t *\n\t * @private\n\t */\n\tpublic _adjustLayout() {\n\t\t// Update visible cards\n\t\tconst cardCount = this._getVisibleCardCount();\n\t\tif ((this._oData.tiles as object[]).length && !this._oData.hasError) {\n\t\t\tconst displayCards = (this._oData.tiles as object[]).slice(0, cardCount);\n\t\t\tthis._controlModel.setProperty(\"/displayTiles\", displayCards);\n\t\t}\n\n\t\t// Update if device type is phone\n\t\tthis._controlModel.setProperty(\"/isPhone\", this.getDeviceType() === DeviceType.Mobile);\n\n\t\t// Show/Hide Full Screen Button if available\n\t\t(this.getParent() as ToDosContainer)?.toggleFullScreenElements(\n\t\t\tthis,\n\t\t\tNumber(this._oData.length) > cardCount,\n\t\t\tthis._isElementExpanded()\n\t\t);\n\t}\n\n\t/**\n\t * Formats the given date to a relative date.\n\t *\n\t * @private\n\t * @param {Date} date Date object or Date String\n\t * @returns {string} Formatted Date\n\t */\n\tpublic _toRelativeDateTime(date: Date): string {\n\t\tconst inputDate = new Date(date);\n\t\treturn isNaN(Number(inputDate)) ? \"\" : ToDoPanel.relativeDateFormatter.format(inputDate);\n\t}\n\n\t/**\n\t * Get the text for the \"No Data\" message.\n\t *\n\t * @private\n\t * @returns {string} The text for the \"No Data\" message.\n\t */\n\tpublic getNoDataText(): string {\n\t\treturn this._i18nBundle.getText(\"noData\") as string;\n\t}\n\n\t/**\n\t * Parses the response object and returns the appropriate value.\n\t *\n\t * @private\n\t * @param {Object} response - The response object.\n\t * @param {Object} [response.d] - The 'd' property of the response object.\n\t * @param {Array} [response.d.results] - The results array.\n\t * @param {string|number} [response.d] - The 'd' property of the response object which may contain a numeric value.\n\t * @param {string|number} [response] - The response object which may contain a numeric value.\n\t * @param {string|number} [response.value] - The 'value' property of the response object which may contain a numeric value.\n\t * @returns {Response} - The parsed value extracted from the response object.\n\t */\n\tprivate _parseResponse(response: Response): Response {\n\t\tconst { d = {}, value } = response || {};\n\t\tconst results = d?.results;\n\t\tconst numericD = !isNaN(+d) && +d;\n\t\tconst numericResponse = !isNaN(+response) && +response;\n\n\t\treturn (results || numericD || numericResponse || value || 0) as Response;\n\t}\n\n\t/**\n\t * Submits a batch request for multiple URLs and processes the responses.\n\t *\n\t * @private\n\t * @returns {Promise} A Promise that resolves when all batch requests are completed.\n\t */\n\tprotected _submitBatch(): Promise<unknown[]> {\n\t\treturn Promise.all(\n\t\t\tthis.requests.map(async (request: Request) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst responses = await BatchHelper.createMultipartRequest(request.baseURL, request.requestURLs);\n\n\t\t\t\t\tif (responses.length) {\n\t\t\t\t\t\tconst processedResponses = responses.map((response: string | Response) => {\n\t\t\t\t\t\t\tif (typeof response === \"string\") {\n\t\t\t\t\t\t\t\tresponse = JSON.parse(response) as Response;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this._parseResponse(response);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Call success callback, if any\n\t\t\t\t\t\tif (request.success && typeof request.success === \"function\") {\n\t\t\t\t\t\t\tawait request.success(processedResponses);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn processedResponses;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Invalid response\");\n\t\t\t\t\t}\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tthis._handleError(error);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._clearRequests();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Handles errors by updating the data and logging the error.\n\t *\n\t * @private\n\t * @param {Error} error - The error object to handle.\n\t */\n\tprivate _handleError(error: unknown) {\n\t\tthis._oData.displayTiles = this._oData.tiles = [];\n\t\tthis._oData.getSupported = this._oData.isLoaded = this._oData.hasError = true;\n\t\tthis._oData.illustrationType = \"sapIllus-UnableToLoad\";\n\t\tthis._oData.illustrationTitle = this._oData.illustrationDescription = \"\";\n\n\t\tLog.error(error as string);\n\t\tthis._controlModel.refresh();\n\t}\n\n\t/**\n\t * Clears the list of requests.\n\t *\n\t * @private\n\t */\n\tprotected _clearRequests() {\n\t\tthis.requests = [];\n\t}\n\n\t/**\n\t * Checks if the panel is loaded.\n\t *\n\t * @private\n\t * @returns {boolean} true if the panel is loaded, false otherwise.\n\t */\n\tpublic _isLoaded(): boolean {\n\t\treturn this._oData.isLoaded as boolean;\n\t}\n\n\t/**\n\t * Set the loaded status of the ToDoPanel.\n\t *\n\t * @private\n\t * @param {boolean} isLoaded - The new loaded status to set for the ToDoPanel.\n\t */\n\tpublic _setLoaded(isLoaded: boolean): void {\n\t\tthis._oData.isLoaded = isLoaded;\n\t}\n\n\t/**\n\t * Gets the supported status of the panel.\n\t *\n\t * @private\n\t * @returns {boolean} The supported status of the panel.\n\t */\n\tpublic _getSupported(): boolean {\n\t\treturn this._oData.getSupported as boolean;\n\t}\n\n\t/**\n\t * Sets the supported status of the panel.\n\t *\n\t * @private\n\t * @param {boolean} value - The value to set for supported status.\n\t */\n\tpublic _setSupported(isSupported: boolean): void {\n\t\tthis._oData.getSupported = isSupported;\n\t}\n\n\t/**\n\t * Extracts the app intent from the target app URL.\n\t *\n\t * @private\n\t * @returns {Intent | null} The app intent object with target and parameters, or null if not found.\n\t */\n\tpublic _getAppIntent(): Intent | null {\n\t\tconst pattern = /#([^?-]+)-([^?#]+)(?:\\?([^#]+))?(?:#.*)?/;\n\t\tconst match = this.getTargetAppUrl().match(pattern);\n\n\t\tif (match) {\n\t\t\tconst target = {\n\t\t\t\tsemanticObject: match[1],\n\t\t\t\taction: match[2]\n\t\t\t};\n\t\t\tconst params = {} as Record<string, string>;\n\n\t\t\tif (match[3]) {\n\t\t\t\tconst paramsArray = match[3].split(\"&\");\n\t\t\t\tfor (const param of paramsArray) {\n\t\t\t\t\tconst [key, value] = param.split(\"=\");\n\t\t\t\t\tparams[key] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttarget,\n\t\t\t\tparams\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Switch to available tab if current panel has empty cards or has error\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async _switchTabIfRequired() {\n\t\tconst container = this.getParent() as ToDosContainer;\n\t\tconst selectedKey = container?.getProperty(\"selectedKey\") as string;\n\n\t\tif (selectedKey === this.getProperty(\"key\") && (this._oData.length === 0 || this._oData.hasError)) {\n\t\t\tlet nextAvailablePanel;\n\t\t\tconst panels = container?.getAggregation(\"content\") as ToDoPanel[];\n\n\t\t\tfor (const panel of panels) {\n\t\t\t\tif (panel !== this) {\n\t\t\t\t\t//ensure that panel is loaded first\n\t\t\t\t\tawait panel._loadCards();\n\n\t\t\t\t\tif (panel._getSupported() && !panel._isLoaded() && panel._getCardCount() > 0) {\n\t\t\t\t\t\tnextAvailablePanel = panel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nextAvailablePanel) {\n\t\t\t\tcontainer?.setProperty(\"selectedKey\", nextAvailablePanel.getProperty(\"key\"));\n\t\t\t\tToDosContainer.cardCount = this._cardCount;\n\t\t\t\tawait nextAvailablePanel._loadCards(true);\n\t\t\t\tToDosContainer.cardCount = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles the press event to view all items.\n\t *\n\t * @private\n\t */\n\tpublic _onPressViewAll() {\n\t\tURLHelper.redirect(this.getTargetAppUrl(), false);\n\t}\n\n\t/**\n\t * Retrieves the count of cards in the panel.\n\t *\n\t * @private\n\t * @returns {number} The number of cards.\n\t */\n\tpublic _getCardCount(): number {\n\t\treturn Number(this._oData.length);\n\t}\n\n\t/**\n\t * Handles actions to be performed before the To-Dos panel is expanded.\n\t * If the panel has not been expanded before in full screen, the cards will be loaded once.\n\t *\n\t * @private\n\t */\n\tprivate async _beforePanelExpand() {\n\t\tif (!this._oData.isExpandedOnce) {\n\t\t\tthis._oData.isExpandedOnce = true;\n\t\t\tawait this._loadCards(true);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}