{"version":3,"file":"BaseSettingsDialog-dbg-dbg.js","names":["sap","ui","define","Dialog","Lib","BaseSettingsDialog","extend","renderer","apiVersion","metadata","library","properties","selectedKey","type","group","defaultValue","visibility","context","defaultAggregation","aggregations","panels","singularName","multiple","constructor","_constructor","id","settings","Dialog.prototype.constructor.call","init","_init","Dialog.prototype.init.call","_i18nBundle","getResourceBundleFor","_panelCache","addStyleClass","getPanels","_getPanels","slice","addPanel","_addPanel","panel","push","addAggregation","insertPanel","_insertPanel","index","splice","insertAggregation","removeAllPanels","_removeAllPanels","removeAllAggregation"],"sources":["BaseSettingsDialog.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Dialog from \"sap/m/Dialog\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { $BaseSettingsDialogSettings } from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\n\n/**\n *\n * Abstract base class for My Home Settings Dialog.\n *\n * @extends Dialog\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @abstract\n * @private\n *\n * @alias sap.cux.home.BaseSettingsDialog\n */\nexport default abstract class BaseSettingsDialog extends Dialog {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _panelCache!: BaseSettingsPanel[];\n\n\tconstructor(id?: string | $BaseSettingsDialogSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsDialogSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsDialogSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The selectedkey of the settings dialog\n\t\t\t */\n\t\t\tselectedKey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Additional context of the settings dialog\n\t\t\t */\n\t\t\tcontext: { type: \"object\", group: \"Misc\", defaultValue: {}, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"panels\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Contains the panels aggregation and should be of type BaseSettingsPanel.\n\t\t\t */\n\t\t\tpanels: { type: \"sap.cux.home.BaseSettingsPanel\", singularName: \"panel\", multiple: true }\n\t\t}\n\t};\n\n\tstatic renderer = {\n\t\tapiVersion: 2\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\n\t\t//setup page\n\t\tthis._panelCache = [];\n\t\tthis.addStyleClass(\"sapContrastPlus\");\n\t}\n\n\t/**\n\t * Returns all the panels in the dialog.\n\t * Overridden to return cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @returns {BaseSettingsPanel[]} panel array\n\t */\n\tpublic getPanels(): BaseSettingsPanel[] {\n\t\treturn this._panelCache.slice();\n\t}\n\n\t/**\n\t * Adds a new panel at the end of the available panels.\n\t * Overridden to update cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @returns {BaseSettingsDialog} the dialog for chaining\n\t */\n\taddPanel(panel: BaseSettingsPanel): BaseSettingsDialog {\n\t\tthis._panelCache.push(panel);\n\t\tthis.addAggregation(\"panels\", panel);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a new panel to the 'panels' aggregation at the index.\n\t * Overridden to update cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @param {BaseSettingsPanel} panel The panel to insert.\n\t * @param {number} index The index at which to insert the panel.\n\t * @returns {BaseSettingsDialog} Returns 'this' to allow method chaining.\n\t */\n\tinsertPanel(panel: BaseSettingsPanel, index: number): BaseSettingsDialog {\n\t\tthis._panelCache.splice(index, 0, panel);\n\t\tthis.insertAggregation(\"panels\", panel, index);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes all panels from the dialog, clears the internal panel cache.\n\t * Overridden to update cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @returns {BaseSettingsPanel[]} An empty array representing the removed panels.\n\t */\n\tremoveAllPanels(): BaseSettingsPanel[] {\n\t\tthis._panelCache = [];\n\t\tthis.removeAllAggregation(\"panels\");\n\t\treturn this.getPanels();\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAHA;;AAAAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,gDAAAC,MAAA,EAAAC,GAAA;EAAA;;EAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhBA,MAiB8BC,kBAAkB,GAASF,MAAM,CAAAG,MAAA;IA+BvDC,QAAQ,EAAG;MACjBC,UAAU,EAAE;IACb,CAAC;IAvBeC,QAAQ,EAAoB;MAC3CC,OAAO,EAAE,cAAc;MACvBC,UAAU,EAAE;QACX;AACH;AACA;QACGC,WAAW,EAAE;UAAEC,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAS,CAAC;QACtF;AACH;AACA;QACGC,OAAO,EAAE;UAAEJ,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,CAAC,CAAC;UAAEC,UAAU,EAAE;QAAS;MAClF,CAAC;MACDE,kBAAkB,EAAE,QAAQ;MAC5BC,YAAY,EAAE;QACb;AACH;AACA;QACGC,MAAM,EAAE;UAAEP,IAAI,EAAE,gCAAgC;UAAEQ,YAAY,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAK;MACzF;IACD,CAAC;IAvBDC,WAAW,WAAAC,aAACC,EAAW,EAAEC,QAAsC,EAAE;MAChEC,iCAAA,OAAMF,EAAE,EAAEC,QAAQ;IACnB,CAAC;IA2BD;AACD;AACA;AACA;AACA;AACA;IACQE,IAAI,WAAAC,MAAA,EAAS;MACnBC,0BAAA;MACA,IAAI,CAACC,WAAW,GAAG3B,GAAG,CAAC4B,oBAAoB,CAAC,mBAAmB,CAAmB;;MAElF;MACA,IAAI,CAACC,WAAW,GAAG,EAAE;MACrB,IAAI,CAACC,aAAa,CAAC,iBAAiB,CAAC;IACtC,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,SAAS,WAAAC,WAAA,EAAwB;MACvC,OAAO,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC,CAAC;IAChC,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACCC,QAAQ,WAAAC,UAACC,KAAwB,EAAsB;MACtD,IAAI,CAACP,WAAW,CAACQ,IAAI,CAACD,KAAK,CAAC;MAC5B,IAAI,CAACE,cAAc,CAAC,QAAQ,EAAEF,KAAK,CAAC;MACpC,OAAO,IAAI;IACZ,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCG,WAAW,WAAAC,aAACJ,KAAwB,EAAEK,KAAa,EAAsB;MACxE,IAAI,CAACZ,WAAW,CAACa,MAAM,CAACD,KAAK,EAAE,CAAC,EAAEL,KAAK,CAAC;MACxC,IAAI,CAACO,iBAAiB,CAAC,QAAQ,EAAEP,KAAK,EAAEK,KAAK,CAAC;MAC9C,OAAO,IAAI;IACZ,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACCG,eAAe,WAAAC,iBAAA,EAAwB;MACtC,IAAI,CAAChB,WAAW,GAAG,EAAE;MACrB,IAAI,CAACiB,oBAAoB,CAAC,QAAQ,CAAC;MACnC,OAAO,IAAI,CAACf,SAAS,CAAC,CAAC;IACxB;EAAC;EAAA,OAxG4B9B,kBAAkB;AAAA","ignoreList":[]}