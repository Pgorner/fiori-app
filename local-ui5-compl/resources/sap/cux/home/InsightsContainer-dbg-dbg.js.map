{"version":3,"file":"InsightsContainer-dbg-dbg.js","names":["sap","ui","define","__BaseContainer","___CardsPanel","__ErrorPanel","___TilesPanel","___utils_Device","_interopRequireDefault","obj","__esModule","default","BaseContainer","cardsMenuItems","ErrorPanel","tilesMenuItems","DeviceType","tilesPanelName","cardsPanelName","errorPanelName","InsightsContainer","extend","renderer","apiVersion","constructor","_constructor","id","settings","BaseContainer.prototype.constructor.call","_visiblePanels","_isInitialRender","init","_init","BaseContainer.prototype.init.call","setProperty","setTooltip","String","_i18nBundle","getText","onBeforeRendering","_onBeforeRendering","BaseContainer.prototype.onBeforeRendering.call","aContent","getContent","panels","forEach","oContent","tilesPanel","isA","push","cardsPanel","handleHidePanel","panel","handleRemoveActions","attachHandleHidePanel","attachHandleUnhidePanel","unhidePanelIfHidden","renderPanel","_handleHidePanel","removeContent","panelCount","length","_addContainerHeader","_errorPanel","getId","messageTitle","messageDescription","getData","addAggregation","menuItems","_handleNoPanelMenuItems","tilesCount","_handleTilesPanelMenuItems","cardsCount","_handleCardsPanelMenuItems","insightsSettingMenu","getAggregation","find","menu","removeAllAggregation","actionButtons","actionButton","menuItem","_removeContainerHeader","handleAddActions","REFRESH","valueOf","cardsPanelId","unshift","updatePanelsItemCount","_updatePanelsItemCount","itemCount","panelName","_unhidePanelIfHidden","includes","addContent","adjustLayout","_adjustLayout","toggleActionButtons","getDeviceType","Mobile"],"sources":["InsightsContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport BaseContainer, { $BaseContainerSettings } from \"./BaseContainer\";\nimport BasePanel from \"./BasePanel\";\nimport CardsPanel, { cardsMenuItems } from \"./CardsPanel\";\nimport ErrorPanel from \"./ErrorPanel\";\nimport MenuItem from \"./MenuItem\";\nimport TilesPanel, { tilesMenuItems } from \"./TilesPanel\";\nimport { DeviceType } from \"./utils/Device\";\n\nconst tilesPanelName: string = \"sap.cux.home.TilesPanel\";\nconst cardsPanelName: string = \"sap.cux.home.CardsPanel\";\nconst errorPanelName: string = \"sap.cux.home.ErrorPanel\";\n\n/**\n *\n * Container class for managing and storing Insights Tiles and Insights Cards.\n *\n * @extends sap.cux.home.BaseContainer\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.InsightsContainer\n */\n\nexport default class InsightsContainer extends BaseContainer {\n\tstatic renderer = {\n\t\t...BaseContainer.renderer,\n\t\tapiVersion: 2\n\t};\n\tprivate _visiblePanels: string[] = [];\n\tprivate tilesPanel!: TilesPanel;\n\tprivate cardsPanel!: CardsPanel;\n\tprivate tilesCount!: number;\n\tprivate cardsCount!: number;\n\tprivate _errorPanel!: ErrorPanel;\n\tprivate _isInitialRender: boolean = true;\n\n\t/**\n\t * Constructor for a new Insights container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.setProperty(\"layout\", \"Vertical\");\n\t\tthis.setTooltip(String(this._i18nBundle.getText(\"insightLayoutSectionTitle\")));\n\t}\n\n\tpublic onBeforeRendering() {\n\t\tsuper.onBeforeRendering();\n\t\tif(this._isInitialRender) {\n\t\t\tconst aContent = this.getContent();\n\t\t\tconst panels: (TilesPanel | CardsPanel)[] = [];\n\t\t\t// Initially tiles & cards panels will be hidden till data is loaded in the individual panels are unhidden from panel level.\n\t\t\taContent.forEach((oContent) => {\n\t\t\t\tif (!this.tilesPanel && oContent.isA(tilesPanelName)) {\n\t\t\t\t\tthis.tilesPanel = oContent as TilesPanel;\n\t\t\t\t\tpanels.push(this.tilesPanel);\n\t\t\t\t}\n\t\t\t\tif (!this.cardsPanel && oContent.isA(cardsPanelName)) {\n\t\t\t\t\tthis.cardsPanel = oContent as CardsPanel;\n\t\t\t\t\tpanels.push(this.cardsPanel);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.handleHidePanel(this.tilesPanel);\n\t\t\tthis.handleHidePanel(this.cardsPanel);\n\t\n\t\t\t// Render individual panels\n\t\t\tpanels.forEach((panel) => {\n\t\t\t\tpanel.handleRemoveActions();\n\t\t\t\tpanel.attachHandleHidePanel(() => this.handleHidePanel(panel));\n\t\t\t\tpanel.attachHandleUnhidePanel(() => this.unhidePanelIfHidden(panel));\n\t\t\t\tvoid panel.renderPanel();\n\t\t\t});\n\t\t\tthis._isInitialRender = false;\n\t\t}\n\t}\n\n\t/**\n\t * handleHidePanel\n\t */\n\tpublic handleHidePanel(panel: BasePanel) {\n\t\tthis.removeContent(panel);\n\t\tconst panelCount = this.getContent()?.length;\n\t\tthis._addContainerHeader(this.getContent());\n\t\tif (panelCount === 0) {\n\t\t\tif (!this._errorPanel) {\n\t\t\t\tthis._errorPanel = new ErrorPanel(`${this.getId()}-errorPanel`, {\n\t\t\t\t\tmessageTitle: this._i18nBundle.getText(\"noAppsTitle\"),\n\t\t\t\t\tmessageDescription: this._i18nBundle.getText(\"noInsightsMsg\")\n\t\t\t\t});\n\t\t\t\tthis._errorPanel.getData();\n\t\t\t}\n\t\t\tthis.addAggregation(\"content\", this._errorPanel);\n\t\t} else if (panelCount === 1) {\n\t\t\tconst panel = this.getContent()[0];\n\t\t\tif(!panel.isA(errorPanelName)) {\n\t\t\t\t(panel as TilesPanel | CardsPanel)?.handleRemoveActions();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _addContainerHeader(panels: BasePanel[]) {\n\t\tthis.setProperty(\"title\", this._i18nBundle?.getText(\"insights\"));\n\t\tthis.setProperty(\"enableSettings\", true);\n\t\tconst menuItems: MenuItem[] = [];\n\t\tif (panels.length === 0 || panels[0]?.isA(errorPanelName)) {\n\t\t\tthis._visiblePanels = [];\n\t\t\tmenuItems.push(...this._handleNoPanelMenuItems());\n\t\t} else if (panels.length === 1) {\n\t\t\tif (panels[0].isA(tilesPanelName)) {\n\t\t\t\tthis._visiblePanels = [tilesPanelName];\n\t\t\t\tthis.setProperty(\"title\", `${this._i18nBundle?.getText(\"insights\")} (${this.tilesCount || 0})`);\n\t\t\t\tmenuItems.push(...this._handleTilesPanelMenuItems());\n\t\t\t}\n\t\t\tif (panels[0].isA(cardsPanelName)) {\n\t\t\t\tthis._visiblePanels = [cardsPanelName];\n\t\t\t\tthis.setProperty(\"title\", `${this._i18nBundle?.getText(\"insights\")} (${this.cardsCount || 0})`);\n\t\t\t\tmenuItems.push(...this._handleCardsPanelMenuItems());\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Add Insights Settings Menu Item\n\t\tconst insightsSettingMenu = (this.getAggregation(\"menuItems\") as MenuItem[] || [])?.find(menu => menu.getId() === `${this.getId()}-settings`);\n\t\tif(insightsSettingMenu) {\n\t\t\tmenuItems.push(insightsSettingMenu);\n\t\t}\n\n\t\t// Remove Existing Aggregations\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t\tthis.removeAllAggregation(\"actionButtons\");\n\n\t\t// Add Tiles Action Buttons to Container Action Buttons\n\t\tthis.tilesPanel.actionButtons.forEach((actionButton) => this.addAggregation(\"actionButtons\", actionButton));\n\t\tmenuItems.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t}\n\n\tprivate _removeContainerHeader() {\n\t\tthis.setProperty(\"title\", \"\");\n\t\tthis.setProperty(\"enableSettings\", false);\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t\tthis.removeAllAggregation(\"actionButtons\");\n\t\tthis.getContent().forEach((panel) => (panel as TilesPanel | CardsPanel).handleAddActions());\n\t}\n\n\tprivate _handleNoPanelMenuItems() {\n\t\t// In case of No Panels, Except Refresh all menu itmes should be shown\n\t\tconst menuItems: MenuItem[] = [];\n\t\tthis.tilesPanel.menuItems.forEach((menuItem) => {\n\t\t\tif (menuItem.getId() !== tilesMenuItems.REFRESH.valueOf()) {\n\t\t\t\tmenuItems.push(menuItem);\n\t\t\t}\n\t\t});\n\t\tconst cardsPanelId = this.cardsPanel.getId();\n\t\tthis.cardsPanel.menuItems.forEach((menuItem) => {\n\t\t\tif (menuItem.getId() !== `${cardsPanelId}-${cardsMenuItems.REFRESH.valueOf()}`) {\n\t\t\t\tmenuItems.push(menuItem);\n\t\t\t}\n\t\t});\n\t\treturn menuItems;\n\t}\n\n\tprivate _handleTilesPanelMenuItems() {\n\t\t// In case of TilesPanel visible, Except CardsPanel Refresh all menu itmes should be shown\n\t\tconst menuItems: MenuItem[] = [];\n\t\tthis.tilesPanel.menuItems.forEach((menuItem) => menuItems.push(menuItem));\n\t\tconst cardsPanelId = this.cardsPanel.getId();\n\t\tthis.cardsPanel.menuItems.forEach((menuItem) => {\n\t\t\tif (menuItem.getId() !== `${cardsPanelId}-${cardsMenuItems.REFRESH.valueOf()}`) {\n\t\t\t\tmenuItems.push(menuItem);\n\t\t\t}\n\t\t});\n\t\treturn menuItems;\n\t}\n\n\tprivate _handleCardsPanelMenuItems() {\n\t\t// In case of CardsPanel visible, Except TilesPanel Refresh all menu itmes should be shown and CardsPanel refresh should be shown at the top.\n\t\tconst menuItems: MenuItem[] = [];\n\t\tthis.tilesPanel.menuItems.forEach((menuItem) => {\n\t\t\tif (menuItem.getId() !== tilesMenuItems.REFRESH.valueOf()) {\n\t\t\t\tmenuItems.push(menuItem);\n\t\t\t}\n\t\t});\n\t\tconst cardsPanelId = this.cardsPanel.getId();\n\t\tthis.cardsPanel.menuItems.forEach((menuItem) => {\n\t\t\tif (menuItem.getId() === `${cardsPanelId}-${cardsMenuItems.REFRESH.valueOf()}`) {\n\t\t\t\tmenuItems.unshift(menuItem);\n\t\t\t} else {\n\t\t\t\tmenuItems.push(menuItem);\n\t\t\t}\n\t\t});\n\t\treturn menuItems;\n\t}\n\n\tpublic updatePanelsItemCount(itemCount: number, panelName: string) {\n\t\tif (panelName === tilesPanelName) {\n\t\t\tthis.tilesCount = itemCount;\n\t\t} else if (panelName === cardsPanelName) {\n\t\t\tthis.cardsCount = itemCount;\n\t\t}\n\t\t// Container Title Will be displayed only in case of only one panel is present\n\t\tif (this.getContent().length === 1) {\n\t\t\tthis.setProperty(\"title\", `${this._i18nBundle?.getText(\"insights\")} (${itemCount || 0})`);\n\t\t}\n\t}\n\n\tpublic unhidePanelIfHidden(panel: TilesPanel | CardsPanel) {\n\t\tthis.removeContent(this._errorPanel);\n\t\tif (panel.isA(tilesPanelName) && !this._visiblePanels.includes(tilesPanelName)) {\n\t\t\tthis._visiblePanels.push(tilesPanelName);\n\t\t\tif (this._visiblePanels.includes(cardsPanelName)) {\n\t\t\t\tthis.removeContent(this.cardsPanel);\n\t\t\t\tthis.addContent(this.tilesPanel);\n\t\t\t\tthis.addContent(this.cardsPanel);\n\t\t\t} else {\n\t\t\t\tthis.addContent(this.tilesPanel);\n\t\t\t}\n\t\t\tconst panels = this.getContent();\n\t\t\tif (panels.length > 1) {\n\t\t\t\tthis._removeContainerHeader();\n\t\t\t} else {\n\t\t\t\tthis._addContainerHeader(panels);\n\t\t\t}\n\t\t}\n\n\t\tif (panel.isA(cardsPanelName) && !this._visiblePanels.includes(cardsPanelName)) {\n\t\t\tthis._visiblePanels.push(cardsPanelName);\n\t\t\tthis.addContent(this.cardsPanel);\n\t\t\tconst panels = this.getContent();\n\t\t\tif (panels.length === 2) {\n\t\t\t\tthis._removeContainerHeader();\n\t\t\t} else {\n\t\t\t\tthis._addContainerHeader(panels);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adjusts the layout of the container.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic adjustLayout() {\n\t\t//hide actions if the device is a phone\n\t\tthis.toggleActionButtons(this.getDeviceType() !== DeviceType.Mobile);\n\n\t\t//adjust layout of all panels\n\t\t(this.getContent() as (TilesPanel | CardsPanel)[]).forEach((panel) => panel._adjustLayout?.());\n\t}\n}\n"],"mappings":"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","ignoreList":[]}