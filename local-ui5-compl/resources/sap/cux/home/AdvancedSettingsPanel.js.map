{"version":3,"file":"AdvancedSettingsPanel.js","names":["sap","ui","define","Log","CardHelper","Button","CheckBox","CustomListItem","HBox","IconTabBar","IconTabFilter","Input","Label","sap_m_library","List","MessageStrip","MessageToast","ObjectStatus","OverflowToolbar","Panel","Text","Title","Toolbar","ToolbarSpacer","VBox","Element","EventBus","sap_ui_core_library","SimpleForm","JSONModel","FileUploader","Container","__BaseSettingsPanel","__AppManager","___utils_Constants","___utils_FESRUtil","__HttpHelper","__PageManager","__PersonalisationUtils","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","FlexAlignItems","ToolbarStyle","ValueState","BaseSettingsPanel","AppManager","FEATURE_TOGGLES","SETTINGS_PANELS_KEYS","addFESRSemanticStepName","FESR_EVENTS","HttpHelper","PageManager","PersonalisationUtils","UShellPersonalizer","ImportExportType","BASE_URL","REPO_BASE_URL","EXPORT_API","MYINSIGHT_SECTION_ID","AdvancedSettingsPanel","extend","metadata","events","sectionsImported","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","ADVANCED","_i18nBundle","getText","oEventBus","getInstance","oAppManagerInstance","oSectionsImported","oUserPersonalization","export","sections","fileName","sectionsSelected","error","import","selectedTab","showNoImport","oControlModel","addAggregation","getContent","addInnerContent","attachPanelNavigated","_this","oPageManagerInstance","getPersContainerId","_getPanel","getOwnerComponent","subscribe","channelId","eventId","data","customData","status","updateImportStatus","oDetailPage","getElementById","getProperty","_setRecommendationSettingsPanel","Promise","resolve","loadUserPersonalizationData","oImportBtn","setEnabled","enableDisableActions","setImportExportList","oExportMessage","setText","errorMessage","String","setType","errorType","oFileNameInput","setValue","oImportMessage","reject","_setImportExportList","oExportList","setExportSectionList","_importExportPanel","addContent","invalidate","oImportList","setImportSectionList","_enableDisableActions","sType","oImportExportTab","setSelectedKey","setVisible","IMPORT","oExportBtn","EXPORT","length","setExportImportValues","_setExportImportValues","_getContent","oContentVBox","getId","items","text","addStyleClass","_getImportExportPanel","headerToolbar","style","Clear","content","_getImportButton","_getExportButton","headerText","expanded","expandable","id","type","press","onImportPress","visible","PRESS","onExportPress","bind","_addInnerContent","backgroundDesign","selectedKey","oSelectedTab","select","onImportExportTabSelect","exportTab","key","SELECT","showIcon","exportText","fileInputContainer","alignItems","filenameLabel","labelFor","required","showColon","ariaLabelledBy","width","liveChange","onFileNameInputChange","value","addItem","importTab","importText","importSimpleForm","editable","layout","labelSpanS","labelSpanM","fileUploader","tooltip","fileType","change","oEvent","onFileImport","maximumFileSize","sameFilenameAllowed","buttonText","classicImportTab","classicText","resetImportAppsNow","onResetImportApps","_setExportSectionList","exportSectionsList","growingThreshold","includeItemInSelection","setHeaderToolbar","setModel","bindItems","path","template","onSectionsSelectionChange","selected","enabled","_setImportSectionList","importSectionsList","justifyContent","icon","state","_onSectionsSelectionChange","isImport","allSections","getItems","isSelected","innerCheckbox","isSectionSelected","some","oSection","getAggregation","getSelected","innerHbox","_onImportPress","_this2","attachEvent","setBusy","handleUserPersonalizationError","oExportData","_temp","importSections","aSelectedSections","bShowError","Error","oErr","_importSections","oImportData","sectionImportChain","aPromise","oSelectedSections","push","importApps","importTiles","importFavPages","reduce","chain","current","importCards","all","catch","oError","_importApps","apps","publish","_importTiles","tiles","_importFavPages","favouritePages","_importCards","cards","_updateImportStatus","sSectionTitle","errorState","sSectionId","find","oSec","title","undefined","Success","None","sectionTitles","Object","keys","imported","every","sTitle","fireEvent","resetImportModel","_resetImportModel","onOpen","getDeltaSectionViz","_getDeltaSectionViz","aImportedSections","_this3","_getSections","favSections","forEach","oImportedSection","aDelta","visualizations","filter","oImportViz","oViz","isBookmark","targetURL","vizId","getDeltaAuthSectionViz","_getDeltaAuthSectionViz","aDeltaSections","filterAuthSectionViz","_filterAuthSectionViz","aSections","_getCatalogApps","getServiceAsync","SearchableContent","getApps","includeAppsWithoutVisualizations","_filterAuthViz","aAppCatalog","aViz","aSectionViz","appCatalog","oAppCatalog","oSectionViz","oCatalogViz","target","action","semanticObject","displayFormatHint","map","filterAuthFavPages","_filterAuthFavPages","aFavPages","_exit","_this4","_temp3","_result","_temp2","fetchAllAvailablePages","aAvailablePages","oimportedPage","oAvailabePage","pageId","spaceId","_await$_this4$oPageMa","filterAuthCards","_filterAuthCards","aCards","_exit2","_temp5","_result2","_getParentApp","aAvailableApps","oCard","oApp","resolutionResult","applicationDependencies","name","parentAppId","_isNavigationSupported","oService","oParentApp","isNavigationSupported","aResponses","supported","_temp4","aServices","clientSideTargetResolution","Navigation","_oAdapter","_aInbounds","promise","aAuthCards","bIsNavigationSupported","_await$Promise$all$th","_onFileImport","files","getParameter","oFile","readFileContent","oFileContent","oEncodedFileContent","window","btoa","encodeURIComponent","replace","match","p1","fromCharCode","parseInt","Post","fileContent","oResponse","oImportDataString","JSON","parse","host","location","filterAuthorizedImportData","finally","_filterAuthorizedImportData","getInsightCards","aResponse","aAuthSections","aAuthFavPages","iInsightCardsCount","iTotalCardCount","Number","getImportedSections","getSelectedSections","_readFileContent","FileReader","reader","onload","event","blob","readAsText","_getPersonalizationData","_this5","_temp7","oPersonalizerInstance","read","_this5$oPersonalizerI","persData","_temp6","_UShellPersonalizer$g","_loadUserPersonalizationData","_this6","fetchInsightApps","_ref","insightTiles","insightModel","favApps","insightCards","descriptorContent","personalization","aExportSections","refresh","_getSelectedSections","_isSectionSelected","sectionId","section","sec","_getImportedSections","oData","getDeltaFavPages","isAppViz","oSections","_getDeltaFavPages","aImportedFavPages","oImportedPage","oFavPage","_getInsightCards","_this7","_getServiceAsync","cardHelperInstance","_getUserAllCardModel","oUserVisibleCardModel","aVisibleCards","visibility","_onExportPress","oExportFileName","oExportFileContent","getExportFileContent","require","File","save","stringify","show","message","_getExportFileContent","exportData","exportSections","oPersonalization","createdDate","Date","groupInfo","favoriteApps","_handleUserPersonalizationError","sErrorMsg","sErrorType","sDefaultErrorMsg","_onImportExportTabSelect","_onFileNameInputChange","sInputValue","trim","oInput","getSource","sValueState","sValueStateText","setValueState","setValueStateText","_onResetImportApps","_getRecommendationSettingsPanel","_this8","_recommendationSettingsPanel","panelId","showRecommendation","onRecommendationSettingChange","Center","_this9","isFeatureEnabled","RECOMMENDATION","isRecommendationEnabled","_temp9","_temp8","recommendationSettingsPanel","_onRecommendationSettingChange","_this10","oPersData","write"],"sources":["AdvancedSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport CardHelper from \"sap/insights/CardHelper\";\nimport Button from \"sap/m/Button\";\nimport CheckBox, { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox from \"sap/m/HBox\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport Input, { Input$LiveChangeEvent } from \"sap/m/Input\";\nimport Label from \"sap/m/Label\";\nimport { FlexAlignItems, ToolbarStyle } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport Page from \"sap/m/Page\";\nimport Panel from \"sap/m/Panel\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport File from \"sap/ui/core/util/File\";\nimport SimpleForm from \"sap/ui/layout/form/SimpleForm\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport FileUploader, { FileUploader$ChangeEvent } from \"sap/ui/unified/FileUploader\";\nimport Container from \"sap/ushell/Container\";\nimport ClientSideTargetResolution from \"sap/ushell/services/ClientSideTargetResolution\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { IAppInbounds, IAppPersonalization, ISection, ISectionAndVisualization, IVisualization } from \"./interface/AppsInterface\";\nimport { ICard, ICardHelper, ICardHelperInstance, ICardManifest } from \"./interface/CardsInterface\";\nimport { IPage } from \"./interface/PageSpaceInterface\";\nimport AppManager from \"./utils/AppManager\";\nimport { FEATURE_TOGGLES, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport HttpHelper from \"./utils/HttpHelper\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UShellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\nexport enum ImportExportType {\n\tIMPORT = \"import\",\n\tEXPORT = \"export\"\n}\n\ninterface IExportData {\n\tapps?: ISection[];\n\ttiles?: ISectionAndVisualization[];\n\tfavouritePages: ISectionAndVisualization[] | IPage[];\n\tcards?: ICardManifest[];\n\tpersonalization?: IPersonalizationData;\n}\ninterface IExportSections {\n\ttitle: string;\n\tselected: boolean | undefined;\n\tenabled: boolean | undefined;\n\tstatus?: ValueState;\n}\ntype SectionOrVisualization = ISectionAndVisualization[] | IVisualization[];\ninterface IExportImportFile {\n\thost?: string;\n\tcreatedDate?: Date;\n\tsections?: SectionOrVisualization | [];\n\tgroupInfo?: IAppPersonalization[] | IVisualization[] | [];\n\ttiles?: SectionOrVisualization;\n\tcards?: ICardManifest[];\n\tfavouritePages: IPage[] | ISectionAndVisualization[];\n\tapps?: ISection[] | [];\n}\ninterface ApiResponse {\n\tvalue: { fileContent: string }[];\n\t// Define other properties if present in ApiResponse\n}\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\";\nconst REPO_BASE_URL = BASE_URL + \"insights_cards_repo_srv/0001/\";\nconst EXPORT_API = REPO_BASE_URL + \"INSIGHTS_CARDS/com.sap.gateway.srvd.ui2.insights_cards_repo_srv.v0001.importExport?\";\nconst MYINSIGHT_SECTION_ID = \"AZHJGRIT78TG7Y65RF6EPFJ9U\";\n\n/**\n *\n * Class for My Home Advanced Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.AdvancedSettingsPanel\n */\nexport default class AdvancedSettingsPanel extends BaseSettingsPanel {\n\tprivate oControlModel!: JSONModel;\n\tprivate oImportExportTab!: IconTabBar;\n\tprivate oFileNameInput!: Input;\n\tprivate oSelectedTab!: string | undefined;\n\tprivate oExportList!: List;\n\tprivate oImportList!: List;\n\tprivate oImportBtn!: Button;\n\tprivate oExportBtn!: Button;\n\tprivate oEventBus!: EventBus;\n\tprivate oAppManagerInstance!: AppManager;\n\tprivate oPageManagerInstance!: PageManager;\n\tprivate oPersonalizerInstance!: UShellPersonalizer;\n\tprivate cardHelperInstance!: ICardHelperInstance;\n\tprivate persData!: IPersonalizationData;\n\tprivate oContentVBox!: VBox;\n\tprivate oExportMessage!: MessageStrip;\n\tprivate oImportMessage!: MessageStrip;\n\tprivate oDetailPage!: Page;\n\tprivate oSectionsImported!: {\n\t\t[key: string]: boolean;\n\t};\n\tprivate oUserPersonalization!: {\n\t\texport: {\n\t\t\tdata?: IExportData;\n\t\t\tsections?: IExportSections[];\n\t\t\tfileName?: string;\n\t\t\tsectionsSelected?: boolean;\n\t\t\terror?: boolean;\n\t\t\terrorMessage?: string;\n\t\t\terrorType?: string;\n\t\t};\n\t\timport: {\n\t\t\tdata?: IExportData | IExportImportFile;\n\t\t\tsections?: IExportSections[];\n\t\t\tsectionsSelected?: boolean;\n\t\t\terror?: boolean;\n\t\t\terrorMessage?: string;\n\t\t\terrorType?: MessageType;\n\t\t};\n\t\tselectedTab: string;\n\t\tshowNoImport: boolean;\n\t};\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tevents: {\n\t\t\tsectionsImported: {}\n\t\t}\n\t};\n\tprivate _recommendationSettingsPanel!: Panel;\n\tprivate _importExportPanel!: Panel;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.ADVANCED);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"advancedSettings\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://grid\");\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\tthis.oAppManagerInstance = AppManager.getInstance();\n\t\tthis.oSectionsImported = {};\n\n\t\tthis.oUserPersonalization = {\n\t\t\texport: {\n\t\t\t\tsections: [],\n\t\t\t\tfileName: \"MY_HOME\",\n\t\t\t\tsectionsSelected: false,\n\t\t\t\terror: false\n\t\t\t},\n\t\t\timport: {\n\t\t\t\tsections: [],\n\t\t\t\tsectionsSelected: false,\n\t\t\t\terror: false\n\t\t\t},\n\t\t\tselectedTab: \"export\",\n\t\t\tshowNoImport: false\n\t\t};\n\t\tthis.oControlModel = new JSONModel(this.oUserPersonalization);\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\tthis.addInnerContent();\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tvoid (async () => {\n\t\t\t\tif (!this.oPageManagerInstance) {\n\t\t\t\t\tthis.oPageManagerInstance = PageManager.getInstance(\n\t\t\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// subscribe to all import events for all sections\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"tilesImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"insightsTiles\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"appsImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"favApps\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"favPagesImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"pages\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"cardsImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"insightsCards\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\t//get the detailPage of advanced settingspanel\n\t\t\t\tthis.oDetailPage = Element.getElementById(this.getProperty(\"key\") + \"-detail-page\") as Page;\n\n\t\t\t\tvoid this._setRecommendationSettingsPanel();\n\n\t\t\t\t//load user personalization data\n\t\t\t\tawait this.loadUserPersonalizationData();\n\n\t\t\t\t//import button set enabled/disabled based on sections selected\n\t\t\t\tthis.oImportBtn.setEnabled(this.oUserPersonalization.import.sectionsSelected);\n\t\t\t\tthis.enableDisableActions(this.oUserPersonalization.selectedTab as ImportExportType);\n\n\t\t\t\t//set export and import list\n\t\t\t\tthis.setImportExportList();\n\t\t\t\tthis.oExportMessage.setText(\n\t\t\t\t\tthis.oUserPersonalization.export.errorMessage ? String(this.oUserPersonalization.export.errorMessage) : \"\"\n\t\t\t\t);\n\t\t\t\tthis.oExportMessage.setType(this.oUserPersonalization.export.errorType as MessageType);\n\t\t\t\tthis.oExportMessage.setProperty(\"visible\", this.oUserPersonalization.export.error, true);\n\t\t\t\tthis.oFileNameInput.setValue(String(this.oUserPersonalization.export.fileName));\n\n\t\t\t\tthis.oImportMessage.setText(\n\t\t\t\t\tthis.oUserPersonalization.import.errorMessage ? String(this.oUserPersonalization.import.errorMessage) : \"\"\n\t\t\t\t);\n\t\t\t\tthis.oImportMessage.setType(this.oUserPersonalization.import.errorType as MessageType);\n\t\t\t\tthis.oImportMessage.setProperty(\"visible\", this.oUserPersonalization.import.error, true);\n\t\t\t})();\n\t\t});\n\t}\n\n\tprivate setImportExportList(): void {\n\t\tif (!this.oExportList) {\n\t\t\tthis.oExportList = this.setExportSectionList();\n\t\t\tthis._importExportPanel.addContent(this.oExportList);\n\t\t} else {\n\t\t\tthis.oExportList.invalidate();\n\t\t}\n\t\tif (!this.oImportList) {\n\t\t\tthis.oImportList = this.setImportSectionList();\n\t\t\tthis._importExportPanel.addContent(this.oImportList);\n\t\t} else {\n\t\t\tthis.oImportList.invalidate();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sType selected tab type\n\t * Set import / export button enable property and selectedkey of importexport tab\n\t */\n\tprivate enableDisableActions(sType: ImportExportType): void {\n\t\tthis.oImportExportTab?.setSelectedKey(sType);\n\t\tthis.oImportBtn?.setVisible(sType === ImportExportType.IMPORT);\n\t\tthis.oExportBtn?.setVisible(sType === ImportExportType.EXPORT);\n\t\tif (this.oUserPersonalization.import.sectionsSelected && sType === ImportExportType.IMPORT) {\n\t\t\tthis.oImportBtn.setEnabled(true);\n\t\t} else {\n\t\t\tthis.oImportBtn.setEnabled(false);\n\t\t}\n\n\t\tif (\n\t\t\tsType === ImportExportType.EXPORT &&\n\t\t\tthis.oUserPersonalization.export.fileName &&\n\t\t\tthis.oUserPersonalization.export.sections?.length &&\n\t\t\tthis.oUserPersonalization.export.sectionsSelected\n\t\t) {\n\t\t\tthis.oExportBtn.setEnabled(true);\n\t\t} else {\n\t\t\tthis.oExportBtn.setEnabled(false);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sType selected tab type\n\t * Set import/ export message values\n\t */\n\tprivate setExportImportValues(sType: ImportExportType): void {\n\t\tif (sType === ImportExportType.EXPORT) {\n\t\t\tthis.oExportMessage.setText(\n\t\t\t\tthis.oUserPersonalization.export.errorMessage ? String(this.oUserPersonalization.export.errorMessage) : \"\"\n\t\t\t);\n\t\t\tthis.oExportMessage.setType(this.oUserPersonalization.export.errorType as MessageType);\n\t\t\tthis.oExportMessage.setProperty(\"visible\", this.oUserPersonalization.export.error, true);\n\t\t} else if (sType === ImportExportType.IMPORT) {\n\t\t\tthis.oImportMessage.setText(\n\t\t\t\tthis.oUserPersonalization.import.errorMessage ? String(this.oUserPersonalization.export.errorMessage) : \"\"\n\t\t\t);\n\t\t\tthis.oImportMessage.setType(this.oUserPersonalization.import.errorType as MessageType);\n\t\t\tthis.oImportMessage.setProperty(\"visible\", this.oUserPersonalization.import.error, true);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the outer content VBox for the Advanced Settings Panel.\n\t * @returns VBox\n\t */\n\tprivate getContent(): VBox {\n\t\tif (!this.oContentVBox) {\n\t\t\tthis.oContentVBox = new VBox(this.getId() + \"--idAdvancedVBox\", {\n\t\t\t\titems: [\n\t\t\t\t\tnew Text(this.getId() + \"--idPersonalizationSubheader\", {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"advancedSettingsSubheader\")\n\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginBegin sapUiSmallMarginTop\"),\n\n\t\t\t\t\tthis._getImportExportPanel()\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t\treturn this.oContentVBox;\n\t}\n\n\t/**\n\t * Returns the import/export panel.\n\t *\n\t * @private\n\t * @returns {Panel} The import/export panel.\n\t */\n\tprivate _getImportExportPanel() {\n\t\tif (!this._importExportPanel) {\n\t\t\tthis._importExportPanel = new Panel(`${this.getId()}-importExportPanel`, {\n\t\t\t\theaderToolbar: new OverflowToolbar(`${this.getId()}-importExportPanelToolbar`, {\n\t\t\t\t\tstyle: ToolbarStyle.Clear,\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew Text(`${this.getId()}-importExportPanelToolbarText`, {\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"importAndExportPanelHeader\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew ToolbarSpacer(`${this.getId()}-importExportPanelToolbarSpacer`),\n\t\t\t\t\t\tthis._getImportButton(),\n\t\t\t\t\t\tthis._getExportButton()\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\theaderText: this._i18nBundle.getText(\"importAndExportPanelHeader\"),\n\t\t\t\texpanded: true,\n\t\t\t\texpandable: true,\n\t\t\t\tcontent: []\n\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\t}\n\n\t\treturn this._importExportPanel;\n\t}\n\n\t/**\n\t * Returns the import button.\n\t *\n\t * @private\n\t * @returns {Button} import button.\n\t */\n\tprivate _getImportButton() {\n\t\tif (!this.oImportBtn) {\n\t\t\tthis.oImportBtn = new Button({\n\t\t\t\tid: `${this.getId()}-importBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"import\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this.onImportPress();\n\t\t\t\t},\n\t\t\t\tvisible: false\n\t\t\t});\n\t\t\taddFESRSemanticStepName(this._getExportButton(), FESR_EVENTS.PRESS, \"importBtn\");\n\t\t}\n\t\treturn this.oImportBtn;\n\t}\n\n\t/**\n\t * Returns the export button.\n\t *\n\t * @private\n\t * @returns {Button} export button.\n\t */\n\tprivate _getExportButton() {\n\t\tif (!this.oExportBtn) {\n\t\t\tthis.oExportBtn = new Button({\n\t\t\t\tid: `${this.getId()}-exportBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"export\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: this.onExportPress.bind(this),\n\t\t\t\tvisible: true\n\t\t\t});\n\t\t\taddFESRSemanticStepName(this.oExportBtn, FESR_EVENTS.PRESS, \"exportBtn\");\n\t\t}\n\t\treturn this.oExportBtn;\n\t}\n\n\t/**\n\t * Returns the inner content for the Advanced Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the Advanced Settings Panel content.\n\t */\n\tprivate addInnerContent(): void {\n\t\t//if not already initialised, create the import/export tab and inner controls\n\t\tif (!this.oImportExportTab) {\n\t\t\tthis.oImportExportTab = new IconTabBar(this.getId() + \"--idImportExportTab\", {\n\t\t\t\texpandable: false,\n\t\t\t\tbackgroundDesign: \"Transparent\",\n\t\t\t\tselectedKey: this.oSelectedTab ? this.oSelectedTab : \"export\",\n\t\t\t\tselect: this.onImportExportTabSelect.bind(this)\n\t\t\t});\n\n\t\t\tconst exportTab = new IconTabFilter(this.getId() + \"--idExportTab\", {\n\t\t\t\tkey: \"export\",\n\t\t\t\ttext: this._i18nBundle.getText(\"exportFile\")\n\t\t\t});\n\t\t\t// Add FESR for export tab\n\t\t\taddFESRSemanticStepName(exportTab, FESR_EVENTS.SELECT, \"exportTab\");\n\n\t\t\t//export tab content\n\t\t\tthis.oExportMessage = new MessageStrip(this.getId() + \"--idExportMessageStrip\", {\n\t\t\t\tshowIcon: true,\n\t\t\t\tvisible: false\n\t\t\t}).addStyleClass(\"sapUiNoMarginBegin sapUiTinyMarginBottom\");\n\t\t\tconst exportText = new Text(this.getId() + \"--idExportText\", { text: this._i18nBundle.getText(\"exportText\") }).addStyleClass(\n\t\t\t\t\"advancePadding\"\n\t\t\t);\n\t\t\tconst fileInputContainer = new HBox(this.getId() + \"--idFileInputContainer\", {\n\t\t\t\talignItems: \"Center\"\n\t\t\t}).addStyleClass(\"sapUiSmallMargin\");\n\t\t\tconst filenameLabel = new Label(this.getId() + \"--idFilenameLabel\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"exportFileNameLabel\"),\n\t\t\t\tlabelFor: \"idTitleFilenameInput\",\n\t\t\t\trequired: true,\n\t\t\t\tshowColon: true\n\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\");\n\t\t\tthis.oFileNameInput = new Input(this.getId() + \"--idFileNameInput\", {\n\t\t\t\tariaLabelledBy: [\"idExportText\", \"idFilenameLabel\"],\n\t\t\t\trequired: true,\n\t\t\t\twidth: \"13rem\",\n\t\t\t\tliveChange: this.onFileNameInputChange.bind(this),\n\t\t\t\tvalue: \"\"\n\t\t\t});\n\n\t\t\tfileInputContainer.addItem(filenameLabel);\n\t\t\tfileInputContainer.addItem(this.oFileNameInput);\n\n\t\t\texportTab.addContent(this.oExportMessage);\n\t\t\texportTab.addContent(exportText);\n\t\t\texportTab.addContent(fileInputContainer);\n\n\t\t\t//import tab\n\t\t\tconst importTab = new IconTabFilter(this.getId() + \"--idImportTab\", {\n\t\t\t\tkey: \"import\",\n\t\t\t\ttext: this._i18nBundle.getText(\"importFile\")\n\t\t\t});\n\t\t\t// Add FESR for import tab\n\t\t\taddFESRSemanticStepName(importTab, FESR_EVENTS.SELECT, \"importTab\");\n\n\t\t\t//import tab content\n\t\t\tthis.oImportMessage = new MessageStrip(this.getId() + \"--idImportMessageStrip\", {\n\t\t\t\ttext: \"{advsettings>/import/errorMessage}\",\n\t\t\t\ttype: \"{advsettings>/import/errorType}\",\n\t\t\t\tshowIcon: true,\n\t\t\t\tvisible: false\n\t\t\t}).addStyleClass(\"sapUiNoMarginBegin sapUiTinyMarginBottom\");\n\t\t\tconst importText = new Text(this.getId() + \"--idImportText\", { text: this._i18nBundle.getText(\"importText\") }).addStyleClass(\n\t\t\t\t\"advancePadding\"\n\t\t\t);\n\t\t\tconst importSimpleForm = new SimpleForm(this.getId() + \"--idImportSimpleForm\", {\n\t\t\t\teditable: true,\n\t\t\t\tlayout: \"ResponsiveGridLayout\",\n\t\t\t\tlabelSpanS: 4,\n\t\t\t\tlabelSpanM: 4\n\t\t\t});\n\t\t\tconst fileUploader = new FileUploader(this.getId() + \"--idImportFileUploader\", {\n\t\t\t\ttooltip: this._i18nBundle.getText(\"uploadImportFile\"),\n\t\t\t\tfileType: [\"txt\"],\n\t\t\t\tchange: (oEvent: FileUploader$ChangeEvent) => {\n\t\t\t\t\tvoid this.onFileImport(oEvent);\n\t\t\t\t},\n\t\t\t\tmaximumFileSize: 25,\n\t\t\t\tsameFilenameAllowed: true,\n\t\t\t\twidth: \"80%\",\n\t\t\t\tariaLabelledBy: [\"idImportText\"],\n\t\t\t\tbuttonText: this._i18nBundle.getText(\"importFileUploaderButton\")\n\t\t\t});\n\t\t\timportSimpleForm.addContent(fileUploader);\n\t\t\timportTab.addContent(this.oImportMessage);\n\t\t\timportTab.addContent(importText);\n\t\t\timportTab.addContent(importSimpleForm);\n\n\t\t\tconst classicImportTab = new IconTabFilter(this.getId() + \"--idClassicImportTab\", {\n\t\t\t\tkey: \"classicImport\",\n\t\t\t\ttext: this._i18nBundle.getText(\"classicImport\")\n\t\t\t});\n\t\t\t// Add FESR for classic import tab\n\t\t\taddFESRSemanticStepName(classicImportTab, FESR_EVENTS.SELECT, \"classicImportTab\");\n\t\t\tconst classicText = new Text(this.getId() + \"--idClassicImportText\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"classicImportText\")\n\t\t\t}).addStyleClass(\"sapUiSmallMarginBottom advancePadding\");\n\t\t\tconst resetImportAppsNow = new Button(this.getId() + \"--resetImportAppsNow\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"resetButton\"),\n\t\t\t\tpress: this.onResetImportApps.bind(this)\n\t\t\t}).addStyleClass(\"resetButtonPadding\");\n\t\t\taddFESRSemanticStepName(resetImportAppsNow, FESR_EVENTS.PRESS, \"resetImportApps\");\n\t\t\tclassicImportTab.addContent(classicText);\n\t\t\tclassicImportTab.addContent(resetImportAppsNow);\n\n\t\t\tthis.oImportExportTab.addItem(exportTab);\n\t\t\tthis.oImportExportTab.addItem(importTab);\n\t\t\tthis.oImportExportTab.addItem(classicImportTab);\n\t\t\tthis._importExportPanel.addContent(this.oImportExportTab);\n\t\t\tthis._importExportPanel.addContent(this.setExportSectionList());\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {List} export section list\n\t */\n\tprivate setExportSectionList(): List {\n\t\tconst exportSectionsList = new List(this.getId() + \"--idExportSectionsList\", {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\tgrowingThreshold: 50,\n\t\t\tincludeItemInSelection: true,\n\t\t\tvisible: \"{= ${advsettings>/selectedTab} === 'export'}\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\n\t\tconst headerToolbar = new Toolbar(this.getId() + \"--idExportSectionsListToolbar\", {\n\t\t\tcontent: [\n\t\t\t\tnew Title(this.getId() + \"--idExportSectionsListHeaderText\", {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"sectionExportListHeader\")\n\t\t\t\t}).addStyleClass(\"sectionTitle\")\n\t\t\t]\n\t\t});\n\t\texportSectionsList.setHeaderToolbar(headerToolbar);\n\t\t//set model for the list and bind items to path advsettings>/export/sections\n\t\texportSectionsList.setModel(this.oControlModel, \"advsettings\");\n\n\t\texportSectionsList.bindItems({\n\t\t\tpath: \"advsettings>/export/sections\",\n\t\t\ttemplate: new CustomListItem({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew CheckBox(this.getId() + \"--idExportListItemCheck\", {\n\t\t\t\t\t\t\t\tselect: this.onSectionsSelectionChange.bind(this, false),\n\t\t\t\t\t\t\t\tselected: \"{advsettings>selected}\",\n\t\t\t\t\t\t\t\tenabled: \"{advsettings>enabled}\"\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text(this.getId() + \"--idExportListItemText\", { text: \"{advsettings>title}\" }).addStyleClass(\n\t\t\t\t\t\t\t\t\"sapUiTinyMarginTop\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t\tthis.oExportList = exportSectionsList;\n\t\treturn exportSectionsList;\n\t}\n\n\t/**\n\t *\n\t * @returns {List} import section list\n\t */\n\tprivate setImportSectionList(): List {\n\t\tconst importSectionsList = new List(this.getId() + \"--idImportSectionsList\", {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\tgrowingThreshold: 50,\n\t\t\tincludeItemInSelection: true,\n\t\t\tvisible:\n\t\t\t\t\"{= ${advsettings>/selectedTab} === 'import' && (${advsettings>/import/sections/length} > 0 || ${advsettings>/showNoImport})}\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\n\t\tconst headerToolbar = new Toolbar(this.getId() + \"--idImportSectionsListToolbar\", {\n\t\t\tcontent: [\n\t\t\t\tnew Title(this.getId() + \"--idImportSectionsListHeaderText\", {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"sectionImportListHeader\")\n\t\t\t\t}).addStyleClass(\"sectionTitle\")\n\t\t\t]\n\t\t});\n\t\timportSectionsList.setHeaderToolbar(headerToolbar);\n\t\t//set model for the list and bind items to path advsettings>/import/sections\n\t\timportSectionsList.setModel(this.oControlModel, \"advsettings\");\n\t\timportSectionsList.bindItems({\n\t\t\tpath: \"advsettings>/import/sections\",\n\t\t\ttemplate: new CustomListItem({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew CheckBox(this.getId() + \"--idImportListItemCheck\", {\n\t\t\t\t\t\t\t\t\t\tselect: this.onSectionsSelectionChange.bind(this, true),\n\t\t\t\t\t\t\t\t\t\tselected: \"{advsettings>selected}\",\n\t\t\t\t\t\t\t\t\t\tenabled: \"{advsettings>enabled}\"\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew Text(this.getId() + \"--idImportListItemText\", { text: \"{advsettings>title}\" }).addStyleClass(\n\t\t\t\t\t\t\t\t\t\t\"sapUiTinyMarginTop\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew ObjectStatus(this.getId() + \"--idImportItemStatus\", {\n\t\t\t\t\t\t\t\t\t\ticon: \"{= ${advsettings>status} === 'Success' ? 'sap-icon://status-positive' : 'sap-icon://status-negative' }\",\n\t\t\t\t\t\t\t\t\t\tstate: \"{advsettings>status}\",\n\t\t\t\t\t\t\t\t\t\tvisible: \"{= ${advsettings>status} !== 'None'}\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\n\t\treturn importSectionsList;\n\t}\n\n\t/**\n\t * Selection change event handler for export and import sections\n\t * @param isImport boolean value to check if import or export tab is selected\n\t */\n\tprivate onSectionsSelectionChange(isImport: boolean): void {\n\t\tconst allSections = isImport ? this.oImportList.getItems() : this.oExportList.getItems();\n\t\tlet isSelected = false;\n\t\tlet content, innerCheckbox;\n\t\tconst isSectionSelected = allSections.some(function (oSection) {\n\t\t\tif (!isImport) {\n\t\t\t\tcontent = oSection.getAggregation(\"content\") as Control[];\n\t\t\t\tinnerCheckbox = (content[0] as HBox).getItems()[0] as CheckBox;\n\t\t\t\tisSelected = innerCheckbox.getSelected();\n\t\t\t} else {\n\t\t\t\tcontent = oSection.getAggregation(\"content\") as Control[];\n\t\t\t\tconst innerHbox = (content[0] as HBox).getItems()[0] as HBox;\n\t\t\t\tinnerCheckbox = innerHbox.getItems()[0] as CheckBox;\n\t\t\t\tisSelected = innerCheckbox.getSelected();\n\t\t\t}\n\t\t\treturn isSelected;\n\t\t});\n\t\tthis.oControlModel.setProperty((isImport ? \"/import\" : \"/export\") + \"/sectionsSelected\", isSectionSelected);\n\t\tthis.enableDisableActions((isImport ? \"import\" : \"export\") as ImportExportType);\n\t}\n\n\t/**\n\t * Handler for import button press\n\t *\n\t */\n\tprivate async onImportPress(): Promise<void> {\n\t\tthis.attachEvent(\"sectionsImported\", () => {\n\t\t\tthis.oDetailPage.setBusy(false);\n\t\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", false);\n\t\t});\n\t\tthis.oImportBtn.setEnabled(false);\n\t\tthis.oDetailPage.setBusy(true);\n\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, false, \"\", \"\");\n\t\tconst oExportData = this.oUserPersonalization.import.data;\n\t\ttry {\n\t\t\tconst aSelectedSections = await this.importSections(oExportData);\n\t\t\tconst bShowError: boolean = aSelectedSections.some((oSection) => {\n\t\t\t\treturn oSection.status === ValueState.Error;\n\t\t\t});\n\t\t\tif (bShowError) {\n\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\ttrue,\n\t\t\t\t\tString(this._i18nBundle.getText(\"userPersonalizationImportError\")),\n\t\t\t\t\t\"Warning\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.oControlModel.setProperty(\"/import/sections\", aSelectedSections);\n\t\t} catch (oErr: unknown) {\n\t\t\tLog.error(\"importpress\", String(oErr));\n\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\tImportExportType.IMPORT,\n\t\t\t\ttrue,\n\t\t\t\tString(this._i18nBundle.getText(\"userPersonalizationImportError\")),\n\t\t\t\t\"Error\"\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes import of apps,tiles,pages and cards data\n\t * @param oImportData import data\n\t * @returns Promise<IExportSections[]>\n\t */\n\tprivate importSections(oImportData?: IExportData | IExportImportFile): Promise<IExportSections[] | []> {\n\t\tconst sectionImportChain: (() => Promise<void>)[] = [];\n\t\tconst aPromise: Promise<void>[] = [];\n\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\n\t\tsectionImportChain.push(() => this.importApps(oImportData));\n\t\tsectionImportChain.push(() => this.importTiles(oImportData));\n\t\tsectionImportChain.push(() => this.importFavPages(oImportData));\n\n\t\t// Execute apps, tiles, and pages sequentially\n\t\taPromise.push(\n\t\t\tsectionImportChain.reduce((chain, current) => {\n\t\t\t\treturn chain.then(() => current());\n\t\t\t}, Promise.resolve())\n\t\t);\n\n\t\taPromise.push(this.importCards(oImportData));\n\n\t\treturn Promise.all(aPromise)\n\t\t\t.then(() => {\n\t\t\t\treturn oSelectedSections;\n\t\t\t})\n\t\t\t.catch((oError: Error) => {\n\t\t\t\tLog.error(\"import failed\", String(oError));\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate importApps(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.apps &&\n\t\t\t\toImportData?.apps.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"favApps\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"favApps\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"appsImport\", oImportData.apps);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no apps / apps selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"favApps\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"favApps\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importTiles(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.tiles &&\n\t\t\t\toImportData.tiles.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"insightsTiles\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsTiles\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"tilesImport\", oImportData.tiles);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsTiles\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"insightsTiles\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importFavPages(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.favouritePages &&\n\t\t\t\toImportData.favouritePages.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"pages\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"pages\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"favPagesImport\", oImportData.favouritePages);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"pages\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"pages\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importCards(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.cards &&\n\t\t\t\toImportData.cards.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"insightsCards\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsCards\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"cardsImport\", oImportData.cards);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsCards\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"insightsCards\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t *  Updates status of sections being imported\n\t *\t@param {string} sSectionTitle - section title\n\t * \t@param {boolean} errorState - error state\n\t * \t@returns {void}\n\t */\n\tprivate updateImportStatus(sSectionTitle: string, errorState?: boolean): void {\n\t\tconst sSectionId = String(this._i18nBundle.getText(sSectionTitle));\n\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\tconst oSection = oSelectedSections.find(function (oSec) {\n\t\t\treturn oSec.title === sSectionId;\n\t\t});\n\t\tif (oSection) {\n\t\t\tif (errorState !== undefined) {\n\t\t\t\toSection.status = errorState ? ValueState.Error : ValueState.Success;\n\t\t\t} else {\n\t\t\t\toSection.status = ValueState.None;\n\t\t\t}\n\t\t\t//if a section's status has become success then disable that particular section\n\t\t\tif (oSection.status === ValueState.Success) {\n\t\t\t\toSection.enabled = false;\n\t\t\t}\n\t\t}\n\t\tthis.oSectionsImported[sSectionId] = true;\n\t\tconst sectionTitles = Object.keys(this.oSectionsImported);\n\t\t// if every section has been imported successfully then fire sectionsimported\n\t\tconst imported = sectionTitles.every((sTitle) => {\n\t\t\treturn this.oSectionsImported[sTitle];\n\t\t});\n\t\tif (imported) {\n\t\t\tthis.fireEvent(\"sectionsImported\");\n\t\t}\n\t}\n\n\t/**\n\t *  Resets the import model values\n\t *  @param {boolean} onOpen - value to show if the reset call is happening while opening the dialog for the first time\n\t * \t@private\n\t */\n\tpublic resetImportModel(onOpen?: boolean): void {\n\t\tthis.oControlModel.setProperty(\"/import/sections\", []);\n\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", false);\n\t\tthis.oControlModel.setProperty(\"/import/error\", false);\n\t\t// if called on settingsdialog open , reset value of selectedtab and fileUploader value\n\t\tif (onOpen) {\n\t\t\tthis.oControlModel.setProperty(\"/selectedTab\", \"export\");\n\t\t\t(Element.getElementById(this.getId() + \"--idImportFileUploader\") as FileUploader)?.setValue(\"\");\n\t\t}\n\t}\n\n\t/**\n\t * \tFind visualizations that are not already present in the favsections\n\t * @param aImportedSections\n\t * @returns {Promise<ISection[] | []>} aImportedSections\n\t */\n\tprivate async getDeltaSectionViz(aImportedSections: ISection[]): Promise<ISection[] | []> {\n\t\ttry {\n\t\t\tconst favSections: ISection[] = await this.oAppManagerInstance._getSections(true);\n\n\t\t\taImportedSections.forEach((oImportedSection) => {\n\t\t\t\tlet oSection: ISection | undefined;\n\t\t\t\tif (oImportedSection.default) {\n\t\t\t\t\toSection = favSections.find((oSec) => oSec.default);\n\t\t\t\t} else {\n\t\t\t\t\toSection = favSections.find((oSec) => oSec.id === oImportedSection.id);\n\t\t\t\t}\n\t\t\t\tif (oSection) {\n\t\t\t\t\t// find visualizations that are not already present in the favsections\n\t\t\t\t\tconst aDelta = oImportedSection.visualizations?.filter((oImportViz) => {\n\t\t\t\t\t\treturn oSection.visualizations?.every((oViz) =>\n\t\t\t\t\t\t\toViz.isBookmark ? oViz.targetURL !== oImportViz.targetURL : oViz.vizId !== oImportViz.vizId\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\toImportedSection.visualizations = aDelta;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn aImportedSections;\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error occurred while fetching delta section visualizations:\" + String(error));\n\t\t\treturn []; // Return an empty array in case of error\n\t\t}\n\t}\n\n\tprivate getDeltaAuthSectionViz(aImportedSections: ISection[]): Promise<[] | ISection[]> {\n\t\t// Get delta visualization\n\t\tif (aImportedSections && aImportedSections.length) {\n\t\t\treturn this.getDeltaSectionViz(aImportedSections)\n\t\t\t\t.then((aDeltaSections: ISection[]) => {\n\t\t\t\t\t// Filter authorized section visualizations\n\t\t\t\t\treturn this.filterAuthSectionViz(aDeltaSections);\n\t\t\t\t})\n\t\t\t\t.catch((oError) => {\n\t\t\t\t\tLog.error(String(oError));\n\t\t\t\t\treturn [];\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]); // Return a promise resolving to void\n\t}\n\n\tprivate async filterAuthSectionViz(aSections: ISection[]): Promise<ISection[]> {\n\t\tconst _getCatalogApps = function () {\n\t\t\treturn Container.getServiceAsync<SearchableContent>(\"SearchableContent\").then(function (SearchableContent) {\n\t\t\t\treturn SearchableContent.getApps({ includeAppsWithoutVisualizations: false });\n\t\t\t});\n\t\t};\n\n\t\tconst _filterAuthViz = function (aAppCatalog: AppData[], aViz: IVisualization[] | undefined) {\n\t\t\tconst aSectionViz: IVisualization[] | undefined = [];\n\t\t\taViz?.forEach(function (oViz) {\n\t\t\t\tfor (let appCatalog of aAppCatalog) {\n\t\t\t\t\tconst oAppCatalog = appCatalog;\n\t\t\t\t\tconst oSectionViz = oAppCatalog.visualizations.find(function (oCatalogViz: IVisualization) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\toCatalogViz.vizId === oViz.vizId ||\n\t\t\t\t\t\t\t(oViz.isBookmark &&\n\t\t\t\t\t\t\t\toCatalogViz.target &&\n\t\t\t\t\t\t\t\toViz.target?.action === oCatalogViz.target.action &&\n\t\t\t\t\t\t\t\toViz.target?.semanticObject === oCatalogViz.target.semanticObject)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tif (oSectionViz) {\n\t\t\t\t\t\toSectionViz.displayFormatHint =\n\t\t\t\t\t\t\toViz.displayFormatHint !== \"standard\" ? String(oViz.displayFormatHint) : String(oSectionViz.displayFormatHint);\n\t\t\t\t\t\taSectionViz.push(oViz.isBookmark ? oViz : oSectionViz);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn aSectionViz;\n\t\t};\n\n\t\treturn await _getCatalogApps().then(function (aAppCatalog) {\n\t\t\treturn aSections.map(function (oSection) {\n\t\t\t\toSection.visualizations = _filterAuthViz(aAppCatalog, oSection.visualizations);\n\t\t\t\treturn oSection;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Filter authorized favorite pages\n\t *\n\t * @param {Array} aFavPages - array of favorite pages\n\t * @returns {Promise} resolves to an array of authorized pages\n\t */\n\tprivate async filterAuthFavPages(aFavPages: IPage[]): Promise<IPage[] | []> {\n\t\tif (aFavPages && aFavPages.length > 0) {\n\t\t\treturn await this.oPageManagerInstance.fetchAllAvailablePages().then(function (aAvailablePages) {\n\t\t\t\treturn aFavPages.filter(function (oimportedPage) {\n\t\t\t\t\treturn aAvailablePages.filter(function (oAvailabePage) {\n\t\t\t\t\t\treturn oAvailabePage.pageId === oimportedPage.pageId && oAvailabePage.spaceId === oimportedPage.spaceId;\n\t\t\t\t\t}).length;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Filter authorized cards\n\t *\n\t * @param {Array} aCards - array of cards\n\t * @returns {Promise} resolves to an array of authorized cards\n\t */\n\tprivate async filterAuthCards(aCards: ICardManifest[] | void): Promise<ICardManifest[] | undefined> {\n\t\tconst _getParentApp = function (aAvailableApps: IAppInbounds[], oCard: ICardManifest) {\n\t\t\treturn aAvailableApps.find(function (oApp) {\n\t\t\t\treturn (\n\t\t\t\t\toApp.resolutionResult &&\n\t\t\t\t\toApp.resolutionResult.applicationDependencies &&\n\t\t\t\t\toCard[\"sap.insights\"] &&\n\t\t\t\t\toApp.resolutionResult.applicationDependencies.name === oCard[\"sap.insights\"].parentAppId\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\n\t\tconst _isNavigationSupported = function (oService: Navigation, oParentApp: IAppInbounds | undefined) {\n\t\t\tif (oParentApp) {\n\t\t\t\treturn oService\n\t\t\t\t\t.isNavigationSupported([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tsemanticObject: oParentApp.semanticObject,\n\t\t\t\t\t\t\t\taction: oParentApp.action\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t\t.then(function (aResponses) {\n\t\t\t\t\t\treturn aResponses[0].supported || false;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn Promise.resolve(false);\n\t\t};\n\n\t\tif (aCards && aCards.length > 0) {\n\t\t\treturn await Promise.all([\n\t\t\t\tContainer.getServiceAsync<ClientSideTargetResolution>(\"ClientSideTargetResolution\"),\n\t\t\t\tContainer.getServiceAsync<Navigation>(\"Navigation\")\n\t\t\t]).then(function (aServices: [ClientSideTargetResolution, Navigation]) {\n\t\t\t\tconst clientSideTargetResolution = aServices[0];\n\t\t\t\tconst Navigation = aServices[1];\n\t\t\t\tconst aAvailableApps = clientSideTargetResolution._oAdapter._aInbounds || [];\n\n\t\t\t\treturn aCards.reduce<Promise<ICardManifest[]>>(async (promise: Promise<ICardManifest[]>, oCard: ICardManifest) => {\n\t\t\t\t\tconst aAuthCards: ICardManifest[] = await promise;\n\t\t\t\t\tconst oParentApp = _getParentApp(aAvailableApps, oCard);\n\t\t\t\t\tconst bIsNavigationSupported = await _isNavigationSupported(Navigation, oParentApp);\n\t\t\t\t\tif (bIsNavigationSupported) {\n\t\t\t\t\t\taAuthCards.push(oCard);\n\t\t\t\t\t}\n\t\t\t\t\treturn aAuthCards;\n\t\t\t\t}, Promise.resolve([]));\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Handles change event for fileuploader on import file\n\t *\n\t * @returns {Promise} resolves to available import sections being shown\n\t */\n\tprivate onFileImport(oEvent: FileUploader$ChangeEvent): Promise<void> {\n\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, false, \"\", \"\");\n\t\tthis.resetImportModel();\n\t\tthis.oDetailPage.setBusy(true);\n\n\t\tconst files = oEvent.getParameter(\"files\");\n\t\tconst oFile = files && (files[0] as File);\n\n\t\treturn this.readFileContent(oFile)\n\t\t\t.then((oFileContent) => {\n\t\t\t\t// btoa doesn't support the characters outside latin-1 range, so first encode to utf-8\n\t\t\t\tconst oEncodedFileContent = window.btoa(\n\t\t\t\t\tencodeURIComponent(oFileContent).replace(/%([0-9A-F]{2})/g, function (match, p1: string) {\n\t\t\t\t\t\treturn String.fromCharCode(parseInt(p1, 16)); // Convert p1 to a number using parseInt //String.fromCharCode(\"0x\" + p1);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\treturn HttpHelper.Post(EXPORT_API, { fileContent: oEncodedFileContent }).then((oResponse: unknown) => {\n\t\t\t\t\tif (oResponse && (oResponse as { error: string }).error) {\n\t\t\t\t\t\tthrow new Error((oResponse as { error: string }).error);\n\t\t\t\t\t}\n\t\t\t\t\tif (oResponse && (oResponse as { value: string[] }).value && (oResponse as { value: string[] }).value.length) {\n\t\t\t\t\t\tconst oImportDataString: string | undefined = (oResponse as ApiResponse).value[0].fileContent;\n\n\t\t\t\t\t\t// Parse the stringified JSON into the defined type\n\t\t\t\t\t\tconst oImportData = JSON.parse(oImportDataString) as IExportImportFile;\n\t\t\t\t\t\tif (oImportData.host === window.location.host) {\n\t\t\t\t\t\t\tconst aImportedSections = (oImportData.sections as ISection[]) || ([] as ISection[]);\n\t\t\t\t\t\t\taImportedSections.push({\n\t\t\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\t\t\tvisualizations: (oImportData.tiles as IVisualization[]) || []\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t//filter authorized data\n\t\t\t\t\t\t\treturn this.filterAuthorizedImportData(aImportedSections, oImportData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tString(this._i18nBundle.getText(\"importSourceErrorMessage\")),\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((oError) => {\n\t\t\t\tLog.error(String(oError));\n\t\t\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, true, \"\", \"\");\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.oDetailPage.setBusy(false);\n\t\t\t\tthis.enableDisableActions(ImportExportType.IMPORT);\n\t\t\t});\n\t}\n\n\tprivate filterAuthorizedImportData(aImportedSections: ISection[], oImportData: IExportImportFile): Promise<void> {\n\t\treturn Promise.all([\n\t\t\tthis.getDeltaAuthSectionViz(aImportedSections),\n\t\t\tthis.filterAuthFavPages(oImportData.favouritePages),\n\t\t\tthis.filterAuthCards(oImportData.cards),\n\t\t\tthis.getInsightCards() // check : send only cards count here as all cards are not required\n\t\t]).then((aResponse) => {\n\t\t\tconst aAuthSections = aResponse[0] as ISection[];\n\t\t\tconst aAuthFavPages = aResponse[1];\n\t\t\tconst aAuthCards = aResponse[2];\n\t\t\tconst iInsightCardsCount = aResponse[3].getProperty(\"/cardCount\") as number;\n\t\t\toImportData.apps = aAuthSections.filter(function (oSection) {\n\t\t\t\treturn oSection.id !== MYINSIGHT_SECTION_ID;\n\t\t\t});\n\t\t\toImportData.tiles =\n\t\t\t\t(\n\t\t\t\t\taAuthSections.find(function (oSection) {\n\t\t\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t\t\t}) || {}\n\t\t\t\t).visualizations || [];\n\t\t\toImportData.favouritePages = aAuthFavPages;\n\t\t\toImportData.cards = aAuthCards || [];\n\t\t\tconst iTotalCardCount = iInsightCardsCount + Number(aAuthCards?.length);\n\t\t\tif (iTotalCardCount > 99) {\n\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\ttrue,\n\t\t\t\t\tString(this._i18nBundle.getText(\"importCardCountErrorMessage\")),\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet aSections = this.getImportedSections(oImportData, ImportExportType.IMPORT, iInsightCardsCount);\n\t\t\taSections = aSections.map(function (oSection) {\n\t\t\t\toSection.status = ValueState.None;\n\t\t\t\treturn oSection;\n\t\t\t});\n\t\t\tthis.oUserPersonalization.import.data = oImportData;\n\t\t\tthis.oControlModel.setProperty(\"/import/sections\", aSections);\n\t\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", this.getSelectedSections(aSections).length > 0);\n\t\t\tthis.oControlModel.setProperty(\"/showNoImport\", aSections.length === 0);\n\t\t});\n\t}\n\n\tprivate readFileContent(oFile: File | undefined): Promise<string> {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (oFile && window.FileReader) {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onload = function (event: ProgressEvent<FileReader>) {\n\t\t\t\t\tconst target = event.target as FileReader;\n\t\t\t\t\tresolve(target?.result as string);\n\t\t\t\t};\n\t\t\t\t// Convert oFile to Blob\n\t\t\t\tconst blob = oFile as unknown as Blob;\n\t\t\t\treader.readAsText(blob);\n\t\t\t} else {\n\t\t\t\treject(new Error(\"Error\"));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _getPersonalizationData(): Promise<IPersonalizationData> {\n\t\tif (!this.oPersonalizerInstance) {\n\t\t\tthis.oPersonalizerInstance = await UShellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\tthis.persData = (await this.oPersonalizerInstance.read()) || {};\n\t\treturn this.persData;\n\t}\n\n\tprivate async loadUserPersonalizationData(): Promise<void> {\n\t\tthis.oExportList.setBusy(true);\n\t\tconst persData = await this._getPersonalizationData();\n\n\t\t// load all sections, insight apps and cards\n\t\tconst [favSections, insightTiles, insightModel] = await Promise.all([\n\t\t\tthis.oAppManagerInstance._getSections(true),\n\t\t\tthis.oAppManagerInstance.fetchInsightApps(true, this._i18nBundle.getText(\"insights\") as string),\n\t\t\tthis.getInsightCards()\n\t\t]);\n\n\t\tconst aSections = favSections,\n\t\t\tfavApps = aSections.filter(function (oSection) {\n\t\t\t\treturn oSection.id !== MYINSIGHT_SECTION_ID && oSection.visualizations?.length;\n\t\t\t});\n\n\t\tconst insightCards: ICardManifest[] =\n\t\t\tinsightModel && insightModel.getProperty(\"/visibleCards\")\n\t\t\t\t? (insightModel.getProperty(\"/visibleCards\") as ICard[]).map((oCard: ICard) => {\n\t\t\t\t\t\treturn oCard.descriptorContent;\n\t\t\t\t\t})\n\t\t\t\t: [];\n\t\tconst oExportData = {\n\t\t\tapps: favApps,\n\t\t\ttiles: insightTiles,\n\t\t\tfavouritePages: persData.favouritePages,\n\t\t\tcards: insightCards,\n\t\t\tpersonalization: persData\n\t\t} as IExportData;\n\t\tconst aExportSections = this.getImportedSections(oExportData, ImportExportType.EXPORT, 0);\n\t\tthis.oUserPersonalization.export.data = oExportData;\n\t\tthis.oUserPersonalization.export.sections = aExportSections;\n\t\tthis.oUserPersonalization.export.sectionsSelected = this.getSelectedSections(aExportSections).length > 0;\n\t\tthis.oControlModel.refresh();\n\t\tthis.oExportList.setBusy(false);\n\t}\n\n\t/**\n\t * Returns selected sections out of provided sections\n\t *\n\t * @param {Array} aSections - array of sections to show in import/export\n\t * @returns {Array} array of selected sections\n\t */\n\tgetSelectedSections(aSections: IExportSections[]): IExportSections[] {\n\t\treturn (\n\t\t\taSections.filter(function (oSection) {\n\t\t\t\treturn oSection.selected && oSection.enabled;\n\t\t\t}) || []\n\t\t);\n\t}\n\n\t/**\n\t * Returns if section is selected\n\t *\n\t * @param {Array} oSections - import/export sections\n\t * @param {String} sSectionId - import/export section id\n\t * @returns {boolean} returns true if section is selected\n\t */\n\tisSectionSelected(sections: IExportSections[], sectionId: string): boolean {\n\t\tconst section = sections.find(function (sec) {\n\t\t\treturn sec.title === sectionId;\n\t\t});\n\t\treturn !!(section && section.selected && section.enabled);\n\t}\n\n\t/**\n\t * Returns import/export sections\n\t *\n\t * @param {object} oData - export/import data\n\t * @param {ImportExportType} sType - export/import type\n\t * @param {number} iInsightCardsCount - cards count\n\t * @returns {Array} array of import/export sections\n\t */\n\tprivate getImportedSections(\n\t\toData: IExportData | IExportImportFile,\n\t\tsType: ImportExportType,\n\t\tiInsightCardsCount: number\n\t): IExportSections[] {\n\t\tconst aFavPages = (sType === ImportExportType.IMPORT ? this.getDeltaFavPages(oData.favouritePages) : oData.favouritePages) || [],\n\t\t\tisAppViz =\n\t\t\t\toData.apps &&\n\t\t\t\toData.apps.some(function (oSections) {\n\t\t\t\t\treturn oSections && oSections.visualizations && oSections.visualizations.length > 0;\n\t\t\t\t});\n\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"favApps\") as string,\n\t\t\t\tselected: isAppViz,\n\t\t\t\tenabled: isAppViz\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"pages\") as string,\n\t\t\t\tselected: aFavPages.length > 0,\n\t\t\t\tenabled: aFavPages.length > 0\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"insightsTiles\") as string,\n\t\t\t\tselected: oData.tiles && oData.tiles.length > 0,\n\t\t\t\tenabled: oData.tiles && oData.tiles.length > 0\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"insightsCards\") as string,\n\t\t\t\tselected: oData.cards && oData.cards.length > 0 && oData.cards.length + iInsightCardsCount <= 99,\n\t\t\t\tenabled: oData.cards && oData.cards.length > 0 && oData.cards.length + iInsightCardsCount <= 99\n\t\t\t}\n\t\t];\n\t}\n\n\tprivate getDeltaFavPages(aImportedFavPages: IPage[]): IPage[] {\n\t\tconst aFavPages = this.persData.favouritePages || [];\n\t\tif (aFavPages.length !== aImportedFavPages.length) {\n\t\t\treturn aImportedFavPages;\n\t\t}\n\t\treturn aImportedFavPages.filter(function (oImportedPage) {\n\t\t\treturn !aFavPages.find(function (oFavPage) {\n\t\t\t\treturn oImportedPage.pageId === oFavPage.pageId && oImportedPage.spaceId === oFavPage.spaceId;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async getInsightCards(): Promise<JSONModel> {\n\t\ttry {\n\t\t\tthis.cardHelperInstance = await (CardHelper as ICardHelper).getServiceAsync();\n\t\t\tconst oUserVisibleCardModel = await this.cardHelperInstance._getUserAllCardModel();\n\t\t\tconst aCards = oUserVisibleCardModel.getProperty(\"/cards\") as ICard[];\n\t\t\tconst aVisibleCards = aCards.filter(function (oCard: ICard) {\n\t\t\t\treturn oCard.visibility;\n\t\t\t});\n\t\t\toUserVisibleCardModel.setProperty(\"/visibleCards\", aVisibleCards);\n\t\t\treturn oUserVisibleCardModel;\n\t\t} catch (error) {\n\t\t\t// Handle any errors\n\t\t\tconsole.error(\"Error in getInsightCards:\", error);\n\t\t\tthrow error; // Re-throw the error to be handled by the caller\n\t\t}\n\t}\n\n\t/**\n\t * Handles export button press\n\t */\n\tprivate onExportPress(): void {\n\t\tthis.handleUserPersonalizationError(ImportExportType.EXPORT, false, \"\", \"\");\n\t\tconst oExportFileName = this.oControlModel.getProperty(\"/export/fileName\") as string,\n\t\t\taExportSections = this.oControlModel.getProperty(\"/export/sections\") as IExportSections[],\n\t\t\toExportData = this.oUserPersonalization.export.data;\n\t\tconst oExportFileContent = this.getExportFileContent(oExportData, aExportSections);\n\t\tsap.ui.require([\"sap/ui/core/util/File\"], (File: File) => {\n\t\t\ttry {\n\t\t\t\tFile.save(JSON.stringify(oExportFileContent), oExportFileName, \"txt\", \"text/plain\", \"utf-8\");\n\t\t\t\tMessageToast.show(String(this._i18nBundle.getText(\"userPersonalizationExportSuccess\")));\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t\tif (error instanceof Error && error?.name !== undefined && error.name !== \"AbortError\") {\n\t\t\t\t\t// Handle the error appropriately\n\t\t\t\t\tthis.handleUserPersonalizationError(ImportExportType.EXPORT, true, \"\", \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getExportFileContent(exportData: IExportData | undefined, exportSections: IExportSections[]): IExportImportFile {\n\t\tconst oPersonalization = exportData?.personalization,\n\t\t\toExportFileContent = {\n\t\t\t\thost: window.location.host,\n\t\t\t\tcreatedDate: new Date(),\n\t\t\t\tsections: [] as ISectionAndVisualization[] | IVisualization[] | [],\n\t\t\t\tgroupInfo: [] as IAppPersonalization[] | IVisualization[] | [],\n\t\t\t\ttiles: [] as ISectionAndVisualization[] | IVisualization[] | [],\n\t\t\t\tcards: [],\n\t\t\t\tfavouritePages: [] as IPage[] | []\n\t\t\t};\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"favApps\") as string)) {\n\t\t\toExportFileContent.sections = exportData?.apps || [];\n\t\t\toExportFileContent.groupInfo = oPersonalization?.favoriteApps || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"pages\") as string)) {\n\t\t\toExportFileContent.favouritePages = oPersonalization?.favouritePages || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"insightsTiles\") as string)) {\n\t\t\toExportFileContent.tiles = exportData?.tiles || [];\n\t\t}\n\t\treturn oExportFileContent;\n\t}\n\n\t/**\n\t * Handles user personalization error, shows the error msg and reset values\n\t *\n\t * @param {string} sType - type of import/export\n\t * @param {boolean} bShowError - flag to show or hide error msg\n\t * @param {string} sErrorMsg - error msg text\n\t * @param {string} sErrorType - error msg type\n\t */\n\tprivate handleUserPersonalizationError(sType: ImportExportType, bShowError: boolean, sErrorMsg: string, sErrorType: string): void {\n\t\tconst sDefaultErrorMsg = this._i18nBundle.getText(sType === ImportExportType.IMPORT ? \"importErrorMessage\" : \"exportErrorMessage\");\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/error\", bShowError, undefined, true);\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/errorMessage\", sErrorMsg || sDefaultErrorMsg, undefined, true);\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/errorType\", sErrorType || \"Error\", undefined, true);\n\t\tthis.setExportImportValues(sType);\n\t}\n\n\t/**\n\t * Handles import/export tab select\n\t *\n\t * @param {object} oEvent - IconTabBarSeelect event\n\t */\n\tprivate onImportExportTabSelect(oEvent: IconTabBar$SelectEvent): void {\n\t\tconst selectedKey = oEvent.getParameter(\"selectedKey\");\n\t\tthis.oSelectedTab = selectedKey;\n\t\tthis.oControlModel.setProperty(\"/selectedTab\", selectedKey);\n\t\tthis.oExportList.setVisible(selectedKey === \"export\");\n\n\t\tthis.oImportBtn.setVisible(selectedKey === \"import\");\n\t\tthis.oExportBtn.setVisible(selectedKey === \"export\");\n\t\tthis.oImportBtn.setEnabled(this.oUserPersonalization.import.sectionsSelected);\n\t\tthis.oExportBtn.setEnabled(this.oUserPersonalization.export.sectionsSelected);\n\t\tthis.oExportBtn.setEnabled(\n\t\t\t!!(\n\t\t\t\tthis.oUserPersonalization.export.fileName &&\n\t\t\t\tthis.oUserPersonalization.export.sections &&\n\t\t\t\tthis.oUserPersonalization.export.sections.length > 0 &&\n\t\t\t\tthis.oUserPersonalization.export.sectionsSelected\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Handles export file name input change\n\t *\n\t * @param {object} oEvent - event\n\t */\n\tprivate onFileNameInputChange(oEvent: Input$LiveChangeEvent): void {\n\t\tconst sInputValue: string | undefined = oEvent.getParameter(\"value\")?.trim();\n\t\tconst oInput = oEvent.getSource();\n\t\tlet sValueState = ValueState.None; // Initialize with ValueState.None\n\t\tlet sValueStateText = \"\";\n\n\t\t// Validate based on constraints provided at input\n\t\tif (!sInputValue || !sInputValue.length) {\n\t\t\tsValueState = ValueState.Error;\n\t\t\tsValueStateText = String(this._i18nBundle.getText(\"invalidExportFileName\"));\n\t\t}\n\n\t\t//update value state\n\t\toInput.setValueState(sValueState);\n\t\toInput.setValueStateText(sValueStateText);\n\t\tthis.oControlModel.setProperty(\"/export/fileName\", sInputValue);\n\t\tthis.enableDisableActions(ImportExportType.EXPORT);\n\t}\n\n\tprivate onResetImportApps(): void {\n\t\tthis.oEventBus.publish(\"importChannel\", \"resetImported\");\n\t}\n\n\t/**\n\t * Generates the recommendation settings panel\n\t * @returns {Panel} recommendation settings panel\n\t * @private\n\t */\n\tprivate async _getRecommendationSettingsPanel() {\n\t\tconst persData = await this._getPersonalizationData();\n\t\tif (!this._recommendationSettingsPanel) {\n\t\t\tconst panelId = this.getId() + \"--recommendationSettingsPanel\";\n\t\t\tthis._recommendationSettingsPanel = new Panel(panelId, {\n\t\t\t\theaderText: this._i18nBundle.getText(\"recommendationSettingsHeader\"),\n\t\t\t\texpanded: true,\n\t\t\t\texpandable: true,\n\t\t\t\tcontent: [\n\t\t\t\t\tnew Text({\n\t\t\t\t\t\tid: `${panelId}-container-subHeader`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"recommendationSettingsSubHeader\")\n\t\t\t\t\t}),\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tid: `${panelId}-container`,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew CheckBox({\n\t\t\t\t\t\t\t\tid: `${panelId}-container-checkBox`,\n\t\t\t\t\t\t\t\tselected: persData.showRecommendation ?? true,\n\t\t\t\t\t\t\t\tselect: (event) => this.onRecommendationSettingChange(event)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\t\tid: `${panelId}-container-label`,\n\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"recommendationSettingsCheckboxLabel\")\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\talignItems: FlexAlignItems.Center\n\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\")\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\t}\n\t\treturn this._recommendationSettingsPanel;\n\t}\n\n\t/**\n\t * Adds recommendation settings panel to the content vbox, if recommendation feature is enabled\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tprivate async _setRecommendationSettingsPanel() {\n\t\tthis.oDetailPage.setBusy(true);\n\t\tconst isRecommendationEnabled = await this.oAppManagerInstance.isFeatureEnabled(FEATURE_TOGGLES.RECOMMENDATION);\n\t\tif (isRecommendationEnabled) {\n\t\t\tconst recommendationSettingsPanel = await this._getRecommendationSettingsPanel();\n\t\t\tthis.oContentVBox.addItem(recommendationSettingsPanel);\n\t\t}\n\t\tthis.oDetailPage.setBusy(false);\n\t}\n\n\t/**\n\t * Handles recommendation setting change\n\t *\n\t * @param {CheckBox$SelectEvent} event - checkbox select event\n\t * @private\n\t */\n\tprivate async onRecommendationSettingChange(event: CheckBox$SelectEvent) {\n\t\tconst showRecommendation = event.getParameter(\"selected\");\n\t\tthis.oEventBus.publish(\"importChannel\", \"recommendationSettingChanged\", { showRecommendation });\n\t\tconst oPersData = await this._getPersonalizationData();\n\t\tvoid this.oPersonalizerInstance.write({ ...oPersData, showRecommendation });\n\t}\n}\n"],"mappings":";;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,4vBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,CAkjBO,SAAAG,EAAgBC,EAAMC,GAC5B,IACC,IAAIC,EAASF,GACd,CAAE,MAAMG,GACP,OAAOF,EAAQE,EAChB,CACA,GAAID,GAAUA,EAAOE,KAAM,CAC1B,OAAOF,EAAOE,UAAU,EAAGH,EAC5B,CACA,OAAOC,CACR,CAAC,MA7iBQG,EAAcrC,EAAA,wBAAEsC,EAAYtC,EAAA,sBAkB5BuC,EAAUzB,EAAA,oBAUZ0B,EAAiBb,EAAAR,GAAA,MAIjBsB,EAAUd,EAAAP,GAAA,MACRsB,EAAerB,EAAA,yBAAEsB,EAAoBtB,EAAA,8BACrCuB,EAAuBtB,EAAA,iCAAEuB,EAAWvB,EAAA,qBACtCwB,EAAUnB,EAAAJ,GAAA,MACVwB,EAAWpB,EAAAH,GAAA,MACXwB,EAAoBrB,EAAAF,GAAA,MACpBwB,EAAkBtB,EAAAD,GAAA,IAEbwB,EAAgB,SAAhBA,KAAgB,mBAAhBA,EAAgB,0BAAhBA,CAAgB,EAAhBA,GAAgB,IAiC5B,MAAMC,EAAW,6CACjB,MAAMC,GAAgBD,EAAW,gCACjC,MAAME,GAAaD,GAAgB,sFACnC,MAAME,GAAuB,4BAE7B,MAgBqBC,GAA8Bf,EAAiBgB,OAAA,sCA4CnDC,SAA4B,CAC3CC,OAAQ,CACPC,iBAAkB,CAAC,IAYdC,KAAI,SAAAC,IACVC,sBAAAC,MAGAA,KAAKC,YAAY,MAAOrB,EAAqBsB,UAC7CF,KAAKC,YAAY,QAASD,KAAKG,YAAYC,QAAQ,qBACnDJ,KAAKC,YAAY,OAAQ,mBACzBD,KAAKK,UAAYvD,EAASwD,cAC1BN,KAAKO,oBAAsB7B,EAAW4B,cACtCN,KAAKQ,kBAAoB,CAAC,EAE1BR,KAAKS,qBAAuB,CAC3BC,OAAQ,CACPC,SAAU,GACVC,SAAU,UACVC,iBAAkB,MAClBC,MAAO,OAERC,OAAQ,CACPJ,SAAU,GACVE,iBAAkB,MAClBC,MAAO,OAERE,YAAa,SACbC,aAAc,OAEfjB,KAAKkB,cAAgB,IAAIjE,EAAU+C,KAAKS,sBAExCT,KAAKmB,eAAe,UAAWnB,KAAKoB,cAEpCpB,KAAKqB,kBAELrB,KAAKsB,qBAAqB,KAAM,MAAAC,EAEzBvB,UADD,eACJ,IAAKuB,EAAKC,qBAAsB,CAC/BD,EAAKC,qBAAuBxC,EAAYsB,YACvCrB,EAAqBwC,mBAAmBF,EAAKG,aAC7CzC,EAAqB0C,kBAAkBJ,EAAKG,aAE9C,CAGAH,EAAKlB,UAAUuB,UACd,gBACA,gBACA,CAACC,EAAoBC,EAAkBC,KACtC,MAAMC,EAAcD,EAA6BE,OAEjDV,EAAKW,mBAAmB,iBAAkBF,IAC1CT,GAIFA,EAAKlB,UAAUuB,UACd,gBACA,eACA,CAACC,EAAoBC,EAAkBC,KACtC,MAAMC,EAAcD,EAA6BE,OAEjDV,EAAKW,mBAAmB,WAAYF,IACpCT,GAIFA,EAAKlB,UAAUuB,UACd,gBACA,mBACA,CAACC,EAAoBC,EAAkBC,KACtC,MAAMC,EAAcD,EAA6BE,OAEjDV,EAAKW,mBAAmB,SAAUF,IAClCT,GAIFA,EAAKlB,UAAUuB,UACd,gBACA,gBACA,CAACC,EAAoBC,EAAkBC,KACtC,MAAMC,EAAcD,EAA6BE,OAEjDV,EAAKW,mBAAmB,iBAAkBF,IAC1CT,GAKFA,EAAKY,YAActF,EAAQuF,eAAeb,EAAKc,YAAY,OAAS,qBAE/Dd,EAAKe,kCAEV,OAAAC,QAAAC,QACMjB,EAAKkB,+BAA6BpE,KAAA,WAGxCkD,EAAKmB,WAAWC,WAAWpB,EAAKd,qBAAqBM,OAAOF,kBAC5DU,EAAKqB,qBAAqBrB,EAAKd,qBAAqBO,aAGpDO,EAAKsB,sBACLtB,EAAKuB,eAAeC,QACnBxB,EAAKd,qBAAqBC,OAAOsC,aAAeC,OAAO1B,EAAKd,qBAAqBC,OAAOsC,cAAgB,IAEzGzB,EAAKuB,eAAeI,QAAQ3B,EAAKd,qBAAqBC,OAAOyC,WAC7D5B,EAAKuB,eAAe7C,YAAY,UAAWsB,EAAKd,qBAAqBC,OAAOI,MAAO,MACnFS,EAAK6B,eAAeC,SAASJ,OAAO1B,EAAKd,qBAAqBC,OAAOE,WAErEW,EAAK+B,eAAeP,QACnBxB,EAAKd,qBAAqBM,OAAOiC,aAAeC,OAAO1B,EAAKd,qBAAqBM,OAAOiC,cAAgB,IAEzGzB,EAAK+B,eAAeJ,QAAQ3B,EAAKd,qBAAqBM,OAAOoC,WAC7D5B,EAAK+B,eAAerD,YAAY,UAAWsB,EAAKd,qBAAqBM,OAAOD,MAAO,KAAM,EAC1F,CAAC,MAAA1C,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,EA/EI,IAiFP,EAEQyE,oBAAmB,SAAAW,IAC1B,IAAKxD,KAAKyD,YAAa,CACtBzD,KAAKyD,YAAczD,KAAK0D,uBACxB1D,KAAK2D,mBAAmBC,WAAW5D,KAAKyD,YACzC,KAAO,CACNzD,KAAKyD,YAAYI,YAClB,CACA,IAAK7D,KAAK8D,YAAa,CACtB9D,KAAK8D,YAAc9D,KAAK+D,uBACxB/D,KAAK2D,mBAAmBC,WAAW5D,KAAK8D,YACzC,KAAO,CACN9D,KAAK8D,YAAYD,YAClB,CACD,EAOQjB,qBAAoB,SAAAoB,EAACC,GAC5BjE,KAAKkE,kBAAkBC,eAAeF,GACtCjE,KAAK0C,YAAY0B,WAAWH,IAAU9E,EAAiBkF,QACvDrE,KAAKsE,YAAYF,WAAWH,IAAU9E,EAAiBoF,QACvD,GAAIvE,KAAKS,qBAAqBM,OAAOF,kBAAoBoD,IAAU9E,EAAiBkF,OAAQ,CAC3FrE,KAAK0C,WAAWC,WAAW,KAC5B,KAAO,CACN3C,KAAK0C,WAAWC,WAAW,MAC5B,CAEA,GACCsB,IAAU9E,EAAiBoF,QAC3BvE,KAAKS,qBAAqBC,OAAOE,UACjCZ,KAAKS,qBAAqBC,OAAOC,UAAU6D,QAC3CxE,KAAKS,qBAAqBC,OAAOG,iBAChC,CACDb,KAAKsE,WAAW3B,WAAW,KAC5B,KAAO,CACN3C,KAAKsE,WAAW3B,WAAW,MAC5B,CACD,EAOQ8B,sBAAqB,SAAAC,EAACT,GAC7B,GAAIA,IAAU9E,EAAiBoF,OAAQ,CACtCvE,KAAK8C,eAAeC,QACnB/C,KAAKS,qBAAqBC,OAAOsC,aAAeC,OAAOjD,KAAKS,qBAAqBC,OAAOsC,cAAgB,IAEzGhD,KAAK8C,eAAeI,QAAQlD,KAAKS,qBAAqBC,OAAOyC,WAC7DnD,KAAK8C,eAAe7C,YAAY,UAAWD,KAAKS,qBAAqBC,OAAOI,MAAO,KACpF,MAAO,GAAImD,IAAU9E,EAAiBkF,OAAQ,CAC7CrE,KAAKsD,eAAeP,QACnB/C,KAAKS,qBAAqBM,OAAOiC,aAAeC,OAAOjD,KAAKS,qBAAqBC,OAAOsC,cAAgB,IAEzGhD,KAAKsD,eAAeJ,QAAQlD,KAAKS,qBAAqBM,OAAOoC,WAC7DnD,KAAKsD,eAAerD,YAAY,UAAWD,KAAKS,qBAAqBM,OAAOD,MAAO,KACpF,CACD,EAMQM,WAAU,SAAAuD,IACjB,IAAK3E,KAAK4E,aAAc,CACvB5E,KAAK4E,aAAe,IAAIhI,EAAKoD,KAAK6E,QAAU,mBAAoB,CAC/DC,MAAO,CACN,IAAItI,EAAKwD,KAAK6E,QAAU,+BAAgC,CACvDE,KAAM/E,KAAKG,YAAYC,QAAQ,+BAC7B4E,cAAc,6CAEjBhF,KAAKiF,0BAGR,CACA,OAAOjF,KAAK4E,YACb,EAQQK,sBAAqB,SAAAA,IAC5B,IAAKjF,KAAK2D,mBAAoB,CAC7B3D,KAAK2D,mBAAqB,IAAIpH,EAAM,GAAGyD,KAAK6E,4BAA6B,CACxEK,cAAe,IAAI5I,EAAgB,GAAG0D,KAAK6E,mCAAoC,CAC9EM,MAAO5G,EAAa6G,MACpBC,QAAS,CACR,IAAI7I,EAAK,GAAGwD,KAAK6E,uCAAwC,CACxDE,KAAM/E,KAAKG,YAAYC,QAAQ,gCAEhC,IAAIzD,EAAc,GAAGqD,KAAK6E,0CAC1B7E,KAAKsF,mBACLtF,KAAKuF,sBAGPC,WAAYxF,KAAKG,YAAYC,QAAQ,8BACrCqF,SAAU,KACVC,WAAY,KACZL,QAAS,KACPL,cAAc,sBAClB,CAEA,OAAOhF,KAAK2D,kBACb,EAQQ2B,iBAAgB,SAAAA,IACvB,IAAKtF,KAAK0C,WAAY,CACrB1C,KAAK0C,WAAa,IAAIjH,EAAO,CAC5BkK,GAAI,GAAG3F,KAAK6E,oBACZE,KAAM/E,KAAKG,YAAYC,QAAQ,UAC/BwF,KAAM,cACNC,MAAOA,UACD7F,KAAK8F,iBAEXC,QAAS,QAEVlH,EAAwBmB,KAAKuF,mBAAoBzG,EAAYkH,MAAO,YACrE,CACA,OAAOhG,KAAK0C,UACb,EAQQ6C,iBAAgB,SAAAA,IACvB,IAAKvF,KAAKsE,WAAY,CACrBtE,KAAKsE,WAAa,IAAI7I,EAAO,CAC5BkK,GAAI,GAAG3F,KAAK6E,oBACZE,KAAM/E,KAAKG,YAAYC,QAAQ,UAC/BwF,KAAM,cACNC,MAAO7F,KAAKiG,cAAcC,KAAKlG,MAC/B+F,QAAS,OAEVlH,EAAwBmB,KAAKsE,WAAYxF,EAAYkH,MAAO,YAC7D,CACA,OAAOhG,KAAKsE,UACb,EAQQjD,gBAAe,SAAA8E,IAEtB,IAAKnG,KAAKkE,iBAAkB,CAC3BlE,KAAKkE,iBAAmB,IAAIrI,EAAWmE,KAAK6E,QAAU,sBAAuB,CAC5Ea,WAAY,MACZU,iBAAkB,cAClBC,YAAarG,KAAKsG,aAAetG,KAAKsG,aAAe,SACrDC,OAAQvG,KAAKwG,wBAAwBN,KAAKlG,QAG3C,MAAMyG,EAAY,IAAI3K,EAAckE,KAAK6E,QAAU,gBAAiB,CACnE6B,IAAK,SACL3B,KAAM/E,KAAKG,YAAYC,QAAQ,gBAGhCvB,EAAwB4H,EAAW3H,EAAY6H,OAAQ,aAGvD3G,KAAK8C,eAAiB,IAAI3G,EAAa6D,KAAK6E,QAAU,yBAA0B,CAC/E+B,SAAU,KACVb,QAAS,QACPf,cAAc,4CACjB,MAAM6B,EAAa,IAAIrK,EAAKwD,KAAK6E,QAAU,iBAAkB,CAAEE,KAAM/E,KAAKG,YAAYC,QAAQ,gBAAiB4E,cAC9G,kBAED,MAAM8B,EAAqB,IAAIlL,EAAKoE,KAAK6E,QAAU,yBAA0B,CAC5EkC,WAAY,WACV/B,cAAc,oBACjB,MAAMgC,EAAgB,IAAIhL,EAAMgE,KAAK6E,QAAU,oBAAqB,CACnEE,KAAM/E,KAAKG,YAAYC,QAAQ,uBAC/B6G,SAAU,uBACVC,SAAU,KACVC,UAAW,OACTnC,cAAc,uBACjBhF,KAAKoD,eAAiB,IAAIrH,EAAMiE,KAAK6E,QAAU,oBAAqB,CACnEuC,eAAgB,CAAC,eAAgB,mBACjCF,SAAU,KACVG,MAAO,QACPC,WAAYtH,KAAKuH,sBAAsBrB,KAAKlG,MAC5CwH,MAAO,KAGRV,EAAmBW,QAAQT,GAC3BF,EAAmBW,QAAQzH,KAAKoD,gBAEhCqD,EAAU7C,WAAW5D,KAAK8C,gBAC1B2D,EAAU7C,WAAWiD,GACrBJ,EAAU7C,WAAWkD,GAGrB,MAAMY,EAAY,IAAI5L,EAAckE,KAAK6E,QAAU,gBAAiB,CACnE6B,IAAK,SACL3B,KAAM/E,KAAKG,YAAYC,QAAQ,gBAGhCvB,EAAwB6I,EAAW5I,EAAY6H,OAAQ,aAGvD3G,KAAKsD,eAAiB,IAAInH,EAAa6D,KAAK6E,QAAU,yBAA0B,CAC/EE,KAAM,qCACNa,KAAM,kCACNgB,SAAU,KACVb,QAAS,QACPf,cAAc,4CACjB,MAAM2C,EAAa,IAAInL,EAAKwD,KAAK6E,QAAU,iBAAkB,CAAEE,KAAM/E,KAAKG,YAAYC,QAAQ,gBAAiB4E,cAC9G,kBAED,MAAM4C,EAAmB,IAAI5K,EAAWgD,KAAK6E,QAAU,uBAAwB,CAC9EgD,SAAU,KACVC,OAAQ,uBACRC,WAAY,EACZC,WAAY,IAEb,MAAMC,EAAe,IAAI/K,EAAa8C,KAAK6E,QAAU,yBAA0B,CAC9EqD,QAASlI,KAAKG,YAAYC,QAAQ,oBAClC+H,SAAU,CAAC,OACXC,OAASC,SACHrI,KAAKsI,aAAaD,IAExBE,gBAAiB,GACjBC,oBAAqB,KACrBnB,MAAO,MACPD,eAAgB,CAAC,gBACjBqB,WAAYzI,KAAKG,YAAYC,QAAQ,8BAEtCwH,EAAiBhE,WAAWqE,GAC5BP,EAAU9D,WAAW5D,KAAKsD,gBAC1BoE,EAAU9D,WAAW+D,GACrBD,EAAU9D,WAAWgE,GAErB,MAAMc,EAAmB,IAAI5M,EAAckE,KAAK6E,QAAU,uBAAwB,CACjF6B,IAAK,gBACL3B,KAAM/E,KAAKG,YAAYC,QAAQ,mBAGhCvB,EAAwB6J,EAAkB5J,EAAY6H,OAAQ,oBAC9D,MAAMgC,EAAc,IAAInM,EAAKwD,KAAK6E,QAAU,wBAAyB,CACpEE,KAAM/E,KAAKG,YAAYC,QAAQ,uBAC7B4E,cAAc,yCACjB,MAAM4D,EAAqB,IAAInN,EAAOuE,KAAK6E,QAAU,uBAAwB,CAC5EE,KAAM/E,KAAKG,YAAYC,QAAQ,eAC/ByF,MAAO7F,KAAK6I,kBAAkB3C,KAAKlG,QACjCgF,cAAc,sBACjBnG,EAAwB+J,EAAoB9J,EAAYkH,MAAO,mBAC/D0C,EAAiB9E,WAAW+E,GAC5BD,EAAiB9E,WAAWgF,GAE5B5I,KAAKkE,iBAAiBuD,QAAQhB,GAC9BzG,KAAKkE,iBAAiBuD,QAAQC,GAC9B1H,KAAKkE,iBAAiBuD,QAAQiB,GAC9B1I,KAAK2D,mBAAmBC,WAAW5D,KAAKkE,kBACxClE,KAAK2D,mBAAmBC,WAAW5D,KAAK0D,uBACzC,CACD,EAMQA,qBAAoB,SAAAoF,IAC3B,MAAMC,EAAqB,IAAI7M,EAAK8D,KAAK6E,QAAU,yBAA0B,CAC5EwC,MAAO,oBACP2B,iBAAkB,GAClBC,uBAAwB,KACxBlD,QAAS,iDACPf,cAAc,yBACjB,MAAME,EAAgB,IAAIxI,EAAQsD,KAAK6E,QAAU,gCAAiC,CACjFQ,QAAS,CACR,IAAI5I,EAAMuD,KAAK6E,QAAU,mCAAoC,CAC5DE,KAAM/E,KAAKG,YAAYC,QAAQ,6BAC7B4E,cAAc,mBAGnB+D,EAAmBG,iBAAiBhE,GAEpC6D,EAAmBI,SAASnJ,KAAKkB,cAAe,eAEhD6H,EAAmBK,UAAU,CAC5BC,KAAM,+BACNC,SAAU,IAAI3N,EAAe,CAC5B0J,QAAS,CACR,IAAIzJ,EAAK,CACRmL,WAAY,SACZjC,MAAO,CACN,IAAIpJ,EAASsE,KAAK6E,QAAU,0BAA2B,CACtD0B,OAAQvG,KAAKuJ,0BAA0BrD,KAAKlG,KAAM,OAClDwJ,SAAU,yBACVC,QAAS,0BAEV,IAAIjN,EAAKwD,KAAK6E,QAAU,yBAA0B,CAAEE,KAAM,wBAAyBC,cAClF,uBAGFqC,MAAO,cAKXrH,KAAKyD,YAAcsF,EACnB,OAAOA,CACR,EAMQhF,qBAAoB,SAAA2F,IAC3B,MAAMC,EAAqB,IAAIzN,EAAK8D,KAAK6E,QAAU,yBAA0B,CAC5EwC,MAAO,oBACP2B,iBAAkB,GAClBC,uBAAwB,KACxBlD,QACC,iIACCf,cAAc,yBACjB,MAAME,EAAgB,IAAIxI,EAAQsD,KAAK6E,QAAU,gCAAiC,CACjFQ,QAAS,CACR,IAAI5I,EAAMuD,KAAK6E,QAAU,mCAAoC,CAC5DE,KAAM/E,KAAKG,YAAYC,QAAQ,6BAC7B4E,cAAc,mBAGnB2E,EAAmBT,iBAAiBhE,GAEpCyE,EAAmBR,SAASnJ,KAAKkB,cAAe,eAChDyI,EAAmBP,UAAU,CAC5BC,KAAM,+BACNC,SAAU,IAAI3N,EAAe,CAC5B0J,QAAS,CACR,IAAIzJ,EAAK,CACRgO,eAAgB,eAChB9E,MAAO,CACN,IAAIlJ,EAAK,CACRkJ,MAAO,CACN,IAAIpJ,EAASsE,KAAK6E,QAAU,0BAA2B,CACtD0B,OAAQvG,KAAKuJ,0BAA0BrD,KAAKlG,KAAM,MAClDwJ,SAAU,yBACVC,QAAS,0BAEV,IAAIjN,EAAKwD,KAAK6E,QAAU,yBAA0B,CAAEE,KAAM,wBAAyBC,cAClF,yBAIH,IAAIpJ,EAAK,CACRkJ,MAAO,CACN,IAAIzI,EAAa2D,KAAK6E,QAAU,uBAAwB,CACvDgF,KAAM,yGACNC,MAAO,uBACP/D,QAAS,yCACPf,cAAc,8CAIpBqC,MAAO,cAMX,OAAOsC,CACR,EAMQJ,0BAAyB,SAAAQ,EAACC,GACjC,MAAMC,EAAcD,EAAWhK,KAAK8D,YAAYoG,WAAalK,KAAKyD,YAAYyG,WAC9E,IAAIC,EAAa,MACjB,IAAI9E,EAAS+E,EACb,MAAMC,EAAoBJ,EAAYK,KAAK,SAAUC,GACpD,IAAKP,EAAU,CACd3E,EAAUkF,EAASC,eAAe,WAClCJ,EAAiB/E,EAAQ,GAAY6E,WAAW,GAChDC,EAAaC,EAAcK,aAC5B,KAAO,CACNpF,EAAUkF,EAASC,eAAe,WAClC,MAAME,EAAarF,EAAQ,GAAY6E,WAAW,GAClDE,EAAgBM,EAAUR,WAAW,GACrCC,EAAaC,EAAcK,aAC5B,CACA,OAAON,CACR,GACAnK,KAAKkB,cAAcjB,aAAa+J,EAAW,UAAY,WAAa,oBAAqBK,GACzFrK,KAAK4C,qBAAsBoH,EAAW,SAAW,SAClD,EAMclE,cAAa,SAAA6E,IAAA,IAAkB,MAAAC,EAC5C5K,KAAA4K,EAAKC,YAAY,mBAAoB,KACpCD,EAAKzI,YAAY2I,QAAQ,OACzBF,EAAK1J,cAAcjB,YAAY,2BAA4B,SAE5D2K,EAAKlI,WAAWC,WAAW,OAC3BiI,EAAKzI,YAAY2I,QAAQ,MACzBF,EAAKG,+BAA+B5L,EAAiBkF,OAAQ,MAAO,GAAI,IACxE,MAAM2G,EAAcJ,EAAKnK,qBAAqBM,OAAOgB,KAAK,MAAAkJ,EAAAjN,EAAA,WACtD,OAAAuE,QAAAC,QAC6BoI,EAAKM,eAAeF,IAAY3M,KAAA,SAA1D8M,GACN,MAAMC,EAAsBD,EAAkBb,KAAMC,GAC5CA,EAAStI,SAAWzD,EAAW6M,OAEvC,GAAID,EAAY,CACfR,EAAKG,+BACJ5L,EAAiBkF,OACjB,KACApB,OAAO2H,EAAKzK,YAAYC,QAAQ,mCAChC,UAEF,CACAwK,EAAK1J,cAAcjB,YAAY,mBAAoBkL,EAAmB,EACvE,EAAC,SAAQG,GACR/P,EAAIuF,MAAM,cAAemC,OAAOqI,IAChCV,EAAKG,+BACJ5L,EAAiBkF,OACjB,KACApB,OAAO2H,EAAKzK,YAAYC,QAAQ,mCAChC,QAEF,GAAC,OAAAmC,QAAAC,QAAAyI,KAAA5M,KAAA4M,EAAA5M,KAAA,qBACF,CAAC,MAAAD,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAOO8M,eAAc,SAAAK,EAACC,GACtB,MAAMC,EAA8C,GACpD,MAAMC,EAA4B,GAClC,MAAMC,EAAoB3L,KAAKkB,cAAcmB,YAAY,oBAEzDoJ,EAAmBG,KAAK,IAAM5L,KAAK6L,WAAWL,IAC9CC,EAAmBG,KAAK,IAAM5L,KAAK8L,YAAYN,IAC/CC,EAAmBG,KAAK,IAAM5L,KAAK+L,eAAeP,IAGlDE,EAASE,KACRH,EAAmBO,OAAO,CAACC,EAAOC,IAC1BD,EAAM5N,KAAK,IAAM6N,KACtB3J,QAAQC,YAGZkJ,EAASE,KAAK5L,KAAKmM,YAAYX,IAE/B,OAAOjJ,QAAQ6J,IAAIV,GACjBrN,KAAK,IACEsN,GAEPU,MAAOC,IACP/Q,EAAIuF,MAAM,gBAAiBmC,OAAOqJ,IAClC,MAAO,IAEV,EAEQT,WAAU,SAAAU,EAACf,GAClB,OAAO,IAAIjJ,QAAeC,IACzB,MAAMmJ,EAAoB3L,KAAKkB,cAAcmB,YAAY,oBACzD,GACCmJ,GAAagB,MACbhB,GAAagB,KAAKhI,OAAS,GAC3BxE,KAAKqK,kBAAkBsB,EAAmB1I,OAAOjD,KAAKG,YAAYC,QAAQ,aACzE,CACDJ,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,aAAe,MACtEJ,KAAKK,UAAUoM,QAAQ,gBAAiB,aAAcjB,EAAYgB,MAClEhK,GACD,KAAO,CAENxC,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,aAAe,KACtEJ,KAAKkC,mBAAmB,WACxBM,GACD,GAEF,EAEQsJ,YAAW,SAAAY,EAAClB,GACnB,OAAO,IAAIjJ,QAAeC,IACzB,MAAMmJ,EAAoB3L,KAAKkB,cAAcmB,YAAY,oBACzD,GACCmJ,GAAamB,OACbnB,EAAYmB,MAAMnI,OAAS,GAC3BxE,KAAKqK,kBAAkBsB,EAAmB1I,OAAOjD,KAAKG,YAAYC,QAAQ,mBACzE,CACDJ,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,mBAAqB,MAC5EJ,KAAKK,UAAUoM,QAAQ,gBAAiB,cAAejB,EAAYmB,OACnEnK,GACD,KAAO,CAENxC,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,mBAAqB,KAC5EJ,KAAKkC,mBAAmB,iBACxBM,GACD,GAEF,EAEQuJ,eAAc,SAAAa,EAACpB,GACtB,OAAO,IAAIjJ,QAAeC,IACzB,MAAMmJ,EAAoB3L,KAAKkB,cAAcmB,YAAY,oBACzD,GACCmJ,GAAaqB,gBACbrB,EAAYqB,eAAerI,OAAS,GACpCxE,KAAKqK,kBAAkBsB,EAAmB1I,OAAOjD,KAAKG,YAAYC,QAAQ,WACzE,CACDJ,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,WAAa,MACpEJ,KAAKK,UAAUoM,QAAQ,gBAAiB,iBAAkBjB,EAAYqB,gBACtErK,GACD,KAAO,CAENxC,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,WAAa,KACpEJ,KAAKkC,mBAAmB,SACxBM,GACD,GAEF,EAEQ2J,YAAW,SAAAW,EAACtB,GACnB,OAAO,IAAIjJ,QAAeC,IACzB,MAAMmJ,EAAoB3L,KAAKkB,cAAcmB,YAAY,oBACzD,GACCmJ,GAAauB,OACbvB,EAAYuB,MAAMvI,OAAS,GAC3BxE,KAAKqK,kBAAkBsB,EAAmB1I,OAAOjD,KAAKG,YAAYC,QAAQ,mBACzE,CACDJ,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,mBAAqB,MAC5EJ,KAAKK,UAAUoM,QAAQ,gBAAiB,cAAejB,EAAYuB,OACnEvK,GACD,KAAO,CAENxC,KAAKQ,kBAAkByC,OAAOjD,KAAKG,YAAYC,QAAQ,mBAAqB,KAC5EJ,KAAKkC,mBAAmB,iBACxBM,GACD,GAEF,EAOQN,mBAAkB,SAAA8K,EAACC,EAAuBC,GACjD,MAAMC,EAAalK,OAAOjD,KAAKG,YAAYC,QAAQ6M,IACnD,MAAMtB,EAAoB3L,KAAKkB,cAAcmB,YAAY,oBACzD,MAAMkI,EAAWoB,EAAkByB,KAAK,SAAUC,GACjD,OAAOA,EAAKC,QAAUH,CACvB,GACA,GAAI5C,EAAU,CACb,GAAI2C,IAAeK,UAAW,CAC7BhD,EAAStI,OAASiL,EAAa1O,EAAW6M,MAAQ7M,EAAWgP,OAC9D,KAAO,CACNjD,EAAStI,OAASzD,EAAWiP,IAC9B,CAEA,GAAIlD,EAAStI,SAAWzD,EAAWgP,QAAS,CAC3CjD,EAASd,QAAU,KACpB,CACD,CACAzJ,KAAKQ,kBAAkB2M,GAAc,KACrC,MAAMO,EAAgBC,OAAOC,KAAK5N,KAAKQ,mBAEvC,MAAMqN,EAAWH,EAAcI,MAAOC,GAC9B/N,KAAKQ,kBAAkBuN,IAE/B,GAAIF,EAAU,CACb7N,KAAKgO,UAAU,mBAChB,CACD,EAOOC,iBAAgB,SAAAC,EAACC,GACvBnO,KAAKkB,cAAcjB,YAAY,mBAAoB,IACnDD,KAAKkB,cAAcjB,YAAY,2BAA4B,OAC3DD,KAAKkB,cAAcjB,YAAY,gBAAiB,OAEhD,GAAIkO,EAAQ,CACXnO,KAAKkB,cAAcjB,YAAY,eAAgB,UAC9CpD,EAAQuF,eAAepC,KAAK6E,QAAU,2BAA4CxB,SAAS,GAC7F,CACD,EAOc+K,mBAAkB,SAAAC,EAACC,GAA6B,IAA4B,MAAAC,EAElDvO,KAAI,OAAAuC,QAAAC,QAAAxE,EAAA,WADvC,OAAAuE,QAAAC,QACmC+L,EAAKhO,oBAAoBiO,aAAa,OAAKnQ,KAAA,SAA3EoQ,GAENH,EAAkBI,QAASC,IAC1B,IAAIpE,EACJ,GAAIoE,EAAiB5Q,QAAS,CAC7BwM,EAAWkE,EAAYrB,KAAMC,GAASA,EAAKtP,QAC5C,KAAO,CACNwM,EAAWkE,EAAYrB,KAAMC,GAASA,EAAK1H,KAAOgJ,EAAiBhJ,GACpE,CACA,GAAI4E,EAAU,CAEb,MAAMqE,EAASD,EAAiBE,gBAAgBC,OAAQC,GAChDxE,EAASsE,gBAAgBf,MAAOkB,GACtCA,EAAKC,WAAaD,EAAKE,YAAcH,EAAWG,UAAYF,EAAKG,QAAUJ,EAAWI,QAGxFR,EAAiBE,eAAiBD,CACnC,IAED,OAAON,CAAkB,EAC1B,EAAC,SAAQxN,GACRvF,EAAIuF,MAAM,8DAAgEmC,OAAOnC,IACjF,MAAO,EACR,GACD,CAAC,MAAA1C,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAEOgR,uBAAsB,SAAAC,EAACf,GAE9B,GAAIA,GAAqBA,EAAkB9J,OAAQ,CAClD,OAAOxE,KAAKoO,mBAAmBE,GAC7BjQ,KAAMiR,GAECtP,KAAKuP,qBAAqBD,IAEjCjD,MAAOC,IACP/Q,EAAIuF,MAAMmC,OAAOqJ,IACjB,MAAO,IAEV,CACA,OAAO/J,QAAQC,QAAQ,GACxB,EAEc+M,qBAAoB,SAAAC,EAACC,GAAqB,IACvD,MAAMC,EAAkB,WACvB,OAAOvS,EAAUwS,gBAAmC,qBAAqBtR,KAAK,SAAUuR,GACvF,OAAOA,EAAkBC,QAAQ,CAAEC,iCAAkC,OACtE,EACD,EAEA,MAAMC,EAAiB,SAAUC,EAAwBC,GACxD,MAAMC,EAA4C,GAClDD,GAAMvB,QAAQ,SAAUM,GACvB,IAAK,IAAImB,KAAcH,EAAa,CACnC,MAAMI,EAAcD,EACpB,MAAME,EAAcD,EAAYvB,eAAezB,KAAK,SAAUkD,GAC7D,OACCA,EAAYnB,QAAUH,EAAKG,OAC1BH,EAAKC,YACLqB,EAAYC,QACZvB,EAAKuB,QAAQC,SAAWF,EAAYC,OAAOC,QAC3CxB,EAAKuB,QAAQE,iBAAmBH,EAAYC,OAAOE,cAEtD,GACA,GAAIJ,EAAa,CAChBA,EAAYK,kBACX1B,EAAK0B,oBAAsB,WAAazN,OAAO+L,EAAK0B,mBAAqBzN,OAAOoN,EAAYK,mBAC7FR,EAAYtE,KAAKoD,EAAKC,WAAaD,EAAOqB,GAC1C,KACD,CACD,CACD,GACA,OAAOH,CACR,EAAE,OAAA3N,QAAAC,QAEWkN,IAAkBrR,KAAK,SAAU2R,GAC7C,OAAOP,EAAUkB,IAAI,SAAUpG,GAC9BA,EAASsE,eAAiBkB,EAAeC,EAAazF,EAASsE,gBAC/D,OAAOtE,CACR,EACD,GACD,CAAC,MAAAnM,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAQawS,mBAAkB,SAAAC,EAACC,GAAkB,IAAyB,IAAAC,EAAA,YAAAC,EAE7DhR,KAAI,SAAAiR,EAAAC,GAAA,OAAAH,EAAAG,EAQX3O,QAAQC,QAAQ,GAAG,OAAA2O,EAAA,cATtBL,GAAaA,EAAUtM,OAAS,EAAC,QAAAjC,QAAAC,QACvBwO,EAAKxP,qBAAqB4P,yBAAyB/S,KAAK,SAAUgT,GAC9E,OAAOP,EAAUhC,OAAO,SAAUwC,GACjC,OAAOD,EAAgBvC,OAAO,SAAUyC,GACvC,OAAOA,EAAcC,SAAWF,EAAcE,QAAUD,EAAcE,UAAYH,EAAcG,OACjG,GAAGjN,MACJ,EACD,IAAEnG,KAAA,SAAAqT,GAAAX,EAAA,YAAAW,CAAA,IAEuB,GAFvB,OAAAnP,QAAAC,QAAA2O,KAAA9S,KAAA8S,EAAA9S,KAAA4S,KAAAE,GAGJ,CAAC,MAAA/S,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAQauT,gBAAe,SAAAC,EAACC,GAA8B,IAAwC,IAAAC,EAAA,eAAAC,EAAAC,GAAA,OAAAF,EAAAE,EAkD5FzP,QAAQC,QAAQ,GAAG,CAjD1B,MAAMyP,EAAgB,SAAUC,EAAgCC,GAC/D,OAAOD,EAAe9E,KAAK,SAAUgF,GACpC,OACCA,EAAKC,kBACLD,EAAKC,iBAAiBC,yBACtBH,EAAM,iBACNC,EAAKC,iBAAiBC,wBAAwBC,OAASJ,EAAM,gBAAgBK,WAE/E,EACD,EAEA,MAAMC,EAAyB,SAAUC,EAAsBC,GAC9D,GAAIA,EAAY,CACf,OAAOD,EACLE,sBAAsB,CACtB,CACCrC,OAAQ,CACPE,eAAgBkC,EAAWlC,eAC3BD,OAAQmC,EAAWnC,WAIrBnS,KAAK,SAAUwU,GACf,OAAOA,EAAW,GAAGC,WAAa,KACnC,EACF,CACA,OAAOvQ,QAAQC,QAAQ,MACxB,EAAE,MAAAuQ,EAAA,cAEElB,GAAUA,EAAOrN,OAAS,EAAC,QAAAjC,QAAAC,QACjBD,QAAQ6J,IAAI,CACxBjP,EAAUwS,gBAA4C,8BACtDxS,EAAUwS,gBAA4B,gBACpCtR,KAAK,SAAU2U,GACjB,MAAMC,EAA6BD,EAAU,GAC7C,MAAME,EAAaF,EAAU,GAC7B,MAAMd,EAAiBe,EAA2BE,UAAUC,YAAc,GAE1E,OAAOvB,EAAO7F,OAAM,SAAkCqH,EAAmClB,GAAyB,OAAA5P,QAAAC,QACvE6Q,GAAOhV,KAAA,SAA3CiV,GACN,MAAMX,EAAaV,EAAcC,EAAgBC,GAAO,OAAA5P,QAAAC,QACnBiQ,EAAuBS,EAAYP,IAAWtU,KAAA,SAA7EkV,GACN,GAAIA,EAAwB,CAC3BD,EAAW1H,KAAKuG,EACjB,CACA,OAAOmB,CAAW,IACnB,EAAG/Q,QAAQC,QAAQ,IACpB,IAAEnE,KAAA,SAAAmV,GAAA1B,EAAA,YAAA0B,CAAA,IApBD,GAoBC,OAAAjR,QAAAC,QAAAuQ,KAAA1U,KAAA0U,EAAA1U,KAAA0T,KAAAgB,GAGJ,CAAC,MAAA3U,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAOOkK,aAAY,SAAAmL,EAACpL,GACpBrI,KAAK+K,+BAA+B5L,EAAiBkF,OAAQ,MAAO,GAAI,IACxErE,KAAKiO,mBACLjO,KAAKmC,YAAY2I,QAAQ,MAEzB,MAAM4I,EAAQrL,EAAOsL,aAAa,SAClC,MAAMC,EAAQF,GAAUA,EAAM,GAE9B,OAAO1T,KAAK6T,gBAAgBD,GAC1BvV,KAAMyV,IAEN,MAAMC,EAAsBC,OAAOC,KAClCC,mBAAmBJ,GAAcK,QAAQ,kBAAmB,SAAUC,EAAOC,GAC5E,OAAOpR,OAAOqR,aAAaC,SAASF,EAAI,IACzC,IAED,OAAOtV,EAAWyV,KAAKlV,GAAY,CAAEmV,YAAaV,IAAuB1V,KAAMqW,IAC9E,GAAIA,GAAcA,EAAgC5T,MAAO,CACxD,MAAM,IAAIuK,MAAOqJ,EAAgC5T,MAClD,CACA,GAAI4T,GAAcA,EAAkClN,OAAUkN,EAAkClN,MAAMhD,OAAQ,CAC7G,MAAMmQ,EAAyCD,EAA0BlN,MAAM,GAAGiN,YAGlF,MAAMjJ,EAAcoJ,KAAKC,MAAMF,GAC/B,GAAInJ,EAAYsJ,OAASd,OAAOe,SAASD,KAAM,CAC9C,MAAMxG,EAAqB9C,EAAY7K,UAA4B,GACnE2N,EAAkB1C,KAAK,CACtBjG,GAAIpG,GACJsP,eAAiBrD,EAAYmB,OAA8B,KAG5D,OAAO3M,KAAKgV,2BAA2B1G,EAAmB9C,EAC3D,KAAO,CACNxL,KAAK+K,+BACJ5L,EAAiBkF,OACjB,KACApB,OAAOjD,KAAKG,YAAYC,QAAQ,6BAChC,IAED,OAAOmC,QAAQC,SAChB,CACD,MAGD6J,MAAOC,IACP/Q,EAAIuF,MAAMmC,OAAOqJ,IACjBtM,KAAK+K,+BAA+B5L,EAAiBkF,OAAQ,KAAM,GAAI,MAEvE4Q,QAAQ,KACRjV,KAAKmC,YAAY2I,QAAQ,OACzB9K,KAAK4C,qBAAqBzD,EAAiBkF,SAE9C,EAEQ2Q,2BAA0B,SAAAE,EAAC5G,EAA+B9C,GACjE,OAAOjJ,QAAQ6J,IAAI,CAClBpM,KAAKoP,uBAAuBd,GAC5BtO,KAAK4Q,mBAAmBpF,EAAYqB,gBACpC7M,KAAK2R,gBAAgBnG,EAAYuB,OACjC/M,KAAKmV,oBACH9W,KAAM+W,IACR,MAAMC,EAAgBD,EAAU,GAChC,MAAME,EAAgBF,EAAU,GAChC,MAAM9B,EAAa8B,EAAU,GAC7B,MAAMG,EAAqBH,EAAU,GAAG/S,YAAY,cACpDmJ,EAAYgB,KAAO6I,EAAcvG,OAAO,SAAUvE,GACjD,OAAOA,EAAS5E,KAAOpG,EACxB,GACAiM,EAAYmB,OAEV0I,EAAcjI,KAAK,SAAU7C,GAC5B,OAAOA,EAAS5E,KAAOpG,EACxB,IAAM,CAAC,GACNsP,gBAAkB,GACrBrD,EAAYqB,eAAiByI,EAC7B9J,EAAYuB,MAAQuG,GAAc,GAClC,MAAMkC,EAAkBD,EAAqBE,OAAOnC,GAAY9O,QAChE,GAAIgR,EAAkB,GAAI,CACzBxV,KAAK+K,+BACJ5L,EAAiBkF,OACjB,KACApB,OAAOjD,KAAKG,YAAYC,QAAQ,gCAChC,GAEF,CACA,IAAIqP,EAAYzP,KAAK0V,oBAAoBlK,EAAarM,EAAiBkF,OAAQkR,GAC/E9F,EAAYA,EAAUkB,IAAI,SAAUpG,GACnCA,EAAStI,OAASzD,EAAWiP,KAC7B,OAAOlD,CACR,GACAvK,KAAKS,qBAAqBM,OAAOgB,KAAOyJ,EACxCxL,KAAKkB,cAAcjB,YAAY,mBAAoBwP,GACnDzP,KAAKkB,cAAcjB,YAAY,2BAA4BD,KAAK2V,oBAAoBlG,GAAWjL,OAAS,GACxGxE,KAAKkB,cAAcjB,YAAY,gBAAiBwP,EAAUjL,SAAW,IAEvE,EAEQqP,gBAAe,SAAA+B,EAAChC,GACvB,OAAO,IAAIrR,QAAQ,SAAUC,EAASe,GACrC,GAAIqQ,GAASI,OAAO6B,WAAY,CAC/B,MAAMC,EAAS,IAAID,WACnBC,EAAOC,OAAS,SAAUC,GACzB,MAAMzF,EAASyF,EAAMzF,OACrB/N,EAAQ+N,GAAQpS,OACjB,EAEA,MAAM8X,EAAOrC,EACbkC,EAAOI,WAAWD,EACnB,KAAO,CACN1S,EAAO,IAAI8H,MAAM,SAClB,CACD,EACD,EAEc8K,wBAAuB,SAAAA,IAAA,IAAkC,MAAAC,EACjEpW,KAAI,SAAAqW,IAAA,OAAA9T,QAAAC,QAMc4T,EAAKE,sBAAsBC,QAAMlY,KAAA,SAAAmY,GAAxDJ,EAAKK,SAAWD,GAA6C,CAAC,EAC9D,OAAOJ,EAAKK,QAAS,SAAAC,EAAA,eAPhBN,EAAKE,sBAAqB,QAAA/T,QAAAC,QACKtD,EAAmBoB,YACrDrB,EAAqBwC,mBAAmB2U,EAAK1U,aAC7CzC,EAAqB0C,kBAAkByU,EAAK1U,eAC5CrD,KAAA,SAAAsY,GAHDP,EAAKE,sBAAqBK,CAGxB,IAGkB,GAHlB,OAAApU,QAAAC,QAAAkU,KAAArY,KAAAqY,EAAArY,KAAAgY,KAAAK,GAIJ,CAAC,MAAAtY,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAEaqE,4BAA2B,SAAAmU,IAAA,IAAkB,MAAAC,EAC1D7W,KAAA6W,EAAKpT,YAAYqH,QAAQ,MAAM,OAAAvI,QAAAC,QACRqU,EAAKV,2BAAyB9X,KAAA,SAA/CoY,GAEN,OAAAlU,QAAAC,QACwDD,QAAQ6J,IAAI,CACnEyK,EAAKtW,oBAAoBiO,aAAa,MACtCqI,EAAKtW,oBAAoBuW,iBAAiB,KAAMD,EAAK1W,YAAYC,QAAQ,aACzEyW,EAAK1B,qBACJ9W,KAAA,SAAA0Y,GAAA,IAJKtI,EAAauI,EAAcC,GAAaF,EAM/C,MAAMtH,EAAYhB,EACjByI,EAAUzH,EAAUX,OAAO,SAAUvE,GACpC,OAAOA,EAAS5E,KAAOpG,IAAwBgL,EAASsE,gBAAgBrK,MACzE,GAED,MAAM2S,EACLF,GAAgBA,EAAa5U,YAAY,iBACrC4U,EAAa5U,YAAY,iBAA6BsO,IAAKwB,GACrDA,EAAMiF,mBAEb,GACJ,MAAMpM,EAAc,CACnBwB,KAAM0K,EACNvK,MAAOqK,EACPnK,eAAgB4J,EAAS5J,eACzBE,MAAOoK,EACPE,gBAAiBZ,GAElB,MAAMa,EAAkBT,EAAKnB,oBAAoB1K,EAAa7L,EAAiBoF,OAAQ,GACvFsS,EAAKpW,qBAAqBC,OAAOqB,KAAOiJ,EACxC6L,EAAKpW,qBAAqBC,OAAOC,SAAW2W,EAC5CT,EAAKpW,qBAAqBC,OAAOG,iBAAmBgW,EAAKlB,oBAAoB2B,GAAiB9S,OAAS,EACvGqS,EAAK3V,cAAcqW,UACnBV,EAAKpT,YAAYqH,QAAQ,MAAO,IACjC,CAAC,MAAA1M,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAQDuX,oBAAmB,SAAA6B,EAAC/H,GACnB,OACCA,EAAUX,OAAO,SAAUvE,GAC1B,OAAOA,EAASf,UAAYe,EAASd,OACtC,IAAM,EAER,EASAY,kBAAiB,SAAAoN,EAAC9W,EAA6B+W,GAC9C,MAAMC,EAAUhX,EAASyM,KAAK,SAAUwK,GACvC,OAAOA,EAAItK,QAAUoK,CACtB,GACA,SAAUC,GAAWA,EAAQnO,UAAYmO,EAAQlO,QAClD,EAUQiM,oBAAmB,SAAAmC,EAC1BC,EACA7T,EACAsR,GAEA,MAAMzE,GAAa7M,IAAU9E,EAAiBkF,OAASrE,KAAK+X,iBAAiBD,EAAMjL,gBAAkBiL,EAAMjL,iBAAmB,GAC7HmL,EACCF,EAAMtL,MACNsL,EAAMtL,KAAKlC,KAAK,SAAU2N,GACzB,OAAOA,GAAaA,EAAUpJ,gBAAkBoJ,EAAUpJ,eAAerK,OAAS,CACnF,GAEF,MAAO,CACN,CACC8I,MAAOtN,KAAKG,YAAYC,QAAQ,WAChCoJ,SAAUwO,EACVvO,QAASuO,GAEV,CACC1K,MAAOtN,KAAKG,YAAYC,QAAQ,SAChCoJ,SAAUsH,EAAUtM,OAAS,EAC7BiF,QAASqH,EAAUtM,OAAS,GAE7B,CACC8I,MAAOtN,KAAKG,YAAYC,QAAQ,iBAChCoJ,SAAUsO,EAAMnL,OAASmL,EAAMnL,MAAMnI,OAAS,EAC9CiF,QAASqO,EAAMnL,OAASmL,EAAMnL,MAAMnI,OAAS,GAE9C,CACC8I,MAAOtN,KAAKG,YAAYC,QAAQ,iBAChCoJ,SAAUsO,EAAM/K,OAAS+K,EAAM/K,MAAMvI,OAAS,GAAKsT,EAAM/K,MAAMvI,OAAS+Q,GAAsB,GAC9F9L,QAASqO,EAAM/K,OAAS+K,EAAM/K,MAAMvI,OAAS,GAAKsT,EAAM/K,MAAMvI,OAAS+Q,GAAsB,IAGhG,EAEQwC,iBAAgB,SAAAG,EAACC,GACxB,MAAMrH,EAAY9Q,KAAKyW,SAAS5J,gBAAkB,GAClD,GAAIiE,EAAUtM,SAAW2T,EAAkB3T,OAAQ,CAClD,OAAO2T,CACR,CACA,OAAOA,EAAkBrJ,OAAO,SAAUsJ,GACzC,OAAQtH,EAAU1D,KAAK,SAAUiL,GAChC,OAAOD,EAAc5G,SAAW6G,EAAS7G,QAAU4G,EAAc3G,UAAY4G,EAAS5G,OACvF,EACD,EACD,EAEc0D,gBAAe,SAAAmD,IAAA,IAAuB,MAAAC,EAElDvY,KAAI,OAAAuC,QAAAC,QAAAxE,EAAA,WADD,OAAAuE,QAAAC,QAC8BhH,EAA2BmU,mBAAiBtR,KAAA,SAAAma,GAA7ED,EAAKE,mBAAkBD,EAAuD,OAAAjW,QAAAC,QAC1C+V,EAAKE,mBAAmBC,wBAAsBra,KAAA,SAA5Esa,GACN,MAAM9G,EAAS8G,EAAsBtW,YAAY,UACjD,MAAMuW,EAAgB/G,EAAO/C,OAAO,SAAUqD,GAC7C,OAAOA,EAAM0G,UACd,GACAF,EAAsB1Y,YAAY,gBAAiB2Y,GACnD,OAAOD,CAAsB,IAC9B,EAAC,SAAQ7X,GAGR,MAAMA,CACP,GACD,CAAC,MAAA1C,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAKO6H,cAAa,SAAA6S,IACpB9Y,KAAK+K,+BAA+B5L,EAAiBoF,OAAQ,MAAO,GAAI,IACxE,MAAMwU,EAAkB/Y,KAAKkB,cAAcmB,YAAY,oBACtDiV,EAAkBtX,KAAKkB,cAAcmB,YAAY,oBACjD2I,EAAchL,KAAKS,qBAAqBC,OAAOqB,KAChD,MAAMiX,EAAqBhZ,KAAKiZ,qBAAqBjO,EAAasM,GAClElc,IAAIC,GAAG6d,QAAQ,CAAC,yBAA2BC,IAC1C,IACCA,EAAKC,KAAKxE,KAAKyE,UAAUL,GAAqBD,EAAiB,MAAO,aAAc,SACpF3c,EAAakd,KAAKrW,OAAOjD,KAAKG,YAAYC,QAAQ,qCACnD,CAAE,MAAOU,GACRvF,EAAIuF,MAAMA,aAAiBuK,MAAQvK,EAAMyY,QAAUtW,OAAOnC,IAC1D,GAAIA,aAAiBuK,OAASvK,GAAOyR,OAAShF,WAAazM,EAAMyR,OAAS,aAAc,CAEvFvS,KAAK+K,+BAA+B5L,EAAiBoF,OAAQ,KAAM,GAAI,GACxE,CACD,GAEF,EAEQ0U,qBAAoB,SAAAO,EAACC,EAAqCC,GACjE,MAAMC,EAAmBF,GAAYpC,gBACpC2B,EAAqB,CACpBlE,KAAMd,OAAOe,SAASD,KACtB8E,YAAa,IAAIC,KACjBlZ,SAAU,GACVmZ,UAAW,GACXnN,MAAO,GACPI,MAAO,GACPF,eAAgB,IAElB,GAAI7M,KAAKqK,kBAAkBqP,EAAgB1Z,KAAKG,YAAYC,QAAQ,YAAuB,CAC1F4Y,EAAmBrY,SAAW8Y,GAAYjN,MAAQ,GAClDwM,EAAmBc,UAAYH,GAAkBI,cAAgB,EAClE,CACA,GAAI/Z,KAAKqK,kBAAkBqP,EAAgB1Z,KAAKG,YAAYC,QAAQ,UAAqB,CACxF4Y,EAAmBnM,eAAiB8M,GAAkB9M,gBAAkB,EACzE,CACA,GAAI7M,KAAKqK,kBAAkBqP,EAAgB1Z,KAAKG,YAAYC,QAAQ,kBAA6B,CAChG4Y,EAAmBrM,MAAQ8M,GAAY9M,OAAS,EACjD,CACA,OAAOqM,CACR,EAUQjO,+BAA8B,SAAAiP,EAAC/V,EAAyBmH,EAAqB6O,EAAmBC,GACvG,MAAMC,EAAmBna,KAAKG,YAAYC,QAAQ6D,IAAU9E,EAAiBkF,OAAS,qBAAuB,sBAC7GrE,KAAKkB,cAAcjB,YAAY,IAAMgE,EAAQ,SAAUmH,EAAYmC,UAAW,MAC9EvN,KAAKkB,cAAcjB,YAAY,IAAMgE,EAAQ,gBAAiBgW,GAAaE,EAAkB5M,UAAW,MACxGvN,KAAKkB,cAAcjB,YAAY,IAAMgE,EAAQ,aAAciW,GAAc,QAAS3M,UAAW,MAC7FvN,KAAKyE,sBAAsBR,EAC5B,EAOQuC,wBAAuB,SAAA4T,EAAC/R,GAC/B,MAAMhC,EAAcgC,EAAOsL,aAAa,eACxC3T,KAAKsG,aAAeD,EACpBrG,KAAKkB,cAAcjB,YAAY,eAAgBoG,GAC/CrG,KAAKyD,YAAYW,WAAWiC,IAAgB,UAE5CrG,KAAK0C,WAAW0B,WAAWiC,IAAgB,UAC3CrG,KAAKsE,WAAWF,WAAWiC,IAAgB,UAC3CrG,KAAK0C,WAAWC,WAAW3C,KAAKS,qBAAqBM,OAAOF,kBAC5Db,KAAKsE,WAAW3B,WAAW3C,KAAKS,qBAAqBC,OAAOG,kBAC5Db,KAAKsE,WAAW3B,cAEd3C,KAAKS,qBAAqBC,OAAOE,UACjCZ,KAAKS,qBAAqBC,OAAOC,UACjCX,KAAKS,qBAAqBC,OAAOC,SAAS6D,OAAS,GACnDxE,KAAKS,qBAAqBC,OAAOG,kBAGpC,EAOQ0G,sBAAqB,SAAA8S,EAAChS,GAC7B,MAAMiS,EAAkCjS,EAAOsL,aAAa,UAAU4G,OACtE,MAAMC,EAASnS,EAAOoS,YACtB,IAAIC,EAAclc,EAAWiP,KAC7B,IAAIkN,EAAkB,GAGtB,IAAKL,IAAgBA,EAAY9V,OAAQ,CACxCkW,EAAclc,EAAW6M,MACzBsP,EAAkB1X,OAAOjD,KAAKG,YAAYC,QAAQ,yBACnD,CAGAoa,EAAOI,cAAcF,GACrBF,EAAOK,kBAAkBF,GACzB3a,KAAKkB,cAAcjB,YAAY,mBAAoBqa,GACnDta,KAAK4C,qBAAqBzD,EAAiBoF,OAC5C,EAEQsE,kBAAiB,SAAAiS,IACxB9a,KAAKK,UAAUoM,QAAQ,gBAAiB,gBACzC,EAOcsO,gCAA+B,SAAAA,IAAA,IAAG,MAAAC,EACxBhb,KAAI,OAAAuC,QAAAC,QAAJwY,EAAK7E,2BAAyB9X,KAAA,SAA/CoY,GACN,IAAKuE,EAAKC,6BAA8B,CACvC,MAAMC,EAAUF,EAAKnW,QAAU,gCAC/BmW,EAAKC,6BAA+B,IAAI1e,EAAM2e,EAAS,CACtD1V,WAAYwV,EAAK7a,YAAYC,QAAQ,gCACrCqF,SAAU,KACVC,WAAY,KACZL,QAAS,CACR,IAAI7I,EAAK,CACRmJ,GAAI,GAAGuV,wBACPnW,KAAMiW,EAAK7a,YAAYC,QAAQ,qCAEhC,IAAIxE,EAAK,CACR+J,GAAI,GAAGuV,cACPpW,MAAO,CACN,IAAIpJ,EAAS,CACZiK,GAAI,GAAGuV,uBACP1R,SAAUiN,EAAS0E,oBAAsB,KACzC5U,OAASyP,GAAUgF,EAAKI,8BAA8BpF,KAEvD,IAAIxZ,EAAK,CACRmJ,GAAI,GAAGuV,oBACPnW,KAAMiW,EAAK7a,YAAYC,QAAQ,0CAGjC2G,WAAYzI,EAAe+c,SACzBrW,cAAc,0BAEhBA,cAAc,sBAClB,CACA,OAAOgW,EAAKC,4BAA6B,EAC1C,CAAC,MAAA7c,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAOakE,gCAA+B,SAAAA,IAAA,IAAG,MAAAgZ,EAC/Ctb,KAAAsb,EAAKnZ,YAAY2I,QAAQ,MAAM,OAAAvI,QAAAC,QACO8Y,EAAK/a,oBAAoBgb,iBAAiB5c,EAAgB6c,iBAAend,KAAA,SAAzGod,GAAuB,SAAAC,IAK7BJ,EAAKnZ,YAAY2I,QAAQ,MAAO,OAAA6Q,EAAA,cAJ5BF,EAAuB,QAAAlZ,QAAAC,QACgB8Y,EAAKP,mCAAiC1c,KAAA,SAA1Eud,GACNN,EAAK1W,aAAa6C,QAAQmU,EAA6B,IAExB,GAFwB,OAAAD,KAAAtd,KAAAsd,EAAAtd,KAAAqd,KAAAC,EAAA,EAGzD,CAAC,MAAAvd,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,GAQagd,8BAA6B,SAAAS,EAAC7F,GAA2B,IAAE,MAAA8F,EAExE9b,KADA,MAAMmb,EAAqBnF,EAAMrC,aAAa,YAC9CmI,EAAKzb,UAAUoM,QAAQ,gBAAiB,+BAAgC,CAAE0O,uBAAsB,OAAA5Y,QAAAC,QACxEsZ,EAAK3F,2BAAyB9X,KAAA,SAAhD0d,QACDD,EAAKxF,sBAAsB0F,MAAM,IAAKD,EAAWZ,sBAAsB,EAC7E,CAAC,MAAA/c,GAAA,OAAAmE,QAAAgB,OAAAnF,EAAA,KAAAoB,GAAAL,mBAAA,OAt3CmBK,EAAqB","ignoreList":[]}