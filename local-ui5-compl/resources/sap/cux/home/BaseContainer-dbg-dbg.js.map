{"version":3,"file":"BaseContainer-dbg-dbg.js","names":["sap","ui","define","Button","FlexBox","HBox","IconTabBar","IconTabFilter","List","Popover","StandardListItem","Title","sap_m_library","Control","CustomData","UI5Element","Lib","__BaseContainerRenderer","__BasePanel","__MenuItem","___library","___utils_Device","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","BackgroundDesign","ButtonType","PlacementType","BaseContainerRenderer","BasePanel","MenuItem","LayoutType","calculateDeviceType","DeviceType","addFESRId","addFESRSemanticStepName","FESR_EVENTS","getFESRId","BaseContainer","extend","renderer","metadata","library","properties","title","type","group","defaultValue","visibility","layout","SideBySide","selectedKey","width","height","blocked","busy","busyIndicatorDelay","busyIndicatorSize","fieldGroupIds","visible","enableSettings","enableFullScreen","fullScreenName","defaultAggregation","aggregations","content","singularName","multiple","actionButtons","menuItems","associations","fullScreenButton","fullScreenMenuItem","events","onExpand","designtime","adjustLayout","_adjustLayout","constructor","_constructor","id","settings","Control.prototype.constructor.call","init","_init","_controlMap","Map","_commonHeaderElementStates","_i18nBundle","getResourceBundleFor","_createHeader","control","controlId","getId","isPanel","isA","hasContainerTitle","getProperty","trim","length","get","set","titleStyle","renderType","addStyleClass","justifyContent","items","alignItems","addDependent","_getHeader","_getInnerControl","_iconTabBar","_wrapper","_onPanelSelect","event","setProperty","getParameter","_updateContainerHeader","_setPanelCount","panel","count","_getIconTabFilter","setCount","_addToPanel","addContent","addItem","iconTabFilter","key","text","tooltip","addCustomData","value","writeToDom","SELECT","_getContent","forEach","onBeforeRendering","_onBeforeRendering","_createInnerControl","_addAllPanelContent","onAfterRendering","_onAfterRendering","_attachResizeHandler","getDomRef","_resizeObserver","disconnect","ResizeObserver","entries","_setDeviceType","observe","Horizontal","Vertical","setDirection","expandable","backgroundDesign","Transparent","headerMode","headerBackgroundDesign","select","removeAllItems","_updateHeader","isSideBySideLayout","isContainer","headerTitle","setText","setVisible","_addCommonHeaderElements","currentControl","_getSelectedPanel","targetControl","getAggregation","_addMenuItems","actionButton","_getHeaderButton","attachHeaderElements","elements","property","aggregation","headerElement","_getFullScreenMenuItem","_getHomeSettingsMenuItem","_getFullScreenButton","_ref","_getLayout","currentPropertyValue","previousPropertyValue","addAggregation","setAssociation","registerFullScreenElement","removeAggregation","removeAssociation","deregisterFullScreenElement","panels","getContent","menuItem","getText","icon","press","openSettingsDialog","toggleFullScreen","find","setSelectedKey","_getPanelContentWrapper","direction","_updatePanelHeader","header","isTitleVisible","toggleStyleClass","_setTitle","list","itemPress","getSource","getParent","close","menuPopover","placement","VerticalPreferredBottom","showHeader","menuButton","openBy","item","_getMenuListItem","headerButton","firePress","PRESS","button","setTooltip","getTooltip","setIcon","getIcon","getVisible","setEnabled","getEnabled","getElementById","getAssociation","getTitle","menuListItem","setTitle","toggleMenuListItem","_toggleMenuListItem","show","removeContent","_removeContent","undefined","getWidth","_getWidth","toggleActionButtons","_toggleActionButtons","visibilityChanged","getActionButtons","currentVisibility","toggleFullScreenElements","_toggleFullScreenElements","element","isElementExpanded","fullScreenMenuButton","isPhone","getDeviceType","Mobile","elementVisibilityChanged","fullScreenElement","elementKey","getKey","entry","contentRect","deviceType","_deviceType","_getDeviceType"],"sources":["BaseContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport List from \"sap/m/List\";\nimport Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Title from \"sap/m/Title\";\nimport { BackgroundDesign, ButtonType, PlacementType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { CSSSize } from \"sap/ui/core/library\";\nimport { $BaseContainerSettings } from \"./BaseContainer\";\nimport BaseContainerRenderer from \"./BaseContainerRenderer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BasePanel from \"./BasePanel\";\nimport MenuItem from \"./MenuItem\";\nimport { LayoutType } from \"./library\";\nimport { calculateDeviceType, DeviceType } from \"./utils/Device\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS, getFESRId } from \"./utils/FESRUtil\";\n\n/**\n *\n * Abstract base class for My Home layout control container.\n *\n * @extends sap.ui.core.Control\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BaseContainer\n */\nexport default abstract class BaseContainer extends Control {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _controlMap!: Map<string, Control | UI5Element>;\n\tprivate _wrapper!: FlexBox;\n\tprivate _iconTabBar!: IconTabBar;\n\tprivate _commonHeaderElementStates!: Map<string, boolean>;\n\tprivate _resizeObserver!: ResizeObserver;\n\tprivate _deviceType!: DeviceType;\n\tpublic adjustLayout() {}\n\n\tconstructor(id?: string | $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title of the container.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Layout type of the container.\n\t\t\t */\n\t\t\tlayout: {\n\t\t\t\ttype: \"sap.cux.home.LayoutType\",\n\t\t\t\tgroup: \"Data\",\n\t\t\t\tdefaultValue: LayoutType.SideBySide,\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * Key of the selected panel of the container.\n\t\t\t */\n\t\t\tselectedKey: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Width to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", defaultValue: \"100%\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Height to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\theight: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Whether the control is currently in blocked state.\n\t\t\t */\n\t\t\tblocked: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Whether the layout is currently in busy state.\n\t\t\t */\n\t\t\tbusy: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The delay in milliseconds, after which the busy indicator will show up for this control.\n\t\t\t */\n\t\t\tbusyIndicatorDelay: { type: \"int\", defaultValue: 1000, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The size of the BusyIndicator.\n\t\t\t */\n\t\t\tbusyIndicatorSize: { type: \"sap.ui.core.BusyIndicatorSize\", defaultValue: \"Medium\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The IDs of a logical field group that this control belongs to.\n\t\t\t */\n\t\t\tfieldGroupIds: { type: \"string[]\", defaultValue: [], visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The visible property of the container.\n\t\t\t */\n\t\t\tvisible: { type: \"boolean\", group: \"Appearance\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether home settings are enabled for this control.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t * This property specifies the parameter key expected in the URL query string\n\t\t\t * to identify the container to be expanded.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * The container content aggregation which should be of type BasePanel.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcontent: { type: \"sap.cux.home.BasePanel\", singularName: \"content\", multiple: true, visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation contains the actions that should be displayed within the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation holds the items that should be shown within the dropdown menu of the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\", visibility: \"public\" }\n\t\t},\n\t\tassociations: {\n\t\t\tlayout: { type: \"sap.cux.home.BaseLayout\", multiple: false, singularName: \"layout\", visibility: \"hidden\" },\n\t\t\tfullScreenButton: { type: \"sap.m.Button\", multiple: false, singularName: \"fullScreenButton\", visibility: \"hidden\" },\n\t\t\tfullScreenMenuItem: { type: \"sap.cux.home.MenuItem\", multiple: false, singularName: \"fullScreenMenuItem\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired before the container is expanded.\n\t\t\t */\n\t\t\tonExpand: {}\n\t\t},\n\t\tdesigntime: true\n\t};\n\n\tstatic renderer: typeof BaseContainerRenderer = BaseContainerRenderer;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._controlMap = new Map();\n\t\tthis._commonHeaderElementStates = new Map();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t\tthis._createHeader(this);\n\t}\n\n\t/**\n\t * Creates and returns header for both container as well as panels\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be a container or a panel\n\t * @returns {HBox} header for the given container or panel\n\t */\n\tprivate _createHeader(control: BaseContainer | BasePanel): HBox {\n\t\tconst controlId = control.getId();\n\t\tconst id = `${controlId}-header`;\n\t\tconst isPanel = control.isA(\"sap.cux.home.BasePanel\");\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\t//create header elements\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-title`,\n\t\t\t\tnew Title(`${controlId}-title`, { titleStyle: isPanel && hasContainerTitle ? \"H6\" : \"H4\" })\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentLeft`,\n\t\t\t\tnew HBox(`${controlId}-contentLeft`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentRight`,\n\t\t\t\tnew HBox(`${controlId}-contentRight`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-content`,\n\t\t\t\tnew HBox(`${controlId}-content`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentLeft`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentRight`) as Control\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t);\n\n\t\t\t//create header container\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew HBox(`${controlId}-header`, {\n\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-title`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-content`) as Control\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis.addDependent(this._controlMap.get(id) as Control);\n\t\t}\n\n\t\t//add control-specific styling\n\t\t(this._controlMap.get(id) as HBox)?.addStyleClass(isPanel && hasContainerTitle ? \"sapCuxPanelHeader\" : \"sapUiContainerHeader\");\n\n\t\treturn this._controlMap.get(id) as HBox;\n\t}\n\n\t/**\n\t * Returns container header\n\t *\n\t * @private\n\t * @returns {Object} container header\n\t */\n\tpublic _getHeader(): HBox {\n\t\treturn this._controlMap.get(`${this.getId()}-header`) as HBox;\n\t}\n\n\t/**\n\t * Returns inner control corresponding to the specified layout\n\t *\n\t * @private\n\t * @returns {IconTabBar | FlexBox} inner control based on the layout\n\t */\n\tpublic _getInnerControl(): IconTabBar | FlexBox {\n\t\treturn this.getProperty(\"layout\") === LayoutType.SideBySide ? this._iconTabBar : this._wrapper;\n\t}\n\n\t/**\n\t * Handler for selection of panel in SideBySide layout\n\t *\n\t * @private\n\t * @param {Event} event - event object\n\t */\n\tprotected _onPanelSelect(event: IconTabBar$SelectEvent) {\n\t\t//suppress invalidation to prevent container re-rendering. render the specific header element instead\n\t\tthis.setProperty(\"selectedKey\", event.getParameter(\"selectedKey\"), true);\n\t\tthis._updateContainerHeader(this);\n\t}\n\n\t/**\n\t * Updates the count information of IconTabFilter of IconTabBar inner control\n\t * in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - associated panel\n\t * @param {string} count - updated count\n\t */\n\tpublic _setPanelCount(panel: BasePanel, count?: string) {\n\t\tif (this.getProperty(\"layout\") === LayoutType.SideBySide) {\n\t\t\tthis._getIconTabFilter(panel).setCount(count);\n\t\t}\n\t}\n\n\t/**\n\t * Adds corresponding control to panel. The control would be added to the\n\t * corresponding target inner control based on the layout.\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel to which control must be added\n\t * @param {Control} control - control to be added\n\t */\n\tpublic _addToPanel(panel: BasePanel, control: Control): void {\n\t\tif (this.getProperty(\"layout\") === LayoutType.SideBySide) {\n\t\t\tthis._getIconTabFilter(panel)?.addContent(control);\n\t\t} else {\n\t\t\t(this._controlMap.get(`${panel.getId()}-wrapper`) as FlexBox)?.addItem(control);\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns IconTabBarFilter for the specified panel to be placed\n\t * in the IconTabBar inner control in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel whose icon tab filter must be fetched\n\t * @returns {IconTabFilter} IconTabFilter for the specified panel\n\t */\n\tprivate _getIconTabFilter(panel: BasePanel): IconTabFilter {\n\t\tconst id = `${panel.getId()}-tabFilter`;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst iconTabFilter = new IconTabFilter(id, {\n\t\t\t\tkey: panel.getProperty(\"key\") as string,\n\t\t\t\ttext: panel.getProperty(\"title\") as string,\n\t\t\t\ttooltip: panel.getProperty(\"tooltip\") as string\n\t\t\t});\n\t\t\ticonTabFilter.addCustomData(\n\t\t\t\tnew CustomData({\n\t\t\t\t\tkey: \"sap-ui-fastnavgroup\",\n\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\twriteToDom: true\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(id, iconTabFilter);\n\t\t\taddFESRSemanticStepName(iconTabFilter, FESR_EVENTS.SELECT, panel.getProperty(\"key\") as string);\n\t\t}\n\n\t\t//Add panel content to the created filter\n\t\tpanel._getContent()?.forEach((content) => (this._controlMap.get(id) as IconTabFilter).addContent(content));\n\n\t\treturn this._controlMap.get(id) as IconTabFilter;\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onBeforeRendering(): void {\n\t\t//create layout-specific inner control\n\t\tthis._createInnerControl();\n\n\t\t//fetch and update container header\n\t\tthis._updateContainerHeader(this);\n\n\t\t//add content from all panels to inner control\n\t\tthis._addAllPanelContent();\n\t}\n\n\t/**\n\t * onAfterRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onAfterRendering(): void {\n\t\tthis._attachResizeHandler();\n\t}\n\n\t/**\n\t * Attaches a resize handler to the container to adjust\n\t * the layout based on device size changes.\n\t *\n\t * @private\n\t */\n\tprivate _attachResizeHandler() {\n\t\tif (this.getDomRef()) {\n\t\t\tthis._resizeObserver?.disconnect();\n\t\t\tthis._resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tthis._setDeviceType(entries);\n\t\t\t\tthis.adjustLayout();\n\t\t\t});\n\t\t\tthis._resizeObserver?.observe(this.getDomRef() as Element);\n\t\t}\n\t}\n\n\t/**\n\t * Create inner control for storing content from panel\n\t *\n\t * @private\n\t */\n\tprivate _createInnerControl(): void {\n\t\tconst layout = this.getProperty(\"layout\") as LayoutType;\n\n\t\tif (layout === LayoutType.Horizontal || layout === LayoutType.Vertical) {\n\t\t\tif (!this._wrapper) {\n\t\t\t\tthis._wrapper = new FlexBox(`${this.getId()}-wrapper`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\trenderType: \"Bare\"\n\t\t\t\t}).addStyleClass(\"sapCuxBaseWrapper\");\n\t\t\t\tthis.addDependent(this._wrapper);\n\t\t\t}\n\t\t\tthis._wrapper.setDirection(layout === LayoutType.Horizontal ? \"Row\" : \"Column\");\n\t\t} else if (!this._iconTabBar) {\n\t\t\tthis._iconTabBar = new IconTabBar(`${this.getId()}-iconTabBar`, {\n\t\t\t\texpandable: true,\n\t\t\t\tbackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\theaderMode: \"Inline\",\n\t\t\t\theaderBackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\tselect: (event: Event) => this._onPanelSelect(event)\n\t\t\t});\n\t\t\tthis.addDependent(this._iconTabBar);\n\t\t}\n\t}\n\n\t/**\n\t * Update container header information\n\t *\n\t * @private\n\t */\n\tpublic _updateContainerHeader(control: BaseContainer | BasePanel): void {\n\t\t//clear container header elements\n\t\t(this._controlMap.get(control.getId() + \"-header-contentLeft\") as HBox)?.removeAllItems();\n\t\t(this._controlMap.get(control.getId() + \"-header-contentRight\") as HBox)?.removeAllItems();\n\n\t\t//update container header elements\n\t\tthis._updateHeader(control);\n\t}\n\n\t/**\n\t * Updates header information of a specified container or a panel\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be container or panel\n\t */\n\tprivate _updateHeader(control: BaseContainer | BasePanel): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"layout\") === LayoutType.SideBySide;\n\t\tconst isContainer = control.isA(\"sap.cux.home.BaseContainer\");\n\n\t\t//Update Title\n\t\tconst headerTitle = this._controlMap.get(control.getId() + \"-header-title\") as Title;\n\t\theaderTitle?.setText(control.getProperty(\"title\") as string);\n\t\theaderTitle?.setVisible((control.getProperty(\"title\") as string)?.trim().length > 0);\n\n\t\t//Add common header elements\n\t\tthis._addCommonHeaderElements();\n\n\t\tconst currentControl = isContainer && isSideBySideLayout ? this._getSelectedPanel() : control;\n\t\tconst targetControl = !isContainer && isSideBySideLayout ? this : control;\n\n\t\t//Update Menu Items\n\t\tconst menuItems = (currentControl?.getAggregation(\"menuItems\") || []) as MenuItem[];\n\t\tif (menuItems.length > 0) {\n\t\t\tthis._addMenuItems(targetControl, menuItems);\n\t\t}\n\n\t\t//Update Action Buttons\n\t\t(currentControl?.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton: Button) => {\n\t\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentRight\") as HBox)?.addItem(this._getHeaderButton(actionButton));\n\t\t});\n\t}\n\n\t/**\n\t * Attaches common header elements like settings menu and full screen action to each\n\t * panel in the container, if enabled.\n\t *\n\t * @private\n\t */\n\tprivate _addCommonHeaderElements(): void {\n\t\tconst attachHeaderElements = (control: BaseContainer | BasePanel) => {\n\t\t\tconst elements = [\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"menuItems\", headerElement: this._getFullScreenMenuItem(control) },\n\t\t\t\t{ property: \"enableSettings\", aggregation: \"menuItems\", headerElement: this._getHomeSettingsMenuItem(control) },\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"actionButtons\", headerElement: this._getFullScreenButton(control) }\n\t\t\t];\n\n\t\t\telements.forEach(({ property, aggregation, headerElement }) => {\n\t\t\t\tconst layout = this._getLayout();\n\t\t\t\tconst currentPropertyValue = control.getProperty(property) as boolean;\n\t\t\t\tconst previousPropertyValue = this._commonHeaderElementStates.get(`${headerElement.getId()}-${property}`);\n\n\t\t\t\t//update common header elements only if there's a change in property value\n\t\t\t\tif (currentPropertyValue !== previousPropertyValue) {\n\t\t\t\t\tif (currentPropertyValue) {\n\t\t\t\t\t\tthis._commonHeaderElementStates.set(`${headerElement.getId()}-${property}`, currentPropertyValue);\n\t\t\t\t\t\tcontrol.addAggregation(aggregation, headerElement);\n\n\t\t\t\t\t\t//register full screen element with layout\n\t\t\t\t\t\tif (property === \"enableFullScreen\") {\n\t\t\t\t\t\t\tif (aggregation === \"actionButtons\") {\n\t\t\t\t\t\t\t\tcontrol.setAssociation(\"fullScreenButton\", headerElement, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (aggregation === \"menuItems\") {\n\t\t\t\t\t\t\t\tcontrol.setAssociation(\"fullScreenMenuItem\", headerElement, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlayout?.registerFullScreenElement(control);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._commonHeaderElementStates.set(`${headerElement.getId()}-${property}`, currentPropertyValue);\n\t\t\t\t\t\tcontrol.removeAggregation(aggregation, headerElement);\n\n\t\t\t\t\t\t//deregister full screen element with layout\n\t\t\t\t\t\tif (property === \"enableFullScreen\") {\n\t\t\t\t\t\t\tif (aggregation === \"actionButtons\") {\n\t\t\t\t\t\t\t\tcontrol.removeAssociation(\"fullScreenButton\", headerElement, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (aggregation === \"menuItems\") {\n\t\t\t\t\t\t\t\tcontrol.removeAssociation(\"fullScreenMenuItem\", headerElement, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlayout?.deregisterFullScreenElement(control);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Add common header elements for container\n\t\tattachHeaderElements(this);\n\n\t\t// Add common header elements for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(attachHeaderElements);\n\t}\n\n\t/**\n\t * Retrieves the my home settings menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getHomeSettingsMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-settings`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst menuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\t\ticon: \"sap-icon://user-settings\",\n\t\t\t\tpress: () => {\n\t\t\t\t\t//open settings dialog\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.openSettingsDialog();\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(menuItem, \"myHomeSettings\");\n\t\t\tthis._controlMap.set(id, menuItem);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Retrieves the full screen menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getFullScreenMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-showMore`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenMenuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ticon: \"sap-icon://display-more\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(panel);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenMenuItem, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenMenuItem);\n\t\t}\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Generates a full screen action button for a given control, which can be a panel or a container.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control for which the full screen button is generated.\n\t * @returns {Button} A Button instance configured to toggle full screen mode for the specified control.\n\t */\n\tprivate _getFullScreenButton(control: BaseContainer | BasePanel): Button {\n\t\tconst id = `${control.getId()}-fullScreen`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenButton = new Button(id, {\n\t\t\t\ttext: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(control);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenButton, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenButton);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as Button;\n\t}\n\n\t/**\n\t * Returns the selected panel in the IconTabBar inner control in\n\t * case of SideBySide layout\n\t *\n\t * @private\n\t * @returns {BasePanel} selected panel\n\t */\n\tpublic _getSelectedPanel(): BasePanel {\n\t\tconst panel =\n\t\t\tthis.getContent()?.find((panel) => panel.getProperty(\"key\") === this.getProperty(\"selectedKey\")) || this.getContent()?.[0];\n\t\tthis.setProperty(\"selectedKey\", panel?.getProperty(\"key\"), true);\n\n\t\treturn panel;\n\t}\n\n\t/**\n\t * Add content from all panels to the layout-specific inner control\n\t *\n\t * @private\n\t */\n\tprivate _addAllPanelContent(): void {\n\t\tconst panels = this.getContent() || [];\n\n\t\tif (this.getProperty(\"layout\") === LayoutType.SideBySide) {\n\t\t\tthis._iconTabBar.removeAllItems();\n\t\t\tpanels.forEach((panel) => this._iconTabBar.addItem(this._getIconTabFilter(panel)));\n\t\t\tthis._iconTabBar.setSelectedKey(this.getProperty(\"selectedKey\") as string);\n\t\t} else {\n\t\t\tthis._wrapper.removeAllItems();\n\t\t\tpanels.forEach((panel) => this._wrapper.addItem(this._getPanelContentWrapper(panel)));\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a wrapper for containing the specified panel\n\t * content in case of Horizontal and Vertical layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel for which wrapper has to created\n\t * @returns {FlexBox} wrapper container for the given panel\n\t */\n\tprotected _getPanelContentWrapper(panel: BasePanel): FlexBox {\n\t\tconst id = `${panel.getId()}-contentWrapper`;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew FlexBox(id, {\n\t\t\t\t\tdirection: \"Column\",\n\t\t\t\t\trenderType: \"Bare\"\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\t//Add header as the first item in case of Horizontal and Vertical layout\n\t\t(this._controlMap.get(id) as FlexBox).addItem(this._updatePanelHeader(panel));\n\t\tpanel._getContent()?.forEach((content) => (this._controlMap.get(id) as FlexBox).addItem(content));\n\n\t\treturn this._controlMap.get(id) as FlexBox;\n\t}\n\n\t/**\n\t * Returns header of the specified panel after updating it\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel to be updated\n\t * @returns {HBox} header associated with the panel\n\t */\n\tprivate _updatePanelHeader(panel: BasePanel): HBox {\n\t\tconst header = this._createHeader(panel);\n\t\tconst isTitleVisible = (panel.getProperty(\"title\") as string)?.trim().length > 0;\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\t//update panel header elements\n\t\tthis._updateContainerHeader(panel);\n\n\t\t//add header styling only if any of the header elements are visible\n\t\theader.toggleStyleClass(\n\t\t\t\"sapCuxPanelHeader\",\n\t\t\thasContainerTitle &&\n\t\t\t\t(isTitleVisible ||\n\t\t\t\t\t(panel.getAggregation(\"menuItems\") as MenuItem[])?.length > 0 ||\n\t\t\t\t\t(panel.getAggregation(\"actionButtons\") as Button[])?.length > 0)\n\t\t);\n\n\t\treturn header;\n\t}\n\n\t/**\n\t * Setter for container title\n\t *\n\t * @private\n\t * @param {string} title - updated title\n\t * @returns {BaseContainer} BaseContainer instance for chaining\n\t */\n\tpublic _setTitle(title: string): BaseContainer {\n\t\t//suppress invalidate to prevent container re-rendering. re-render only the concerned element\n\t\tthis.setProperty(\"title\", title, true);\n\t\t(this._controlMap.get(`${this.getId()}-header-title`) as Title).setText(title);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds menu items to a control and sets up a menu button to display them.\n\t * If the menu for the control doesn't exist, it creates a new one.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control to which the menu items will be added.\n\t * @param {MenuItem[]} menuItems - An array of menu items to be added to the menu.\n\t */\n\tprivate _addMenuItems(control: BaseContainer | BasePanel, menuItems: MenuItem[]): void {\n\t\tif (!this._controlMap.get(`${control.getId()}-menu`)) {\n\t\t\t//create menu list\n\t\t\tconst list = new List(`${control.getId()}-list`, {\n\t\t\t\titemPress: (event) => (event.getSource<List>().getParent() as Popover).close()\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu`, list);\n\n\t\t\t//create menu popover\n\t\t\tconst menuPopover = new Popover(`${control.getId()}-popover`, {\n\t\t\t\tplacement: PlacementType.VerticalPreferredBottom,\n\t\t\t\tshowHeader: false,\n\t\t\t\tcontent: [list]\n\t\t\t});\n\n\t\t\t//create menu button\n\t\t\tconst menuButton = new Button(`${control.getId()}-menu-btn`, {\n\t\t\t\ticon: \"sap-icon://slim-arrow-down\",\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\tpress: (event) => menuPopover.openBy(event.getSource<Button>())\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu-btn`, menuButton);\n\t\t}\n\n\t\t//add menu button to header\n\t\t(this._controlMap.get(control.getId() + \"-header-contentLeft\") as HBox)?.addItem(\n\t\t\tthis._controlMap.get(`${control.getId()}-menu-btn`) as Button\n\t\t);\n\n\t\t//Clear existing menu items and add new ones\n\t\t(this._controlMap.get(`${control.getId()}-menu`) as List).removeAllItems();\n\t\tmenuItems.forEach((item) => (this._controlMap.get(`${control.getId()}-menu`) as List).addItem(this._getMenuListItem(item)));\n\t}\n\n\t/**\n\t * Creates and returns a button for the corresponding header ActionButton\n\t *\n\t * @private\n\t * @param {Button} headerButton - ActionButton element\n\t * @returns {Button} Button instance created for the header element\n\t */\n\tprivate _getHeaderButton(headerButton: Button): Button {\n\t\tconst id = `${headerButton.getId()}-btn`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Button(id, {\n\t\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\t\tpress: () => headerButton.firePress()\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(this._controlMap.get(id) as Button, FESR_EVENTS.PRESS, getFESRId(headerButton));\n\t\t}\n\n\t\t//Update button details\n\t\tconst button = this._controlMap.get(id) as Button;\n\t\tbutton.setText(headerButton.getText());\n\t\tbutton.setTooltip(headerButton.getTooltip() as string);\n\t\tbutton.setIcon(headerButton.getIcon());\n\t\tbutton.setVisible(headerButton.getVisible());\n\t\tbutton.setEnabled(headerButton.getEnabled());\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Retrieves the layout associated with the container, if available.\n\t *\n\t * @private\n\t * @returns {BaseLayout} The layout associated with the BaseContainer.\n\t */\n\tpublic _getLayout(): BaseLayout {\n\t\treturn UI5Element.getElementById(this.getAssociation(\"layout\", null) as string) as BaseLayout;\n\t}\n\n\t/**\n\t * Retrieves or creates a menu list item for a given menu item.\n\t *\n\t * @private\n\t * @param {MenuItem} menuItem - The menu item for which to retrieve or create a list item.\n\t * @returns {StandardListItem} The menu list item associated with the provided menu item.\n\t */\n\tprivate _getMenuListItem(menuItem: MenuItem): StandardListItem {\n\t\tif (!this._controlMap.get(`${menuItem.getId()}-listItem`)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${menuItem.getId()}-listItem`,\n\t\t\t\tnew StandardListItem(`${menuItem.getId()}-listItem`, {\n\t\t\t\t\ttype: \"Active\",\n\t\t\t\t\ticon: menuItem.getIcon(),\n\t\t\t\t\ttitle: menuItem.getTitle(),\n\t\t\t\t\tpress: (event) => menuItem.firePress({ button: event.getSource<Button>() })\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(\n\t\t\t\tthis._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem,\n\t\t\t\tFESR_EVENTS.PRESS,\n\t\t\t\tgetFESRId(menuItem)\n\t\t\t);\n\t\t}\n\t\t//Update list item details\n\t\tconst menuListItem = this._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem;\n\t\tmenuListItem.setIcon(menuItem.getIcon());\n\t\tmenuListItem.setTitle(menuItem.getTitle());\n\t\tmenuListItem.setVisible(menuItem.getVisible());\n\t\treturn menuListItem;\n\t}\n\n\t/**\n\t * Toggles the visibility of menu Item.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the menu item.\n\t * @returns {void}\n\t */\n\tpublic toggleMenuListItem(menuItem: MenuItem, show: boolean): void {\n\t\tif (menuItem) {\n\t\t\tconst menuListItem = this._getMenuListItem(menuItem);\n\t\t\tmenuListItem?.setVisible(show);\n\t\t}\n\t}\n\n\tpublic removeContent(panel: BasePanel) {\n\t\tif (this.getProperty(\"selectedKey\") && this.getProperty(\"selectedKey\") === panel.getProperty(\"key\")) {\n\t\t\tthis.setProperty(\"selectedKey\", undefined, true);\n\t\t}\n\t\tthis.removeAggregation(\"content\", panel);\n\t}\n\n\t/**\n\t * Gets current value of property \"width\".\n\t *\n\t * Default value is: \"100%\"\n\t * @returns {CSSSize} Value of property \"width\"\n\t */\n\tpublic getWidth(): CSSSize {\n\t\treturn this.getProperty(\"width\") as CSSSize;\n\t}\n\n\t/**\n\t * Toggles the visibility of action buttons within the container and/or its inner panels.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the action buttons.\n\t * @returns {void}\n\t */\n\tpublic toggleActionButtons(show: boolean): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"layout\") === LayoutType.SideBySide;\n\t\tlet visibilityChanged = false;\n\t\tconst toggleActionButtons = (control: BaseContainer | BasePanel) => {\n\t\t\tcontrol.getActionButtons()?.forEach((actionButton) => {\n\t\t\t\tconst currentVisibility = actionButton.getVisible();\n\t\t\t\tif (currentVisibility !== show) {\n\t\t\t\t\tactionButton.setProperty(\"visible\", show, true);\n\t\t\t\t\tvisibilityChanged = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!isSideBySideLayout && visibilityChanged) {\n\t\t\t\tthis._updateContainerHeader(control);\n\t\t\t}\n\t\t};\n\n\t\t// Toggle action buttons for container\n\t\ttoggleActionButtons(this);\n\n\t\t// Toggle action buttons for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(toggleActionButtons);\n\n\t\t// Update Header Container if required\n\t\tif (isSideBySideLayout && visibilityChanged) {\n\t\t\tthis._updateContainerHeader(this);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of the full screen button for the specified element.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element for which to toggle the full screen button.\n\t * @param {boolean} show - Indicates whether to show or hide the full screen button.\n\t * @param {boolean} isElementExpanded - Indicates whether the element is expanded.\n\t */\n\tpublic toggleFullScreenElements(element: BaseContainer | BasePanel, show: boolean, isElementExpanded: boolean): void {\n\t\tconst fullScreenButton = UI5Element.getElementById(element.getAssociation(\"fullScreenButton\", null) as string) as Button;\n\t\tconst fullScreenMenuButton = UI5Element.getElementById(element.getAssociation(\"fullScreenMenuItem\", null) as string) as MenuItem;\n\t\tconst isSideBySideLayout = this.getProperty(\"layout\") === LayoutType.SideBySide;\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tlet elementVisibilityChanged = false;\n\t\t[fullScreenButton, fullScreenMenuButton].forEach((fullScreenElement: Button | MenuItem) => {\n\t\t\tif (fullScreenElement && show !== fullScreenElement.getVisible()) {\n\t\t\t\telementVisibilityChanged = true;\n\t\t\t\tshow = !isPhone ? show : false;\n\t\t\t\tfullScreenElement.setProperty(\"visible\", isElementExpanded ? true : show, true);\n\t\t\t}\n\t\t});\n\t\tconst elementKey = element instanceof BasePanel && element.getKey();\n\t\tif (elementVisibilityChanged && (!isSideBySideLayout || (isSideBySideLayout && this.getProperty(\"selectedKey\") === elementKey))) {\n\t\t\tthis._updateContainerHeader(element);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the device type based on the width of the container element.\n\t *\n\t * @private\n\t * @param {ResizeObserverEntry[]} entries - The entries returned by the ResizeObserver.\n\t * @returns {void}\n\t */\n\tprivate _setDeviceType(entries: ResizeObserverEntry[]): void {\n\t\tconst [entry] = entries;\n\t\tconst width = entry?.contentRect.width;\n\t\tconst deviceType = calculateDeviceType(width);\n\n\t\tif (this._deviceType !== deviceType) {\n\t\t\tthis._deviceType = deviceType;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the device type for the current instance.\n\t *\n\t * @private\n\t * @returns {DeviceType} - The device type. If the device type is not set, it calculates\n\t * and returns the device type based on the current device width.\n\t */\n\tpublic getDeviceType(): DeviceType {\n\t\treturn this._deviceType || calculateDeviceType();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}