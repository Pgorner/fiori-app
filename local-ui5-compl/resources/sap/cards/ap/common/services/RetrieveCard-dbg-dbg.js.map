{"version":3,"file":"RetrieveCard-dbg-dbg.js","names":["sap","ui","define","sap_cards_ap_transpiler_cardTranspiler_Transpile","SelectionVariant","___helpers_ApplicationInfo","___helpers_I18nHelper","___odata_ODataUtils","_catch","body","recover","result","e","then","convertIntegrationCardToAdaptive","ODataModelVersion","fetchApplicationInfo","resolvei18nTextsForIntegrationCard","createContextParameter","CardTypes","getCardPath","type","entitySet","applicationManifest","manifest","INTEGRATION","sapCardsAP","undefined","Object","keys","length","cardsConfig","defaultCard","default","localUri","endsWith","cleanupVariantInformation","selectionVariant","hasOwnProperty","SelectionVariantID","PresentationVariantID","Text","ODataFilterExpression","Version","FilterContextUrl","ParameterContextUrl","fetchManifest","url","Promise","resolve","fetch","response","json","_getObjectPageCardManifest","appComponent","hostOptions","isDesignMode","arguments","_temp2","cardsPath","cardType","reject","cardUrl","applicationUrlOnAbap","substring","getManifest","sapPlatformAbap","uri","_temp","_fetchManifest","addActionsToCardHeader","cardManifest","applicationInfo","semanticObject","action","entitySetWithObjectContext","appModel","odataModel","header","ibnParams","isODataV4","V4","context","split","forEach","param","key","value","addSelectOption","JSON","stringify","toJSONObject","actions","parameters","ibnTarget","checkIfCardExists","mApplicationManifest","handleHideActions","mManifest","appManifest","embeds","ObjectPage","defaultEntitySet","hideActions","mParameters","configuration","_adaptiveFooterActionParameters","footerActionParameters","footer","getKeyParameters","bODataV4","objectPath","map","parameter","formattedValue","replace","replaceAll","updateHeaderDataPath","headerData","data","path","getObjectPageCardManifestForPreview","fetchOptions","componentName","resourceBundle","keyParameters","_temp4","contentUrl","includes","_temp3","includeActions","cardManifestWithResolvedI18nTexts","__exports","__esModule"],"sources":["RetrieveCard.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { convertIntegrationCardToAdaptive } from \"sap/cards/ap/transpiler/cardTranspiler/Transpile\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport Component from \"sap/ui/core/Component\";\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport { AppManifest, ApplicationInfo, ODataModelVersion, fetchApplicationInfo } from \"../helpers/ApplicationInfo\";\nimport { resolvei18nTextsForIntegrationCard } from \"../helpers/I18nHelper\";\nimport { createContextParameter } from \"../odata/ODataUtils\";\n/**\n * The card types\n *\n * @alias sap.cards.ap.common.services.RetrieveCard.CardTypes\n * @private\n * @restricted sap.fe, sap.ui.generic.app\n */\nexport enum CardTypes {\n\t/**\n\t * Integration card\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tINTEGRATION = \"integration\",\n\t/**\n\t * Adaptive card\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tADAPTIVE = \"adaptive\"\n}\ntype CardHostParam = {\n\tcomponentName: string;\n\tentitySet: string;\n\tcardType?: CardTypes;\n};\ntype SelectionVariantJSON = {\n\tSelectionVariantID?: string;\n\tPresentationVariantID?: string;\n\tText?: string;\n\tODataFilterExpression?: string;\n\tVersion?: string;\n\tFilterContextUrl?: string;\n\tParameterContextUrl?: string;\n};\n/**\n * The options for fetching the card manifest\n *\n * @alias sap.cards.ap.common.services.RetrieveCard.CardManifestFetchOptions\n * @private\n * @restricted sap.fe, sap.ui.generic.app\n */\ntype CardManifestFetchOptions = {\n\t/**\n\t * Defines the card type\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tcardType?: CardTypes;\n\t/**\n\t * Defines include actions\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tincludeActions?: boolean;\n\t/**\n\t * Defines the hide Actions\n\t */\n\thideActions?: boolean;\n\t/**\n\t * Checks whether the app is running in design mode or not will be used to invalidate resource bundle cache and for other design time specific operations\n\t */\n\tisDesignMode?: boolean;\n};\n\ntype KeyParameter = {\n\tkey: string;\n\tformattedValue: string;\n};\n\n/**\n * Fetches the card path from the application manifest\n *\n * @param {CardType} type - The type of card\n * @param {string} entitySet - The entity set\n * @param {AppManifest} applicationManifest - The application manifest\n * @returns The card path\n */\nexport const getCardPath = (type: CardTypes, entitySet: string, applicationManifest: AppManifest) => {\n\tconst manifest = type === CardTypes.INTEGRATION ? \"manifest.json\" : \"adaptive-manifest.json\";\n\tconst sapCardsAP = applicationManifest[\"sap.cards.ap\"];\n\n\tif (sapCardsAP === undefined || Object.keys(sapCardsAP).length === 0) {\n\t\treturn \"\";\n\t}\n\n\tconst cardsConfig = sapCardsAP[\"embeds\"][\"ObjectPage\"];\n\tif (cardsConfig === undefined || Object.keys(cardsConfig[\"manifests\"]).length === 0) {\n\t\treturn \"\";\n\t}\n\n\tconst defaultCard = cardsConfig[\"manifests\"][entitySet || cardsConfig.default][0];\n\tconst localUri = defaultCard.localUri.endsWith(\"/\") ? defaultCard.localUri : defaultCard.localUri + \"/\";\n\treturn \"/\" + localUri + manifest;\n};\n\n/**\n * clean up the unnecessary variant information\n *\n * @param selectionVariant\n * @returns\n */\nconst cleanupVariantInformation = (selectionVariant: SelectionVariantJSON) => {\n\tif (selectionVariant.hasOwnProperty(\"SelectionVariantID\")) {\n\t\tdelete selectionVariant.SelectionVariantID;\n\t} else if (selectionVariant.hasOwnProperty(\"PresentationVariantID\")) {\n\t\tdelete selectionVariant.PresentationVariantID;\n\t}\n\tdelete selectionVariant.Text;\n\tdelete selectionVariant.ODataFilterExpression;\n\tdelete selectionVariant.Version;\n\tdelete selectionVariant.FilterContextUrl;\n\tdelete selectionVariant.ParameterContextUrl;\n\n\treturn selectionVariant;\n};\n\n/**\n * Fetches the manifest from the given url\n *\n * @param {string} url - The url of the manifest\n * @returns The manifest\n */\nexport const fetchManifest = async (url: string) => {\n\ttry {\n\t\tconst response = await fetch(url);\n\t\treturn await response.json();\n\t} catch (error) {\n\t\treturn null;\n\t}\n};\n/**\n * Fetches the card manifest for the object page\n *\n * @param {Component} appComponent\n * @param {CardHostParam} hostOptions\n * @param {Boolean} isDesignMode\n * @returns The card manifest\n * @private\n */\nexport const _getObjectPageCardManifest = async function (\n\tappComponent: Component,\n\thostOptions: CardHostParam,\n\tisDesignMode: boolean = false\n) {\n\tconst { entitySet, cardType } = hostOptions;\n\tlet applicationManifest = appComponent.getManifest() as AppManifest;\n\tconst sapPlatformAbap = applicationManifest[\"sap.platform.abap\"];\n\tconst applicationUrlOnAbap = sapPlatformAbap?.uri || \"\";\n\n\tif (isDesignMode) {\n\t\tapplicationManifest = await fetchManifest(applicationUrlOnAbap + \"/manifest.json\");\n\t}\n\tconst cardsPath = getCardPath(cardType || CardTypes.INTEGRATION, entitySet, applicationManifest);\n\n\tif (cardsPath.length === 0) {\n\t\treturn Promise.reject(\"No cards available for this application\");\n\t}\n\n\tconst cardUrl = applicationUrlOnAbap.endsWith(\"/\")\n\t\t? applicationUrlOnAbap.substring(0, applicationUrlOnAbap.length - 1) + cardsPath\n\t\t: applicationUrlOnAbap + cardsPath;\n\n\treturn fetchManifest(cardUrl);\n};\n\n/**\n * Add actions to the card header\n *  - ibnTarget contains the semantic object and action\n *  - ibnParams contains the context parameters and sap-xapp-state-data - which is the stringified selection variant of the context parameters\n *\n * @param cardManifest\n * @param applicationInfo\n */\nconst addActionsToCardHeader = async function (cardManifest: CardManifest, applicationInfo: ApplicationInfo) {\n\tconst { semanticObject, action, entitySetWithObjectContext, appModel, odataModel } = applicationInfo;\n\tconst header = cardManifest[\"sap.card\"][\"header\"];\n\tconst ibnParams: Record<string, string> = {};\n\tconst selectionVariant = new SelectionVariant();\n\tconst isODataV4 = odataModel === ODataModelVersion.V4;\n\tconst context = await createContextParameter(entitySetWithObjectContext, appModel, isODataV4);\n\n\tcontext.split(\",\").forEach(function (param) {\n\t\tconst [key, value] = param.split(\"=\");\n\t\tibnParams[key] = value;\n\t\tselectionVariant.addSelectOption(key, \"I\", \"EQ\", value);\n\t});\n\tibnParams[\"sap-xapp-state-data\"] = JSON.stringify({\n\t\tselectionVariant: cleanupVariantInformation(selectionVariant.toJSONObject())\n\t});\n\theader.actions = [\n\t\t{\n\t\t\ttype: \"Navigation\",\n\t\t\tparameters: {\n\t\t\t\tibnTarget: { semanticObject, action },\n\t\t\t\tibnParams\n\t\t\t}\n\t\t}\n\t];\n};\n/**\n * Checks if the leanDT card exists in the application at runtime or not\n *\n * @param appComponent\n * @param isDesignMode\n * @returns boolean\n */\nconst checkIfCardExists = (appComponent: Component, isDesignMode: boolean = false): boolean => {\n\tconst mApplicationManifest = appComponent.getManifest() as AppManifest;\n\treturn !(!mApplicationManifest[\"sap.cards.ap\"] && !isDesignMode);\n};\n\n/**\n * Function to handle the hide actions for the card\n *\n * @param appComponent\n * @param mManifest\n */\nconst handleHideActions = function (appComponent: Component, mManifest: CardManifest) {\n\tconst appManifest = appComponent.getManifest() as AppManifest;\n\tconst cardsConfig = appManifest[\"sap.cards.ap\"]?.embeds.ObjectPage;\n\n\tif (cardsConfig && Object.keys(cardsConfig[\"manifests\"]).length > 0) {\n\t\tconst defaultEntitySet = cardsConfig?.[\"default\"];\n\t\tconst hideActions = (defaultEntitySet && cardsConfig[\"manifests\"][defaultEntitySet]?.[0]?.hideActions) || false;\n\t\tconst mParameters = mManifest?.[\"sap.card\"]?.configuration?.parameters;\n\n\t\tif (hideActions && mParameters?._adaptiveFooterActionParameters) {\n\t\t\tdelete mParameters[\"_adaptiveFooterActionParameters\"];\n\t\t}\n\t\tif (hideActions && mParameters?.footerActionParameters) {\n\t\t\tdelete mParameters[\"footerActionParameters\"];\n\t\t}\n\t\tif (hideActions && mManifest?.[\"sap.card\"]?.footer) {\n\t\t\tdelete mManifest[\"sap.card\"][\"footer\"];\n\t\t}\n\t}\n};\n\n/**\n * Fetches key parameters for the given application component.\n *\n * @param {Component} appComponent - The application component.\n * @returns {Promise<KeyParameter[]>} - A promise that resolves to an array of key parameters.\n */\nexport const getKeyParameters = async (appComponent: Component): Promise<KeyParameter[]> => {\n\tconst applicationInfo = await fetchApplicationInfo(appComponent);\n\tconst { entitySetWithObjectContext, appModel, odataModel } = applicationInfo;\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst objectPath = await createContextParameter(entitySetWithObjectContext, appModel, bODataV4);\n\n\treturn objectPath.split(\",\").map((parameter) => {\n\t\tconst [key, value] = parameter.split(\"=\");\n\t\tconst formattedValue = value.replace(\"guid\", \"\").replaceAll(\"'\", \"\");\n\n\t\treturn { key, formattedValue };\n\t});\n};\n\n/**\n * Updates the data path of the card header in the provided card manifest by reference.\n *\n * @param {CardManifest} cardManifest - The card manifest object that contains the header data.\n */\nfunction updateHeaderDataPath(cardManifest: CardManifest) {\n\tconst headerData = cardManifest[\"sap.card\"].header.data;\n\n\tif (headerData?.path && headerData.path !== \"/header/d/\") {\n\t\theaderData.path = \"/header/d/\";\n\t}\n}\n\n/**\n * Fetches the card manifest for the object page\n *\n * @param {Component} appComponent The root component of the application\n * @param {CardManifestFetchOptions} fetchOptions The options\n * @returns {Promise<any>} The card manifest\n * @private\n * @since 1.124.0\n * @restricted sap.fe, sap.ui.generic.app\n */\nexport const getObjectPageCardManifestForPreview = async function (appComponent: Component, fetchOptions?: CardManifestFetchOptions) {\n\tconst isDesignMode = fetchOptions?.isDesignMode;\n\n\tif (!checkIfCardExists(appComponent, isDesignMode ?? false)) {\n\t\treturn Promise.reject(\"No cards available for this application\");\n\t}\n\n\tconst applicationInfo = await fetchApplicationInfo(appComponent, { isDesignMode });\n\tconst { componentName, entitySet, context, resourceBundle, semanticObject, action } = applicationInfo;\n\tconst hostOptions = {\n\t\tcardType: CardTypes.INTEGRATION,\n\t\tcomponentName: componentName,\n\t\tentitySet: entitySet,\n\t\tcontext\n\t};\n\n\tconst cardManifest = await _getObjectPageCardManifest(appComponent, hostOptions, fetchOptions?.isDesignMode ?? false);\n\n\tif (!cardManifest || Object.keys(cardManifest).length === 0) {\n\t\treturn Promise.reject(\"No cards available for this application\");\n\t}\n\n\tconst keyParameters = await getKeyParameters(appComponent);\n\n\tif (fetchOptions?.hideActions ?? true) {\n\t\thandleHideActions(appComponent, cardManifest);\n\t}\n\n\tconst cardType = fetchOptions?.cardType || CardTypes.INTEGRATION;\n\tif (cardType === CardTypes.INTEGRATION) {\n\t\tcardManifest[\"sap.card\"][\"data\"][\"request\"][\"headers\"][\"Accept-Language\"] ??= \"{{parameters.LOCALE}}\";\n\t\tconst parameters = cardManifest[\"sap.card\"].configuration.parameters;\n\t\tconst data = cardManifest[\"sap.card\"][\"data\"];\n\t\tconst contentUrl = data[\"request\"][\"batch\"][\"content\"][\"url\"];\n\t\tif (contentUrl.includes(\"{{parameters.contextParameters}}\")) {\n\t\t\t/**\n\t\t\t * Replace the contextParameters with the object context\n\t\t\t * This is required for the integration card to fetch the data until all the manifests are regenerated.\n\t\t\t */\n\t\t\tcardManifest[\"sap.card\"][\"configuration\"][\"parameters\"][\"contextParameters\"] = {\n\t\t\t\ttype: \"string\",\n\t\t\t\tvalue: hostOptions.context\n\t\t\t};\n\t\t}\n\t\tkeyParameters.forEach((parameter) => {\n\t\t\tif (parameters[parameter.key] !== undefined) {\n\t\t\t\tparameters[parameter.key][\"value\"] = parameter.formattedValue;\n\t\t\t}\n\t\t});\n\n\t\tif (fetchOptions?.includeActions ?? true) {\n\t\t\tawait addActionsToCardHeader(cardManifest, applicationInfo);\n\t\t}\n\n\t\tupdateHeaderDataPath(cardManifest);\n\t\treturn resolvei18nTextsForIntegrationCard(cardManifest, resourceBundle);\n\t} else {\n\t\tconst cardManifestWithResolvedI18nTexts = resolvei18nTextsForIntegrationCard(cardManifest, resourceBundle);\n\t\treturn convertIntegrationCardToAdaptive(cardManifestWithResolvedI18nTexts, `${semanticObject}-${action}`, keyParameters);\n\t}\n};\n"],"mappings":"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","ignoreList":[]}