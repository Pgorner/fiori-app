{"version":3,"file":"ODataUtils-dbg.js","names":["sap","ui","define","encodeURLParameters","V2OdataUtils","V4ODataUtils","___helpers_ApplicationInfo","___v2_MetadataAnalyzer","___v4_MetadataAnalyzer","ODataModelVersion","getPropertyReference","getPropertyReferenceKey","getSemanticKeys","getContextPropertiesForODataV2","path","model","entitySetName","contextParameters","data","getObject","keyProperties","forEach","property","parameter","formatValue","name","type","push","matchSemanticKeysWithReferenceKeys","semanticProperties","referenceKeys","length","sortedSemanticProperties","sort","sortedReferenceKeys","join","getPropertiesUsingSemanticKeys","contextProperties","semanticKeys","propertyReferenceKey","odataModel","isA","V4","V2","bODataV4","serviceUrl","getServiceUrl","sServiceUrl","key","$PropertyPath","urlParameters","$select","$filter","decodeURIComponent","Promise","resolve","fetchDataAsync","then","value","result","map","ref","formatLiteral","e","reject","handleSingleProperty","guidKey","find","guidValue","addIsActiveEntityProperty","currentProperty","split","element","includes","getContextPropertiesForODataV4","propertyPath","_exit","_temp2","_result","indexOf","getMetaModel","semanticKeyProperties","considerSemanticKey","_temp","_await$getPropertiesU","createContextParameter","oDataV4","_temp4","index","substring","lastIndex","_temp3","_getContextProperties","url","arguments","undefined","queryParams","Object","keys","formattedUrl","endsWith","format","parameters","sFormattedUrl","fetch","response","json","catch","err","Error","__exports","__esModule"],"sources":["ODataUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport encodeURLParameters from \"sap/base/security/encodeURLParameters\";\nimport V2OdataUtils from \"sap/ui/model/odata/ODataUtils\";\nimport { default as V2ODataModel } from \"sap/ui/model/odata/v2/ODataModel\";\nimport { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport V4ODataUtils from \"sap/ui/model/odata/v4/ODataUtils\";\nimport { ODataModelVersion } from \"../helpers/ApplicationInfo\";\nimport { getPropertyReference } from \"./v2/MetadataAnalyzer\";\nimport { getPropertyReferenceKey, getSemanticKeys, Property, SemanticKey } from \"./v4/MetadataAnalyzer\";\n\n/**\n * Retrieves context properties for OData V2.\n *\n * @param path - The path to retrieve context properties for.\n * @param model - The application model.\n * @param entitySetName - The entity set name.\n * @returns An array of context properties.\n */\nconst getContextPropertiesForODataV2 = function (path: string, model: V2ODataModel, entitySetName: string): string[] {\n\tconst contextParameters: string[] = [];\n\tconst data = model.getObject(`/${path}`);\n\tconst keyProperties = getPropertyReference(model, entitySetName);\n\n\tkeyProperties.forEach((property) => {\n\t\tconst parameter = V2OdataUtils.formatValue(`${data[property.name]}`, property.type, true);\n\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t});\n\n\treturn contextParameters;\n};\n\n/**\n * Matches semantic keys with reference keys.\n *\n * @param semanticProperties - The semantic properties.\n * @param referenceKeys - The reference keys.\n * @returns A boolean indicating if the keys match.\n */\nconst matchSemanticKeysWithReferenceKeys = function (semanticProperties: string[], referenceKeys: string[]) {\n\tif (semanticProperties.length !== referenceKeys.length) {\n\t\treturn false;\n\t}\n\n\tconst sortedSemanticProperties = [...semanticProperties].sort();\n\tconst sortedReferenceKeys = [...referenceKeys].sort();\n\n\treturn sortedSemanticProperties.join(\"\") === sortedReferenceKeys.join(\"\");\n};\n\n/**\n * Retrieves properties using semantic keys from an OData model.\n *\n * @param {V4ODataModel} model - The OData model instance.\n * @param {string} entitySetName - The name of the entity set.\n * @param {string[]} contextProperties - The context properties.\n * @param {SemanticKey[]} semanticKeys - The semantic keys.\n * @param {string[]} referenceKeys - The reference keys to be selected.\n * @param {{ name: string, type: string }[]} propertyReferenceKey - The property reference keys with their types.\n * @returns {Promise<string[]>} A promise that resolves to an array of formatted property reference keys or the original context properties.\n */\nconst getPropertiesUsingSemanticKeys = async function (\n\tmodel: V4ODataModel,\n\tentitySetName: string,\n\tcontextProperties: string[],\n\tsemanticKeys: SemanticKey[],\n\treferenceKeys: string[],\n\tpropertyReferenceKey: { name: string; type: string }[]\n) {\n\tconst odataModel = model.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\") ? ODataModelVersion.V4 : ODataModelVersion.V2;\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst serviceUrl = bODataV4\n\t\t? model.getServiceUrl()\n\t\t: (model as unknown as { V2ODataModel: V2ODataModel; sServiceUrl: string }).sServiceUrl;\n\tconst key = semanticKeys[0].$PropertyPath;\n\tconst urlParameters = {\n\t\t$select: referenceKeys.join(\",\"),\n\t\t$filter: `${key} eq ${decodeURIComponent(contextProperties[0])}`\n\t};\n\tconst data = await fetchDataAsync(serviceUrl, entitySetName, urlParameters);\n\n\tif (data.value.length) {\n\t\tconst result = data.value[0];\n\t\treturn propertyReferenceKey.map((ref) => {\n\t\t\treturn `${ref.name}=${V4ODataUtils.formatLiteral(result[ref.name], ref.type)}`;\n\t\t});\n\t}\n\n\treturn contextProperties;\n};\n\n/**\n * Handles a single property in the context of OData.\n *\n * If there is only one property in the object context and it is not a semantic key,\n * then it is assumed to be a GUID. The function updates the context properties accordingly.\n *\n * @param propertyReferenceKey - An array of properties to reference.\n * @param contextProperties - An array of context properties to be updated.\n */\nconst handleSingleProperty = function (propertyReferenceKey: Property[], contextProperties: string[]) {\n\t// If there is only one property in the object context, and it is not semantic key, then it is a guid\n\tconst guidKey = propertyReferenceKey.find((property) => {\n\t\treturn property.type === \"Edm.Guid\";\n\t})?.name;\n\tconst guidValue = contextProperties[0];\n\tcontextProperties[0] = guidKey\n\t\t? `${guidKey}=${V4ODataUtils.formatLiteral(guidValue, \"Edm.Guid\")}`\n\t\t: propertyReferenceKey.map((ref) => `${ref.name}=${guidValue}`).join(\",\");\n\n\treturn contextProperties;\n};\n\n/**\n * Adds the \"IsActiveEntity=true\" property to the context properties if it is not already present.\n *\n * @param contextProperties - An array of context property strings.\n * @param propertyReferenceKey - An array of objects containing property name and type.\n * @returns The updated array of context property strings.\n */\nconst addIsActiveEntityProperty = function (contextProperties: string[], propertyReferenceKey: { name: string; type: string }[]) {\n\tconst currentProperty = contextProperties.map((property: string) => property.split(\"=\")[0]);\n\n\tpropertyReferenceKey.forEach((element) => {\n\t\tif (!currentProperty.includes(element.name) && element.name === \"IsActiveEntity\") {\n\t\t\tcontextProperties.push(\"IsActiveEntity=true\");\n\t\t}\n\t});\n\n\treturn contextProperties;\n};\n\n/**\n * Retrieves context properties for OData V4.\n *\n * @param model - The application model.\n * @param entitySetName - The entity set name.\n * @param propertyPath - The property path.\n * @returns A promise that resolves to an array of context properties.\n */\nconst getContextPropertiesForODataV4 = async function (model: V4ODataModel, entitySetName: string, propertyPath: string) {\n\tconst propertyReferenceKey = getPropertyReferenceKey(model, entitySetName);\n\tconst contextProperties = propertyPath.split(\",\");\n\tconst semanticKeys: SemanticKey[] = getSemanticKeys(model.getMetaModel(), entitySetName);\n\tconst semanticKeyProperties = semanticKeys.map((key) => key.$PropertyPath);\n\tconst referenceKeys = propertyReferenceKey.map((ref) => ref.name);\n\tconst considerSemanticKey = !matchSemanticKeysWithReferenceKeys(semanticKeyProperties, referenceKeys);\n\n\t// If semantic keys are declared, we can get the value for key parameters by fetching the data using the semantic key\n\tif (semanticKeys.length && considerSemanticKey) {\n\t\treturn await getPropertiesUsingSemanticKeys(\n\t\t\tmodel,\n\t\t\tentitySetName,\n\t\t\tcontextProperties,\n\t\t\tsemanticKeys,\n\t\t\treferenceKeys,\n\t\t\tpropertyReferenceKey\n\t\t);\n\t}\n\n\tif (contextProperties.length === 1 && contextProperties[0].indexOf(\"=\") === -1) {\n\t\treturn handleSingleProperty(propertyReferenceKey, contextProperties);\n\t}\n\n\treturn addIsActiveEntityProperty(contextProperties, propertyReferenceKey);\n};\n\n/**\n * Creates context parameters based on the given path, app model, and OData version.\n *\n * @param path - The path to create context parameters for.\n * @param model - The application model.\n * @param oDataV4 - A boolean indicating if OData V4 is used.\n * @returns A promise that resolves to a string of context parameters.\n */\nexport const createContextParameter = async function (path: string, model: V2ODataModel | V4ODataModel, oDataV4: boolean) {\n\tconst index = path.indexOf(\"(\");\n\tconst entitySetName = path.substring(0, index);\n\tconst lastIndex = path.indexOf(\")\");\n\tconst propertyPath = path.substring(index + 1, lastIndex);\n\tlet contextParameters: string[] = [];\n\n\tif (oDataV4) {\n\t\tcontextParameters = await getContextPropertiesForODataV4(model as V4ODataModel, entitySetName, propertyPath);\n\t} else {\n\t\tcontextParameters = getContextPropertiesForODataV2(path, model as V2ODataModel, entitySetName);\n\t}\n\n\treturn contextParameters.join(\",\");\n};\n\n/**\n * Helper function to fetch data from the given URL. This function is used to fetch data from the OData V4 service.\n *\n * @param url - The URL to fetch data from.\n * @param path - The path to fetch data for.\n * @param urlParameters - The URL parameters.\n * @returns A promise that resolves to the fetched data.\n */\nexport const fetchDataAsync = async function (url: string, path: string, urlParameters: Record<string, string> = {}) {\n\tconst queryParams: Record<string, string> = {};\n\tObject.keys(urlParameters).forEach((key) => {\n\t\tif (urlParameters[key].length) {\n\t\t\tqueryParams[key] = urlParameters[key];\n\t\t}\n\t});\n\n\tconst formattedUrl = url.endsWith(\"/\") ? url : `${url}/`;\n\tqueryParams.format = \"json\";\n\tconst parameters = encodeURLParameters(queryParams);\n\tconst sFormattedUrl = `${formattedUrl}${path}?${parameters}`;\n\treturn fetch(sFormattedUrl)\n\t\t.then((response) => response.json())\n\t\t.then((data) => data)\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err);\n\t\t});\n};\n"],"mappings":"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","ignoreList":[]}