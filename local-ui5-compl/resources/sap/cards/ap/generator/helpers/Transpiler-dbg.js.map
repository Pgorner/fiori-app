{"version":3,"file":"Transpiler-dbg.js","names":["sap","ui","define","sap_cards_ap_common_adaptiveCards_AdaptiveCardRenderer","sap_cards_ap_transpiler_cardTranspiler_Transpile","CoreElement","ODataUtils","getAdaptiveCardForRendering","convertIntegrationCardToAdaptive","transpileIntegrationCardToAdaptive","oDialogModel","oCard","getElementById","oManifest","getManifest","keyParameters","getProperty","appIntent","oAdaptiveCardManifest","adaptiveCardData","Object","assign","properties","forEach","property","isDate","name","dateValue","toISOString","iterateObject","$data","sHostConfig","getSelectedItem","getBindingContext","renderedCard","adaptiveCardPreview","document","querySelector","setTimeout","innerHTML","updateEmptyStrings","appendChild","nodeList","querySelectorAll","nodeArray","Array","from","node","textContent","includes","key","hasOwnProperty","processKey","value","isPropertyTypeDate","__edmType","__exports","__esModule"],"sources":["Transpiler.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getAdaptiveCardForRendering } from \"sap/cards/ap/common/adaptiveCards/AdaptiveCardRenderer\";\nimport { convertIntegrationCardToAdaptive } from \"sap/cards/ap/transpiler/cardTranspiler/Transpile\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport * as ODataUtils from \"../odata/ODataUtils\";\n\ntype AdaptiveCardData = {\n\t[key: string]: string | DateObject;\n};\n\ntype DateObject = {\n\t__edmType: string;\n\t[key: string]: unknown;\n};\n\n/**\n * Transpiles an Integration Card into an Adaptive Card.\n *\n * @param {JSONModel} oDialogModel - The Integration Card to transpile.\n * @returns {AdaptiveCard} The resulting Adaptive Card.\n * @throws {TranspilationError} If the Integration Card cannot be transpiled.\n */\nexport function transpileIntegrationCardToAdaptive(oDialogModel: JSONModel) {\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tconst oManifest = oCard.getManifest() as CardManifest;\n\tconst keyParameters = oDialogModel.getProperty(\"/configuration/keyParameters\");\n\tconst appIntent = oDialogModel.getProperty(\"/configuration/appIntent\");\n\tconst oAdaptiveCardManifest = convertIntegrationCardToAdaptive(oManifest, appIntent, keyParameters);\n\tconst adaptiveCardData = Object.assign({}, oDialogModel.getProperty(\"/configuration/$data\"));\n\tconst properties = oDialogModel.getProperty(\"/configuration/properties\");\n\tproperties.forEach(function (property) {\n\t\tif (property?.isDate && adaptiveCardData[property?.name] && typeof adaptiveCardData[property?.name] === \"object\") {\n\t\t\tconst dateValue = adaptiveCardData[property?.name];\n\t\t\tadaptiveCardData[property?.name] = dateValue?.toISOString() ? dateValue?.toISOString() : adaptiveCardData[property?.name];\n\t\t}\n\t});\n\n\titerateObject(adaptiveCardData);\n\n\toAdaptiveCardManifest.$data = adaptiveCardData;\n\tconst sHostConfig = (CoreElement.getElementById(\"cardGeneratorDialog--preview-select\") as any)\n\t\t.getSelectedItem()\n\t\t.getBindingContext(\"previewOptions\")\n\t\t.getProperty(\"hostConfig\");\n\n\tlet renderedCard: HTMLElement | undefined;\n\tif (sHostConfig) {\n\t\trenderedCard = getAdaptiveCardForRendering(sHostConfig, oAdaptiveCardManifest);\n\t}\n\tconst adaptiveCardPreview = document.querySelector(\"#adaptiveCardPreview\");\n\n\tif (adaptiveCardPreview && renderedCard) {\n\t\tsetTimeout(function () {\n\t\t\tadaptiveCardPreview.innerHTML = \"\";\n\t\t\tupdateEmptyStrings(renderedCard);\n\t\t\tadaptiveCardPreview.appendChild(renderedCard);\n\t\t});\n\t}\n}\n\n/**\n * Function to update &minus; strings in the rendered card textblock to '-'\n * as JS Engine will not understand &minus; and will not render it to '-'.\n *\n * @param renderedCard\n */\nfunction updateEmptyStrings(renderedCard: HTMLElement): void {\n\tconst nodeList = renderedCard.querySelectorAll(\".ac-textBlock\");\n\tconst nodeArray = Array.from(nodeList);\n\tnodeArray.forEach((node) => {\n\t\tif (node.textContent?.includes(\"&minus;\")) {\n\t\t\tnode.textContent = \"-\";\n\t\t}\n\t});\n}\n\n/**\n * Iterates over the properties of the given adaptive card data object and processes each key.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object to iterate over.\n * @returns {void}\n */\nfunction iterateObject(adaptiveCardData: AdaptiveCardData): void {\n\tfor (const key in adaptiveCardData) {\n\t\tif (adaptiveCardData.hasOwnProperty(key)) {\n\t\t\tprocessKey(adaptiveCardData, key);\n\t\t}\n\t}\n}\n\n/**\n * Processes a key in the adaptive card data object. If the value associated with the key is an object\n * and has a valid EDM type, it converts the value to an ISO string if possible. It also recursively\n * iterates over the object if the value is an object.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object containing the key to process.\n * @param {string} key - The key in the adaptive card data object to process.\n */\nfunction processKey(adaptiveCardData: AdaptiveCardData, key: string): void {\n\tconst value = adaptiveCardData[key];\n\tif (typeof value === 'object' && value !== null) {\n\t\tif (ODataUtils.isPropertyTypeDate(value?.__edmType)) {\n\t\t\tadaptiveCardData[key] = value?.toISOString ? value.toISOString() : value;\n\t\t}\n\t\titerateObject(value);\n\t}\n}\n"],"mappings":";;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,mKAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAISC,EAA2BJ,EAAA,qCAC3BK,EAAgCJ,EAAA,oCAsBlC,SAASK,EAAmCC,GAClD,MAAMC,EAAQN,EAAYO,eAAe,oCACzC,MAAMC,EAAYF,EAAMG,cACxB,MAAMC,EAAgBL,EAAaM,YAAY,gCAC/C,MAAMC,EAAYP,EAAaM,YAAY,4BAC3C,MAAME,EAAwBV,EAAiCK,EAAWI,EAAWF,GACrF,MAAMI,EAAmBC,OAAOC,OAAO,CAAC,EAAGX,EAAaM,YAAY,yBACpE,MAAMM,EAAaZ,EAAaM,YAAY,6BAC5CM,EAAWC,QAAQ,SAAUC,GAC5B,GAAIA,GAAUC,QAAUN,EAAiBK,GAAUE,cAAgBP,EAAiBK,GAAUE,QAAU,SAAU,CACjH,MAAMC,EAAYR,EAAiBK,GAAUE,MAC7CP,EAAiBK,GAAUE,MAAQC,GAAWC,cAAgBD,GAAWC,cAAgBT,EAAiBK,GAAUE,KACrH,CACD,GAEAG,EAAcV,GAEdD,EAAsBY,MAAQX,EAC9B,MAAMY,EAAe1B,EAAYO,eAAe,uCAC9CoB,kBACAC,kBAAkB,kBAClBjB,YAAY,cAEd,IAAIkB,EACJ,GAAIH,EAAa,CAChBG,EAAe3B,EAA4BwB,EAAab,EACzD,CACA,MAAMiB,EAAsBC,SAASC,cAAc,wBAEnD,GAAIF,GAAuBD,EAAc,CACxCI,WAAW,WACVH,EAAoBI,UAAY,GAChCC,EAAmBN,GACnBC,EAAoBM,YAAYP,EACjC,EACD,CACD,CAQA,SAASM,EAAmBN,GAC3B,MAAMQ,EAAWR,EAAaS,iBAAiB,iBAC/C,MAAMC,EAAYC,MAAMC,KAAKJ,GAC7BE,EAAUrB,QAASwB,IAClB,GAAIA,EAAKC,aAAaC,SAAS,WAAY,CAC1CF,EAAKC,YAAc,GACpB,GAEF,CAQA,SAASnB,EAAcV,GACtB,IAAK,MAAM+B,KAAO/B,EAAkB,CACnC,GAAIA,EAAiBgC,eAAeD,GAAM,CACzCE,EAAWjC,EAAkB+B,EAC9B,CACD,CACD,CAUA,SAASE,EAAWjC,EAAoC+B,GACvD,MAAMG,EAAQlC,EAAiB+B,GAC/B,UAAWG,IAAU,UAAYA,IAAU,KAAM,CAChD,GAAI/C,EAAWgD,mBAAmBD,GAAOE,WAAY,CACpDpC,EAAiB+B,GAAOG,GAAOzB,YAAcyB,EAAMzB,cAAgByB,CACpE,CACAxB,EAAcwB,EACf,CACD,CAAC,IAAAG,EAAA,CAAAC,WAAA,MAAAD,EAAA/C,qCAAA,OAAA+C,CAAA","ignoreList":[]}