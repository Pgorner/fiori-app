{"version":3,"file":"Formatter-dbg-dbg.js","names":["sap","ui","define","sap_ui_integration_formatters_DateTimeFormatter","ODataUtils","date","dateTime","formatPropertyDropdownValues","property","value","type","UTC","length","label","createFormatterExpression","oFormatterDetail","aFormatterArguments","push","content","formatterName","mOptions","parameters","forEach","mParameters","properties","oProperties","selected","name","parseFloat","selectedKey","JSON","stringify","concat","i","aFormatter","bindingOrFormatterArray","hasBindingOrFormatter","some","item","startsWith","getDefaultPropertyFormatterConfig","i18nModel","dateFormatterConfig","isPropertyTypeDate","configData","getDateFormatterConfiguration","getDefaultPropertyFormatterConfigForNavProperties","navProperties","navProperty","propertyName","propertyType","displayName","getText","defaultValue","visible","__exports","__esModule"],"sources":["Formatter.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport { date, dateTime } from \"sap/ui/integration/formatters/DateTimeFormatter\";\nimport type { PropertyInfo, PropertyInfoMap } from \"../odata/ODataTypes\";\nimport * as ODataUtils from \"../odata/ODataUtils\";\n\nexport const formatPropertyDropdownValues = function (property: PropertyInfo, value: string) {\n\tconst type = property.type;\n\tswitch (type) {\n\t\tcase \"Edm.Boolean\":\n\t\t\tbreak;\n\t\tcase \"Edm.Date\":\n\t\tcase \"Edm.DateTime\":\n\t\t\tvalue = date(value, { UTC: true });\n\t\t\tbreak;\n\t\tcase \"Edm.DateTimeOffset\":\n\t\t\tvalue = dateTime(value, { UTC: true });\n\t\t\tbreak;\n\t\tcase \"Edm.DateTimeInterval\":\n\t\tcase \"Edm.Time\":\n\t\t\tbreak;\n\t\tcase \"Edm.String\":\n\t\t\tif (value?.length === 0) {\n\t\t\t\tvalue = \"<empty>\";\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Edm.Integer\":\n\t\tcase \"Edm.Float\":\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn `${property.label} (${value})`;\n};\n\nexport const createFormatterExpression = function (oFormatterDetail: FormatterConfiguration) {\n\tconst aFormatterArguments = [];\n\taFormatterArguments.push(\"${\" + oFormatterDetail.property + \"}\");\n\tlet content = oFormatterDetail.formatterName + \"(\"; // dont close brackets here\n\n\tconst mOptions: Record<string, string | boolean | number> = {};\n\toFormatterDetail.parameters?.forEach(function (mParameters) {\n\t\tif (mParameters.properties && mParameters.properties.length > 0) {\n\t\t\tmParameters.properties.forEach(function (oProperties: SingleFormatterProperty) {\n\t\t\t\tswitch (oProperties.type) {\n\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\tif (!oProperties.selected) {\n\t\t\t\t\t\t\toProperties.selected = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmOptions[oProperties.name] = oProperties.selected;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\tif (typeof oProperties.value === \"number\") {\n\t\t\t\t\t\t\tmOptions[oProperties.name] = parseFloat(oProperties.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"enum\":\n\t\t\t\t\t\tif (oProperties.selectedKey) {\n\t\t\t\t\t\t\tmOptions[oProperties.name] = oProperties.selectedKey;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmOptions[oProperties.name] = oProperties.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (JSON.stringify(mOptions) !== \"{}\") {\n\t\t\t\taFormatterArguments.push(JSON.stringify(mOptions));\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mParameters.type) {\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\tif (!mParameters.selected) {\n\t\t\t\t\t\tmParameters.selected = false;\n\t\t\t\t\t}\n\t\t\t\t\taFormatterArguments.push(mParameters.selected);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"number\":\n\t\t\t\t\taFormatterArguments.push(parseFloat(mParameters.value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"enum\":\n\t\t\t\t\taFormatterArguments.push(mParameters.selectedKey);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\taFormatterArguments.push(mParameters.value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\tcontent = content.concat(aFormatterArguments[0]);\n\tfor (let i = 1; i < aFormatterArguments.length; i++) {\n\t\tconst aFormatter = aFormatterArguments[i];\n\t\tconst bindingOrFormatterArray = [\"{\", \"[\", \"$\"];\n\t\tconst hasBindingOrFormatter = bindingOrFormatterArray.some((item) => aFormatter.startsWith(item));\n\t\tif (typeof aFormatter === \"string\" && !hasBindingOrFormatter) {\n\t\t\tcontent = content.concat(\", '\" + aFormatter + \"' \");\n\t\t} else {\n\t\t\tcontent = content.concat(\", \" + aFormatter);\n\t\t}\n\t}\n\treturn content + \")\";\n};\n\n/**\n * Generates the default property formatter configuration for date properties.\n *\n * @param {ResourceBundle} i18nModel - The internationalization model used for localization.\n * @param {PropertyInfoMap} properties - The map of property information.\n * @returns {FormatterConfigurationMap} - The configuration map for date formatters.\n */\nexport const getDefaultPropertyFormatterConfig = function (i18nModel: ResourceBundle, properties: PropertyInfoMap): FormatterConfigurationMap {\n\tconst dateFormatterConfig: FormatterConfigurationMap = [];\n\tfor (const property of properties) {\n\t\tconst isPropertyTypeDate = ODataUtils.isPropertyTypeDate(property.type);\n\t\tif (property.name && isPropertyTypeDate) {\n\t\t\tconst configData = getDateFormatterConfiguration(property.name, property.type, i18nModel) as FormatterConfiguration;\n\t\t\tdateFormatterConfig.push(configData);\n\t\t}\n\t}\n\treturn dateFormatterConfig;\n};\n\n/**\n * Generates the default property formatter configuration for navigation properties.\n *\n * @param {ResourceBundle} i18nModel - The internationalization model used for localization.\n * @param {PropertyInfoMap} navProperties - The map of navigation properties.\n * @returns {FormatterConfigurationMap} The formatter configuration map for date properties.\n */\nexport const getDefaultPropertyFormatterConfigForNavProperties = function (i18nModel: ResourceBundle, navProperties: PropertyInfoMap): FormatterConfigurationMap {\n\tconst dateFormatterConfig: FormatterConfigurationMap = [];\n\tfor (const navProperty of navProperties) {\n\t\tconst properties = navProperty.properties as PropertyInfoMap || [];\n\t\tfor (const property of properties) {\n\t\t\tconst propertyName = navProperty.name + \"/\" + property.name;\n\t\t\tconst isPropertyTypeDate = ODataUtils.isPropertyTypeDate(property.type);\n\t\t\tif (propertyName && isPropertyTypeDate) {\n\t\t\t\tconst configData = getDateFormatterConfiguration(propertyName, property.type, i18nModel) as FormatterConfiguration;\n\t\t\t\tdateFormatterConfig.push(configData);\n\t\t\t}\n\t\t}\n\t}\n\treturn dateFormatterConfig;\n};\n \n/**\n * Generates configuration data for a given property based on its type.\n *\n * @param {string} propertyName - The name of the property.\n * @param {string} propertyType - The type of the property (e.g., \"Edm.DateTimeOffset\", \"Edm.TimeOfDay\", \"Edm.DateTime\", \"Edm.Date\").\n * @param {ResourceBundle} i18nModel - The internationalization model used to get localized text.\n * @returns {FormatterConfiguration} The configuration data for the specified property.\n */\nfunction getDateFormatterConfiguration(propertyName: string, propertyType: string, i18nModel: ResourceBundle) {\n\tif (propertyType === \"Edm.DateTimeOffset\" || propertyType === \"Edm.TimeOfDay\") {\n\t\tconst configData: FormatterConfiguration = {\n\t\t\tproperty: propertyName,\n\t\t\tformatterName: \"format.dateTime\",\n\t\t\tdisplayName: i18nModel.getText(\"FORMAT_DATETIME\") ?? \"\",\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"relative\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"RELATIVE\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"UTC\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"UTC\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false,\n\t\t\t\t\t\t\tselected: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t};\n\t\treturn configData;\n\t} else if (propertyType === \"Edm.DateTime\" || propertyType === \"Edm.Date\") {\n\t\tconst configData: FormatterConfiguration = {\n\t\t\tproperty: propertyName,\n\t\t\tformatterName: \"format.date\",\n\t\t\tdisplayName: i18nModel.getText(\"FORMAT_DATE\") ?? \"\",\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"UTC\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"UTC\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false,\n\t\t\t\t\t\t\tselected: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t};\n\t\treturn configData;\n\t}\n}\n\ntype SupportedPropertyTypes = \"boolean\" | \"number\" | \"enum\" | \"string\" | \"object\";\nexport type SingleFormatterProperty = {\n\tname: string;\n\tdisplayName: string;\n\ttype: SupportedPropertyTypes;\n\tdefaultValue?: boolean | number | string;\n\tselected?: boolean;\n\tvalue?: string;\n\tselectedKey?: string;\n\tdefaultSelectedKey?: string;\n\tbIsProperty?: boolean;\n\toptions?: Array<{\n\t\tname: string;\n\t\tvalue: string;\n\t}>;\n};\n\ntype SingleFormatterParameter = {\n\tname: string;\n\tdisplayName: string;\n\ttype: SupportedPropertyTypes;\n\tdefaultValue?: string;\n\tvalue?: string;\n\tselectedKey?: string;\n\tselected?: boolean;\n\tproperties?: Array<SingleFormatterProperty>;\n\tdefaultSelectedKey?: string;\n\toptions?: Array<{\n\t\tname: string;\n\t\tvalue: string;\n\t}>;\n};\n\nexport type FormatterConfiguration = {\n\tproperty?: string;\n\tformatterName: string;\n\tdisplayName: string;\n\tparameters?: Array<SingleFormatterParameter>;\n\ttype: string;\n\tvisible: boolean;\n};\n\nexport type FormatterConfigurationMap = Array<FormatterConfiguration>;\n"],"mappings":"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","ignoreList":[]}