{"version":3,"file":"IntegrationCardHelper-dbg.js","names":["sap","ui","define","sap_cards_ap_generator_odata_v2_MetadataAnalyzer","sap_cards_ap_generator_odata_v4_MetadataAnalyzer","VersionInfo","CoreElement","V2OdataUtils","V4ODataUtils","___odata_ODataUtils","___types_CommonTypes","___utils_CommonUtils","___ApplicationInfo","___Batch","___I18nHelper","___PropertyExpression","enhanceManifestWithInsights","mCardManifest","rootComponent","Promise","resolve","sapAppId","getManifest","id","load","library","then","_VersionInfo$load","sapCoreVersionInfo","templateName","parentAppId","cardType","versions","ui5","version","buildTimestamp","e","reject","getPropertyReference","getPropertyReferenceKey","getDataType","isODataV4Model","ColorIndicator","getColorForGroup","ApplicationInfo","ODataModelVersion","updateManifestWithExpandQueryParams","updateManifestWithSelectQueryParams","resolveI18nTextFromResourceModel","extractPathExpressionWithoutUOM","extractPathWithoutUOM","extractPropertyConfigurationWithoutTextArrangement","getTextArrangementFromCardManifest","hasFormatter","isExpression","isI18nExpression","updateAndGetSelectedFormatters","manifest","formatterConfigurationFromCardManifest","createInitialManifest","props","title","subTitle","description","service","serviceModel","entitySetName","data","bODataV4","dataPath","dataPathHeader","propertyReferenceKeys","entityKeyPropertiesParameters","forEach","keyProp","name","type","value","entityKeyProperties","map","_version","i18n","applicationVersion","technology","icons","icon","extension","configuration","parameters","_contentSelectQuery","length","join","_headerSelectQuery","_contentExpandQuery","_headerExpandQuery","_entitySet","destinations","defaultUrl","csrfTokens","token1","request","url","method","headers","batch","header","getHeaderBatchUrl","Accept","retryAfter","content","getContentBatchUrl","path","unitOfMeasurement","mainIndicator","number","unit","groups","contentDensities","compact","cozy","dependencies","libs","lazy","getObjectPageContext","entitySet","getInstance","fetchDetails","appModel","getModel","contextParameters","keyProperties","property","parameter","formatLiteral","push","formatValue","getCurrentCardManifest","renderCardPreview","newManifest","oModel","oCard","getElementById","setBaseUrl","setManifest","refresh","updateCardGroups","configurationGroups","getProperty","advancedPanelCriticallity","items","filter","configurationItem","matchedCriticallity","columnItem","updatedColorState","criticality","criticalityValue","activeCalculation","item","label","state","hasActions","actions","resolvePropertyLabelFromExpression","resourceModel","properties","propertyPath","find","labelWithValue","formatterExpression","selectedFormatter","handleFormatter","getMainIndicator","mManifest","mainIndicatorKey","trendOptions","referenceValue","downDifference","upDifference","criticalityOptions","updateCriticalityBasedOnGroups","mainIndicatorStatusKey","mainIndicatorNavigationSelectedKey","navigationValue","formatterExpressions","trend","trendValue","regex","match","criticalityConfig","updateCriticalityOptions","includes","split","group","criticallityState","getCriticallityStateForGroup","itemExists","some","option","None","getSideIndicators","sideIndicators","targetValue","targetUnit","deviationValue","deviationUnit","targetIndicator","deviationIndicator","formatter","f","getGroupItemValue","getCardGroups","groupItem","isEnabled","isNavigationEnabled","enhanceManifestWithConfigurationParameters","oDialogModel","sapCard","applicationInfo","getRootComponent","odataModel","V4","configurationParameters","textArrangements","propertyFormatting","arrangement","Object","keys","arrangementType","arrangements","text","addQueryParametersToManifest","cardManifest","cardManifestCopy","JSON","parse","stringify","batchRequest","selectQueryHeader","selectQueryContent","expandQueryHeader","expandQueryContent","headerUrl","contentUrl","indexOf","configParameters","updateConfigurationParametersWithKeyProperties","updateHeaderDataPath","headerData","updateExistingCardManifest","undefined","componentName","parseCard","integrationCardManifest","subtitle","uom","splice","textArrangementsFromCardManifest","headerUOM","mainIndicatorOptions","sideIndicatorOptions","__exports","__esModule"],"sources":["IntegrationCardHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getPropertyReference } from \"sap/cards/ap/generator/odata/v2/MetadataAnalyzer\";\nimport { getPropertyReferenceKey } from \"sap/cards/ap/generator/odata/v4/MetadataAnalyzer\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Component from \"sap/ui/core/Component\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, { CardManifest, Group, GroupItems, ObjectContent, PropertyFormattingParameters } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport V2OdataUtils from \"sap/ui/model/odata/ODataUtils\";\nimport { default as V2ODataModel } from \"sap/ui/model/odata/v2/ODataModel\";\nimport { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport V4ODataUtils from \"sap/ui/model/odata/v4/ODataUtils\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport { getDataType, isODataV4Model } from \"../odata/ODataUtils\";\nimport { ColorIndicator } from \"../types/CommonTypes\";\nimport { getColorForGroup } from \"../utils/CommonUtils\";\nimport { ApplicationInfo, LibVersionInfo, ODataModelVersion } from \"./ApplicationInfo\";\nimport { updateManifestWithExpandQueryParams, updateManifestWithSelectQueryParams } from \"./Batch\";\nimport type { CriticalityOptions, SideIndicatorOptions, TrendOptions } from \"./CardGeneratorModel\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"./Formatter\";\nimport { resolveI18nTextFromResourceModel } from \"./I18nHelper\";\nimport {\n\textractPathExpressionWithoutUOM,\n\textractPathWithoutUOM,\n\textractPropertyConfigurationWithoutTextArrangement,\n\tgetTextArrangementFromCardManifest,\n\thasFormatter,\n\tisExpression,\n\tisI18nExpression,\n\tupdateAndGetSelectedFormatters\n} from \"./PropertyExpression\";\n\nexport type ParsedManifest = {\n\ttitle: string;\n\tsubtitle: string;\n\theaderUOM: string;\n\tmainIndicatorOptions: {\n\t\tmainIndicatorStatusKey: string;\n\t\tcriticalityOptions: Array<object>;\n\t\tmainIndicatorNavigationSelectedKey: string;\n\t\tnavigationValue: string;\n\t\ttrendOptions: TrendOptions;\n\t};\n\tsideIndicatorOptions: SideIndicatorOptions;\n\tgroups: Array<object>;\n\tformatterConfigurationFromCardManifest: FormatterConfigurationMap;\n\ttextArrangementsFromCardManifest: Array<ArrangementOptions>;\n};\nlet manifest: CardManifest;\nconst formatterConfigurationFromCardManifest: FormatterConfigurationMap = [];\n\nexport function createInitialManifest(props: any) {\n\tconst { title, subTitle, description, service, serviceModel, sapAppId, sapCoreVersionInfo, entitySetName, data } = props;\n\tconst bODataV4 = isODataV4Model(serviceModel);\n\tconst dataPath = bODataV4 ? \"/content/\" : \"/content/d/\";\n\tconst dataPathHeader = bODataV4 ? \"/header/\" : \"/header/d/\";\n\tconst propertyReferenceKeys = bODataV4\n\t\t? getPropertyReferenceKey(serviceModel, entitySetName)\n\t\t: getPropertyReference(serviceModel, entitySetName);\n\tconst entityKeyPropertiesParameters: Record<string, { type: string; value: string }> = {};\n\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tentityKeyPropertiesParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n\n\tconst entityKeyProperties = propertyReferenceKeys.map((keyProp) => keyProp.name);\n\n\tmanifest = {\n\t\t_version: \"1.15.0\",\n\t\t\"sap.app\": {\n\t\t\tid: sapAppId,\n\t\t\ttype: \"card\",\n\t\t\ti18n: \"../../../i18n/i18n.properties\",\n\t\t\ttitle: title,\n\t\t\tsubTitle: subTitle,\n\t\t\tdescription: description,\n\t\t\tapplicationVersion: {\n\t\t\t\tversion: \"1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"sap.ui\": {\n\t\t\ttechnology: \"UI5\",\n\t\t\ticons: {\n\t\t\t\ticon: \"sap-icon://switch-classes\"\n\t\t\t}\n\t\t},\n\t\t\"sap.card\": {\n\t\t\textension: \"module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension\",\n\t\t\ttype: \"Object\",\n\t\t\tconfiguration: {\n\t\t\t\tparameters: {\n\t\t\t\t\t...entityKeyPropertiesParameters,\n\t\t\t\t\t_contentSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_contentExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_entitySet: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: entitySetName\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdestinations: {\n\t\t\t\t\tservice: {\n\t\t\t\t\t\tname: \"(default)\",\n\t\t\t\t\t\tdefaultUrl: \"/\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcsrfTokens: {\n\t\t\t\t\ttoken1: {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\turl: `{{destinations.service}}${service}`,\n\t\t\t\t\t\t\t\tmethod: \"HEAD\",\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\trequest: {\n\t\t\t\t\turl: `{{destinations.service}}${service}/$batch`,\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"X-CSRF-Token\": \"{{csrfTokens.token1}}\",\n\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t},\n\t\t\t\t\tbatch: {\n\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getHeaderBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tretryAfter: 30\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getContentBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\theader: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPathHeader\n\t\t\t\t},\n\t\t\t\ttype: \"Numeric\",\n\t\t\t\ttitle: title,\n\t\t\t\tsubTitle: subTitle,\n\t\t\t\tunitOfMeasurement: \"\",\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber: \"\",\n\t\t\t\t\tunit: \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPath\n\t\t\t\t},\n\t\t\t\tgroups: []\n\t\t\t}\n\t\t},\n\t\t\"sap.ui5\": {\n\t\t\t_version: \"1.1.0\",\n\t\t\tcontentDensities: {\n\t\t\t\tcompact: true,\n\t\t\t\tcozy: true\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\tlibs: {\n\t\t\t\t\t\"sap.insights\": {\n\t\t\t\t\t\tlazy: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"sap.insights\": {\n\t\t\ttemplateName: \"ObjectPage\",\n\t\t\tparentAppId: sapAppId,\n\t\t\tcardType: \"LEAN_DT\",\n\t\t\tversions: {\n\t\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t\t}\n\t\t}\n\t};\n\treturn manifest;\n}\n\nfunction getObjectPageContext() {\n\tconst { rootComponent, entitySet } = ApplicationInfo.getInstance().fetchDetails();\n\tconst appModel = rootComponent.getModel() as V2ODataModel | V4ODataModel;\n\tconst contextParameters: string[] = [];\n\tconst bODataV4 = isODataV4Model(appModel);\n\n\tif (bODataV4) {\n\t\tconst keyProperties = getPropertyReferenceKey(appModel as V4ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V4ODataUtils.formatLiteral(`{{parameters.${property.name}}}`, property.type);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t} else {\n\t\tconst keyProperties = getPropertyReference(appModel as V2ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V2OdataUtils.formatValue(`{{parameters.${property.name}}}`, property.type, true);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t}\n\n\treturn contextParameters.join(\",\");\n}\n\nfunction getHeaderBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._headerSelectQuery}}{{parameters._headerExpandQuery}}`;\n}\n\nfunction getContentBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._contentSelectQuery}}{{parameters._contentExpandQuery}}`;\n}\n\nexport function getCurrentCardManifest(): CardManifest {\n\treturn manifest || {};\n}\n\n/**\n * Render integration card preview\n *\n * @param {CardManifest} newManifest\n */\nexport function renderCardPreview(newManifest: CardManifest, oModel?: JSONModel) {\n\tmanifest = { ...newManifest };\n\tupdateManifestWithSelectQueryParams(manifest);\n\toModel && updateManifestWithExpandQueryParams(manifest);\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tif (oCard) {\n\t\toCard.setBaseUrl(\"./\");\n\t\toCard.setManifest(manifest);\n\t\toCard.refresh();\n\t}\n}\n\nexport function updateCardGroups(oModel: JSONModel) {\n\tconst configurationGroups: Group[] = oModel.getProperty(\"/configuration/groups\");\n\tconst advancedPanelCriticallity = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\n\tconst groups = configurationGroups.map(function (configuration) {\n\t\tconst items = configuration?.items\n\t\t\t?.filter(function (configurationItem) {\n\t\t\t\treturn configurationItem.name;\n\t\t\t})\n\t\t\t.map((configurationItem) => {\n\t\t\t\tconst matchedCriticallity = advancedPanelCriticallity?.filter(\n\t\t\t\t\t(columnItem: CriticalityOptions) => columnItem.name === configurationItem.name\n\t\t\t\t);\n\t\t\t\tlet updatedColorState;\n\t\t\t\tif (matchedCriticallity?.[0]?.criticality) {\n\t\t\t\t\tconst criticalityValue = matchedCriticallity[0]?.activeCalculation\n\t\t\t\t\t\t? matchedCriticallity[0]\n\t\t\t\t\t\t: matchedCriticallity[0]?.criticality;\n\t\t\t\t\tupdatedColorState = getColorForGroup(criticalityValue);\n\t\t\t\t}\n\t\t\t\tconst item: any = {\n\t\t\t\t\tlabel: configurationItem.label,\n\t\t\t\t\tvalue: configurationItem.value,\n\t\t\t\t\tname: configurationItem.name\n\t\t\t\t};\n\t\t\t\tif (updatedColorState) {\n\t\t\t\t\titem.state = updatedColorState;\n\t\t\t\t\titem.type = \"Status\";\n\t\t\t\t}\n\t\t\t\tif (configurationItem.hasActions) {\n\t\t\t\t\titem[\"actions\"] = configurationItem.actions;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\t\treturn {\n\t\t\ttitle: configuration.title,\n\t\t\titems: items ? items : []\n\t\t};\n\t});\n\t(manifest[\"sap.card\"].content as ObjectContent).groups = groups;\n\trenderCardPreview(manifest, oModel);\n}\n\n/**\n *  Resolves the card header properties from stored manifest\n *  - If path is a string, return the resolved i18n text\n * \t- If path is an expression, resolve the expression then return the labelWithValue of the property\n *  - If path is an expression with formatter, update the formatter configuration and return the labelWithValue of the property\n * @param path\n * @param resourceModel\n * @param properties\n * @returns\n */\nexport function resolvePropertyLabelFromExpression(path: string, resourceModel: ResourceModel, properties: PropertyInfoMap) {\n\tif (isI18nExpression(path)) {\n\t\treturn resolveI18nTextFromResourceModel(path, resourceModel);\n\t}\n\n\tif (isExpression(path) && !hasFormatter(path)) {\n\t\tconst propertyPath = extractPathWithoutUOM(path);\n\t\treturn properties.find((property) => property.name === propertyPath)?.labelWithValue ?? \"\";\n\t}\n\n\tif (isExpression(path) && hasFormatter(path)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(path);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn properties.find((property) => property.name === selectedFormatter.property)?.labelWithValue ?? \"\";\n\t}\n\n\treturn path;\n}\n\nfunction getMainIndicator(mManifest: CardManifest) {\n\tconst mainIndicator = mManifest[\"sap.card\"].header.mainIndicator;\n\tlet mainIndicatorKey = \"\";\n\tlet trendOptions: TrendOptions = {\n\t\treferenceValue: \"\",\n\t\tdownDifference: \"\",\n\t\tupDifference: \"\"\n\t};\n\tconst criticalityOptions: CriticalityOptions[] = [];\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\n\tif (groups.length > 0) {\n\t\tupdateCriticalityBasedOnGroups(mManifest, criticalityOptions);\n\t}\n\n\tif (!mainIndicator || !mainIndicator.number) {\n\t\treturn {\n\t\t\tmainIndicatorStatusKey: \"\",\n\t\t\tmainIndicatorNavigationSelectedKey: \"\",\n\t\t\tcriticalityOptions,\n\t\t\tnavigationValue: \"\",\n\t\t\ttrendOptions\n\t\t};\n\t}\n\n\tconst { propertyPath, formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(mainIndicator.number, mManifest);\n\tconst state = mainIndicator.state;\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\tif (isExpression(propertyPath) && !hasFormatter(propertyPath)) {\n\t\tmainIndicatorKey = extractPathWithoutUOM(propertyPath);\n\t}\n\tif (mainIndicator.trend && mainIndicator.trend !== \"None\") {\n\t\tconst trendValue = mainIndicator.trend;\n\t\tconst regex = /\"referenceValue\":(\\d+),\"downDifference\":(\\d+),\"upDifference\":(\\d+)/;\n\t\tconst match = trendValue.match(regex);\n\n\t\tif (match) {\n\t\t\ttrendOptions = {\n\t\t\t\treferenceValue: match[1] || \"\",\n\t\t\t\tdownDifference: match[2] || \"\",\n\t\t\t\tupDifference: match[3] || \"\"\n\t\t\t};\n\t\t}\n\t}\n\n\tif (isExpression(propertyPath) && hasFormatter(propertyPath)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(propertyPath);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tmainIndicatorKey = selectedFormatter.property || \"\";\n\t}\n\tlet criticalityConfig: CriticalityOptions = {\n\t\tcriticality: \"\",\n\t\tname: \"\",\n\t\tactiveCalculation: false\n\t};\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tcriticalityConfig = {\n\t\t\tcriticality: \"{\" + selectedFormatter.property + \"}\",\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t} else if (state && state !== \"None\") {\n\t\tcriticalityConfig = {\n\t\t\tcriticality: state,\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t}\n\tif (criticalityConfig.name.length) {\n\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t}\n\n\tlet mainIndicatorNavigationSelectedKey = \"\";\n\tlet mainIndicatorStatusKey = mainIndicatorKey;\n\tif (mainIndicatorKey.includes(\"/\")) {\n\t\tmainIndicatorStatusKey = mainIndicatorKey.split(\"/\")[0];\n\t\tmainIndicatorNavigationSelectedKey = mainIndicatorKey.split(\"/\")[1];\n\t}\n\treturn {\n\t\tmainIndicatorStatusKey,\n\t\tmainIndicatorNavigationSelectedKey,\n\t\tcriticalityOptions,\n\t\tnavigationValue: mainIndicatorKey,\n\t\ttrendOptions\n\t};\n}\n/**\n * Updates the criticality options based on the groups in the provided CardManifest.\n * @param {CardManifest} mManifest - The card manifest containing the groups and their items.\n * @param {CriticalityOptions[]} criticalityOptions - An array of criticality options to be updated.\n */\n\nfunction updateCriticalityBasedOnGroups(mManifest: CardManifest, criticalityOptions: CriticalityOptions[]) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tgroups.forEach((group) => {\n\t\tgroup.items.forEach((item) => {\n\t\t\tif (item.state) {\n\t\t\t\tconst criticallityState = getCriticallityStateForGroup(item.state);\n\t\t\t\tconst criticalityConfig: CriticalityOptions = {\n\t\t\t\t\tcriticality: criticallityState,\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tactiveCalculation: false\n\t\t\t\t};\n\t\t\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Update the criticality options\n * @param criticalityOptions\n * @param criticalityConfig\n */\nfunction updateCriticalityOptions(criticalityOptions: CriticalityOptions[], criticalityConfig: CriticalityOptions) {\n\tconst itemExists = criticalityOptions.some((option) => option.name === criticalityConfig.name);\n\tif (!itemExists) {\n\t\tcriticalityOptions.push(criticalityConfig);\n\t}\n}\n\n/**\n * Gets the criticality state for a group based on the provided state string.\n *\n * This function checks if the state has a formatter associated with it.\n * If so, it processes the formatter and returns its property in a specific format.\n * If the state corresponds to a known criticality state, it returns the corresponding\n * color indicator. If the state is not recognized, it defaults to the 'None' indicator.\n *\n * @param {string} state - The state string to evaluate for criticality.\n * @returns {string} - The criticality state as a string based on the ColorIndicator enum.\n *                    Possible return values include:\n *                    - ColorIndicator.Error\n *                    - ColorIndicator.Success\n *                    - ColorIndicator.None\n *                    - ColorIndicator.Warning\n */\nexport function getCriticallityStateForGroup(state: string) {\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn \"{\" + selectedFormatter.property + \"}\";\n\t}\n\n\tif (state && state in ColorIndicator) {\n\t\treturn ColorIndicator[state as keyof typeof ColorIndicator];\n\t}\n\n\treturn ColorIndicator.None;\n}\n\nfunction getSideIndicators(mManifest: CardManifest): SideIndicatorOptions {\n\tconst sideIndicators = mManifest[\"sap.card\"].header.sideIndicators || [];\n\n\tif (sideIndicators.length === 0 || !sideIndicators[0].number) {\n\t\treturn {\n\t\t\ttargetValue: \"\",\n\t\t\ttargetUnit: \"\",\n\t\t\tdeviationValue: \"\",\n\t\t\tdeviationUnit: \"\"\n\t\t};\n\t}\n\n\tconst [targetIndicator = {}, deviationIndicator = {}] = sideIndicators;\n\tconst { number: targetValue = \"\", unit: targetUnit = \"\" } = targetIndicator;\n\n\tconst { number: deviationValue = \"\", unit: deviationUnit = \"\" } = deviationIndicator;\n\n\treturn {\n\t\ttargetValue,\n\t\ttargetUnit,\n\t\tdeviationValue,\n\t\tdeviationUnit\n\t};\n}\n\nfunction handleFormatter(formatter: FormatterConfiguration) {\n\tif (\n\t\tformatterConfigurationFromCardManifest.length === 0 ||\n\t\t!formatterConfigurationFromCardManifest.find((f) => f.property === formatter.property)\n\t) {\n\t\tformatterConfigurationFromCardManifest.push({ ...formatter });\n\t}\n}\n\nfunction getGroupItemValue(value: string, mManifest: CardManifest) {\n\tconst { formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(value, mManifest);\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\treturn value;\n}\n\nfunction getCardGroups(mManifest: CardManifest, resourceModel: ResourceModel) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tif (groups.length === 0) {\n\t\treturn [];\n\t}\n\n\treturn groups.map((group) => {\n\t\treturn {\n\t\t\ttitle: resolveI18nTextFromResourceModel(group.title, resourceModel),\n\t\t\titems: group.items.map((item) => {\n\t\t\t\tconst groupItem: GroupItems = {\n\t\t\t\t\tlabel: resolveI18nTextFromResourceModel(item.label, resourceModel),\n\t\t\t\t\tvalue: getGroupItemValue(item.value, mManifest),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tisEnabled: true,\n\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t};\n\t\t\t\tif (item.state) {\n\t\t\t\t\tgroupItem.type = \"Status\";\n\t\t\t\t\tgroupItem.state = item.state;\n\t\t\t\t}\n\t\t\t\treturn groupItem;\n\t\t\t})\n\t\t};\n\t});\n}\n\n/**\n * This is a fix for cards which are generated without \"sap.insights\" manifest property or with cardType as \"DT\".\n *  - When the card is regenerated \"sap.insight\" property will be set/updated existing in the manifest.\n *\n * @param mCardManifest\n * @param rootComponent\n * @returns\n */\nexport async function enhanceManifestWithInsights(mCardManifest: CardManifest | undefined, rootComponent: Component) {\n\tif (!mCardManifest) {\n\t\treturn;\n\t}\n\tconst sapAppId = rootComponent.getManifest()[\"sap.app\"].id;\n\tconst sapCoreVersionInfo = (await VersionInfo.load({\n\t\tlibrary: \"sap.ui.core\"\n\t})) as LibVersionInfo;\n\n\tmCardManifest[\"sap.insights\"] = {\n\t\ttemplateName: \"ObjectPage\",\n\t\tparentAppId: sapAppId,\n\t\tcardType: \"LEAN_DT\",\n\t\tversions: {\n\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t}\n\t};\n}\n\n/**\n * Enhance the card manifest configuration parameters with property formatting configuration\n * \t- add text arrangements properties\n *\n * @param mCardManifest\n * @param oDialogModel\n */\nexport function enhanceManifestWithConfigurationParameters(mCardManifest: CardManifest, oDialogModel: JSONModel) {\n\tconst sapCard = mCardManifest[\"sap.card\"];\n\tconst applicationInfo = ApplicationInfo.getInstance();\n\tconst rootComponent = applicationInfo.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet } = applicationInfo.fetchDetails();\n\tconst keyProperties: string[] = [];\n\n\tif (odataModel === ODataModelVersion.V4) {\n\t\tgetPropertyReferenceKey(appModel as V4ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t} else {\n\t\tgetPropertyReference(appModel as V2ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t}\n\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\n\tconst configurationParameters = sapCard.configuration.parameters;\n\tconfigurationParameters[\"_propertyFormatting\"] = {};\n\tconst textArrangements = oDialogModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\") as ArrangementOptions[];\n\n\tconst propertyFormatting: PropertyFormattingParameters = {};\n\ttextArrangements.forEach((arrangement) => {\n\t\tif (Object.keys(arrangement).length > 0) {\n\t\t\tconst { name, arrangementType, value } = arrangement;\n\n\t\t\tpropertyFormatting[name] = {\n\t\t\t\tarrangements: {\n\t\t\t\t\ttext: {\n\t\t\t\t\t\t[arrangementType]: true,\n\t\t\t\t\t\tpath: value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n\tif (Object.keys(propertyFormatting).length > 0) {\n\t\tconfigurationParameters[\"_propertyFormatting\"] = propertyFormatting;\n\t}\n\n\tconfigurationParameters[\"_mandatoryODataParameters\"] = {\n\t\tvalue: keyProperties\n\t};\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\n\tkeyProperties.forEach((keyProp) => {\n\t\tconfigurationParameters[keyProp] = {\n\t\t\ttype: getDataType(keyProp),\n\t\t\tvalue: \"\"\n\t\t};\n\t});\n}\n\n/**\n * Adds query parameters to the URLs in the manifest's batch request.\n *\n * @param {CardManifest} cardManifest - The card manifest.\n * @returns {CardManifest} A copy of the original card manifest with query parameters added to the URLs.\n */\n\nexport const addQueryParametersToManifest = (cardManifest?: CardManifest): CardManifest => {\n\tconst cardManifestCopy = JSON.parse(JSON.stringify(cardManifest));\n\tconst batchRequest = cardManifestCopy[\"sap.card\"].data?.request?.batch;\n\tconst selectQueryHeader = \"?{{parameters._headerSelectQuery}}\";\n\tconst selectQueryContent = \"?{{parameters._contentSelectQuery}}\";\n\tconst expandQueryHeader = \"{{parameters._headerExpandQuery}}\";\n\tconst expandQueryContent = \"{{parameters._contentExpandQuery}}\";\n\tconst headerUrl = batchRequest?.header?.url;\n\tconst contentUrl = batchRequest?.content?.url;\n\n\tif (headerUrl?.indexOf(selectQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${selectQueryHeader}${expandQueryHeader}`;\n\t} else if (headerUrl?.indexOf(expandQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${expandQueryHeader}`;\n\t}\n\tif (contentUrl?.indexOf(selectQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${selectQueryContent}${expandQueryContent}`;\n\t} else if (contentUrl?.indexOf(expandQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${expandQueryContent}`;\n\t}\n\n\tconst configParameters = cardManifestCopy[\"sap.card\"].configuration?.parameters;\n\tconfigParameters._contentSelectQuery = configParameters?._contentSelectQuery ?? { value: \"\" };\n\tconfigParameters._headerSelectQuery = configParameters?._headerSelectQuery ?? { value: \"\" };\n\tconfigParameters._contentExpandQuery = configParameters?._contentExpandQuery ?? { value: \"\" };\n\tconfigParameters._headerExpandQuery = configParameters?._headerExpandQuery ?? { value: \"\" };\n\n\treturn cardManifestCopy;\n};\n\nconst updateConfigurationParametersWithKeyProperties = (cardManifest: CardManifest, data: Record<string, any>) => {\n\tconst applicationInfo = ApplicationInfo.getInstance();\n\tconst rootComponent = applicationInfo.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet } = applicationInfo.fetchDetails();\n\tconst propertyReferenceKeys =\n\t\todataModel === ODataModelVersion.V4\n\t\t\t? getPropertyReferenceKey(appModel as V4ODataModel, entitySet)\n\t\t\t: getPropertyReference(appModel as V2ODataModel, entitySet);\n\n\tconst sapCard = cardManifest[\"sap.card\"];\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\tconst configurationParameters = sapCard.configuration.parameters;\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tconfigurationParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n};\n\n/**\n * Updates the data path of the card header in the provided card manifest by reference.\n *\n * @param {CardManifest} cardManifest - The card manifest object that contains the header data.\n */\nfunction updateHeaderDataPath(cardManifest: CardManifest) {\n\tconst headerData = cardManifest[\"sap.card\"].header.data;\n\n\tif (headerData?.path && headerData.path !== \"/header/d/\") {\n\t\theaderData.path = \"/header/d/\";\n\t}\n}\n\n/**\n * This method is used to perform updates on existing integration card manifest.\n * Updates will include adding,\n * \t- Query parameters to the URLs in the target manifest's batch request.\n * \t- sap.app.id to the manifest.\n * @param cardManifest\n */\nexport const updateExistingCardManifest = (cardManifest?: CardManifest, data: Record<string, any>): CardManifest | undefined => {\n\tif (!cardManifest) {\n\t\treturn cardManifest;\n\t}\n\n\tcardManifest = addQueryParametersToManifest(cardManifest);\n\tconst batch = cardManifest[\"sap.card\"].data.request?.batch;\n\n\tif (batch !== undefined) {\n\t\tbatch.header.url = getHeaderBatchUrl();\n\t\tbatch.content.url = getContentBatchUrl();\n\t}\n\tcardManifest[\"sap.app\"].id = ApplicationInfo.getInstance().fetchDetails().componentName;\n\tcardManifest[\"sap.app\"].i18n = cardManifest[\"sap.app\"].i18n || \"../../../i18n/i18n.properties\";\n\tupdateConfigurationParametersWithKeyProperties(cardManifest, data);\n\tupdateHeaderDataPath(cardManifest);\n\treturn cardManifest;\n};\n\nexport function parseCard(\n\tintegrationCardManifest: CardManifest,\n\tresourceModel: ResourceModel,\n\tproperties: PropertyInfoMap\n): ParsedManifest {\n\tconst title = integrationCardManifest[\"sap.card\"].header.title ?? \"\";\n\tconst subtitle = integrationCardManifest[\"sap.card\"].header.subTitle ?? \"\";\n\tconst uom = integrationCardManifest[\"sap.card\"].header.unitOfMeasurement ?? \"\";\n\tformatterConfigurationFromCardManifest.splice(0, formatterConfigurationFromCardManifest.length);\n\tconst textArrangementsFromCardManifest: Array<ArrangementOptions> = getTextArrangementFromCardManifest(integrationCardManifest);\n\n\treturn {\n\t\ttitle: resolvePropertyLabelFromExpression(title, resourceModel, properties),\n\t\tsubtitle: resolvePropertyLabelFromExpression(subtitle, resourceModel, properties),\n\t\theaderUOM: resolvePropertyLabelFromExpression(uom, resourceModel, properties),\n\t\tmainIndicatorOptions: getMainIndicator(integrationCardManifest),\n\t\tsideIndicatorOptions: getSideIndicators(integrationCardManifest),\n\t\tgroups: getCardGroups(integrationCardManifest, resourceModel),\n\t\tformatterConfigurationFromCardManifest,\n\t\ttextArrangementsFromCardManifest\n\t};\n}\n"],"mappings":"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","ignoreList":[]}