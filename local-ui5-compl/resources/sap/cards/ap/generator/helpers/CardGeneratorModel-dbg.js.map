{"version":3,"file":"CardGeneratorModel-dbg.js","names":["sap","ui","define","sap_cards_ap_common_services_RetrieveCard","CoreLib","JSONModel","___odata_ODataUtils","___ApplicationInfo","___FooterActions","___Formatter","___IntegrationCardHelper","___NavigationProperty","___PropertyExpression","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","getCardActionInfo","oAppComponent","data","resourceModel","mCardManifest","_temp2","_getDefaultAction","annotationActions","cardActions","addedActions","bODataV4","styles","getActionStyles","isAddActionEnabled","actionExists","odataModel","entitySet","ApplicationInfo","getInstance","fetchDetails","ODataModelVersion","V4","getCardActions","_temp","Promise","resolve","getDefaultAction","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","getKeyParameters","createPathWithEntityContext","fetchDataAsync","getLabelForEntitySet","getNavigationPropertyInfoFromEntity","getPropertyInfoFromEntity","formatPropertyDropdownValues","getDefaultPropertyFormatterConfig","getDefaultPropertyFormatterConfigForNavProperties","parseCard","getNavigationPropertiesWithLabel","resolvePropertyPathFromExpression","UnitCollection","Name","Value","_mergePropertyFormatters","defaultPropertyFormatters","arguments","undefined","userProvidedPropertyFormatters","mergedFormatters","propertyFormatter","find","formatter","property","updateUnitOfMeasures","unitOfMeasures","formatterConfigsWithUnit","forEach","matchingProperty","unitConfig","name","parameters","replace","formatterProperty","propertyKeyForDescription","propertyKeyForId","getCardGeneratorDialogModel","applicationInfo","oResourceBundle","getResourceBundleFor","mManifest","getManifest","oAppModel","getModel","cardTitle","title","cardSubtitle","description","entitySetWithObjectContext","serviceUrl","semanticObject","action","entitySetName","properties","propertiesWithNavigation","navigationProperty","selectProperties","map","urlParameters","$select","join","path","_temp16","propertyValueFormatters","parsedManifest","formatterConfigurationFromCardManifest","addLabelsForProperties","mData","mainIndicatorOptions","mainIndicatorCriticalityOptions","criticalityOptions","selectedKeyCriticality","criticality","mainIndicatorStatusKey","trends","trendOptions","sideIndicators","sideIndicatorOptions","mainIndicatorNavigationSelectedKey","navigationValue","selectedNavigationalProperties","_ref","propertiesWithLabel","navigationPropertyData","selectedNavigationPropertyHeader","updateNavigationPropertiesWithLabel","mainIndicatorNavigationSelectedValue","labelWithValue","filter","formatterConfig","formatterName","advancedFormattingOptions","textArrangements","textArrangementsFromCardManifest","sourceCriticalityProperty","targetFormatterProperty","sourceUoMProperty","textArrangementSourceProperty","isPropertyFormattingEnabled","mainIndicatorStatusUnit","_temp14","_temp13","groups","getText","items","label","isEnabled","isNavigationEnabled","_temp12","_temp11","headerUOM","_temp10","subtitle","_temp9","_getCardActionInfo","_getKeyParameters","dialogModelData","configuration","indicatorsValue","selectedTrendOptions","selectedIndicatorOptions","selectedContentNavigation","selectedHeaderNavigation","oDataV4","$data","targetUnit","deviationUnit","errorControls","actions","groupLimitReached","keyParameters","appIntent","dialogModel","propertyValueFormattersForNavigationalProperties","_temp15","_temp8","group","item","propertyPath","_temp6","includes","navigationEntitySet","split","_ref2","navigationalProperties","_temp7","textArrangement","_temp5","_temp3","isNavigationForId","_ref3","navigationalPropertiesForId","_temp4","isNavigationForDescription","_ref4","navigationalPropertiesForDescription","propertyExists","uomProperty","UOM","category","navigationProperties","navigationEntityName","__exports","__esModule"],"sources":["CardGeneratorModel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getKeyParameters } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport Component from \"sap/ui/core/Component\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport {\n\tcreatePathWithEntityContext,\n\tfetchDataAsync,\n\tgetLabelForEntitySet,\n\tgetNavigationPropertyInfoFromEntity,\n\tgetPropertyInfoFromEntity\n} from \"../odata/ODataUtils\";\nimport { ActionStyles, AnnotationAction, ControlProperties } from \"../types/ActionTypes\";\nimport { ApplicationInfo, ODataModelVersion } from \"./ApplicationInfo\";\nimport { getActionStyles, getCardActions, getDefaultAction } from \"./FooterActions\";\nimport {\n\tFormatterConfiguration,\n\tFormatterConfigurationMap,\n\tformatPropertyDropdownValues,\n\tgetDefaultPropertyFormatterConfig,\n\tgetDefaultPropertyFormatterConfigForNavProperties\n} from \"./Formatter\";\nimport { parseCard } from \"./IntegrationCardHelper\";\nimport { getNavigationPropertiesWithLabel } from \"./NavigationProperty\";\nimport { resolvePropertyPathFromExpression } from \"./PropertyExpression\";\n\nexport type GroupItem = {\n\tlabel: string;\n\tvalue: string;\n\tisEnabled: boolean;\n\tname: string;\n\tnavigationProperty?: string;\n\tisNavigationEnabled?: boolean;\n\tnavigationalProperties?: Array<string>;\n};\n\nexport type EntityType = {\n\t[key: string]: any;\n};\nexport type Property = {\n\tlabel?: string;\n\ttype: string;\n\tname: string;\n};\nexport type NavigationParameter = {\n\tname: string;\n\tvalue: Array<string>;\n\tproperties?: Property[];\n};\nexport type NavigationalData = {\n\tname: string;\n\tvalue: Property[];\n};\nexport type NavigationParameters = {\n\tparameters: NavigationParameter[];\n};\n\nexport type ObjectCardGroups = {\n\ttitle: string;\n\titems: Array<GroupItem>;\n};\n\nexport type CriticalityOptions = {\n\tactiveCalculation: boolean;\n\tname: string;\n\tcriticality: string;\n};\n\nexport type MainIndicatorOptions = {\n\tcriticality: Array<CriticalityOptions>;\n};\n\ntype UnitOfMeasures = {\n\tpropertyKeyForDescription: string;\n\tname: string;\n\tpropertyKeyForId: string;\n\tvalue: string;\n};\n\ntype AdvancedFormattingOptions = {\n\tunitOfMeasures: Array<UnitOfMeasures>;\n\ttextArrangements: Array<ArrangementOptions>;\n\tpropertyValueFormatters: Array<object>;\n\tsourceCriticalityProperty: Array<object>;\n\ttargetFormatterProperty: string;\n\tsourceUoMProperty: string;\n\tselectedKeyCriticality: string;\n\ttextArrangementSourceProperty: string;\n\tisPropertyFormattingEnabled?: boolean;\n};\n\nexport type TrendOptions = {\n\treferenceValue: string;\n\tdownDifference: string;\n\tupDifference: string;\n\ttargetValue?: string;\n\tsourceProperty?: string;\n};\nexport type SideIndicatorOptions = {\n\ttargetValue: string;\n\ttargetUnit: string;\n\tdeviationValue: string;\n\tdeviationUnit: string;\n\tsourceProperty?: string;\n};\n\ntype CardActions = {\n\tannotationActions: Array<AnnotationAction>;\n\taddedActions: ControlProperties[];\n\tbODataV4: boolean;\n\tstyles: ActionStyles[];\n\tisAddActionEnabled: boolean;\n\tactionExists: boolean;\n};\n\ntype PropertyValue = string | null | undefined;\n\nexport type TrendOrIndicatorOptions = {\n\tsourceProperty: string;\n};\n\ntype KeyParameter = {\n\tkey: string;\n\tformattedValue: string;\n};\n\n/**\n * Description for the interface CardGeneratorDialogConfiguration\n * @interface CardGeneratorDialogConfiguration\n * @property {string} title The title of the card\n * @property {string} subtitle The subtitle of the card\n * @property {string} headerUOM The header unit of measure\n * @property {MainIndicatorOptions} mainIndicatorOptions The main indicator options\n * @property {string} mainIndicatorStatusKey The main indicator status key\n * @property {string} mainIndicatorStatusUnit The main indicator status unit\n * @property {string} entitySet The entity set\n * @property {Array<ObjectCardGroups>} groups The groups of the card displayed on content\n * @property {Array<object>} properties The properties\n * @property {AdvancedFormattingOptions} advancedFormattingOptions The advanced formatting options\n * @property {Array<object>} selectedTrendOptions The selected trend options\n * @property {Array<object>} selectedIndicatorOptions The selected indicator options\n * @property {TrendOptions} trendOptions The trend options\n * @property {object} $data Data used for adaptive card preview\n * @property {object} targetUnit The target unit\n * @property {object} deviationUnit The deviation unit\n * @property {boolean} groupLimitReached Flag maintained to check if the group limit is reached\n * @property {Array<KeyParameter>} keyParameters The key parameters\n */\ninterface CardGeneratorDialogConfiguration {\n\ttitle: string;\n\tsubtitle?: string;\n\theaderUOM?: string;\n\tmainIndicatorOptions?: MainIndicatorOptions;\n\tmainIndicatorStatusKey?: string;\n\tmainIndicatorStatusUnit?: string;\n\tmainIndicatorNavigationSelectedValue?: string;\n\tmainIndicatorNavigationSelectedKey?: string;\n\tentitySet: string;\n\tgroups: Array<ObjectCardGroups>;\n\tproperties: Array<object>;\n\tadvancedFormattingOptions: AdvancedFormattingOptions;\n\tselectedTrendOptions: Array<TrendOptions>;\n\tselectedIndicatorOptions: Array<SideIndicatorOptions>;\n\tnavigationProperty: Array<object>;\n\tselectedContentNavigation: Array<NavigationParameter>;\n\tselectedHeaderNavigation: Array<NavigationParameter>;\n\tselectedNavigationPropertyHeader: NavigationParameter;\n\ttrendOptions: TrendOptions;\n\toDataV4: boolean;\n\tserviceUrl: string;\n\t$data?: object;\n\ttargetUnit?: object;\n\tdeviationUnit?: object;\n\tactions: CardActions;\n\tgroupLimitReached: boolean;\n\tkeyParameters: Array<KeyParameter>;\n}\n\ninterface CardGeneratorDialog {\n\ttitle: string;\n\tconfiguration: CardGeneratorDialogConfiguration;\n}\n\nconst UnitCollection = [\n\t{\n\t\tName: \"K\",\n\t\tValue: \"K\"\n\t},\n\t{\n\t\tName: \"%\",\n\t\tValue: \"%\"\n\t}\n];\n\n/**\n * Merges the default property formatters with the user provided property formatters\n *\n * @param {FormatterConfigurationMap} defaultPropertyFormatters The default property formatters\n * @param {FormatterConfigurationMap} userProvidedPropertyFormatters The user provided property formatters\n * @returns {FormatterConfigurationMap} The merged property formatters\n * @private\n *\n */\nexport function _mergePropertyFormatters(\n\tdefaultPropertyFormatters: FormatterConfigurationMap = [],\n\tuserProvidedPropertyFormatters: FormatterConfigurationMap = []\n): FormatterConfigurationMap {\n\tconst mergedFormatters = [...userProvidedPropertyFormatters] as FormatterConfigurationMap;\n\n\tfor (const propertyFormatter of defaultPropertyFormatters) {\n\t\tif (!mergedFormatters.find((formatter) => formatter.property === propertyFormatter.property)) {\n\t\t\tmergedFormatters.push({ ...propertyFormatter });\n\t\t}\n\t}\n\n\treturn mergedFormatters;\n}\n\nexport async function getCardActionInfo(\n\toAppComponent: Component,\n\tdata: Record<string, PropertyValue>,\n\tresourceModel?: ResourceModel,\n\tmCardManifest?: CardManifest\n) {\n\tconst { odataModel, entitySet } = ApplicationInfo.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst cardActions = getCardActions(oAppComponent, entitySet, bODataV4);\n\treturn {\n\t\tannotationActions: cardActions,\n\t\taddedActions: cardActions.length > 0 ? await getDefaultAction(resourceModel, data, mCardManifest) : [],\n\t\tbODataV4: bODataV4,\n\t\tstyles: getActionStyles(),\n\t\tisAddActionEnabled: true,\n\t\tactionExists: cardActions.length > 0\n\t};\n}\n\nexport function updateUnitOfMeasures(\n\tunitOfMeasures: Array<UnitOfMeasures>,\n\tformatterConfigsWithUnit: FormatterConfigurationMap\n): Array<UnitOfMeasures> {\n\tformatterConfigsWithUnit.forEach((formatter: FormatterConfiguration) => {\n\t\tconst matchingProperty = unitOfMeasures.find((unitConfig: UnitOfMeasures) => unitConfig.name === formatter.property);\n\t\tlet value = formatter.parameters?.[0].value?.replace(/\\$\\{/g, \"\");\n\t\tvalue = value?.replace(/\\}/g, \"\");\n\t\tconst formatterProperty = formatter.property;\n\n\t\tif (matchingProperty && value) {\n\t\t\tmatchingProperty.propertyKeyForDescription = value;\n\t\t\tmatchingProperty.value = value;\n\t\t} else if (value && formatterProperty) {\n\t\t\tunitOfMeasures.push({\n\t\t\t\tpropertyKeyForDescription: value,\n\t\t\t\tname: formatterProperty,\n\t\t\t\tpropertyKeyForId: formatterProperty,\n\t\t\t\tvalue: value\n\t\t\t});\n\t\t}\n\t});\n\treturn unitOfMeasures;\n}\n\nexport const getCardGeneratorDialogModel = async (oAppComponent: Component, mCardManifest?: CardManifest) => {\n\tconst applicationInfo = ApplicationInfo.getInstance().fetchDetails();\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst mManifest = oAppComponent.getManifest();\n\tconst oAppModel = oAppComponent.getModel();\n\tconst cardTitle: string = mManifest[\"sap.app\"].title;\n\tconst cardSubtitle: string = mManifest[\"sap.app\"].description;\n\tconst { entitySetWithObjectContext, serviceUrl, semanticObject, action } = applicationInfo;\n\tconst entitySetName = applicationInfo.entitySet;\n\tconst bODataV4 = applicationInfo.odataModel === ODataModelVersion.V4;\n\tconst entitySet = getLabelForEntitySet(bODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel), entitySetName);\n\tconst properties = getPropertyInfoFromEntity(\n\t\tbODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel),\n\t\tentitySetName,\n\t\tfalse\n\t);\n\tconst propertiesWithNavigation = getPropertyInfoFromEntity(\n\t\tbODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel),\n\t\tentitySetName,\n\t\ttrue,\n\t\toResourceBundle\n\t);\n\tconst navigationProperty = getNavigationPropertyInfoFromEntity(\n\t\tbODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel),\n\t\tentitySetName\n\t);\n\n\tconst selectProperties = properties.map((property) => property.name);\n\tlet urlParameters = {};\n\tif (selectProperties.length) {\n\t\turlParameters = {\n\t\t\t$select: selectProperties.join(\",\")\n\t\t};\n\t}\n\n\tconst path = await createPathWithEntityContext(entitySetWithObjectContext, oAppModel, bODataV4);\n\tconst data = await fetchDataAsync(serviceUrl, path, bODataV4, urlParameters);\n\tconst unitOfMeasures: Array<UnitOfMeasures> = [];\n\tconst mData: {\n\t\t[key: string]: PropertyValue;\n\t} = {};\n\t// We are adding labels and values for properties\n\taddLabelsForProperties(properties, data, mData, unitOfMeasures);\n\n\tlet propertyValueFormatters = getDefaultPropertyFormatterConfig(oResourceBundle, properties);\n\tconst propertyValueFormattersForNavigationalProperties = getDefaultPropertyFormatterConfigForNavProperties(oResourceBundle, navigationProperty);\n\tpropertyValueFormatters = _mergePropertyFormatters(propertyValueFormatters, propertyValueFormattersForNavigationalProperties);\n\n\tlet parsedManifest;\n\tif (mCardManifest) {\n\t\tparsedManifest = parseCard(mCardManifest, oAppComponent.getModel(\"i18n\") as ResourceModel, properties);\n\n\t\tfor (const textArrangement of parsedManifest.textArrangementsFromCardManifest) {\n\t\t\tif (textArrangement.isNavigationForDescription) {\n\t\t\t\tconst navigationEntitySet = textArrangement.propertyKeyForDescription;\n\t\t\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\toAppComponent,\n\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\tpath\n\t\t\t\t);\n\t\t\t\ttextArrangement.navigationalPropertiesForDescription = propertiesWithLabel;\n\t\t\t\tupdateNavigationPropertiesWithLabel(\n\t\t\t\t\tnavigationProperty,\n\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\ttextArrangement.navigationalPropertiesForDescription\n\t\t\t\t);\n\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (textArrangement.isNavigationForId) {\n\t\t\t\tconst navigationEntitySet = textArrangement.propertyKeyForId as string;\n\t\t\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\toAppComponent,\n\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\tpath\n\t\t\t\t);\n\t\t\t\ttextArrangement.navigationalPropertiesForId = propertiesWithLabel;\n\t\t\t\tupdateNavigationPropertiesWithLabel(navigationProperty, navigationEntitySet, textArrangement.navigationalPropertiesForId);\n\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const group of parsedManifest.groups) {\n\t\t\tfor (const item of group.items) {\n\t\t\t\tconst propertyPath = resolvePropertyPathFromExpression(item.value, mCardManifest);\n\t\t\t\tif (propertyPath?.includes(\"/\")) {\n\t\t\t\t\tconst [navigationEntitySet, property] = propertyPath.replace(/[{}]/g, \"\").split(\"/\");\n\t\t\t\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\t\toAppComponent,\n\t\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\t\tpath\n\t\t\t\t\t);\n\t\t\t\t\titem.navigationalProperties = propertiesWithLabel;\n\t\t\t\t\titem.isNavigationEnabled = true;\n\t\t\t\t\titem.isEnabled = false;\n\t\t\t\t\titem.navigationProperty = property;\n\t\t\t\t\tupdateNavigationPropertiesWithLabel(navigationProperty, navigationEntitySet, item.navigationalProperties);\n\n\t\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpropertyValueFormatters = _mergePropertyFormatters(propertyValueFormatters, parsedManifest?.formatterConfigurationFromCardManifest);\n\taddLabelsForProperties(propertiesWithNavigation, data, mData, unitOfMeasures);\n\n\tconst mainIndicatorOptions = parsedManifest?.mainIndicatorOptions;\n\tconst mainIndicatorCriticalityOptions = mainIndicatorOptions?.criticalityOptions || [];\n\tconst selectedKeyCriticality = mainIndicatorCriticalityOptions.length ? mainIndicatorCriticalityOptions[0].criticality : \"\";\n\tconst mainIndicatorStatusKey = parsedManifest?.mainIndicatorOptions.mainIndicatorStatusKey || \"\";\n\tconst trends = parsedManifest?.mainIndicatorOptions.trendOptions;\n\tconst sideIndicators = parsedManifest?.sideIndicatorOptions;\n\n\tconst mainIndicatorNavigationSelectedKey = parsedManifest?.mainIndicatorOptions.mainIndicatorNavigationSelectedKey || \"\";\n\tconst navigationValue = parsedManifest?.mainIndicatorOptions.navigationValue || \"\";\n\tconst selectedNavigationalProperties = [];\n\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\toAppComponent,\n\t\tmainIndicatorStatusKey,\n\t\tpath\n\t);\n\tconst selectedNavigationPropertyHeader = {\n\t\tname: mainIndicatorStatusKey,\n\t\tvalue: propertiesWithLabel\n\t};\n\tupdateNavigationPropertiesWithLabel(navigationProperty, mainIndicatorStatusKey, selectedNavigationPropertyHeader.value);\n\n\tif (mainIndicatorStatusKey.length > 0 && (mData[mainIndicatorStatusKey] === null || mData[mainIndicatorStatusKey] === undefined)) {\n\t\tmData[mainIndicatorStatusKey] = navigationPropertyData[mainIndicatorStatusKey];\n\t}\n\n\tif (selectedNavigationPropertyHeader.name) {\n\t\tselectedNavigationalProperties.push(selectedNavigationPropertyHeader);\n\t}\n\n\tconst mainIndicatorNavigationSelectedValue =\n\t\tselectedNavigationPropertyHeader.value.find((value) => value.name === mainIndicatorNavigationSelectedKey)?.labelWithValue || \"\";\n\n\tconst formatterConfigsWithUnit =\n\t\tparsedManifest?.formatterConfigurationFromCardManifest.filter(\n\t\t\t(formatterConfig) => formatterConfig.formatterName === \"format.unit\"\n\t\t) || [];\n\n\tconst advancedFormattingOptions: AdvancedFormattingOptions = {\n\t\tunitOfMeasures:\n\t\t\tformatterConfigsWithUnit.length > 0 ? updateUnitOfMeasures(unitOfMeasures, formatterConfigsWithUnit) : unitOfMeasures,\n\t\ttextArrangements: parsedManifest?.textArrangementsFromCardManifest || [],\n\t\tpropertyValueFormatters: propertyValueFormatters,\n\t\tsourceCriticalityProperty: [],\n\t\ttargetFormatterProperty: \"\",\n\t\tsourceUoMProperty: mainIndicatorOptions?.mainIndicatorStatusKey || \"\",\n\t\tselectedKeyCriticality: selectedKeyCriticality,\n\t\ttextArrangementSourceProperty: mainIndicatorStatusKey,\n\t\tisPropertyFormattingEnabled: !!(mainIndicatorStatusKey && mainIndicatorNavigationSelectedKey === \"\")\n\t};\n\tconst mainIndicatorStatusUnit =\n\t\t(mainIndicatorStatusKey && propertiesWithNavigation.find((property) => property.name === mainIndicatorStatusKey)?.labelWithValue) ||\n\t\t\"\";\n\tconst dialogModelData: CardGeneratorDialog = {\n\t\ttitle: `${entitySet}`,\n\t\tconfiguration: {\n\t\t\ttitle: parsedManifest?.title || cardTitle,\n\t\t\tsubtitle: parsedManifest?.subtitle || cardSubtitle,\n\t\t\theaderUOM: parsedManifest?.headerUOM || \"\",\n\t\t\tmainIndicatorOptions: {\n\t\t\t\tcriticality: mainIndicatorCriticalityOptions\n\t\t\t},\n\t\t\tadvancedFormattingOptions: advancedFormattingOptions,\n\t\t\ttrendOptions: trends as TrendOptions,\n\t\t\tindicatorsValue: sideIndicators,\n\t\t\tselectedTrendOptions: trends ? [trends] : [],\n\t\t\tselectedIndicatorOptions: sideIndicators ? [sideIndicators] : [],\n\t\t\tselectedNavigationPropertyHeader,\n\t\t\tselectedContentNavigation: [],\n\t\t\tselectedHeaderNavigation: [],\n\t\t\tnavigationProperty,\n\t\t\tmainIndicatorNavigationSelectedValue,\n\t\t\tmainIndicatorStatusKey,\n\t\t\tnavigationValue,\n\t\t\tmainIndicatorNavigationSelectedKey,\n\t\t\tmainIndicatorStatusUnit,\n\t\t\tselectedNavigationalProperties,\n\t\t\tentitySet: entitySet,\n\t\t\toDataV4: bODataV4,\n\t\t\tserviceUrl: serviceUrl,\n\t\t\tproperties: properties,\n\t\t\tpropertiesWithNavigation: propertiesWithNavigation,\n\t\t\tgroups: parsedManifest?.groups || [\n\t\t\t\t{\n\t\t\t\t\ttitle: oResourceBundle?.getText(\"GENERATOR_DEFAULT_GROUP_NAME\", [1]),\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\t\tisEnabled: false,\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tnavigationProperty: \"\",\n\t\t\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t$data: mData,\n\t\t\ttargetUnit: UnitCollection,\n\t\t\tdeviationUnit: UnitCollection,\n\t\t\terrorControls: [],\n\t\t\tactions: await getCardActionInfo(oAppComponent, mData, oAppComponent.getModel(\"i18n\") as ResourceModel, mCardManifest),\n\t\t\tgroupLimitReached: false,\n\t\t\tkeyParameters: await getKeyParameters(oAppComponent),\n\t\t\tappIntent: `${semanticObject}-${action}`\n\t\t}\n\t};\n\n\tconst dialogModel = new JSONModel(dialogModelData);\n\treturn dialogModel;\n};\n\nexport function addLabelsForProperties(\n\tproperties: PropertyInfoMap,\n\tdata: Record<string, unknown>,\n\tmData: {\n\t\t[key: string]: PropertyValue;\n\t},\n\tunitOfMeasures: Array<object>\n) {\n\tproperties.forEach((property) => {\n\t\tif (property.name && data[property.name] !== undefined && data[property.name] !== null) {\n\t\t\tconst value = formatPropertyDropdownValues(property, data[property.name] as string);\n\t\t\tproperty.value = data[property.name] as string;\n\t\t\tproperty.labelWithValue = value;\n\t\t\tconst propertyExists = unitOfMeasures.find((uomProperty) => uomProperty.name === property.name);\n\n\t\t\tif (property.UOM && property.name && !propertyExists) {\n\t\t\t\tunitOfMeasures.push({\n\t\t\t\t\tpropertyKeyForDescription: property.UOM,\n\t\t\t\t\tname: property.name,\n\t\t\t\t\tpropertyKeyForId: property.name,\n\t\t\t\t\tvalue: property.UOM\n\t\t\t\t});\n\t\t\t}\n\t\t\tmData[property.name] = data[property.name] as string;\n\t\t} else {\n\t\t\tproperty.labelWithValue = property.category ? `${property.label}` : `${property.label} (<empty>)`;\n\t\t}\n\t});\n}\n\nfunction updateNavigationPropertiesWithLabel(\n\tnavigationProperties: NavigationParameter[],\n\tnavigationEntityName: string,\n\tpropertiesWithLabel: Property[]\n) {\n\tconst navigationProperty = navigationProperties.find((property) => property.name === navigationEntityName);\n\tif (!navigationProperty) {\n\t\treturn;\n\t}\n\n\tnavigationProperty.properties = [...propertiesWithLabel];\n}\n"],"mappings":"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","ignoreList":[]}