{"version":3,"file":"Transpiler-dbg-dbg.js","names":["sap","ui","define","sap_cards_ap_common_adaptiveCards_AdaptiveCardRenderer","sap_cards_ap_transpiler_cardTranspiler_Transpile","CoreElement","ODataUtils","getAdaptiveCardForRendering","convertIntegrationCardToAdaptive","transpileIntegrationCardToAdaptive","oDialogModel","oCard","getElementById","oManifest","getManifest","keyParameters","getProperty","appIntent","oAdaptiveCardManifest","adaptiveCardData","Object","assign","properties","forEach","property","isDate","name","dateValue","toISOString","iterateObject","$data","sHostConfig","getSelectedItem","getBindingContext","renderedCard","adaptiveCardPreview","document","querySelector","setTimeout","innerHTML","updateEmptyStrings","appendChild","nodeList","querySelectorAll","nodeArray","Array","from","node","textContent","includes","key","hasOwnProperty","processKey","value","isPropertyTypeDate","__edmType","__exports","__esModule"],"sources":["Transpiler.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getAdaptiveCardForRendering } from \"sap/cards/ap/common/adaptiveCards/AdaptiveCardRenderer\";\nimport { convertIntegrationCardToAdaptive } from \"sap/cards/ap/transpiler/cardTranspiler/Transpile\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport * as ODataUtils from \"../odata/ODataUtils\";\n\ntype AdaptiveCardData = {\n\t[key: string]: string | DateObject;\n};\n\ntype DateObject = {\n\t__edmType: string;\n\t[key: string]: unknown;\n};\n\n/**\n * Transpiles an Integration Card into an Adaptive Card.\n *\n * @param {JSONModel} oDialogModel - The Integration Card to transpile.\n * @returns {AdaptiveCard} The resulting Adaptive Card.\n * @throws {TranspilationError} If the Integration Card cannot be transpiled.\n */\nexport function transpileIntegrationCardToAdaptive(oDialogModel: JSONModel) {\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tconst oManifest = oCard.getManifest() as CardManifest;\n\tconst keyParameters = oDialogModel.getProperty(\"/configuration/keyParameters\");\n\tconst appIntent = oDialogModel.getProperty(\"/configuration/appIntent\");\n\tconst oAdaptiveCardManifest = convertIntegrationCardToAdaptive(oManifest, appIntent, keyParameters);\n\tconst adaptiveCardData = Object.assign({}, oDialogModel.getProperty(\"/configuration/$data\"));\n\tconst properties = oDialogModel.getProperty(\"/configuration/properties\");\n\tproperties.forEach(function (property) {\n\t\tif (property?.isDate && adaptiveCardData[property?.name] && typeof adaptiveCardData[property?.name] === \"object\") {\n\t\t\tconst dateValue = adaptiveCardData[property?.name];\n\t\t\tadaptiveCardData[property?.name] = dateValue?.toISOString() ? dateValue?.toISOString() : adaptiveCardData[property?.name];\n\t\t}\n\t});\n\n\titerateObject(adaptiveCardData);\n\n\toAdaptiveCardManifest.$data = adaptiveCardData;\n\tconst sHostConfig = (CoreElement.getElementById(\"cardGeneratorDialog--preview-select\") as any)\n\t\t.getSelectedItem()\n\t\t.getBindingContext(\"previewOptions\")\n\t\t.getProperty(\"hostConfig\");\n\n\tlet renderedCard: HTMLElement | undefined;\n\tif (sHostConfig) {\n\t\trenderedCard = getAdaptiveCardForRendering(sHostConfig, oAdaptiveCardManifest);\n\t}\n\tconst adaptiveCardPreview = document.querySelector(\"#adaptiveCardPreview\");\n\n\tif (adaptiveCardPreview && renderedCard) {\n\t\tsetTimeout(function () {\n\t\t\tadaptiveCardPreview.innerHTML = \"\";\n\t\t\tupdateEmptyStrings(renderedCard);\n\t\t\tadaptiveCardPreview.appendChild(renderedCard);\n\t\t});\n\t}\n}\n\n/**\n * Function to update &minus; strings in the rendered card textblock to '-'\n * as JS Engine will not understand &minus; and will not render it to '-'.\n *\n * @param renderedCard\n */\nfunction updateEmptyStrings(renderedCard: HTMLElement): void {\n\tconst nodeList = renderedCard.querySelectorAll(\".ac-textBlock\");\n\tconst nodeArray = Array.from(nodeList);\n\tnodeArray.forEach((node) => {\n\t\tif (node.textContent?.includes(\"&minus;\")) {\n\t\t\tnode.textContent = \"-\";\n\t\t}\n\t});\n}\n\n/**\n * Iterates over the properties of the given adaptive card data object and processes each key.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object to iterate over.\n * @returns {void}\n */\nfunction iterateObject(adaptiveCardData: AdaptiveCardData): void {\n\tfor (const key in adaptiveCardData) {\n\t\tif (adaptiveCardData.hasOwnProperty(key)) {\n\t\t\tprocessKey(adaptiveCardData, key);\n\t\t}\n\t}\n}\n\n/**\n * Processes a key in the adaptive card data object. If the value associated with the key is an object\n * and has a valid EDM type, it converts the value to an ISO string if possible. It also recursively\n * iterates over the object if the value is an object.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object containing the key to process.\n * @param {string} key - The key in the adaptive card data object to process.\n */\nfunction processKey(adaptiveCardData: AdaptiveCardData, key: string): void {\n\tconst value = adaptiveCardData[key];\n\tif (typeof value === 'object' && value !== null) {\n\t\tif (ODataUtils.isPropertyTypeDate(value?.__edmType)) {\n\t\t\tadaptiveCardData[key] = value?.toISOString ? value.toISOString() : value;\n\t\t}\n\t\titerateObject(value);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}