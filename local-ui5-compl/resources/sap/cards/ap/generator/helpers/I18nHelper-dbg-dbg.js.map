{"version":3,"file":"I18nHelper-dbg-dbg.js","names":["sap","ui","define","Log","jQuery","i18nMap","i18nPayload","I18nClassificationsMap","Title","Label","Button","hasBinding","propertyValue","startsWith","isJSONData","value","JSON","parse","Error","getPropertyValue","partialManifest","key","updatedKey","replaceAll","seti18nValueToMap","text","trim","length","inserti18nKeysManifest","integrationCardManifest","i18nKey","split","reduce","number","textClassification","keyType","comment","inserti18nPayLoad","type","description","groupPath","payload","push","writei18nPayload","ajax","url","headers","data","stringify","success","info","error","reseti18nProperties","createi18nKeysForActionParameters","index","actionPath","adaptiveCardAction","adaptiveCardActionParameters","actionParameters","forEach","actionParameter","idx","actionParameterLabel","label","actionParameterErrorMsg","errorMessage","actionParameterPlaceholder","placeholder","i18nKeyActionParamLabel","actionParameterDescription","actionParameterLabelPath","i18nKeyActionParamErrorMsg","actionParameterErrorMsgDescription","actionParameterErrorMsgPath","i18nKeyActionParamPlaceholder","actionParameterPlaceholderDescription","actionParameterPlaceholderPath","createI18nKeysForCardActions","cardManifest","actionsStrip","footer","actionPathPrefix","action","actions","parameters","replace","configuration","_adaptiveFooterActionParameters","adaptiveCardActionDescription","i18nKeyCardAction","AdaptiveCardActionTextpath","i18nKeyOkButton","okButtonDescription","okButtonPath","triggerActionText","createKeysFromManifestData","manifestHeader","header","manifestGroup","content","groups","manifestHeaderKeys","Object","keys","propertyType","propertyTypes","includes","property","toUpperCase","slice","items","configurationItem","createKeysFromGroup","title","path","groupLabelPath","itemIndex","groupIndex","groupType","itemsPath","updateManifestAppProperties","manifest","app","headerInfo","subTitle","UOMExists","unitOfMeasurement","resolveI18nTextFromResourceModel","resourceModel","endsWith","getObject","createAndStoreGeneratedi18nKeys","__exports","__esModule"],"sources":["I18nHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { AdaptiveCardAction, CardManifest, Group, GroupItems, ObjectContent } from \"sap/ui/integration/widgets/Card\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\n\ntype I18nObject = {\n\t[key: string]: string;\n};\n\ntype I18nClassifications = {\n\t[key: string]: string;\n};\n\ntype I18nProperty = {\n\tcomment: string;\n\tkey: string;\n\tvalue: string;\n};\n\ntype ManifestPartial = {\n\t[key: string]: ManifestPartial | string | number | boolean | undefined;\n};\n\nlet i18nMap: I18nObject = {};\nlet i18nPayload: Array<I18nProperty> = [];\n\nconst I18nClassificationsMap: I18nClassifications = {\n\tTitle: \"XTIT:\",\n\tLabel: \"XFLD:\",\n\tButton: \"XBUT:\",\n\t\"Group header\": \"XGRP:\"\n};\n\n/**\n * This function checks if the property value has a binding\n *\n * @param {string} propertyValue\n * @returns {boolean}\n */\nfunction hasBinding(propertyValue: string) {\n\treturn propertyValue && propertyValue.startsWith(\"{\");\n}\n\n/**\n * Function to check if the given data is of type JSON or not\n *\n * @param value\n * @returns\n */\nfunction isJSONData(value: string) {\n\ttry {\n\t\treturn JSON.parse(value) ? true : false;\n\t} catch (Error) {\n\t\treturn false;\n\t}\n}\n\n/**\n * This function gets the property value from the card manifest/sub-manifest\n * - In case if the property value is an object then return the object\n * - In case if the property value is not an object then return the object and key\n * - Added handling for keys with multiple dots should be passsed as \"parameters.[com/sap/property].name\"\n *\n * @param {object} obj The  object\n * @param {string} key\n * @returns {object}\n */\nfunction getPropertyValue(partialManifest: ManifestPartial, key: string) {\n\tif (isJSONData(key)) {\n\t\tconst updatedKey = JSON.parse(key.replaceAll(/\\//g, \".\"))?.[0];\n\t\tkey = updatedKey ? updatedKey : key;\n\t}\n\n\tif (key && typeof partialManifest[key] === \"object\" && key != \"mainIndicator\") {\n\t\treturn partialManifest[key];\n\t}\n\n\treturn {\n\t\tpartialManifest,\n\t\tkey\n\t};\n}\n\n/**\n * This function sets i18n values to a map\n *  - In case if it is a new key create a key in map.\n *  - In case if it is an existsinig one update it.\n *\n * @param {string} key\n * @param {string} value\n * @param {string} text\n */\nfunction seti18nValueToMap(key: string, value: string, text?: string) {\n\tif (!text?.trim().length) {\n\t\tdelete i18nMap[key];\n\t\treturn;\n\t}\n\ti18nMap[key] = \"{{CardGenerator\" + value + \"}}\";\n}\n\n/**\n * This function updates i18n keys to card manifest\n *\n * @param {object} integrationCardManifest The manifest object\n */\nfunction inserti18nKeysManifest(integrationCardManifest: CardManifest) {\n\tfor (const i18nKey in i18nMap) {\n\t\tconst { partialManifest, key } = i18nKey.split(\".\").reduce(getPropertyValue, integrationCardManifest[\"sap.card\"]);\n\n\t\tif (partialManifest[key]?.number && i18nMap[i18nKey]) {\n\t\t\tpartialManifest[key].number = i18nMap[i18nKey];\n\t\t} else if (partialManifest?.[key]?.trim().length > 0) {\n\t\t\tpartialManifest[key] = i18nMap[i18nKey];\n\t\t}\n\t}\n}\n\n/**\n * Gets the text classification for given i18n key and value\n *\n * @param {string} keyType Type of key\n * @param {string} comment The comments which needs to be added\n * @returns {string} The text classification string\n */\nfunction textClassification(keyType: string, comment: string): string {\n\tconst key = I18nClassificationsMap[keyType] || \"\";\n\treturn key + \" \" + comment;\n}\n\n/**\n * This function sets i18n payload to an array\n *\n * @param {string} text\n * @param {string} key\n * @param {string} type\n * @param {string} description\n * @param {string} groupPath\n */\nfunction inserti18nPayLoad(text: string, key: string, type: string, description: string, groupPath?: string) {\n\tif (text.trim().length === 0) {\n\t\treturn;\n\t}\n\tconst payload: I18nProperty = {\n\t\tcomment: textClassification(type, description),\n\t\tkey: \"CardGenerator\" + (groupPath ? key + groupPath : key),\n\t\tvalue: text\n\t};\n\ti18nPayload.push(payload);\n}\n\n/**\n * This function will create an ajax call to save i18n payload\n */\nfunction writei18nPayload() {\n\tif (i18nPayload.length === 0) {\n\t\treturn;\n\t}\n\n\tjQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: \"/editor/i18n\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tdata: JSON.stringify(i18nPayload),\n\t\tsuccess: function () {\n\t\t\tLog.info(\"i18n was successfully saved.\");\n\t\t},\n\t\terror: function () {\n\t\t\tLog.error(\"i18n could not be saved.\");\n\t\t}\n\t});\n}\n\n/**\n * This function resets i18nPayload and i18nMap\n *\n */\nfunction reseti18nProperties() {\n\ti18nPayload = [];\n\ti18nMap = {};\n}\n\n/**\n *\n * Creates i18n keys for the action parameters of an adaptive card action.\n *\n * For each action parameter the label value will be different so i18n key will be created for each action parameter label.\n * The placeholder and error message will be the same for all action parameters so i18n key will be created only once.\n *\n * @param {number} index - The index of the current action in the adaptive card actions array.\n * @param {string} actionPath - The path to the current action in the configuration parameters.\n * @param {AdaptiveCardAction} [adaptiveCardAction] - The adaptive card action object containing action parameters.\n */\nfunction createi18nKeysForActionParameters(index: number, actionPath: string, adaptiveCardAction?: AdaptiveCardAction) {\n\tconst adaptiveCardActionParameters = adaptiveCardAction?.actionParameters;\n\n\tif (adaptiveCardActionParameters?.length) {\n\t\tadaptiveCardActionParameters.forEach((actionParameter, idx) => {\n\t\t\tconst actionParameterLabel = actionParameter?.label;\n\t\t\tconst actionParameterErrorMsg = actionParameter?.errorMessage;\n\t\t\tconst actionParameterPlaceholder = actionParameter?.placeholder;\n\n\t\t\tif (actionParameterLabel) {\n\t\t\t\tconst i18nKeyActionParamLabel = `_AdaptiveCardAction_${index}_ActionParameterLabel_${idx}`;\n\t\t\t\tconst actionParameterDescription = `Label for Action Parameter ${actionParameterLabel} - Created by Card Generator`;\n\t\t\t\tconst actionParameterLabelPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.label`;\n\t\t\t\tseti18nValueToMap(actionParameterLabelPath, i18nKeyActionParamLabel, actionParameterLabel);\n\t\t\t\tinserti18nPayLoad(actionParameterLabel, i18nKeyActionParamLabel, \"Label\", actionParameterDescription);\n\t\t\t}\n\n\t\t\tif (actionParameterErrorMsg) {\n\t\t\t\tconst i18nKeyActionParamErrorMsg = `_AdaptiveCardAction_ActionParameterErrorMsg`;\n\t\t\t\tconst actionParameterErrorMsgDescription = `Error message for Action Parameters - Created by Card Generator`;\n\t\t\t\tconst actionParameterErrorMsgPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.errorMessage`;\n\t\t\t\tseti18nValueToMap(actionParameterErrorMsgPath, i18nKeyActionParamErrorMsg, actionParameterErrorMsg);\n\t\t\t\tif (idx === 0 && index === 0) {\n\t\t\t\t\tinserti18nPayLoad(actionParameterErrorMsg, i18nKeyActionParamErrorMsg, \"Label\", actionParameterErrorMsgDescription);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionParameterPlaceholder && idx === 0) {\n\t\t\t\tconst i18nKeyActionParamPlaceholder = `_AdaptiveCardAction_ActionParameterPlaceholder`;\n\t\t\t\tconst actionParameterPlaceholderDescription = `Placeholder for Action Parameters - Created by Card Generator`;\n\t\t\t\tconst actionParameterPlaceholderPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.placeholder`;\n\t\t\t\tseti18nValueToMap(actionParameterPlaceholderPath, i18nKeyActionParamPlaceholder, actionParameterPlaceholder);\n\t\t\t\tif (idx === 0 && index === 0) {\n\t\t\t\t\tinserti18nPayLoad(\n\t\t\t\t\t\tactionParameterPlaceholder,\n\t\t\t\t\t\ti18nKeyActionParamPlaceholder,\n\t\t\t\t\t\t\"Label\",\n\t\t\t\t\t\tactionParameterPlaceholderDescription\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n *\n * Creates i18n keys for card actions based on the card manifest.\n *\n * Takes care of creating i18n key for the action label and the OK button text which will be used when action type is Submit.\n * The action text for Integration card is also replaced with same i18n key that is created for the adaptive card action.\n *\n * @param {CardManifest} cardManifest - The card manifest.\n */\nfunction createI18nKeysForCardActions(cardManifest: CardManifest) {\n\tconst actionsStrip = cardManifest[\"sap.card\"]?.footer?.actionsStrip;\n\tconst actionPathPrefix = \"{{parameters.footerActionParameters.\";\n\n\tactionsStrip?.forEach((action, index) => {\n\t\tlet actionPath = action?.actions[0]?.parameters?.replace(actionPathPrefix, \"\").replace(\"}}\", \"\") ?? \"\";\n\t\tconst adaptiveCardAction = cardManifest[\"sap.card\"]?.configuration?.parameters?._adaptiveFooterActionParameters?.[actionPath];\n\n\t\tif (adaptiveCardAction?.label) {\n\t\t\tactionPath = actionPath.replaceAll(/\\./g, \"/\");\n\t\t\tconst adaptiveCardActionDescription = `Label for Action ${adaptiveCardAction?.label} - Created by Card Generator`;\n\t\t\tconst i18nKeyCardAction = `_AdaptiveCardActions_${index}_Label`;\n\t\t\tconst AdaptiveCardActionTextpath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].label`;\n\t\t\taction.text = \"{{CardGenerator\" + i18nKeyCardAction + \"}}\";\n\n\t\t\tseti18nValueToMap(AdaptiveCardActionTextpath, i18nKeyCardAction, adaptiveCardAction?.label);\n\t\t\tinserti18nPayLoad(adaptiveCardAction?.label, i18nKeyCardAction, \"Label\", adaptiveCardActionDescription);\n\n\t\t\tconst i18nKeyOkButton = \"_AdaptiveCardActions_OkButton\";\n\t\t\tconst okButtonDescription = \"Label for OK Button - Created by Card Generator\";\n\t\t\tconst okButtonPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].triggerActionText`;\n\t\t\tseti18nValueToMap(okButtonPath, i18nKeyOkButton, adaptiveCardAction?.triggerActionText);\n\n\t\t\tif (index === 0) {\n\t\t\t\tinserti18nPayLoad(adaptiveCardAction?.triggerActionText, i18nKeyOkButton, \"Button\", okButtonDescription);\n\t\t\t}\n\t\t}\n\n\t\tcreatei18nKeysForActionParameters(index, actionPath, adaptiveCardAction);\n\t});\n}\n\n/**\n * This function creates i18n keys from modal data\n *  - In case if text does not start with \"{\" create a key and set key and value to i18n map, also upload the i18n payload to the array.\n *  - In case if it is already a key then no need to create a new key.\n *\n * @param {CardManifest} cardManifest\n */\nfunction createKeysFromManifestData(cardManifest: CardManifest) {\n\tconst manifestHeader = cardManifest[\"sap.card\"].header;\n\tconst manifestGroup = (cardManifest[\"sap.card\"].content as ObjectContent).groups;\n\tconst manifestHeaderKeys = Object.keys(manifestHeader) as Array<keyof typeof manifestHeader>;\n\n\tmanifestHeaderKeys.forEach((propertyType) => {\n\t\tconst propertyTypes = [\"title\", \"subTitle\", \"unitOfMeasurement\", \"mainIndicator\"];\n\t\tif (propertyTypes.includes(propertyType)) {\n\t\t\tconst property = propertyType === \"mainIndicator\" ? manifestHeader[propertyType]?.number : manifestHeader[propertyType];\n\n\t\t\tif (hasBinding(property)) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconst key = `header.${propertyType}`;\n\t\t\t\tconst value = `Header${propertyType[0].toUpperCase() + propertyType.slice(1)}`;\n\t\t\t\tconst description = `${value} for ${property} - Created by Card Generator`;\n\n\t\t\t\tseti18nValueToMap(key, value, property);\n\t\t\t\tinserti18nPayLoad(property, value, \"Title\", description);\n\t\t\t}\n\t\t}\n\t});\n\n\tmanifestGroup.forEach((configuration: Group, index: number) => {\n\t\tconfiguration.items.forEach((configurationItem: GroupItems, idx: number) => {\n\t\t\tcreateKeysFromGroup(configurationItem.label, idx, index, \"label\");\n\n\t\t\tif (!hasBinding(configurationItem.value)) {\n\t\t\t\tcreateKeysFromGroup(configurationItem.value, idx, index, \"value\");\n\t\t\t}\n\t\t});\n\t\tconst key = \"GroupHeader\";\n\t\tconst description = `${key} for ${configuration.title} - Created by Card Generator`;\n\t\tconst path = `_Groups_${index}`;\n\t\tconst groupLabelPath = `content.groups.${index}.title`;\n\n\t\tseti18nValueToMap(groupLabelPath, key + path, configuration.title);\n\t\tinserti18nPayLoad(configuration.title, key, \"Group header\", description, path);\n\t});\n\n\tcreateI18nKeysForCardActions(cardManifest);\n}\n\n/**\n * This function creates i18n keys from manifest group data\n *  - In case if text does not start with \"{\" create a key and set key and value to i18n map, also upload the i18n payload to the array.\n *  - In case if it is already a key then no need to create a new key.\n *\n * @param {string} configurationItem\n * @param {number} itemIndex\n * @param {number} groupIndex\n * @param {string} type\n */\nfunction createKeysFromGroup(configurationItem: string, itemIndex: number, groupIndex: number, type: string) {\n\tconst groupType = \"Label\";\n\tconst key = `GroupProperty${groupType}`;\n\tconst description = `${key} for ${configurationItem} - Created by Card Generator`;\n\tconst path = `_Groups_${groupIndex}_Items_${itemIndex}`;\n\tconst itemsPath = `content.groups.${groupIndex}.items.${itemIndex}.${type}`;\n\n\tseti18nValueToMap(itemsPath, key + path, configurationItem);\n\tinserti18nPayLoad(configurationItem, key, groupType, description, path);\n}\n\nfunction updateManifestAppProperties(manifest: CardManifest) {\n\tconst app = manifest[\"sap.app\"];\n\tconst headerInfo = manifest[\"sap.card\"].header;\n\n\tif (app.title !== headerInfo.title && headerInfo.title?.startsWith(\"{{\")) {\n\t\tapp.title = headerInfo.title;\n\t}\n\tif (app.subTitle !== headerInfo.subTitle && headerInfo.subTitle?.startsWith(\"{{\")) {\n\t\tconst UOMExists: boolean = headerInfo.unitOfMeasurement ? true : false;\n\t\tapp.subTitle = UOMExists ? headerInfo.subTitle + \" | \" + headerInfo.unitOfMeasurement : headerInfo.subTitle;\n\t}\n}\n\n/**\n * This function resolves i18n text from resource model\n * - In case if key exists in resource model then return the object from resource model\n * - In case if key does not exist in resource model then return the key\n * @param key\n */\nexport function resolveI18nTextFromResourceModel(key: string, resourceModel: ResourceModel) {\n\tif (key.startsWith(\"{{\") && key.endsWith(\"}}\")) {\n\t\treturn resourceModel.getObject(key.replace(\"{{\", \"\").replace(\"}}\", \"\"));\n\t}\n\n\treturn key;\n}\n\n/**\n * This function creates i18n keys from card manifest data and stores it in i18n map and i18n payload\n * - Further it will update manifest with i18n keys\n * - and create an ajax call to save i18n payload\n * @param cardManifest\n */\nexport function createAndStoreGeneratedi18nKeys(cardManifest: CardManifest) {\n\tcreateKeysFromManifestData(cardManifest);\n\tinserti18nKeysManifest(cardManifest);\n\tupdateManifestAppProperties(cardManifest);\n\twritei18nPayload();\n\treseti18nProperties();\n}\n"],"mappings":"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","ignoreList":[]}