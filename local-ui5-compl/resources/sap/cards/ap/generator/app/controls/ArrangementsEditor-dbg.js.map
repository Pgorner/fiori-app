{"version":3,"file":"ArrangementsEditor-dbg.js","names":["sap","ui","define","Button","ComboBox","CustomListItem","HBox","List","Text","Control","CoreElement","ListItem","sap_ui_core_library","Sorter","JSONModel","____config_TextArrangementOptions","ValueState","TEXTARRANGEMENT_OPTIONS","ArrangementsEditor","extend","renderer","apiVersion","render","rm","control","openStart","openEnd","renderControl","_list","_addButton","close","metadata","properties","mode","selectionKeys","type","defaultValue","navigationSelectionKeys","items","aggregations","multiple","visibility","events","change","parameters","value","selectionChange","constructor","_constructor","settings","Control.prototype.constructor.call","this","init","_init","that","_propertyComboBox","event","handleComboBoxEvents","source","getSource","bindingContext","getBindingContext","path","getPath","model","getModel","selectedItem","getProperty","textArrangementChanged","fireEvent","getItems","_separatorColon","text","addStyleClass","_idNavigationComboBox","visible","_uomComboBox","_descriptionNavigationComboBox","_separatorColonText","_textArrangementComboBox","controlId","getParameter","getElementById","selectedKey","getSelectedKey","group","textArrangement","refresh","_deleteButton","icon","press","_onDeleteButtonClicked","bind","_onAddButtonClicked","onAfterRendering","_onAfterRendering","entityData","JSON","parse","stringify","getSelectionKeys","name","_setSelectionKeysMap","label","forEach","entity","_textArrangementComboBoxModel","i18nModel","option","getObject","setData","setSelectionKeys","_setSelectionKeys","selectionKeysArr","setAggregation","setProperty","getBindingInfo","bindingPath","getBindingPath","navigationBindingPath","bindAggregation","getMode","sorter","length","factory","key","setModel","_getTextArrangementModel","setItems","_setItems","bindProperty","bindItems","template","content","justifyContent","width","alignItems","fitContainer","_getInternalModel","_getItems","getSelectedItem","_getSelectedItem","boundData","push","bindingPathProperty","splice","slice","_handleComboBoxEvents","editor","isNavigation","arguments","undefined","isTextArrangementID","getValue","navigationProperties","isNavigationalProperty","hasNavigationProperty","propertyKeyForDescription","getGroupName","navigationKey","navigationKeyForDescription","groupVal","isValidation","getGroupValue","updateControlState","_getGroupName","navigationKeyForId","propertyKeyForId","_getGroupValue","_updateControlState","setValueState","Error","setValueStateText","errorFlag","Warning","None","_hasNavigationProperty","propertyToCheck","some","prop"],"sources":["ArrangementsEditor.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox, { $HBoxSettings } from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport Event from \"sap/ui/base/Event\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport Context from \"sap/ui/model/Context\";\nimport Model from \"sap/ui/model/Model\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { TEXTARRANGEMENT_OPTIONS } from \"../../config/TextArrangementOptions\";\nimport { NavigationParameter, Property } from \"../../helpers/CardGeneratorModel\";\nimport type { PropertyInfo } from \"../../odata/ODataTypes\";\n\nexport type ArrangementOptions = {\n\tname: string;\n\tvalue: string;\n\tpropertyKeyForId?: string;\n\tpropertyKeyForDescription: string;\n\tnavigationKeyForId: string;\n\tnavigationKeyForDescription: string;\n\tisNavigationForId: boolean;\n\tisNavigationForDescription: boolean;\n\tnavigationalPropertiesForId: Property[];\n\tnavigationalPropertiesForDescription: Property[];\n\ttextArrangement?: string;\n\tarrangementType: string;\n};\n\ninterface IArrangementsEditor {\n\tgetMode(): string;\n\tgetSelectionKeys(): object;\n\tgetItems(): Array<ArrangementOptions>;\n\t_addButton: Button;\n\t_list: List;\n}\n\ninterface ArrangementsEditorSettings extends $ControlSettings {\n\tmode: string;\n\tselectionKeys: object;\n\tnavigationSelectionKeys: object;\n\titems: object;\n\tchange?: (event: ArrangementsEditorChangeEvent) => void;\n\tselectionChange?: (event: ArrangementsEditorSelectionChangeEvent) => void;\n}\ninterface ArrangementsEditorChangeEventParameters {\n\tvalue?: number;\n}\ninterface ArrangementsEditorSelectionChangeEventParameters {\n\tvalue?: number;\n}\n\ntype ArrangementsEditorChangeEvent = Event<ArrangementsEditorChangeEventParameters>;\ntype ArrangementsEditorSelectionChangeEvent = Event<ArrangementsEditorSelectionChangeEventParameters>;\n\ntype PropertyMap = {\n\t[key: string]: string;\n};\ntype PropertyInfoMap = Array<PropertyMap>;\n\n/**\n * @namespace sap.cards.ap.generator.app.controls\n */\nexport default class ArrangementsEditor extends Control {\n\t_list!: List;\n\t_propertyComboBox!: ComboBox;\n\t_idNavigationComboBox!: ComboBox;\n\t_addButton!: Button;\n\t_separatorColon!: Text;\n\t_uomComboBox!: ComboBox;\n\t_descriptionNavigationComboBox!: ComboBox;\n\t_separatorColonText!: Text;\n\t_textArrangementComboBox!: ComboBox;\n\t_deleteButton!: Button;\n\terrorFlag!: boolean;\n\t_setSelectionKeysMap!: PropertyInfo;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\tmode: \"string\",\n\t\t\tselectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\tnavigationSelectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\titems: { type: \"object\", defaultValue: {} }\n\t\t},\n\t\taggregations: {\n\t\t\t_list: { type: \"sap.m.List\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t},\n\t\t\tselectionChange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(settings: ArrangementsEditorSettings) {\n\t\tsuper(settings);\n\t}\n\n\trenderer = {\n\t\tapiVersion: 2,\n\t\trender: function (rm: RenderManager, control: IArrangementsEditor): void {\n\t\t\trm.openStart(\"div\", control);\n\t\t\trm.openEnd();\n\t\t\trm.renderControl(control._list);\n\t\t\trm.renderControl(control._addButton);\n\t\t\trm.close(\"div\");\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the ArrangementsEditor custom control\n\t *\n\t * This method sets up various controls and event handlers used by the methods in this control\n\t *\n\t * @returns {void}\n\t */\n\n\tinit(): void {\n\t\tconst that = this;\n\t\tthis._list = new List();\n\t\tthis._propertyComboBox = new ComboBox({\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, false, true);\n\t\t\t},\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tconst textArrangementChanged = true;\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem,\n\t\t\t\t\ttextArrangementChanged\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._separatorColon = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop\");\n\t\tthis._idNavigationComboBox = new ComboBox({\n\t\t\tvisible: \"{= !!${isNavigationForId} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t});\n\t\tthis._uomComboBox = new ComboBox({\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that);\n\t\t\t}\n\t\t});\n\t\tthis._descriptionNavigationComboBox = new ComboBox({\n\t\t\tvisible: \"{= !!${isNavigationForDescription} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t});\n\t\tthis._separatorColonText = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop\");\n\t\tthis._textArrangementComboBox = new ComboBox({\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tconst controlId = event.getParameter(\"id\");\n\t\t\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\t\t\tconst selectedKey = control.getSelectedKey();\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst group = model.getProperty(path);\n\t\t\t\tgroup.textArrangement = `${selectedKey}`;\n\t\t\t\tmodel.refresh();\n\t\t\t}\n\t\t});\n\t\tthis._deleteButton = new Button({\n\t\t\ticon: \"sap-icon://delete\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onDeleteButtonClicked.bind(this)\n\t\t});\n\t\tthis._addButton = new Button({\n\t\t\ticon: \"sap-icon://add\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onAddButtonClicked.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Performs actions after ArrangementsEditor custom control has been rendered\n\t *\n\t * This method is called after the control has been rendered in the UI\n\t * It updates entity data and refreshes the internal model of the TextArrangementComboBox\n\t *\n\t * @returns {void}\n\t */\n\n\tonAfterRendering(): void {\n\t\tconst entityData = JSON.parse(JSON.stringify(this.getSelectionKeys())) as PropertyInfoMap;\n\t\tconst name = this._setSelectionKeysMap.name ?? \"\";\n\t\tconst label = this._setSelectionKeysMap.label;\n\t\tconst textArrangement = this._setSelectionKeysMap.textArrangement ?? \"\";\n\t\tentityData.forEach((entity) => {\n\t\t\tentity.name = entity[name] as string;\n\t\t\tentity.label = entity[label] as string;\n\t\t\tentity.textArrangement = entity[textArrangement] as string;\n\t\t});\n\t\tconst _textArrangementComboBoxModel = this._textArrangementComboBox.getModel(\"internal\") as JSONModel;\n\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\tTEXTARRANGEMENT_OPTIONS.forEach((option) => {\n\t\t\toption.label = i18nModel.getObject(option.label);\n\t\t});\n\t\t_textArrangementComboBoxModel.setData(TEXTARRANGEMENT_OPTIONS, true);\n\t\t_textArrangementComboBoxModel.refresh();\n\t}\n\n\t/**\n\t * Sets the selection keys\n\t *\n\t * This method forms the _setSelectionKeysMap from selectionKeys binding information,\n\t * and binds aggregation items for ComboBox controls, updates internal model of text arrangement ComboBox\n\t *\n\t * @param {Array<PropertyInfo>} selectionKeysArr - The array of selection keys\n\t * @returns {void}\n\t */\n\n\tsetSelectionKeys(selectionKeysArr: Array<PropertyInfo>): void {\n\t\tconst that = this;\n\t\tthat.setAggregation(\"_list\", that._list);\n\t\tthis.setProperty(\"selectionKeys\", selectionKeysArr);\n\t\tthis.setProperty(\"navigationSelectionKeys\", selectionKeysArr);\n\t\tthis._setSelectionKeysMap = this.getBindingInfo(\"selectionKeys\").parameters as PropertyInfo;\n\t\tconst bindingPath = this.getBindingPath(\"selectionKeys\") || \"\";\n\t\tconst navigationBindingPath = this.getBindingPath(\"navigationSelectionKeys\") || \"\";\n\n\t\tthis._propertyComboBox.bindAggregation(\"items\", {\n\t\t\tpath: this.getMode() !== \"uom\" ? navigationBindingPath : bindingPath,\n\t\t\t...(this.getMode() !== \"uom\" && { sorter: new Sorter(\"category\", true, true) }),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._uomComboBox.bindAggregation(\"items\", {\n\t\t\tpath: this.getMode() !== \"uom\" ? navigationBindingPath : bindingPath,\n\t\t\t...(this.getMode() !== \"uom\" && { sorter: new Sorter(\"category\", true, true) }),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._idNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForId/\",\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._descriptionNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForDescription/\",\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._textArrangementComboBox.setModel(this._getTextArrangementModel(), \"internal\");\n\t\tthis._textArrangementComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"internal>/\",\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{internal>name}\",\n\t\t\t\t\ttext: \"{internal>label}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets the items property with the selectionKeysArr provided\n\t * bind items for _list control using binding path of items,\n\t * creates a custom layout for each item using a HBox and arranging the content within the HBox according to the specified styles\n\t *\n\t * @param {Array<ArrangementOptions>} selectionKeysArr - The array of items to be set\n\t * @returns {void}\n\t */\n\n\tsetItems(selectionKeysArr: Array<ArrangementOptions>): void {\n\t\tthis.setProperty(\"items\", selectionKeysArr, true);\n\t\tthis._propertyComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForId\" });\n\t\tthis._idNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForId\" });\n\t\tthis._uomComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForDescription\" });\n\t\tthis._descriptionNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForDescription\" });\n\t\tthis._textArrangementComboBox.bindProperty(\"selectedKey\", { path: \"arrangementType\" });\n\t\tconst bindingPath = this.getBindingPath(\"items\") ?? \"\";\n\n\t\tthis._list.bindItems({\n\t\t\tpath: bindingPath,\n\t\t\ttemplate: new CustomListItem({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tthis._propertyComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._idNavigationComboBox,\n\t\t\t\t\t\t\tthis._separatorColon,\n\t\t\t\t\t\t\tthis._uomComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._descriptionNavigationComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._textArrangementComboBox,\n\t\t\t\t\t\t\tthis._deleteButton\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\talignItems: \"Start\",\n\t\t\t\t\t\tfitContainer: true\n\t\t\t\t\t} as $HBoxSettings)\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the internal model of the ArrangementsEditor control\n\t *\n\t * This method checks if the internal model exists. If not, it creates a new JSON model\n\t * and sets it as the internal model. It then returns the internal model\n\t *\n\t * @returns {sap.ui.model.Model} The internal model of the control\n\t */\n\n\t_getInternalModel(): Model {\n\t\tif (!this.getModel(\"internal\")) {\n\t\t\tconst model = new JSONModel({});\n\t\t\tthis.setModel(model, \"internal\");\n\t\t}\n\t\treturn this.getModel(\"internal\") as Model;\n\t}\n\n\t/**\n\t * Retrieves the items from the model\n\t *\n\t * This method fetches the items from the model using the binding path for items\n\t *\n\t * @returns {Array<ArrangementOptions>} An array containing the items retrieved from the model\n\t */\n\n\tgetItems(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\tgetSelectedItem(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\n\t/**\n\t * Creates and returns a JSON model for text arrangement options\n\t *\n\t * This method creates a new JSON model using the provided text arrangement options and returns it.\n\t *\n\t * @returns {sap.ui.model.json.JSONModel} A JSON model containing text arrangement options\n\t */\n\n\t_getTextArrangementModel(): JSONModel {\n\t\treturn new JSONModel(TEXTARRANGEMENT_OPTIONS);\n\t}\n\n\t/**\n\t * Handles the click event of the add button, adds a new item to the array and refreshes the model\n\t *\n\t * @returns {void}\n\t */\n\n\t_onAddButtonClicked(): void {\n\t\tconst model = this.getModel();\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\tif (model) {\n\t\t\tlet boundData = model.getProperty(path);\n\t\t\tif (!boundData) {\n\t\t\t\tboundData = [];\n\t\t\t}\n\t\t\tboundData.push({});\n\t\t\tmodel.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Handles the click event of the delete button, removes item to be deleted, refreshes the model and fires a change event\n\t *\n\t * @param {Event} event - The event object representing the click event\n\t * @returns {void}\n\t */\n\n\t_onDeleteButtonClicked(event: Event): void {\n\t\tconst source = event.getSource() as Control;\n\t\tconst path = (source.getBindingContext() as Context).getPath();\n\t\tconst bindingPath = this.getBindingPath(\"items\") || \"\";\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst bindingPathProperty = model.getProperty(bindingPath);\n\t\tbindingPathProperty && bindingPathProperty.splice(path.slice(path.length - 1), 1);\n\t\tmodel.refresh();\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: this.getItems()\n\t\t});\n\t}\n\n\thandleComboBoxEvents(event: Event, editor: ArrangementsEditor, isNavigation: boolean = false, isTextArrangementID: boolean = false) {\n\t\tconst controlId = event.getParameter(\"id\");\n\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\tconst selectedKey = control.getSelectedKey();\n\t\tconst source = event.getSource();\n\t\tconst bindingContext = (source as ComboBox).getBindingContext() as Context;\n\t\tconst path = bindingContext?.getPath() || \"\";\n\t\tconst value = control.getValue();\n\t\tconst model = editor.getModel() as JSONModel;\n\t\tconst group = model.getProperty(path);\n\t\tconst i18nModel = editor.getModel(\"i18n\") as ResourceModel;\n\n\t\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, group.propertyKeyForDescription);\n\t\t// Determine the group name based on conditions\n\t\tgroup.name = this.getGroupName(group, isNavigation, isTextArrangementID);\n\t\tlet navigationKey = \"\";\n\t\tif (group.navigationKeyForDescription) {\n\t\t\tnavigationKey = `/${group.navigationKeyForDescription}`;\n\t\t}\n\n\t\tconst groupVal = isNavigationalProperty ? `${group.propertyKeyForDescription}${navigationKey}` : group.propertyKeyForDescription;\n\t\tconst isValidation = group.name === groupVal;\n\t\t// Update group value based on conditions\n\t\tif (!isValidation) {\n\t\t\tgroup.value = this.getGroupValue(group, isNavigation, isTextArrangementID, selectedKey, navigationProperties);\n\t\t}\n\t\tthis.updateControlState(control, value, selectedKey, isValidation, i18nModel, editor);\n\t\tmodel.refresh();\n\t\treturn group;\n\t}\n\n\tgetGroupName(group: ArrangementOptions, isNavigation: boolean, isTextArrangementID: boolean): string {\n\t\tif (isNavigation) {\n\t\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t\t}\n\t\tif (isTextArrangementID) {\n\t\t\treturn `${group.propertyKeyForId}`;\n\t\t}\n\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t}\n\n\tgetGroupValue(\n\t\tgroup: ArrangementOptions,\n\t\tisNavigation: boolean,\n\t\tisTextArrangementID: boolean,\n\t\tselectedKey: string,\n\t\tnavigationProperties: NavigationParameter[]\n\t): string {\n\t\tconst { propertyKeyForId, propertyKeyForDescription, navigationKeyForDescription } = group;\n\n\t\tif (isNavigation) {\n\t\t\treturn navigationKeyForDescription ? `${propertyKeyForDescription}/${navigationKeyForDescription}` : propertyKeyForDescription;\n\t\t}\n\n\t\tif (isTextArrangementID) {\n\t\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, propertyKeyForId as string);\n\t\t\tif (navigationKeyForDescription) {\n\t\t\t\treturn isNavigationalProperty ? `${propertyKeyForId}` : `${propertyKeyForDescription}/${navigationKeyForDescription}`;\n\t\t\t}\n\t\t\treturn isNavigationalProperty ? (propertyKeyForId as string) : propertyKeyForDescription;\n\t\t}\n\n\t\treturn propertyKeyForDescription || selectedKey;\n\t}\n\n\tupdateControlState(\n\t\tcontrol: ComboBox,\n\t\tvalue: string,\n\t\tselectedKey: string,\n\t\tisValidation: boolean,\n\t\ti18nModel: ResourceModel,\n\t\teditor: ArrangementsEditor\n\t) {\n\t\tif (!selectedKey && value) {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"INVALID_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else if (isValidation) {\n\t\t\tcontrol.setValueState(ValueState.Warning);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"SAME_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else {\n\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\teditor.errorFlag = false;\n\t\t}\n\t}\n\n\thasNavigationProperty(navigationProperties: NavigationParameter[], propertyToCheck: string) {\n\t\treturn navigationProperties.length > 0 && navigationProperties.some((prop) => prop.name === propertyToCheck);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}