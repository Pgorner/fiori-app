/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *  * (c) Copyright 2009-2025 SAP SE. All rights reserved
 */
"use strict";sap.ui.define(["sap/base/Log","sap/cards/ap/common/services/RetrieveCard","sap/m/MessageBox","sap/ui/VersionInfo","sap/ui/core/Fragment","sap/ui/core/Lib","sap/ui/model/resource/ResourceModel","./app/CardGeneratorDialogController","./helpers/ApplicationInfo","./helpers/CardGeneratorModel","./helpers/IntegrationCardHelper","./odata/ODataUtils"],function(e,t,n,r,o,i,a,s,c,l,d,u){"use strict";function p(e,t){try{var n=e()}catch(e){return t(e)}if(n&&n.then){return n.then(void 0,t)}return n}const f=function(t){try{const s=i.getResourceBundleFor("sap.cards.ap.generator.i18n");const c=new a({bundleUrl:s.oUrlInfo.url,bundle:s});const l=m.createInstance(t);return Promise.resolve(l.validateCardGeneration()).then(function(i){if(!i){const e=c.getObject("GENERATE_CARD_NOT_SUPPORTED");n.warning(e,{actions:n.Action.OK,emphasizedAction:n.Action.OK});return}if(!D){D=o.load({id:"cardGeneratorDialog",name:"sap.cards.ap.generator.app.CardGeneratorDialog",controller:h})}let a;return Promise.resolve(r.load({library:"sap.ui.core"})).then(function(n){function r(){return Promise.resolve(C(t,a)).then(function(r){D.then(function(e){try{const o=t.getManifest();const i=o["sap.app"].title;const s=o["sap.app"].description;const d=o["sap.app"].id;const u=t.getModel();if(!u){throw new Error("No model found in the view")}const{odataModel:p,serviceUrl:f,entitySet:g,entitySetWithObjectContext:m}=l.fetchDetails();const C=p===v.V4;const I=f;const D=g;return Promise.resolve(A(m,u,C)).then(function(o){const l=y(a,r.getProperty("/configuration/$data"))||M({title:i,subTitle:s,service:I,entitySet:o,serviceModel:u,sapAppId:d,sapCoreVersionInfo:n,entitySetName:D,data:r.getProperty("/configuration/$data")});if(!e.getModel("i18n")){e.setModel(c,"i18n")}P(l);e.setModel(r);h.initialize(t,e,D);e.open();const p=document.getElementById("cardGeneratorDialog--contentSplitter");if(p){p.style.backgroundColor="#f8f8f8"}return e})}catch(e){return Promise.reject(e)}}).catch(function(t){e.error("Error while loading or initializing the dialog:",t)})})}const o=p(function(){return Promise.resolve(g(t,{cardType:I.INTEGRATION,includeActions:false,hideActions:false,isDesignMode:true})).then(function(e){a=e})},function(){e.error("Error while fetching the card manifest.")});return o&&o.then?o.then(r):r(o)})})}catch(e){return Promise.reject(e)}};const g=t["getObjectPageCardManifestForPreview"];const h=s["CardGeneratorDialogController"];const m=c["ApplicationInfo"];const v=c["ODataModelVersion"];const C=l["getCardGeneratorDialogModel"];const M=d["createInitialManifest"];const P=d["renderCardPreview"];const y=d["updateExistingCardManifest"];const A=u["createPathWithEntityContext"];var I=function(e){e["INTEGRATION"]="integration";e["ADAPTIVE"]="adaptive";return e}(I||{});let D;var E={__esModule:true};E.initializeAsync=f;return E});
//# sourceMappingURL=CardGenerator-dbg.js.map