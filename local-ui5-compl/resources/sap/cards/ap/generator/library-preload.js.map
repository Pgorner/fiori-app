{"version":3,"file":"library-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":["sap","ui","define","Control","ListItem","JSONModel","CustomListItem","Text","HBox","VBox","List","ComboBox","Button","Filter","Sorter","Input","extend","metadata","properties","selectionKeys","type","defaultValue","items","aggregations","_list","multiple","visibility","events","change","parameters","value","isCalcuationType","_isPotentialCriticality","oProperty","constructor","apply","this","arguments","onAfterRendering","that","aEntityData","JSON","parse","stringify","getSelectionKeys","forEach","oEntity","category","getModel","getObject","name","_setSelectionKeysMap","label","aStaticCriticality","oMergedEntityData","concat","_oCriticalityComboBoxModel","_oCriticalityComboBox","setData","refresh","setItems","aValue","setProperty","_itemsMap","getBindingInfo","_oPropertyComboBox","bindProperty","getType","setWidth","iLength","oCricitalityCalculator","getItems","length","setVisible","_oList","bindItems","getBindingPath","content","justifyContent","_separatorColon","_deleteButton","_getCriticalityModel","setSelectionKeys","_oPropertyFilter","path","bindAggregation","filters","factory","key","text","setModel","sorter","getProperty","init","setAggregation","oEvent","sPath","getSource","getBindingContext","getPath","fireEvent","activeCalculation","addStyleClass","bindingContext","oModel","selectedKey","getSelectedKey","sourceCriticalityCalculationPath","isSelectedKey","icon","press","_onDeleteButtonClicked","bind","visible","textAlign","width","placeholder","_addButton","_onAddButtonClicked","aBoundData","push","sItemBindingPath","sourceCriticalityProperty","aCriticalityData","index","i","undefined","sPropertyName","sSourcePropertyName","splice","slice","renderer","render","oRM","oControl","write","writeControlData","writeClasses","renderControl"],"sources":["CriticalityEditor-dbg.js"],"mappings":"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","ignoreList":[],"sourceRoot":"app/controls"}},{"offset":{"line":6,"column":0},"map":{"version":3,"names":[],"sources":["library-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":8,"column":0},"map":{"version":3,"file":"CardGenerator.js","names":["sap","ui","define","Log","sap_cards_ap_common_services_RetrieveCard","MessageBox","VersionInfo","Fragment","CoreLib","ResourceModel","___app_CardGeneratorDialogController","___helpers_ApplicationInfo","___helpers_CardGeneratorModel","___helpers_IntegrationCardHelper","___odata_ODataUtils","_catch","body","recover","result","e","then","initializeAsync","oAppComponent","oResourceBundle","getResourceBundleFor","resourceModel","bundleUrl","oUrlInfo","url","bundle","applicationInfo","ApplicationInfo","createInstance","Promise","resolve","validateCardGeneration","bValidConfiguration","warningMsg","getObject","warning","actions","Action","OK","emphasizedAction","cardGeneratorDialog","load","id","name","controller","CardGeneratorDialogController","mCardManifest","library","sapCoreVersionInfo","_temp2","getCardGeneratorDialogModel","dialogModel","oDialog","mManifest","getManifest","cardTitle","title","cardSubtitle","description","sapAppId","oAppModel","getModel","Error","odataModel","serviceUrl","entitySet","entitySetWithObjectContext","fetchDetails","bODataV4","ODataModelVersion","V4","sServiceUrl","entitySetName","createPathWithEntityContext","path","mIntegrationCardManifest","updateExistingCardManifest","getProperty","createInitialManifest","subTitle","service","serviceModel","data","setModel","renderCardPreview","initialize","open","element","document","getElementById","style","backgroundColor","reject","catch","oError","error","_temp","getObjectPageCardManifestForPreview","cardType","CardTypes","INTEGRATION","includeActions","hideActions","isDesignMode","_getObjectPageCardMan","__exports","__esModule"],"sources":["CardGenerator.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { getObjectPageCardManifestForPreview } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Component from \"sap/ui/core/Component\";\nimport type Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { CardGeneratorDialogController } from \"./app/CardGeneratorDialogController\";\nimport { ApplicationInfo, ODataModelVersion } from \"./helpers/ApplicationInfo\";\nimport { getCardGeneratorDialogModel } from \"./helpers/CardGeneratorModel\";\nimport { createInitialManifest, renderCardPreview, updateExistingCardManifest } from \"./helpers/IntegrationCardHelper\";\nimport { createPathWithEntityContext } from \"./odata/ODataUtils\";\n\nenum CardTypes {\n\tINTEGRATION = \"integration\",\n\tADAPTIVE = \"adaptive\"\n}\n\nlet cardGeneratorDialog: Promise<Control | Control[]> | undefined;\n\nexport async function initializeAsync(oAppComponent: Component) {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst resourceModel = new ResourceModel({\n\t\tbundleUrl: oResourceBundle.oUrlInfo.url,\n\t\tbundle: oResourceBundle //Reuse created bundle to stop extra network calls\n\t});\n\tconst applicationInfo = ApplicationInfo.createInstance(oAppComponent);\n\tconst bValidConfiguration = await applicationInfo.validateCardGeneration();\n\tif (!bValidConfiguration) {\n\t\tconst warningMsg: string = resourceModel.getObject(\"GENERATE_CARD_NOT_SUPPORTED\");\n\t\tMessageBox.warning(warningMsg, {\n\t\t\tactions: MessageBox.Action.OK,\n\t\t\temphasizedAction: MessageBox.Action.OK\n\t\t});\n\t\treturn;\n\t}\n\n\tif (!cardGeneratorDialog) {\n\t\tcardGeneratorDialog = Fragment.load({\n\t\t\tid: \"cardGeneratorDialog\",\n\t\t\tname: \"sap.cards.ap.generator.app.CardGeneratorDialog\",\n\t\t\tcontroller: CardGeneratorDialogController\n\t\t});\n\t}\n\n\tlet mCardManifest: CardManifest | undefined;\n\tconst sapCoreVersionInfo = await VersionInfo.load({\n\t\tlibrary: \"sap.ui.core\"\n\t});\n\ttry {\n\t\tmCardManifest = await getObjectPageCardManifestForPreview(oAppComponent, {\n\t\t\tcardType: CardTypes.INTEGRATION,\n\t\t\tincludeActions: false,\n\t\t\thideActions: false,\n\t\t\tisDesignMode: true\n\t\t});\n\t} catch (oError: unknown) {\n\t\tLog.error(\"Error while fetching the card manifest.\");\n\t}\n\tconst dialogModel = await getCardGeneratorDialogModel(oAppComponent, mCardManifest);\n\tcardGeneratorDialog\n\t\t.then(async function (oDialog: Dialog) {\n\t\t\tconst mManifest = oAppComponent.getManifest();\n\t\t\tconst cardTitle: string = mManifest[\"sap.app\"].title;\n\t\t\tconst cardSubtitle: string = mManifest[\"sap.app\"].description;\n\t\t\tconst sapAppId = mManifest[\"sap.app\"].id;\n\t\t\tconst oAppModel = oAppComponent.getModel();\n\t\t\tif (!oAppModel) {\n\t\t\t\tthrow new Error(\"No model found in the view\");\n\t\t\t}\n\n\t\t\tconst { odataModel, serviceUrl, entitySet, entitySetWithObjectContext } = applicationInfo.fetchDetails();\n\t\t\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\t\t\tconst sServiceUrl = serviceUrl;\n\t\t\tconst entitySetName = entitySet;\n\t\t\tconst path = await createPathWithEntityContext(entitySetWithObjectContext, oAppModel, bODataV4);\n\t\t\tconst mIntegrationCardManifest =\n\t\t\t\tupdateExistingCardManifest(mCardManifest, dialogModel.getProperty(\"/configuration/$data\")) ||\n\t\t\t\tcreateInitialManifest({\n\t\t\t\t\ttitle: cardTitle,\n\t\t\t\t\tsubTitle: cardSubtitle,\n\t\t\t\t\tservice: sServiceUrl,\n\t\t\t\t\tentitySet: path,\n\t\t\t\t\tserviceModel: oAppModel,\n\t\t\t\t\tsapAppId: sapAppId,\n\t\t\t\t\tsapCoreVersionInfo,\n\t\t\t\t\tentitySetName,\n\t\t\t\t\tdata: dialogModel.getProperty(\"/configuration/$data\")\n\t\t\t\t});\n\n\t\t\tif (!oDialog.getModel(\"i18n\")) {\n\t\t\t\toDialog.setModel(resourceModel, \"i18n\");\n\t\t\t}\n\t\t\trenderCardPreview(mIntegrationCardManifest);\n\t\t\toDialog.setModel(dialogModel);\n\t\t\tCardGeneratorDialogController.initialize(oAppComponent, oDialog, entitySetName);\n\t\t\toDialog.open();\n\t\t\tconst element = document.getElementById(\"cardGeneratorDialog--contentSplitter\");\n\t\t\tif (element) {\n\t\t\t\telement.style.backgroundColor = \"#f8f8f8\";\n\t\t\t}\n\t\t\treturn oDialog;\n\t\t})\n\t\t.catch(function (oError: Error) {\n\t\t\tLog.error(\"Error while loading or initializing the dialog:\", oError);\n\t\t});\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":16,"column":0},"map":{"version":3,"file":"CardGeneratorDialogController.js","names":["sap","ui","define","Log","merge","ODataUtils","sap_cards_ap_transpiler_cardTranspiler_Transpile","MessageBox","MessageToast","CoreElement","Fragment","Popup","sap_ui_core_library","Filter","JSONModel","jQuery","___config_PreviewOptions","___helpers_ApplicationInfo","___helpers_Batch","___helpers_FooterActions","___helpers_Formatter","___helpers_I18nHelper","___helpers_IntegrationCardHelper","___helpers_PropertyExpression","___helpers_Transpiler","___odata_ODataTypes","___utils_CommonUtils","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","toggleAdvancedSetting","toggleEvent","toggleButton","getSource","setEnabled","splitter","getElementById","controller","onCriticalityChange","criticalityChangeEvent","updateCriticality","getParameter","onArrangementsChange","arrangementChangeEvent","Promise","resolve","checkForNavigationProperty","updateArrangements","dialogModel","context","dialog","getModel","groups","getProperty","items","item","uom","split","slice","undefined","setProperty","aPropsWithUoM","indexOf","name","push","onPropertyFormatterChangeFromAdvancedSettings","updateHeaderArrangements","load","advancedSettings","getPressed","lastContentArea","getContentAreas","removeContentArea","insertContentArea","setTimeout","transpileIntegrationCardToAdaptive","_forOf","target","step","next","done","return","_fixup","TypeError","values","event","selectedParameters","getParameters","selectedItem","model","navigationProperties","selectedNavigationalProperties","existingIndex","findIndex","navItem","selectedProperty","find","prop","selectedPropertyName","properties","selectedPropertyValues","data","_temp5","updateCardConfigurationData","textArrangementChanged","navigationalPropertiesForId","isNavigationForId","navigationKeyForId","navigationalPropertiesForDescription","isNavigationForDescription","navigationKeyForDescription","onPropertySelection","oEvent","control","selectedKey","getSelectedKey","newValue","currentValue","oModel","validateContol","updateSelectedNavigationProperty","selectedNavigationPropertiesContent","sPath","getBindingContext","getPath","group","getArrangements","unitOfMeasures","textArrangements","propertyValueFormatters","navigationProperty","navigationalProperties","propertyLabel","getPropertyLabel","appModel","entitySet","PropertyInfoType","Property","label","isEnabled","isNavigationEnabled","refresh","updateCardGroups","okPressed","hasError","validateHeader","oCard","mManifest","getManifest","enhanceManifestWithInsights","rootComponent","enhanceManifestWithConfigurationParameters","createAndStoreGeneratedi18nKeys","updateManifestWithSelectQueryParams","keyParameters","appIntent","oAdaptiveCardManifest","convertIntegrationCardToAdaptive","configuration","parameters","contextParameters","payload","floorplan","localPath","fileName","manifests","type","manifest","default","ajax","url","headers","JSON","stringify","success","show","getTranslatedText","error","jqXHR","textStatus","errorThrown","errorMessage","status","statusText","close","isHeader","_temp4","onStateIndicatorSelection","getHeaderConfiguration","header","mainIndicator","getCriticality","number","selectedNavigationPropertyHeader","selectedValue","dataType","isDateType","isPropertyTypeDate","isNumberType","updateTrendForCardHeader","updateSideIndicatorsForHeader","updateCardHeader","selectedNavigationProperty","entitySetWithObjectContext","ApplicationInfo","getInstance","fetchDetails","serviceUrl","oDataV4","$data","queryParameters","map","property","fetchDataAsync","createUrlParameters","addLabelsForProperties","ValueState","PREVIEW_OPTIONS","addActionToCardManifest","removeActionFromManifest","resetCardActions","updateCardManifestAction","formatPropertyDropdownValues","getCurrentCardManifest","renderCardPreview","resolvePropertyPathFromExpression","isBinding","MAX_GROUPS","MAX_GROUP_ITEMS","cardActionHandlers","onActionAddClick","addedActions","title","titleKey","style","enablePathKey","isStyleControlEnabled","isConfirmationRequired","onAddedActionDelete","actionIndex","Number","deletedAction","splice","validateSelectedAction","annotationActions","some","annotationAction","getValue","action","updateRelativeproperties","addedAction","relatedAnnotationAction","filter","enabledPath","enablePath","replace","filterCardActions","comboBox","itemsBinding","getBinding","actionToFilter","loadActions","controlEvent","isSuspended","resume","addEventDelegate","onBeforeRendering","onAddedActionTitleChange","path","_temp3","setValueState","None","_temp2","_temp","Error","setValueStateText","errorControls","focus","onAddedActionStyleChange","CardGeneratorDialogController","initialize","setModel","oModelDialog","cancelPressed","closeDialog","onAddClick","onGroupAddClick","onGroupDeleteClick","onDeleteClick","updateContentNavigationSelection","onPropertyLabelChange","onTitleSelection","onSubTitleSelection","onGroupTitleChange","onDrop","onHeaderUOMSelection","updateHeaderNavigationSelection","onHeightChange","onWidthChange","onResetPressed","onItemsActionsButtonPressed","onPreviewTypeChange","onPropertyFormatting","_updateTrendForCardHeader","_updateSideIndicatorsForHeader","_setAdvancedFormattingOptionsEnablement","setAdvancedFormattingOptionsEnablement","_updateHeaderArrangements","_updateArrangements","_updateCriticality","_validateHeader","applyCriticality","applyUoMFormatting","onTrendDelete","loadAdvancedFormattingConfigurationFragment","disableOrEnableUOMAndTrend","sPropertyName","isCalcuationType","aMainIndicatorCriticality","oMatchedCriticality","oCriticality","criticality","activeCalculation","staticValues","deviationLow","deviationRangeLowValue","deviationHigh","deviationRangeHighValue","toleranceLow","toleranceRangeLowValue","toleranceHigh","toleranceRangeHighValue","sImprovementDirection","improvementDirection","oCriticalityConfigValues","Negative","Critical","Positive","sourceProperty","mainIndicatorProperty","unitsOfMeasure","mainIndicatorCriticality","selectedTrendOptions","selectedIndicatorOptions","isFormatterApplied","formatterDetail","formatterApplied","formatterName","isUOMApplied","arrangementDetail","isCriticalityApplied","indicatorCriticality","isTrendApplied","trendDetail","downDifference","isIndicatorsApplied","indicatorDetail","targetUnit","trendOptions","indicatorsValue","referenceValue","upDifference","targetValue","deviationValue","deviationUnit","fnGetHeaderConfig","key","navigationValue","sapCardHeader","currentManifest","oManifest","sideIndicators","controlName","resourceBundle","getResourceBundle","getKey","getText","controlErrorText","forEach","errorControl","index","getId","subTitle","unitOfMeasurement","propVal","ele","propertyValue","labelWithValue","updateSelectedNavigation","typeSupported","propertyType","isNaN","isUoMEnabled","navProperty","NavigationProperty","oProperty","source","selectedNavigation","existingItem","navValues","includes","propertyPath","sKey","getObject","nextItemNumber","newItem","iItemsAdded","getValueState","validateIndicatorsValues","buttonId","targetInputId","setValueStateTextForControl","deviationInputId","targetUnitInputId","deviationUnitInputId","validateTrendValues","trendValues","referenceInputId","trendDownDifferenceInputId","trendUpDifferenceInputId","controlId","isSelectControl","elementControl","validateControl","validationText","iLength","currentDefaultValue","groupLength","groupIndex","_itemActionsMenu","itemIndex","match","sValue","destroy","trend","selectedTrendOptionIndex","selectedTrendOption","newTrendValues","getTrendDirection","selectedIndicatorOptionIndex","selectedIndicatorOption","unit","indicatorsValueToAdd","mainIndicatorKey","oDragged","oDropped","sInsertPosition","oDragPos","getParent","oDropPos","sDraggedPath","sDroppedPath","aDragItems","aDropItems","iDragPosition","indexOfItem","iDropPosition","oSelectedItem","setWidth","setHeight","setValue","setCriticalitySourceProperty","sProperty","relavantCriticality","relavantProperty","parse","hostCriticality","oSource","_advancedFormattingOptionsPopover","id","onFormatTypeSelection","sourceItem","aUom","sSourceUoMProperty","aSourceUom","onAdvancedFormattingConfigOpen","oPopover","addDependent","oContext","setBindingContext","openBy","oConfigurationController","onPopoverClose","onPropertyFormatterChange","applyFormatting","applyFormatter","resetValueState","onDownDifferenceChange","onUpDifferenceChange","onReferenceValInputChange","onTargetValueChange","onDeviationValueChange","onTargetUnitChange","onDeviationUnitChange","applyIndicators","hasIndicatorsError","_advancedFormattingConfigurationPopover","applyTrendCalculation","hasTrendError","onDelete","sourceUoMProperty","iIndex","itemsBindingPath","relativeIndex","updatedPropertyValueFormatters","formatter","onIndicatorsDelete","selectedIndicatorValues","onDeleteFormatter","deleteFormatter","onDeleteCriticality","_onDeleteButtonClicked","sourceCriticalityProperty","propertyExists","targetProperty","propertyKeyForDescription","oData","propertyKeyForId","bMatchingProperty","oUom","selectedTrendValues","mainIndicatorUnitText","oResourceBundle","sUomText","sFormatterText","criticalityText","sSelectedGroupItemPath","sSelectedGroupProperty","sProperties","propertyLabelWithValue","sIndicatorsText","sTrendCalculatorText","mLabels","uomText","formatterText","indicatorsText","trendCalculatorText","oController","onNavigationActionSelect","sId","customData","getCustomData","customAction","custom","actionType","actions","hasActions","isDestroyed","oMenu","open","Dock","BeginTop","BeginBottom","selectedCardType","getSelectedItem","oAdaptiveCardContainer","oCustomSize","setVisible","subtitle","mainIndicatorValue","aUnitOfMeasures","aTextArrangements","aPropertyValueFormatters","groupItem","groupItemValue","content","__exports","__esModule"],"sources":["CardGeneratorDialogController.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport merge from \"sap/base/util/merge\";\nimport * as ODataUtils from \"sap/cards/ap/generator/odata/ODataUtils\";\nimport { convertIntegrationCardToAdaptive } from \"sap/cards/ap/transpiler/cardTranspiler/Transpile\";\nimport type ComboBox from \"sap/m/ComboBox\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport Popup from \"sap/ui/core/Popup\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type { CardManifest, ObjectContent } from \"sap/ui/integration/widgets/Card\";\nimport Card from \"sap/ui/integration/widgets/Card\";\nimport Filter from \"sap/ui/model/Filter\";\nimport ListBinding from \"sap/ui/model/ListBinding\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport { PREVIEW_OPTIONS } from \"../config/PreviewOptions\";\nimport { ApplicationInfo } from \"../helpers/ApplicationInfo\";\nimport { QueryParameters, createUrlParameters, updateManifestWithSelectQueryParams } from \"../helpers/Batch\";\nimport type {\n\tGroupItem,\n\tNavigationParameter,\n\tNavigationalData,\n\tObjectCardGroups,\n\tSideIndicatorOptions,\n\tTrendOptions,\n\tTrendOrIndicatorOptions\n} from \"../helpers/CardGeneratorModel\";\nimport { addActionToCardManifest, removeActionFromManifest, resetCardActions, updateCardManifestAction } from \"../helpers/FooterActions\";\nimport { formatPropertyDropdownValues, type FormatterConfigurationMap } from \"../helpers/Formatter\";\nimport { createAndStoreGeneratedi18nKeys } from \"../helpers/I18nHelper\";\nimport {\n\tenhanceManifestWithConfigurationParameters,\n\tenhanceManifestWithInsights,\n\tgetCurrentCardManifest,\n\trenderCardPreview,\n\tupdateCardGroups\n} from \"../helpers/IntegrationCardHelper\";\nimport { getArrangements, resolvePropertyPathFromExpression } from \"../helpers/PropertyExpression\";\nimport { transpileIntegrationCardToAdaptive } from \"../helpers/Transpiler\";\nimport { PropertyInfo, PropertyInfoMap, PropertyInfoType } from \"../odata/ODataTypes\";\nimport type { AnnotationAction, ControlProperties } from \"../types/ActionTypes\";\nimport { isBinding } from \"../utils/CommonUtils\";\nimport { ArrangementOptions } from \"./controls/ArrangementsEditor\";\nimport ToggleButton from \"sap/m/ToggleButton\";\nimport Control from \"sap/ui/core/Control\";\nimport Splitter from \"sap/ui/layout/Splitter\";\n\ntype UnitOfMeasures = {\n\tpropertyKeyForDescription: string;\n\tname: string;\n\tpropertyKeyForId: string;\n\tvalue: string;\n};\ntype ValueFormatter = {\n\tproperty: string;\n};\ntype Criticality = {\n\tcriticality: string;\n\tname: string;\n};\n\ntype Property = {\n\tname: string;\n};\ntype EventParameters = {\n\tselectedItem: ArrangementOptions;\n\ttextArrangementChanged: boolean;\n};\n\nconst context: any = {};\nconst aPropsWithUoM: any = [];\nconst MAX_GROUPS = 5;\nconst MAX_GROUP_ITEMS = 5;\n\nconst cardActionHandlers = {\n\tonActionAddClick: function () {\n\t\tconst oModel = context.dialog.getModel();\n\t\tconst addedActions: Array<ControlProperties> = oModel.getProperty(\"/configuration/actions/addedActions\");\n\n\t\tif (addedActions.length < 2) {\n\t\t\taddedActions.push({\n\t\t\t\ttitle: \"\",\n\t\t\t\ttitleKey: \"\",\n\t\t\t\tstyle: \"Default\",\n\t\t\t\tenablePathKey: \"\",\n\t\t\t\tisStyleControlEnabled: false,\n\t\t\t\tisConfirmationRequired: false\n\t\t\t});\n\t\t\toModel.setProperty(\"/configuration/actions/addedActions\", addedActions);\n\t\t}\n\t\toModel.setProperty(\"/configuration/actions/isAddActionEnabled\", addedActions.length < 2);\n\t},\n\tonAddedActionDelete: function (oEvent: Event) {\n\t\tconst oModel = context.dialog.getModel();\n\t\tconst control: ComboBox = oEvent?.getSource();\n\t\tconst sPath = control?.getBindingContext()?.getPath();\n\t\tconst actionIndex = Number(sPath?.split(\"/configuration/actions/addedActions/\")[1]);\n\t\tconst addedActions: Array<ControlProperties> = oModel.getProperty(\"/configuration/actions/addedActions\");\n\t\tconst deletedAction = actionIndex !== undefined ? addedActions.splice(actionIndex, 1) : [];\n\t\toModel.setProperty(\"/configuration/actions/addedActions\", addedActions);\n\t\toModel.setProperty(\"/configuration/actions/isAddActionEnabled\", addedActions.length < 2);\n\t\tconst manifest = getCurrentCardManifest();\n\t\tremoveActionFromManifest(manifest, deletedAction[0]);\n\t\trenderCardPreview(manifest, context.dialog.getModel());\n\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t},\n\tvalidateSelectedAction: function (control: ComboBox) {\n\t\tconst oModel = context.dialog.getModel();\n\t\tconst annotationActions: Array<AnnotationAction> = oModel.getProperty(\"/configuration/actions/annotationActions\");\n\t\treturn annotationActions.some((annotationAction) => {\n\t\t\treturn annotationAction.label === control.getValue() && annotationAction.action === control.getSelectedKey();\n\t\t});\n\t},\n\tupdateRelativeproperties: function (addedAction: ControlProperties, sPath: string) {\n\t\tconst oModel = context.dialog.getModel();\n\t\tconst annotationActions: Array<AnnotationAction> = oModel.getProperty(\"/configuration/actions/annotationActions\");\n\t\tconst relatedAnnotationAction = annotationActions.filter((annotationAction) => {\n\t\t\treturn annotationAction.label === addedAction.title && annotationAction.action === addedAction.titleKey;\n\t\t});\n\n\t\tif (relatedAnnotationAction.length) {\n\t\t\tlet enabledPath = relatedAnnotationAction[0].enablePath;\n\t\t\tenabledPath = enabledPath?.indexOf(\"_it/\") > -1 ? enabledPath?.replace(\"_it/\", \"\") : enabledPath; // Remove instance of _it/ from the path\n\t\t\tconst isConfirmationRequired = relatedAnnotationAction[0].isConfirmationRequired;\n\t\t\tif (enabledPath) {\n\t\t\t\taddedAction.enablePathKey = enabledPath;\n\t\t\t}\n\n\t\t\tif (isConfirmationRequired) {\n\t\t\t\taddedAction.isConfirmationRequired = isConfirmationRequired;\n\t\t\t}\n\t\t}\n\t\tif (sPath) {\n\t\t\toModel.setProperty(sPath, addedAction);\n\t\t}\n\t},\n\n\tfilterCardActions: function (comboBox: ComboBox) {\n\t\tconst dialogModel = context.dialog.getModel();\n\t\tconst addedActions: ControlProperties[] = dialogModel.getProperty(\"/configuration/actions/addedActions\");\n\t\tconst itemsBinding = comboBox.getBinding(\"items\");\n\t\tconst titleKey = comboBox.getSelectedKey();\n\t\tconst actionToFilter = addedActions.filter((addedAction) => addedAction.titleKey !== titleKey);\n\t\tconst filter = actionToFilter.length ? new Filter(\"action\", \"NE\", actionToFilter[0].titleKey) : [];\n\t\t(itemsBinding as ListBinding).filter(filter);\n\t},\n\n\tloadActions: function (controlEvent: Event) {\n\t\tconst comboBox: ComboBox = controlEvent.getSource();\n\t\tconst itemsBinding = comboBox.getBinding(\"items\");\n\n\t\tif (itemsBinding?.isSuspended()) {\n\t\t\titemsBinding.refresh(true);\n\t\t\titemsBinding.resume();\n\t\t}\n\n\t\tcomboBox.addEventDelegate({\n\t\t\tonBeforeRendering: this.filterCardActions.bind(null, comboBox)\n\t\t});\n\t},\n\n\tonAddedActionTitleChange: async function (oEvent: Event) {\n\t\tconst oModel = context.dialog.getModel();\n\t\tconst control: ComboBox = oEvent.getSource();\n\t\tconst path = control?.getBindingContext()?.getPath();\n\n\t\tif (this.validateSelectedAction(control)) {\n\t\t\tconst addedAction: ControlProperties = oModel.getProperty(path);\n\t\t\taddedAction.titleKey = control.getSelectedKey();\n\t\t\taddedAction.title = control.getValue();\n\t\t\taddedAction.isStyleControlEnabled = true;\n\t\t\tthis.updateRelativeproperties(addedAction, path || \"\");\n\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\tconst manifest = getCurrentCardManifest();\n\n\t\t\tresetCardActions(manifest);\n\t\t\tconst addedActions: ControlProperties[] = oModel.getProperty(\"/configuration/actions/addedActions\");\n\t\t\tfor (const action of addedActions) {\n\t\t\t\tif (action.titleKey) {\n\t\t\t\t\tawait addActionToCardManifest(manifest, action, context);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trenderCardPreview(manifest, context.dialog.getModel());\n\t\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t\t} else {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(getTranslatedText(\"GENERATOR_ACTION_ERROR_TEXT\"));\n\t\t\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\t\t\terrorControls?.push(control);\n\t\t\tcontrol.focus();\n\t\t}\n\t},\n\n\tonAddedActionStyleChange: function (oEvent: Event) {\n\t\tconst oModel = context.dialog.getModel();\n\t\tconst control: ComboBox = oEvent.getSource();\n\t\tconst sPath = control?.getBindingContext()?.getPath();\n\t\tconst addedAction: ControlProperties = oModel.getProperty(sPath);\n\t\taddedAction.style = control.getSelectedKey();\n\t\toModel.setProperty(sPath, addedAction);\n\t\tconst manifest = getCurrentCardManifest();\n\t\tupdateCardManifestAction(manifest, addedAction);\n\t\trenderCardPreview(manifest, context.dialog.getModel());\n\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t}\n};\n\nexport const CardGeneratorDialogController = {\n\tinitialize: function (rootComponent: any, control: any, entitySet: string) {\n\t\tcontext.rootComponent = rootComponent;\n\t\tcontext.appModel = rootComponent.getModel();\n\t\tcontext.dialog = control;\n\t\tcontext.entitySet = entitySet;\n\t\tconst oModel = new JSONModel(PREVIEW_OPTIONS);\n\t\tcontext?.dialog?.setModel(oModel, \"previewOptions\");\n\t\tconst oModelDialog = context.dialog.getModel();\n\t\tupdateCardGroups(oModelDialog);\n\t},\n\tokPressed,\n\tcancelPressed: closeDialog,\n\tonAddClick,\n\tonGroupAddClick,\n\tonGroupDeleteClick,\n\tonDeleteClick,\n\tonPropertySelection,\n\tupdateContentNavigationSelection,\n\tonPropertyLabelChange,\n\tonTitleSelection,\n\tonSubTitleSelection,\n\tonGroupTitleChange,\n\tvalidateContol,\n\tonDrop,\n\tonHeaderUOMSelection,\n\tonStateIndicatorSelection,\n\tupdateHeaderNavigationSelection,\n\tonHeightChange,\n\tonWidthChange,\n\tonResetPressed,\n\tonItemsActionsButtonPressed,\n\tonPreviewTypeChange,\n\ttoggleAdvancedSetting,\n\tgetTranslatedText,\n\tonPropertyFormatting,\n\tonActionAddClick: cardActionHandlers.onActionAddClick,\n\tonAddedActionDelete: cardActionHandlers.onAddedActionDelete,\n\tonAddedActionStyleChange: cardActionHandlers.onAddedActionStyleChange,\n\tonAddedActionTitleChange: cardActionHandlers.onAddedActionTitleChange,\n\tvalidateSelectedAction: cardActionHandlers.validateSelectedAction,\n\tupdateRelativeproperties: cardActionHandlers.updateRelativeproperties,\n\tloadActions: cardActionHandlers.loadActions,\n\tfilterCardActions: cardActionHandlers.filterCardActions,\n\t/* Methods exposed for testing */\n\t_updateTrendForCardHeader: updateTrendForCardHeader,\n\t_updateSideIndicatorsForHeader: updateSideIndicatorsForHeader,\n\t_setAdvancedFormattingOptionsEnablement: setAdvancedFormattingOptionsEnablement,\n\t_updateHeaderArrangements: updateHeaderArrangements,\n\t_updateArrangements: updateArrangements,\n\t_updateCriticality: updateCriticality,\n\t_validateHeader: validateHeader,\n\tapplyCriticality: applyCriticality,\n\tapplyUoMFormatting: applyUoMFormatting,\n\tonTrendDelete: onTrendDelete,\n\tloadAdvancedFormattingConfigurationFragment: loadAdvancedFormattingConfigurationFragment,\n\taddLabelsForProperties: addLabelsForProperties,\n\tcheckForNavigationProperty: checkForNavigationProperty,\n\tdisableOrEnableUOMAndTrend: disableOrEnableUOMAndTrend\n};\nexport function getCriticality(sPropertyName: string, isCalcuationType?: boolean) {\n\tconst oModel = context?.dialog?.getModel();\n\tconst aMainIndicatorCriticality = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tconst oMatchedCriticality = aMainIndicatorCriticality?.find(function (oCriticality: any) {\n\t\treturn oCriticality?.name === sPropertyName || \"{\" + oCriticality?.name + \"}\" === sPropertyName;\n\t});\n\tif (oMatchedCriticality) {\n\t\tif (isBinding(oMatchedCriticality?.criticality)) {\n\t\t\treturn \"{= extension.formatters.formatCriticality($\" + oMatchedCriticality?.criticality + \", 'color') }\";\n\t\t}\n\t\tif (oMatchedCriticality?.activeCalculation || isCalcuationType) {\n\t\t\tconst staticValues = {\n\t\t\t\tdeviationLow: oMatchedCriticality?.deviationRangeLowValue,\n\t\t\t\tdeviationHigh: oMatchedCriticality?.deviationRangeHighValue,\n\t\t\t\ttoleranceLow: oMatchedCriticality?.toleranceRangeLowValue,\n\t\t\t\ttoleranceHigh: oMatchedCriticality?.toleranceRangeHighValue,\n\t\t\t\tsImprovementDirection: oMatchedCriticality?.improvementDirection,\n\t\t\t\toCriticalityConfigValues: { None: \"Neutral\", Negative: \"Error\", Critical: \"Critical\", Positive: \"Good\" }\n\t\t\t};\n\t\t\treturn \"{= extension.formatters.formatValueColor(${\" + oMatchedCriticality?.name + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t\t}\n\t\treturn oMatchedCriticality?.criticality;\n\t}\n\treturn \"None\";\n}\n\n/**\n * This functions updates the enablement of the advanced formatting options based on the source property.\n * @param sourceProperty\n * @returns\n */\nfunction setAdvancedFormattingOptionsEnablement(sourceProperty: string) {\n\tconst oModel = context.dialog.getModel();\n\tconst mainIndicatorProperty = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\toModel.setProperty(\"/configuration/trendOptions/sourceProperty\", mainIndicatorProperty);\n\toModel.setProperty(\"/configuration/indicatorsValue/sourceProperty\", mainIndicatorProperty);\n\tconst properties = oModel.getProperty(\"/configuration/properties\");\n\tconst unitsOfMeasure = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\") || [];\n\tconst propertyValueFormatters = oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\") || [];\n\tconst mainIndicatorCriticality = oModel.getProperty(\"/configuration/mainIndicatorOptions/criticality\") || [];\n\tconst selectedTrendOptions = oModel.getProperty(\"/configuration/selectedTrendOptions\") || [];\n\tconst selectedIndicatorOptions = oModel.getProperty(\"/configuration/selectedIndicatorOptions\") || [];\n\tconst dataType = properties.find((property: Property) => property.name === sourceProperty)?.type || \"\";\n\tconst isDateType = ODataUtils.isPropertyTypeDate(dataType);\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(dataType) > -1;\n\n\tlet isFormatterApplied = propertyValueFormatters.some(function (formatterDetail: ValueFormatter) {\n\t\treturn formatterDetail.property === sourceProperty || \"{\" + formatterDetail.property + \"}\" === sourceProperty;\n\t});\n\n\tconst formatterApplied = propertyValueFormatters.filter(function (formatterDetail: ValueFormatter) {\n\t\treturn formatterDetail.property === sourceProperty || \"{\" + formatterDetail.property + \"}\" === sourceProperty;\n\t})[0];\n\n\tif (formatterApplied?.formatterName === \"format.unit\" && typeof formatterApplied?.parameters[1].properties[0].value !== \"number\") {\n\t\tisFormatterApplied = false;\n\t}\n\n\tconst isUOMApplied = unitsOfMeasure.some(function (arrangementDetail: UnitOfMeasures) {\n\t\treturn arrangementDetail.name === sourceProperty;\n\t});\n\tconst isCriticalityApplied = mainIndicatorCriticality.some((indicatorCriticality: Criticality) => {\n\t\treturn indicatorCriticality.name === sourceProperty;\n\t});\n\tconst isTrendApplied = selectedTrendOptions.some(function (trendDetail: TrendOptions) {\n\t\treturn trendDetail.sourceProperty === sourceProperty && trendDetail.downDifference;\n\t});\n\tconst isIndicatorsApplied = selectedIndicatorOptions.some(function (indicatorDetail: SideIndicatorOptions) {\n\t\treturn indicatorDetail.sourceProperty === sourceProperty && indicatorDetail.targetUnit;\n\t});\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterApplied\", isFormatterApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterEnabled\", isDateType || isNumberType);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isUOMApplied\", isUOMApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isCriticalityApplied\", isCriticalityApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isTrendApplied\", isTrendApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isIndicatorsApplied\", isIndicatorsApplied);\n\n\tconst trendOptions = oModel.getProperty(\"/configuration/trendOptions\") as TrendOptions;\n\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\") as SideIndicatorOptions;\n\n\tif (trendOptions) {\n\t\tconst { referenceValue, downDifference, upDifference } = trendOptions;\n\t\tif (referenceValue && downDifference && upDifference) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/upDown\", true);\n\t\t}\n\t}\n\n\tif (indicatorsValue) {\n\t\tconst { targetValue, deviationValue, targetUnit, deviationUnit } = indicatorsValue;\n\t\tif (targetValue && deviationValue && targetUnit && deviationUnit) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetDeviation\", true);\n\t\t}\n\t}\n}\n\n/**\n * Updates \"sap.card.header\" property of integration card manifest and triggers rendering of the card preview.\n *\n * @param oEvent\n * @param key\n * @param fnGetHeaderConfig\n */\nfunction updateCardHeader(oEvent: Event, fnGetHeaderConfig: Function, key?: string) {\n\tconst control = oEvent.getSource() as ComboBox;\n\tconst selectedKey = control.getSelectedKey() || \"\";\n\tconst newValue = oEvent.getParameter(\"newValue\");\n\tlet currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : newValue;\n\tconst oModel = context.dialog.getModel();\n\n\tif (key === \"navSelection\") {\n\t\tconst navigationValue = oModel.getProperty(\"/configuration/navigationValue\");\n\t\tcurrentValue = navigationValue ? `{${navigationValue}}` : \"\";\n\t}\n\n\tif (!selectedKey && key === \"mainIndicator\") {\n\t\tcurrentValue = \"\";\n\t}\n\n\tif (selectedKey !== \"\" || currentValue !== \"\") {\n\t\tcontrol.setValueState(ValueState.None);\n\t}\n\n\tconst sapCardHeader = fnGetHeaderConfig(currentValue);\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\n\tif (currentValue === \"\" && key === \"mainIndicator\") {\n\t\tdelete oManifest[\"sap.card\"].header.mainIndicator;\n\t\tdelete oManifest[\"sap.card\"].header.sideIndicators;\n\t}\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceProperty\", selectedKey);\n\trenderCardPreview(oManifest, context.dialog.getModel());\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\n/**\n * Handles the change event for card title selection.\n * @param oEvent\n */\nfunction onTitleSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\ttitle: value\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tvalidateContol(oEvent, \"title\");\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\n/**\n * Validates the control(control's selected key) based on the provided event and control name.\n * @param {Event} oEvent The event triggered by the control.\n * @param {string} [controlName] The name of the control being validated.\n */\nfunction validateContol(oEvent: Event, controlName?: string) {\n\tconst control: ComboBox = oEvent.getSource();\n\tconst selectedKey = control.getSelectedKey();\n\tconst value: string = oEvent.getParameter(\"newValue\");\n\n\tconst oModel = context.dialog.getModel();\n\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\tconst resourceBundle = context.dialog.getModel(\"i18n\").getResourceBundle();\n\n\t/**\n\t * Gets the key for the given control name.\n\t * @param {string} name The name of the control.\n\t * @returns {string} The key associated with the control name.\n\t */\n\tconst getKey = (name: string): string => {\n\t\tswitch (name) {\n\t\t\tcase \"title\":\n\t\t\t\treturn resourceBundle.getText(\"GENERATOR_CARD_TITLE\");\n\t\t\tcase \"stateIndicator\":\n\t\t\t\treturn resourceBundle.getText(\"GENERATOR_MAIN_INDICATOR\");\n\t\t\tdefault:\n\t\t\t\treturn resourceBundle.getText(\"GENERATOR_GROUP_PROPERTY\");\n\t\t}\n\t};\n\n\tconst controlErrorText = resourceBundle.getText(\"GENERIC_ERR_MSG\", [getKey(controlName ?? \"\")]);\n\n\tif (!selectedKey && !value && controlName === \"title\") {\n\t\terrorControls?.push(control);\n\t\tcontrol.setValueStateText(controlErrorText);\n\t} else if (!selectedKey && value) {\n\t\terrorControls?.push(control);\n\t\tcontrol.setValueState(ValueState.Error);\n\t\tcontrol.setValueStateText(controlErrorText);\n\t} else {\n\t\terrorControls?.forEach((errorControl: ComboBox, index: number) => {\n\t\t\tif (control.getId() === errorControl.getId()) {\n\t\t\t\terrorControls.splice(index, 1);\n\t\t\t}\n\t\t});\n\t\tcontrol.setValueState(ValueState.None);\n\t}\n}\n\n/**\n * Handles the change event for card subtitle selection.\n * @param oEvent\n */\nfunction onSubTitleSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = context.dialog.getModel();\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tsubTitle: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\n\n/**\n * Handles the change event for card header UOM selection.\n * @param oEvent\n */\nfunction onHeaderUOMSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = context.dialog.getModel();\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tunitOfMeasurement: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\nfunction addLabelsForProperties(selectedNavigationProperty: NavigationalData, data: Record<string, unknown>) {\n\tif (\n\t\tselectedNavigationProperty.name &&\n\t\tdata[selectedNavigationProperty.name] !== undefined &&\n\t\tdata[selectedNavigationProperty.name] !== null\n\t) {\n\t\tconst propVal = selectedNavigationProperty?.value as unknown as PropertyInfoMap;\n\t\tpropVal?.forEach((ele: PropertyInfo) => {\n\t\t\tconst name = data[selectedNavigationProperty.name] as Record<string, unknown>;\n\t\t\tif (name[ele.name] !== undefined && name[ele.name] !== null) {\n\t\t\t\tconst propertyValue = name[ele.name] as string;\n\t\t\t\tconst value = formatPropertyDropdownValues(ele, propertyValue);\n\t\t\t\tele.labelWithValue = value;\n\t\t\t} else {\n\t\t\t\tele.labelWithValue = `${ele.label} (<empty>)`;\n\t\t\t}\n\t\t});\n\t} else {\n\t\tselectedNavigationProperty.value = [];\n\t}\n}\n\nasync function updateCardConfigurationData(selectedProperty: string, selectedNavigationProperty: NavigationalData) {\n\tconst { entitySetWithObjectContext } = ApplicationInfo.getInstance().fetchDetails();\n\tconst oModel = context.dialog.getModel();\n\tconst { serviceUrl, oDataV4, $data } = oModel.getProperty(\"/configuration\");\n\tconst queryParameters: QueryParameters = {\n\t\tproperties: [],\n\t\tnavigationProperties: [\n\t\t\t{\n\t\t\t\tname: selectedProperty,\n\t\t\t\tproperties: selectedNavigationProperty.value.map((property) => property.name) || []\n\t\t\t}\n\t\t]\n\t};\n\tconst result = await ODataUtils.fetchDataAsync(serviceUrl, entitySetWithObjectContext, oDataV4, createUrlParameters(queryParameters));\n\taddLabelsForProperties(selectedNavigationProperty, result);\n\t$data[selectedProperty] = result[selectedProperty];\n\toModel.setProperty(\"/configuration/$data\", $data);\n}\n\nfunction updateHeaderNavigationSelection(oEvent: Event) {\n\tconst oModel = context.dialog.getModel();\n\tconst getHeaderConfiguration = (value: string) => ({\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tconst control = oEvent.getSource() as ComboBox;\n\tconst selectedKey = control.getSelectedKey();\n\tconst sourceProperty = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tupdateSelectedNavigation(selectedKey, sourceProperty, oModel, \"header\");\n\n\toModel.setProperty(\"/configuration/navigationValue\", `${sourceProperty}/${selectedKey}`);\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedKey\", selectedKey);\n\tupdateCardHeader(oEvent, getHeaderConfiguration, \"navSelection\");\n}\n\n/**\n * Handles the change event for card KPI value selection.\n * @param oEvent\n */\nasync function onStateIndicatorSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = context.dialog.getModel();\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tmainIndicator: {\n\t\t\t\t\t\tstate: getCriticality(value),\n\t\t\t\t\t\tnumber: getArrangements(value, {\n\t\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tconst oModel = context.dialog.getModel();\n\tconst control = oEvent.getSource() as ComboBox;\n\tconst selectedKey = control.getSelectedKey();\n\tawait updateSelectedNavigationProperty(selectedKey, true);\n\tconst selectedNavigationPropertyHeader = oModel.getProperty(\"/configuration/selectedNavigationPropertyHeader\");\n\tconst selectedValue: string = oEvent.getParameter(\"newValue\");\n\tvalidateContol(oEvent, \"stateIndicator\");\n\tconst currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : selectedValue;\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedValue\", \"\");\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedKey\", \"\");\n\toModel.setProperty(\n\t\t\"/configuration/advancedFormattingOptions/isPropertyFormattingEnabled\",\n\t\t!!(selectedKey && !selectedNavigationPropertyHeader?.value?.length && selectedNavigationPropertyHeader?.name === \"\")\n\t);\n\n\tconst properties = oModel.getProperty(\"/configuration/properties\");\n\tconst dataType = properties.find((prop: Property) => prop.name === selectedKey)?.type || \"\";\n\tconst isDateType = ODataUtils.isPropertyTypeDate(dataType);\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(dataType) > -1;\n\n\toModel.setProperty(\"/configuration/mainIndicatorStatusKey\", selectedKey);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterEnabled\", isDateType || isNumberType);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/textArrangementSourceProperty\", currentValue);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/textArrangementSelectedKey\", selectedKey);\n\n\tif (oModel.getProperty(\"/configuration/trendOptions/sourceProperty\") !== selectedKey) {\n\t\toModel.setProperty(\"/configuration/trendOptions\", {});\n\t\toModel.setProperty(\"/configuration/indicatorsValue\", {});\n\t}\n\n\toModel.setProperty(\"/configuration/trendOptions/sourceProperty\", selectedKey);\n\toModel.setProperty(\"/configuration/indicatorsValue/sourceProperty\", selectedKey);\n\n\tupdateTrendForCardHeader();\n\tupdateSideIndicatorsForHeader();\n\toModel.setProperty(\"/configuration/navigationValue\", \"\");\n\tif (!selectedNavigationPropertyHeader?.value.length) {\n\t\tupdateCardHeader(oEvent, getHeaderConfiguration, \"mainIndicator\");\n\t} else {\n\t\tupdateCardHeader(oEvent, getHeaderConfiguration, \"navSelection\");\n\t}\n}\n\n/**\n * Disables or enables the apply unit of measure based on the selected property.\n * @param {JSONModel} model - The JSON model containing the configuration.\n * @param {string} selectedProperty - The name of the selected property.\n */\nfunction disableOrEnableUOMAndTrend(model: JSONModel, selectedProperty: string) {\n\tlet typeSupported = true;\n\tconst propertyType = model.getProperty(\"/configuration/properties\").find((prop: Property) => prop.name === selectedProperty)?.type;\n\tconst selectedValue = model.getProperty(\"/configuration/$data\")[selectedProperty];\n\tif (propertyType === \"Edm.String\") {\n\t\ttypeSupported = !isNaN(Number(selectedValue));\n\t}\n\tconst isDateType = ODataUtils.isPropertyTypeDate(propertyType);\n\tconst isUoMEnabled = !(propertyType === \"Edm.Boolean\" || propertyType === \"Edm.Guid\" || isDateType) && typeSupported;\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(propertyType) > -1;\n\n\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isUoMEnabled\", isUoMEnabled);\n\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isTrendEnabled\", isNumberType);\n}\n\nfunction updateContentNavigationSelection(oEvent: Event) {\n\tconst control: ComboBox = oEvent.getSource();\n\tconst selectedKey = control.getSelectedKey() || \"\";\n\tconst oModel = context.dialog.getModel();\n\tconst sPath = control?.getBindingContext()?.getPath() as string;\n\tconst group: GroupItem = oModel.getProperty(sPath);\n\tconst currentValue = `{${group.name}/${selectedKey}}`;\n\tgroup.value =\n\t\tselectedKey &&\n\t\tgetArrangements(currentValue, {\n\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t});\n\tupdateSelectedNavigation(selectedKey, group.name, oModel, \"content\");\n\n\tconst navProperty = ODataUtils.getPropertyLabel(\n\t\tcontext.appModel,\n\t\tcontext.entitySet,\n\t\tgroup.name,\n\t\tPropertyInfoType.NavigationProperty\n\t) as NavigationParameter;\n\tconst property = navProperty?.properties?.find((oProperty) => oProperty.name === selectedKey);\n\tconst propertyLabel = property ? property.label : \"\";\n\tgroup.label = propertyLabel;\n\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\nfunction updateSelectedNavigation(selectedKey: string, sourceProperty: string, oModel: JSONModel, source: string) {\n\tconst selectedNavigation: NavigationParameter[] =\n\t\tsource === \"header\"\n\t\t\t? oModel.getProperty(\"/configuration/selectedHeaderNavigation\")\n\t\t\t: oModel.getProperty(\"/configuration/selectedContentNavigation\");\n\tconst existingIndex = selectedNavigation.findIndex((navItem) => navItem.name === sourceProperty);\n\n\tif (existingIndex !== -1) {\n\t\tconst existingItem = selectedNavigation[existingIndex];\n\t\tconst navValues = existingItem?.value?.includes(selectedKey) ? existingItem.value : [...existingItem.value, selectedKey];\n\t\tselectedNavigation[existingIndex] = { ...existingItem, value: navValues };\n\t} else {\n\t\tconst name = sourceProperty;\n\t\tselectedNavigation.push({ name, value: [selectedKey] });\n\t}\n\n\tconst propertyPath = source === \"header\" ? \"/configuration/selectedHeaderNavigation\" : \"/configuration/selectedContentNavigation\";\n\toModel.setProperty(propertyPath, selectedNavigation);\n}\nasync function updateSelectedNavigationProperty(selectedKey: string, isHeader: boolean) {\n\tconst oModel = context.dialog.getModel();\n\tconst navigationProperty: NavigationParameter[] = oModel.getProperty(\"/configuration/navigationProperty\") || [];\n\tconst selectedNavigationalProperties: NavigationalData[] = oModel.getProperty(\"/configuration/selectedNavigationalProperties\") || [];\n\tconst existingIndex = selectedNavigationalProperties.findIndex((navItem) => navItem.name === selectedKey);\n\n\tconst selectedProperty = navigationProperty.find((prop) => prop.name === selectedKey);\n\tconst selectedPropertyName = selectedProperty?.name || \"\";\n\tconst selectedPropertyValues = selectedProperty?.properties || [];\n\n\tconst data: NavigationalData = {\n\t\tname: selectedPropertyName,\n\t\tvalue: selectedPropertyValues\n\t};\n\n\tif (existingIndex === -1 && selectedProperty) {\n\t\tselectedNavigationalProperties.push(data);\n\t}\n\toModel.setProperty(\"/configuration/selectedNavigationalProperties\", selectedNavigationalProperties);\n\tif (isHeader) {\n\t\toModel.setProperty(\"/configuration/selectedNavigationPropertyHeader\", data);\n\t} else {\n\t\toModel.setProperty(\"/configuration/selectedNavigationPropertiesContent\", data);\n\t}\n\n\tif (selectedProperty) {\n\t\tawait updateCardConfigurationData(selectedProperty.name, data);\n\t}\n}\n\nfunction getTranslatedText(sKey: string) {\n\treturn context.dialog.getModel(\"i18n\").getObject(sKey);\n}\n\nfunction onAddClick(oEvent: Event) {\n\tconst oModel = context.dialog.getModel();\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst group = oModel.getProperty(sPath);\n\tif (!group.items) {\n\t\tgroup.items = [];\n\t}\n\tconst nextItemNumber = oModel.getProperty(sPath).items.length;\n\tconst newItem = {\n\t\tlabel: null,\n\t\tvalue: `{/items/${nextItemNumber}}`,\n\t\tisEnabled: false,\n\t\tisNavigationEnabled: false,\n\t\tnavigationalProperties: []\n\t};\n\toModel.getProperty(sPath).items.push(newItem);\n\tconst iItemsAdded = oModel.getProperty(sPath).items.length;\n\toModel.setProperty(sPath + \"/enableAddMoreGroupItems\", true);\n\tif (iItemsAdded === MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(sPath + \"/enableAddMoreGroupItems\", false);\n\t}\n\toModel.refresh();\n}\n\nasync function okPressed() {\n\tconst hasError = validateHeader();\n\tif (hasError) {\n\t\treturn;\n\t}\n\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tconst mManifest = oCard.getManifest() as CardManifest;\n\n\tawait enhanceManifestWithInsights(mManifest, context.rootComponent);\n\tenhanceManifestWithConfigurationParameters(mManifest, context.dialog.getModel());\n\tcreateAndStoreGeneratedi18nKeys(mManifest);\n\tupdateManifestWithSelectQueryParams(mManifest);\n\n\tconst oModel = context.dialog.getModel();\n\tconst keyParameters = oModel.getProperty(\"/configuration/keyParameters\");\n\tconst appIntent = oModel.getProperty(\"/configuration/appIntent\");\n\tconst oAdaptiveCardManifest = convertIntegrationCardToAdaptive(mManifest, appIntent, keyParameters);\n\tdelete mManifest[\"sap.card\"].configuration?.parameters?.contextParameters;\n\tconst payload = {\n\t\tfloorplan: \"ObjectPage\",\n\t\tlocalPath: `cards/op/${context.entitySet}`,\n\t\tfileName: \"manifest.json\",\n\t\tmanifests: [\n\t\t\t{\n\t\t\t\ttype: \"integration\",\n\t\t\t\tmanifest: mManifest,\n\t\t\t\tdefault: true,\n\t\t\t\tentitySet: context.entitySet\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"adaptive\",\n\t\t\t\tmanifest: oAdaptiveCardManifest,\n\t\t\t\tdefault: true,\n\t\t\t\tentitySet: context.entitySet\n\t\t\t}\n\t\t]\n\t};\n\n\tjQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: \"/cards/store\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tdata: JSON.stringify(payload),\n\t\tsuccess: function () {\n\t\t\tMessageToast.show(getTranslatedText(\"CARD_SAVE_SUCCESS_MESSAGE\"));\n\t\t},\n\t\terror: function (jqXHR, textStatus, errorThrown) {\n\t\t\tconst errorMessage = `Unable to save the card: ${textStatus} - ${errorThrown} (Status: ${jqXHR.status} - ${jqXHR.statusText})`;\n\t\t\tLog.error(errorMessage);\n\t\t\tMessageBox.error(getTranslatedText(\"CARD_SAVE_ERROR_MESSAGE\"));\n\t\t}\n\t});\n\tcontext.dialog.close();\n}\n\nfunction validateHeader() {\n\tlet hasError = false;\n\tconst oModel = context.dialog.getModel();\n\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\terrorControls?.forEach((ele: ComboBox) => {\n\t\tif (!ele.getValue() || ele.getValueState() == \"Error\") {\n\t\t\tele.setValueState(ValueState.Error);\n\t\t\thasError = true;\n\t\t}\n\t});\n\treturn hasError;\n}\n\nfunction validateIndicatorsValues(buttonId: string) {\n\tconst oModel = context.dialog.getModel();\n\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\tlet hasError = false;\n\tconst { targetValue, deviationValue, targetUnit, deviationUnit } = indicatorsValue;\n\n\tif (!targetValue) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetValueState\", \"Error\");\n\t\tconst targetInputId = buttonId + \"--targetInputValue\";\n\t\tsetValueStateTextForControl(targetInputId, getTranslatedText(\"TARGET_VALUE_ERR_MSG\"));\n\t}\n\tif (!deviationValue) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationValueState\", \"Error\");\n\t\tconst deviationInputId = buttonId + \"--deviationInputValue\";\n\t\tsetValueStateTextForControl(deviationInputId, getTranslatedText(\"DEVIATION_VALUE_ERR_MSG\"));\n\t}\n\tif (!targetUnit) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetUnitValueState\", \"Error\");\n\t\tconst targetUnitInputId = buttonId + \"--targetUnitInput\";\n\t\tsetValueStateTextForControl(targetUnitInputId, getTranslatedText(\"TARGET_UNIT_ERR_MSG\"), true);\n\t}\n\tif (!deviationUnit) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationUnitValueState\", \"Error\");\n\t\tconst deviationUnitInputId = buttonId + \"--deviationUnitInput\";\n\t\tsetValueStateTextForControl(deviationUnitInputId, getTranslatedText(\"DEVIATION_UNIT_ERR_MSG\"), true);\n\t}\n\tif (!targetValue || !deviationValue || !targetUnit || !deviationUnit) {\n\t\thasError = true;\n\t}\n\treturn hasError;\n}\n\nfunction validateTrendValues(buttonId: string) {\n\tconst oModel = context.dialog.getModel();\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tlet hasError = false;\n\tconst { referenceValue, downDifference, upDifference } = trendValues;\n\n\tif (!referenceValue) {\n\t\toModel.setProperty(\"/configuration/trendOptions/referenceValueState\", \"Error\");\n\t\tconst referenceInputId = buttonId + \"--trendReferenceValueInput\";\n\t\tsetValueStateTextForControl(referenceInputId, getTranslatedText(\"REF_ERR_MSG\"));\n\t}\n\tif (!downDifference) {\n\t\toModel.setProperty(\"/configuration/trendOptions/downDifferenceValueState\", \"Error\");\n\t\tconst trendDownDifferenceInputId = buttonId + \"--trendDownDifferenceInput\";\n\t\tsetValueStateTextForControl(trendDownDifferenceInputId, getTranslatedText(\"LOW_RANGE_ERR_MSG\"));\n\t}\n\tif (!upDifference) {\n\t\toModel.setProperty(\"/configuration/trendOptions/upDifferenceValueState\", \"Error\");\n\t\tconst trendUpDifferenceInputId = buttonId + \"--trendUpDifferenceInput\";\n\t\tsetValueStateTextForControl(trendUpDifferenceInputId, getTranslatedText(\"HIGH_RANGE_ERR_MSG\"));\n\t}\n\tif (!referenceValue || !downDifference || !upDifference) {\n\t\thasError = true;\n\t}\n\treturn hasError;\n}\n\nfunction setValueStateTextForControl(controlId: string, errorMessage: string, isSelectControl?: boolean) {\n\tconst elementControl = CoreElement?.getElementById(controlId);\n\telementControl.key = errorMessage;\n\tconst validateControl = isSelectControl\n\t\t? !elementControl?.getSelectedKey() || elementControl.getValueState() == \"Error\"\n\t\t: !elementControl?.getValue() || elementControl.getValueState() == \"Error\";\n\tif (validateControl) {\n\t\tconst resourceBundle = context?.dialog?.getModel(\"i18n\").getResourceBundle();\n\t\tconst validationText = resourceBundle?.getText(\"GENERIC_ERR_MSG\", [elementControl?.key]);\n\t\telementControl?.setValueStateText(validationText);\n\t}\n}\n\nfunction onGroupAddClick(oEvent: any) {\n\t//on click of Add new group.\n\tconst oModel = context.dialog.getModel();\n\tconst iLength = oModel.getProperty(\"/configuration/groups\").length;\n\tconst currentDefaultValue = context?.dialog\n\t\t.getModel(\"i18n\")\n\t\t?.getResourceBundle()\n\t\t?.getText(\"GENERATOR_DEFAULT_GROUP_NAME\", [iLength + 1]);\n\toModel.getProperty(\"/configuration/groups\").push({\n\t\ttitle: currentDefaultValue,\n\t\titems: [\n\t\t\t{\n\t\t\t\tlabel: null,\n\t\t\t\tvalue: \"{/items/0}\",\n\t\t\t\tisEnabled: false,\n\t\t\t\tisNavigationEnabled: false,\n\t\t\t\tnavigationalProperties: []\n\t\t\t}\n\t\t],\n\t\tnewItem: {\n\t\t\tlabel: null,\n\t\t\tvalue: null,\n\t\t\tisEnabled: false,\n\t\t\tisNavigationEnabled: false,\n\t\t\tnavigationalProperties: []\n\t\t}\n\t});\n\tconst groupLength = oModel.getProperty(\"/configuration/groups\").length;\n\tif (groupLength === MAX_GROUPS) {\n\t\toModel.setProperty(\"/configuration/groupLimitReached\", true);\n\t}\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\nfunction onGroupDeleteClick(oEvent: any) {\n\tconst oModel = context.dialog.getModel();\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst groupIndex = sPath.split(\"/configuration/groups/\")[1];\n\toModel.getProperty(\"/configuration/groups\").splice(groupIndex, 1);\n\tconst groupLength = oModel.getProperty(\"/configuration/groups\").length;\n\tif (groupLength < MAX_GROUPS) {\n\t\toModel.setProperty(\"/configuration/groupLimitReached\", false);\n\t}\n\tdelete context._itemActionsMenu;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\nfunction onGroupTitleChange(oEvent: any) {\n\tconst currentValue = oEvent.getParameters().newValue;\n\tconst oModel = context.dialog.getModel();\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst group = oModel.getProperty(sPath);\n\tgroup.title = currentValue;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\nfunction onDeleteClick(oEvent: any) {\n\tconst oModel = context.dialog.getModel();\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst [groupIndex, itemIndex] = sPath.match(/(\\d+)/g).map(function (sValue: string) {\n\t\treturn Number(sValue);\n\t});\n\toModel.getProperty(\"/configuration/groups/\" + groupIndex).items.splice(itemIndex, 1);\n\tconst iLength = oModel.getProperty(\"/configuration/groups/\" + groupIndex).items.length;\n\tif (iLength < MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(\"/configuration/groups/\" + groupIndex + \"/enableAddMoreGroupItems\", true);\n\t}\n\tcontext._itemActionsMenu?.destroy();\n\tdelete context._itemActionsMenu;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\n/**\n * Updates the sap.card.header.mainIndicator.trend property of the integration card manifest and triggers rendering of the card preview.\n */\nfunction updateTrendForCardHeader() {\n\tconst oModel = context.dialog.getModel();\n\tlet trendOptions = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst selectedTrendOptions = oModel.getProperty(\"/configuration/selectedTrendOptions\");\n\n\tconst sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\ttrend: \"None\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tlet selectedTrendOptionIndex = -1;\n\tselectedTrendOptions?.forEach((selectedTrendOption: any, index: number) => {\n\t\tif (selectedTrendOption.sourceProperty === trendOptions.sourceProperty) {\n\t\t\tselectedTrendOptionIndex = index;\n\t\t\ttrendOptions = { ...selectedTrendOption, ...trendOptions };\n\t\t\toModel.setProperty(\"/configuration/trendOptions\", trendOptions);\n\t\t}\n\t});\n\tconst { referenceValue, downDifference, upDifference, sourceProperty } = trendOptions;\n\n\tif (referenceValue && downDifference && upDifference && sourceProperty) {\n\t\tconst newTrendValues = { referenceValue, downDifference, upDifference, sourceProperty };\n\t\tif (selectedTrendOptionIndex !== -1) {\n\t\t\tselectedTrendOptions[selectedTrendOptionIndex] = newTrendValues;\n\t\t} else {\n\t\t\tselectedTrendOptions.push(newTrendValues);\n\t\t}\n\t\tconst staticValues = {\n\t\t\treferenceValue: Number(referenceValue),\n\t\t\tdownDifference: Number(downDifference),\n\t\t\tupDifference: Number(upDifference)\n\t\t};\n\t\tsapCardHeader[\"sap.card\"][\"header\"][\"mainIndicator\"][\"trend\"] = getTrendDirection(staticValues);\n\t}\n\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, context.dialog.getModel());\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\n/**\n * Updates the sap.card.header.sideIndicators property of the integration card manifest and triggers rendering of the card preview.\n */\nfunction updateSideIndicatorsForHeader() {\n\tconst oModel = context.dialog.getModel();\n\tlet indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\tconst selectedIndicatorOptions = oModel.getProperty(\"/configuration/selectedIndicatorOptions\");\n\n\tlet selectedIndicatorOptionIndex = -1;\n\tselectedIndicatorOptions?.forEach((selectedIndicatorOption: any, index: number) => {\n\t\tif (selectedIndicatorOption.sourceProperty === indicatorsValue.sourceProperty) {\n\t\t\tselectedIndicatorOptionIndex = index;\n\t\t\tindicatorsValue = { ...selectedIndicatorOption, ...indicatorsValue };\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue\", indicatorsValue);\n\t\t}\n\t});\n\n\tlet sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tsideIndicators: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tnumber: \"\",\n\t\t\t\t\t\tunit: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tnumber: \"\",\n\t\t\t\t\t\tunit: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t};\n\tconst { targetValue, deviationValue, targetUnit, deviationUnit, sourceProperty } = indicatorsValue;\n\tif (targetValue && deviationValue && targetUnit && deviationUnit && sourceProperty) {\n\t\tconst indicatorsValueToAdd = { targetValue, deviationValue, targetUnit, deviationUnit, sourceProperty };\n\t\tif (selectedIndicatorOptionIndex !== -1) {\n\t\t\tselectedIndicatorOptions[selectedIndicatorOptionIndex] = indicatorsValueToAdd;\n\t\t} else {\n\t\t\tselectedIndicatorOptions.push(indicatorsValueToAdd);\n\t\t}\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetDeviation\", targetValue);\n\t\tsapCardHeader = {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tsideIndicators: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Target\",\n\t\t\t\t\t\t\tnumber: targetValue,\n\t\t\t\t\t\t\tunit: targetUnit\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Deviation\",\n\t\t\t\t\t\t\tnumber: deviationValue,\n\t\t\t\t\t\t\tunit: deviationUnit\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, context.dialog.getModel());\n\toModel.refresh();\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\n/**\n * Get trend direction based on the static values.\n * @param staticValues\n * @returns\n */\nfunction getTrendDirection(staticValues: object | undefined) {\n\tconst oModel = context.dialog.getModel();\n\tconst mainIndicatorKey = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst { referenceValue } = trendValues;\n\n\tif (mainIndicatorKey && staticValues) {\n\t\toModel.setProperty(\"/configuration/trendOptions/upDown\", referenceValue);\n\t\treturn \"{= extension.formatters.formatTrendIcon(${\" + mainIndicatorKey + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t}\n\treturn \"None\";\n}\n\nasync function onPropertySelection(oEvent: Event) {\n\tconst control: ComboBox = oEvent.getSource();\n\tconst selectedKey = control.getSelectedKey() || \"\";\n\tconst newValue = oEvent.getParameter(\"newValue\");\n\n\tconst currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : newValue;\n\tconst oModel = context.dialog.getModel();\n\tvalidateContol(oEvent);\n\tawait updateSelectedNavigationProperty(selectedKey, false);\n\tconst selectedNavigationPropertiesContent = oModel.getProperty(\"/configuration/selectedNavigationPropertiesContent\");\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceProperty\", selectedKey);\n\tconst sPath: string | undefined = control?.getBindingContext()?.getPath();\n\n\tconst group = oModel.getProperty(sPath);\n\n\tif (!selectedNavigationPropertiesContent?.value?.length) {\n\t\tgroup.value =\n\t\t\tselectedKey &&\n\t\t\tgetArrangements(currentValue, {\n\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t});\n\t} else {\n\t\tgroup.value = \"\";\n\t\tgroup.navigationProperty = \"\";\n\t\tgroup.navigationalProperties = selectedNavigationPropertiesContent?.value;\n\t}\n\tconst propertyLabel = ODataUtils.getPropertyLabel(context.appModel, context.entitySet, selectedKey, PropertyInfoType.Property);\n\tgroup.label = selectedNavigationPropertiesContent?.value?.length ? \"\" : propertyLabel;\n\tgroup.isEnabled = (propertyLabel?.length > 0 && !selectedNavigationPropertiesContent?.value?.length) || false;\n\tgroup.isNavigationEnabled = selectedNavigationPropertiesContent?.value?.length > 0;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\nfunction onPropertyLabelChange(oEvent: any) {\n\tconst currentValue = oEvent.getParameters().newValue;\n\tconst oModel = context.dialog.getModel();\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst group = oModel.getProperty(sPath);\n\tgroup.label = currentValue;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\nfunction onDrop(oEvent: any) {\n\tconst oDragged = oEvent.getParameter(\"draggedControl\"),\n\t\toDropped = oEvent.getParameter(\"droppedControl\"),\n\t\tsInsertPosition = oEvent.getParameter(\"dropPosition\"),\n\t\toModel = context.dialog.getModel(),\n\t\toDragPos = oDragged.getParent(),\n\t\toDropPos = oDropped.getParent(),\n\t\tsDraggedPath = oDragPos.getBindingContext().getPath(),\n\t\tsDroppedPath = oDropPos.getBindingContext().getPath(),\n\t\taDragItems = oModel.getProperty(sDraggedPath).items,\n\t\taDropItems = oModel.getProperty(sDroppedPath).items,\n\t\tiDragPosition = oDragPos.indexOfItem(oDragged),\n\t\tiDropPosition = oDropPos.indexOfItem(oDropped);\n\n\tconst oSelectedItem = aDragItems[iDragPosition];\n\t// insert the control in target aggregation, remove the item\n\tif (sInsertPosition === \"Before\" && aDropItems.length < MAX_GROUP_ITEMS) {\n\t\taDragItems.splice(iDragPosition, 1);\n\t\taDropItems.splice(iDropPosition, 0, oSelectedItem);\n\t} else if (sInsertPosition && aDropItems.length < MAX_GROUP_ITEMS) {\n\t\taDragItems.splice(iDragPosition, 1);\n\t\taDropItems.splice(iDropPosition + 1, 0, oSelectedItem);\n\t}\n\tif (aDragItems.length < MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(sDraggedPath + \"/enableAddMoreGroupItems\", true);\n\t}\n\tif (aDropItems.length === MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(sDroppedPath + \"/enableAddMoreGroupItems\", false);\n\t}\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\nfunction onResetPressed() {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\toCard.setWidth();\n\toCard.setHeight();\n\tCoreElement.getElementById(\"cardGeneratorDialog--widthInput\").setValue(\"\");\n\tCoreElement.getElementById(\"cardGeneratorDialog--heightInput\").setValue(\"\");\n\toCard.refresh();\n}\nfunction onHeightChange(oEvent: any) {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst currentValue = Number(oEvent.getParameters().newValue);\n\tcurrentValue > 200 ? oCard.setHeight(currentValue + \"px\") : oCard.setHeight(\"232px\");\n\toCard.refresh();\n}\nfunction onWidthChange(oEvent: any) {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst currentValue = Number(oEvent.getParameters().newValue);\n\tcurrentValue > 200 ? oCard.setWidth(currentValue + \"px\") : oCard.setWidth(\"582px\");\n\toCard.refresh();\n}\n\nfunction closeDialog() {\n\tconst oModel = context?.dialog?.getModel();\n\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\terrorControls?.forEach((ele: ComboBox) => {\n\t\tele.setValueState(ValueState.None);\n\t});\n\tcontext?.dialog?.close();\n}\n\nfunction setCriticalitySourceProperty(sProperty: string) {\n\tconst oModel = context?.dialog?.getModel();\n\tconst mainIndicatorCriticality: any = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tlet relavantCriticality;\n\n\tconst relavantProperty: any = mainIndicatorCriticality?.filter((indicatorCriticality: any) => {\n\t\treturn indicatorCriticality?.name === sProperty;\n\t});\n\tif (relavantProperty) {\n\t\trelavantCriticality = JSON.parse(JSON.stringify(relavantProperty));\n\t}\n\tif (relavantProperty?.length === 1) {\n\t\trelavantCriticality[0].hostCriticality = relavantProperty[0].criticality;\n\t\tdelete relavantCriticality.criticality;\n\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", relavantCriticality);\n\t} else {\n\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", [{ name: sProperty }]);\n\t}\n}\n\nfunction onPropertyFormatting(oEvent: any) {\n\tconst oSource = oEvent.getSource();\n\tconst sProperty = context.dialog.getModel().getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst oModel = context?.dialog?.getModel();\n\n\toModel?.setProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\", sProperty);\n\toModel?.setProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\", sProperty);\n\n\tdisableOrEnableUOMAndTrend(oModel, sProperty);\n\tsetCriticalitySourceProperty(sProperty);\n\tsetAdvancedFormattingOptionsEnablement(sProperty);\n\n\tif (!context._advancedFormattingOptionsPopover) {\n\t\tFragment.load({\n\t\t\tid: \"advancedFormattingOptions\",\n\t\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.AdvancedFormattingOptions\",\n\t\t\tcontroller: {\n\t\t\t\tonFormatTypeSelection: (oEvent: any) => {\n\t\t\t\t\tconst sourceItem = oEvent.getParameter(\"item\");\n\t\t\t\t\tconst oModel = context.dialog.getModel();\n\t\t\t\t\tconst key = sourceItem.getKey();\n\t\t\t\t\toModel.setProperty(\"/configuration/popoverContentType\", key);\n\t\t\t\t\tconst aUom = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\t\t\t\t\tconst sSourceUoMProperty = oModel.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\t\t\t\t\tif (aUom.length > 0) {\n\t\t\t\t\t\tconst aSourceUom = aUom.filter((oProperty: any) => {\n\t\t\t\t\t\t\treturn oProperty.name === sSourceUoMProperty;\n\t\t\t\t\t\t})[0];\n\t\t\t\t\t\tif (aSourceUom) {\n\t\t\t\t\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", aSourceUom.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (aPropsWithUoM.indexOf(sSourceUoMProperty) === -1) {\n\t\t\t\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t\t\t\t\t}\n\t\t\t\t\tonAdvancedFormattingConfigOpen(oEvent, oSource);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\t.then(function (oPopover: any) {\n\t\t\t\tcontext._advancedFormattingOptionsPopover = oPopover;\n\t\t\t\toSource.addDependent(oPopover);\n\t\t\t\treturn oPopover;\n\t\t\t})\n\t\t\t.then(function (oPopover) {\n\t\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\t\toPopover.setBindingContext(oContext);\n\t\t\t\toPopover.openBy(oSource);\n\t\t\t});\n\t} else {\n\t\tconst oContext = oSource.getBindingContext();\n\t\tcontext._advancedFormattingOptionsPopover.setBindingContext(oContext);\n\t\tcontext._advancedFormattingOptionsPopover.openBy(oSource);\n\t}\n}\n\nfunction onAdvancedFormattingConfigOpen(oEvent: any, oSource: any) {\n\tconst oModel = context?.dialog?.getModel();\n\tconst oConfigurationController = {\n\t\tonPopoverClose: (oEvent: any) => {\n\t\t\tconst source = oEvent.getSource();\n\t\t\tsource?.destroy();\n\t\t},\n\t\t// applyCriticalityFormattingForHeader: () => { },\n\t\tonPropertyFormatterChange: () => {\n\t\t\tupdateArrangements();\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst oPopover = CoreElement.getElementById(buttonId + \"--advanceFormattingPopover\");\n\t\t\toPopover?.close();\n\t\t},\n\t\tapplyCriticality: () => applyCriticality(oEvent),\n\t\tapplyUoMFormatting: () => applyUoMFormatting(),\n\t\tapplyFormatting: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tCoreElement.getElementById(buttonId + \"--headerFormatterEditor\").applyFormatter();\n\t\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t\t},\n\t\tresetValueState(oEvent: any, isSelectControl?: boolean) {\n\t\t\tconst control = oEvent.getSource();\n\t\t\tconst currentValue = !isSelectControl ? oEvent.getParameters().newValue : control.getSelectedKey();\n\t\t\tif (currentValue !== \"\") {\n\t\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\t}\n\t\t},\n\t\tonDownDifferenceChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/downDifferenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonUpDifferenceChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/upDifferenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonReferenceValInputChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/referenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonTargetValueChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonDeviationValueChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonTargetUnitChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetUnitValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent, true);\n\t\t},\n\t\tonDeviationUnitChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationUnitValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent, true);\n\t\t},\n\t\tapplyIndicators: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst hasIndicatorsError = validateIndicatorsValues(buttonId);\n\t\t\tif (!hasIndicatorsError) {\n\t\t\t\tupdateSideIndicatorsForHeader();\n\t\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t\t}\n\t\t},\n\t\tapplyTrendCalculation: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst hasTrendError = validateTrendValues(buttonId);\n\t\t\tif (!hasTrendError) {\n\t\t\t\tupdateTrendForCardHeader();\n\t\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t\t}\n\t\t},\n\t\tonDelete: () => {\n\t\t\tconst oModel = context?.dialog?.getModel();\n\t\t\tconst sourceUoMProperty: any = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\t\t\tconst iIndex = aPropsWithUoM?.indexOf(sourceUoMProperty);\n\t\t\taPropsWithUoM?.splice(iIndex, 1);\n\t\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\n\t\t\tconst itemsBindingPath: string = \"/configuration/advancedFormattingOptions/unitOfMeasures\",\n\t\t\t\tunitOfMeasures: any = oModel?.getProperty(itemsBindingPath);\n\t\t\tlet relativeIndex: number = -1;\n\n\t\t\tconst propertyValueFormatters = oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\");\n\t\t\tconst updatedPropertyValueFormatters = propertyValueFormatters.filter(\n\t\t\t\t(formatter: ValueFormatter) => formatter.property !== sourceUoMProperty\n\t\t\t);\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\", updatedPropertyValueFormatters);\n\t\t\tfor (let i = 0; i < unitOfMeasures.length; i++) {\n\t\t\t\tif (unitOfMeasures[i]?.name === sourceUoMProperty) {\n\t\t\t\t\trelativeIndex = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (relativeIndex >= 0 && itemsBindingPath) {\n\t\t\t\tconst sPath = itemsBindingPath + \"/\" + relativeIndex;\n\t\t\t\tunitOfMeasures?.splice(sPath.slice(sPath.length - 1), 1);\n\t\t\t\tupdateArrangements();\n\t\t\t\toModel?.refresh();\n\t\t\t}\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t},\n\t\tonTrendDelete: () => onTrendDelete(),\n\t\tonIndicatorsDelete: () => {\n\t\t\tconst oModel = context?.dialog?.getModel();\n\t\t\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\t\t\tconst selectedIndicatorValues = oModel.getProperty(\"/configuration/selectedIndicatorOptions\");\n\t\t\tlet iIndex: number = -1;\n\t\t\tselectedIndicatorValues?.forEach((trend: any, index: number) => {\n\t\t\t\tif (trend.sourceProperty === indicatorsValue.sourceProperty) {\n\t\t\t\t\tiIndex = index;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (iIndex !== -1) {\n\t\t\t\tselectedIndicatorValues.splice(iIndex, 1);\n\t\t\t}\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue\", {});\n\t\t\tupdateSideIndicatorsForHeader();\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t},\n\t\tonDeleteFormatter: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tCoreElement.getElementById(buttonId + \"--headerFormatterEditor\").deleteFormatter();\n\t\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t\t},\n\t\tonDeleteCriticality: () => {\n\t\t\tconst oModel = context.dialog.getModel();\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tCoreElement.getElementById(buttonId + \"--headerCriticalityEditor\")._onDeleteButtonClicked();\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/selectedKeyCriticality\", \"\");\n\t\t\tupdateCriticality(false);\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t}\n\t};\n\n\tif (oEvent?.getParameter(\"item\")?.getKey?.() === \"uom\") {\n\t\toConfigurationController.applyUoMFormatting();\n\t}\n\tif (oEvent.getSource()?.getParent()?.close) {\n\t\toEvent.getSource().getParent().close();\n\t}\n\n\tloadAdvancedFormattingConfigurationFragment(oSource, oConfigurationController);\n}\n\nfunction applyCriticality(oEvent: Event) {\n\tconst oModel = context?.dialog?.getModel();\n\tconst mainIndicatorCriticality = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tlet sourceCriticalityProperty = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\");\n\tsourceCriticalityProperty = sourceCriticalityProperty?.[0];\n\n\tif (sourceCriticalityProperty?.hostCriticality !== sourceCriticalityProperty?.criticality) {\n\t\tsourceCriticalityProperty.criticality = sourceCriticalityProperty.hostCriticality;\n\t}\n\n\tconst propertyExists: boolean = mainIndicatorCriticality?.some((indicatorCriticality: Property) => {\n\t\treturn indicatorCriticality?.name === sourceCriticalityProperty?.name;\n\t});\n\n\tif (!propertyExists && sourceCriticalityProperty) {\n\t\tdelete sourceCriticalityProperty.hostCriticality;\n\t\tmainIndicatorCriticality?.push(sourceCriticalityProperty);\n\t} else {\n\t\tfor (let i = 0; i < mainIndicatorCriticality.length; i++) {\n\t\t\tif (mainIndicatorCriticality[i]?.name === sourceCriticalityProperty?.name) {\n\t\t\t\tdelete mainIndicatorCriticality[i];\n\t\t\t\tdelete sourceCriticalityProperty.hostCriticality;\n\t\t\t\tmainIndicatorCriticality[i] = sourceCriticalityProperty;\n\t\t\t}\n\t\t}\n\t}\n\n\toModel?.setProperty(\"/configuration/mainIndicatorOptions/criticality\", mainIndicatorCriticality);\n\tupdateCriticality(oEvent.getParameter(\"isCalcuationType\") || false);\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\nfunction applyUoMFormatting() {\n\tconst oModel = context?.dialog?.getModel();\n\tconst unitOfMeasures = oModel?.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\tsourceProperty: string = oModel.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\tlet relavantProperty = unitOfMeasures?.filter((property: Property) => property?.name === sourceProperty),\n\t\ttargetProperty: string = oModel?.getProperty(\"/configuration/advancedFormattingOptions/targetProperty\");\n\trelavantProperty = relavantProperty?.[0];\n\n\tif (!targetProperty && relavantProperty) {\n\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", relavantProperty?.propertyKeyForDescription);\n\t}\n\n\ttargetProperty = oModel?.getProperty(\"/configuration/advancedFormattingOptions/targetProperty\");\n\tconst oData = {\n\t\tpropertyKeyForDescription: targetProperty,\n\t\tname: sourceProperty,\n\t\tpropertyKeyForId: sourceProperty,\n\t\tvalue: targetProperty\n\t};\n\tlet bMatchingProperty = false;\n\tunitOfMeasures.forEach((oUom: any) => {\n\t\tif (oUom.name === oData.name) {\n\t\t\tbMatchingProperty = true;\n\t\t\toUom.propertyKeyForDescription = oData.value;\n\t\t\toUom.value = oData.value;\n\t\t}\n\t});\n\tif (!bMatchingProperty && sourceProperty && targetProperty) {\n\t\tunitOfMeasures.push(oData);\n\t}\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\", unitOfMeasures);\n\tupdateArrangements();\n\tfor (let i = 0; i < unitOfMeasures.length; i++) {\n\t\tif (unitOfMeasures[i].value !== \"\" && aPropsWithUoM?.indexOf(unitOfMeasures[i]?.name) === -1) {\n\t\t\taPropsWithUoM?.push(unitOfMeasures[i]?.name);\n\t\t}\n\t}\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\nfunction onTrendDelete() {\n\tconst oModel = context?.dialog?.getModel();\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst selectedTrendValues = oModel.getProperty(\"/configuration/selectedTrendOptions\");\n\tlet iIndex: number = -1;\n\tselectedTrendValues?.forEach((trend: TrendOrIndicatorOptions, index: number) => {\n\t\tif (trend.sourceProperty === trendValues.sourceProperty) {\n\t\t\tiIndex = index;\n\t\t}\n\t});\n\tif (iIndex !== -1) {\n\t\tselectedTrendValues.splice(iIndex, 1);\n\t}\n\toModel.setProperty(\"/configuration/trendOptions\", {});\n\tupdateTrendForCardHeader();\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\nfunction loadAdvancedFormattingConfigurationFragment(oSource: EventProvider, oConfigurationController: object) {\n\tFragment.load({\n\t\tid: oSource.getId(),\n\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.AdvancedFormattingConfiguration\",\n\t\tcontroller: oConfigurationController\n\t})\n\t\t.then(function (oPopover: any) {\n\t\t\tcontext._advancedFormattingConfigurationPopover = oPopover;\n\t\t\tconst model = context.dialog.getModel();\n\t\t\tconst mainIndicatorUnitText = model.getProperty(\"/configuration/mainIndicatorStatusUnit\");\n\t\t\tconst oResourceBundle = context.dialog.getModel(\"i18n\").getResourceBundle();\n\t\t\tlet sUomText, sFormatterText, criticalityText;\n\t\t\tif (oSource.getBindingContext()) {\n\t\t\t\tconst sSelectedGroupItemPath = oSource.getBindingContext().sPath;\n\t\t\t\tconst sSelectedGroupProperty = model.getProperty(sSelectedGroupItemPath)?.label;\n\t\t\t\tconst sProperties: PropertyInfoMap = model.getProperty(\"/configuration/properties\");\n\t\t\t\tconst propertyLabelWithValue =\n\t\t\t\t\tsProperties?.filter((property) => {\n\t\t\t\t\t\treturn property.label === sSelectedGroupProperty;\n\t\t\t\t\t})[0].labelWithValue || sSelectedGroupProperty;\n\t\t\t\tsUomText = oResourceBundle.getText(\"SELECT_UOM_TEXT\", [propertyLabelWithValue]);\n\t\t\t\tsFormatterText = oResourceBundle.getText(\"SELECT_FORMATTER_TEXT\", [propertyLabelWithValue]);\n\t\t\t\tcriticalityText = oResourceBundle.getText(\"SELECT_CRITICALITY_TEXT\", [propertyLabelWithValue]);\n\t\t\t} else {\n\t\t\t\tsUomText = oResourceBundle.getText(\"SELECT_UOM_TEXT\", [mainIndicatorUnitText]);\n\t\t\t\tsFormatterText = oResourceBundle.getText(\"SELECT_FORMATTER_TEXT\", [mainIndicatorUnitText]);\n\t\t\t\tcriticalityText = oResourceBundle.getText(\"SELECT_CRITICALITY_TEXT\", [mainIndicatorUnitText]);\n\t\t\t}\n\t\t\tconst sIndicatorsText = oResourceBundle.getText(\"SELECT_INDICATORS_TEXT\", [mainIndicatorUnitText]);\n\t\t\tconst sTrendCalculatorText = oResourceBundle.getText(\"TREND_CALCULATION_TEXT\", [mainIndicatorUnitText]);\n\n\t\t\tconst mLabels = {\n\t\t\t\tuomText: sUomText,\n\t\t\t\tcriticalityText: criticalityText,\n\t\t\t\tformatterText: sFormatterText,\n\t\t\t\tindicatorsText: sIndicatorsText,\n\t\t\t\ttrendCalculatorText: sTrendCalculatorText\n\t\t\t};\n\t\t\toPopover.setModel(new JSONModel(mLabels), \"i18nLabelText\");\n\t\t\toSource.addDependent(oPopover);\n\t\t\treturn oPopover;\n\t\t})\n\t\t.then(function (oPopover) {\n\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\toPopover.setBindingContext(oContext);\n\t\t\toPopover.openBy(oSource);\n\t\t\treturn oPopover;\n\t\t});\n}\n\nfunction onItemsActionsButtonPressed(oEvent: any) {\n\tconst oModel = context?.dialog?.getModel();\n\tconst sPath = oEvent?.getSource().getBindingContext().getPath();\n\tconst sourceProperty = oModel?.getProperty(sPath)?.name;\n\tconst oSource = oEvent.getSource();\n\tdisableOrEnableUOMAndTrend(oModel, sourceProperty);\n\tsetAdvancedFormattingOptionsEnablement(sourceProperty);\n\tconst oController = {\n\t\tonNavigationActionSelect: (oEvent: any) => {\n\t\t\tconst sId = oEvent.getParameter(\"item\").getId();\n\t\t\tconst oModel = context.dialog.getModel();\n\t\t\tif (sId === \"formatter\" || sId === \"uom\") {\n\t\t\t\toModel.setProperty(\"/configuration/popoverContentType\", sId);\n\t\t\t\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\t\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\", oModel.getProperty(sPath).name);\n\t\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\", oModel.getProperty(sPath).name);\n\t\t\t\tconst aUom = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\t\t\t\tconst sSourceUoMProperty = oModel.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\t\t\t\tif (aUom.length > 0) {\n\t\t\t\t\tconst aSourceUom = aUom.filter((oProperty: any) => {\n\t\t\t\t\t\treturn oProperty.name === sSourceUoMProperty;\n\t\t\t\t\t})[0];\n\t\t\t\t\tif (aSourceUom) {\n\t\t\t\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", aSourceUom.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (aPropsWithUoM.length && aPropsWithUoM.indexOf(sSourceUoMProperty) === -1) {\n\t\t\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t\t\t\t}\n\t\t\t\tonAdvancedFormattingConfigOpen(oEvent, oEvent.getSource().getParent());\n\t\t\t} else if (sId === \"criticality\") {\n\t\t\t\toModel.setProperty(\"/configuration/popoverContentType\", sId);\n\t\t\t\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\t\t\t\tif (oModel.getProperty(sPath)?.name) {\n\t\t\t\t\tsetCriticalitySourceProperty(oModel.getProperty(sPath).name);\n\t\t\t\t}\n\t\t\t\tonAdvancedFormattingConfigOpen(oEvent, oEvent.getSource().getParent());\n\t\t\t} else if (sId === \"actions\") {\n\t\t\t\t// do nothing\n\t\t\t} else {\n\t\t\t\tconst sourceItem = oEvent.getParameter(\"item\");\n\t\t\t\tconst customData = sourceItem.getCustomData();\n\t\t\t\tconst customAction = customData.filter((custom: any) => custom.getKey() === \"action\")[0];\n\t\t\t\tconst actionType = customAction.getValue();\n\t\t\t\tconst source = oEvent.getSource();\n\t\t\t\tconst sPath = source.getBindingContext().getPath();\n\t\t\t\tconst [groupIndex, itemIndex] = sPath.match(/(\\d+)/g).map((sValue: any) => Number(sValue));\n\t\t\t\tconst group = oModel.getProperty(\"/configuration/groups/\" + groupIndex);\n\t\t\t\tconst item = group.items[itemIndex];\n\n\t\t\t\tif (actionType === \"add\") {\n\t\t\t\t\tlet value = \"\";\n\t\t\t\t\tconst key = sourceItem.getId();\n\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase \"url\":\n\t\t\t\t\t\t\tvalue = `${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\tvalue = `mailto: ${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"tel\":\n\t\t\t\t\t\t\tvalue = `tel: ${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value === \"\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst actions = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"Navigation\",\n\t\t\t\t\t\t\tparameters: {\n\t\t\t\t\t\t\t\turl: value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t\titem[\"hasActions\"] = true;\n\t\t\t\t\titem[\"actionType\"] = key;\n\t\t\t\t\titem[\"actions\"] = actions;\n\t\t\t\t}\n\n\t\t\t\tif (actionType === \"remove\" && item.hasActions) {\n\t\t\t\t\tdelete item.hasActions;\n\t\t\t\t\tdelete item.actionType;\n\t\t\t\t\tdelete item.actions;\n\t\t\t\t}\n\t\t\t}\n\t\t\toModel.refresh();\n\t\t\tupdateCardGroups(oModel);\n\t\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t\t}\n\t};\n\tif (!context._itemActionsMenu || context?._itemActionsMenu?.isDestroyed()) {\n\t\tFragment.load({\n\t\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.ItemActions\",\n\t\t\tcontroller: oController\n\t\t}).then(\n\t\t\tfunction (oMenu: any) {\n\t\t\t\tcontext._itemActionsMenu = oMenu;\n\t\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\t\toMenu.setBindingContext(oContext);\n\t\t\t\toSource.addDependent(oMenu);\n\t\t\t\tcontext._itemActionsMenu.open(false, oSource, Popup.Dock.BeginTop, Popup.Dock.BeginBottom, oSource);\n\t\t\t}.bind(oController)\n\t\t);\n\t} else {\n\t\tconst oContext = oSource.getBindingContext();\n\t\tcontext._itemActionsMenu.setBindingContext(oContext);\n\t\toSource.addDependent(context._itemActionsMenu);\n\t\tcontext._itemActionsMenu.open(false, oSource, Popup.Dock.BeginTop, Popup.Dock.BeginBottom, oSource);\n\t}\n}\n\nfunction onPreviewTypeChange(oEvent: any) {\n\tconst selectedCardType = oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"type\");\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst oAdaptiveCardContainer: any = CoreElement.getElementById(\"cardGeneratorDialog--adaptiveCardPreviewContainer\");\n\tconst oCustomSize: any = CoreElement.getElementById(\"cardGeneratorDialog--custom-entry\");\n\toCard.setVisible(false);\n\toAdaptiveCardContainer.setVisible(false);\n\toCustomSize.setVisible(false);\n\tswitch (selectedCardType) {\n\t\tcase \"adaptive\":\n\t\t\toAdaptiveCardContainer.setVisible(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t\t\t}, 0);\n\t\t\tbreak;\n\t\tcase \"custom\":\n\t\t\toCard.setVisible(true);\n\t\t\toCustomSize.setVisible(true);\n\t\t\tbreak;\n\t\tcase \"integration\":\n\t\t\toCard.setVisible(true);\n\t\t\toCard.setWidth(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"width\"));\n\t\t\toCard.setHeight(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"height\"));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\toCard.setVisible(true);\n\t\t\toCard.setWidth(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"width\"));\n\t\t\toCard.setHeight(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"height\"));\n\t\t\tbreak;\n\t}\n}\n\n/**\n * Update the sap.card.header of the integration card manifest by appling latest text arrangements, unit of measurement and formatters and triggers rendering of the card preview.\n * - This method is triggered when text arrrangement, unit of measurement or formatters are changed.\n */\nfunction updateHeaderArrangements() {\n\tconst oModel = context.dialog.getModel();\n\tconst currentManifest = getCurrentCardManifest();\n\tconst header = currentManifest[\"sap.card\"].header;\n\tconst subtitle = resolvePropertyPathFromExpression(header.subTitle, currentManifest);\n\tconst unitOfMeasurement = resolvePropertyPathFromExpression(header.unitOfMeasurement, currentManifest);\n\tconst mainIndicatorValue =\n\t\toModel.getProperty(\"/configuration/navigationValue\") || oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst aUnitOfMeasures = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\tconst aTextArrangements = oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\");\n\tconst aPropertyValueFormatters: FormatterConfigurationMap = oModel.getProperty(\n\t\t\"/configuration/advancedFormattingOptions/propertyValueFormatters\"\n\t);\n\n\tconst sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber:\n\t\t\t\t\t\tmainIndicatorValue &&\n\t\t\t\t\t\tgetArrangements(`{${mainIndicatorValue}}`, {\n\t\t\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tsubTitle: getArrangements(subtitle, {\n\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t}),\n\t\t\t\tunitOfMeasurement: getArrangements(unitOfMeasurement, {\n\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t};\n\t\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, context.dialog.getModel());\n}\n\nfunction updateArrangements() {\n\tconst oModel = context.dialog.getModel();\n\tupdateHeaderArrangements();\n\tconst groups: ObjectCardGroups[] = oModel.getProperty(\"/configuration/groups\");\n\tgroups?.forEach(function (group) {\n\t\tgroup?.items?.forEach((groupItem) => {\n\t\t\tif (groupItem.name && groupItem.name !== \"\") {\n\t\t\t\tconst groupItemValue = groupItem.isNavigationEnabled ? `${groupItem.name}/${groupItem.navigationProperty}` : groupItem.name;\n\t\t\t\tgroupItem.value = getArrangements(`{${groupItemValue}}`, {\n\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\nfunction updateCriticality(isCalcuationType: boolean) {\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oModel = context.dialog.getModel();\n\tconst mainIndicator = currentManifest[\"sap.card\"].header.mainIndicator;\n\tconst groups = (currentManifest[\"sap.card\"].content as ObjectContent).groups;\n\n\tif (!mainIndicator && groups.length < 1) {\n\t\treturn;\n\t}\n\tlet oManifest;\n\tif (mainIndicator) {\n\t\tconst mainIndicatorValue = resolvePropertyPathFromExpression(mainIndicator.number, currentManifest);\n\t\tconst sapCardHeader = {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tmainIndicator: {\n\t\t\t\t\t\tstate: getCriticality(mainIndicatorValue || mainIndicator.number, isCalcuationType)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\toManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\t} else {\n\t\toManifest = currentManifest;\n\t}\n\n\trenderCardPreview(oManifest, context.dialog.getModel());\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n}\n\nasync function checkForNavigationProperty(event: Event) {\n\tconst selectedParameters = event.getParameters() as EventParameters;\n\tconst selectedItem = selectedParameters.selectedItem;\n\tif (!selectedItem) return;\n\tconst model = context.dialog.getModel() as JSONModel;\n\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\tconst selectedNavigationalProperties: NavigationalData[] = model.getProperty(\"/configuration/selectedNavigationalProperties\") || [];\n\n\tconst existingIndex = selectedNavigationalProperties.findIndex((navItem) => navItem.name === selectedItem.value);\n\tconst selectedProperty = navigationProperties.find((prop) => prop.name === selectedItem.value);\n\n\tconst { name: selectedPropertyName = \"\", properties: selectedPropertyValues = [] } = selectedProperty || {};\n\n\tconst data: NavigationalData = { name: selectedPropertyName, value: selectedPropertyValues };\n\n\tif (existingIndex === -1 && selectedProperty) {\n\t\tselectedNavigationalProperties.push(data);\n\t}\n\tmodel.setProperty(\"/configuration/selectedNavigationalProperties\", selectedNavigationalProperties);\n\n\tif (selectedProperty) {\n\t\tawait updateCardConfigurationData(selectedProperty.name, data);\n\t\tif (selectedParameters.textArrangementChanged) {\n\t\t\tselectedItem.navigationalPropertiesForId = data.value;\n\t\t\tselectedItem.isNavigationForId = data.value.length > 0;\n\t\t\tselectedItem.navigationKeyForId = \"\";\n\t\t} else {\n\t\t\tselectedItem.navigationalPropertiesForDescription = data.value;\n\t\t\tselectedItem.isNavigationForDescription = data.value.length > 0;\n\t\t\tselectedItem.navigationKeyForDescription = \"\";\n\t\t}\n\t\tselectedItem.value = \"\"; // to reset navigation combobox value in the card and dropdown.\n\t} else {\n\t\tif (selectedParameters.textArrangementChanged) {\n\t\t\tselectedItem.isNavigationForId = false;\n\t\t\tselectedItem.navigationKeyForId = \"\";\n\t\t} else {\n\t\t\tselectedItem.isNavigationForDescription = false;\n\t\t\tselectedItem.navigationKeyForDescription = \"\";\n\t\t}\n\t}\n}\n\nasync function toggleAdvancedSetting(toggleEvent: Event) {\n\tconst toggleButton: ToggleButton = toggleEvent.getSource();\n\ttoggleButton.setEnabled(false);\n\t\n\tconst splitter = CoreElement.getElementById(\"cardGeneratorDialog--contentSplitter\") as Splitter;\n\tconst controller = {\n\t\tonCriticalityChange: (criticalityChangeEvent: Event<{ isCalcuationType: boolean }>) => {\n\t\t\tupdateCriticality(criticalityChangeEvent.getParameter(\"isCalcuationType\") || false);\n\t\t},\n\t\tonArrangementsChange: async (arrangementChangeEvent: Event) => {\n\t\t\tawait checkForNavigationProperty(arrangementChangeEvent);\n\t\t\tupdateArrangements();\n\t\t\tconst dialogModel = context.dialog.getModel();\n\t\t\tconst groups = dialogModel.getProperty(\"/configuration/groups\");\n\n\t\t\tfor (let i = 0; i < groups?.[0].items.length; i++) {\n\t\t\t\tconst item = groups[0].items[i];\n\t\t\t\tconst uom = item.value.split(\" \")[1] && item.value.split(\" \")[1].slice(1, -1);\n\n\t\t\t\tif (uom !== \"undefined\" && uom !== undefined) {\n\t\t\t\t\tdialogModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", uom);\n\t\t\t\t} else if (uom === undefined) {\n\t\t\t\t\tdialogModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t\t\t\t}\n\n\t\t\t\tif (uom !== \"undefined\" && uom !== undefined && aPropsWithUoM?.indexOf(item?.name) === -1) {\n\t\t\t\t\taPropsWithUoM.push(item?.name);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonPropertyFormatterChangeFromAdvancedSettings: function () {\n\t\t\tupdateHeaderArrangements();\n\t\t}\n\t};\n\n\t\n\tawait Fragment.load({\n\t\tname: \"sap.cards.ap.generator.app.fragments.AdvancedSettings\",\n\t\tcontroller: controller\n\t}).then(function (advancedSettings: Control | Control[]) {\n\t\tif (!toggleButton.getPressed()) {\n\t\t\tconst lastContentArea = splitter.getContentAreas()[1]; // position 1 is the advance panel\n\t\t\tsplitter.removeContentArea(lastContentArea);\n\t\t} else {\n\t\t\tsplitter.insertContentArea(advancedSettings as Control, 1); // position 1 is the advance panel\n\t\t}\n\t\ttoggleButton.setEnabled(true);\n\t\tsetTimeout(() => {\n\t\t\ttranspileIntegrationCardToAdaptive(context.dialog.getModel());\n\t\t}, 0);\n\t});\n}\n\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app"}},{"offset":{"line":23,"column":0},"map":{"version":3,"file":"ArrangementsEditor.js","names":["sap","ui","define","Button","ComboBox","CustomListItem","HBox","List","Text","Control","CoreElement","ListItem","sap_ui_core_library","Sorter","JSONModel","____config_TextArrangementOptions","ValueState","TEXTARRANGEMENT_OPTIONS","ArrangementsEditor","extend","renderer","apiVersion","render","rm","control","openStart","openEnd","renderControl","_list","_addButton","close","metadata","properties","mode","selectionKeys","type","defaultValue","navigationSelectionKeys","items","aggregations","multiple","visibility","events","change","parameters","value","selectionChange","constructor","_constructor","settings","Control.prototype.constructor.call","this","init","_init","that","_propertyComboBox","event","handleComboBoxEvents","source","getSource","bindingContext","getBindingContext","path","getPath","model","getModel","selectedItem","getProperty","textArrangementChanged","fireEvent","getItems","_separatorColon","text","addStyleClass","_idNavigationComboBox","visible","_uomComboBox","_descriptionNavigationComboBox","_separatorColonText","_textArrangementComboBox","controlId","getParameter","getElementById","selectedKey","getSelectedKey","group","textArrangement","refresh","_deleteButton","icon","press","_onDeleteButtonClicked","bind","_onAddButtonClicked","onAfterRendering","_onAfterRendering","entityData","JSON","parse","stringify","getSelectionKeys","name","_setSelectionKeysMap","label","forEach","entity","_textArrangementComboBoxModel","i18nModel","option","getObject","setData","setSelectionKeys","_setSelectionKeys","selectionKeysArr","setAggregation","setProperty","getBindingInfo","bindingPath","getBindingPath","navigationBindingPath","bindAggregation","getMode","sorter","length","factory","key","setModel","_getTextArrangementModel","setItems","_setItems","bindProperty","bindItems","template","content","justifyContent","width","alignItems","fitContainer","_getInternalModel","_getItems","getSelectedItem","_getSelectedItem","boundData","push","bindingPathProperty","splice","slice","_handleComboBoxEvents","editor","isNavigation","arguments","undefined","isTextArrangementID","getValue","navigationProperties","isNavigationalProperty","hasNavigationProperty","propertyKeyForDescription","getGroupName","navigationKey","navigationKeyForDescription","groupVal","isValidation","getGroupValue","updateControlState","_getGroupName","navigationKeyForId","propertyKeyForId","_getGroupValue","_updateControlState","setValueState","Error","setValueStateText","errorFlag","Warning","None","_hasNavigationProperty","propertyToCheck","some","prop"],"sources":["ArrangementsEditor.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox, { $HBoxSettings } from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport Event from \"sap/ui/base/Event\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport Context from \"sap/ui/model/Context\";\nimport Model from \"sap/ui/model/Model\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { TEXTARRANGEMENT_OPTIONS } from \"../../config/TextArrangementOptions\";\nimport { NavigationParameter, Property } from \"../../helpers/CardGeneratorModel\";\nimport type { PropertyInfo } from \"../../odata/ODataTypes\";\n\nexport type ArrangementOptions = {\n\tname: string;\n\tvalue: string;\n\tpropertyKeyForId?: string;\n\tpropertyKeyForDescription: string;\n\tnavigationKeyForId: string;\n\tnavigationKeyForDescription: string;\n\tisNavigationForId: boolean;\n\tisNavigationForDescription: boolean;\n\tnavigationalPropertiesForId: Property[];\n\tnavigationalPropertiesForDescription: Property[];\n\ttextArrangement?: string;\n\tarrangementType: string;\n};\n\ninterface IArrangementsEditor {\n\tgetMode(): string;\n\tgetSelectionKeys(): object;\n\tgetItems(): Array<ArrangementOptions>;\n\t_addButton: Button;\n\t_list: List;\n}\n\ninterface ArrangementsEditorSettings extends $ControlSettings {\n\tmode: string;\n\tselectionKeys: object;\n\tnavigationSelectionKeys: object;\n\titems: object;\n\tchange?: (event: ArrangementsEditorChangeEvent) => void;\n\tselectionChange?: (event: ArrangementsEditorSelectionChangeEvent) => void;\n}\ninterface ArrangementsEditorChangeEventParameters {\n\tvalue?: number;\n}\ninterface ArrangementsEditorSelectionChangeEventParameters {\n\tvalue?: number;\n}\n\ntype ArrangementsEditorChangeEvent = Event<ArrangementsEditorChangeEventParameters>;\ntype ArrangementsEditorSelectionChangeEvent = Event<ArrangementsEditorSelectionChangeEventParameters>;\n\ntype PropertyMap = {\n\t[key: string]: string;\n};\ntype PropertyInfoMap = Array<PropertyMap>;\n\n/**\n * @namespace sap.cards.ap.generator.app.controls\n */\nexport default class ArrangementsEditor extends Control {\n\t_list!: List;\n\t_propertyComboBox!: ComboBox;\n\t_idNavigationComboBox!: ComboBox;\n\t_addButton!: Button;\n\t_separatorColon!: Text;\n\t_uomComboBox!: ComboBox;\n\t_descriptionNavigationComboBox!: ComboBox;\n\t_separatorColonText!: Text;\n\t_textArrangementComboBox!: ComboBox;\n\t_deleteButton!: Button;\n\terrorFlag!: boolean;\n\t_setSelectionKeysMap!: PropertyInfo;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\tmode: \"string\",\n\t\t\tselectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\tnavigationSelectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\titems: { type: \"object\", defaultValue: {} }\n\t\t},\n\t\taggregations: {\n\t\t\t_list: { type: \"sap.m.List\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t},\n\t\t\tselectionChange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(settings: ArrangementsEditorSettings) {\n\t\tsuper(settings);\n\t}\n\n\trenderer = {\n\t\tapiVersion: 2,\n\t\trender: function (rm: RenderManager, control: IArrangementsEditor): void {\n\t\t\trm.openStart(\"div\", control);\n\t\t\trm.openEnd();\n\t\t\trm.renderControl(control._list);\n\t\t\trm.renderControl(control._addButton);\n\t\t\trm.close(\"div\");\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the ArrangementsEditor custom control\n\t *\n\t * This method sets up various controls and event handlers used by the methods in this control\n\t *\n\t * @returns {void}\n\t */\n\n\tinit(): void {\n\t\tconst that = this;\n\t\tthis._list = new List();\n\t\tthis._propertyComboBox = new ComboBox({\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, false, true);\n\t\t\t},\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tconst textArrangementChanged = true;\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem,\n\t\t\t\t\ttextArrangementChanged\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._separatorColon = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop\");\n\t\tthis._idNavigationComboBox = new ComboBox({\n\t\t\tvisible: \"{= !!${isNavigationForId} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t});\n\t\tthis._uomComboBox = new ComboBox({\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that);\n\t\t\t}\n\t\t});\n\t\tthis._descriptionNavigationComboBox = new ComboBox({\n\t\t\tvisible: \"{= !!${isNavigationForDescription} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t});\n\t\tthis._separatorColonText = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop\");\n\t\tthis._textArrangementComboBox = new ComboBox({\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tconst controlId = event.getParameter(\"id\");\n\t\t\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\t\t\tconst selectedKey = control.getSelectedKey();\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst group = model.getProperty(path);\n\t\t\t\tgroup.textArrangement = `${selectedKey}`;\n\t\t\t\tmodel.refresh();\n\t\t\t}\n\t\t});\n\t\tthis._deleteButton = new Button({\n\t\t\ticon: \"sap-icon://delete\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onDeleteButtonClicked.bind(this)\n\t\t});\n\t\tthis._addButton = new Button({\n\t\t\ticon: \"sap-icon://add\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onAddButtonClicked.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Performs actions after ArrangementsEditor custom control has been rendered\n\t *\n\t * This method is called after the control has been rendered in the UI\n\t * It updates entity data and refreshes the internal model of the TextArrangementComboBox\n\t *\n\t * @returns {void}\n\t */\n\n\tonAfterRendering(): void {\n\t\tconst entityData = JSON.parse(JSON.stringify(this.getSelectionKeys())) as PropertyInfoMap;\n\t\tconst name = this._setSelectionKeysMap.name ?? \"\";\n\t\tconst label = this._setSelectionKeysMap.label;\n\t\tconst textArrangement = this._setSelectionKeysMap.textArrangement ?? \"\";\n\t\tentityData.forEach((entity) => {\n\t\t\tentity.name = entity[name] as string;\n\t\t\tentity.label = entity[label] as string;\n\t\t\tentity.textArrangement = entity[textArrangement] as string;\n\t\t});\n\t\tconst _textArrangementComboBoxModel = this._textArrangementComboBox.getModel(\"internal\") as JSONModel;\n\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\tTEXTARRANGEMENT_OPTIONS.forEach((option) => {\n\t\t\toption.label = i18nModel.getObject(option.label);\n\t\t});\n\t\t_textArrangementComboBoxModel.setData(TEXTARRANGEMENT_OPTIONS, true);\n\t\t_textArrangementComboBoxModel.refresh();\n\t}\n\n\t/**\n\t * Sets the selection keys\n\t *\n\t * This method forms the _setSelectionKeysMap from selectionKeys binding information,\n\t * and binds aggregation items for ComboBox controls, updates internal model of text arrangement ComboBox\n\t *\n\t * @param {Array<PropertyInfo>} selectionKeysArr - The array of selection keys\n\t * @returns {void}\n\t */\n\n\tsetSelectionKeys(selectionKeysArr: Array<PropertyInfo>): void {\n\t\tconst that = this;\n\t\tthat.setAggregation(\"_list\", that._list);\n\t\tthis.setProperty(\"selectionKeys\", selectionKeysArr);\n\t\tthis.setProperty(\"navigationSelectionKeys\", selectionKeysArr);\n\t\tthis._setSelectionKeysMap = this.getBindingInfo(\"selectionKeys\").parameters as PropertyInfo;\n\t\tconst bindingPath = this.getBindingPath(\"selectionKeys\") || \"\";\n\t\tconst navigationBindingPath = this.getBindingPath(\"navigationSelectionKeys\") || \"\";\n\n\t\tthis._propertyComboBox.bindAggregation(\"items\", {\n\t\t\tpath: this.getMode() !== \"uom\" ? navigationBindingPath : bindingPath,\n\t\t\t...(this.getMode() !== \"uom\" && { sorter: new Sorter(\"category\", true, true) }),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._uomComboBox.bindAggregation(\"items\", {\n\t\t\tpath: this.getMode() !== \"uom\" ? navigationBindingPath : bindingPath,\n\t\t\t...(this.getMode() !== \"uom\" && { sorter: new Sorter(\"category\", true, true) }),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._idNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForId/\",\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._descriptionNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForDescription/\",\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._textArrangementComboBox.setModel(this._getTextArrangementModel(), \"internal\");\n\t\tthis._textArrangementComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"internal>/\",\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{internal>name}\",\n\t\t\t\t\ttext: \"{internal>label}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets the items property with the selectionKeysArr provided\n\t * bind items for _list control using binding path of items,\n\t * creates a custom layout for each item using a HBox and arranging the content within the HBox according to the specified styles\n\t *\n\t * @param {Array<ArrangementOptions>} selectionKeysArr - The array of items to be set\n\t * @returns {void}\n\t */\n\n\tsetItems(selectionKeysArr: Array<ArrangementOptions>): void {\n\t\tthis.setProperty(\"items\", selectionKeysArr, true);\n\t\tthis._propertyComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForId\" });\n\t\tthis._idNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForId\" });\n\t\tthis._uomComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForDescription\" });\n\t\tthis._descriptionNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForDescription\" });\n\t\tthis._textArrangementComboBox.bindProperty(\"selectedKey\", { path: \"arrangementType\" });\n\t\tconst bindingPath = this.getBindingPath(\"items\") ?? \"\";\n\n\t\tthis._list.bindItems({\n\t\t\tpath: bindingPath,\n\t\t\ttemplate: new CustomListItem({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tthis._propertyComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._idNavigationComboBox,\n\t\t\t\t\t\t\tthis._separatorColon,\n\t\t\t\t\t\t\tthis._uomComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._descriptionNavigationComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._textArrangementComboBox,\n\t\t\t\t\t\t\tthis._deleteButton\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\talignItems: \"Start\",\n\t\t\t\t\t\tfitContainer: true\n\t\t\t\t\t} as $HBoxSettings)\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the internal model of the ArrangementsEditor control\n\t *\n\t * This method checks if the internal model exists. If not, it creates a new JSON model\n\t * and sets it as the internal model. It then returns the internal model\n\t *\n\t * @returns {sap.ui.model.Model} The internal model of the control\n\t */\n\n\t_getInternalModel(): Model {\n\t\tif (!this.getModel(\"internal\")) {\n\t\t\tconst model = new JSONModel({});\n\t\t\tthis.setModel(model, \"internal\");\n\t\t}\n\t\treturn this.getModel(\"internal\") as Model;\n\t}\n\n\t/**\n\t * Retrieves the items from the model\n\t *\n\t * This method fetches the items from the model using the binding path for items\n\t *\n\t * @returns {Array<ArrangementOptions>} An array containing the items retrieved from the model\n\t */\n\n\tgetItems(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\tgetSelectedItem(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\n\t/**\n\t * Creates and returns a JSON model for text arrangement options\n\t *\n\t * This method creates a new JSON model using the provided text arrangement options and returns it.\n\t *\n\t * @returns {sap.ui.model.json.JSONModel} A JSON model containing text arrangement options\n\t */\n\n\t_getTextArrangementModel(): JSONModel {\n\t\treturn new JSONModel(TEXTARRANGEMENT_OPTIONS);\n\t}\n\n\t/**\n\t * Handles the click event of the add button, adds a new item to the array and refreshes the model\n\t *\n\t * @returns {void}\n\t */\n\n\t_onAddButtonClicked(): void {\n\t\tconst model = this.getModel();\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\tif (model) {\n\t\t\tlet boundData = model.getProperty(path);\n\t\t\tif (!boundData) {\n\t\t\t\tboundData = [];\n\t\t\t}\n\t\t\tboundData.push({});\n\t\t\tmodel.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Handles the click event of the delete button, removes item to be deleted, refreshes the model and fires a change event\n\t *\n\t * @param {Event} event - The event object representing the click event\n\t * @returns {void}\n\t */\n\n\t_onDeleteButtonClicked(event: Event): void {\n\t\tconst source = event.getSource() as Control;\n\t\tconst path = (source.getBindingContext() as Context).getPath();\n\t\tconst bindingPath = this.getBindingPath(\"items\") || \"\";\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst bindingPathProperty = model.getProperty(bindingPath);\n\t\tbindingPathProperty && bindingPathProperty.splice(path.slice(path.length - 1), 1);\n\t\tmodel.refresh();\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: this.getItems()\n\t\t});\n\t}\n\n\thandleComboBoxEvents(event: Event, editor: ArrangementsEditor, isNavigation: boolean = false, isTextArrangementID: boolean = false) {\n\t\tconst controlId = event.getParameter(\"id\");\n\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\tconst selectedKey = control.getSelectedKey();\n\t\tconst source = event.getSource();\n\t\tconst bindingContext = (source as ComboBox).getBindingContext() as Context;\n\t\tconst path = bindingContext?.getPath() || \"\";\n\t\tconst value = control.getValue();\n\t\tconst model = editor.getModel() as JSONModel;\n\t\tconst group = model.getProperty(path);\n\t\tconst i18nModel = editor.getModel(\"i18n\") as ResourceModel;\n\n\t\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, group.propertyKeyForDescription);\n\t\t// Determine the group name based on conditions\n\t\tgroup.name = this.getGroupName(group, isNavigation, isTextArrangementID);\n\t\tlet navigationKey = \"\";\n\t\tif (group.navigationKeyForDescription) {\n\t\t\tnavigationKey = `/${group.navigationKeyForDescription}`;\n\t\t}\n\n\t\tconst groupVal = isNavigationalProperty ? `${group.propertyKeyForDescription}${navigationKey}` : group.propertyKeyForDescription;\n\t\tconst isValidation = group.name === groupVal;\n\t\t// Update group value based on conditions\n\t\tif (!isValidation) {\n\t\t\tgroup.value = this.getGroupValue(group, isNavigation, isTextArrangementID, selectedKey, navigationProperties);\n\t\t}\n\t\tthis.updateControlState(control, value, selectedKey, isValidation, i18nModel, editor);\n\t\tmodel.refresh();\n\t\treturn group;\n\t}\n\n\tgetGroupName(group: ArrangementOptions, isNavigation: boolean, isTextArrangementID: boolean): string {\n\t\tif (isNavigation) {\n\t\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t\t}\n\t\tif (isTextArrangementID) {\n\t\t\treturn `${group.propertyKeyForId}`;\n\t\t}\n\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t}\n\n\tgetGroupValue(\n\t\tgroup: ArrangementOptions,\n\t\tisNavigation: boolean,\n\t\tisTextArrangementID: boolean,\n\t\tselectedKey: string,\n\t\tnavigationProperties: NavigationParameter[]\n\t): string {\n\t\tconst { propertyKeyForId, propertyKeyForDescription, navigationKeyForDescription } = group;\n\n\t\tif (isNavigation) {\n\t\t\treturn navigationKeyForDescription ? `${propertyKeyForDescription}/${navigationKeyForDescription}` : propertyKeyForDescription;\n\t\t}\n\n\t\tif (isTextArrangementID) {\n\t\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, propertyKeyForId as string);\n\t\t\tif (navigationKeyForDescription) {\n\t\t\t\treturn isNavigationalProperty ? `${propertyKeyForId}` : `${propertyKeyForDescription}/${navigationKeyForDescription}`;\n\t\t\t}\n\t\t\treturn isNavigationalProperty ? (propertyKeyForId as string) : propertyKeyForDescription;\n\t\t}\n\n\t\treturn propertyKeyForDescription || selectedKey;\n\t}\n\n\tupdateControlState(\n\t\tcontrol: ComboBox,\n\t\tvalue: string,\n\t\tselectedKey: string,\n\t\tisValidation: boolean,\n\t\ti18nModel: ResourceModel,\n\t\teditor: ArrangementsEditor\n\t) {\n\t\tif (!selectedKey && value) {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"INVALID_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else if (isValidation) {\n\t\t\tcontrol.setValueState(ValueState.Warning);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"SAME_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else {\n\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\teditor.errorFlag = false;\n\t\t}\n\t}\n\n\thasNavigationProperty(navigationProperties: NavigationParameter[], propertyToCheck: string) {\n\t\treturn navigationProperties.length > 0 && navigationProperties.some((prop) => prop.name === propertyToCheck);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app/controls"}},{"offset":{"line":30,"column":0},"map":{"version":3,"file":"CompactFormatterSelection.js","names":["sap","ui","define","deepClone","Button","CheckBox","ComboBox","CustomListItem","FlexBox","HBox","Input","List","Select","StepInput","Text","VBox","Control","Item","ListItem","JSONModel","____config_FormatterOptions","ODataUtils","getFormatterConfiguration","CompactFormatterSelection","extend","renderer","apiVersion","render","rm","control","getType","_deleteButton","setVisible","_applyButton","openStart","openEnd","renderControl","_selectorControl","_List","close","metadata","properties","type","formatters","aggregations","_list","multiple","visibility","events","change","parameters","value","constructor","_constructor","settings","Control.prototype.constructor.call","this","init","_init","Control.prototype.init.call","setFormatters","_setFormatters","setAggregation","setProperty","model","getModel","selectedProperty","getProperty","emptyObj","selectedFormatter","find","formatter","property","getData","configuration","name","createControl","formatterName","i18nModel","displayName","getObject","splice","_refreshControl","setSelectedKey","listModel","listItems","bindItems","path","template","content","justifyContent","bindAggregation","factory","_createParametersControl","bind","setModel","_createControl","formatterConfigList","isDateType","isPropertyTypeDate","isNumberType","filter","formatterConfig","visible","formatterListModel","formattersList","width","items","key","text","onFormatterSelected","addStyleClass","icon","press","deleteFormatter","applyFormatter","id","context","propertyType","inputControl","hBoxItems","selected","_createSelectControl","options","flexBoxItems","i","length","currentProperty","rowItem","setDefaultStepInputValue","bindingInfo","min","max","push","hBox","direction","_setDefaultStepInputValue","prop","defaultValue","selectedKey","propertyOptions","item","addItem","_onFormatterSelected","event","targetProperty","source","getSource","getSelectedKey","isSelectedKey","Object","assign","_applyFormatter","listItemsData","_updatePropertyValueFormatters","propertyValueFormatters","fireEvent","_deleteFormatter","getFormatters","index","forEach","propertyValueFormatter","parameterLength"],"sources":["CompactFormatterSelection.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport deepClone from \"sap/base/util/deepClone\";\nimport Button from \"sap/m/Button\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport Input from \"sap/m/Input\";\nimport List from \"sap/m/List\";\nimport Select from \"sap/m/Select\";\nimport StepInput from \"sap/m/StepInput\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Item from \"sap/ui/core/Item\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { getFormatterConfiguration } from \"../../config/FormatterOptions\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"../../helpers/Formatter\";\nimport type { PropertyInfoMap } from \"../../odata/ODataTypes\";\nimport * as ODataUtils from \"../../odata/ODataUtils\";\n\nexport default interface FormatterSelection {\n\tgetType(): string;\n\tgetFormatters(): FormatterConfigurationMap;\n}\ninterface PropertyType {\n\tvalue: number;\n\tdefaultValue: number;\n}\n\ntype PropertyOptions = {\n\tname: string;\n\tvalue: string;\n};\n\ninterface CompactFormatterSelectionSettings extends $ControlSettings {\n\ttype: string;\n\tformatters: FormatterConfiguration;\n\tchange?: (event: CompactFormatterSelection$ChangeEvent) => void;\n}\n\ninterface CompactFormatterSelectionChangeEventParameters {\n\tvalue?: object;\n}\n\ntype CompactFormatterSelection$ChangeEvent = Event<CompactFormatterSelectionChangeEventParameters>;\n\n/**\n * @namespace sap.cards.ap.generator.app.controls\n */\nexport default class CompactFormatterSelection extends Control {\n\t_selectorControl!: ComboBox;\n\t_deleteButton!: Button;\n\t_applyButton!: Button;\n\t_List!: List;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\ttype: \"string\",\n\t\t\tformatters: \"object\"\n\t\t},\n\t\taggregations: {\n\t\t\t_list: { type: \"sap.m.List\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"object\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(settings: CompactFormatterSelectionSettings) {\n\t\tsuper(settings);\n\t}\n\n\trenderer = {\n\t\tapiVersion: 2,\n\t\trender: function (rm: RenderManager, control: FormatterSelection): void {\n\t\t\tif (control.getType() === \"COMPACT\") {\n\t\t\t\tcontrol._deleteButton.setVisible(false);\n\t\t\t\tcontrol._applyButton.setVisible(false);\n\t\t\t}\n\t\t\trm.openStart(\"div\", control);\n\t\t\trm.openEnd();\n\t\t\trm.renderControl(control._selectorControl);\n\t\t\trm.renderControl(control._deleteButton);\n\t\t\trm.renderControl(control._List);\n\t\t\trm.renderControl(control._applyButton);\n\t\t\trm.close(\"div\");\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the component\n\t * This method creates a new List control (_List) and calls the superclass's init method\n\t *\n\t * @returns {void}\n\t */\n\n\tinit(): void {\n\t\tthis._List = new List();\n\t\tsuper.init();\n\t}\n\n\t/**\n\t * Sets the formatters for the control\n\t *\n\t * @param {FormatterConfigurationMap} formatters - An array of Formatter objects representing the formatters to be set.\n\t * @returns {void}\n\t */\n\n\tsetFormatters(formatters: FormatterConfigurationMap): void {\n\t\tthis.setAggregation(\"_list\", this._List);\n\t\tthis.setProperty(\"formatters\", formatters, true);\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst selectedProperty = model.getProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\");\n\t\tconst emptyObj = {} as FormatterConfiguration;\n\t\tlet selectedFormatter: FormatterConfiguration = formatters.find((formatter) => formatter.property === selectedProperty) || emptyObj;\n\t\tconst properties: PropertyInfoMap = model.getData().configuration.properties;\n\t\tconst type = properties.find((property) => property.name === selectedProperty)?.type || \"\";\n\t\tthis.createControl(type);\n\t\tif (\n\t\t\tselectedFormatter.formatterName === \"format.unit\" &&\n\t\t\ttypeof selectedFormatter.parameters?.[1].properties?.[0].value === \"number\"\n\t\t) {\n\t\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\t\tselectedFormatter.formatterName = \"format.float\";\n\t\t\tselectedFormatter.displayName = i18nModel.getObject(\"FORMAT_FLOAT\");\n\t\t\tif (selectedFormatter.parameters) {\n\t\t\t\tselectedFormatter.parameters[0] = selectedFormatter.parameters[1];\n\t\t\t}\n\t\t\tselectedFormatter.parameters?.splice(1, 1);\n\t\t} else if (selectedFormatter.formatterName === \"format.unit\") {\n\t\t\tselectedFormatter = emptyObj;\n\t\t}\n\t\tthis._refreshControl(selectedFormatter);\n\t\tif (selectedFormatter.formatterName) {\n\t\t\tthis._selectorControl.setSelectedKey(selectedFormatter.formatterName);\n\t\t}\n\t}\n\n\t/**\n\t * Refreshes the control with the provided formatter\n\t * @param {FormatterConfiguration} formatter - The formatter to be used for refreshing the control\n\t * @returns {void}\n\t * @private\n\t */\n\n\t_refreshControl(formatter: FormatterConfiguration): void {\n\t\tconst listModel = new JSONModel({\n\t\t\tlistItems: [formatter]\n\t\t});\n\t\tthis._List\n\t\t\t.bindItems({\n\t\t\t\tpath: \"/listItems\",\n\t\t\t\ttemplate: new CustomListItem({\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew VBox({\n\t\t\t\t\t\t\tjustifyContent: \"SpaceAround\"\n\t\t\t\t\t\t}).bindAggregation(\"items\", {\n\t\t\t\t\t\t\tpath: \"parameters\",\n\t\t\t\t\t\t\tfactory: this._createParametersControl.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t})\n\t\t\t.setModel(listModel);\n\t}\n\n\t/**\n\t * Creates a select control with the formatter list based on the provided type\n\t *\n\t * @param {string} type - The type of the control to be created\n\t * @returns {void}\n\t */\n\n\tcreateControl(type: string): void {\n\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\tlet formatterConfigList: FormatterConfigurationMap = deepClone(getFormatterConfiguration());\n\t\tconst isDateType = ODataUtils.isPropertyTypeDate(type);\n\t\tconst isNumberType = type === \"Edm.Decimal\" || type === \"Edm.Int16\" || type === \"Edm.Int32\" || type === \"Edm.Double\";\n\t\tformatterConfigList = formatterConfigList.filter((formatterConfig) => formatterConfig.visible === true);\n\t\tif (isDateType) {\n\t\t\tformatterConfigList = formatterConfigList.filter((formatterConfig) => formatterConfig.type === \"Date\");\n\t\t} else if (isNumberType) {\n\t\t\tformatterConfigList = formatterConfigList.filter(\n\t\t\t\t(formatterConfig) => formatterConfig.type === \"numeric\" || formatterConfig.type === \"string | numeric\"\n\t\t\t);\n\t\t} else {\n\t\t\tformatterConfigList = formatterConfigList.filter(\n\t\t\t\t(formatterConfig) => formatterConfig.type === \"string\" || formatterConfig.type === \"string | numeric\"\n\t\t\t);\n\t\t}\n\t\tconst formatterListModel = new JSONModel({\n\t\t\tformattersList: formatterConfigList\n\t\t});\n\t\tthis._selectorControl = new ComboBox({\n\t\t\twidth: \"80%\",\n\t\t\titems: {\n\t\t\t\tpath: \"/formattersList\",\n\t\t\t\ttemplate: new ListItem({\n\t\t\t\t\tkey: \"{formatterName}\",\n\t\t\t\t\ttext: \"{displayName}\"\n\t\t\t\t})\n\t\t\t},\n\t\t\tchange: this.onFormatterSelected.bind(this)\n\t\t})\n\t\t\t.addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t.setModel(formatterListModel);\n\t\tthis._deleteButton = new Button({\n\t\t\ticon: \"sap-icon://delete\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this.deleteFormatter.bind(this)\n\t\t});\n\t\tthis._applyButton = new Button({\n\t\t\ttext: i18nModel.getObject(\"FORMATTER_CONTROL_APPLY\"),\n\t\t\ttype: \"Ghost\",\n\t\t\tpress: this.applyFormatter.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Creates a control for displaying and editing parameters based on the provided property type\n\t *\n\t * @param {string} id - ID of the control\n\t * @param {*} context - context object containing information about the property\n\t * @returns {sap.ui.core.Control} A control for displaying and editing parameters\n\t * @private\n\t */\n\n\t_createParametersControl(id: string, context: any): Control {\n\t\tconst property = context.getProperty();\n\t\tconst propertyType = property.type;\n\t\tlet inputControl: CheckBox | Select | Input | StepInput,\n\t\t\thBoxItems: (Text | CheckBox | Select | Input)[] = [];\n\t\tif (propertyType !== \"object\") {\n\t\t\thBoxItems = [\n\t\t\t\tnew Text({\n\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\ttext: \"{displayName} : \"\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBegin\")\n\t\t\t];\n\t\t}\n\t\tswitch (propertyType) {\n\t\t\tcase \"boolean\":\n\t\t\t\tinputControl = new CheckBox({ width: \"116px\", selected: \"{selected}\" });\n\t\t\t\tbreak;\n\t\t\tcase \"enum\":\n\t\t\t\tinputControl = this._createSelectControl(\"{selectedKey}\", property.options);\n\t\t\t\tbreak;\n\t\t\tcase \"object\": {\n\t\t\t\tconst flexBoxItems = [];\n\t\t\t\tfor (let i = 0; i < property.properties.length; i++) {\n\t\t\t\t\tconst currentProperty = property.properties[i];\n\t\t\t\t\tif (currentProperty && typeof currentProperty.value !== \"object\") {\n\t\t\t\t\t\tconst rowItem = [];\n\t\t\t\t\t\tconst displayName = currentProperty.displayName;\n\t\t\t\t\t\tconst propertyType = currentProperty.type;\n\t\t\t\t\t\tswitch (propertyType) {\n\t\t\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\t\t\tinputControl = new CheckBox({\n\t\t\t\t\t\t\t\t\twidth: \"116px\",\n\t\t\t\t\t\t\t\t\tselected: { path: \"properties/\" + i + \"/selected/\" }\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"enum\":\n\t\t\t\t\t\t\t\tinputControl = this._createSelectControl(\"{properties/\" + i + \"/selectedKey}\", currentProperty.options);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\t\t\tthis.setDefaultStepInputValue(currentProperty);\n\t\t\t\t\t\t\t\tconst bindingInfo: PropertyBindingInfo = { path: `properties/${i}/value` };\n\t\t\t\t\t\t\t\tinputControl = new StepInput({ width: \"116px\", min: 0, max: 2, value: bindingInfo });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tinputControl = new Input({ width: \"176px\", value: \"{properties/\" + i + \"/value}\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t\trowItem.push(\n\t\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\t\t\t\ttext: displayName + \" : \"\n\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBegin\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\trowItem.push(inputControl);\n\t\t\t\t\t\tconst hBox = new HBox({ justifyContent: \"Start\", items: rowItem });\n\t\t\t\t\t\tflexBoxItems.push(hBox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn new FlexBox({ items: flexBoxItems, direction: \"Column\" });\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tinputControl = new Input({ width: \"108px\", value: \"{value}\" });\n\t\t\t\tbreak;\n\t\t}\n\t\thBoxItems.push(inputControl);\n\t\treturn new HBox({ justifyContent: \"Start\", items: hBoxItems });\n\t}\n\n\tsetDefaultStepInputValue(prop: PropertyType) {\n\t\tprop.value = prop.value >= 0 ? prop.value : prop.defaultValue;\n\t\treturn prop;\n\t}\n\t/**\n\t * Creates a select control based on the provided selected key and property options\n\t *\n\t * @param {string} selectedKey - The selected key for the select control\n\t * @param {Array<PropertyOptions>} propertyOptions - An array of propertyOptions representing the options for the select control\n\t * @returns {sap.m.Select} Select control populated with the provided property options\n\t * @private\n\t */\n\n\t_createSelectControl(selectedKey: string, propertyOptions: Array<PropertyOptions>) {\n\t\tconst inputControl = new Select({\n\t\t\twidth: \"108px\",\n\t\t\tselectedKey: selectedKey\n\t\t});\n\t\tfor (const item of propertyOptions) {\n\t\t\tinputControl.addItem(\n\t\t\t\tnew Item({\n\t\t\t\t\ttext: item.name,\n\t\t\t\t\tkey: item.value\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn inputControl;\n\t}\n\n\t/**\n\t * Handles the event when a formatter is selected\n\t *\n\t * @param {Event} event - The event object representing the selection event\n\t * @returns {void}\n\t */\n\n\tonFormatterSelected(event: Event): void {\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst targetProperty = model.getProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\");\n\t\tconst source = event.getSource() as ComboBox;\n\t\tconst selectedKey = source.getSelectedKey();\n\t\tconst formatterConfig = getFormatterConfiguration().find((formatter) => {\n\t\t\treturn formatter.formatterName === selectedKey;\n\t\t}) as FormatterConfiguration;\n\n\t\tconst isSelectedKey = selectedKey && formatterConfig ? true : false;\n\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterApplied\", isSelectedKey);\n\n\t\tthis._refreshControl(Object.assign({ property: targetProperty }, deepClone(formatterConfig)));\n\t}\n\n\t/**\n\t * Applies the selected formatter to the control, fires the change event with the updated propertyValueFormatters\n\t *\n\t * @returns {void}\n\t */\n\n\tapplyFormatter(): void {\n\t\tconst listItemsData = (this._List.getModel() as JSONModel).getProperty(\"/listItems\");\n\t\tthis._updatePropertyValueFormatters(listItemsData[0]);\n\t\tconst propertyValueFormatters = (this.getModel() as JSONModel).getProperty(\n\t\t\t\"/configuration/advancedFormattingOptions/propertyValueFormatters\"\n\t\t);\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: propertyValueFormatters\n\t\t});\n\t}\n\n\t/**\n\t * Deletes the selected formatter from the control, fires the change event with the updated propertyValueFormatters\n\t *\n\t * @returns {void}\n\t */\n\n\tdeleteFormatter(): void {\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst targetProperty = model.getProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\");\n\t\tconst propertyValueFormatters = this.getFormatters() as FormatterConfigurationMap;\n\t\tlet index = -1;\n\t\tpropertyValueFormatters.forEach((propertyValueFormatter, i) => {\n\t\t\tif (propertyValueFormatter.property === targetProperty) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t});\n\t\tif (index !== -1) {\n\t\t\tpropertyValueFormatters.splice(index, 1);\n\t\t}\n\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\", propertyValueFormatters);\n\t\tconst emptyObj = {} as FormatterConfiguration;\n\t\tthis._refreshControl(emptyObj);\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: propertyValueFormatters\n\t\t});\n\t\tthis._selectorControl.setSelectedKey(\"\");\n\t}\n\n\t/**\n\t * Updates the propertyValueFormatters model with the provided formatter configuration\n\t *\n\t * @param formatterConfig - The formatter configuration to be updated\n\t * @returns {void}\n\t * @private\n\t */\n\t_updatePropertyValueFormatters(formatterConfig: FormatterConfiguration): void {\n\t\tif (formatterConfig.parameters) {\n\t\t\tconst parameterLength = formatterConfig.parameters.length;\n\n\t\t\tfor (let i = 0; i < parameterLength; i++) {\n\t\t\t\tif (formatterConfig.parameters[i].type === \"string\") {\n\t\t\t\t\t// If a parameter is of type string, set the value to an empty string if it is undefined\n\t\t\t\t\tformatterConfig.parameters[i].value = formatterConfig.parameters[i].value || formatterConfig.parameters[i].defaultValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst targetProperty = formatterConfig.property;\n\t\tconst propertyValueFormatters = this.getFormatters() as FormatterConfigurationMap;\n\t\tlet index = -1;\n\t\tpropertyValueFormatters.forEach((propertyValueFormatter, i) => {\n\t\t\tif (propertyValueFormatter.property === targetProperty) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t});\n\t\tif (index !== -1) {\n\t\t\tpropertyValueFormatters[index] = formatterConfig;\n\t\t} else {\n\t\t\tpropertyValueFormatters.push(formatterConfig);\n\t\t}\n\t\t(this.getModel() as JSONModel).setProperty(\n\t\t\t\"/configuration/advancedFormattingOptions/propertyValueFormatters\",\n\t\t\tpropertyValueFormatters\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app/controls"}},{"offset":{"line":45,"column":0},"map":{"version":3,"file":"FormatterOptions.js","names":["sap","ui","define","CoreLib","ResourceModel","getFormatterConfiguration","oResourceBundle","getResourceBundleFor","i18nModel","bundleUrl","oUrlInfo","url","bundle","formatterName","displayName","getObject","parameters","name","type","defaultValue","properties","visible","defaultSelectedKey","selectedKey","options","value","bIsProperty","None","Negative","Critical","Positive","__exports","__esModule"],"sources":["FormatterOptions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport CoreLib from \"sap/ui/core/Lib\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport type { FormatterConfigurationMap } from \"../helpers/Formatter\";\n\nexport const getFormatterConfiguration = function (): FormatterConfigurationMap {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst i18nModel = new ResourceModel({\n\t\tbundleUrl: oResourceBundle.oUrlInfo.url,\n\t\tbundle: oResourceBundle //Reuse created bundle to stop extra network calls\n\t});\n\n\treturn [\n\t\t{\n\t\t\tformatterName: \"format.date\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [{ name: \"UTC\", displayName: i18nModel.getObject(\"UTC\"), type: \"boolean\", defaultValue: false }]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.dateTime\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATETIME\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"relative\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"RELATIVE\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: \"UTC\", displayName: i18nModel.getObject(\"UTC\"), type: \"boolean\", defaultValue: false }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.float\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_FLOAT\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"decimals\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DECIMALS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"style\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"STYLE\"),\n\t\t\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\t\t\tdefaultSelectedKey: \"short\",\n\t\t\t\t\t\t\tselectedKey: \"short\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"short\", name: i18nModel.getObject(\"SHORT\") },\n\t\t\t\t\t\t\t\t{ value: \"long\", name: i18nModel.getObject(\"LONG\") }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.currency\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CURRENCY\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"currency\", displayName: i18nModel.getObject(\"CURRENCY\"), type: \"string\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"currencyCode\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"CURRENCY_CODE\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.percent\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_PERCENT\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.integer\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_INTEGER\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.unit\",\n\t\t\tdisplayName: \"\",\n\t\t\tparameters: [\n\t\t\t\t{ name: \"type\", displayName: \"\", type: \"string\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"decimals\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DECIMALS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"style\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"STYLE\"),\n\t\t\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\t\t\tdefaultSelectedKey: \"short\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"short\", name: i18nModel.getObject(\"SHORT\") },\n\t\t\t\t\t\t\t\t{ value: \"long\", name: i18nModel.getObject(\"LONG\") }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.targetValueFormatter\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_TARGET_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"iTargetValue\", displayName: i18nModel.getObject(\"TARGET_VALUE\"), type: \"number\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"manifestTarget\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"MANIFEST_TARGET\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatValueColor\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_COLOR_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"sImprovementDirection\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"IMPROVEMENT_DIRECTION\"),\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\t\t\tbIsProperty: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsDeviationLowBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DEVIATION_LOW_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsDeviationHighBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DEVIATION_HIGH_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsToleranceLowBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"TOLERANCE_LOW_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsToleranceHighBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"TOLERANCE_HIGH_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"deviationLow\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"LOW_DEVIATION\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"deviationHigh\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"HIGH_DEVIATION\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"toleranceLow\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"LOW_TOLERANCE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"toleranceHigh\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"HIGH_TOLERANCE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"oCriticalityConfigValues\",\n\t\t\t\t\t\t\tdisplayName: \"Criticality States\",\n\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\tvalue: { None: \"Neutral\", Negative: \"Error\", Critical: \"Critical\", Positive: \"Good\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"nDefaultValue\", displayName: i18nModel.getObject(\"DEFAULT_VALUE\"), type: \"number\", defaultValue: \"\" }\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatNumber\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_NUMBER\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"value2\", displayName: i18nModel.getObject(\"VALUE\"), type: \"number\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"numberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"style\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"STYLE\"),\n\t\t\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\t\t\tdefaultSelectedKey: \"short\",\n\t\t\t\t\t\t\tselectedKey: \"short\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"short\", name: i18nModel.getObject(\"SHORT\") },\n\t\t\t\t\t\t\t\t{ value: \"long\", name: i18nModel.getObject(\"LONG\") }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: \"showScale\", displayName: i18nModel.getObject(\"SCALE\"), type: \"boolean\", defaultValue: true },\n\t\t\t\t\t\t{ name: \"scaleFactor\", displayName: i18nModel.getObject(\"SCALE_FACTOR\"), type: \"number\", defaultValue: 0 }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"textFragments\",\n\t\t\t\t\tdisplayName: i18nModel.getObject(\"DEFAULT_VALUE\"),\n\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\tdefaultSelectedKey: [0],\n\t\t\t\t\tselectedKey: [0],\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ZERO\"), value: \"[0]\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ONE\"), value: \"[1]\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ZERO_ONE\"), value: \"[0, 1]\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ONE_ZERO\"), value: \"[1, 0]\" }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatWithPercentage\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_VALUE_WITH_PERCENTAGE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.computePercentage\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_COMPUTE_PERCENTAGE\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"target\", displayName: i18nModel.getObject(\"TARGET_INDICATORS_TEXT\"), type: \"string\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"sUnit\",\n\t\t\t\t\tdisplayName: i18nModel.getObject(\"UNIT\"),\n\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\tdefaultSelectedKey: \"\",\n\t\t\t\t\tselectedKey: \"\",\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ value: \"\", name: i18nModel.getObject(\"NO_UNIT\") },\n\t\t\t\t\t\t{ value: \"%\", name: i18nModel.getObject(\"PERCENT\") }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.returnPercentageChange\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_PERCENTAGE\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"iTargetValue\", displayName: i18nModel.getObject(\"TARGET_VALUE\"), type: \"number\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"manifestTarget\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"MANIFEST_TARGET\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCurrency\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CURRENCY_INTEGRATION\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"oFormatterProperties\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: \"scaleFactor\", displayName: i18nModel.getObject(\"SCALE_FACTOR\"), type: \"number\", defaultValue: 0 }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"bIncludeText\", displayName: i18nModel.getObject(\"INCLUDE_TEXT\"), type: \"boolean\", defaultValue: false },\n\t\t\t\t{ name: \"sCurrency\", displayName: i18nModel.getObject(\"CURRENCY\"), type: \"string\", defaultValue: \"\" },\n\t\t\t\t{ name: \"sCurrencyCodeText\", displayName: i18nModel.getObject(\"CURRENCY_CODE\"), type: \"string\", defaultValue: \"\" }\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatHeaderCount\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_HEADER_COUNT\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatDate\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [{ name: \"UTC\", displayName: i18nModel.getObject(\"UTC\"), type: \"boolean\", defaultValue: false }]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatKPIValue\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_KPI_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"percentageAvailable\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"PERCENTAGE\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"bUnit\", displayName: i18nModel.getObject(\"UNIT\"), type: \"boolean\", defaultValue: false }\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatTrendIcon\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_TREND_ICON\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsRefValBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"REFERENCE_VALUE_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsDownDiffBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DOWN_DIFFERENCE_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsUpDiffBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"UP_DIFFERENCE_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"referenceValue\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"REFERENCE_VALUE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"downDifference\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DOWN_DIFFERENCE_VALUE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"upDifference\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"UP_DIFFERENCE_VALUE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"nDefaultValue\", displayName: i18nModel.getObject(\"DEFAULT_VALUE\"), type: \"number\", defaultValue: \"\" }\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticality\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_STATE_OR_VALUE\"),\n\t\t\tparameters: [{ name: \"sType\", displayName: i18nModel.getObject(\"Criticality_States\"), type: \"string\", defaultValue: \"\" }],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityIcon\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_ICON\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityButtonType\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_BUTTON_TYPE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatToKeepWhitespace\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_TO_KEEP_WHITESPACE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatDateValue\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATE_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"sPattern\",\n\t\t\t\t\tdisplayName: \"Format options\",\n\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\tdefaultSelectedKey: \"yearmonth\",\n\t\t\t\t\tselectedKey: \"yearmonth\",\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"YEAR_MONTH\"), value: \"yearmonth\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"YEAR_WEEK\"), value: \"yearweek\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"YEAR_QUARTER\"), value: \"yearquarter\" }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.kpiValueCriticality\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_KPI_VALUE_CRITICALITY\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityValueState\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_VALUE_STATE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityColorMicroChart\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_MICRO_CHART\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t}\n\t];\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"config"}},{"offset":{"line":52,"column":0},"map":{"version":3,"file":"PreviewOptions.js","names":["sap","ui","define","PREVIEW_OPTIONS","hosts","key","text","height","width","type","hostConfig","__exports","__esModule"],"sources":["PreviewOptions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport const PREVIEW_OPTIONS = {\n\thosts: [\n\t\t{\n\t\t\tkey: \"int-default\",\n\t\t\ttext: \"GENERATOR_DEFAULT_INT\",\n\t\t\theight: \"auto\",\n\t\t\twidth: \"500px\",\n\t\t\ttype: \"integration\"\n\t\t},\n\t\t{\n\t\t\tkey: \"int-my-home\",\n\t\t\ttext: \"GENERATOR_MY_HOME_INT\",\n\t\t\theight: \"530px\",\n\t\t\twidth: \"300px\",\n\t\t\ttype: \"integration\"\n\t\t},\n\t\t{\n\t\t\tkey: \"adaptive-ms-teams-light\",\n\t\t\ttext: \"GENERATOR_MS_TEAM_LIGHT_ADAPTIVE\",\n\t\t\ttype: \"adaptive\",\n\t\t\thostConfig: \"teams-light\"\n\t\t},\n\t\t{\n\t\t\tkey: \"adaptive-ms-teams-dark\",\n\t\t\ttext: \"GENERATOR_MS_TEAM_DARK_ADAPTIVE\",\n\t\t\ttype: \"adaptive\",\n\t\t\thostConfig: \"teams-dark\"\n\t\t},\n\t\t{\n\t\t\tkey: \"int-custom\",\n\t\t\ttext: \"GENERATOR_CUSTOM_INT\",\n\t\t\ttype: \"custom\",\n\t\t\theight: \"auto\",\n\t\t\twidth: \"auto\"\n\t\t}\n\t]\n};\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAIO,MAAMC,EAAkB,CAC9BC,MAAO,CACN,CACCC,IAAK,cACLC,KAAM,wBACNC,OAAQ,OACRC,MAAO,QACPC,KAAM,eAEP,CACCJ,IAAK,cACLC,KAAM,wBACNC,OAAQ,QACRC,MAAO,QACPC,KAAM,eAEP,CACCJ,IAAK,0BACLC,KAAM,mCACNG,KAAM,WACNC,WAAY,eAEb,CACCL,IAAK,yBACLC,KAAM,kCACNG,KAAM,WACNC,WAAY,cAEb,CACCL,IAAK,aACLC,KAAM,uBACNG,KAAM,SACNF,OAAQ,OACRC,MAAO,UAGR,IAAAG,EAAA,CAAAC,WAAA,MAAAD,EAAAR,kBAAA,OAAAQ,CAAA","ignoreList":[],"sourceRoot":"config"}},{"offset":{"line":59,"column":0},"map":{"version":3,"file":"TextArrangementOptions.js","names":["sap","ui","define","TEXTARRANGEMENT_OPTIONS","name","label","__exports","__esModule"],"sources":["TextArrangementOptions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport const TEXTARRANGEMENT_OPTIONS = [\n\t{\n\t\tname: \"TextFirst\",\n\t\tlabel: \"TEXT_FIRST\"\n\t},\n\t{\n\t\tname: \"TextLast\",\n\t\tlabel: \"TEXT_LAST\"\n\t},\n\t{\n\t\tname: \"TextOnly\",\n\t\tlabel: \"TEXT_ONLY\"\n\t},\n\t{\n\t\tname: \"TextSeparate\",\n\t\tlabel: \"TEXT_SEPARATE\"\n\t}\n];\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAIO,MAAMC,EAA0B,CACtC,CACCC,KAAM,YACNC,MAAO,cAER,CACCD,KAAM,WACNC,MAAO,aAER,CACCD,KAAM,WACNC,MAAO,aAER,CACCD,KAAM,eACNC,MAAO,kBAEP,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAH,0BAAA,OAAAG,CAAA","ignoreList":[],"sourceRoot":"config"}},{"offset":{"line":66,"column":0},"map":{"version":3,"file":"ApplicationInfo.js","names":["sap","ui","define","Component","ODataModelVersion","ApplicationInfo","constructor","rootComponent","this","_rootComponent","model","getModel","_oDataModelVersion","isA","V4","V2","createInstance","instance","getInstance","Error","getRootComponent","fetchDetails","bODataV4","serviceUrl","getServiceUrl","sServiceUrl","hash","window","hasher","getHash","componentName","getManifest","id","hashPartial","split","semanticObject","action","includes","path","startsWith","replace","index","indexOf","entitySet","substring","floorPlan","odataModel","entitySetWithObjectContext","validateCardGeneration","_this","Promise","resolve","mApplicationInfo","entitySetWithContext","paranStart","paranEnd","sContext","e","reject","_resetInstance","__exports","__esModule"],"sources":["ApplicationInfo.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Component from \"sap/ui/core/Component\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\ntype Model = V2ODataModel | V4ODataModel;\n\ntype ObjectPageApplicationInfo = {\n\trootComponent: Component;\n\tfloorPlan: string;\n\todataModel: string;\n\tentitySet: string;\n\tserviceUrl: string;\n\tentitySetWithObjectContext: string;\n\tcomponentName: string;\n\tsemanticObject: string;\n\taction: string;\n};\n\nexport enum ODataModelVersion {\n\tV2 = \"V2\",\n\tV4 = \"V4\"\n}\n\nexport type LibVersionInfo = {\n\tbuildTimestamp: string;\n\tname: string;\n\tscmRevision: string;\n\tversion: string;\n};\n\nexport class ApplicationInfo {\n\tstatic instance: ApplicationInfo | null;\n\t_oDataModelVersion: ODataModelVersion;\n\t_rootComponent: Component;\n\n\tprivate constructor(rootComponent: Component) {\n\t\tthis._rootComponent = rootComponent;\n\t\tconst model = rootComponent.getModel() as Model;\n\t\tthis._oDataModelVersion = model.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\") ? ODataModelVersion.V4 : ODataModelVersion.V2;\n\t}\n\n\tpublic static createInstance(rootComponent: Component) {\n\t\tif (!ApplicationInfo.instance) {\n\t\t\tApplicationInfo.instance = new ApplicationInfo(rootComponent);\n\t\t}\n\t\treturn ApplicationInfo.instance;\n\t}\n\n\tpublic static getInstance() {\n\t\tif (ApplicationInfo.instance) {\n\t\t\treturn ApplicationInfo.instance;\n\t\t}\n\t\tthrow new Error(\"ApplicationInfo instance not found\");\n\t}\n\n\tgetRootComponent() {\n\t\treturn this._rootComponent;\n\t}\n\n\tfetchDetails(): ObjectPageApplicationInfo {\n\t\tconst model = this._rootComponent.getModel() as Model;\n\t\tconst bODataV4 = this._oDataModelVersion === ODataModelVersion.V4;\n\t\tconst serviceUrl = bODataV4 ? (model as V4ODataModel).getServiceUrl() : (model as V2ODataModel).sServiceUrl;\n\t\tconst hash = window.hasher.getHash();\n\t\tconst componentName = this._rootComponent.getManifest()[\"sap.app\"].id;\n\t\tconst [hashPartial] = hash.split(\"&/\");\n\t\tconst [semanticObject, action] = hashPartial.includes(\"?\") ? hashPartial.split(\"?\")[0].split(\"-\") : hashPartial.split(\"-\");\n\n\t\tlet path = hash.split(\"&/\")[1] || \"\";\n\t\tpath = path.includes(\"/\") ? path.split(\"/\")[0] : path;\n\n\t\tif (path.startsWith(\"/\")) {\n\t\t\tpath = path.replace(\"/\", \"\");\n\t\t}\n\n\t\tconst index = path.indexOf(\"(\");\n\t\tconst entitySet = path.substring(0, index);\n\n\t\treturn {\n\t\t\trootComponent: this._rootComponent,\n\t\t\tfloorPlan: \"ObjectPage\",\n\t\t\todataModel: bODataV4 ? ODataModelVersion.V4 : ODataModelVersion.V2,\n\t\t\tentitySet,\n\t\t\tserviceUrl,\n\t\t\tentitySetWithObjectContext: path,\n\t\t\tcomponentName,\n\t\t\tsemanticObject,\n\t\t\taction\n\t\t};\n\t}\n\n\tasync validateCardGeneration() {\n\t\tif (!this._rootComponent || !(this._rootComponent instanceof Component)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst mApplicationInfo = this.fetchDetails();\n\t\tif (!mApplicationInfo.serviceUrl || !mApplicationInfo.entitySet) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst entitySetWithContext = mApplicationInfo.entitySetWithObjectContext;\n\t\tif (!entitySetWithContext) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (entitySetWithContext.indexOf(\"(\") > -1) {\n\t\t\tconst paranStart = entitySetWithContext.indexOf(\"(\");\n\t\t\tconst paranEnd = entitySetWithContext.indexOf(\")\");\n\t\t\tconst sContext = entitySetWithContext.substring(paranStart + 1, paranEnd);\n\t\t\tif (!sContext) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * For testing purposes only\n\t */\n\t_resetInstance() {\n\t\tApplicationInfo.instance = null;\n\t}\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,mCAAAC,GAAA,iBAsBYC,EAAiB,SAAjBA,KAAiB,WAAjBA,EAAiB,kBAAjBA,CAAiB,EAAjBA,GAAiB,IAYtB,MAAMC,EAKJC,YAAYC,GACnBC,KAAKC,eAAiBF,EACtB,MAAMG,EAAQH,EAAcI,WAC5BH,KAAKI,mBAAqBF,EAAMG,IAAkB,oCAAsCT,EAAkBU,GAAKV,EAAkBW,EAClI,CAEA,qBAAAC,CAA6BT,GAC5B,IAAKF,EAAgBY,SAAU,CAC9BZ,EAAgBY,SAAW,IAAIZ,EAAgBE,EAChD,CACA,OAAOF,EAAgBY,QACxB,CAEA,kBAAAC,GACC,GAAIb,EAAgBY,SAAU,CAC7B,OAAOZ,EAAgBY,QACxB,CACA,MAAM,IAAIE,MAAM,qCACjB,CAEAC,mBACC,OAAOZ,KAAKC,cACb,CAEAY,eACC,MAAMX,EAAQF,KAAKC,eAAeE,WAClC,MAAMW,EAAWd,KAAKI,qBAAuBR,EAAkBU,GAC/D,MAAMS,EAAaD,EAAYZ,EAAuBc,gBAAmBd,EAAuBe,YAChG,MAAMC,EAAOC,OAAOC,OAAOC,UAC3B,MAAMC,EAAgBtB,KAAKC,eAAesB,cAAc,WAAWC,GACnE,MAAOC,GAAeP,EAAKQ,MAAM,MACjC,MAAOC,EAAgBC,GAAUH,EAAYI,SAAS,KAAOJ,EAAYC,MAAM,KAAK,GAAGA,MAAM,KAAOD,EAAYC,MAAM,KAEtH,IAAII,EAAOZ,EAAKQ,MAAM,MAAM,IAAM,GAClCI,EAAOA,EAAKD,SAAS,KAAOC,EAAKJ,MAAM,KAAK,GAAKI,EAEjD,GAAIA,EAAKC,WAAW,KAAM,CACzBD,EAAOA,EAAKE,QAAQ,IAAK,GAC1B,CAEA,MAAMC,EAAQH,EAAKI,QAAQ,KAC3B,MAAMC,EAAYL,EAAKM,UAAU,EAAGH,GAEpC,MAAO,CACNlC,cAAeC,KAAKC,eACpBoC,UAAW,aACXC,WAAYxB,EAAWlB,EAAkBU,GAAKV,EAAkBW,GAChE4B,YACApB,aACAwB,2BAA4BT,EAC5BR,gBACAK,iBACAC,SAEF,CAEMY,yBAAsB,IAAG,MAAAC,EACzBzC,KAAL,IAAKyC,EAAKxC,kBAAoBwC,EAAKxC,0BAA0BN,GAAY,CACxE,OAAA+C,QAAAC,QAAO,MACR,CAEA,MAAMC,EAAmBH,EAAK5B,eAC9B,IAAK+B,EAAiB7B,aAAe6B,EAAiBT,UAAW,CAChE,OAAAO,QAAAC,QAAO,MACR,CAEA,MAAME,EAAuBD,EAAiBL,2BAC9C,IAAKM,EAAsB,CAC1B,OAAAH,QAAAC,QAAO,MACR,CAEA,GAAIE,EAAqBX,QAAQ,MAAQ,EAAG,CAC3C,MAAMY,EAAaD,EAAqBX,QAAQ,KAChD,MAAMa,EAAWF,EAAqBX,QAAQ,KAC9C,MAAMc,EAAWH,EAAqBT,UAAUU,EAAa,EAAGC,GAChE,IAAKC,EAAU,CACd,OAAAN,QAAAC,QAAO,MACR,CACD,KAAO,CACN,OAAAD,QAAAC,QAAO,MACR,CAEA,OAAAD,QAAAC,QAAO,KACR,CAAC,MAAAM,GAAA,OAAAP,QAAAQ,OAAAD,EAAA,EAKDE,iBACCtD,EAAgBY,SAAW,IAC5B,EACA,IAAA2C,EAAA,CAAAC,WAAA,MAAAD,EAAAxD,oBAAAwD,EAAAvD,kBAAA,OAAAuD,CAAA","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":73,"column":0},"map":{"version":3,"file":"Batch.js","names":["sap","ui","define","___utils_IntegrationCardManifestParser","___ApplicationInfo","getContentProperties","getHeaderProperties","ApplicationInfo","ODataModelVersion","updateManifestWithSelectQueryParams","cardManifest","headerSelectProperties","headerSelect","createUrlParameters","$select","headerSelectQuery","contentSelectProperties","contentSelect","contentSelectQuery","configParameters","configuration","parameters","_headerSelectQuery","value","_contentSelectQuery","updateManifestWithExpandQueryParams","headerProperties","headerExpand","$expand","headerExpandQuery","contentProperties","contentExpand","contentExpandQuery","_headerExpandQuery","_contentExpandQuery","queryParameters","odataModel","getInstance","fetchDetails","selectQuery","properties","join","expandQuery","V4","navigationProperties","forEach","navProp","selectQueryForNavigationProperty","length","name","V2","map","property","__exports","__esModule"],"sources":["Batch.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport { PropertyInfo } from \"../odata/ODataTypes\";\nimport { getContentProperties, getHeaderProperties } from \"../utils/IntegrationCardManifestParser\";\nimport { ApplicationInfo, ODataModelVersion } from \"./ApplicationInfo\";\nimport type { Property } from \"./CardGeneratorModel\";\n\nexport type QueryParameters = {\n\tproperties: string[];\n\tnavigationProperties: {\n\t\tname: string;\n\t\tproperties: string[];\n\t}[];\n};\n\nexport type RequestQueryNavigationProperties = {\n\tname: string;\n\tproperties: Property[];\n};\n\nexport type RequestQueryComplexProperties = {\n\tname: string;\n\tproperties: Property[];\n};\n\nexport type RequestQueryParameters = {\n\tproperties: PropertyInfo[];\n\tnavigationProperties: RequestQueryNavigationProperties[];\n\tcomplexProperties: RequestQueryComplexProperties[];\n};\n\nexport function updateManifestWithSelectQueryParams(cardManifest: CardManifest) {\n\tconst headerSelectProperties = getHeaderProperties(cardManifest);\n\tconst headerSelect = createUrlParameters(headerSelectProperties).$select;\n\tconst headerSelectQuery = headerSelect && \"$select=\" + headerSelect;\n\tconst contentSelectProperties = getContentProperties(cardManifest);\n\tconst contentSelect = createUrlParameters(contentSelectProperties).$select;\n\tconst contentSelectQuery = contentSelect && \"$select=\" + contentSelect;\n\tconst configParameters = cardManifest[\"sap.card\"].configuration?.parameters;\n\n\tif (!configParameters && cardManifest[\"sap.card\"].configuration) {\n\t\tcardManifest[\"sap.card\"].configuration.parameters = {\n\t\t\t_headerSelectQuery: {\n\t\t\t\tvalue: headerSelectQuery\n\t\t\t},\n\t\t\t_contentSelectQuery: {\n\t\t\t\tvalue: contentSelectQuery\n\t\t\t}\n\t\t};\n\t\treturn;\n\t}\n\n\tif (headerSelectQuery && configParameters) {\n\t\tconfigParameters._headerSelectQuery = {\n\t\t\tvalue: headerSelectQuery\n\t\t};\n\t}\n\tif (contentSelectQuery && configParameters) {\n\t\tconfigParameters._contentSelectQuery = {\n\t\t\tvalue: contentSelectQuery\n\t\t};\n\t}\n}\n\nexport function updateManifestWithExpandQueryParams(cardManifest: CardManifest) {\n\tconst headerProperties = getHeaderProperties(cardManifest);\n\tconst headerExpand = createUrlParameters(headerProperties).$expand;\n\tconst headerExpandQuery = headerExpand && \"&$expand=\" + headerExpand;\n\tconst contentProperties = getContentProperties(cardManifest);\n\tconst contentExpand = createUrlParameters(contentProperties).$expand;\n\tconst contentExpandQuery = contentExpand && \"&$expand=\" + contentExpand;\n\tconst configParameters = cardManifest[\"sap.card\"].configuration?.parameters;\n\n\tif (!configParameters && cardManifest[\"sap.card\"].configuration) {\n\t\tcardManifest[\"sap.card\"].configuration.parameters = {\n\t\t\t_headerExpandQuery: {\n\t\t\t\tvalue: headerExpandQuery\n\t\t\t},\n\t\t\t_contentExpandQuery: {\n\t\t\t\tvalue: contentExpandQuery\n\t\t\t}\n\t\t};\n\t\treturn;\n\t}\n\n\tif (headerExpandQuery && configParameters) {\n\t\tconfigParameters._headerExpandQuery = {\n\t\t\tvalue: headerExpandQuery\n\t\t};\n\t}\n\tif (contentExpandQuery && configParameters) {\n\t\tconfigParameters._contentExpandQuery = {\n\t\t\tvalue: contentExpandQuery\n\t\t};\n\t}\n}\n\n/*\n * Based on the odata model version(either v2 or v4) and the query parameters, this function creates the select and expand query parameters\n *\n * @param mParameters\n * @param odataModel\n * @returns\n */\nexport function createUrlParameters(queryParameters: QueryParameters) {\n\tconst { odataModel } = ApplicationInfo.getInstance().fetchDetails();\n\tlet selectQuery = queryParameters.properties.join(\",\");\n\tlet expandQuery = \"\";\n\n\tif (odataModel === ODataModelVersion.V4) {\n\t\tqueryParameters.navigationProperties.forEach((navProp) => {\n\t\t\tconst selectQueryForNavigationProperty = navProp.properties.join(\",\");\n\t\t\texpandQuery += expandQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += selectQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += `${navProp.name}`;\n\t\t\texpandQuery += selectQueryForNavigationProperty.length\n\t\t\t\t? `${navProp.name}($select=${selectQueryForNavigationProperty})`\n\t\t\t\t: `${navProp.name}`;\n\t\t});\n\t}\n\n\tif (odataModel === ODataModelVersion.V2) {\n\t\tqueryParameters.navigationProperties.forEach((navProp) => {\n\t\t\tselectQuery += selectQuery.length ? \",\" : \"\";\n\t\t\texpandQuery += expandQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += navProp.properties.length\n\t\t\t\t? navProp.properties.map((property) => `${navProp.name}/${property}`)\n\t\t\t\t: `${navProp.name}`;\n\t\t\texpandQuery += `${navProp.name}`;\n\t\t});\n\t}\n\n\treturn {\n\t\t$select: selectQuery,\n\t\t$expand: expandQuery\n\t};\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,wEAAAC,EAAAC,GAAA,mBAMSC,EAAoBF,EAAA,8BAAEG,EAAmBH,EAAA,6BACzCI,EAAeH,EAAA,yBAAEI,EAAiBJ,EAAA,qBA2BpC,SAASK,EAAoCC,GACnD,MAAMC,EAAyBL,EAAoBI,GACnD,MAAME,EAAeC,EAAoBF,GAAwBG,QACjE,MAAMC,EAAoBH,GAAgB,WAAaA,EACvD,MAAMI,EAA0BX,EAAqBK,GACrD,MAAMO,EAAgBJ,EAAoBG,GAAyBF,QACnE,MAAMI,EAAqBD,GAAiB,WAAaA,EACzD,MAAME,EAAmBT,EAAa,YAAYU,eAAeC,WAEjE,IAAKF,GAAoBT,EAAa,YAAYU,cAAe,CAChEV,EAAa,YAAYU,cAAcC,WAAa,CACnDC,mBAAoB,CACnBC,MAAOR,GAERS,oBAAqB,CACpBD,MAAOL,IAGT,MACD,CAEA,GAAIH,GAAqBI,EAAkB,CAC1CA,EAAiBG,mBAAqB,CACrCC,MAAOR,EAET,CACA,GAAIG,GAAsBC,EAAkB,CAC3CA,EAAiBK,oBAAsB,CACtCD,MAAOL,EAET,CACD,CAEO,SAASO,EAAoCf,GACnD,MAAMgB,EAAmBpB,EAAoBI,GAC7C,MAAMiB,EAAed,EAAoBa,GAAkBE,QAC3D,MAAMC,EAAoBF,GAAgB,YAAcA,EACxD,MAAMG,EAAoBzB,EAAqBK,GAC/C,MAAMqB,EAAgBlB,EAAoBiB,GAAmBF,QAC7D,MAAMI,EAAqBD,GAAiB,YAAcA,EAC1D,MAAMZ,EAAmBT,EAAa,YAAYU,eAAeC,WAEjE,IAAKF,GAAoBT,EAAa,YAAYU,cAAe,CAChEV,EAAa,YAAYU,cAAcC,WAAa,CACnDY,mBAAoB,CACnBV,MAAOM,GAERK,oBAAqB,CACpBX,MAAOS,IAGT,MACD,CAEA,GAAIH,GAAqBV,EAAkB,CAC1CA,EAAiBc,mBAAqB,CACrCV,MAAOM,EAET,CACA,GAAIG,GAAsBb,EAAkB,CAC3CA,EAAiBe,oBAAsB,CACtCX,MAAOS,EAET,CACD,CASO,SAASnB,EAAoBsB,GACnC,MAAMC,WAAEA,GAAe7B,EAAgB8B,cAAcC,eACrD,IAAIC,EAAcJ,EAAgBK,WAAWC,KAAK,KAClD,IAAIC,EAAc,GAElB,GAAIN,IAAe5B,EAAkBmC,GAAI,CACxCR,EAAgBS,qBAAqBC,QAASC,IAC7C,MAAMC,EAAmCD,EAAQN,WAAWC,KAAK,KACjEC,GAAeA,EAAYM,OAAS,IAAM,GAC1CT,GAAeA,EAAYS,OAAS,IAAM,GAC1CT,GAAe,GAAGO,EAAQG,OAC1BP,GAAeK,EAAiCC,OAC7C,GAAGF,EAAQG,gBAAgBF,KAC3B,GAAGD,EAAQG,QAEhB,CAEA,GAAIb,IAAe5B,EAAkB0C,GAAI,CACxCf,EAAgBS,qBAAqBC,QAASC,IAC7CP,GAAeA,EAAYS,OAAS,IAAM,GAC1CN,GAAeA,EAAYM,OAAS,IAAM,GAC1CT,GAAeO,EAAQN,WAAWQ,OAC/BF,EAAQN,WAAWW,IAAKC,GAAa,GAAGN,EAAQG,QAAQG,KACxD,GAAGN,EAAQG,OACdP,GAAe,GAAGI,EAAQG,QAE5B,CAEA,MAAO,CACNnC,QAASyB,EACTX,QAASc,EAEX,CAAC,IAAAW,EAAA,CAAAC,WAAA,MAAAD,EAAA5C,sCAAA4C,EAAA5B,sCAAA4B,EAAAxC,sBAAA,OAAAwC,CAAA","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":80,"column":0},"map":{"version":3,"file":"CardGeneratorModel.js","names":["sap","ui","define","sap_cards_ap_common_services_RetrieveCard","CoreLib","JSONModel","___odata_ODataUtils","___ApplicationInfo","___FooterActions","___Formatter","___IntegrationCardHelper","___NavigationProperty","___PropertyExpression","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","getCardActionInfo","oAppComponent","data","resourceModel","mCardManifest","_temp2","_getDefaultAction","annotationActions","cardActions","addedActions","bODataV4","styles","getActionStyles","isAddActionEnabled","actionExists","odataModel","entitySet","ApplicationInfo","getInstance","fetchDetails","ODataModelVersion","V4","getCardActions","_temp","Promise","resolve","getDefaultAction","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","getKeyParameters","createPathWithEntityContext","fetchDataAsync","getLabelForEntitySet","getNavigationPropertyInfoFromEntity","getPropertyInfoFromEntity","formatPropertyDropdownValues","getDefaultPropertyFormatterConfig","getDefaultPropertyFormatterConfigForNavProperties","parseCard","getNavigationPropertiesWithLabel","resolvePropertyPathFromExpression","UnitCollection","Name","Value","_mergePropertyFormatters","defaultPropertyFormatters","arguments","undefined","userProvidedPropertyFormatters","mergedFormatters","propertyFormatter","find","formatter","property","updateUnitOfMeasures","unitOfMeasures","formatterConfigsWithUnit","forEach","matchingProperty","unitConfig","name","parameters","replace","formatterProperty","propertyKeyForDescription","propertyKeyForId","getCardGeneratorDialogModel","applicationInfo","oResourceBundle","getResourceBundleFor","mManifest","getManifest","oAppModel","getModel","cardTitle","title","cardSubtitle","description","entitySetWithObjectContext","serviceUrl","semanticObject","action","entitySetName","properties","propertiesWithNavigation","navigationProperty","selectProperties","map","urlParameters","$select","join","path","_temp16","propertyValueFormatters","parsedManifest","formatterConfigurationFromCardManifest","addLabelsForProperties","mData","mainIndicatorOptions","mainIndicatorCriticalityOptions","criticalityOptions","selectedKeyCriticality","criticality","mainIndicatorStatusKey","trends","trendOptions","sideIndicators","sideIndicatorOptions","mainIndicatorNavigationSelectedKey","navigationValue","selectedNavigationalProperties","_ref","propertiesWithLabel","navigationPropertyData","selectedNavigationPropertyHeader","updateNavigationPropertiesWithLabel","mainIndicatorNavigationSelectedValue","labelWithValue","filter","formatterConfig","formatterName","advancedFormattingOptions","textArrangements","textArrangementsFromCardManifest","sourceCriticalityProperty","targetFormatterProperty","sourceUoMProperty","textArrangementSourceProperty","isPropertyFormattingEnabled","mainIndicatorStatusUnit","_temp14","_temp13","groups","getText","items","label","isEnabled","isNavigationEnabled","_temp12","_temp11","headerUOM","_temp10","subtitle","_temp9","_getCardActionInfo","_getKeyParameters","dialogModelData","configuration","indicatorsValue","selectedTrendOptions","selectedIndicatorOptions","selectedContentNavigation","selectedHeaderNavigation","oDataV4","$data","targetUnit","deviationUnit","errorControls","actions","groupLimitReached","keyParameters","appIntent","dialogModel","propertyValueFormattersForNavigationalProperties","_temp15","_temp8","group","item","propertyPath","_temp6","includes","navigationEntitySet","split","_ref2","navigationalProperties","_temp7","textArrangement","_temp5","_temp3","isNavigationForId","_ref3","navigationalPropertiesForId","_temp4","isNavigationForDescription","_ref4","navigationalPropertiesForDescription","propertyExists","uomProperty","UOM","category","navigationProperties","navigationEntityName","__exports","__esModule"],"sources":["CardGeneratorModel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getKeyParameters } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport Component from \"sap/ui/core/Component\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport {\n\tcreatePathWithEntityContext,\n\tfetchDataAsync,\n\tgetLabelForEntitySet,\n\tgetNavigationPropertyInfoFromEntity,\n\tgetPropertyInfoFromEntity\n} from \"../odata/ODataUtils\";\nimport { ActionStyles, AnnotationAction, ControlProperties } from \"../types/ActionTypes\";\nimport { ApplicationInfo, ODataModelVersion } from \"./ApplicationInfo\";\nimport { getActionStyles, getCardActions, getDefaultAction } from \"./FooterActions\";\nimport {\n\tFormatterConfiguration,\n\tFormatterConfigurationMap,\n\tformatPropertyDropdownValues,\n\tgetDefaultPropertyFormatterConfig,\n\tgetDefaultPropertyFormatterConfigForNavProperties\n} from \"./Formatter\";\nimport { parseCard } from \"./IntegrationCardHelper\";\nimport { getNavigationPropertiesWithLabel } from \"./NavigationProperty\";\nimport { resolvePropertyPathFromExpression } from \"./PropertyExpression\";\n\nexport type GroupItem = {\n\tlabel: string;\n\tvalue: string;\n\tisEnabled: boolean;\n\tname: string;\n\tnavigationProperty?: string;\n\tisNavigationEnabled?: boolean;\n\tnavigationalProperties?: Array<string>;\n};\n\nexport type EntityType = {\n\t[key: string]: any;\n};\nexport type Property = {\n\tlabel?: string;\n\ttype: string;\n\tname: string;\n};\nexport type NavigationParameter = {\n\tname: string;\n\tvalue: Array<string>;\n\tproperties?: Property[];\n};\nexport type NavigationalData = {\n\tname: string;\n\tvalue: Property[];\n};\nexport type NavigationParameters = {\n\tparameters: NavigationParameter[];\n};\n\nexport type ObjectCardGroups = {\n\ttitle: string;\n\titems: Array<GroupItem>;\n};\n\nexport type CriticalityOptions = {\n\tactiveCalculation: boolean;\n\tname: string;\n\tcriticality: string;\n};\n\nexport type MainIndicatorOptions = {\n\tcriticality: Array<CriticalityOptions>;\n};\n\ntype UnitOfMeasures = {\n\tpropertyKeyForDescription: string;\n\tname: string;\n\tpropertyKeyForId: string;\n\tvalue: string;\n};\n\ntype AdvancedFormattingOptions = {\n\tunitOfMeasures: Array<UnitOfMeasures>;\n\ttextArrangements: Array<ArrangementOptions>;\n\tpropertyValueFormatters: Array<object>;\n\tsourceCriticalityProperty: Array<object>;\n\ttargetFormatterProperty: string;\n\tsourceUoMProperty: string;\n\tselectedKeyCriticality: string;\n\ttextArrangementSourceProperty: string;\n\tisPropertyFormattingEnabled?: boolean;\n};\n\nexport type TrendOptions = {\n\treferenceValue: string;\n\tdownDifference: string;\n\tupDifference: string;\n\ttargetValue?: string;\n\tsourceProperty?: string;\n};\nexport type SideIndicatorOptions = {\n\ttargetValue: string;\n\ttargetUnit: string;\n\tdeviationValue: string;\n\tdeviationUnit: string;\n\tsourceProperty?: string;\n};\n\ntype CardActions = {\n\tannotationActions: Array<AnnotationAction>;\n\taddedActions: ControlProperties[];\n\tbODataV4: boolean;\n\tstyles: ActionStyles[];\n\tisAddActionEnabled: boolean;\n\tactionExists: boolean;\n};\n\ntype PropertyValue = string | null | undefined;\n\nexport type TrendOrIndicatorOptions = {\n\tsourceProperty: string;\n};\n\ntype KeyParameter = {\n\tkey: string;\n\tformattedValue: string;\n};\n\n/**\n * Description for the interface CardGeneratorDialogConfiguration\n * @interface CardGeneratorDialogConfiguration\n * @property {string} title The title of the card\n * @property {string} subtitle The subtitle of the card\n * @property {string} headerUOM The header unit of measure\n * @property {MainIndicatorOptions} mainIndicatorOptions The main indicator options\n * @property {string} mainIndicatorStatusKey The main indicator status key\n * @property {string} mainIndicatorStatusUnit The main indicator status unit\n * @property {string} entitySet The entity set\n * @property {Array<ObjectCardGroups>} groups The groups of the card displayed on content\n * @property {Array<object>} properties The properties\n * @property {AdvancedFormattingOptions} advancedFormattingOptions The advanced formatting options\n * @property {Array<object>} selectedTrendOptions The selected trend options\n * @property {Array<object>} selectedIndicatorOptions The selected indicator options\n * @property {TrendOptions} trendOptions The trend options\n * @property {object} $data Data used for adaptive card preview\n * @property {object} targetUnit The target unit\n * @property {object} deviationUnit The deviation unit\n * @property {boolean} groupLimitReached Flag maintained to check if the group limit is reached\n * @property {Array<KeyParameter>} keyParameters The key parameters\n */\ninterface CardGeneratorDialogConfiguration {\n\ttitle: string;\n\tsubtitle?: string;\n\theaderUOM?: string;\n\tmainIndicatorOptions?: MainIndicatorOptions;\n\tmainIndicatorStatusKey?: string;\n\tmainIndicatorStatusUnit?: string;\n\tmainIndicatorNavigationSelectedValue?: string;\n\tmainIndicatorNavigationSelectedKey?: string;\n\tentitySet: string;\n\tgroups: Array<ObjectCardGroups>;\n\tproperties: Array<object>;\n\tadvancedFormattingOptions: AdvancedFormattingOptions;\n\tselectedTrendOptions: Array<TrendOptions>;\n\tselectedIndicatorOptions: Array<SideIndicatorOptions>;\n\tnavigationProperty: Array<object>;\n\tselectedContentNavigation: Array<NavigationParameter>;\n\tselectedHeaderNavigation: Array<NavigationParameter>;\n\tselectedNavigationPropertyHeader: NavigationParameter;\n\ttrendOptions: TrendOptions;\n\toDataV4: boolean;\n\tserviceUrl: string;\n\t$data?: object;\n\ttargetUnit?: object;\n\tdeviationUnit?: object;\n\tactions: CardActions;\n\tgroupLimitReached: boolean;\n\tkeyParameters: Array<KeyParameter>;\n}\n\ninterface CardGeneratorDialog {\n\ttitle: string;\n\tconfiguration: CardGeneratorDialogConfiguration;\n}\n\nconst UnitCollection = [\n\t{\n\t\tName: \"K\",\n\t\tValue: \"K\"\n\t},\n\t{\n\t\tName: \"%\",\n\t\tValue: \"%\"\n\t}\n];\n\n/**\n * Merges the default property formatters with the user provided property formatters\n *\n * @param {FormatterConfigurationMap} defaultPropertyFormatters The default property formatters\n * @param {FormatterConfigurationMap} userProvidedPropertyFormatters The user provided property formatters\n * @returns {FormatterConfigurationMap} The merged property formatters\n * @private\n *\n */\nexport function _mergePropertyFormatters(\n\tdefaultPropertyFormatters: FormatterConfigurationMap = [],\n\tuserProvidedPropertyFormatters: FormatterConfigurationMap = []\n): FormatterConfigurationMap {\n\tconst mergedFormatters = [...userProvidedPropertyFormatters] as FormatterConfigurationMap;\n\n\tfor (const propertyFormatter of defaultPropertyFormatters) {\n\t\tif (!mergedFormatters.find((formatter) => formatter.property === propertyFormatter.property)) {\n\t\t\tmergedFormatters.push({ ...propertyFormatter });\n\t\t}\n\t}\n\n\treturn mergedFormatters;\n}\n\nexport async function getCardActionInfo(\n\toAppComponent: Component,\n\tdata: Record<string, PropertyValue>,\n\tresourceModel?: ResourceModel,\n\tmCardManifest?: CardManifest\n) {\n\tconst { odataModel, entitySet } = ApplicationInfo.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst cardActions = getCardActions(oAppComponent, entitySet, bODataV4);\n\treturn {\n\t\tannotationActions: cardActions,\n\t\taddedActions: cardActions.length > 0 ? await getDefaultAction(resourceModel, data, mCardManifest) : [],\n\t\tbODataV4: bODataV4,\n\t\tstyles: getActionStyles(),\n\t\tisAddActionEnabled: true,\n\t\tactionExists: cardActions.length > 0\n\t};\n}\n\nexport function updateUnitOfMeasures(\n\tunitOfMeasures: Array<UnitOfMeasures>,\n\tformatterConfigsWithUnit: FormatterConfigurationMap\n): Array<UnitOfMeasures> {\n\tformatterConfigsWithUnit.forEach((formatter: FormatterConfiguration) => {\n\t\tconst matchingProperty = unitOfMeasures.find((unitConfig: UnitOfMeasures) => unitConfig.name === formatter.property);\n\t\tlet value = formatter.parameters?.[0].value?.replace(/\\$\\{/g, \"\");\n\t\tvalue = value?.replace(/\\}/g, \"\");\n\t\tconst formatterProperty = formatter.property;\n\n\t\tif (matchingProperty && value) {\n\t\t\tmatchingProperty.propertyKeyForDescription = value;\n\t\t\tmatchingProperty.value = value;\n\t\t} else if (value && formatterProperty) {\n\t\t\tunitOfMeasures.push({\n\t\t\t\tpropertyKeyForDescription: value,\n\t\t\t\tname: formatterProperty,\n\t\t\t\tpropertyKeyForId: formatterProperty,\n\t\t\t\tvalue: value\n\t\t\t});\n\t\t}\n\t});\n\treturn unitOfMeasures;\n}\n\nexport const getCardGeneratorDialogModel = async (oAppComponent: Component, mCardManifest?: CardManifest) => {\n\tconst applicationInfo = ApplicationInfo.getInstance().fetchDetails();\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst mManifest = oAppComponent.getManifest();\n\tconst oAppModel = oAppComponent.getModel();\n\tconst cardTitle: string = mManifest[\"sap.app\"].title;\n\tconst cardSubtitle: string = mManifest[\"sap.app\"].description;\n\tconst { entitySetWithObjectContext, serviceUrl, semanticObject, action } = applicationInfo;\n\tconst entitySetName = applicationInfo.entitySet;\n\tconst bODataV4 = applicationInfo.odataModel === ODataModelVersion.V4;\n\tconst entitySet = getLabelForEntitySet(bODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel), entitySetName);\n\tconst properties = getPropertyInfoFromEntity(\n\t\tbODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel),\n\t\tentitySetName,\n\t\tfalse\n\t);\n\tconst propertiesWithNavigation = getPropertyInfoFromEntity(\n\t\tbODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel),\n\t\tentitySetName,\n\t\ttrue,\n\t\toResourceBundle\n\t);\n\tconst navigationProperty = getNavigationPropertyInfoFromEntity(\n\t\tbODataV4 ? (oAppModel as V4ODataModel) : (oAppModel as V2ODataModel),\n\t\tentitySetName\n\t);\n\n\tconst selectProperties = properties.map((property) => property.name);\n\tlet urlParameters = {};\n\tif (selectProperties.length) {\n\t\turlParameters = {\n\t\t\t$select: selectProperties.join(\",\")\n\t\t};\n\t}\n\n\tconst path = await createPathWithEntityContext(entitySetWithObjectContext, oAppModel, bODataV4);\n\tconst data = await fetchDataAsync(serviceUrl, path, bODataV4, urlParameters);\n\tconst unitOfMeasures: Array<UnitOfMeasures> = [];\n\tconst mData: {\n\t\t[key: string]: PropertyValue;\n\t} = {};\n\t// We are adding labels and values for properties\n\taddLabelsForProperties(properties, data, mData, unitOfMeasures);\n\n\tlet propertyValueFormatters = getDefaultPropertyFormatterConfig(oResourceBundle, properties);\n\tconst propertyValueFormattersForNavigationalProperties = getDefaultPropertyFormatterConfigForNavProperties(oResourceBundle, navigationProperty);\n\tpropertyValueFormatters = _mergePropertyFormatters(propertyValueFormatters, propertyValueFormattersForNavigationalProperties);\n\n\tlet parsedManifest;\n\tif (mCardManifest) {\n\t\tparsedManifest = parseCard(mCardManifest, oAppComponent.getModel(\"i18n\") as ResourceModel, properties);\n\n\t\tfor (const textArrangement of parsedManifest.textArrangementsFromCardManifest) {\n\t\t\tif (textArrangement.isNavigationForDescription) {\n\t\t\t\tconst navigationEntitySet = textArrangement.propertyKeyForDescription;\n\t\t\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\toAppComponent,\n\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\tpath\n\t\t\t\t);\n\t\t\t\ttextArrangement.navigationalPropertiesForDescription = propertiesWithLabel;\n\t\t\t\tupdateNavigationPropertiesWithLabel(\n\t\t\t\t\tnavigationProperty,\n\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\ttextArrangement.navigationalPropertiesForDescription\n\t\t\t\t);\n\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (textArrangement.isNavigationForId) {\n\t\t\t\tconst navigationEntitySet = textArrangement.propertyKeyForId as string;\n\t\t\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\toAppComponent,\n\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\tpath\n\t\t\t\t);\n\t\t\t\ttextArrangement.navigationalPropertiesForId = propertiesWithLabel;\n\t\t\t\tupdateNavigationPropertiesWithLabel(navigationProperty, navigationEntitySet, textArrangement.navigationalPropertiesForId);\n\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const group of parsedManifest.groups) {\n\t\t\tfor (const item of group.items) {\n\t\t\t\tconst propertyPath = resolvePropertyPathFromExpression(item.value, mCardManifest);\n\t\t\t\tif (propertyPath?.includes(\"/\")) {\n\t\t\t\t\tconst [navigationEntitySet, property] = propertyPath.replace(/[{}]/g, \"\").split(\"/\");\n\t\t\t\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\t\toAppComponent,\n\t\t\t\t\t\tnavigationEntitySet,\n\t\t\t\t\t\tpath\n\t\t\t\t\t);\n\t\t\t\t\titem.navigationalProperties = propertiesWithLabel;\n\t\t\t\t\titem.isNavigationEnabled = true;\n\t\t\t\t\titem.isEnabled = false;\n\t\t\t\t\titem.navigationProperty = property;\n\t\t\t\t\tupdateNavigationPropertiesWithLabel(navigationProperty, navigationEntitySet, item.navigationalProperties);\n\n\t\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpropertyValueFormatters = _mergePropertyFormatters(propertyValueFormatters, parsedManifest?.formatterConfigurationFromCardManifest);\n\taddLabelsForProperties(propertiesWithNavigation, data, mData, unitOfMeasures);\n\n\tconst mainIndicatorOptions = parsedManifest?.mainIndicatorOptions;\n\tconst mainIndicatorCriticalityOptions = mainIndicatorOptions?.criticalityOptions || [];\n\tconst selectedKeyCriticality = mainIndicatorCriticalityOptions.length ? mainIndicatorCriticalityOptions[0].criticality : \"\";\n\tconst mainIndicatorStatusKey = parsedManifest?.mainIndicatorOptions.mainIndicatorStatusKey || \"\";\n\tconst trends = parsedManifest?.mainIndicatorOptions.trendOptions;\n\tconst sideIndicators = parsedManifest?.sideIndicatorOptions;\n\n\tconst mainIndicatorNavigationSelectedKey = parsedManifest?.mainIndicatorOptions.mainIndicatorNavigationSelectedKey || \"\";\n\tconst navigationValue = parsedManifest?.mainIndicatorOptions.navigationValue || \"\";\n\tconst selectedNavigationalProperties = [];\n\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\toAppComponent,\n\t\tmainIndicatorStatusKey,\n\t\tpath\n\t);\n\tconst selectedNavigationPropertyHeader = {\n\t\tname: mainIndicatorStatusKey,\n\t\tvalue: propertiesWithLabel\n\t};\n\tupdateNavigationPropertiesWithLabel(navigationProperty, mainIndicatorStatusKey, selectedNavigationPropertyHeader.value);\n\n\tif (mainIndicatorStatusKey.length > 0 && (mData[mainIndicatorStatusKey] === null || mData[mainIndicatorStatusKey] === undefined)) {\n\t\tmData[mainIndicatorStatusKey] = navigationPropertyData[mainIndicatorStatusKey];\n\t}\n\n\tif (selectedNavigationPropertyHeader.name) {\n\t\tselectedNavigationalProperties.push(selectedNavigationPropertyHeader);\n\t}\n\n\tconst mainIndicatorNavigationSelectedValue =\n\t\tselectedNavigationPropertyHeader.value.find((value) => value.name === mainIndicatorNavigationSelectedKey)?.labelWithValue || \"\";\n\n\tconst formatterConfigsWithUnit =\n\t\tparsedManifest?.formatterConfigurationFromCardManifest.filter(\n\t\t\t(formatterConfig) => formatterConfig.formatterName === \"format.unit\"\n\t\t) || [];\n\n\tconst advancedFormattingOptions: AdvancedFormattingOptions = {\n\t\tunitOfMeasures:\n\t\t\tformatterConfigsWithUnit.length > 0 ? updateUnitOfMeasures(unitOfMeasures, formatterConfigsWithUnit) : unitOfMeasures,\n\t\ttextArrangements: parsedManifest?.textArrangementsFromCardManifest || [],\n\t\tpropertyValueFormatters: propertyValueFormatters,\n\t\tsourceCriticalityProperty: [],\n\t\ttargetFormatterProperty: \"\",\n\t\tsourceUoMProperty: mainIndicatorOptions?.mainIndicatorStatusKey || \"\",\n\t\tselectedKeyCriticality: selectedKeyCriticality,\n\t\ttextArrangementSourceProperty: mainIndicatorStatusKey,\n\t\tisPropertyFormattingEnabled: !!(mainIndicatorStatusKey && mainIndicatorNavigationSelectedKey === \"\")\n\t};\n\tconst mainIndicatorStatusUnit =\n\t\t(mainIndicatorStatusKey && propertiesWithNavigation.find((property) => property.name === mainIndicatorStatusKey)?.labelWithValue) ||\n\t\t\"\";\n\tconst dialogModelData: CardGeneratorDialog = {\n\t\ttitle: `${entitySet}`,\n\t\tconfiguration: {\n\t\t\ttitle: parsedManifest?.title || cardTitle,\n\t\t\tsubtitle: parsedManifest?.subtitle || cardSubtitle,\n\t\t\theaderUOM: parsedManifest?.headerUOM || \"\",\n\t\t\tmainIndicatorOptions: {\n\t\t\t\tcriticality: mainIndicatorCriticalityOptions\n\t\t\t},\n\t\t\tadvancedFormattingOptions: advancedFormattingOptions,\n\t\t\ttrendOptions: trends as TrendOptions,\n\t\t\tindicatorsValue: sideIndicators,\n\t\t\tselectedTrendOptions: trends ? [trends] : [],\n\t\t\tselectedIndicatorOptions: sideIndicators ? [sideIndicators] : [],\n\t\t\tselectedNavigationPropertyHeader,\n\t\t\tselectedContentNavigation: [],\n\t\t\tselectedHeaderNavigation: [],\n\t\t\tnavigationProperty,\n\t\t\tmainIndicatorNavigationSelectedValue,\n\t\t\tmainIndicatorStatusKey,\n\t\t\tnavigationValue,\n\t\t\tmainIndicatorNavigationSelectedKey,\n\t\t\tmainIndicatorStatusUnit,\n\t\t\tselectedNavigationalProperties,\n\t\t\tentitySet: entitySet,\n\t\t\toDataV4: bODataV4,\n\t\t\tserviceUrl: serviceUrl,\n\t\t\tproperties: properties,\n\t\t\tpropertiesWithNavigation: propertiesWithNavigation,\n\t\t\tgroups: parsedManifest?.groups || [\n\t\t\t\t{\n\t\t\t\t\ttitle: oResourceBundle?.getText(\"GENERATOR_DEFAULT_GROUP_NAME\", [1]),\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\t\tisEnabled: false,\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tnavigationProperty: \"\",\n\t\t\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t$data: mData,\n\t\t\ttargetUnit: UnitCollection,\n\t\t\tdeviationUnit: UnitCollection,\n\t\t\terrorControls: [],\n\t\t\tactions: await getCardActionInfo(oAppComponent, mData, oAppComponent.getModel(\"i18n\") as ResourceModel, mCardManifest),\n\t\t\tgroupLimitReached: false,\n\t\t\tkeyParameters: await getKeyParameters(oAppComponent),\n\t\t\tappIntent: `${semanticObject}-${action}`\n\t\t}\n\t};\n\n\tconst dialogModel = new JSONModel(dialogModelData);\n\treturn dialogModel;\n};\n\nexport function addLabelsForProperties(\n\tproperties: PropertyInfoMap,\n\tdata: Record<string, unknown>,\n\tmData: {\n\t\t[key: string]: PropertyValue;\n\t},\n\tunitOfMeasures: Array<object>\n) {\n\tproperties.forEach((property) => {\n\t\tif (property.name && data[property.name] !== undefined && data[property.name] !== null) {\n\t\t\tconst value = formatPropertyDropdownValues(property, data[property.name] as string);\n\t\t\tproperty.value = data[property.name] as string;\n\t\t\tproperty.labelWithValue = value;\n\t\t\tconst propertyExists = unitOfMeasures.find((uomProperty) => uomProperty.name === property.name);\n\n\t\t\tif (property.UOM && property.name && !propertyExists) {\n\t\t\t\tunitOfMeasures.push({\n\t\t\t\t\tpropertyKeyForDescription: property.UOM,\n\t\t\t\t\tname: property.name,\n\t\t\t\t\tpropertyKeyForId: property.name,\n\t\t\t\t\tvalue: property.UOM\n\t\t\t\t});\n\t\t\t}\n\t\t\tmData[property.name] = data[property.name] as string;\n\t\t} else {\n\t\t\tproperty.labelWithValue = property.category ? `${property.label}` : `${property.label} (<empty>)`;\n\t\t}\n\t});\n}\n\nfunction updateNavigationPropertiesWithLabel(\n\tnavigationProperties: NavigationParameter[],\n\tnavigationEntityName: string,\n\tpropertiesWithLabel: Property[]\n) {\n\tconst navigationProperty = navigationProperties.find((property) => property.name === navigationEntityName);\n\tif (!navigationProperty) {\n\t\treturn;\n\t}\n\n\tnavigationProperty.properties = [...propertiesWithLabel];\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":87,"column":0},"map":{"version":3,"file":"FooterActions.js","names":["sap","ui","define","Log","sap_m_library","CoreLib","___helpers_ApplicationInfo","___helpers_I18nHelper","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","addActionToCardManifest","manifest","controlProperties","context","bODataV4","dialog","getModel","getProperty","metaModel","appModel","getMetaModel","Promise","resolve","getAdaptiveCardAction","actionInfo","addActionToCardFooter","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","ButtonType","ApplicationInfo","ODataModelVersion","resolveI18nTextFromResourceModel","formActionInfoFromDataField","dataField","entitySetName","metadataAnnotationInfo","isConfirmationRequired","enablePath","getMetadataAnnotationInfoV4","getMetadataAnnotationInfoV2","label","Label","String","action","Action","split","getButtonTypeForCard","actionStyle","Accept","Reject","Default","addActionInfoToConfigParameters","configuration","parameters","footerActionParameters","_adaptiveFooterActionParameters","cardConfiguration","configParams","titleKey","removeActionInfoFromConfigParams","updateAdaptiveCardInfo","adaptiveCardStyle","adaptiveCardActionInfo","style","cardFooter","footer","actionsStrip","actionLength","type","visible","text","buttonType","actions","enabled","getActionStyles","actionStyles","name","labelWithValue","getActionFromDataField","dataFields","dataFieldForAnnotation","filter","dataFieldType","$Type","RecordType","map","updateActionParameterData","actionParameters","data","resourceBundle","actionParameter","errorMessage","placeholder","actionParameterConfig","valueHelpEntitySet","entitySet","_temp","updateModelData","serviceUrl","getActionsFromManifest","cardManifest","_exit","_temp7","_result","title","enablePathKey","isStyleControlEnabled","_temp6","_temp5","aKeys","Object","keys","_temp4","key","_temp3","triggerActionText","_temp2","getDefaultAction","resourceModel","mCardManifest","_exit2","_temp9","_result2","_temp8","_await$getActionsFrom","getCardActions","appComponent","getObject","getODataEntitySet","entityTypeName","entityType","getODataEntityType","identificationPath","entityTypeAnnotation","entityTypeKeys","identificationAnnotation","removeActionFromManifest","relatedAction","cardParameters","resetCardActions","updateCardManifestAction","forEach","isEnabledExpression","getActionStyle","getActionParameters","oResourceBundle","getResourceBundleFor","_temp12","parameter","_temp11","actionParamInfoToAdd","EnumMember","isRequired","nullable","id","getText","_temp10","getActionParameterConfigurationV2","functionImportInfo","enabledPathKey","verb","getActionParams","_getActionParams","getActionVerb","getFunctionImportInfo","mActionParams","parameterData","additionalParameters","_getActionParameters","actionParams","getRelatedBoundAction","actionValue","actionType","isBoundAction","$IsBound","$Parameter","some","actionParam","getRelatedUnboundActions","getValueHelpInfo","contextPath","actionParamName","requestValueListInfo","valueListInfo","valueListAnnotationInfo","valueListModel","$model","valueListPropertyName","getValueListPropertyName","valueHelpAnnotation","valueListModelServiceUrl","getServiceUrl","getActionParameterName","actionVerb","_exit3","_temp15","_result3","actionParameterAnnotation","_temp14","_ref","_temp13","oValueList","sPropertyName","oValueListParameter","Parameters","find","oParameter","LocalDataProperty","$PropertyPath","ValueListProperty","getActionParameterValue","propertyPath","descriptionPath","textArrangementType","fetch","valueHelpData","odataModel","getInstance","fetchDetails","V4","_temp16","json","valueHelpDataJson","valueHelpDataValue","d","results","getActionParameterConfiguration","oDialogModel","actionParamAnnotations","_ref2","textArrangementPath","$Path","textArrangementAnnotation","actionParameterValue","$EnumMember","setProperty","getActionParameterInfo","_exit4","actionParamInfo","actionIndex","_temp18","isActionRequired","_temp17","$Nullable","_actionParam$$Name","$Name","_getActionParameterNa","_getActionParameterCo","getEnabledValueFromAnnotation","actionAnnotation","operationAvailable","Bool","getCriticalValueFromAnnotation","oCriticalAnnotation","undefined","oParameterValue","oActionValue","toLowerCase","dataFieldAction","indexOf","functionName","functionImport","getODataFunctionImport","replace","$kind","$Action","unBoundActions","relatedUnboundAction","relatedBoundAction","oContextObject","mKeyProperties","getPropertyKeys","oSkipProperties","importParameter","addParameterLabel","parameterName","isKey","parameterValue","hasOwnProperty","error","Error","skip","mode","toUpperCase","oKeyMap","propertyRef","property","getODataProperty","getParameterConfigFromValueList","serviceUrlPrefix","valueListParameters","selectProps","valueListPropertyPath","valueListParameter","valueListProperty","join","ValueListAnnotation","CollectionPath","sServiceUrl","__exports","__esModule"],"sources":["FooterActions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { ButtonType } from \"sap/m/library\";\nimport type UIComponent from \"sap/ui/core/Component\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport type {\n\tActionParameterConfiguration,\n\tAdaptiveCardAction,\n\tAdaptiveCardActionParameter,\n\tCardManifest,\n\tData\n} from \"sap/ui/integration/widgets/Card\";\nimport V2ODataMetaModel from \"sap/ui/model/odata/ODataMetaModel\";\nimport type { EntitySet } from \"sap/ui/model/odata/ODataMetaModel/EntitySet\";\nimport type { EntityType } from \"sap/ui/model/odata/ODataMetaModel/EntityType\";\nimport type { FunctionImport } from \"sap/ui/model/odata/ODataMetaModel/FunctionImport\";\nimport type { FunctionImportParameter } from \"sap/ui/model/odata/ODataMetaModel/FunctionImportParameter\";\nimport type { Property } from \"sap/ui/model/odata/ODataMetaModel/Property\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ApplicationInfo, ODataModelVersion } from \"../helpers/ApplicationInfo\";\nimport { resolveI18nTextFromResourceModel } from \"../helpers/I18nHelper\";\nimport type { ActionAnnotation, ActionStyles, AnnotationAction, ControlProperties, CriticalAction } from \"../types/ActionTypes\";\n\ntype ActionParameter = {\n\t$Type?: string;\n\t$Nullable?: boolean;\n\t$Name: string;\n};\n\ntype Action = {\n\t$IsBound: boolean;\n\t$Parameter?: Array<ActionParameter>;\n\t$Action?: string;\n};\n\ntype DataFieldString = {\n\tString: string;\n};\n\ntype DataFieldV4 = {\n\t$Type: string;\n\tRecordType: string;\n\tLabel: string;\n\tAction: string;\n};\n\ntype DataField = {\n\t$Type: string;\n\tRecordType: string;\n\tLabel: DataFieldString;\n\tAction: DataFieldString;\n};\n\ntype EntityTypeAnnotation = {\n\t[key: string]: Array<DataField>;\n};\n\ntype ParametersInfoV2 = {\n\tparameterData: {\n\t\t[key: string]: Array<object>;\n\t};\n\tadditionalParameters: Array<FunctionImportParameter>;\n};\n\ntype KeyMap = {\n\t[key: string]: boolean;\n};\n\ntype SkipProperty = {\n\t[key: string]: string;\n};\n\ntype ValueListAnnotationInfo = {\n\t$model: V4ODataModel;\n\t[\"CollectionPath\"]: string;\n\tParameters: Array<any>;\n};\n\ntype PropertyValue = string | null | undefined;\n\ninterface ValueListParameter {\n\tLocalDataProperty: {\n\t\t$PropertyPath: string;\n\t};\n\tValueListProperty: {\n\t\tString: string;\n\t};\n\tRecordType: string;\n}\n\n/**\n * Forms the action info from the data field\n * @param dataField The data field\n * @param bODataV4 The OData version\n * @returns Action info\n */\nfunction formActionInfoFromDataField(\n\tdataField: DataField,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel,\n\tentitySetName: string\n) {\n\tlet metadataAnnotationInfo = {\n\t\tisConfirmationRequired: false,\n\t\tenablePath: \"\"\n\t};\n\n\tif (bODataV4) {\n\t\tmetadataAnnotationInfo = getMetadataAnnotationInfoV4(\n\t\t\tdataField as unknown as DataFieldV4,\n\t\t\tmetaModel as V4ODataMetaModel,\n\t\t\tentitySetName\n\t\t);\n\t} else {\n\t\tmetadataAnnotationInfo = getMetadataAnnotationInfoV2(dataField as unknown as DataField, metaModel as V2ODataMetaModel);\n\t}\n\n\treturn {\n\t\tlabel: bODataV4 ? dataField.Label : dataField.Label.String,\n\t\taction: bODataV4 ? dataField.Action : dataField.Action.String.split(\"/\")[1],\n\t\tisConfirmationRequired: metadataAnnotationInfo.isConfirmationRequired || false,\n\t\tenablePath: metadataAnnotationInfo.enablePath\n\t};\n}\n\n/**\n * Gets the button type for the card\n * @param actionStyle The action style\n * @returns The button type\n */\n\nfunction getButtonTypeForCard(actionStyle: string | undefined) {\n\tif (actionStyle === \"Positive\") {\n\t\treturn ButtonType.Accept;\n\t}\n\tif (actionStyle === \"Negative\") {\n\t\treturn ButtonType.Reject;\n\t}\n\treturn ButtonType.Default;\n}\n\n/**\n *\n * Adds action information to integration card configuration parameters\n *\n * @param manifest\n * @param actionInfo\n * @param controlProperties\n */\nfunction addActionInfoToConfigParameters(manifest: CardManifest, actionInfo: AdaptiveCardAction, controlProperties: ControlProperties) {\n\tif (!manifest[\"sap.card\"].configuration) {\n\t\tmanifest[\"sap.card\"].configuration = {\n\t\t\tparameters: {\n\t\t\t\tfooterActionParameters: {},\n\t\t\t\t_adaptiveFooterActionParameters: {}\n\t\t\t}\n\t\t};\n\t} else if (manifest[\"sap.card\"].configuration && !manifest[\"sap.card\"].configuration.parameters) {\n\t\tmanifest[\"sap.card\"].configuration.parameters = {\n\t\t\tfooterActionParameters: {},\n\t\t\t_adaptiveFooterActionParameters: {}\n\t\t};\n\t}\n\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration.parameters;\n\n\tif (configParams && !configParams._adaptiveFooterActionParameters) {\n\t\tconfigParams._adaptiveFooterActionParameters = {};\n\t}\n\tif (configParams && !configParams.footerActionParameters) {\n\t\tconfigParams.footerActionParameters = {};\n\t}\n\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tconfigParams.footerActionParameters[controlProperties.titleKey] = actionInfo.parameters || {};\n\t\tconfigParams._adaptiveFooterActionParameters[controlProperties.titleKey] = actionInfo || {};\n\t}\n}\n\n/**\n *\n * Removes action information from integration card configuration parameters\n *\n * @param manifest\n * @param controlProperties\n */\nfunction removeActionInfoFromConfigParams(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tdelete configParams.footerActionParameters[controlProperties.titleKey];\n\t\tdelete configParams._adaptiveFooterActionParameters[controlProperties.titleKey];\n\t}\n}\n\n/**\n *\n * Updates the style and enablePath for the adaptive card action\n *\n * @param manifest\n * @param controlProperties\n * @param adaptiveCardStyle\n * @param enablePath\n */\nfunction updateAdaptiveCardInfo(\n\tmanifest: CardManifest,\n\tcontrolProperties: ControlProperties,\n\tadaptiveCardStyle: string,\n\tenablePath: string\n) {\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tconst adaptiveCardActionInfo = configParams._adaptiveFooterActionParameters[controlProperties.titleKey];\n\t\tadaptiveCardActionInfo.style = adaptiveCardStyle;\n\t\tadaptiveCardActionInfo.enablePath = enablePath;\n\t}\n}\n\n/**\n * Adds the action to the card footer\n * @param manifest The card manifest\n * @param actionInfo The action info\n */\nfunction addActionToCardFooter(manifest: CardManifest, actionInfo: AdaptiveCardAction, controlProperties: ControlProperties) {\n\tlet cardFooter = manifest[\"sap.card\"].footer;\n\n\tif (!cardFooter) {\n\t\tmanifest[\"sap.card\"].footer = {\n\t\t\tactionsStrip: []\n\t\t};\n\t\tcardFooter = manifest[\"sap.card\"].footer;\n\t}\n\n\tconst actionLength = cardFooter.actionsStrip.length;\n\n\tif (actionLength < 2) {\n\t\tcardFooter.actionsStrip.push({\n\t\t\ttype: \"Button\",\n\t\t\tvisible: false,\n\t\t\ttext: actionInfo.label,\n\t\t\tbuttonType: getButtonTypeForCard(actionInfo.style),\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"custom\",\n\t\t\t\t\tenabled: actionInfo.enablePath ? \"${\" + actionInfo.enablePath + \"}\" : \"true\",\n\t\t\t\t\tparameters: \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\"\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\taddActionInfoToConfigParameters(manifest, actionInfo, controlProperties);\n\t}\n}\n\n/**\n * Gets the action styles for the card\n * @returns The action styles\n */\nexport function getActionStyles() {\n\tconst actionStyles: Array<ActionStyles> = [\n\t\t{\n\t\t\tname: \"Default\",\n\t\t\tlabel: \"Default\",\n\t\t\tlabelWithValue: \"Default\"\n\t\t},\n\t\t{\n\t\t\tname: \"Positive\",\n\t\t\tlabel: \"Positive\",\n\t\t\tlabelWithValue: \"Positive\"\n\t\t},\n\t\t{\n\t\t\tname: \"Negative\",\n\t\t\tlabel: \"Negative\",\n\t\t\tlabelWithValue: \"Negative\"\n\t\t}\n\t];\n\n\treturn actionStyles;\n}\n\n/**\n * Forms action info from the data field\n * @param dataFields The data fields\n * @param bODataV4 The OData version\n * @returns Action info\n */\nfunction getActionFromDataField(\n\tdataFields: Array<DataField>,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel,\n\tentitySetName: string\n) {\n\tconst actions: Array<AnnotationAction> = [];\n\tconst dataFieldForAnnotation: string = \"com.sap.vocabularies.UI.v1.DataFieldForAction\";\n\n\tdataFields\n\t\t?.filter(function (dataField: DataField) {\n\t\t\tconst dataFieldType: string = bODataV4 ? dataField?.$Type : dataField?.RecordType;\n\t\t\treturn dataFieldType === dataFieldForAnnotation;\n\t\t})\n\t\t.map(function (dataField: DataField) {\n\t\t\tconst actionInfo = formActionInfoFromDataField(dataField, bODataV4, metaModel, entitySetName) as AnnotationAction;\n\t\t\tactions.push(actionInfo);\n\t\t});\n\n\treturn actions;\n}\n\n/**\n *\n * Updates the action parameter data to the model data.\n * Resolves the i18n keys for label, errorMessage and placeholder properties of adaptive card action parameters.\n *\n *\n * @param actionParameters\n * @param data\n * @param resourceBundle\n */\nconst updateActionParameterData = async function (\n\tactionParameters: AdaptiveCardActionParameter[],\n\tdata: Record<string, PropertyValue>,\n\tresourceBundle?: ResourceModel\n) {\n\tfor (const actionParameter of actionParameters) {\n\t\tif (resourceBundle) {\n\t\t\tactionParameter.label = resolveI18nTextFromResourceModel(actionParameter.label, resourceBundle);\n\t\t\tactionParameter.errorMessage = resolveI18nTextFromResourceModel(actionParameter?.errorMessage || \"\", resourceBundle);\n\t\t\tactionParameter.placeholder = resolveI18nTextFromResourceModel(actionParameter?.placeholder || \"\", resourceBundle);\n\t\t}\n\n\t\tconst actionParameterConfig = actionParameter.configuration;\n\t\tconst valueHelpEntitySet = actionParameterConfig?.entitySet;\n\n\t\tif (valueHelpEntitySet) {\n\t\t\tawait updateModelData(data, actionParameterConfig?.serviceUrl, valueHelpEntitySet);\n\t\t}\n\t}\n};\n\n/**\n *\n * Gets the saved action from card manifest\n * Resolves i18n keys to text for label and ok button used for Submit type of action in adaptive card.\n *\n * @param cardManifest\n * @param data\n * @param resourceBundle\n * @returns\n */\nconst getActionsFromManifest = async function (\n\tcardManifest: CardManifest,\n\tdata: Record<string, PropertyValue>,\n\tresourceBundle?: ResourceModel\n) {\n\tconst cardConfiguration = cardManifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tconst actions: Array<ControlProperties> = [];\n\n\tif (configParams?._adaptiveFooterActionParameters) {\n\t\tconst _adaptiveFooterActionParameters = configParams._adaptiveFooterActionParameters;\n\t\tconst aKeys = Object.keys(_adaptiveFooterActionParameters);\n\n\t\tfor (const key of aKeys) {\n\t\t\tconst action = _adaptiveFooterActionParameters[key];\n\n\t\t\tif (resourceBundle) {\n\t\t\t\taction.label = resolveI18nTextFromResourceModel(action.label, resourceBundle);\n\t\t\t\taction.triggerActionText = resolveI18nTextFromResourceModel(action.triggerActionText, resourceBundle);\n\t\t\t}\n\n\t\t\tif (action.actionParameters?.length) {\n\t\t\t\tawait updateActionParameterData(action.actionParameters, data, resourceBundle);\n\t\t\t}\n\n\t\t\tlet style = \"Default\";\n\n\t\t\tif (action.style === \"positive\") {\n\t\t\t\tstyle = \"Positive\";\n\t\t\t} else if (action.style === \"destructive\") {\n\t\t\t\tstyle = \"Negative\";\n\t\t\t}\n\n\t\t\tconst actionInfo: ControlProperties = {\n\t\t\t\ttitle: action.label,\n\t\t\t\ttitleKey: key,\n\t\t\t\tstyle: style,\n\t\t\t\tenablePathKey: action.enablePath,\n\t\t\t\tisStyleControlEnabled: true,\n\t\t\t\tisConfirmationRequired: action.data?.isConfirmationRequired || false,\n\t\t\t\ttriggerActionText: action.triggerActionText\n\t\t\t};\n\t\t\tactions.push(actionInfo);\n\t\t}\n\t\treturn actions;\n\t}\n\n\treturn [\n\t\t{\n\t\t\ttitle: \"\",\n\t\t\ttitleKey: \"\",\n\t\t\tstyle: \"Default\",\n\t\t\tenablePathKey: \"\",\n\t\t\tisStyleControlEnabled: false\n\t\t}\n\t];\n};\n\n/**\n * Gets the saved actions if exists in card manifest otherwise an initial action with default values\n *\n * @param resourceModel\n * @param data\n * @param mCardManifest\n * @returns\n */\nexport const getDefaultAction = async function (\n\tresourceModel?: ResourceModel,\n\tdata?: Record<string, PropertyValue>,\n\tmCardManifest?: CardManifest\n) {\n\tif (mCardManifest && data) {\n\t\treturn await getActionsFromManifest(mCardManifest, data, resourceModel);\n\t}\n\n\treturn [\n\t\t{\n\t\t\ttitle: \"\",\n\t\t\ttitleKey: \"\",\n\t\t\tstyle: \"Default\",\n\t\t\tenablePathKey: \"\",\n\t\t\tisStyleControlEnabled: false\n\t\t}\n\t];\n};\n\n/**\n * Gets the card actions\n * @param appComponent The app component\n * @param entitySetName The entity set name\n * @param bODataV4 The OData version\n * @returns The card actions\n */\nexport function getCardActions(appComponent: UIComponent, entitySetName: string, bODataV4: boolean) {\n\tconst appModel = bODataV4 ? (appComponent.getModel() as V2ODataModel) : (appComponent.getModel() as V4ODataModel),\n\t\tmetaModel = appModel.getMetaModel(),\n\t\tentitySet: EntitySet = bODataV4\n\t\t\t? metaModel.getObject(\"/\" + entitySetName)\n\t\t\t: (metaModel as V2ODataMetaModel).getODataEntitySet(entitySetName),\n\t\tentityTypeName: string = bODataV4 ? entitySet?.$Type : entitySet?.entityType,\n\t\tentityType: EntityType = bODataV4\n\t\t\t? metaModel.getObject(\"/\" + entityTypeName)\n\t\t\t: (metaModel as V2ODataMetaModel).getODataEntityType(entityTypeName),\n\t\tidentificationPath: string = bODataV4 ? \"@com.sap.vocabularies.UI.v1.Identification\" : \"com.sap.vocabularies.UI.v1.Identification\";\n\tlet entityTypeAnnotation: EntityTypeAnnotation = {};\n\n\tif (bODataV4) {\n\t\tentityTypeAnnotation = metaModel.getObject(\"/\" + entityTypeName + \"@\");\n\t}\n\n\tconst entityTypeKeys: Array<string> = bODataV4 ? Object.keys(entityTypeAnnotation) : Object.keys(entityType);\n\tconst identificationAnnotation: Array<string> = entityTypeKeys?.filter((key: string) => {\n\t\treturn key === identificationPath;\n\t});\n\tlet dataFields: Array<DataField> = [];\n\n\tif (identificationAnnotation?.length) {\n\t\tdataFields = bODataV4 ? entityTypeAnnotation[identificationPath] : entityType[identificationPath];\n\t}\n\n\treturn getActionFromDataField(dataFields, bODataV4, metaModel, entitySetName);\n}\n\n/**\n * Adds the action to the card manifest\n * @param manifest The card manifest\n * @param controlProperties The control properties\n * @param context\n */\nexport async function addActionToCardManifest(manifest: CardManifest, controlProperties: ControlProperties, context: any) {\n\tconst bODataV4: boolean = context.dialog.getModel().getProperty(\"/configuration/actions/bODataV4\");\n\tconst metaModel: V2ODataMetaModel | V4ODataMetaModel = context.appModel.getMetaModel();\n\tconst actionInfo = await getAdaptiveCardAction(controlProperties, bODataV4, metaModel, context);\n\taddActionToCardFooter(manifest, actionInfo, controlProperties);\n}\n\n/**\n * Removes the action from the card manifest\n * @param manifest The card manifest\n * @param controlProperties The control properties\n */\nexport function removeActionFromManifest(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardFooter = manifest[\"sap.card\"]?.footer;\n\tconst actionLength = cardFooter?.actionsStrip.length;\n\n\tif (actionLength && cardFooter) {\n\t\tconst relatedAction = cardFooter.actionsStrip.filter((actionsStrip) => {\n\t\t\tconst cardParameters = actionsStrip.actions[0].parameters;\n\t\t\treturn cardParameters !== \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\";\n\t\t});\n\n\t\tif (relatedAction.length) {\n\t\t\tcardFooter.actionsStrip = relatedAction;\n\t\t} else {\n\t\t\tdelete manifest[\"sap.card\"]?.footer;\n\t\t}\n\n\t\tremoveActionInfoFromConfigParams(manifest, controlProperties);\n\t}\n}\n\n/**\n * Updates the actions in the footer of the card manifest based on the provided control properties.\n *\n * @param {CardManifest} manifest - The card manifest object that contains the footer actions.\n */\nexport function resetCardActions(manifest: CardManifest) {\n\tmanifest[\"sap.card\"].footer = {\n\t\tactionsStrip: []\n\t};\n\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tif (configParams) {\n\t\tconfigParams._adaptiveFooterActionParameters = {};\n\t\tconfigParams.footerActionParameters = {};\n\t}\n}\n\n/**\n * Updates the actions in the footer of the card manifest based on the provided control properties.\n *\n * @param {CardManifest} manifest - The card manifest object that contains the footer actions.\n * @param {ControlProperties} controlProperties - The control properties used to update the footer actions.\n */\nexport function updateCardManifestAction(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardFooter = manifest[\"sap.card\"].footer;\n\tconst actionLength = cardFooter?.actionsStrip.length;\n\n\tif (actionLength && cardFooter) {\n\t\tcardFooter.actionsStrip.forEach((actionsStrip) => {\n\t\t\tconst action = actionsStrip.actions[0];\n\t\t\tconst cardParameters = action.parameters;\n\n\t\t\tif (cardParameters === \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\") {\n\t\t\t\tconst isEnabledExpression = controlProperties.enablePathKey ? \"${\" + controlProperties.enablePathKey + \"}\" : \"true\";\n\t\t\t\tconst adaptiveCardStyle = getActionStyle(controlProperties);\n\t\t\t\tactionsStrip.buttonType = getButtonTypeForCard(controlProperties.style);\n\t\t\t\taction.enabled = isEnabledExpression;\n\t\t\t\tupdateAdaptiveCardInfo(manifest, controlProperties, adaptiveCardStyle, controlProperties.enablePathKey || \"\");\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Gets the action style\n * @param controlProperties The control properties\n * @returns Action style\n */\n\nfunction getActionStyle(controlProperties: ControlProperties) {\n\tlet actionStyle: string = \"default\";\n\n\tif (controlProperties.style === \"Positive\") {\n\t\tactionStyle = \"positive\";\n\t} else if (controlProperties.style === \"Negative\") {\n\t\tactionStyle = \"destructive\";\n\t}\n\treturn actionStyle;\n}\n\n/**\n *\n * Gets the OData V2 action parameters for the card\n *\n * @param parameters The parameters\n * @param context The context\n * @returns The OData V2 action parameters\n */\nconst getActionParameters = async function (parameters: Array<FunctionImportParameter>, context: any) {\n\tconst actionParameters: Array<AdaptiveCardActionParameter> = [];\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\n\tfor (const parameter of parameters) {\n\t\tconst EnumMember = parameter?.[\"com.sap.vocabularies.Common.v1.FieldControl\"]?.EnumMember;\n\t\tconst isRequired = EnumMember === \"com.sap.vocabularies.Common.v1.FieldControlType/Mandatory\" || parameter?.nullable === \"false\";\n\t\tconst actionParamInfoToAdd: AdaptiveCardActionParameter = {\n\t\t\tlabel: parameter?.[\"sap:label\"] || parameter?.name || \"\",\n\t\t\tid: parameter?.name || \"\",\n\t\t\tisRequired: isRequired,\n\t\t\terrorMessage: isRequired ? oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_ERROR_MESSAGE\") : \"\",\n\t\t\tplaceholder: \"\"\n\t\t};\n\n\t\tif (parameter?.[\"sap:value-list\"] === \"fixed-values\") {\n\t\t\tconst actionParameterConfig = await getActionParameterConfigurationV2(parameter, context);\n\n\t\t\tif (actionParameterConfig?.entitySet) {\n\t\t\t\tactionParamInfoToAdd.configuration = actionParameterConfig;\n\t\t\t\tactionParamInfoToAdd.placeholder = oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_PLACEHOLDER\");\n\t\t\t}\n\t\t}\n\t\tactionParameters.push(actionParamInfoToAdd);\n\t}\n\n\treturn actionParameters;\n};\n\n/**\n * Forms the Adaptive Card action from the control properties\n * @param controlProperties The control properties\n * @param bODataV4 The OData version\n * @param metaModel The meta model\n * @param context Context\n * @returns The action info\n */\nconst getAdaptiveCardAction = async function (\n\tcontrolProperties: ControlProperties,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel,\n\tcontext: any\n) {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst actionStyle = getActionStyle(controlProperties);\n\tlet actionParameters: Array<AdaptiveCardActionParameter> = [];\n\tlet functionImportInfo;\n\tconst data: Data = {\n\t\tisConfirmationRequired: controlProperties.isConfirmationRequired || false\n\t};\n\tconst enabledPathKey = controlProperties.enablePathKey;\n\tconst actionInfo: AdaptiveCardAction = {\n\t\tstyle: actionStyle,\n\t\tverb: \"\",\n\t\tlabel: controlProperties.title,\n\t\tactionParameters: [],\n\t\tdata: data,\n\t\tenablePath: enabledPathKey || \"\",\n\t\ttriggerActionText: oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_SUBMIT_ACTION_OK_BUTTON\")\n\t};\n\n\tif (bODataV4) {\n\t\tactionParameters = await getActionParams(controlProperties, metaModel as V4ODataMetaModel, context);\n\t\tactionInfo.verb = getActionVerb(controlProperties, metaModel as V4ODataMetaModel);\n\t\tactionInfo.actionParameters = actionParameters || [];\n\n\t\treturn actionInfo;\n\t} else {\n\t\tfunctionImportInfo = getFunctionImportInfo(controlProperties, metaModel as V2ODataMetaModel, context);\n\t\tactionInfo.verb = controlProperties.titleKey;\n\t\tactionInfo.parameters = functionImportInfo?.mActionParams?.parameterData;\n\t\tactionInfo.actionParameters = await getActionParameters(functionImportInfo?.mActionParams?.additionalParameters, context);\n\t\tdata.actionParams = {\n\t\t\tkeys: Object.keys(functionImportInfo?.mActionParams?.parameterData)\n\t\t};\n\t\tactionInfo.data = data;\n\n\t\treturn actionInfo;\n\t}\n};\n\n/**\n * Gets the related bound action for OData V4 model\n * @param actionValue The action value\n * @param actionType The action type\n * @returns Bound action\n */\n\nfunction getRelatedBoundAction(actionValue: Array<Action>, actionType: string) {\n\treturn actionValue?.filter((action: Action) => {\n\t\tconst isBoundAction: boolean = action?.$IsBound;\n\t\tif (isBoundAction) {\n\t\t\treturn action?.$Parameter?.some((actionParam: ActionParameter) => {\n\t\t\t\treturn actionType === actionParam?.$Type;\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Returns the related unbound actions for OData V4 model\n * @param actionValue The action value\n * @returns\n */\nfunction getRelatedUnboundActions(actionValue: Array<Action>) {\n\treturn actionValue?.filter((action: Action) => {\n\t\treturn !action?.$IsBound;\n\t});\n}\n\n/**\n * Gets the valuehelp info for OData V4 metamodel\n *\n * @param metaModel\n * @param contextPath\n * @param actionParamName\n * @returns\n */\nconst getValueHelpInfo = async function (metaModel: V4ODataMetaModel, contextPath: string, actionParamName?: string) {\n\tconst valueListInfo = await metaModel.requestValueListInfo(contextPath, true);\n\tconst valueListAnnotationInfo = valueListInfo?.[\"\"] as ValueListAnnotationInfo;\n\tconst valueListModel = valueListAnnotationInfo?.$model;\n\tconst valueListPropertyName = getValueListPropertyName(valueListAnnotationInfo, actionParamName || \"\");\n\tconst valueHelpEntitySet = valueListAnnotationInfo?.[\"CollectionPath\"];\n\tconst valueHelpAnnotation = valueListModel?.getMetaModel()?.getObject(`/${valueHelpEntitySet}/${valueListPropertyName}@`);\n\treturn {\n\t\tvalueHelpAnnotation,\n\t\tvalueListPropertyName,\n\t\tvalueHelpEntitySet,\n\t\tvalueListModelServiceUrl: valueListModel?.getServiceUrl()\n\t};\n};\n\n/**\n * Returns the action parameter name for OData V4 model\n * @param context\n * @param actionVerb\n * @param actionParamName\n * @returns The action parameter label for OData V4 model\n */\nconst getActionParameterName = async function (context: any, actionVerb: string, actionParamName?: string) {\n\tif (actionParamName) {\n\t\tconst entitySetName = context.entitySet;\n\t\tconst metaModel = context.appModel.getMetaModel();\n\t\tconst contextPath = `/${entitySetName}/${actionVerb}/${actionParamName}`;\n\t\tconst entitySet: EntitySet = metaModel.getObject(\"/\" + context?.entitySet);\n\t\tconst actionParameterAnnotation = metaModel.getObject(\"/\" + entitySet?.$Type + \"/\" + actionParamName + \"@\");\n\n\t\tif (metaModel.getObject(`${contextPath}@`)?.[\"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\"]) {\n\t\t\tconst { valueHelpAnnotation } = await getValueHelpInfo(metaModel as V4ODataMetaModel, contextPath, actionParamName);\n\n\t\t\treturn (\n\t\t\t\tactionParameterAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"] ||\n\t\t\t\tvalueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"]\n\t\t\t);\n\t\t}\n\n\t\treturn actionParameterAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"] || actionParamName;\n\t}\n};\n\n/**\n * Returns the value list property name from annotations\n *\n * @param oValueList\n * @param sPropertyName\n * @returns\n */\nfunction getValueListPropertyName(oValueList: ValueListAnnotationInfo, sPropertyName: string): string {\n\tconst oValueListParameter = oValueList?.Parameters.find(function (oParameter: ValueListParameter) {\n\t\treturn oParameter?.LocalDataProperty?.$PropertyPath === sPropertyName;\n\t});\n\treturn oValueListParameter?.ValueListProperty;\n}\n\n/**\n * Function to get the action parameter value based on the text arrangement annotation\n *\n * @param propertyPath\n * @param descriptionPath\n * @param textArrangementType\n * @returns\n */\nexport function getActionParameterValue(propertyPath: string, descriptionPath: string, textArrangementType: string): string {\n\tif (textArrangementType === \"TextOnly\") {\n\t\treturn \"${\" + descriptionPath + \"}\";\n\t} else if (textArrangementType === \"TextLast\") {\n\t\treturn \"${\" + propertyPath + \"}\" + \" (\" + \"${\" + descriptionPath + \"}\" + \")\";\n\t} else if (textArrangementType === \"TextSeparate\") {\n\t\treturn \"${\" + propertyPath + \"}\";\n\t}\n\n\treturn \"${\" + descriptionPath + \"}\" + \" (${\" + propertyPath + \"})\";\n}\n\n/**\n * Updates the model data with value help data for the action parameter\n *\n * @param data\n * @param serviceUrl\n * @param valueHelpEntitySet\n */\nexport const updateModelData = async function (data: Record<string, PropertyValue>, serviceUrl: string, valueHelpEntitySet: string) {\n\tconst valueHelpData = await fetch(serviceUrl);\n\tconst { odataModel } = ApplicationInfo.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\n\tif (valueHelpData && typeof valueHelpData.json === \"function\") {\n\t\tconst valueHelpDataJson = await valueHelpData.json();\n\t\tconst valueHelpDataValue = bODataV4 ? valueHelpDataJson?.value : valueHelpDataJson?.d?.results;\n\n\t\tif (valueHelpDataValue?.length) {\n\t\t\tdata[valueHelpEntitySet] = valueHelpDataValue;\n\t\t}\n\t}\n};\n\n/**\n * Get Action Parameter Data for OData V4 model\n *\n * @param context\n * @param actionVerb\n * @param actionParamName\n * @returns\n */\nconst getActionParameterConfiguration = async function (context: any, actionVerb: string, actionParamName?: string) {\n\tconst actionParameterConfig = {\n\t\tserviceUrl: \"\",\n\t\tvalue: \"\",\n\t\tentitySet: \"\",\n\t\ttitle: \"\"\n\t};\n\n\tif (!actionParamName) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst entitySetName = context.entitySet;\n\tconst oDialogModel = context.dialog.getModel();\n\tconst metaModel = context.appModel.getMetaModel();\n\tconst contextPath = `/${entitySetName}/${actionVerb}/${actionParamName}`;\n\tconst actionParamAnnotations = metaModel.getObject(`${contextPath}@`);\n\tif (!actionParamAnnotations?.[\"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\"]) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst { valueHelpAnnotation, valueListPropertyName, valueHelpEntitySet, valueListModelServiceUrl } = await getValueHelpInfo(\n\t\tmetaModel as V4ODataMetaModel,\n\t\tcontextPath,\n\t\tactionParamName\n\t);\n\tconst textArrangementPath = valueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Text\"]?.$Path;\n\tconst textArrangementAnnotation =\n\t\tvalueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\"];\n\tconst actionParameterValue =\n\t\t(textArrangementAnnotation?.$EnumMember && valueListPropertyName && textArrangementPath) ||\n\t\t(valueListPropertyName && textArrangementPath)\n\t\t\t? getActionParameterValue(valueListPropertyName, textArrangementPath, textArrangementAnnotation?.$EnumMember?.split(\"/\")[1])\n\t\t\t: \"${\" + valueListPropertyName + \"}\";\n\n\tlet serviceUrl = valueListModelServiceUrl;\n\tserviceUrl =\n\t\tvalueListPropertyName && textArrangementPath\n\t\t\t? `${serviceUrl}${valueHelpEntitySet}?$select=${valueListPropertyName},${textArrangementPath}`\n\t\t\t: `${serviceUrl}${valueHelpEntitySet}?$select=${valueListPropertyName}`;\n\tserviceUrl = `${serviceUrl}&skip=0&$top=20`;\n\n\tconst data = oDialogModel.getProperty(\"/configuration/$data\");\n\tawait updateModelData(data, serviceUrl, valueHelpEntitySet);\n\toDialogModel.setProperty(\"/configuration/$data\", data);\n\n\treturn {\n\t\tentitySet: valueHelpEntitySet,\n\t\tserviceUrl: serviceUrl,\n\t\tvalue: actionParameterValue,\n\t\ttitle: \"${\" + valueListPropertyName + \"}\"\n\t};\n};\n\n/**\n * Get Action Parameter Info for OData V4 application's Action\n *\n * The action parameter will consist of errorMessage and placeholder which will be used by adaptive card.\n * Currently the errorMessage and placeholder will have values only for actions having dropdown value as input.\n *\n * @param relatedAction The related action\n * @param context The context\n * @param actionVerb The action verb\n * @param isBoundAction Is bound action\n * @returns The action parameter info\n */\nconst getActionParameterInfo = async function (relatedAction: Action, context: any, actionVerb: string, isBoundAction?: boolean) {\n\tconst actionParamInfo: any = [];\n\tlet actionIndex = 0;\n\n\tif (relatedAction && relatedAction.$Parameter) {\n\t\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\n\t\tfor (const actionParam of relatedAction.$Parameter) {\n\t\t\tconst isActionRequired = !isBoundAction || (isBoundAction && actionIndex > 0);\n\t\t\tif (isActionRequired) {\n\t\t\t\tconst isRequired = actionParam.$Nullable === false;\n\t\t\t\tconst actionParamInfoToAdd: AdaptiveCardActionParameter = {\n\t\t\t\t\tisRequired: isRequired,\n\t\t\t\t\tid: actionParam.$Name,\n\t\t\t\t\tlabel: await getActionParameterName(context, actionVerb, actionParam.$Name),\n\t\t\t\t\terrorMessage: isRequired ? oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_ERROR_MESSAGE\") : \"\",\n\t\t\t\t\tplaceholder: \"\"\n\t\t\t\t};\n\t\t\t\tconst actionParameterConfig = (await getActionParameterConfiguration(\n\t\t\t\t\tcontext,\n\t\t\t\t\tactionVerb,\n\t\t\t\t\tactionParam.$Name\n\t\t\t\t)) as ActionParameterConfiguration;\n\t\t\t\tif (actionParameterConfig?.entitySet) {\n\t\t\t\t\tactionParamInfoToAdd[\"configuration\"] = actionParameterConfig;\n\t\t\t\t\tactionParamInfoToAdd.placeholder = oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_PLACEHOLDER\");\n\t\t\t\t}\n\t\t\t\tactionParamInfo.push(actionParamInfoToAdd);\n\t\t\t}\n\t\t\tactionIndex++;\n\n\t\t\tif (actionIndex === relatedAction.$Parameter.length) {\n\t\t\t\treturn actionParamInfo;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Gets the enabled value from annotation\n *\n * @param actionAnnotation\n * @returns\n */\nfunction getEnabledValueFromAnnotation(actionAnnotation: ActionAnnotation) {\n\tif (actionAnnotation) {\n\t\tconst operationAvailable = actionAnnotation[\"@Org.OData.Core.V1.OperationAvailable\"];\n\n\t\tif (operationAvailable?.$Path) {\n\t\t\treturn operationAvailable.$Path;\n\t\t} else if (operationAvailable?.Bool) {\n\t\t\treturn operationAvailable.Bool;\n\t\t}\n\t}\n\n\treturn \"\";\n}\n\n/**\n * Gets the critical value from annotation\n *\n * @param oCriticalAnnotation\n * @returns\n */\nfunction getCriticalValueFromAnnotation(oCriticalAnnotation: CriticalAction) {\n\tif (!oCriticalAnnotation) {\n\t\treturn false;\n\t}\n\tif (oCriticalAnnotation.Bool === undefined) {\n\t\treturn true;\n\t}\n\n\tconst oParameterValue = oCriticalAnnotation.Bool;\n\n\tif (typeof oParameterValue === \"string\") {\n\t\tconst oActionValue = oParameterValue.toLowerCase();\n\t\treturn !(oActionValue == \"false\" || oActionValue == \"\" || oActionValue == \" \");\n\t}\n\n\treturn !!oParameterValue;\n}\n\n/**\n *\n * Returns the metadata annotation info for OData V4 model ( enabled or critical value coming from metadata annotations )\n *\n * @param dataField\n * @param metaModel\n * @param entityTypeName\n * @returns\n */\n\nfunction getMetadataAnnotationInfoV4(dataField: DataFieldV4, metaModel: V4ODataMetaModel, entitySetName: string) {\n\tconst dataFieldAction = dataField.Action;\n\tconst actionVerb = dataFieldAction.indexOf(\"(\") > -1 ? dataFieldAction.split(\"(\")[0] : dataFieldAction;\n\tconst actionAnnotation = metaModel.getObject(\"/\" + entitySetName + \"/\" + actionVerb + \"@\");\n\tconst enablePath = getEnabledValueFromAnnotation(actionAnnotation);\n\tconst isConfirmationRequired = getCriticalValueFromAnnotation(actionAnnotation?.[\"@com.sap.vocabularies.UI.v1.Critical\"]);\n\n\treturn {\n\t\tenablePath: enablePath,\n\t\tisConfirmationRequired: isConfirmationRequired\n\t};\n}\n\n/**\n * Get the metadata annotation info for OData V2 model\n *\n * @param dataField\n * @param metaModel\n * @returns\n */\nfunction getMetadataAnnotationInfoV2(dataField: DataField, metaModel: V2ODataMetaModel) {\n\tconst functionName: string = dataField.Action.String.split(\"/\")[1];\n\tconst functionImport: FunctionImport = metaModel.getODataFunctionImport(functionName);\n\n\treturn {\n\t\tenablePath: functionImport?.[\"sap:applicable-path\"] || \"\",\n\t\tisConfirmationRequired: getCriticalValueFromAnnotation(functionImport?.[\"com.sap.vocabularies.Common.v1.IsActionCritical\"])\n\t};\n}\n\n/**\n * Gets the action parameters for OData V4 model\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @param context The context\n * @returns Action parameters\n */\nconst getActionParams = async function (controlProperties: ControlProperties, metaModel: V4ODataMetaModel, context: any) {\n\tconst titleKey = controlProperties.titleKey || \"\";\n\tconst actionVerb: string = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[0] : titleKey;\n\tconst actionValue = metaModel.getObject(`/${context.entitySet}/${actionVerb}`);\n\tlet actionType: string = titleKey.indexOf(\"(\") > -1 ? titleKey?.split(\"(\")[1] : \"\";\n\tactionType = actionType.indexOf(\")\") > -1 ? actionType.replace(\")\", \"\") : actionType;\n\n\t//Get action Parameters for unbound action\n\tif (actionValue?.$kind === \"ActionImport\" && actionValue?.$Action) {\n\t\tconst unBoundActions = metaModel.getObject(\"/\" + actionValue?.$Action);\n\t\tconst relatedUnboundAction = getRelatedUnboundActions(unBoundActions);\n\t\treturn getActionParameterInfo(relatedUnboundAction[0], context, actionVerb);\n\t}\n\n\t//Get action Parameters for Bound actions\n\tconst relatedBoundAction = getRelatedBoundAction(actionValue, actionType);\n\n\tif (relatedBoundAction?.length && relatedBoundAction[0]?.$Parameter != null && relatedBoundAction[0]?.$Parameter.length > 1) {\n\t\treturn await getActionParameterInfo(relatedBoundAction[0], context, actionVerb, true);\n\t}\n};\n\n/**\n * Get the action verb for OData V4 model\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @returns Returns the action string\n */\nfunction getActionVerb(controlProperties: ControlProperties, metaModel: V4ODataMetaModel) {\n\tconst titleKey = controlProperties.titleKey || \"\";\n\tconst actionVerb = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[0] : titleKey;\n\tconst actionValue = metaModel.getObject(\"/\" + actionVerb) || [];\n\tlet actionType: string = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[1] : \"\";\n\tactionType = actionType.indexOf(\")\") > -1 ? actionType.replace(\")\", \"\") : actionType;\n\n\t//Get action string for unbound action\n\tif (actionValue?.$kind === \"ActionImport\" && actionValue?.$Action) {\n\t\treturn titleKey?.split(\"/\")[1];\n\t}\n\n\tconst relatedBoundAction = getRelatedBoundAction(actionValue, actionType);\n\t//Get action string for bound action\n\tif (relatedBoundAction?.length) {\n\t\treturn actionVerb;\n\t}\n\n\treturn actionVerb;\n}\n\n/**\n * Get the function import info for OData V2 model's action\n *\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @param context Current context\n * @returns Functionimport info\n */\nfunction getFunctionImportInfo(controlProperties: ControlProperties, metaModel: V2ODataMetaModel, context: any) {\n\tconst functionName: string = controlProperties.titleKey;\n\tconst functionImport: FunctionImport = metaModel.getODataFunctionImport(functionName);\n\tconst oContextObject = context.dialog.getModel().getProperty(\"/configuration/$data\");\n\tconst entitySet: EntitySet = metaModel.getODataEntitySet(context?.entitySet);\n\tconst entityType: EntityType = metaModel.getODataEntityType(entitySet?.entityType);\n\tconst mKeyProperties: KeyMap = getPropertyKeys(entityType);\n\tconst oSkipProperties: SkipProperty = {};\n\tconst mActionParams: ParametersInfoV2 = {\n\t\tparameterData: {},\n\t\tadditionalParameters: []\n\t};\n\n\tfunctionImport?.parameter?.forEach(function (importParameter: FunctionImportParameter) {\n\t\taddParameterLabel(importParameter, entityType, metaModel);\n\n\t\tconst parameterName: string = importParameter?.name || \"\";\n\t\tconst isKey = !!mKeyProperties[parameterName];\n\t\tlet parameterValue;\n\n\t\tif (oContextObject?.hasOwnProperty(parameterName)) {\n\t\t\tparameterValue = oContextObject[parameterName];\n\t\t} else if (isKey && oContextObject && functionImport[\"sap:action-for\"]) {\n\t\t\t// parameter is key but not part of the current projection - raise error\n\t\t\tLog.error(\"Key parameter of action not found in current context: \" + parameterName);\n\t\t\tthrow new Error(\"Key parameter of action not found in current context: \" + parameterName);\n\t\t}\n\n\t\tmActionParams.parameterData[parameterName] = parameterValue;\n\n\t\tconst skip = !!oSkipProperties[parameterName];\n\t\tif (!skip && (!isKey || !functionImport[\"sap:action-for\"]) && importParameter.mode.toUpperCase() == \"IN\") {\n\t\t\t// offer as optional parameter with default value from context\n\t\t\tmActionParams.additionalParameters.push(importParameter);\n\t\t}\n\t});\n\n\treturn {\n\t\tmActionParams: mActionParams,\n\t\tfunctionImport: functionImport\n\t};\n}\n\n/**\n * Get the property keys for the entity type\n * @param entityType The entity type\n * @returns The property keys map\n */\nconst getPropertyKeys = function (entityType: EntityType) {\n\tconst oKeyMap: KeyMap = {};\n\n\tentityType.key.propertyRef.forEach((property: Property) => {\n\t\tif (property.name) {\n\t\t\toKeyMap[property.name] = true;\n\t\t}\n\t});\n\n\treturn oKeyMap;\n};\n\n/**\n * Adds the parameter label to the entity type property\n *\n * @param parameter The Action parameter\n * @param entityType The entity type\n * @param metaModel The meta model\n */\nconst addParameterLabel = function (parameter: FunctionImportParameter, entityType: EntityType, metaModel: V2ODataMetaModel) {\n\tif (entityType && parameter && !parameter[\"com.sap.vocabularies.Common.v1.Label\"]) {\n\t\tconst property: Property = metaModel.getODataProperty(entityType, parameter.name, false);\n\t\tif (property && property[\"com.sap.vocabularies.Common.v1.Label\"]) {\n\t\t\t// copy label from property to parameter with same name as default if no label is set for function import parameter\n\t\t\tparameter[\"com.sap.vocabularies.Common.v1.Label\"] = property[\"com.sap.vocabularies.Common.v1.Label\"];\n\t\t}\n\t}\n};\n\n/**\n *\n * Returns the service URL, valueListPropertyPath, descriptionPath for OData V2 model using the value list parameters\n *\n * @param serviceUrlPrefix\n * @param valueListParameters\n * @returns\n */\nfunction getParameterConfigFromValueList(serviceUrlPrefix: string, valueListParameters: ValueListParameter[]) {\n\tconst selectProps: Array<string> = [];\n\tlet valueListPropertyPath = \"\",\n\t\tdescriptionPath = \"\";\n\n\tvalueListParameters.forEach((valueListParameter) => {\n\t\tconst valueListProperty = valueListParameter?.ValueListProperty?.String;\n\t\tif (valueListProperty) {\n\t\t\tselectProps.push(valueListProperty);\n\t\t\tdescriptionPath =\n\t\t\t\tvalueListParameter?.RecordType === \"com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly\"\n\t\t\t\t\t? valueListProperty\n\t\t\t\t\t: descriptionPath;\n\t\t\tvalueListPropertyPath =\n\t\t\t\tvalueListParameter?.RecordType === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\"\n\t\t\t\t\t? valueListProperty\n\t\t\t\t\t: valueListPropertyPath;\n\t\t}\n\t});\n\n\tconst serviceUrl = `${serviceUrlPrefix}?$select=${selectProps.join(\",\")}`;\n\n\treturn {\n\t\tserviceUrl,\n\t\tvalueListPropertyPath,\n\t\tdescriptionPath\n\t};\n}\n\n/**\n *\n * Get the action parameter configuration for OData V2 model\n *\n * @param parameter\n * @param context\n * @returns The action parameter configuration for OData V2 model\n */\nexport const getActionParameterConfigurationV2 = async function (parameter: FunctionImportParameter, context: any) {\n\tconst actionParameterConfig = {\n\t\tserviceUrl: \"\",\n\t\tvalue: \"\",\n\t\tentitySet: \"\",\n\t\ttitle: \"\"\n\t};\n\n\tif (!parameter) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst ValueListAnnotation = parameter?.[\"com.sap.vocabularies.Common.v1.ValueList\"];\n\tconst valueListParameters = ValueListAnnotation?.Parameters as ValueListParameter[];\n\tconst entitySetName = ValueListAnnotation?.CollectionPath?.String;\n\tconst { serviceUrl, valueListPropertyPath, descriptionPath } = getParameterConfigFromValueList(\n\t\t`${context.appModel.sServiceUrl}/${entitySetName}`,\n\t\tvalueListParameters\n\t);\n\n\tlet textArrangementType = \"TextOnly\";\n\n\tif (parameter?.[\"com.sap.vocabularies.UI.v1.TextArrangement\"]) {\n\t\ttextArrangementType = parameter[\"com.sap.vocabularies.UI.v1.TextArrangement\"]?.EnumMember?.split(\"/\")[1];\n\t}\n\n\tconst actionParameterValue =\n\t\tvalueListPropertyPath && descriptionPath\n\t\t\t? getActionParameterValue(valueListPropertyPath, descriptionPath, textArrangementType)\n\t\t\t: \"${\" + valueListPropertyPath + \"}\";\n\n\tconst oDialogModel = context.dialog.getModel();\n\tconst data = oDialogModel.getProperty(\"/configuration/$data\");\n\tawait updateModelData(data, serviceUrl, entitySetName);\n\toDialogModel.setProperty(\"/configuration/$data\", data);\n\n\treturn {\n\t\tentitySet: entitySetName,\n\t\tserviceUrl: serviceUrl,\n\t\tvalue: actionParameterValue,\n\t\ttitle: \"${\" + valueListPropertyPath + \"}\"\n\t};\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":94,"column":0},"map":{"version":3,"file":"Formatter.js","names":["sap","ui","define","sap_ui_integration_formatters_DateTimeFormatter","ODataUtils","date","dateTime","formatPropertyDropdownValues","property","value","type","UTC","length","label","createFormatterExpression","oFormatterDetail","aFormatterArguments","push","content","formatterName","mOptions","parameters","forEach","mParameters","properties","oProperties","selected","name","parseFloat","selectedKey","JSON","stringify","concat","i","aFormatter","bindingOrFormatterArray","hasBindingOrFormatter","some","item","startsWith","getDefaultPropertyFormatterConfig","i18nModel","dateFormatterConfig","isPropertyTypeDate","configData","getDateFormatterConfiguration","getDefaultPropertyFormatterConfigForNavProperties","navProperties","navProperty","propertyName","propertyType","displayName","getText","defaultValue","visible","__exports","__esModule"],"sources":["Formatter.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport { date, dateTime } from \"sap/ui/integration/formatters/DateTimeFormatter\";\nimport type { PropertyInfo, PropertyInfoMap } from \"../odata/ODataTypes\";\nimport * as ODataUtils from \"../odata/ODataUtils\";\n\nexport const formatPropertyDropdownValues = function (property: PropertyInfo, value: string) {\n\tconst type = property.type;\n\tswitch (type) {\n\t\tcase \"Edm.Boolean\":\n\t\t\tbreak;\n\t\tcase \"Edm.Date\":\n\t\tcase \"Edm.DateTime\":\n\t\t\tvalue = date(value, { UTC: true });\n\t\t\tbreak;\n\t\tcase \"Edm.DateTimeOffset\":\n\t\t\tvalue = dateTime(value, { UTC: true });\n\t\t\tbreak;\n\t\tcase \"Edm.DateTimeInterval\":\n\t\tcase \"Edm.Time\":\n\t\t\tbreak;\n\t\tcase \"Edm.String\":\n\t\t\tif (value?.length === 0) {\n\t\t\t\tvalue = \"<empty>\";\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Edm.Integer\":\n\t\tcase \"Edm.Float\":\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn `${property.label} (${value})`;\n};\n\nexport const createFormatterExpression = function (oFormatterDetail: FormatterConfiguration) {\n\tconst aFormatterArguments = [];\n\taFormatterArguments.push(\"${\" + oFormatterDetail.property + \"}\");\n\tlet content = oFormatterDetail.formatterName + \"(\"; // dont close brackets here\n\n\tconst mOptions: Record<string, string | boolean | number> = {};\n\toFormatterDetail.parameters?.forEach(function (mParameters) {\n\t\tif (mParameters.properties && mParameters.properties.length > 0) {\n\t\t\tmParameters.properties.forEach(function (oProperties: SingleFormatterProperty) {\n\t\t\t\tswitch (oProperties.type) {\n\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\tif (!oProperties.selected) {\n\t\t\t\t\t\t\toProperties.selected = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmOptions[oProperties.name] = oProperties.selected;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\tif (typeof oProperties.value === \"number\") {\n\t\t\t\t\t\t\tmOptions[oProperties.name] = parseFloat(oProperties.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"enum\":\n\t\t\t\t\t\tif (oProperties.selectedKey) {\n\t\t\t\t\t\t\tmOptions[oProperties.name] = oProperties.selectedKey;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmOptions[oProperties.name] = oProperties.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (JSON.stringify(mOptions) !== \"{}\") {\n\t\t\t\taFormatterArguments.push(JSON.stringify(mOptions));\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mParameters.type) {\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\tif (!mParameters.selected) {\n\t\t\t\t\t\tmParameters.selected = false;\n\t\t\t\t\t}\n\t\t\t\t\taFormatterArguments.push(mParameters.selected);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"number\":\n\t\t\t\t\taFormatterArguments.push(parseFloat(mParameters.value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"enum\":\n\t\t\t\t\taFormatterArguments.push(mParameters.selectedKey);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\taFormatterArguments.push(mParameters.value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\tcontent = content.concat(aFormatterArguments[0]);\n\tfor (let i = 1; i < aFormatterArguments.length; i++) {\n\t\tconst aFormatter = aFormatterArguments[i];\n\t\tconst bindingOrFormatterArray = [\"{\", \"[\", \"$\"];\n\t\tconst hasBindingOrFormatter = bindingOrFormatterArray.some((item) => aFormatter.startsWith(item));\n\t\tif (typeof aFormatter === \"string\" && !hasBindingOrFormatter) {\n\t\t\tcontent = content.concat(\", '\" + aFormatter + \"' \");\n\t\t} else {\n\t\t\tcontent = content.concat(\", \" + aFormatter);\n\t\t}\n\t}\n\treturn content + \")\";\n};\n\n/**\n * Generates the default property formatter configuration for date properties.\n *\n * @param {ResourceBundle} i18nModel - The internationalization model used for localization.\n * @param {PropertyInfoMap} properties - The map of property information.\n * @returns {FormatterConfigurationMap} - The configuration map for date formatters.\n */\nexport const getDefaultPropertyFormatterConfig = function (i18nModel: ResourceBundle, properties: PropertyInfoMap): FormatterConfigurationMap {\n\tconst dateFormatterConfig: FormatterConfigurationMap = [];\n\tfor (const property of properties) {\n\t\tconst isPropertyTypeDate = ODataUtils.isPropertyTypeDate(property.type);\n\t\tif (property.name && isPropertyTypeDate) {\n\t\t\tconst configData = getDateFormatterConfiguration(property.name, property.type, i18nModel) as FormatterConfiguration;\n\t\t\tdateFormatterConfig.push(configData);\n\t\t}\n\t}\n\treturn dateFormatterConfig;\n};\n\n/**\n * Generates the default property formatter configuration for navigation properties.\n *\n * @param {ResourceBundle} i18nModel - The internationalization model used for localization.\n * @param {PropertyInfoMap} navProperties - The map of navigation properties.\n * @returns {FormatterConfigurationMap} The formatter configuration map for date properties.\n */\nexport const getDefaultPropertyFormatterConfigForNavProperties = function (i18nModel: ResourceBundle, navProperties: PropertyInfoMap): FormatterConfigurationMap {\n\tconst dateFormatterConfig: FormatterConfigurationMap = [];\n\tfor (const navProperty of navProperties) {\n\t\tconst properties = navProperty.properties as PropertyInfoMap || [];\n\t\tfor (const property of properties) {\n\t\t\tconst propertyName = navProperty.name + \"/\" + property.name;\n\t\t\tconst isPropertyTypeDate = ODataUtils.isPropertyTypeDate(property.type);\n\t\t\tif (propertyName && isPropertyTypeDate) {\n\t\t\t\tconst configData = getDateFormatterConfiguration(propertyName, property.type, i18nModel) as FormatterConfiguration;\n\t\t\t\tdateFormatterConfig.push(configData);\n\t\t\t}\n\t\t}\n\t}\n\treturn dateFormatterConfig;\n};\n \n/**\n * Generates configuration data for a given property based on its type.\n *\n * @param {string} propertyName - The name of the property.\n * @param {string} propertyType - The type of the property (e.g., \"Edm.DateTimeOffset\", \"Edm.TimeOfDay\", \"Edm.DateTime\", \"Edm.Date\").\n * @param {ResourceBundle} i18nModel - The internationalization model used to get localized text.\n * @returns {FormatterConfiguration} The configuration data for the specified property.\n */\nfunction getDateFormatterConfiguration(propertyName: string, propertyType: string, i18nModel: ResourceBundle) {\n\tif (propertyType === \"Edm.DateTimeOffset\" || propertyType === \"Edm.TimeOfDay\") {\n\t\tconst configData: FormatterConfiguration = {\n\t\t\tproperty: propertyName,\n\t\t\tformatterName: \"format.dateTime\",\n\t\t\tdisplayName: i18nModel.getText(\"FORMAT_DATETIME\") ?? \"\",\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"relative\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"RELATIVE\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"UTC\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"UTC\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false,\n\t\t\t\t\t\t\tselected: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t};\n\t\treturn configData;\n\t} else if (propertyType === \"Edm.DateTime\" || propertyType === \"Edm.Date\") {\n\t\tconst configData: FormatterConfiguration = {\n\t\t\tproperty: propertyName,\n\t\t\tformatterName: \"format.date\",\n\t\t\tdisplayName: i18nModel.getText(\"FORMAT_DATE\") ?? \"\",\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"UTC\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"UTC\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false,\n\t\t\t\t\t\t\tselected: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t};\n\t\treturn configData;\n\t}\n}\n\ntype SupportedPropertyTypes = \"boolean\" | \"number\" | \"enum\" | \"string\" | \"object\";\nexport type SingleFormatterProperty = {\n\tname: string;\n\tdisplayName: string;\n\ttype: SupportedPropertyTypes;\n\tdefaultValue?: boolean | number | string;\n\tselected?: boolean;\n\tvalue?: string;\n\tselectedKey?: string;\n\tdefaultSelectedKey?: string;\n\tbIsProperty?: boolean;\n\toptions?: Array<{\n\t\tname: string;\n\t\tvalue: string;\n\t}>;\n};\n\ntype SingleFormatterParameter = {\n\tname: string;\n\tdisplayName: string;\n\ttype: SupportedPropertyTypes;\n\tdefaultValue?: string;\n\tvalue?: string;\n\tselectedKey?: string;\n\tselected?: boolean;\n\tproperties?: Array<SingleFormatterProperty>;\n\tdefaultSelectedKey?: string;\n\toptions?: Array<{\n\t\tname: string;\n\t\tvalue: string;\n\t}>;\n};\n\nexport type FormatterConfiguration = {\n\tproperty?: string;\n\tformatterName: string;\n\tdisplayName: string;\n\tparameters?: Array<SingleFormatterParameter>;\n\ttype: string;\n\tvisible: boolean;\n};\n\nexport type FormatterConfigurationMap = Array<FormatterConfiguration>;\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":101,"column":0},"map":{"version":3,"file":"I18nHelper.js","names":["sap","ui","define","Log","jQuery","i18nMap","i18nPayload","I18nClassificationsMap","Title","Label","Button","hasBinding","propertyValue","startsWith","isJSONData","value","JSON","parse","Error","getPropertyValue","partialManifest","key","updatedKey","replaceAll","seti18nValueToMap","text","trim","length","inserti18nKeysManifest","integrationCardManifest","i18nKey","split","reduce","number","textClassification","keyType","comment","inserti18nPayLoad","type","description","groupPath","payload","push","writei18nPayload","ajax","url","headers","data","stringify","success","info","error","reseti18nProperties","createi18nKeysForActionParameters","index","actionPath","adaptiveCardAction","adaptiveCardActionParameters","actionParameters","forEach","actionParameter","idx","actionParameterLabel","label","actionParameterErrorMsg","errorMessage","actionParameterPlaceholder","placeholder","i18nKeyActionParamLabel","actionParameterDescription","actionParameterLabelPath","i18nKeyActionParamErrorMsg","actionParameterErrorMsgDescription","actionParameterErrorMsgPath","i18nKeyActionParamPlaceholder","actionParameterPlaceholderDescription","actionParameterPlaceholderPath","createI18nKeysForCardActions","cardManifest","actionsStrip","footer","actionPathPrefix","action","actions","parameters","replace","configuration","_adaptiveFooterActionParameters","adaptiveCardActionDescription","i18nKeyCardAction","AdaptiveCardActionTextpath","i18nKeyOkButton","okButtonDescription","okButtonPath","triggerActionText","createKeysFromManifestData","manifestHeader","header","manifestGroup","content","groups","manifestHeaderKeys","Object","keys","propertyType","propertyTypes","includes","property","toUpperCase","slice","items","configurationItem","createKeysFromGroup","title","path","groupLabelPath","itemIndex","groupIndex","groupType","itemsPath","updateManifestAppProperties","manifest","app","headerInfo","subTitle","UOMExists","unitOfMeasurement","resolveI18nTextFromResourceModel","resourceModel","endsWith","getObject","createAndStoreGeneratedi18nKeys","__exports","__esModule"],"sources":["I18nHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { AdaptiveCardAction, CardManifest, Group, GroupItems, ObjectContent } from \"sap/ui/integration/widgets/Card\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\n\ntype I18nObject = {\n\t[key: string]: string;\n};\n\ntype I18nClassifications = {\n\t[key: string]: string;\n};\n\ntype I18nProperty = {\n\tcomment: string;\n\tkey: string;\n\tvalue: string;\n};\n\ntype ManifestPartial = {\n\t[key: string]: ManifestPartial | string | number | boolean | undefined;\n};\n\nlet i18nMap: I18nObject = {};\nlet i18nPayload: Array<I18nProperty> = [];\n\nconst I18nClassificationsMap: I18nClassifications = {\n\tTitle: \"XTIT:\",\n\tLabel: \"XFLD:\",\n\tButton: \"XBUT:\",\n\t\"Group header\": \"XGRP:\"\n};\n\n/**\n * This function checks if the property value has a binding\n *\n * @param {string} propertyValue\n * @returns {boolean}\n */\nfunction hasBinding(propertyValue: string) {\n\treturn propertyValue && propertyValue.startsWith(\"{\");\n}\n\n/**\n * Function to check if the given data is of type JSON or not\n *\n * @param value\n * @returns\n */\nfunction isJSONData(value: string) {\n\ttry {\n\t\treturn JSON.parse(value) ? true : false;\n\t} catch (Error) {\n\t\treturn false;\n\t}\n}\n\n/**\n * This function gets the property value from the card manifest/sub-manifest\n * - In case if the property value is an object then return the object\n * - In case if the property value is not an object then return the object and key\n * - Added handling for keys with multiple dots should be passsed as \"parameters.[com/sap/property].name\"\n *\n * @param {object} obj The  object\n * @param {string} key\n * @returns {object}\n */\nfunction getPropertyValue(partialManifest: ManifestPartial, key: string) {\n\tif (isJSONData(key)) {\n\t\tconst updatedKey = JSON.parse(key.replaceAll(/\\//g, \".\"))?.[0];\n\t\tkey = updatedKey ? updatedKey : key;\n\t}\n\n\tif (key && typeof partialManifest[key] === \"object\" && key != \"mainIndicator\") {\n\t\treturn partialManifest[key];\n\t}\n\n\treturn {\n\t\tpartialManifest,\n\t\tkey\n\t};\n}\n\n/**\n * This function sets i18n values to a map\n *  - In case if it is a new key create a key in map.\n *  - In case if it is an existsinig one update it.\n *\n * @param {string} key\n * @param {string} value\n * @param {string} text\n */\nfunction seti18nValueToMap(key: string, value: string, text?: string) {\n\tif (!text?.trim().length) {\n\t\tdelete i18nMap[key];\n\t\treturn;\n\t}\n\ti18nMap[key] = \"{{CardGenerator\" + value + \"}}\";\n}\n\n/**\n * This function updates i18n keys to card manifest\n *\n * @param {object} integrationCardManifest The manifest object\n */\nfunction inserti18nKeysManifest(integrationCardManifest: CardManifest) {\n\tfor (const i18nKey in i18nMap) {\n\t\tconst { partialManifest, key } = i18nKey.split(\".\").reduce(getPropertyValue, integrationCardManifest[\"sap.card\"]);\n\n\t\tif (partialManifest[key]?.number && i18nMap[i18nKey]) {\n\t\t\tpartialManifest[key].number = i18nMap[i18nKey];\n\t\t} else if (partialManifest?.[key]?.trim().length > 0) {\n\t\t\tpartialManifest[key] = i18nMap[i18nKey];\n\t\t}\n\t}\n}\n\n/**\n * Gets the text classification for given i18n key and value\n *\n * @param {string} keyType Type of key\n * @param {string} comment The comments which needs to be added\n * @returns {string} The text classification string\n */\nfunction textClassification(keyType: string, comment: string): string {\n\tconst key = I18nClassificationsMap[keyType] || \"\";\n\treturn key + \" \" + comment;\n}\n\n/**\n * This function sets i18n payload to an array\n *\n * @param {string} text\n * @param {string} key\n * @param {string} type\n * @param {string} description\n * @param {string} groupPath\n */\nfunction inserti18nPayLoad(text: string, key: string, type: string, description: string, groupPath?: string) {\n\tif (text.trim().length === 0) {\n\t\treturn;\n\t}\n\tconst payload: I18nProperty = {\n\t\tcomment: textClassification(type, description),\n\t\tkey: \"CardGenerator\" + (groupPath ? key + groupPath : key),\n\t\tvalue: text\n\t};\n\ti18nPayload.push(payload);\n}\n\n/**\n * This function will create an ajax call to save i18n payload\n */\nfunction writei18nPayload() {\n\tif (i18nPayload.length === 0) {\n\t\treturn;\n\t}\n\n\tjQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: \"/editor/i18n\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tdata: JSON.stringify(i18nPayload),\n\t\tsuccess: function () {\n\t\t\tLog.info(\"i18n was successfully saved.\");\n\t\t},\n\t\terror: function () {\n\t\t\tLog.error(\"i18n could not be saved.\");\n\t\t}\n\t});\n}\n\n/**\n * This function resets i18nPayload and i18nMap\n *\n */\nfunction reseti18nProperties() {\n\ti18nPayload = [];\n\ti18nMap = {};\n}\n\n/**\n *\n * Creates i18n keys for the action parameters of an adaptive card action.\n *\n * For each action parameter the label value will be different so i18n key will be created for each action parameter label.\n * The placeholder and error message will be the same for all action parameters so i18n key will be created only once.\n *\n * @param {number} index - The index of the current action in the adaptive card actions array.\n * @param {string} actionPath - The path to the current action in the configuration parameters.\n * @param {AdaptiveCardAction} [adaptiveCardAction] - The adaptive card action object containing action parameters.\n */\nfunction createi18nKeysForActionParameters(index: number, actionPath: string, adaptiveCardAction?: AdaptiveCardAction) {\n\tconst adaptiveCardActionParameters = adaptiveCardAction?.actionParameters;\n\n\tif (adaptiveCardActionParameters?.length) {\n\t\tadaptiveCardActionParameters.forEach((actionParameter, idx) => {\n\t\t\tconst actionParameterLabel = actionParameter?.label;\n\t\t\tconst actionParameterErrorMsg = actionParameter?.errorMessage;\n\t\t\tconst actionParameterPlaceholder = actionParameter?.placeholder;\n\n\t\t\tif (actionParameterLabel) {\n\t\t\t\tconst i18nKeyActionParamLabel = `_AdaptiveCardAction_${index}_ActionParameterLabel_${idx}`;\n\t\t\t\tconst actionParameterDescription = `Label for Action Parameter ${actionParameterLabel} - Created by Card Generator`;\n\t\t\t\tconst actionParameterLabelPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.label`;\n\t\t\t\tseti18nValueToMap(actionParameterLabelPath, i18nKeyActionParamLabel, actionParameterLabel);\n\t\t\t\tinserti18nPayLoad(actionParameterLabel, i18nKeyActionParamLabel, \"Label\", actionParameterDescription);\n\t\t\t}\n\n\t\t\tif (actionParameterErrorMsg) {\n\t\t\t\tconst i18nKeyActionParamErrorMsg = `_AdaptiveCardAction_ActionParameterErrorMsg`;\n\t\t\t\tconst actionParameterErrorMsgDescription = `Error message for Action Parameters - Created by Card Generator`;\n\t\t\t\tconst actionParameterErrorMsgPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.errorMessage`;\n\t\t\t\tseti18nValueToMap(actionParameterErrorMsgPath, i18nKeyActionParamErrorMsg, actionParameterErrorMsg);\n\t\t\t\tif (idx === 0 && index === 0) {\n\t\t\t\t\tinserti18nPayLoad(actionParameterErrorMsg, i18nKeyActionParamErrorMsg, \"Label\", actionParameterErrorMsgDescription);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionParameterPlaceholder && idx === 0) {\n\t\t\t\tconst i18nKeyActionParamPlaceholder = `_AdaptiveCardAction_ActionParameterPlaceholder`;\n\t\t\t\tconst actionParameterPlaceholderDescription = `Placeholder for Action Parameters - Created by Card Generator`;\n\t\t\t\tconst actionParameterPlaceholderPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.placeholder`;\n\t\t\t\tseti18nValueToMap(actionParameterPlaceholderPath, i18nKeyActionParamPlaceholder, actionParameterPlaceholder);\n\t\t\t\tif (idx === 0 && index === 0) {\n\t\t\t\t\tinserti18nPayLoad(\n\t\t\t\t\t\tactionParameterPlaceholder,\n\t\t\t\t\t\ti18nKeyActionParamPlaceholder,\n\t\t\t\t\t\t\"Label\",\n\t\t\t\t\t\tactionParameterPlaceholderDescription\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n *\n * Creates i18n keys for card actions based on the card manifest.\n *\n * Takes care of creating i18n key for the action label and the OK button text which will be used when action type is Submit.\n * The action text for Integration card is also replaced with same i18n key that is created for the adaptive card action.\n *\n * @param {CardManifest} cardManifest - The card manifest.\n */\nfunction createI18nKeysForCardActions(cardManifest: CardManifest) {\n\tconst actionsStrip = cardManifest[\"sap.card\"]?.footer?.actionsStrip;\n\tconst actionPathPrefix = \"{{parameters.footerActionParameters.\";\n\n\tactionsStrip?.forEach((action, index) => {\n\t\tlet actionPath = action?.actions[0]?.parameters?.replace(actionPathPrefix, \"\").replace(\"}}\", \"\") ?? \"\";\n\t\tconst adaptiveCardAction = cardManifest[\"sap.card\"]?.configuration?.parameters?._adaptiveFooterActionParameters?.[actionPath];\n\n\t\tif (adaptiveCardAction?.label) {\n\t\t\tactionPath = actionPath.replaceAll(/\\./g, \"/\");\n\t\t\tconst adaptiveCardActionDescription = `Label for Action ${adaptiveCardAction?.label} - Created by Card Generator`;\n\t\t\tconst i18nKeyCardAction = `_AdaptiveCardActions_${index}_Label`;\n\t\t\tconst AdaptiveCardActionTextpath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].label`;\n\t\t\taction.text = \"{{CardGenerator\" + i18nKeyCardAction + \"}}\";\n\n\t\t\tseti18nValueToMap(AdaptiveCardActionTextpath, i18nKeyCardAction, adaptiveCardAction?.label);\n\t\t\tinserti18nPayLoad(adaptiveCardAction?.label, i18nKeyCardAction, \"Label\", adaptiveCardActionDescription);\n\n\t\t\tconst i18nKeyOkButton = \"_AdaptiveCardActions_OkButton\";\n\t\t\tconst okButtonDescription = \"Label for OK Button - Created by Card Generator\";\n\t\t\tconst okButtonPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].triggerActionText`;\n\t\t\tseti18nValueToMap(okButtonPath, i18nKeyOkButton, adaptiveCardAction?.triggerActionText);\n\n\t\t\tif (index === 0) {\n\t\t\t\tinserti18nPayLoad(adaptiveCardAction?.triggerActionText, i18nKeyOkButton, \"Button\", okButtonDescription);\n\t\t\t}\n\t\t}\n\n\t\tcreatei18nKeysForActionParameters(index, actionPath, adaptiveCardAction);\n\t});\n}\n\n/**\n * This function creates i18n keys from modal data\n *  - In case if text does not start with \"{\" create a key and set key and value to i18n map, also upload the i18n payload to the array.\n *  - In case if it is already a key then no need to create a new key.\n *\n * @param {CardManifest} cardManifest\n */\nfunction createKeysFromManifestData(cardManifest: CardManifest) {\n\tconst manifestHeader = cardManifest[\"sap.card\"].header;\n\tconst manifestGroup = (cardManifest[\"sap.card\"].content as ObjectContent).groups;\n\tconst manifestHeaderKeys = Object.keys(manifestHeader) as Array<keyof typeof manifestHeader>;\n\n\tmanifestHeaderKeys.forEach((propertyType) => {\n\t\tconst propertyTypes = [\"title\", \"subTitle\", \"unitOfMeasurement\", \"mainIndicator\"];\n\t\tif (propertyTypes.includes(propertyType)) {\n\t\t\tconst property = propertyType === \"mainIndicator\" ? manifestHeader[propertyType]?.number : manifestHeader[propertyType];\n\n\t\t\tif (hasBinding(property)) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconst key = `header.${propertyType}`;\n\t\t\t\tconst value = `Header${propertyType[0].toUpperCase() + propertyType.slice(1)}`;\n\t\t\t\tconst description = `${value} for ${property} - Created by Card Generator`;\n\n\t\t\t\tseti18nValueToMap(key, value, property);\n\t\t\t\tinserti18nPayLoad(property, value, \"Title\", description);\n\t\t\t}\n\t\t}\n\t});\n\n\tmanifestGroup.forEach((configuration: Group, index: number) => {\n\t\tconfiguration.items.forEach((configurationItem: GroupItems, idx: number) => {\n\t\t\tcreateKeysFromGroup(configurationItem.label, idx, index, \"label\");\n\n\t\t\tif (!hasBinding(configurationItem.value)) {\n\t\t\t\tcreateKeysFromGroup(configurationItem.value, idx, index, \"value\");\n\t\t\t}\n\t\t});\n\t\tconst key = \"GroupHeader\";\n\t\tconst description = `${key} for ${configuration.title} - Created by Card Generator`;\n\t\tconst path = `_Groups_${index}`;\n\t\tconst groupLabelPath = `content.groups.${index}.title`;\n\n\t\tseti18nValueToMap(groupLabelPath, key + path, configuration.title);\n\t\tinserti18nPayLoad(configuration.title, key, \"Group header\", description, path);\n\t});\n\n\tcreateI18nKeysForCardActions(cardManifest);\n}\n\n/**\n * This function creates i18n keys from manifest group data\n *  - In case if text does not start with \"{\" create a key and set key and value to i18n map, also upload the i18n payload to the array.\n *  - In case if it is already a key then no need to create a new key.\n *\n * @param {string} configurationItem\n * @param {number} itemIndex\n * @param {number} groupIndex\n * @param {string} type\n */\nfunction createKeysFromGroup(configurationItem: string, itemIndex: number, groupIndex: number, type: string) {\n\tconst groupType = \"Label\";\n\tconst key = `GroupProperty${groupType}`;\n\tconst description = `${key} for ${configurationItem} - Created by Card Generator`;\n\tconst path = `_Groups_${groupIndex}_Items_${itemIndex}`;\n\tconst itemsPath = `content.groups.${groupIndex}.items.${itemIndex}.${type}`;\n\n\tseti18nValueToMap(itemsPath, key + path, configurationItem);\n\tinserti18nPayLoad(configurationItem, key, groupType, description, path);\n}\n\nfunction updateManifestAppProperties(manifest: CardManifest) {\n\tconst app = manifest[\"sap.app\"];\n\tconst headerInfo = manifest[\"sap.card\"].header;\n\n\tif (app.title !== headerInfo.title && headerInfo.title?.startsWith(\"{{\")) {\n\t\tapp.title = headerInfo.title;\n\t}\n\tif (app.subTitle !== headerInfo.subTitle && headerInfo.subTitle?.startsWith(\"{{\")) {\n\t\tconst UOMExists: boolean = headerInfo.unitOfMeasurement ? true : false;\n\t\tapp.subTitle = UOMExists ? headerInfo.subTitle + \" | \" + headerInfo.unitOfMeasurement : headerInfo.subTitle;\n\t}\n}\n\n/**\n * This function resolves i18n text from resource model\n * - In case if key exists in resource model then return the object from resource model\n * - In case if key does not exist in resource model then return the key\n * @param key\n */\nexport function resolveI18nTextFromResourceModel(key: string, resourceModel: ResourceModel) {\n\tif (key.startsWith(\"{{\") && key.endsWith(\"}}\")) {\n\t\treturn resourceModel.getObject(key.replace(\"{{\", \"\").replace(\"}}\", \"\"));\n\t}\n\n\treturn key;\n}\n\n/**\n * This function creates i18n keys from card manifest data and stores it in i18n map and i18n payload\n * - Further it will update manifest with i18n keys\n * - and create an ajax call to save i18n payload\n * @param cardManifest\n */\nexport function createAndStoreGeneratedi18nKeys(cardManifest: CardManifest) {\n\tcreateKeysFromManifestData(cardManifest);\n\tinserti18nKeysManifest(cardManifest);\n\tupdateManifestAppProperties(cardManifest);\n\twritei18nPayload();\n\treseti18nProperties();\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":108,"column":0},"map":{"version":3,"file":"IntegrationCardHelper.js","names":["sap","ui","define","sap_cards_ap_generator_odata_v2_MetadataAnalyzer","sap_cards_ap_generator_odata_v4_MetadataAnalyzer","VersionInfo","CoreElement","V2OdataUtils","V4ODataUtils","___odata_ODataUtils","___types_CommonTypes","___utils_CommonUtils","___ApplicationInfo","___Batch","___I18nHelper","___PropertyExpression","enhanceManifestWithInsights","mCardManifest","rootComponent","Promise","resolve","sapAppId","getManifest","id","load","library","then","_VersionInfo$load","sapCoreVersionInfo","templateName","parentAppId","cardType","versions","ui5","version","buildTimestamp","e","reject","getPropertyReference","getPropertyReferenceKey","getDataType","isODataV4Model","ColorIndicator","getColorForGroup","ApplicationInfo","ODataModelVersion","updateManifestWithExpandQueryParams","updateManifestWithSelectQueryParams","resolveI18nTextFromResourceModel","extractPathExpressionWithoutUOM","extractPathWithoutUOM","extractPropertyConfigurationWithoutTextArrangement","getTextArrangementFromCardManifest","hasFormatter","isExpression","isI18nExpression","updateAndGetSelectedFormatters","manifest","formatterConfigurationFromCardManifest","createInitialManifest","props","title","subTitle","description","service","serviceModel","entitySetName","data","bODataV4","dataPath","dataPathHeader","propertyReferenceKeys","entityKeyPropertiesParameters","forEach","keyProp","name","type","value","entityKeyProperties","map","_version","i18n","applicationVersion","technology","icons","icon","extension","configuration","parameters","_contentSelectQuery","length","join","_headerSelectQuery","_contentExpandQuery","_headerExpandQuery","_entitySet","destinations","defaultUrl","csrfTokens","token1","request","url","method","headers","batch","header","getHeaderBatchUrl","Accept","retryAfter","content","getContentBatchUrl","path","unitOfMeasurement","mainIndicator","number","unit","groups","contentDensities","compact","cozy","dependencies","libs","lazy","getObjectPageContext","entitySet","getInstance","fetchDetails","appModel","getModel","contextParameters","keyProperties","property","parameter","formatLiteral","push","formatValue","getCurrentCardManifest","renderCardPreview","newManifest","oModel","oCard","getElementById","setBaseUrl","setManifest","refresh","updateCardGroups","configurationGroups","getProperty","advancedPanelCriticallity","items","filter","configurationItem","matchedCriticallity","columnItem","updatedColorState","criticality","criticalityValue","activeCalculation","item","label","state","hasActions","actions","resolvePropertyLabelFromExpression","resourceModel","properties","propertyPath","find","labelWithValue","formatterExpression","selectedFormatter","handleFormatter","getMainIndicator","mManifest","mainIndicatorKey","trendOptions","referenceValue","downDifference","upDifference","criticalityOptions","updateCriticalityBasedOnGroups","mainIndicatorStatusKey","mainIndicatorNavigationSelectedKey","navigationValue","formatterExpressions","trend","trendValue","regex","match","criticalityConfig","updateCriticalityOptions","includes","split","group","criticallityState","getCriticallityStateForGroup","itemExists","some","option","None","getSideIndicators","sideIndicators","targetValue","targetUnit","deviationValue","deviationUnit","targetIndicator","deviationIndicator","formatter","f","getGroupItemValue","getCardGroups","groupItem","isEnabled","isNavigationEnabled","enhanceManifestWithConfigurationParameters","oDialogModel","sapCard","applicationInfo","getRootComponent","odataModel","V4","configurationParameters","textArrangements","propertyFormatting","arrangement","Object","keys","arrangementType","arrangements","text","addQueryParametersToManifest","cardManifest","cardManifestCopy","JSON","parse","stringify","batchRequest","selectQueryHeader","selectQueryContent","expandQueryHeader","expandQueryContent","headerUrl","contentUrl","indexOf","configParameters","updateConfigurationParametersWithKeyProperties","updateHeaderDataPath","headerData","updateExistingCardManifest","undefined","componentName","parseCard","integrationCardManifest","subtitle","uom","splice","textArrangementsFromCardManifest","headerUOM","mainIndicatorOptions","sideIndicatorOptions","__exports","__esModule"],"sources":["IntegrationCardHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getPropertyReference } from \"sap/cards/ap/generator/odata/v2/MetadataAnalyzer\";\nimport { getPropertyReferenceKey } from \"sap/cards/ap/generator/odata/v4/MetadataAnalyzer\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Component from \"sap/ui/core/Component\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, { CardManifest, Group, GroupItems, ObjectContent, PropertyFormattingParameters } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport V2OdataUtils from \"sap/ui/model/odata/ODataUtils\";\nimport { default as V2ODataModel } from \"sap/ui/model/odata/v2/ODataModel\";\nimport { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport V4ODataUtils from \"sap/ui/model/odata/v4/ODataUtils\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport { getDataType, isODataV4Model } from \"../odata/ODataUtils\";\nimport { ColorIndicator } from \"../types/CommonTypes\";\nimport { getColorForGroup } from \"../utils/CommonUtils\";\nimport { ApplicationInfo, LibVersionInfo, ODataModelVersion } from \"./ApplicationInfo\";\nimport { updateManifestWithExpandQueryParams, updateManifestWithSelectQueryParams } from \"./Batch\";\nimport type { CriticalityOptions, SideIndicatorOptions, TrendOptions } from \"./CardGeneratorModel\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"./Formatter\";\nimport { resolveI18nTextFromResourceModel } from \"./I18nHelper\";\nimport {\n\textractPathExpressionWithoutUOM,\n\textractPathWithoutUOM,\n\textractPropertyConfigurationWithoutTextArrangement,\n\tgetTextArrangementFromCardManifest,\n\thasFormatter,\n\tisExpression,\n\tisI18nExpression,\n\tupdateAndGetSelectedFormatters\n} from \"./PropertyExpression\";\n\nexport type ParsedManifest = {\n\ttitle: string;\n\tsubtitle: string;\n\theaderUOM: string;\n\tmainIndicatorOptions: {\n\t\tmainIndicatorStatusKey: string;\n\t\tcriticalityOptions: Array<object>;\n\t\tmainIndicatorNavigationSelectedKey: string;\n\t\tnavigationValue: string;\n\t\ttrendOptions: TrendOptions;\n\t};\n\tsideIndicatorOptions: SideIndicatorOptions;\n\tgroups: Array<object>;\n\tformatterConfigurationFromCardManifest: FormatterConfigurationMap;\n\ttextArrangementsFromCardManifest: Array<ArrangementOptions>;\n};\nlet manifest: CardManifest;\nconst formatterConfigurationFromCardManifest: FormatterConfigurationMap = [];\n\nexport function createInitialManifest(props: any) {\n\tconst { title, subTitle, description, service, serviceModel, sapAppId, sapCoreVersionInfo, entitySetName, data } = props;\n\tconst bODataV4 = isODataV4Model(serviceModel);\n\tconst dataPath = bODataV4 ? \"/content/\" : \"/content/d/\";\n\tconst dataPathHeader = bODataV4 ? \"/header/\" : \"/header/d/\";\n\tconst propertyReferenceKeys = bODataV4\n\t\t? getPropertyReferenceKey(serviceModel, entitySetName)\n\t\t: getPropertyReference(serviceModel, entitySetName);\n\tconst entityKeyPropertiesParameters: Record<string, { type: string; value: string }> = {};\n\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tentityKeyPropertiesParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n\n\tconst entityKeyProperties = propertyReferenceKeys.map((keyProp) => keyProp.name);\n\n\tmanifest = {\n\t\t_version: \"1.15.0\",\n\t\t\"sap.app\": {\n\t\t\tid: sapAppId,\n\t\t\ttype: \"card\",\n\t\t\ti18n: \"../../../i18n/i18n.properties\",\n\t\t\ttitle: title,\n\t\t\tsubTitle: subTitle,\n\t\t\tdescription: description,\n\t\t\tapplicationVersion: {\n\t\t\t\tversion: \"1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"sap.ui\": {\n\t\t\ttechnology: \"UI5\",\n\t\t\ticons: {\n\t\t\t\ticon: \"sap-icon://switch-classes\"\n\t\t\t}\n\t\t},\n\t\t\"sap.card\": {\n\t\t\textension: \"module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension\",\n\t\t\ttype: \"Object\",\n\t\t\tconfiguration: {\n\t\t\t\tparameters: {\n\t\t\t\t\t...entityKeyPropertiesParameters,\n\t\t\t\t\t_contentSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_contentExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_entitySet: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: entitySetName\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdestinations: {\n\t\t\t\t\tservice: {\n\t\t\t\t\t\tname: \"(default)\",\n\t\t\t\t\t\tdefaultUrl: \"/\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcsrfTokens: {\n\t\t\t\t\ttoken1: {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\turl: `{{destinations.service}}${service}`,\n\t\t\t\t\t\t\t\tmethod: \"HEAD\",\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\trequest: {\n\t\t\t\t\turl: `{{destinations.service}}${service}/$batch`,\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"X-CSRF-Token\": \"{{csrfTokens.token1}}\",\n\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t},\n\t\t\t\t\tbatch: {\n\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getHeaderBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tretryAfter: 30\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getContentBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\theader: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPathHeader\n\t\t\t\t},\n\t\t\t\ttype: \"Numeric\",\n\t\t\t\ttitle: title,\n\t\t\t\tsubTitle: subTitle,\n\t\t\t\tunitOfMeasurement: \"\",\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber: \"\",\n\t\t\t\t\tunit: \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPath\n\t\t\t\t},\n\t\t\t\tgroups: []\n\t\t\t}\n\t\t},\n\t\t\"sap.ui5\": {\n\t\t\t_version: \"1.1.0\",\n\t\t\tcontentDensities: {\n\t\t\t\tcompact: true,\n\t\t\t\tcozy: true\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\tlibs: {\n\t\t\t\t\t\"sap.insights\": {\n\t\t\t\t\t\tlazy: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"sap.insights\": {\n\t\t\ttemplateName: \"ObjectPage\",\n\t\t\tparentAppId: sapAppId,\n\t\t\tcardType: \"LEAN_DT\",\n\t\t\tversions: {\n\t\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t\t}\n\t\t}\n\t};\n\treturn manifest;\n}\n\nfunction getObjectPageContext() {\n\tconst { rootComponent, entitySet } = ApplicationInfo.getInstance().fetchDetails();\n\tconst appModel = rootComponent.getModel() as V2ODataModel | V4ODataModel;\n\tconst contextParameters: string[] = [];\n\tconst bODataV4 = isODataV4Model(appModel);\n\n\tif (bODataV4) {\n\t\tconst keyProperties = getPropertyReferenceKey(appModel as V4ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V4ODataUtils.formatLiteral(`{{parameters.${property.name}}}`, property.type);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t} else {\n\t\tconst keyProperties = getPropertyReference(appModel as V2ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V2OdataUtils.formatValue(`{{parameters.${property.name}}}`, property.type, true);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t}\n\n\treturn contextParameters.join(\",\");\n}\n\nfunction getHeaderBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._headerSelectQuery}}{{parameters._headerExpandQuery}}`;\n}\n\nfunction getContentBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._contentSelectQuery}}{{parameters._contentExpandQuery}}`;\n}\n\nexport function getCurrentCardManifest(): CardManifest {\n\treturn manifest || {};\n}\n\n/**\n * Render integration card preview\n *\n * @param {CardManifest} newManifest\n */\nexport function renderCardPreview(newManifest: CardManifest, oModel?: JSONModel) {\n\tmanifest = { ...newManifest };\n\tupdateManifestWithSelectQueryParams(manifest);\n\toModel && updateManifestWithExpandQueryParams(manifest);\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tif (oCard) {\n\t\toCard.setBaseUrl(\"./\");\n\t\toCard.setManifest(manifest);\n\t\toCard.refresh();\n\t}\n}\n\nexport function updateCardGroups(oModel: JSONModel) {\n\tconst configurationGroups: Group[] = oModel.getProperty(\"/configuration/groups\");\n\tconst advancedPanelCriticallity = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\n\tconst groups = configurationGroups.map(function (configuration) {\n\t\tconst items = configuration?.items\n\t\t\t?.filter(function (configurationItem) {\n\t\t\t\treturn configurationItem.name;\n\t\t\t})\n\t\t\t.map((configurationItem) => {\n\t\t\t\tconst matchedCriticallity = advancedPanelCriticallity?.filter(\n\t\t\t\t\t(columnItem: CriticalityOptions) => columnItem.name === configurationItem.name\n\t\t\t\t);\n\t\t\t\tlet updatedColorState;\n\t\t\t\tif (matchedCriticallity?.[0]?.criticality) {\n\t\t\t\t\tconst criticalityValue = matchedCriticallity[0]?.activeCalculation\n\t\t\t\t\t\t? matchedCriticallity[0]\n\t\t\t\t\t\t: matchedCriticallity[0]?.criticality;\n\t\t\t\t\tupdatedColorState = getColorForGroup(criticalityValue);\n\t\t\t\t}\n\t\t\t\tconst item: any = {\n\t\t\t\t\tlabel: configurationItem.label,\n\t\t\t\t\tvalue: configurationItem.value,\n\t\t\t\t\tname: configurationItem.name\n\t\t\t\t};\n\t\t\t\tif (updatedColorState) {\n\t\t\t\t\titem.state = updatedColorState;\n\t\t\t\t\titem.type = \"Status\";\n\t\t\t\t}\n\t\t\t\tif (configurationItem.hasActions) {\n\t\t\t\t\titem[\"actions\"] = configurationItem.actions;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\t\treturn {\n\t\t\ttitle: configuration.title,\n\t\t\titems: items ? items : []\n\t\t};\n\t});\n\t(manifest[\"sap.card\"].content as ObjectContent).groups = groups;\n\trenderCardPreview(manifest, oModel);\n}\n\n/**\n *  Resolves the card header properties from stored manifest\n *  - If path is a string, return the resolved i18n text\n * \t- If path is an expression, resolve the expression then return the labelWithValue of the property\n *  - If path is an expression with formatter, update the formatter configuration and return the labelWithValue of the property\n * @param path\n * @param resourceModel\n * @param properties\n * @returns\n */\nexport function resolvePropertyLabelFromExpression(path: string, resourceModel: ResourceModel, properties: PropertyInfoMap) {\n\tif (isI18nExpression(path)) {\n\t\treturn resolveI18nTextFromResourceModel(path, resourceModel);\n\t}\n\n\tif (isExpression(path) && !hasFormatter(path)) {\n\t\tconst propertyPath = extractPathWithoutUOM(path);\n\t\treturn properties.find((property) => property.name === propertyPath)?.labelWithValue ?? \"\";\n\t}\n\n\tif (isExpression(path) && hasFormatter(path)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(path);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn properties.find((property) => property.name === selectedFormatter.property)?.labelWithValue ?? \"\";\n\t}\n\n\treturn path;\n}\n\nfunction getMainIndicator(mManifest: CardManifest) {\n\tconst mainIndicator = mManifest[\"sap.card\"].header.mainIndicator;\n\tlet mainIndicatorKey = \"\";\n\tlet trendOptions: TrendOptions = {\n\t\treferenceValue: \"\",\n\t\tdownDifference: \"\",\n\t\tupDifference: \"\"\n\t};\n\tconst criticalityOptions: CriticalityOptions[] = [];\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\n\tif (groups.length > 0) {\n\t\tupdateCriticalityBasedOnGroups(mManifest, criticalityOptions);\n\t}\n\n\tif (!mainIndicator || !mainIndicator.number) {\n\t\treturn {\n\t\t\tmainIndicatorStatusKey: \"\",\n\t\t\tmainIndicatorNavigationSelectedKey: \"\",\n\t\t\tcriticalityOptions,\n\t\t\tnavigationValue: \"\",\n\t\t\ttrendOptions\n\t\t};\n\t}\n\n\tconst { propertyPath, formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(mainIndicator.number, mManifest);\n\tconst state = mainIndicator.state;\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\tif (isExpression(propertyPath) && !hasFormatter(propertyPath)) {\n\t\tmainIndicatorKey = extractPathWithoutUOM(propertyPath);\n\t}\n\tif (mainIndicator.trend && mainIndicator.trend !== \"None\") {\n\t\tconst trendValue = mainIndicator.trend;\n\t\tconst regex = /\"referenceValue\":(\\d+),\"downDifference\":(\\d+),\"upDifference\":(\\d+)/;\n\t\tconst match = trendValue.match(regex);\n\n\t\tif (match) {\n\t\t\ttrendOptions = {\n\t\t\t\treferenceValue: match[1] || \"\",\n\t\t\t\tdownDifference: match[2] || \"\",\n\t\t\t\tupDifference: match[3] || \"\"\n\t\t\t};\n\t\t}\n\t}\n\n\tif (isExpression(propertyPath) && hasFormatter(propertyPath)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(propertyPath);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tmainIndicatorKey = selectedFormatter.property || \"\";\n\t}\n\tlet criticalityConfig: CriticalityOptions = {\n\t\tcriticality: \"\",\n\t\tname: \"\",\n\t\tactiveCalculation: false\n\t};\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tcriticalityConfig = {\n\t\t\tcriticality: \"{\" + selectedFormatter.property + \"}\",\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t} else if (state && state !== \"None\") {\n\t\tcriticalityConfig = {\n\t\t\tcriticality: state,\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t}\n\tif (criticalityConfig.name.length) {\n\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t}\n\n\tlet mainIndicatorNavigationSelectedKey = \"\";\n\tlet mainIndicatorStatusKey = mainIndicatorKey;\n\tif (mainIndicatorKey.includes(\"/\")) {\n\t\tmainIndicatorStatusKey = mainIndicatorKey.split(\"/\")[0];\n\t\tmainIndicatorNavigationSelectedKey = mainIndicatorKey.split(\"/\")[1];\n\t}\n\treturn {\n\t\tmainIndicatorStatusKey,\n\t\tmainIndicatorNavigationSelectedKey,\n\t\tcriticalityOptions,\n\t\tnavigationValue: mainIndicatorKey,\n\t\ttrendOptions\n\t};\n}\n/**\n * Updates the criticality options based on the groups in the provided CardManifest.\n * @param {CardManifest} mManifest - The card manifest containing the groups and their items.\n * @param {CriticalityOptions[]} criticalityOptions - An array of criticality options to be updated.\n */\n\nfunction updateCriticalityBasedOnGroups(mManifest: CardManifest, criticalityOptions: CriticalityOptions[]) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tgroups.forEach((group) => {\n\t\tgroup.items.forEach((item) => {\n\t\t\tif (item.state) {\n\t\t\t\tconst criticallityState = getCriticallityStateForGroup(item.state);\n\t\t\t\tconst criticalityConfig: CriticalityOptions = {\n\t\t\t\t\tcriticality: criticallityState,\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tactiveCalculation: false\n\t\t\t\t};\n\t\t\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Update the criticality options\n * @param criticalityOptions\n * @param criticalityConfig\n */\nfunction updateCriticalityOptions(criticalityOptions: CriticalityOptions[], criticalityConfig: CriticalityOptions) {\n\tconst itemExists = criticalityOptions.some((option) => option.name === criticalityConfig.name);\n\tif (!itemExists) {\n\t\tcriticalityOptions.push(criticalityConfig);\n\t}\n}\n\n/**\n * Gets the criticality state for a group based on the provided state string.\n *\n * This function checks if the state has a formatter associated with it.\n * If so, it processes the formatter and returns its property in a specific format.\n * If the state corresponds to a known criticality state, it returns the corresponding\n * color indicator. If the state is not recognized, it defaults to the 'None' indicator.\n *\n * @param {string} state - The state string to evaluate for criticality.\n * @returns {string} - The criticality state as a string based on the ColorIndicator enum.\n *                    Possible return values include:\n *                    - ColorIndicator.Error\n *                    - ColorIndicator.Success\n *                    - ColorIndicator.None\n *                    - ColorIndicator.Warning\n */\nexport function getCriticallityStateForGroup(state: string) {\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn \"{\" + selectedFormatter.property + \"}\";\n\t}\n\n\tif (state && state in ColorIndicator) {\n\t\treturn ColorIndicator[state as keyof typeof ColorIndicator];\n\t}\n\n\treturn ColorIndicator.None;\n}\n\nfunction getSideIndicators(mManifest: CardManifest): SideIndicatorOptions {\n\tconst sideIndicators = mManifest[\"sap.card\"].header.sideIndicators || [];\n\n\tif (sideIndicators.length === 0 || !sideIndicators[0].number) {\n\t\treturn {\n\t\t\ttargetValue: \"\",\n\t\t\ttargetUnit: \"\",\n\t\t\tdeviationValue: \"\",\n\t\t\tdeviationUnit: \"\"\n\t\t};\n\t}\n\n\tconst [targetIndicator = {}, deviationIndicator = {}] = sideIndicators;\n\tconst { number: targetValue = \"\", unit: targetUnit = \"\" } = targetIndicator;\n\n\tconst { number: deviationValue = \"\", unit: deviationUnit = \"\" } = deviationIndicator;\n\n\treturn {\n\t\ttargetValue,\n\t\ttargetUnit,\n\t\tdeviationValue,\n\t\tdeviationUnit\n\t};\n}\n\nfunction handleFormatter(formatter: FormatterConfiguration) {\n\tif (\n\t\tformatterConfigurationFromCardManifest.length === 0 ||\n\t\t!formatterConfigurationFromCardManifest.find((f) => f.property === formatter.property)\n\t) {\n\t\tformatterConfigurationFromCardManifest.push({ ...formatter });\n\t}\n}\n\nfunction getGroupItemValue(value: string, mManifest: CardManifest) {\n\tconst { formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(value, mManifest);\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\treturn value;\n}\n\nfunction getCardGroups(mManifest: CardManifest, resourceModel: ResourceModel) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tif (groups.length === 0) {\n\t\treturn [];\n\t}\n\n\treturn groups.map((group) => {\n\t\treturn {\n\t\t\ttitle: resolveI18nTextFromResourceModel(group.title, resourceModel),\n\t\t\titems: group.items.map((item) => {\n\t\t\t\tconst groupItem: GroupItems = {\n\t\t\t\t\tlabel: resolveI18nTextFromResourceModel(item.label, resourceModel),\n\t\t\t\t\tvalue: getGroupItemValue(item.value, mManifest),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tisEnabled: true,\n\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t};\n\t\t\t\tif (item.state) {\n\t\t\t\t\tgroupItem.type = \"Status\";\n\t\t\t\t\tgroupItem.state = item.state;\n\t\t\t\t}\n\t\t\t\treturn groupItem;\n\t\t\t})\n\t\t};\n\t});\n}\n\n/**\n * This is a fix for cards which are generated without \"sap.insights\" manifest property or with cardType as \"DT\".\n *  - When the card is regenerated \"sap.insight\" property will be set/updated existing in the manifest.\n *\n * @param mCardManifest\n * @param rootComponent\n * @returns\n */\nexport async function enhanceManifestWithInsights(mCardManifest: CardManifest | undefined, rootComponent: Component) {\n\tif (!mCardManifest) {\n\t\treturn;\n\t}\n\tconst sapAppId = rootComponent.getManifest()[\"sap.app\"].id;\n\tconst sapCoreVersionInfo = (await VersionInfo.load({\n\t\tlibrary: \"sap.ui.core\"\n\t})) as LibVersionInfo;\n\n\tmCardManifest[\"sap.insights\"] = {\n\t\ttemplateName: \"ObjectPage\",\n\t\tparentAppId: sapAppId,\n\t\tcardType: \"LEAN_DT\",\n\t\tversions: {\n\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t}\n\t};\n}\n\n/**\n * Enhance the card manifest configuration parameters with property formatting configuration\n * \t- add text arrangements properties\n *\n * @param mCardManifest\n * @param oDialogModel\n */\nexport function enhanceManifestWithConfigurationParameters(mCardManifest: CardManifest, oDialogModel: JSONModel) {\n\tconst sapCard = mCardManifest[\"sap.card\"];\n\tconst applicationInfo = ApplicationInfo.getInstance();\n\tconst rootComponent = applicationInfo.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet } = applicationInfo.fetchDetails();\n\tconst keyProperties: string[] = [];\n\n\tif (odataModel === ODataModelVersion.V4) {\n\t\tgetPropertyReferenceKey(appModel as V4ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t} else {\n\t\tgetPropertyReference(appModel as V2ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t}\n\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\n\tconst configurationParameters = sapCard.configuration.parameters;\n\tconfigurationParameters[\"_propertyFormatting\"] = {};\n\tconst textArrangements = oDialogModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\") as ArrangementOptions[];\n\n\tconst propertyFormatting: PropertyFormattingParameters = {};\n\ttextArrangements.forEach((arrangement) => {\n\t\tif (Object.keys(arrangement).length > 0) {\n\t\t\tconst { name, arrangementType, value } = arrangement;\n\n\t\t\tpropertyFormatting[name] = {\n\t\t\t\tarrangements: {\n\t\t\t\t\ttext: {\n\t\t\t\t\t\t[arrangementType]: true,\n\t\t\t\t\t\tpath: value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n\tif (Object.keys(propertyFormatting).length > 0) {\n\t\tconfigurationParameters[\"_propertyFormatting\"] = propertyFormatting;\n\t}\n\n\tconfigurationParameters[\"_mandatoryODataParameters\"] = {\n\t\tvalue: keyProperties\n\t};\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\n\tkeyProperties.forEach((keyProp) => {\n\t\tconfigurationParameters[keyProp] = {\n\t\t\ttype: getDataType(keyProp),\n\t\t\tvalue: \"\"\n\t\t};\n\t});\n}\n\n/**\n * Adds query parameters to the URLs in the manifest's batch request.\n *\n * @param {CardManifest} cardManifest - The card manifest.\n * @returns {CardManifest} A copy of the original card manifest with query parameters added to the URLs.\n */\n\nexport const addQueryParametersToManifest = (cardManifest?: CardManifest): CardManifest => {\n\tconst cardManifestCopy = JSON.parse(JSON.stringify(cardManifest));\n\tconst batchRequest = cardManifestCopy[\"sap.card\"].data?.request?.batch;\n\tconst selectQueryHeader = \"?{{parameters._headerSelectQuery}}\";\n\tconst selectQueryContent = \"?{{parameters._contentSelectQuery}}\";\n\tconst expandQueryHeader = \"{{parameters._headerExpandQuery}}\";\n\tconst expandQueryContent = \"{{parameters._contentExpandQuery}}\";\n\tconst headerUrl = batchRequest?.header?.url;\n\tconst contentUrl = batchRequest?.content?.url;\n\n\tif (headerUrl?.indexOf(selectQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${selectQueryHeader}${expandQueryHeader}`;\n\t} else if (headerUrl?.indexOf(expandQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${expandQueryHeader}`;\n\t}\n\tif (contentUrl?.indexOf(selectQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${selectQueryContent}${expandQueryContent}`;\n\t} else if (contentUrl?.indexOf(expandQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${expandQueryContent}`;\n\t}\n\n\tconst configParameters = cardManifestCopy[\"sap.card\"].configuration?.parameters;\n\tconfigParameters._contentSelectQuery = configParameters?._contentSelectQuery ?? { value: \"\" };\n\tconfigParameters._headerSelectQuery = configParameters?._headerSelectQuery ?? { value: \"\" };\n\tconfigParameters._contentExpandQuery = configParameters?._contentExpandQuery ?? { value: \"\" };\n\tconfigParameters._headerExpandQuery = configParameters?._headerExpandQuery ?? { value: \"\" };\n\n\treturn cardManifestCopy;\n};\n\nconst updateConfigurationParametersWithKeyProperties = (cardManifest: CardManifest, data: Record<string, any>) => {\n\tconst applicationInfo = ApplicationInfo.getInstance();\n\tconst rootComponent = applicationInfo.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet } = applicationInfo.fetchDetails();\n\tconst propertyReferenceKeys =\n\t\todataModel === ODataModelVersion.V4\n\t\t\t? getPropertyReferenceKey(appModel as V4ODataModel, entitySet)\n\t\t\t: getPropertyReference(appModel as V2ODataModel, entitySet);\n\n\tconst sapCard = cardManifest[\"sap.card\"];\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\tconst configurationParameters = sapCard.configuration.parameters;\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tconfigurationParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n};\n\n/**\n * Updates the data path of the card header in the provided card manifest by reference.\n *\n * @param {CardManifest} cardManifest - The card manifest object that contains the header data.\n */\nfunction updateHeaderDataPath(cardManifest: CardManifest) {\n\tconst headerData = cardManifest[\"sap.card\"].header.data;\n\n\tif (headerData?.path && headerData.path !== \"/header/d/\") {\n\t\theaderData.path = \"/header/d/\";\n\t}\n}\n\n/**\n * This method is used to perform updates on existing integration card manifest.\n * Updates will include adding,\n * \t- Query parameters to the URLs in the target manifest's batch request.\n * \t- sap.app.id to the manifest.\n * @param cardManifest\n */\nexport const updateExistingCardManifest = (cardManifest?: CardManifest, data: Record<string, any>): CardManifest | undefined => {\n\tif (!cardManifest) {\n\t\treturn cardManifest;\n\t}\n\n\tcardManifest = addQueryParametersToManifest(cardManifest);\n\tconst batch = cardManifest[\"sap.card\"].data.request?.batch;\n\n\tif (batch !== undefined) {\n\t\tbatch.header.url = getHeaderBatchUrl();\n\t\tbatch.content.url = getContentBatchUrl();\n\t}\n\tcardManifest[\"sap.app\"].id = ApplicationInfo.getInstance().fetchDetails().componentName;\n\tcardManifest[\"sap.app\"].i18n = cardManifest[\"sap.app\"].i18n || \"../../../i18n/i18n.properties\";\n\tupdateConfigurationParametersWithKeyProperties(cardManifest, data);\n\tupdateHeaderDataPath(cardManifest);\n\treturn cardManifest;\n};\n\nexport function parseCard(\n\tintegrationCardManifest: CardManifest,\n\tresourceModel: ResourceModel,\n\tproperties: PropertyInfoMap\n): ParsedManifest {\n\tconst title = integrationCardManifest[\"sap.card\"].header.title ?? \"\";\n\tconst subtitle = integrationCardManifest[\"sap.card\"].header.subTitle ?? \"\";\n\tconst uom = integrationCardManifest[\"sap.card\"].header.unitOfMeasurement ?? \"\";\n\tformatterConfigurationFromCardManifest.splice(0, formatterConfigurationFromCardManifest.length);\n\tconst textArrangementsFromCardManifest: Array<ArrangementOptions> = getTextArrangementFromCardManifest(integrationCardManifest);\n\n\treturn {\n\t\ttitle: resolvePropertyLabelFromExpression(title, resourceModel, properties),\n\t\tsubtitle: resolvePropertyLabelFromExpression(subtitle, resourceModel, properties),\n\t\theaderUOM: resolvePropertyLabelFromExpression(uom, resourceModel, properties),\n\t\tmainIndicatorOptions: getMainIndicator(integrationCardManifest),\n\t\tsideIndicatorOptions: getSideIndicators(integrationCardManifest),\n\t\tgroups: getCardGroups(integrationCardManifest, resourceModel),\n\t\tformatterConfigurationFromCardManifest,\n\t\ttextArrangementsFromCardManifest\n\t};\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":115,"column":0},"map":{"version":3,"file":"NavigationProperty.js","names":["sap","ui","define","___odata_ODataUtils","___ApplicationInfo","___Batch","___Formatter","getNavigationPropertiesWithLabel","rootComponent","navigationProperty","path","model","getModel","entitySet","serviceUrl","odataModel","ApplicationInfo","getInstance","fetchDetails","bODataV4","ODataModelVersion","V4","navigationPropertyInfo","getNavigationPropertyInfoFromEntity","selectedNavigationProperty","find","property","name","Promise","resolve","propertiesWithLabel","navigationPropertyData","properties","queryParams","navigationProperties","fetchDataAsync","createUrlParameters","then","data","undefined","forEach","propertyValue","labelWithValue","formatPropertyDropdownValues","label","e","reject","__exports","__esModule"],"sources":["NavigationProperty.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Component from \"sap/ui/core/Component\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport { PropertyInfo } from \"../odata/ODataTypes\";\nimport { fetchDataAsync, getNavigationPropertyInfoFromEntity } from \"../odata/ODataUtils\";\nimport { ApplicationInfo, ODataModelVersion } from \"./ApplicationInfo\";\nimport { QueryParameters, createUrlParameters } from \"./Batch\";\nimport { formatPropertyDropdownValues } from \"./Formatter\";\n\ntype Model = V2ODataModel | V4ODataModel;\n\n/**\n * Fetches the navigation properties with label for a single Navigation property\n * @param rootComponent\n * @param navigationProperty - Name of the navigation property\n * @param path\n */\nexport async function getNavigationPropertiesWithLabel(rootComponent: Component, navigationProperty: string, path: string) {\n\tconst model = rootComponent.getModel() as Model;\n\tconst { entitySet, serviceUrl, odataModel } = ApplicationInfo.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst navigationPropertyInfo = getNavigationPropertyInfoFromEntity(model, entitySet);\n\tconst selectedNavigationProperty = navigationPropertyInfo.find((property) => property.name === navigationProperty);\n\n\tif (!selectedNavigationProperty) {\n\t\treturn {\n\t\t\tpropertiesWithLabel: [],\n\t\t\tnavigationPropertyData: {}\n\t\t};\n\t}\n\n\tconst properties = selectedNavigationProperty.properties || [];\n\tconst queryParams: QueryParameters = {\n\t\tproperties: [],\n\t\tnavigationProperties: [\n\t\t\t{\n\t\t\t\tname: selectedNavigationProperty.name,\n\t\t\t\tproperties: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconst data = await fetchDataAsync(serviceUrl, path, bODataV4, createUrlParameters(queryParams));\n\n\tif (data[selectedNavigationProperty.name] !== undefined && data[selectedNavigationProperty.name] !== null) {\n\t\tproperties.forEach((property: PropertyInfo) => {\n\t\t\tconst name = data[selectedNavigationProperty.name] as Record<string, unknown>;\n\t\t\tif (name[property.name] !== undefined && name[property.name] !== null) {\n\t\t\t\tconst propertyValue = name[property.name] as string;\n\t\t\t\tproperty.labelWithValue = formatPropertyDropdownValues(property, propertyValue);\n\t\t\t} else {\n\t\t\t\tproperty.labelWithValue = `${property.label} (<empty>)`;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tpropertiesWithLabel: properties,\n\t\tnavigationPropertyData: data\n\t};\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,6EAAAC,EAAAC,EAAAC,EAAAC,GAAA,aAeA,MAMsBC,EAAgC,SAACC,EAA0BC,EAA4BC,GAAY,IACxH,MAAMC,EAAQH,EAAcI,WAC5B,MAAMC,UAAEA,EAASC,WAAEA,EAAUC,WAAEA,GAAeC,EAAgBC,cAAcC,eAC5E,MAAMC,EAAWJ,IAAeK,EAAkBC,GAClD,MAAMC,EAAyBC,EAAoCZ,EAAOE,GAC1E,MAAMW,EAA6BF,EAAuBG,KAAMC,GAAaA,EAASC,OAASlB,GAE/F,IAAKe,EAA4B,CAChC,OAAAI,QAAAC,QAAO,CACNC,oBAAqB,GACrBC,uBAAwB,CAAC,GAE3B,CAEA,MAAMC,EAAaR,EAA2BQ,YAAc,GAC5D,MAAMC,EAA+B,CACpCD,WAAY,GACZE,qBAAsB,CACrB,CACCP,KAAMH,EAA2BG,KACjCK,WAAY,MAGb,OAAAJ,QAAAC,QAEiBM,EAAerB,EAAYJ,EAAMS,EAAUiB,EAAoBH,KAAaI,KAAA,SAAzFC,GAEN,GAAIA,EAAKd,EAA2BG,QAAUY,WAAaD,EAAKd,EAA2BG,QAAU,KAAM,CAC1GK,EAAWQ,QAASd,IACnB,MAAMC,EAAOW,EAAKd,EAA2BG,MAC7C,GAAIA,EAAKD,EAASC,QAAUY,WAAaZ,EAAKD,EAASC,QAAU,KAAM,CACtE,MAAMc,EAAgBd,EAAKD,EAASC,MACpCD,EAASgB,eAAiBC,EAA6BjB,EAAUe,EAClE,KAAO,CACNf,EAASgB,eAAiB,GAAGhB,EAASkB,iBACvC,GAEF,CAEA,MAAO,CACNd,oBAAqBE,EACrBD,uBAAwBO,EACvB,EACH,CAAC,MAAAO,GAAA,OAAAjB,QAAAkB,OAAAD,EAAA,SAxDQV,EAAchC,EAAA,wBAAEoB,EAAmCpB,EAAA,6CACnDa,EAAeZ,EAAA,yBAAEgB,EAAiBhB,EAAA,2BACjBgC,EAAmB/B,EAAA,6BACpCsC,EAA4BrC,EAAA,oCAAAyC,EAAA,CAAAC,WAAA,MAAAD,EAAAxC,mCAAA,OAAAwC,CAAA","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":122,"column":0},"map":{"version":3,"file":"PropertyExpression.js","names":["sap","ui","define","Log","BindingParser","___config_FormatterOptions","___Formatter","getFormatterConfiguration","createFormatterExpression","isExpression","propertyValue","arguments","length","undefined","startsWith","isI18nExpression","endsWith","hasFormatter","formatValue","sPropertyName","propertyValueFormatters","oMatchedFormatterDetail","find","oFormatterDetail","property","getArrangements","mOptions","unitOfMeasures","textArrangements","bPropertyHasBinding","replace","oMatchedUOM","oArrangement","name","sMatchedUOMName","value","oMatchedArrangement","textArrangement","sMatchedArrangementName","bPropertyHasFormatter","bMatchedUOMHasFormatter","bMatchedArrangementHasFormatter","sProperty","sMatchedUOM","sMatchedArrangement","updatedVal","getFormattedValue","index","indexOf","formattedValue","slice","parts","split","uom","formatFloat","formatUnit","part1","part2","concat","extractPathWithoutUOM","extractPathExpressionWithoutUOM","hasUOM","includes","substring","getExpressionParts","expression","startSymbols","endSymbols","count","part","skipNext","i","trim","push","extractPropertyConfigurationWithoutTextArrangement","mCardManifest","textArrangementOptions","getTextArrangementFromCardManifest","textArrangementIndex","propertyPaths","formatterExpression","forEach","hasTextArrangement","hasFormatterBinding","parseFormatterExpression","propertyPath","remainingExpression","join","textArrangementProperty","prop","option","arrangementType","propertyPathWithoutUOM","matchedTextArrangement","resolvePropertyPathFromExpression","path","hasBinding","selectedFormatter","updateAndGetSelectedFormatters","mManifest","configuration","parameters","_propertyFormatting","Object","keys","arrangement","arrangements","text","key","isNavigationForId","isNavigationForDescription","propertyKeyForId","navigationKeyForId","navigationKeyForDescription","propertyKeyForDescription","navigationalPropertiesForDescription","navigationalPropertiesForId","formatterOptions","formatterName","formatter","bindingInfo","complexParser","propertyExpression","bindingPartial","lastIndexOf","parametersExpression","hasParameters","formatterParameters","parameter","type","startIndex","endIndex","options","JSON","parse","error","sPropertyPath","formatterConfig","parametersLength","formatterConfigParameters","updatePropertiesForObjectType","properties","__exports","__esModule"],"sources":["PropertyExpression.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport BindingParser from \"sap/ui/base/BindingParser\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { getFormatterConfiguration } from \"../config/FormatterOptions\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"./Formatter\";\nimport { createFormatterExpression } from \"./Formatter\";\n\ntype JSONObject = {\n\t[key: string]: string | boolean | number;\n};\n\ntype FormatterConfigParameters = string | JSONObject;\n\ntype ParsedFormatterExpression = {\n\tformatterName: string;\n\tpropertyPath: string;\n\tparameters: Array<FormatterConfigParameters>;\n};\n\ntype PropertyFormattingOptions = {\n\tunitOfMeasures: Array<{\n\t\t[key: string]: string;\n\t}>;\n\ttextArrangements: ArrangementOptions[];\n\tpropertyValueFormatters: FormatterConfigurationMap;\n};\n\n/**\n * This function checks if the property value is an expression\n *\n * @param {string} propertyValue\n * @returns {boolean}\n */\nexport function isExpression(propertyValue = \"\"): boolean {\n\treturn propertyValue.startsWith(\"{\");\n}\n\n/**\n * This function checks if the property value is an i18n expression\n *\n * @param {string} propertyValue\n * @returns {boolean}\n */\nexport function isI18nExpression(propertyValue = \"\"): boolean {\n\treturn propertyValue.startsWith(\"{{\") && propertyValue.endsWith(\"}}\");\n}\n\n/**\n * The function checks if the property value has a formatter\n *\n * @param propertyValue\n * @returns\n */\nexport function hasFormatter(propertyValue = \"\"): boolean {\n\treturn propertyValue.startsWith(\"{=\") && propertyValue.endsWith(\"}\");\n}\n\n/**\n * format the value based on the formatter configuration\n * @param {string} sPropertyName\n * @param {FormatterConfigurationMap} propertyValueFormatters\n * @returns\n */\nfunction formatValue(sPropertyName: string, propertyValueFormatters: FormatterConfigurationMap = []) {\n\tconst oMatchedFormatterDetail = propertyValueFormatters.find(function (oFormatterDetail: FormatterConfiguration) {\n\t\treturn oFormatterDetail.property === sPropertyName || \"{\" + oFormatterDetail.property + \"}\" === sPropertyName;\n\t});\n\n\tif (oMatchedFormatterDetail) {\n\t\treturn createFormatterExpression(oMatchedFormatterDetail);\n\t}\n\treturn sPropertyName;\n}\n\n/**\n * Apply text arrangement, UOM and formatter to the property\n * @param {string} sPropertyName\n * @param {PropertyFormattingOptions} mOptions\n * @returns {string}\n */\nexport function getArrangements(sPropertyName: string, mOptions: PropertyFormattingOptions) {\n\tconst { unitOfMeasures, textArrangements, propertyValueFormatters } = mOptions;\n\tconst bPropertyHasBinding = sPropertyName.startsWith(\"{\");\n\tsPropertyName = sPropertyName.replace(/[{}]/g, \"\");\n\n\tconst oMatchedUOM = unitOfMeasures.find(function (oArrangement: any) {\n\t\treturn oArrangement.name === sPropertyName;\n\t});\n\tconst sMatchedUOMName = oMatchedUOM?.value?.replace(/[{}]/g, \"\");\n\tconst oMatchedArrangement = textArrangements.find(function (oArrangement: any) {\n\t\tif (oArrangement.value && oArrangement.textArrangement) {\n\t\t\treturn oArrangement.name === sPropertyName;\n\t\t}\n\t});\n\tconst sMatchedArrangementName = oMatchedArrangement?.value?.replace(/[{}]/g, \"\");\n\tlet bPropertyHasFormatter = false;\n\tlet bMatchedUOMHasFormatter = false;\n\tlet bMatchedArrangementHasFormatter = false;\n\tconst sProperty = sPropertyName;\n\n\tsPropertyName = sPropertyName && formatValue(sPropertyName, propertyValueFormatters);\n\tif (sPropertyName !== sProperty) {\n\t\tbPropertyHasFormatter = true;\n\t}\n\n\tconst sMatchedUOM = oMatchedUOM && formatValue(sMatchedUOMName ?? \"\", propertyValueFormatters);\n\tif (sMatchedUOMName !== sMatchedUOM) {\n\t\tbMatchedUOMHasFormatter = true;\n\t}\n\n\tconst sMatchedArrangement = sMatchedArrangementName && formatValue(sMatchedArrangementName, propertyValueFormatters);\n\tif (sMatchedArrangementName !== sMatchedArrangement) {\n\t\tbMatchedArrangementHasFormatter = true;\n\t}\n\n\tlet updatedVal = \"\";\n\tif (oMatchedUOM && oMatchedArrangement) {\n\t\tswitch (oMatchedArrangement.textArrangement) {\n\t\t\tcase \"TextLast\":\n\t\t\t\tupdatedVal += bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\";\n\t\t\t\tupdatedVal += bMatchedUOMHasFormatter ? \" {= \" + sMatchedUOM + \"}\" : \" {\" + sMatchedUOMName + \"}\";\n\t\t\t\tupdatedVal = getFormattedValue(updatedVal, bPropertyHasFormatter, bMatchedUOMHasFormatter);\n\t\t\t\tupdatedVal += bMatchedArrangementHasFormatter\n\t\t\t\t\t? \" (\" + \"{= \" + sMatchedArrangement + \"}\" + \")\"\n\t\t\t\t\t: \" (\" + \"{\" + sMatchedArrangementName + \"}\" + \")\";\n\t\t\t\tbreak;\n\t\t\tcase \"TextFirst\":\n\t\t\t\tupdatedVal = bMatchedArrangementHasFormatter\n\t\t\t\t\t? \"{= \" + sMatchedArrangement + \"}\" + \" (\"\n\t\t\t\t\t: \"{\" + sMatchedArrangementName + \"}\" + \" (\";\n\t\t\t\tupdatedVal += bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\";\n\t\t\t\tupdatedVal += bMatchedUOMHasFormatter ? \" {= \" + sMatchedUOM + \"}\" : \" {\" + sMatchedUOMName + \"}\";\n\t\t\t\tconst index = updatedVal.indexOf(\" (\");\n\t\t\t\tconst formattedValue = getFormattedValue(updatedVal.slice(index + 2), bPropertyHasFormatter, bMatchedUOMHasFormatter);\n\t\t\t\tupdatedVal = updatedVal.slice(0, index + 2) + formattedValue;\n\t\t\t\tupdatedVal += \")\";\n\t\t\t\tbreak;\n\t\t\tcase \"TextSeparate\":\n\t\t\t\tupdatedVal += bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\";\n\t\t\t\tupdatedVal += bMatchedUOMHasFormatter ? \" {= \" + sMatchedUOM + \"}\" : \" {\" + sMatchedUOMName + \"}\";\n\t\t\t\tupdatedVal = getFormattedValue(updatedVal, bPropertyHasFormatter, bMatchedUOMHasFormatter);\n\t\t\t\tbreak;\n\t\t\tcase \"TextOnly\":\n\t\t\t\tupdatedVal += bMatchedArrangementHasFormatter ? \"{= \" + sMatchedArrangement + \"}\" : \"{\" + sMatchedArrangementName + \"}\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn updatedVal;\n\t} else if (oMatchedUOM && sMatchedUOMName) {\n\t\tupdatedVal = bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\";\n\t\tif (!sMatchedUOM?.startsWith(\"format.unit(\")) {\n\t\t\tupdatedVal += bMatchedUOMHasFormatter ? \" {= \" + sMatchedUOM + \"}\" : \" {\" + sMatchedUOMName + \"}\";\n\t\t}\n\t\treturn getFormattedValue(updatedVal, bPropertyHasFormatter, bMatchedUOMHasFormatter);\n\t} else if (oMatchedArrangement) {\n\t\tswitch (oMatchedArrangement.textArrangement) {\n\t\t\tcase \"TextLast\":\n\t\t\t\tupdatedVal += bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\";\n\t\t\t\tupdatedVal += bMatchedArrangementHasFormatter\n\t\t\t\t\t? \" (\" + \"{= \" + sMatchedArrangement + \"}\" + \")\"\n\t\t\t\t\t: \" (\" + \"{\" + sMatchedArrangementName + \"}\" + \")\";\n\t\t\t\tbreak;\n\t\t\tcase \"TextFirst\":\n\t\t\t\tupdatedVal = bMatchedArrangementHasFormatter\n\t\t\t\t\t? \"{= \" + sMatchedArrangement + \"}\" + \" (\"\n\t\t\t\t\t: \"{\" + sMatchedArrangementName + \"}\" + \" (\";\n\t\t\t\tupdatedVal += bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\";\n\t\t\t\tupdatedVal += \")\";\n\t\t\t\tbreak;\n\t\t\tcase \"TextSeparate\":\n\t\t\t\tupdatedVal += bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\";\n\t\t\t\tbreak;\n\t\t\tcase \"TextOnly\":\n\t\t\t\tupdatedVal = bMatchedArrangementHasFormatter ? \"{= \" + sMatchedArrangement + \"}\" : \"{\" + sMatchedArrangementName + \"}\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn updatedVal;\n\t}\n\treturn bPropertyHasBinding ? (bPropertyHasFormatter ? \"{= \" + sPropertyName + \"}\" : \"{\" + sPropertyName + \"}\") : sPropertyName;\n}\n\n/**\n * Retrieves the formatted value based on the provided parameters.\n *\n * @param updatedVal - The updated value to be formatted.\n * @param bPropertyHasFormatter - A boolean indicating whether the property has a formatter.\n * @param bMatchedUOMHasFormatter - A boolean indicating whether the matched unit of measure has a formatter.\n * @returns The formatted value as a binding string in the format '{= format.unit(${property}, ${uom})}'.\n */\nfunction getFormattedValue(updatedVal: string, bPropertyHasFormatter: boolean, bMatchedUOMHasFormatter: boolean) {\n\tconst parts = updatedVal.split(\" \");\n\tlet property = \"\",\n\t\tuom = \"\";\n\n\tif (parts.length === 2) {\n\t\tproperty = parts[0];\n\t\tuom = parts[1];\n\t}\n\n\tif (bPropertyHasFormatter) {\n\t\tconst formatFloat = updatedVal.startsWith(\"{= format.float(\");\n\t\tconst formatUnit = updatedVal.startsWith(\"{= format.unit(\");\n\n\t\tif ((formatFloat || formatUnit) && !bMatchedUOMHasFormatter) {\n\t\t\tconst index = updatedVal.indexOf(\"} \");\n\t\t\tlet part1 = updatedVal.slice(0, index + 1);\n\t\t\tconst part2 = updatedVal.slice(index + 2);\n\t\t\tpart1 = part1.replace(\"format.float(\", \"format.unit(\");\n\n\t\t\tconst parts = part1.split(\", \");\n\t\t\tif (parts.length === 2) {\n\t\t\t\tif (formatFloat) {\n\t\t\t\t\tupdatedVal = part1.replace(\", {\", \", $\" + part2 + \", {\");\n\t\t\t\t} else {\n\t\t\t\t\tupdatedVal = parts[0].concat(\", $\" + part2 + \")}\");\n\t\t\t\t}\n\t\t\t} else if (parts.length === 3) {\n\t\t\t\tif (part2) {\n\t\t\t\t\tupdatedVal = parts[0].concat(\", $\" + part2 + \", \");\n\t\t\t\t\tupdatedVal = updatedVal.concat(parts[2]);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedVal = part1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn updatedVal;\n\t\t}\n\t\treturn updatedVal;\n\t}\n\n\t//To return the binding string in the below format  '{= format.unit(${gross_amount}, ${currency_code})}'\n\treturn \"{= format.unit($\" + property + \", $\" + uom + \")}\";\n}\n\n/**\n * Extracts the property path without unit of measure\n * \t - The property is in the format {propertyPath} {uomPath}\n *\n * @param property\n * @returns {string}\n */\nexport function extractPathWithoutUOM(property: string) {\n\treturn extractPathExpressionWithoutUOM(property).replace(/[{}]/g, \"\"); // Remove curly braces\n}\n\n/**\n * Extracts the property path expression without unit of measure\n * \t - The property is in the format {propertyPath} {uomPath}\n *\n * @param property\n * @returns {string}\n */\nexport function extractPathExpressionWithoutUOM(property: string) {\n\tconst hasUOM = property.includes(\"} {\");\n\treturn hasUOM ? property.substring(0, property.indexOf(\"} {\") + 1) : property;\n}\n\n/**\n * Extracts parts of an expression\n *\n * @param expression\n * @returns {string[]}\n */\nexport function getExpressionParts(expression: string) {\n\tconst startSymbols = [\"{=\", \"{\", \"(\", \"${\"];\n\tconst endSymbols = [\"}\", \")\"];\n\tconst parts = [];\n\tlet count = 0,\n\t\tpart = \"\",\n\t\tskipNext = false;\n\n\tfor (let i = 0; i < expression.length; i++) {\n\t\tif (skipNext) {\n\t\t\tskipNext = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (startSymbols.includes(expression[i])) {\n\t\t\tif (expression[i] === \"{\" && expression[i + 1] === \"=\") {\n\t\t\t\tpart += \"{=\";\n\t\t\t\tskipNext = true;\n\t\t\t} else {\n\t\t\t\tpart += expression[i];\n\t\t\t}\n\t\t\tcount++;\n\t\t} else if (endSymbols.includes(expression[i])) {\n\t\t\tpart += expression[i];\n\t\t\tcount--;\n\t\t} else {\n\t\t\tpart += expression[i];\n\t\t}\n\n\t\tif (count === 0) {\n\t\t\tif (part.trim().length !== 0) {\n\t\t\t\tparts.push(part);\n\t\t\t}\n\n\t\t\tpart = \"\";\n\t\t}\n\t}\n\treturn parts;\n}\n\n/**\n * Extracts the property path and formatter expression without text arrangement\n *\n * @param expression\n * @param mCardManifest\n *\n * @returns { propertyPath: string, formatterExpression: string[]}\n */\nexport function extractPropertyConfigurationWithoutTextArrangement(expression: string, mCardManifest: CardManifest) {\n\tconst textArrangementOptions: Array<ArrangementOptions> = getTextArrangementFromCardManifest(mCardManifest);\n\tconst parts = getExpressionParts(expression);\n\tlet textArrangementIndex = -1;\n\tconst propertyPaths: string[] = [];\n\tconst formatterExpression: string[] = [];\n\n\tparts.forEach((part, index) => {\n\t\tconst hasTextArrangement = part.trim().startsWith(\"(\") && part.trim().endsWith(\")\");\n\n\t\tif (hasTextArrangement) {\n\t\t\ttextArrangementIndex = index;\n\t\t\tconst hasFormatterBinding = hasFormatter(part.slice(1, -1));\n\n\t\t\tif (hasFormatterBinding) {\n\t\t\t\tformatterExpression.push(part.slice(1, -1));\n\t\t\t}\n\t\t\tpart = hasFormatterBinding ? parseFormatterExpression(part.slice(1, -1)).propertyPath : part.slice(1, -1);\n\t\t\tpart = \"({\" + part + \"})\";\n\t\t} else if (hasFormatter(part)) {\n\t\t\tformatterExpression.push(part);\n\t\t\tpart = \"{\" + parseFormatterExpression(part).propertyPath + \"}\";\n\t\t}\n\t\tpropertyPaths.push(part);\n\t});\n\n\tif (textArrangementIndex > -1) {\n\t\tlet remainingExpression = propertyPaths\n\t\t\t.slice(0, textArrangementIndex)\n\t\t\t.concat(propertyPaths.slice(textArrangementIndex + 1))\n\t\t\t.join(\" \");\n\t\tconst textArrangement = propertyPaths.slice(textArrangementIndex, textArrangementIndex + 1)[0];\n\t\tconst textArrangementProperty = textArrangement.trim().replace(/[({})]/g, \"\");\n\t\tconst prop = textArrangementOptions.find((option) => textArrangementProperty === option.name);\n\t\tif (prop && prop.arrangementType === \"TextFirst\") {\n\t\t\tremainingExpression = remainingExpression.replace(prop.value, prop.name);\n\t\t}\n\t\treturn {\n\t\t\tpropertyPath: remainingExpression,\n\t\t\tformatterExpression\n\t\t};\n\t} else {\n\t\tconst propertyPathWithoutUOM = extractPathWithoutUOM(expression);\n\t\tconst matchedTextArrangement = textArrangementOptions.find((option) => propertyPathWithoutUOM === option.value);\n\t\tif (matchedTextArrangement && matchedTextArrangement.arrangementType === \"TextOnly\") {\n\t\t\treturn {\n\t\t\t\tpropertyPath: `{${matchedTextArrangement.name}}`,\n\t\t\t\tformatterExpression\n\t\t\t};\n\t\t}\n\t}\n\n\treturn {\n\t\tpropertyPath: expression,\n\t\tformatterExpression\n\t};\n}\n\n/**\n *  Resolves the property path with expression to simple property path\n * \t- If path is an expression, resolve the expression then return the path\n *  - If path is an expression with formatter, return the path after extracting the formatter\n * @param path\n * @param mCardManifest\n * @returns\n */\nexport function resolvePropertyPathFromExpression(path = \"\", mCardManifest: CardManifest) {\n\tlet { propertyPath } = extractPropertyConfigurationWithoutTextArrangement(path, mCardManifest);\n\tconst hasBinding = isExpression(path) || hasFormatter(path);\n\n\tif (isExpression(propertyPath) && !hasFormatter(propertyPath)) {\n\t\tpropertyPath = extractPathWithoutUOM(propertyPath);\n\t}\n\n\tif (isExpression(propertyPath) && hasFormatter(propertyPath)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(propertyPath);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\tpropertyPath = selectedFormatter.property || \"\";\n\t}\n\n\treturn hasBinding ? `{${propertyPath}}` : propertyPath;\n}\n\nexport function getTextArrangementFromCardManifest(mManifest: CardManifest) {\n\tconst textArrangements = mManifest[\"sap.card\"].configuration?.parameters?._propertyFormatting as object | undefined;\n\n\tif (!textArrangements) {\n\t\treturn [];\n\t}\n\n\tconst textArrangementOptions: Array<ArrangementOptions> = [];\n\tObject.keys(textArrangements).forEach((property) => {\n\t\tconst arrangement = textArrangements[property].arrangements.text;\n\t\tconst arrangementType = Object.keys(arrangement).find((key) => arrangement[key]) || \"TextLast\";\n\t\tlet path = arrangement.path;\n\t\tlet isNavigationForId = false;\n\t\tlet isNavigationForDescription = false;\n\t\tlet propertyKeyForId = \"\";\n\t\tlet navigationKeyForId = \"\";\n\t\tlet navigationKeyForDescription = \"\";\n\t\tif (property.includes(\"/\")) {\n\t\t\tpropertyKeyForId = property.split(\"/\")[0];\n\t\t\tnavigationKeyForId = property.split(\"/\")[1];\n\t\t\tisNavigationForId = true;\n\t\t}\n\t\tif (path?.includes(\"/\")) {\n\t\t\tpath = arrangement.path.split(\"/\")[0];\n\t\t\tnavigationKeyForDescription = arrangement.path.split(\"/\")[1];\n\t\t\tisNavigationForDescription = true;\n\t\t}\n\t\ttextArrangementOptions.push({\n\t\t\tname: property,\n\t\t\tarrangementType,\n\t\t\tvalue: arrangement.path,\n\t\t\tpropertyKeyForDescription: path,\n\t\t\tpropertyKeyForId: property.includes(\"/\") ? propertyKeyForId : property,\n\t\t\ttextArrangement: arrangementType,\n\t\t\tisNavigationForId,\n\t\t\tisNavigationForDescription,\n\t\t\tnavigationKeyForId,\n\t\t\tnavigationKeyForDescription,\n\t\t\tnavigationalPropertiesForDescription: [],\n\t\t\tnavigationalPropertiesForId: []\n\t\t});\n\t});\n\treturn textArrangementOptions;\n}\n\n/**\n * Parses the formatter expression and returns the formatter name, property path and parameters\n *\n * @param path\n * @returns\n */\nexport function parseFormatterExpression(path = \"\"): ParsedFormatterExpression {\n\tconst formatterOptions = getFormatterConfiguration();\n\tconst formatterName = path.split(\"{=\")[1]?.split(\"(\")[0]?.trim();\n\n\tif (!formatterName) {\n\t\treturn {\n\t\t\tformatterName: \"\",\n\t\t\tpropertyPath: \"\",\n\t\t\tparameters: []\n\t\t};\n\t}\n\n\tconst selectedFormatter = formatterOptions.find((formatter) => formatter.formatterName === formatterName);\n\tconst bindingInfo = BindingParser.complexParser(path);\n\tconst propertyPath: string = bindingInfo.parts[0].path;\n\tconst propertyExpression = \"${\" + propertyPath + \"}\";\n\tconst parameters: Array<FormatterConfigParameters> = [];\n\n\tlet bindingPartial = path;\n\tbindingPartial = path.trim().replace(\"{=\", \"\");\n\tbindingPartial = bindingPartial.substring(0, bindingPartial.lastIndexOf(\"}\"));\n\tbindingPartial = bindingPartial.replace(`${formatterName}(`, \"\");\n\tbindingPartial = bindingPartial.substring(0, bindingPartial.lastIndexOf(\")\"));\n\n\tlet parametersExpression = bindingPartial.replace(`${propertyExpression}`, \"\").trim();\n\tconst hasParameters = parametersExpression.length > 0;\n\n\tif (hasParameters) {\n\t\tconst formatterParameters = selectedFormatter?.parameters || [];\n\t\tfor (const parameter of formatterParameters) {\n\t\t\tif (parameter.type === \"object\") {\n\t\t\t\tconst startIndex = parametersExpression.indexOf(\"{\");\n\t\t\t\tconst endIndex = parametersExpression.indexOf(\"}\");\n\t\t\t\tconst options = parametersExpression.substring(startIndex, endIndex + 1);\n\t\t\t\tparametersExpression = parametersExpression.substring(endIndex + 1);\n\t\t\t\ttry {\n\t\t\t\t\tparameters.push(JSON.parse(options) as JSONObject);\n\t\t\t\t} catch {\n\t\t\t\t\tLog.error(\"Error in parsing the formatter options\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (parameter.type === \"string\") {\n\t\t\t\tconst startIndex = parametersExpression.indexOf(\",\");\n\t\t\t\tparametersExpression = parametersExpression.substring(startIndex + 1);\n\t\t\t\tlet endIndex = parametersExpression.indexOf(\",\");\n\t\t\t\tlet options;\n\t\t\t\tif (endIndex !== -1) {\n\t\t\t\t\toptions = parametersExpression.substring(0, endIndex).trim();\n\t\t\t\t} else {\n\t\t\t\t\tendIndex = parametersExpression.indexOf(\"}\");\n\t\t\t\t\toptions = parametersExpression.substring(0, endIndex + 1).trim();\n\t\t\t\t}\n\t\t\t\tparametersExpression = parametersExpression.substring(endIndex + 1);\n\t\t\t\tparameters.push(options.replace(/['\"]+/g, \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tformatterName,\n\t\tpropertyPath,\n\t\tparameters\n\t};\n}\n\n/**\n * Updates the selected formatter with received parameters and returns the updated formatter\n *\n * @param sPropertyPath\n * @returns\n */\nexport function updateAndGetSelectedFormatters(sPropertyPath: string): FormatterConfiguration {\n\tconst formatterOptions = getFormatterConfiguration();\n\tconst formatterConfig = parseFormatterExpression(sPropertyPath);\n\tconst selectedFormatter = {\n\t\t...formatterOptions.find((options) => options.formatterName === formatterConfig.formatterName)\n\t} as FormatterConfiguration;\n\tselectedFormatter.property = formatterConfig.propertyPath;\n\n\tif (!selectedFormatter.parameters?.length) {\n\t\treturn selectedFormatter;\n\t}\n\n\tconst parametersLength = selectedFormatter.parameters.length;\n\tfor (let i = 0; i < parametersLength; i++) {\n\t\tconst formatterConfigParameters = formatterConfig.parameters;\n\t\tif (selectedFormatter.parameters[i].type === \"object\" && typeof formatterConfigParameters[i] === \"object\") {\n\t\t\tupdatePropertiesForObjectType(selectedFormatter, formatterConfigParameters, i);\n\t\t}\n\n\t\tif (selectedFormatter.parameters[i].type === \"string\" && typeof formatterConfigParameters[i] === \"string\") {\n\t\t\tselectedFormatter.parameters[i].value = formatterConfigParameters[i];\n\t\t}\n\t}\n\n\treturn selectedFormatter;\n}\n\n/**\n *  Updates the properties for the object type parameters\n *\n * @param selectedFormatter\n * @param formatterConfigParameters\n * @param index\n */\nfunction updatePropertiesForObjectType(\n\tselectedFormatter: FormatterConfiguration,\n\tformatterConfigParameters: Array<FormatterConfigParameters>,\n\tindex: number\n) {\n\tconst properties = selectedFormatter!.parameters![index].properties;\n\n\tproperties?.forEach((property) => {\n\t\tif (property.type === \"boolean\") {\n\t\t\tproperty[\"selected\"] = (formatterConfigParameters[index] as JSONObject)[property.name] as boolean;\n\t\t} else if (property.type === \"enum\") {\n\t\t\tproperty[\"selectedKey\"] = (formatterConfigParameters[index] as JSONObject)[property.name] as string;\n\t\t} else {\n\t\t\tproperty[\"value\"] =\n\t\t\t\ttypeof formatterConfigParameters === \"object\"\n\t\t\t\t\t? ((formatterConfigParameters[index] as JSONObject)[property.name] as string)\n\t\t\t\t\t: formatterConfigParameters[index];\n\t\t}\n\t});\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":129,"column":0},"map":{"version":3,"file":"Transpiler.js","names":["sap","ui","define","sap_cards_ap_common_adaptiveCards_AdaptiveCardRenderer","sap_cards_ap_transpiler_cardTranspiler_Transpile","CoreElement","ODataUtils","getAdaptiveCardForRendering","convertIntegrationCardToAdaptive","transpileIntegrationCardToAdaptive","oDialogModel","oCard","getElementById","oManifest","getManifest","keyParameters","getProperty","appIntent","oAdaptiveCardManifest","adaptiveCardData","Object","assign","properties","forEach","property","isDate","name","dateValue","toISOString","iterateObject","$data","sHostConfig","getSelectedItem","getBindingContext","renderedCard","adaptiveCardPreview","document","querySelector","setTimeout","innerHTML","updateEmptyStrings","appendChild","nodeList","querySelectorAll","nodeArray","Array","from","node","textContent","includes","key","hasOwnProperty","processKey","value","isPropertyTypeDate","__edmType","__exports","__esModule"],"sources":["Transpiler.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getAdaptiveCardForRendering } from \"sap/cards/ap/common/adaptiveCards/AdaptiveCardRenderer\";\nimport { convertIntegrationCardToAdaptive } from \"sap/cards/ap/transpiler/cardTranspiler/Transpile\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport * as ODataUtils from \"../odata/ODataUtils\";\n\ntype AdaptiveCardData = {\n\t[key: string]: string | DateObject;\n};\n\ntype DateObject = {\n\t__edmType: string;\n\t[key: string]: unknown;\n};\n\n/**\n * Transpiles an Integration Card into an Adaptive Card.\n *\n * @param {JSONModel} oDialogModel - The Integration Card to transpile.\n * @returns {AdaptiveCard} The resulting Adaptive Card.\n * @throws {TranspilationError} If the Integration Card cannot be transpiled.\n */\nexport function transpileIntegrationCardToAdaptive(oDialogModel: JSONModel) {\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tconst oManifest = oCard.getManifest() as CardManifest;\n\tconst keyParameters = oDialogModel.getProperty(\"/configuration/keyParameters\");\n\tconst appIntent = oDialogModel.getProperty(\"/configuration/appIntent\");\n\tconst oAdaptiveCardManifest = convertIntegrationCardToAdaptive(oManifest, appIntent, keyParameters);\n\tconst adaptiveCardData = Object.assign({}, oDialogModel.getProperty(\"/configuration/$data\"));\n\tconst properties = oDialogModel.getProperty(\"/configuration/properties\");\n\tproperties.forEach(function (property) {\n\t\tif (property?.isDate && adaptiveCardData[property?.name] && typeof adaptiveCardData[property?.name] === \"object\") {\n\t\t\tconst dateValue = adaptiveCardData[property?.name];\n\t\t\tadaptiveCardData[property?.name] = dateValue?.toISOString() ? dateValue?.toISOString() : adaptiveCardData[property?.name];\n\t\t}\n\t});\n\n\titerateObject(adaptiveCardData);\n\n\toAdaptiveCardManifest.$data = adaptiveCardData;\n\tconst sHostConfig = (CoreElement.getElementById(\"cardGeneratorDialog--preview-select\") as any)\n\t\t.getSelectedItem()\n\t\t.getBindingContext(\"previewOptions\")\n\t\t.getProperty(\"hostConfig\");\n\n\tlet renderedCard: HTMLElement | undefined;\n\tif (sHostConfig) {\n\t\trenderedCard = getAdaptiveCardForRendering(sHostConfig, oAdaptiveCardManifest);\n\t}\n\tconst adaptiveCardPreview = document.querySelector(\"#adaptiveCardPreview\");\n\n\tif (adaptiveCardPreview && renderedCard) {\n\t\tsetTimeout(function () {\n\t\t\tadaptiveCardPreview.innerHTML = \"\";\n\t\t\tupdateEmptyStrings(renderedCard);\n\t\t\tadaptiveCardPreview.appendChild(renderedCard);\n\t\t});\n\t}\n}\n\n/**\n * Function to update &minus; strings in the rendered card textblock to '-'\n * as JS Engine will not understand &minus; and will not render it to '-'.\n *\n * @param renderedCard\n */\nfunction updateEmptyStrings(renderedCard: HTMLElement): void {\n\tconst nodeList = renderedCard.querySelectorAll(\".ac-textBlock\");\n\tconst nodeArray = Array.from(nodeList);\n\tnodeArray.forEach((node) => {\n\t\tif (node.textContent?.includes(\"&minus;\")) {\n\t\t\tnode.textContent = \"-\";\n\t\t}\n\t});\n}\n\n/**\n * Iterates over the properties of the given adaptive card data object and processes each key.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object to iterate over.\n * @returns {void}\n */\nfunction iterateObject(adaptiveCardData: AdaptiveCardData): void {\n\tfor (const key in adaptiveCardData) {\n\t\tif (adaptiveCardData.hasOwnProperty(key)) {\n\t\t\tprocessKey(adaptiveCardData, key);\n\t\t}\n\t}\n}\n\n/**\n * Processes a key in the adaptive card data object. If the value associated with the key is an object\n * and has a valid EDM type, it converts the value to an ISO string if possible. It also recursively\n * iterates over the object if the value is an object.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object containing the key to process.\n * @param {string} key - The key in the adaptive card data object to process.\n */\nfunction processKey(adaptiveCardData: AdaptiveCardData, key: string): void {\n\tconst value = adaptiveCardData[key];\n\tif (typeof value === 'object' && value !== null) {\n\t\tif (ODataUtils.isPropertyTypeDate(value?.__edmType)) {\n\t\t\tadaptiveCardData[key] = value?.toISOString ? value.toISOString() : value;\n\t\t}\n\t\titerateObject(value);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,mKAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAISC,EAA2BJ,EAAA,qCAC3BK,EAAgCJ,EAAA,oCAsBlC,SAASK,EAAmCC,GAClD,MAAMC,EAAQN,EAAYO,eAAe,oCACzC,MAAMC,EAAYF,EAAMG,cACxB,MAAMC,EAAgBL,EAAaM,YAAY,gCAC/C,MAAMC,EAAYP,EAAaM,YAAY,4BAC3C,MAAME,EAAwBV,EAAiCK,EAAWI,EAAWF,GACrF,MAAMI,EAAmBC,OAAOC,OAAO,CAAC,EAAGX,EAAaM,YAAY,yBACpE,MAAMM,EAAaZ,EAAaM,YAAY,6BAC5CM,EAAWC,QAAQ,SAAUC,GAC5B,GAAIA,GAAUC,QAAUN,EAAiBK,GAAUE,cAAgBP,EAAiBK,GAAUE,QAAU,SAAU,CACjH,MAAMC,EAAYR,EAAiBK,GAAUE,MAC7CP,EAAiBK,GAAUE,MAAQC,GAAWC,cAAgBD,GAAWC,cAAgBT,EAAiBK,GAAUE,KACrH,CACD,GAEAG,EAAcV,GAEdD,EAAsBY,MAAQX,EAC9B,MAAMY,EAAe1B,EAAYO,eAAe,uCAC9CoB,kBACAC,kBAAkB,kBAClBjB,YAAY,cAEd,IAAIkB,EACJ,GAAIH,EAAa,CAChBG,EAAe3B,EAA4BwB,EAAab,EACzD,CACA,MAAMiB,EAAsBC,SAASC,cAAc,wBAEnD,GAAIF,GAAuBD,EAAc,CACxCI,WAAW,WACVH,EAAoBI,UAAY,GAChCC,EAAmBN,GACnBC,EAAoBM,YAAYP,EACjC,EACD,CACD,CAQA,SAASM,EAAmBN,GAC3B,MAAMQ,EAAWR,EAAaS,iBAAiB,iBAC/C,MAAMC,EAAYC,MAAMC,KAAKJ,GAC7BE,EAAUrB,QAASwB,IAClB,GAAIA,EAAKC,aAAaC,SAAS,WAAY,CAC1CF,EAAKC,YAAc,GACpB,GAEF,CAQA,SAASnB,EAAcV,GACtB,IAAK,MAAM+B,KAAO/B,EAAkB,CACnC,GAAIA,EAAiBgC,eAAeD,GAAM,CACzCE,EAAWjC,EAAkB+B,EAC9B,CACD,CACD,CAUA,SAASE,EAAWjC,EAAoC+B,GACvD,MAAMG,EAAQlC,EAAiB+B,GAC/B,UAAWG,IAAU,UAAYA,IAAU,KAAM,CAChD,GAAI/C,EAAWgD,mBAAmBD,GAAOE,WAAY,CACpDpC,EAAiB+B,GAAOG,GAAOzB,YAAcyB,EAAMzB,cAAgByB,CACpE,CACAxB,EAAcwB,EACf,CACD,CAAC,IAAAG,EAAA,CAAAC,WAAA,MAAAD,EAAA/C,qCAAA,OAAA+C,CAAA","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":136,"column":0},"map":{"version":3,"file":"library.js","names":["sap","ui","define","a","r","s","i","e","n","p","t","init","name","version","apiVersion","dependencies","types","interfaces","controls","elements","noLibraryCSS"],"sources":["library-dbg.js"],"mappings":"AAAA;;;;AAIA,aAAaA,IAAIC,GAAGC,OAAO,CAAC,8BAA8B,kCAAkC,gBAAgB,kBAAkB,kBAAkB,sBAAsB,8BAA8B,SAASC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,GAAG,aAAa,MAAMC,EAAEH,EAAEI,KAAK,CAACC,KAAK,yBAAyBC,QAAQ,UAAUC,WAAW,EAAEC,aAAa,CAAC,cAAc,QAAQ,UAAU,qBAAqB,sBAAsB,2BAA2BC,MAAM,GAAGC,WAAW,GAAGC,SAAS,GAAGC,SAAS,GAAGC,aAAa,OAAO,OAAOV,CAAC","ignoreList":[],"sourceRoot":""}},{"offset":{"line":144,"column":0},"map":{"version":3,"file":"ODataTypes.js","names":["sap","ui","define","PropertyInfoType","__exports","__esModule"],"sources":["ODataTypes.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport type PropertyInfo = {\n\ttextArrangement?: string;\n\tlabel: string;\n\ttype: string;\n\tname: string;\n\tUOM?: string;\n\tisDate?: boolean;\n\tvalue?: string;\n\tlabelWithValue?: string;\n\tproperties?: [];\n\tcategory?: string;\n\tkind: string;\n};\n\nexport enum PropertyInfoType {\n\tProperty = \"Property\",\n\tNavigationProperty = \"NavigationProperty\"\n}\n\nexport type PropertyInfoMap = Array<PropertyInfo>;\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,+BAkBYC,EAAgB,SAAhBA,KAAgB,uBAAhBA,EAAgB,kDAAhBA,CAAgB,EAAhBA,GAAgB,QAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,mBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":"odata"}},{"offset":{"line":151,"column":0},"map":{"version":3,"file":"ODataUtils.js","names":["sap","ui","define","encodeURLParameters","sap_cards_ap_common_odata_ODataUtils","V2ODataModel","___ODataTypes","V2MetadataAnalyzer","V4MetadataAnalyzer","createContextParameter","PropertyInfoType","getLabelForEntitySet","getLabelForEntitySetV2","getPropertyInfoFromEntity","getPropertyInfoFromEntityV2","getNavigationPropertyInfoFromEntity","getNavigationPropertyInfoFromEntityV2","getMetaModelObjectForEntitySet","getMetaModelObjectForEntitySetForODataV2","getLabelForEntitySetV4","getPropertyInfoFromEntityV4","getNavigationPropertyInfoFromEntityV4","getMetaModelObjectForEntitySetForODataV4","isODataV4Model","oModel","isA","fetchDataAsyncV4","sUrl","sPath","queryParams","formattedUrl","endsWith","format","parameters","sFormattedUrl","Promise","resolve","fetch","then","response","json","data","catch","err","Error","e","reject","fetchDataAsyncV2","fnSuccess","oData","fnFailure","oError","read","success","error","urlParameters","fetchDataAsync","bODataV4","arguments","length","undefined","Object","keys","forEach","key","oAppModel","sEntitySet","withNavigation","resourceBundle","metaModel","getPropertyLabel","sProperty","propertyType","Property","propertyInfo","property","find","oProperty","name","label","getDataType","dataTypeMap","Boolean","Byte","SByte","Int16","Int32","Int64","Single","Double","Float","Decimal","Guid","String","Date","DateTime","DateTimeOffset","Time","Binary","Stream","TimeOfDay","Duration","type","startsWith","replace","createPathWithEntityContext","path","oDataV4","index","indexOf","entitySetName","substring","context","isPropertyTypeDate","dataType","__exports","__esModule"],"sources":["ODataUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport encodeURLParameters from \"sap/base/security/encodeURLParameters\";\nimport { createContextParameter } from \"sap/cards/ap/common/odata/ODataUtils\";\nimport type ODataMetaModel from \"sap/ui/model/odata/ODataMetaModel\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type { default as V4ODataMetaModel } from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport { PropertyInfo, PropertyInfoType } from \"./ODataTypes\";\nimport * as V2MetadataAnalyzer from \"./v2/MetadataAnalyzer\";\nimport * as V4MetadataAnalyzer from \"./v4/MetadataAnalyzer\";\nconst {\n\tgetLabelForEntitySet: getLabelForEntitySetV2,\n\tgetPropertyInfoFromEntity: getPropertyInfoFromEntityV2,\n\tgetNavigationPropertyInfoFromEntity: getNavigationPropertyInfoFromEntityV2,\n\tgetMetaModelObjectForEntitySet: getMetaModelObjectForEntitySetForODataV2\n} = V2MetadataAnalyzer;\n\nconst {\n\tgetLabelForEntitySet: getLabelForEntitySetV4,\n\tgetPropertyInfoFromEntity: getPropertyInfoFromEntityV4,\n\tgetNavigationPropertyInfoFromEntity: getNavigationPropertyInfoFromEntityV4,\n\tgetMetaModelObjectForEntitySet: getMetaModelObjectForEntitySetForODataV4\n} = V4MetadataAnalyzer;\n\nexport const isODataV4Model = function (oModel: V2ODataModel | V4ODataModel | undefined): boolean {\n\treturn (oModel && oModel.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\")) || false;\n};\n\nexport const fetchDataAsyncV4 = async function (sUrl: string, sPath: string, queryParams: Record<string, string>) {\n\tconst formattedUrl = sUrl.endsWith(\"/\") ? sUrl : `${sUrl}/`;\n\tqueryParams.format = \"json\";\n\tconst parameters = encodeURLParameters(queryParams);\n\tconst sFormattedUrl = `${formattedUrl}${sPath}?${parameters}`;\n\treturn fetch(sFormattedUrl)\n\t\t.then((response) => response.json())\n\t\t.then((data) => data)\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err);\n\t\t});\n};\n\nconst fetchDataAsyncV2 = async function (sUrl: string, sPath: string, queryParams: Record<string, string>) {\n\tconst oModel = new V2ODataModel(sUrl);\n\treturn new Promise(function (resolve, reject) {\n\t\tconst fnSuccess = function (oData: object) {\n\t\t\tresolve(oData);\n\t\t};\n\t\tconst fnFailure = function (oError: Error) {\n\t\t\treject(oError);\n\t\t};\n\t\toModel.read(\"/\" + sPath, { success: fnSuccess, error: fnFailure, urlParameters: queryParams });\n\t});\n};\n\nexport const fetchDataAsync = async function (sUrl: string, sPath: string, bODataV4?: boolean, urlParameters: Record<string, string> = {}) {\n\tconst queryParams: Record<string, string> = {};\n\tObject.keys(urlParameters).forEach((key) => {\n\t\tif (urlParameters[key].length) {\n\t\t\tqueryParams[key] = urlParameters[key];\n\t\t}\n\t});\n\n\tif (bODataV4) {\n\t\treturn fetchDataAsyncV4(sUrl, sPath, queryParams);\n\t} else {\n\t\treturn fetchDataAsyncV2(sUrl, sPath, queryParams);\n\t}\n};\n\nexport const getLabelForEntitySet = function (oAppModel: V2ODataModel | V4ODataModel | undefined, sEntitySet: string) {\n\tif (!oAppModel) {\n\t\treturn \"\";\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getLabelForEntitySetV2(oAppModel, sEntitySet);\n\t} else {\n\t\treturn getLabelForEntitySetV4(oAppModel, sEntitySet);\n\t}\n};\n\nexport const getPropertyInfoFromEntity = function (\n\toAppModel: V2ODataModel | V4ODataModel | undefined,\n\tsEntitySet: string,\n\twithNavigation: boolean,\n\tresourceBundle?: ResourceBundle\n) {\n\tif (!oAppModel) {\n\t\treturn [];\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getPropertyInfoFromEntityV2(oAppModel, sEntitySet, withNavigation, resourceBundle);\n\t} else {\n\t\treturn getPropertyInfoFromEntityV4(oAppModel, sEntitySet, withNavigation, resourceBundle);\n\t}\n};\n\nexport const getNavigationPropertyInfoFromEntity = function (oAppModel: V2ODataModel | V4ODataModel | undefined, sEntitySet: string) {\n\tif (!oAppModel) {\n\t\treturn [];\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getNavigationPropertyInfoFromEntityV2(oAppModel, sEntitySet);\n\t} else {\n\t\treturn getNavigationPropertyInfoFromEntityV4(oAppModel, sEntitySet);\n\t}\n};\n\nexport const getMetaModelObjectForEntitySet = function (\n\tmetaModel: ODataMetaModel | V4ODataMetaModel,\n\tsEntitySet: string,\n\tisODataV4Model: boolean\n) {\n\tif (!isODataV4Model) {\n\t\treturn getMetaModelObjectForEntitySetForODataV2(metaModel as ODataMetaModel, sEntitySet);\n\t} else {\n\t\treturn getMetaModelObjectForEntitySetForODataV4(metaModel as V4ODataMetaModel, sEntitySet);\n\t}\n};\n\nexport function getPropertyLabel(\n\toModel: V2ODataModel | V4ODataModel | undefined,\n\tsEntitySet: string,\n\tsProperty: string,\n\tpropertyType: PropertyInfoType = PropertyInfoType.Property\n) {\n\tconst propertyInfo =\n\t\tpropertyType === PropertyInfoType.Property\n\t\t\t? getPropertyInfoFromEntity(oModel, sEntitySet, false)\n\t\t\t: getNavigationPropertyInfoFromEntity(oModel, sEntitySet);\n\n\tconst property = propertyInfo.find((oProperty) => oProperty.name === sProperty);\n\treturn propertyType === PropertyInfoType.Property ? (property as PropertyInfo)?.label || \"\" : property || \"\";\n}\n\n/**\n * Get the data type of the property mapped with supported data types by integration cards configuration parameters\n * @param propertyType\n */\nexport function getDataType(propertyType: string) {\n\tconst dataTypeMap: Record<string, string> = {\n\t\tBoolean: \"boolean\",\n\t\tByte: \"integer\",\n\t\tSByte: \"integer\",\n\t\tInt16: \"integer\",\n\t\tInt32: \"integer\",\n\t\tInt64: \"number\",\n\t\tSingle: \"number\",\n\t\tDouble: \"number\",\n\t\tFloat: \"number\",\n\t\tDecimal: \"number\",\n\t\tGuid: \"string\",\n\t\tString: \"string\",\n\t\tDate: \"date\",\n\t\tDateTime: \"datetime\",\n\t\tDateTimeOffset: \"datetime\",\n\t\tTime: \"datetime\",\n\t\tBinary: \"\",\n\t\tStream: \"\",\n\t\tTimeOfDay: \"\",\n\t\tDuration: \"\"\n\t};\n\n\tconst type = propertyType.startsWith(\"Edm.\") ? propertyType.replace(\"Edm.\", \"\") : propertyType;\n\treturn dataTypeMap[type] || \"string\";\n}\n\nexport const createPathWithEntityContext = async function (path: string, oAppModel: V2ODataModel | V4ODataModel, oDataV4: boolean) {\n\tconst index = path.indexOf(\"(\");\n\tconst entitySetName = path.substring(0, index);\n\tconst context = await createContextParameter(path, oAppModel, oDataV4);\n\n\treturn `${entitySetName}(${context})`;\n};\n\n/**\n * Checks if the given data type is of a date type.\n *\n * @param {string} dataType - The data type to check.\n * @returns {boolean} - Returns `true` if the data type is one of \"Edm.Date\", \"Edm.DateTimeOffset\", or \"Edm.TimeOfDay\"; otherwise, returns `false`.\n */\n\nexport function isPropertyTypeDate(dataType: string): boolean {\n\treturn [\"Edm.Date\", \"Edm.DateTime\", \"Edm.DateTimeOffset\", \"Edm.TimeOfDay\"].indexOf(dataType) > -1;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"odata"}},{"offset":{"line":158,"column":0},"map":{"version":3,"file":"MetadataAnalyzer.js","names":["sap","ui","define","Annotatations","label","isPotentiallySensitive","isoCurrency","unit","getNavigationPropertyInfoFromEntity","oModel","sEntitySet","oMetaModel","getMetaModel","oResult","parameters","oEntityType","getEntityTypeFromEntitySet","aNavigationProperties","navigationProperty","forEach","oNavProperty","oNavigationEntitySet","getODataAssociationEnd","name","oNavigationEntityType","getODataEntityType","type","key","properties","mapProperties","property","navigationParameter","push","getPropertyInfoFromEntity","model","entitySet","withNavigation","resourceModel","metaModel","entityType","propertiesWithoutNav","map","obj","category","getText","kind","propertiesWithNav","filter","isPropertySensitive","mapPropertyInfo","oEntitySet","getODataEntitySet","oProperty","Bool","multiplicity","isDate","checkForDateType","ISOCurrency","unitOfMeasure","UOM","Path","String","getLabelForEntitySet","oEntityDef","getPropertyReference","entitySetName","entityDefinition","propertyRef","includes","getMetaModelObjectForEntitySet","navigationProperties","propertyName","navigationEntitySet","navigationEntityType","complexProperties","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport ODataMetaModel, { EntitySet, EntityType } from \"sap/ui/model/odata/ODataMetaModel\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type { RequestQueryNavigationProperties, RequestQueryParameters } from \"../../helpers/Batch\";\nimport type { NavigationParameter, NavigationParameters, Property } from \"../../helpers/CardGeneratorModel\";\nimport { PropertyInfo, PropertyInfoMap } from \"../ODataTypes\";\n\nconst Annotatations = {\n\tlabel: \"com.sap.vocabularies.Common.v1.Label\",\n\tisPotentiallySensitive: \"com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\",\n\tisoCurrency: \"Org.OData.Measures.V1.ISOCurrency\",\n\tunit: \"Org.OData.Measures.V1.Unit\"\n};\n\nexport function getNavigationPropertyInfoFromEntity(oModel: ODataModel, sEntitySet: string): NavigationParameter[] {\n\tconst oMetaModel: ODataMetaModel = oModel.getMetaModel();\n\tconst oResult: NavigationParameters = { parameters: [] };\n\n\tconst oEntityType = getEntityTypeFromEntitySet(oMetaModel, sEntitySet);\n\tconst aNavigationProperties = oEntityType?.navigationProperty || [];\n\n\taNavigationProperties.forEach((oNavProperty: any) => {\n\t\tconst oNavigationEntitySet = oMetaModel.getODataAssociationEnd(oEntityType as EntityType, oNavProperty.name);\n\t\tconst oNavigationEntityType = oMetaModel.getODataEntityType(oNavigationEntitySet.type);\n\n\t\tif (oNavigationEntityType.key) {\n\t\t\tconst properties: Property[] = mapProperties(oNavigationEntityType.property);\n\t\t\tconst navigationParameter: NavigationParameter = {\n\t\t\t\tname: oNavProperty.name,\n\t\t\t\tproperties: properties\n\t\t\t};\n\t\t\toResult.parameters.push(navigationParameter);\n\t\t}\n\t});\n\treturn oResult.parameters;\n}\n\nexport function getPropertyInfoFromEntity(\n\tmodel: ODataModel,\n\tentitySet: string,\n\twithNavigation: boolean,\n\tresourceModel?: ResourceBundle\n): PropertyInfoMap {\n\tconst metaModel = model.getMetaModel();\n\tconst entityType = getEntityTypeFromEntitySet(metaModel, entitySet) as EntityType;\n\tlet properties = [];\n\tif (withNavigation) {\n\t\tconst propertiesWithoutNav = (entityType?.property || []).map((obj) => ({\n\t\t\t...obj,\n\t\t\tcategory: resourceModel?.getText(\"CRITICALITY_CONTROL_SELECT_PROP\"),\n\t\t\tkind: \"Property\"\n\t\t}));\n\t\tconst propertiesWithNav = (entityType?.navigationProperty || []).map((obj) => ({\n\t\t\t...obj,\n\t\t\tcategory: resourceModel?.getText(\"GENERATOR_CARD_SELECT_NAV_PROP\"),\n\t\t\tkind: \"NavigationProperty\"\n\t\t}));\n\t\tproperties = [...propertiesWithoutNav, ...propertiesWithNav];\n\t} else {\n\t\tproperties = entityType?.property || [];\n\t\tproperties.forEach((property) => (property.kind = \"Property\"));\n\t}\n\n\treturn properties\n\t\t.filter((property) => !isPropertySensitive(metaModel, entityType, property))\n\t\t.map((property) => mapPropertyInfo(property, withNavigation));\n}\n\nfunction getEntityTypeFromEntitySet(oMetaModel: ODataMetaModel, sEntitySet: string): EntityType | undefined {\n\tconst oEntitySet = oMetaModel.getODataEntitySet(sEntitySet);\n\treturn oMetaModel.getODataEntityType(oEntitySet?.entityType) as EntityType | undefined;\n}\n\nfunction mapProperties(properties: any[]): Property[] {\n\treturn properties.map((property: any) => ({\n\t\tlabel: property[\"sap:label\"] || property?.name,\n\t\ttype: property.type,\n\t\tname: property?.name\n\t}));\n}\n\nfunction isPropertySensitive(oMetaModel: ODataMetaModel, oEntityType: EntityType, oProperty: any): boolean {\n\tconst oNavigationEntitySet = oMetaModel.getODataAssociationEnd(oEntityType, oProperty.name);\n\treturn oProperty[Annotatations.isPotentiallySensitive]?.Bool || oNavigationEntitySet?.multiplicity === \"*\";\n}\n\nfunction mapPropertyInfo(oProperty: any, withNavigation: boolean): PropertyInfo {\n\tconst isDate: boolean = checkForDateType(oProperty);\n\tconst ISOCurrency = oProperty && oProperty[Annotatations.isoCurrency];\n\tconst unitOfMeasure = oProperty && oProperty[Annotatations.unit];\n\tlet UOM: string = \"\";\n\n\tif (ISOCurrency) {\n\t\tUOM = ISOCurrency?.Path ? ISOCurrency?.Path : ISOCurrency?.String;\n\t} else if (unitOfMeasure) {\n\t\tUOM = unitOfMeasure?.Path ? unitOfMeasure?.Path : unitOfMeasure?.String;\n\t} else if (oProperty && oProperty[\"sap:unit\"]) {\n\t\tUOM = oProperty && oProperty[\"sap:unit\"];\n\t}\n\n\treturn {\n\t\tlabel: oProperty[\"sap:label\"] || oProperty?.name,\n\t\ttype: oProperty.type,\n\t\tname: oProperty.name,\n\t\t...(withNavigation && { category: oProperty.category }),\n\t\tUOM,\n\t\tisDate,\n\t\tkind: oProperty.kind\n\t};\n}\n\nexport function checkForDateType(property: PropertyInfo | Property) {\n\treturn property.type === \"Edm.DateTimeOffset\" || property.type === \"Edm.DateTime\";\n}\n\nexport function getLabelForEntitySet(oModel: ODataModel, sEntitySet: string) {\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst oEntitySet = oMetaModel.getODataEntitySet(sEntitySet);\n\tconst oEntityDef = oMetaModel.getODataEntityType(oEntitySet?.entityType);\n\tconst label = oEntityDef[Annotatations.label] && oEntityDef[Annotatations.label].String;\n\treturn label || sEntitySet;\n}\n\nexport function getPropertyReference(oModel: ODataModel, entitySetName: string) {\n\tconst metaModel = oModel.getMetaModel();\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as EntitySet;\n\tconst entityDefinition = metaModel.getODataEntityType(entitySet.entityType) as EntityType;\n\tconst propertyRef = entityDefinition.key.propertyRef.map((property) => property.name);\n\tconst properties = getPropertyInfoFromEntity(oModel, entitySetName, false);\n\n\treturn properties.filter((property) => propertyRef.includes(property?.name));\n}\n\nexport function getMetaModelObjectForEntitySet(metaModel: ODataMetaModel, entitySetName: string): RequestQueryParameters {\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as EntitySet;\n\tconst entityType = metaModel.getODataEntityType(entitySet.entityType) as EntityType;\n\tconst properties: Property[] = entityType.property || [];\n\tconst navigationProperties: RequestQueryNavigationProperties[] = [];\n\n\tentityType.navigationProperty?.forEach((navigationProperty) => {\n\t\tconst propertyName = navigationProperty.name;\n\t\tconst navigationEntitySet = metaModel.getODataAssociationEnd(entityType, propertyName);\n\t\tif (navigationEntitySet !== null) {\n\t\t\tconst navigationEntityType = metaModel.getODataEntityType(navigationEntitySet.type) as EntityType;\n\t\t\tconst navigationProperty = navigationEntityType.property || [];\n\t\t\tnavigationProperties.push({\n\t\t\t\tname: propertyName,\n\t\t\t\tproperties: navigationProperty\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tproperties,\n\t\tnavigationProperties,\n\t\tcomplexProperties: []\n\t};\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"odata/v2"}},{"offset":{"line":165,"column":0},"map":{"version":3,"file":"MetadataAnalyzer.js","names":["sap","ui","define","___v2_MetadataAnalyzer","checkForDateType","Annotations","label","isPotentiallySensitive","isoCurrency","unit","getNavigationPropertyInfoFromEntity","model","entitySetName","metaModel","getMetaModel","entitySet","getObject","entityTypeName","$Type","entityType","navigationalData","parameters","Object","keys","filter","property","propertyDef","$kind","$isCollection","forEach","navigationProp","navigationBinding","$NavigationPropertyBinding","navEntitySetName","navEntitySet","navEntityTypeName","navEntityType","data","createNavigationObject","navigationVal","name","properties","push","annotations","map","type","getPropertyInfoFromEntity","oModel","sEntitySet","withNavigation","arguments","length","undefined","resourceModel","oMetaModel","oEntitySet","sEntityType","oEntityType","metaModelPropertiesAsObject","getMetaModelObjectForEntitySet","info","propertyCategory","getText","isDate","ISOCurrency","unitOfMeasure","UOM","$Path","category","kind","navigationProperties","navigationProperty","concat","getLabelForEntitySet","getPropertyReferenceKey","oAppModel","entityContainer","entitySetType","propertyRefKey","$Key","includes","getPropertiesFromEntityType","navigationPropertyNames","propertyName","navigationEntitySet","navigationEntityTypeName","complexProperties","complexPropertyNames","startsWith","complexPropertyType","complexType","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { RequestQueryComplexProperties, RequestQueryNavigationProperties, RequestQueryParameters } from \"../../helpers/Batch\";\nimport { EntityType, NavigationParameter, NavigationParameters } from \"../../helpers/CardGeneratorModel\";\nimport { PropertyInfo } from \"../ODataTypes\";\nimport { checkForDateType } from \"../v2/MetadataAnalyzer\";\n\nconst Annotations = {\n\tlabel: \"@com.sap.vocabularies.Common.v1.Label\",\n\tisPotentiallySensitive: \"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\",\n\tisoCurrency: \"@Org.OData.Measures.V1.ISOCurrency\",\n\tunit: \"@Org.OData.Measures.V1.Unit\"\n};\n\nexport function getNavigationPropertyInfoFromEntity(model: ODataModel, entitySetName: string): NavigationParameter[] {\n\tconst metaModel: ODataMetaModel = model.getMetaModel();\n\tconst entitySet = metaModel.getObject(\"/\" + entitySetName);\n\tconst entityTypeName = entitySet.$Type;\n\tconst entityType = metaModel.getObject(\"/\" + entityTypeName);\n\tconst navigationalData: NavigationParameters = { parameters: [] };\n\tObject.keys(entityType)\n\t\t.filter((property) => {\n\t\t\tconst propertyDef = entityType[property];\n\t\t\treturn typeof propertyDef === \"object\" && propertyDef.$kind === \"NavigationProperty\" && !propertyDef.$isCollection;\n\t\t})\n\t\t.forEach((navigationProp) => {\n\t\t\tconst navigationBinding = entitySet.$NavigationPropertyBinding;\n\t\t\tif (navigationBinding && navigationProp in navigationBinding) {\n\t\t\t\tconst navEntitySetName = navigationBinding[navigationProp];\n\t\t\t\tif (navEntitySetName !== entitySetName) {\n\t\t\t\t\tconst navEntitySet = metaModel.getObject(\"/\" + navEntitySetName);\n\t\t\t\t\tconst navEntityTypeName = navEntitySet?.$Type;\n\t\t\t\t\tconst navEntityType = metaModel.getObject(\"/\" + navEntityTypeName);\n\t\t\t\t\tconst data = createNavigationObject(navEntityType, navEntityTypeName, metaModel);\n\t\t\t\t\tconst navigationVal: NavigationParameter = {\n\t\t\t\t\t\tname: navigationProp,\n\t\t\t\t\t\tproperties: data\n\t\t\t\t\t};\n\t\t\t\t\tnavigationalData.parameters.push(navigationVal);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn navigationalData.parameters;\n}\n\nfunction createNavigationObject(entityType: EntityType, entityTypeName: string, metaModel: ODataMetaModel): PropertyInfo[] {\n\treturn Object.keys(entityType)\n\t\t.filter((property) => {\n\t\t\tconst propertyDef = entityType[property];\n\t\t\tconst annotations = metaModel.getObject(`/${entityTypeName}/${property}@`);\n\t\t\treturn (\n\t\t\t\tproperty !== \"SAP__Messages\" &&\n\t\t\t\ttypeof propertyDef === \"object\" &&\n\t\t\t\t(propertyDef.$kind === \"Property\" || propertyDef.$kind === \"NavigationProperty\") &&\n\t\t\t\t!annotations?.[Annotations.isPotentiallySensitive]\n\t\t\t);\n\t\t})\n\t\t.map((property) => {\n\t\t\tconst propertyDef = entityType[property];\n\t\t\tconst annotations = metaModel.getObject(`/${entityTypeName}/${property}@`);\n\t\t\treturn {\n\t\t\t\tlabel: annotations?.[Annotations.label] || property,\n\t\t\t\ttype: propertyDef.$Type,\n\t\t\t\tname: property\n\t\t\t};\n\t\t});\n}\n\nexport function getPropertyInfoFromEntity(\n\toModel: ODataModel,\n\tsEntitySet: string,\n\twithNavigation = false,\n\tresourceModel?: ResourceBundle\n): PropertyInfo[] {\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst oEntitySet = oMetaModel.getObject(\"/\" + sEntitySet);\n\tconst sEntityType = oEntitySet.$Type;\n\tconst oEntityType = oMetaModel.getObject(\"/\" + sEntityType);\n\tconst metaModelPropertiesAsObject = getMetaModelObjectForEntitySet(oMetaModel, sEntitySet);\n\tlet info: PropertyInfo[] = [];\n\n\tconst properties = metaModelPropertiesAsObject.properties.map((propertyDef) => {\n\t\tconst propertyCategory = resourceModel?.getText(\"CRITICALITY_CONTROL_SELECT_PROP\");\n\t\tconst annotations = oMetaModel.getObject(`/${sEntityType}/${propertyDef.name}@`);\n\t\tconst isDate = checkForDateType(propertyDef);\n\t\tconst ISOCurrency = annotations?.[Annotations.isoCurrency];\n\t\tconst unitOfMeasure = annotations?.[Annotations.unit];\n\t\tlet UOM = \"\";\n\n\t\tif (ISOCurrency) {\n\t\t\tUOM = ISOCurrency?.$Path || ISOCurrency;\n\t\t} else if (unitOfMeasure) {\n\t\t\tUOM = unitOfMeasure?.$Path || unitOfMeasure;\n\t\t}\n\n\t\treturn {\n\t\t\tlabel: annotations?.[Annotations.label] || propertyDef.name,\n\t\t\ttype: propertyDef.$Type,\n\t\t\tname: propertyDef.name,\n\t\t\t...(withNavigation && { category: propertyCategory }),\n\t\t\tkind: propertyDef.$kind,\n\t\t\tUOM,\n\t\t\tisDate\n\t\t};\n\t});\n\n\tif (withNavigation) {\n\t\tconst navigationProperties = metaModelPropertiesAsObject.navigationProperties.map((navigationProperty) => {\n\t\t\tconst propertyDef = oEntityType[navigationProperty.name];\n\t\t\tconst propertyCategory = resourceModel?.getText(\"GENERATOR_CARD_SELECT_NAV_PROP\");\n\t\t\treturn {\n\t\t\t\tlabel: navigationProperty.name,\n\t\t\t\ttype: propertyDef.$Type,\n\t\t\t\tname: navigationProperty.name,\n\t\t\t\tcategory: propertyCategory,\n\t\t\t\tkind: propertyDef.$kind,\n\t\t\t\tUOM: \"\",\n\t\t\t\tisDate: false\n\t\t\t};\n\t\t});\n\t\tinfo = info.concat(navigationProperties);\n\t}\n\treturn info.concat(properties);\n}\n\nexport function getLabelForEntitySet(oModel: ODataModel, sEntitySet: string) {\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst entitySet = oMetaModel.getObject(\"/\" + sEntitySet);\n\tconst sEntityType = entitySet.$Type;\n\tconst annotations = oMetaModel.getObject(\"/\" + sEntityType + \"@\");\n\treturn annotations[Annotations.label] || sEntitySet;\n}\n\nexport function getPropertyReferenceKey(oAppModel: ODataModel, entitySetName: string) {\n\tconst entityContainer = oAppModel.getMetaModel().getObject(\"/\");\n\tconst entitySet = entityContainer[entitySetName];\n\tconst entitySetType = entitySet?.$Type;\n\tconst propertyRefKey = oAppModel.getMetaModel().getObject(\"/\" + entitySetType)?.$Key;\n\tconst properties = getPropertyInfoFromEntity(oAppModel, entitySetName, false);\n\treturn properties.filter((property) => propertyRefKey.includes(property.name));\n}\n\nfunction getPropertiesFromEntityType(metaModel: ODataMetaModel, entityType: EntityType, entityTypeName: string): PropertyInfo[] {\n\tconst properties: PropertyInfo[] = [];\n\n\tObject.keys(entityType).forEach((property) => {\n\t\tconst propertyDef = entityType[property];\n\t\tconst isPotentiallySensitive = metaModel.getObject(`/${entityTypeName}/${property}@`)?.[Annotations.isPotentiallySensitive];\n\t\tif (\n\t\t\tproperty !== \"SAP__Messages\" &&\n\t\t\ttypeof propertyDef === \"object\" &&\n\t\t\tpropertyDef.$kind === \"Property\" &&\n\t\t\t!isPotentiallySensitive\n\t\t) {\n\t\t\tproperties.push({\n\t\t\t\t...propertyDef,\n\t\t\t\t...{ name: property }\n\t\t\t});\n\t\t}\n\t});\n\n\treturn properties;\n}\n\nexport function getMetaModelObjectForEntitySet(metaModel: ODataMetaModel, entitySetName: string): RequestQueryParameters {\n\tconst entitySet = metaModel.getObject(`/${entitySetName}`);\n\tconst entityTypeName = entitySet.$Type;\n\tconst entityType = metaModel.getObject(`/${entityTypeName}`);\n\tconst properties = getPropertiesFromEntityType(metaModel, entityType, entityTypeName);\n\n\tconst navigationPropertyNames = Object.keys(entityType).filter((property) => {\n\t\tconst propertyDef = entityType[property];\n\t\treturn typeof propertyDef === \"object\" && propertyDef.$kind === \"NavigationProperty\" && !propertyDef.$isCollection;\n\t});\n\n\tconst navigationProperties: RequestQueryNavigationProperties[] = [];\n\tnavigationPropertyNames.forEach((propertyName) => {\n\t\tconst navigationEntitySet = metaModel.getObject(`/${entitySetName}/${propertyName}`);\n\t\tconst navigationEntityTypeName = navigationEntitySet.$Type;\n\t\tconst entityType = metaModel.getObject(`/${entitySetName}/${navigationEntityTypeName}`);\n\t\tconst properties = getPropertiesFromEntityType(metaModel, entityType, navigationEntityTypeName);\n\t\tnavigationProperties.push({\n\t\t\tname: propertyName,\n\t\t\tproperties: properties\n\t\t});\n\t});\n\n\tconst complexProperties: RequestQueryComplexProperties[] = [];\n\tconst complexPropertyNames = Object.keys(entityType).filter((property) => {\n\t\tconst propertyDef = entityType[property];\n\t\treturn typeof propertyDef === \"object\" && propertyDef.$kind === \"Property\" && !propertyDef.$Type?.startsWith(\"Edm.\");\n\t});\n\n\tcomplexPropertyNames.forEach((propertyName) => {\n\t\tconst property = metaModel.getObject(`/${entitySetName}/${propertyName}`);\n\t\tconst complexPropertyType = property.$Type;\n\t\tconst complexType = metaModel.getObject(`/${entitySetName}/${complexPropertyType}`);\n\t\tconst properties = getPropertiesFromEntityType(metaModel, complexType, complexPropertyType);\n\t\tcomplexProperties.push({\n\t\t\tname: propertyName,\n\t\t\tproperties: properties\n\t\t});\n\t});\n\n\treturn {\n\t\tproperties,\n\t\tnavigationProperties,\n\t\tcomplexProperties\n\t};\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"odata/v4"}},{"offset":{"line":172,"column":0},"map":{"version":3,"file":"ActionTypes.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"types"}},{"offset":{"line":175,"column":0},"map":{"version":3,"file":"CommonTypes.js","names":["sap","ui","define","ColorIndicator","__exports","__esModule"],"sources":["CommonTypes.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport enum ColorIndicator {\n\tError = \"Error\",\n\tSuccess = \"Good\",\n\tNone = \"Neutral\",\n\tWarning = \"Critical\",\n\tCritical = \"Warning\",\n\tGood = \"Success\",\n\tNeutral = \"None\"\n}\n\nexport type CriticalityValue = {\n\tactiveCalculation?: boolean;\n\tname?: string;\n\tdeviationRangeLowValue?: string;\n\tdeviationRangeHighValue?: string;\n\ttoleranceRangeLowValue?: string;\n\ttoleranceRangeHighValue?: string;\n\timprovementDirection?: string;\n};\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,+BAIYC,EAAc,SAAdA,KAAc,iBAAdA,EAAc,kBAAdA,EAAc,kBAAdA,EAAc,sBAAdA,EAAc,sBAAdA,EAAc,kBAAdA,EAAc,yBAAdA,CAAc,EAAdA,GAAc,QAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,iBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":"types"}},{"offset":{"line":182,"column":0},"map":{"version":3,"file":"CommonUtils.js","names":["sap","ui","define","___types_CommonTypes","ColorIndicator","isBinding","sPropertyValue","startsWith","endsWith","isActiveCalculation","value","activeCalculation","getColorForGroup","criticalityValue","staticValues","deviationLow","deviationRangeLowValue","deviationHigh","deviationRangeHighValue","toleranceLow","toleranceRangeLowValue","toleranceHigh","toleranceRangeHighValue","sImprovementDirection","improvementDirection","oCriticalityConfigValues","None","Negative","Critical","Positive","name","JSON","stringify","includes","__exports","__esModule"],"sources":["CommonUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { ColorIndicator, CriticalityValue } from \"../types/CommonTypes\";\n/**\n *\n * @param sPropertyValue\n * @returns true if the property value is a binding\n */\nexport function isBinding(sPropertyValue: string) {\n\treturn sPropertyValue && sPropertyValue.startsWith(\"{\") && sPropertyValue.endsWith(\"}\");\n}\n\n/**\n * To determine if the given value is a activation `CriticalityValue`.\n *\n * @param {CriticalityValue | string} value - The value to check.\n * @returns {value is CriticalityValue} True if the value is a `CriticalityValue`, false otherwise.\n */\nfunction isActiveCalculation(value: CriticalityValue | string): value is CriticalityValue {\n\treturn (value as CriticalityValue).activeCalculation === true;\n}\n\n/**\n * Retrieves the color representation for a given criticality value or string.\n *\n * @param {CriticalityValue | string} criticalityValue - The criticality value or string to evaluate.\n * @returns {string | undefined} The formatted string representing the color, or undefined if the input is not valid.\n */\nexport function getColorForGroup(criticalityValue: CriticalityValue | string): string | undefined {\n\tif (criticalityValue) {\n\t\tif (isActiveCalculation(criticalityValue)) {\n\t\t\tconst staticValues = {\n\t\t\t\tdeviationLow: criticalityValue.deviationRangeLowValue,\n\t\t\t\tdeviationHigh: criticalityValue.deviationRangeHighValue,\n\t\t\t\ttoleranceLow: criticalityValue.toleranceRangeLowValue,\n\t\t\t\ttoleranceHigh: criticalityValue.toleranceRangeHighValue,\n\t\t\t\tsImprovementDirection: criticalityValue.improvementDirection,\n\t\t\t\toCriticalityConfigValues: { None: \"None\", Negative: \"Error\", Critical: \"Warning\", Positive: \"Success\" }\n\t\t\t};\n\t\t\treturn \"{= extension.formatters.formatValueColor(${\" + criticalityValue.name + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t\t} else if (criticalityValue.includes(\"extension.formatters.formatCriticality\")) {\n\t\t\treturn criticalityValue;\n\t\t} else if (isBinding(criticalityValue)) {\n\t\t\treturn \"{= extension.formatters.formatCriticality($\" + criticalityValue + \", 'state') }\";\n\t\t}\n\t\treturn ColorIndicator[criticalityValue as keyof typeof ColorIndicator];\n\t}\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,kCAAAC,GAAA,mBAISC,EAAcD,EAAA,kBAMhB,SAASE,EAAUC,GACzB,OAAOA,GAAkBA,EAAeC,WAAW,MAAQD,EAAeE,SAAS,IACpF,CAQA,SAASC,EAAoBC,GAC5B,OAAQA,EAA2BC,oBAAsB,IAC1D,CAQO,SAASC,EAAiBC,GAChC,GAAIA,EAAkB,CACrB,GAAIJ,EAAoBI,GAAmB,CAC1C,MAAMC,EAAe,CACpBC,aAAcF,EAAiBG,uBAC/BC,cAAeJ,EAAiBK,wBAChCC,aAAcN,EAAiBO,uBAC/BC,cAAeR,EAAiBS,wBAChCC,sBAAuBV,EAAiBW,qBACxCC,yBAA0B,CAAEC,KAAM,OAAQC,SAAU,QAASC,SAAU,UAAWC,SAAU,YAE7F,MAAO,8CAAgDhB,EAAiBiB,KAAO,KAAOC,KAAKC,UAAUlB,GAAgB,KACtH,MAAO,GAAID,EAAiBoB,SAAS,0CAA2C,CAC/E,OAAOpB,CACR,MAAO,GAAIR,EAAUQ,GAAmB,CACvC,MAAO,8CAAgDA,EAAmB,cAC3E,CACA,OAAOT,EAAeS,EACvB,CACD,CAAC,IAAAqB,EAAA,CAAAC,WAAA,MAAAD,EAAA7B,YAAA6B,EAAAtB,mBAAA,OAAAsB,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":189,"column":0},"map":{"version":3,"file":"IntegrationCardManifestParser.js","names":["sap","ui","define","___helpers_ApplicationInfo","___odata_ODataUtils","ApplicationInfo","ODataModelVersion","getMetaModelObjectForEntitySet","getAllValues","subManifest","values","key","value","push","getQueryParameters","applicationInfo","getInstance","rootComponent","getRootComponent","model","getModel","entitySet","odataModel","fetchDetails","isODataV4Model","V4","properties","navigationProperties","complexProperties","getMetaModel","queryParameters","filter","property","some","includes","name","map","forEach","navigationProperty","navigationPropertyName","selectedProperties","length","complexProperty","complexPropertyName","selectedComplexProperties","concat","getHeaderProperties","cardManifest","header","getContentProperties","content","contentQueryParams","footerQueryParams","getFooterProperties","selectedNavigationProperties","actionsStrips","footer","actionsStrip","actions","enabled","__exports","__esModule"],"sources":["IntegrationCardManifestParser.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport { ApplicationInfo, ODataModelVersion } from \"../helpers/ApplicationInfo\";\nimport { QueryParameters } from \"../helpers/Batch\";\nimport { getMetaModelObjectForEntitySet } from \"../odata/ODataUtils\";\n\ntype Model = V2ODataModel | V4ODataModel;\n\nconst getAllValues = (subManifest: Record<string, string>): string[] => {\n\tconst values: string[] = [];\n\n\tfor (const key in subManifest) {\n\t\tconst value = subManifest[key];\n\t\tif (typeof value === \"string\") {\n\t\t\tvalues.push(subManifest[key]);\n\t\t} else {\n\t\t\tvalues.push(...getAllValues(value));\n\t\t}\n\t}\n\n\treturn values;\n};\n\nconst getQueryParameters = (values: string[]) => {\n\tconst applicationInfo = ApplicationInfo.getInstance();\n\tconst rootComponent = applicationInfo.getRootComponent();\n\tconst model = rootComponent.getModel() as Model;\n\tconst { entitySet, odataModel } = applicationInfo.fetchDetails();\n\tconst isODataV4Model = odataModel === ODataModelVersion.V4;\n\tconst { properties, navigationProperties, complexProperties } = getMetaModelObjectForEntitySet(\n\t\tmodel.getMetaModel(),\n\t\tentitySet,\n\t\tisODataV4Model\n\t);\n\n\tconst queryParameters: QueryParameters = {\n\t\tproperties: [],\n\t\tnavigationProperties: []\n\t};\n\n\tqueryParameters.properties = properties\n\t\t.filter((property) => {\n\t\t\treturn values.some((value) => {\n\t\t\t\treturn value && value.includes(`{${property.name}}`);\n\t\t\t});\n\t\t})\n\t\t.map((property) => property.name);\n\n\tnavigationProperties.forEach((navigationProperty) => {\n\t\tconst navigationPropertyName = navigationProperty.name;\n\t\tconst properties = navigationProperty.properties;\n\t\tconst selectedProperties = properties\n\t\t\t.filter((property) => {\n\t\t\t\treturn values.some((value) => {\n\t\t\t\t\treturn value && value.includes(`{${navigationPropertyName}/${property.name}}`);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.map((property) => property.name);\n\n\t\tif (selectedProperties.length) {\n\t\t\tqueryParameters.navigationProperties.push({\n\t\t\t\tname: navigationPropertyName,\n\t\t\t\tproperties: selectedProperties\n\t\t\t});\n\t\t}\n\t});\n\n\tcomplexProperties.forEach((complexProperty) => {\n\t\tconst complexPropertyName = complexProperty.name;\n\t\tconst properties = complexProperty.properties;\n\t\tconst selectedProperties = properties\n\t\t\t.filter((property) => {\n\t\t\t\treturn values.some((value) => {\n\t\t\t\t\treturn value && value.includes(`{${complexPropertyName}/${property.name}}`);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.map((property) => property.name);\n\n\t\tconst selectedComplexProperties = selectedProperties.map((property) => {\n\t\t\treturn `${complexPropertyName}/${property}`;\n\t\t});\n\t\tif (selectedProperties.length) {\n\t\t\tqueryParameters.properties = queryParameters.properties.concat(selectedComplexProperties);\n\t\t}\n\t});\n\n\treturn queryParameters;\n};\n\nexport const getHeaderProperties = (cardManifest: CardManifest): QueryParameters => {\n\tconst values = getAllValues(cardManifest[\"sap.card\"].header);\n\treturn getQueryParameters(values);\n};\n\nexport const getContentProperties = (cardManifest: CardManifest): QueryParameters => {\n\tconst values = getAllValues(cardManifest[\"sap.card\"].content);\n\tconst contentQueryParams = getQueryParameters(values);\n\tconst footerQueryParams = getFooterProperties(cardManifest);\n\tconst selectedProperties = contentQueryParams.properties.concat(footerQueryParams.properties);\n\tconst selectedNavigationProperties = contentQueryParams.navigationProperties.concat(footerQueryParams.navigationProperties);\n\n\treturn {\n\t\tproperties: selectedProperties,\n\t\tnavigationProperties: selectedNavigationProperties\n\t};\n};\n\nconst getFooterProperties = (cardManifest: CardManifest): QueryParameters => {\n\tconst actionsStrips = cardManifest[\"sap.card\"].footer?.actionsStrip;\n\n\tconst values =\n\t\tactionsStrips?.map((actionsStrip) => {\n\t\t\treturn actionsStrip.actions[0].enabled as string;\n\t\t}) || [];\n\n\treturn getQueryParameters(values);\n};\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,8DAAAC,EAAAC,GAAA,mBAOSC,EAAeF,EAAA,yBAAEG,EAAiBH,EAAA,2BAElCI,EAA8BH,EAAA,kCAIvC,MAAMI,EAAgBC,IACrB,MAAMC,EAAmB,GAEzB,IAAK,MAAMC,KAAOF,EAAa,CAC9B,MAAMG,EAAQH,EAAYE,GAC1B,UAAWC,IAAU,SAAU,CAC9BF,EAAOG,KAAKJ,EAAYE,GACzB,KAAO,CACND,EAAOG,QAAQL,EAAaI,GAC7B,CACD,CAEA,OAAOF,GAGR,MAAMI,EAAsBJ,IAC3B,MAAMK,EAAkBV,EAAgBW,cACxC,MAAMC,EAAgBF,EAAgBG,mBACtC,MAAMC,EAAQF,EAAcG,WAC5B,MAAMC,UAAEA,EAASC,WAAEA,GAAeP,EAAgBQ,eAClD,MAAMC,EAAiBF,IAAehB,EAAkBmB,GACxD,MAAMC,WAAEA,EAAUC,qBAAEA,EAAoBC,kBAAEA,GAAsBrB,EAC/DY,EAAMU,eACNR,EACAG,GAGD,MAAMM,EAAmC,CACxCJ,WAAY,GACZC,qBAAsB,IAGvBG,EAAgBJ,WAAaA,EAC3BK,OAAQC,GACDtB,EAAOuB,KAAMrB,GACZA,GAASA,EAAMsB,SAAS,IAAIF,EAASG,WAG7CC,IAAKJ,GAAaA,EAASG,MAE7BR,EAAqBU,QAASC,IAC7B,MAAMC,EAAyBD,EAAmBH,KAClD,MAAMT,EAAaY,EAAmBZ,WACtC,MAAMc,EAAqBd,EACzBK,OAAQC,GACDtB,EAAOuB,KAAMrB,GACZA,GAASA,EAAMsB,SAAS,IAAIK,KAA0BP,EAASG,WAGvEC,IAAKJ,GAAaA,EAASG,MAE7B,GAAIK,EAAmBC,OAAQ,CAC9BX,EAAgBH,qBAAqBd,KAAK,CACzCsB,KAAMI,EACNb,WAAYc,GAEd,IAGDZ,EAAkBS,QAASK,IAC1B,MAAMC,EAAsBD,EAAgBP,KAC5C,MAAMT,EAAagB,EAAgBhB,WACnC,MAAMc,EAAqBd,EACzBK,OAAQC,GACDtB,EAAOuB,KAAMrB,GACZA,GAASA,EAAMsB,SAAS,IAAIS,KAAuBX,EAASG,WAGpEC,IAAKJ,GAAaA,EAASG,MAE7B,MAAMS,EAA4BJ,EAAmBJ,IAAKJ,GAClD,GAAGW,KAAuBX,KAElC,GAAIQ,EAAmBC,OAAQ,CAC9BX,EAAgBJ,WAAaI,EAAgBJ,WAAWmB,OAAOD,EAChE,IAGD,OAAOd,GAGD,MAAMgB,EAAuBC,IACnC,MAAMrC,EAASF,EAAauC,EAAa,YAAYC,QACrD,OAAOlC,EAAmBJ,IAGpB,MAAMuC,EAAwBF,IACpC,MAAMrC,EAASF,EAAauC,EAAa,YAAYG,SACrD,MAAMC,EAAqBrC,EAAmBJ,GAC9C,MAAM0C,EAAoBC,EAAoBN,GAC9C,MAAMP,EAAqBW,EAAmBzB,WAAWmB,OAAOO,EAAkB1B,YAClF,MAAM4B,EAA+BH,EAAmBxB,qBAAqBkB,OAAOO,EAAkBzB,sBAEtG,MAAO,CACND,WAAYc,EACZb,qBAAsB2B,IAIxB,MAAMD,EAAuBN,IAC5B,MAAMQ,EAAgBR,EAAa,YAAYS,QAAQC,aAEvD,MAAM/C,EACL6C,GAAenB,IAAKqB,GACZA,EAAaC,QAAQ,GAAGC,UAC1B,GAEP,OAAO7C,EAAmBJ,IACzB,IAAAkD,EAAA,CAAAC,WAAA,MAAAD,EAAAd,sBAAAc,EAAAX,uBAAA,OAAAW,CAAA","ignoreList":[],"sourceRoot":"utils"}}]}