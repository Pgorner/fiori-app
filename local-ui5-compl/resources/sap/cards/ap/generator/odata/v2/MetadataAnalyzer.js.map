{"version":3,"file":"MetadataAnalyzer.js","names":["sap","ui","define","Annotatations","label","isPotentiallySensitive","isoCurrency","unit","getNavigationPropertyInfoFromEntity","oModel","sEntitySet","oMetaModel","getMetaModel","oResult","parameters","oEntityType","getEntityTypeFromEntitySet","aNavigationProperties","navigationProperty","forEach","oNavProperty","oNavigationEntitySet","getODataAssociationEnd","name","oNavigationEntityType","getODataEntityType","type","key","properties","mapProperties","property","navigationParameter","push","getPropertyInfoFromEntity","model","entitySet","withNavigation","resourceModel","metaModel","entityType","propertiesWithoutNav","map","obj","category","getText","kind","propertiesWithNav","filter","isPropertySensitive","mapPropertyInfo","oEntitySet","getODataEntitySet","oProperty","Bool","multiplicity","isDate","checkForDateType","ISOCurrency","unitOfMeasure","UOM","Path","String","getLabelForEntitySet","oEntityDef","getPropertyReference","entitySetName","entityDefinition","propertyRef","includes","getMetaModelObjectForEntitySet","navigationProperties","propertyName","navigationEntitySet","navigationEntityType","complexProperties","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport ODataMetaModel, { EntitySet, EntityType } from \"sap/ui/model/odata/ODataMetaModel\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type { RequestQueryNavigationProperties, RequestQueryParameters } from \"../../helpers/Batch\";\nimport type { NavigationParameter, NavigationParameters, Property } from \"../../helpers/CardGeneratorModel\";\nimport { PropertyInfo, PropertyInfoMap } from \"../ODataTypes\";\n\nconst Annotatations = {\n\tlabel: \"com.sap.vocabularies.Common.v1.Label\",\n\tisPotentiallySensitive: \"com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\",\n\tisoCurrency: \"Org.OData.Measures.V1.ISOCurrency\",\n\tunit: \"Org.OData.Measures.V1.Unit\"\n};\n\nexport function getNavigationPropertyInfoFromEntity(oModel: ODataModel, sEntitySet: string): NavigationParameter[] {\n\tconst oMetaModel: ODataMetaModel = oModel.getMetaModel();\n\tconst oResult: NavigationParameters = { parameters: [] };\n\n\tconst oEntityType = getEntityTypeFromEntitySet(oMetaModel, sEntitySet);\n\tconst aNavigationProperties = oEntityType?.navigationProperty || [];\n\n\taNavigationProperties.forEach((oNavProperty: any) => {\n\t\tconst oNavigationEntitySet = oMetaModel.getODataAssociationEnd(oEntityType as EntityType, oNavProperty.name);\n\t\tconst oNavigationEntityType = oMetaModel.getODataEntityType(oNavigationEntitySet.type);\n\n\t\tif (oNavigationEntityType.key) {\n\t\t\tconst properties: Property[] = mapProperties(oNavigationEntityType.property);\n\t\t\tconst navigationParameter: NavigationParameter = {\n\t\t\t\tname: oNavProperty.name,\n\t\t\t\tproperties: properties\n\t\t\t};\n\t\t\toResult.parameters.push(navigationParameter);\n\t\t}\n\t});\n\treturn oResult.parameters;\n}\n\nexport function getPropertyInfoFromEntity(\n\tmodel: ODataModel,\n\tentitySet: string,\n\twithNavigation: boolean,\n\tresourceModel?: ResourceBundle\n): PropertyInfoMap {\n\tconst metaModel = model.getMetaModel();\n\tconst entityType = getEntityTypeFromEntitySet(metaModel, entitySet) as EntityType;\n\tlet properties = [];\n\tif (withNavigation) {\n\t\tconst propertiesWithoutNav = (entityType?.property || []).map((obj) => ({\n\t\t\t...obj,\n\t\t\tcategory: resourceModel?.getText(\"CRITICALITY_CONTROL_SELECT_PROP\"),\n\t\t\tkind: \"Property\"\n\t\t}));\n\t\tconst propertiesWithNav = (entityType?.navigationProperty || []).map((obj) => ({\n\t\t\t...obj,\n\t\t\tcategory: resourceModel?.getText(\"GENERATOR_CARD_SELECT_NAV_PROP\"),\n\t\t\tkind: \"NavigationProperty\"\n\t\t}));\n\t\tproperties = [...propertiesWithoutNav, ...propertiesWithNav];\n\t} else {\n\t\tproperties = entityType?.property || [];\n\t\tproperties.forEach((property) => (property.kind = \"Property\"));\n\t}\n\n\treturn properties\n\t\t.filter((property) => !isPropertySensitive(metaModel, entityType, property))\n\t\t.map((property) => mapPropertyInfo(property, withNavigation));\n}\n\nfunction getEntityTypeFromEntitySet(oMetaModel: ODataMetaModel, sEntitySet: string): EntityType | undefined {\n\tconst oEntitySet = oMetaModel.getODataEntitySet(sEntitySet);\n\treturn oMetaModel.getODataEntityType(oEntitySet?.entityType) as EntityType | undefined;\n}\n\nfunction mapProperties(properties: any[]): Property[] {\n\treturn properties.map((property: any) => ({\n\t\tlabel: property[\"sap:label\"] || property?.name,\n\t\ttype: property.type,\n\t\tname: property?.name\n\t}));\n}\n\nfunction isPropertySensitive(oMetaModel: ODataMetaModel, oEntityType: EntityType, oProperty: any): boolean {\n\tconst oNavigationEntitySet = oMetaModel.getODataAssociationEnd(oEntityType, oProperty.name);\n\treturn oProperty[Annotatations.isPotentiallySensitive]?.Bool || oNavigationEntitySet?.multiplicity === \"*\";\n}\n\nfunction mapPropertyInfo(oProperty: any, withNavigation: boolean): PropertyInfo {\n\tconst isDate: boolean = checkForDateType(oProperty);\n\tconst ISOCurrency = oProperty && oProperty[Annotatations.isoCurrency];\n\tconst unitOfMeasure = oProperty && oProperty[Annotatations.unit];\n\tlet UOM: string = \"\";\n\n\tif (ISOCurrency) {\n\t\tUOM = ISOCurrency?.Path ? ISOCurrency?.Path : ISOCurrency?.String;\n\t} else if (unitOfMeasure) {\n\t\tUOM = unitOfMeasure?.Path ? unitOfMeasure?.Path : unitOfMeasure?.String;\n\t} else if (oProperty && oProperty[\"sap:unit\"]) {\n\t\tUOM = oProperty && oProperty[\"sap:unit\"];\n\t}\n\n\treturn {\n\t\tlabel: oProperty[\"sap:label\"] || oProperty?.name,\n\t\ttype: oProperty.type,\n\t\tname: oProperty.name,\n\t\t...(withNavigation && { category: oProperty.category }),\n\t\tUOM,\n\t\tisDate,\n\t\tkind: oProperty.kind\n\t};\n}\n\nexport function checkForDateType(property: PropertyInfo | Property) {\n\treturn property.type === \"Edm.DateTimeOffset\" || property.type === \"Edm.DateTime\";\n}\n\nexport function getLabelForEntitySet(oModel: ODataModel, sEntitySet: string) {\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst oEntitySet = oMetaModel.getODataEntitySet(sEntitySet);\n\tconst oEntityDef = oMetaModel.getODataEntityType(oEntitySet?.entityType);\n\tconst label = oEntityDef[Annotatations.label] && oEntityDef[Annotatations.label].String;\n\treturn label || sEntitySet;\n}\n\nexport function getPropertyReference(oModel: ODataModel, entitySetName: string) {\n\tconst metaModel = oModel.getMetaModel();\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as EntitySet;\n\tconst entityDefinition = metaModel.getODataEntityType(entitySet.entityType) as EntityType;\n\tconst propertyRef = entityDefinition.key.propertyRef.map((property) => property.name);\n\tconst properties = getPropertyInfoFromEntity(oModel, entitySetName, false);\n\n\treturn properties.filter((property) => propertyRef.includes(property?.name));\n}\n\nexport function getMetaModelObjectForEntitySet(metaModel: ODataMetaModel, entitySetName: string): RequestQueryParameters {\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as EntitySet;\n\tconst entityType = metaModel.getODataEntityType(entitySet.entityType) as EntityType;\n\tconst properties: Property[] = entityType.property || [];\n\tconst navigationProperties: RequestQueryNavigationProperties[] = [];\n\n\tentityType.navigationProperty?.forEach((navigationProperty) => {\n\t\tconst propertyName = navigationProperty.name;\n\t\tconst navigationEntitySet = metaModel.getODataAssociationEnd(entityType, propertyName);\n\t\tif (navigationEntitySet !== null) {\n\t\t\tconst navigationEntityType = metaModel.getODataEntityType(navigationEntitySet.type) as EntityType;\n\t\t\tconst navigationProperty = navigationEntityType.property || [];\n\t\t\tnavigationProperties.push({\n\t\t\t\tname: propertyName,\n\t\t\t\tproperties: navigationProperty\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tproperties,\n\t\tnavigationProperties,\n\t\tcomplexProperties: []\n\t};\n}\n"],"mappings":"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","ignoreList":[]}