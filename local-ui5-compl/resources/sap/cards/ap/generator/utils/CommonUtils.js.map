{"version":3,"file":"CommonUtils.js","names":["sap","ui","define","___types_CommonTypes","ColorIndicator","isBinding","sPropertyValue","startsWith","endsWith","isActiveCalculation","value","activeCalculation","getColorForGroup","criticalityValue","staticValues","deviationLow","deviationRangeLowValue","deviationHigh","deviationRangeHighValue","toleranceLow","toleranceRangeLowValue","toleranceHigh","toleranceRangeHighValue","sImprovementDirection","improvementDirection","oCriticalityConfigValues","None","Negative","Critical","Positive","name","JSON","stringify","includes","__exports","__esModule"],"sources":["CommonUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { ColorIndicator, CriticalityValue } from \"../types/CommonTypes\";\n/**\n *\n * @param sPropertyValue\n * @returns true if the property value is a binding\n */\nexport function isBinding(sPropertyValue: string) {\n\treturn sPropertyValue && sPropertyValue.startsWith(\"{\") && sPropertyValue.endsWith(\"}\");\n}\n\n/**\n * To determine if the given value is a activation `CriticalityValue`.\n *\n * @param {CriticalityValue | string} value - The value to check.\n * @returns {value is CriticalityValue} True if the value is a `CriticalityValue`, false otherwise.\n */\nfunction isActiveCalculation(value: CriticalityValue | string): value is CriticalityValue {\n\treturn (value as CriticalityValue).activeCalculation === true;\n}\n\n/**\n * Retrieves the color representation for a given criticality value or string.\n *\n * @param {CriticalityValue | string} criticalityValue - The criticality value or string to evaluate.\n * @returns {string | undefined} The formatted string representing the color, or undefined if the input is not valid.\n */\nexport function getColorForGroup(criticalityValue: CriticalityValue | string): string | undefined {\n\tif (criticalityValue) {\n\t\tif (isActiveCalculation(criticalityValue)) {\n\t\t\tconst staticValues = {\n\t\t\t\tdeviationLow: criticalityValue.deviationRangeLowValue,\n\t\t\t\tdeviationHigh: criticalityValue.deviationRangeHighValue,\n\t\t\t\ttoleranceLow: criticalityValue.toleranceRangeLowValue,\n\t\t\t\ttoleranceHigh: criticalityValue.toleranceRangeHighValue,\n\t\t\t\tsImprovementDirection: criticalityValue.improvementDirection,\n\t\t\t\toCriticalityConfigValues: { None: \"None\", Negative: \"Error\", Critical: \"Warning\", Positive: \"Success\" }\n\t\t\t};\n\t\t\treturn \"{= extension.formatters.formatValueColor(${\" + criticalityValue.name + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t\t} else if (criticalityValue.includes(\"extension.formatters.formatCriticality\")) {\n\t\t\treturn criticalityValue;\n\t\t} else if (isBinding(criticalityValue)) {\n\t\t\treturn \"{= extension.formatters.formatCriticality($\" + criticalityValue + \", 'state') }\";\n\t\t}\n\t\treturn ColorIndicator[criticalityValue as keyof typeof ColorIndicator];\n\t}\n}\n"],"mappings":";;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,kCAAAC,GAAA,mBAISC,EAAcD,EAAA,kBAMhB,SAASE,EAAUC,GACzB,OAAOA,GAAkBA,EAAeC,WAAW,MAAQD,EAAeE,SAAS,IACpF,CAQA,SAASC,EAAoBC,GAC5B,OAAQA,EAA2BC,oBAAsB,IAC1D,CAQO,SAASC,EAAiBC,GAChC,GAAIA,EAAkB,CACrB,GAAIJ,EAAoBI,GAAmB,CAC1C,MAAMC,EAAe,CACpBC,aAAcF,EAAiBG,uBAC/BC,cAAeJ,EAAiBK,wBAChCC,aAAcN,EAAiBO,uBAC/BC,cAAeR,EAAiBS,wBAChCC,sBAAuBV,EAAiBW,qBACxCC,yBAA0B,CAAEC,KAAM,OAAQC,SAAU,QAASC,SAAU,UAAWC,SAAU,YAE7F,MAAO,8CAAgDhB,EAAiBiB,KAAO,KAAOC,KAAKC,UAAUlB,GAAgB,KACtH,MAAO,GAAID,EAAiBoB,SAAS,0CAA2C,CAC/E,OAAOpB,CACR,MAAO,GAAIR,EAAUQ,GAAmB,CACvC,MAAO,8CAAgDA,EAAmB,cAC3E,CACA,OAAOT,EAAeS,EACvB,CACD,CAAC,IAAAqB,EAAA,CAAAC,WAAA,MAAAD,EAAA7B,YAAA6B,EAAAtB,mBAAA,OAAAsB,CAAA","ignoreList":[]}