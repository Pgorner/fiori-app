/*!
 * SAPUI5
 * (c) Copyright 2009-2024 SAP SE. All rights reserved.
 */
sap.ui.loader.config({shim:{"sap/ndc/thirdparty/zxingcpp/zxing_reader":{amd:true,exports:"ZXing"}}});sap.ui.define(["sap/base/Log","sap/ui/model/json/JSONModel","sap/ui/model/BindingMode","sap/ui/model/resource/ResourceModel","sap/m/Input","sap/m/Label","sap/m/Button","sap/m/Dialog","sap/m/FlexBox","sap/m/BusyDialog","sap/ui/dom/includeStylesheet","./BarcodeScannerUIContainer","sap/m/MessageToast","sap/m/library","sap/ui/base/Event","sap/ui/base/EventProvider","sap/ui/Device","sap/ui/thirdparty/jquery","sap/base/util/deepClone","sap/m/Avatar","sap/ui/core/CustomData","sap/m/MessageBox","sap/m/_thirdparty/purify"],function(e,a,t,n,r,i,o,s,c,l,d,u,f,g,p,h,y,jQuery,m,P,v,S,b){"use strict";document.addEventListener("settingsDone",ve);document.addEventListener("SettingCompleted",ve);document.addEventListener("mockSettingsDone",ve);d({url:sap.ui.require.toUrl("sap/ndc/css/sapNdcBarcodeScanner.css")});var B={},C,D,E,I,A,w,T,R,x,_,O={Initial:"Initial",Loading:"Loading",Available:"Available",UnAvailable:"UnAvailable"},k=new a({scannerAPI:"unknown",available:false,config:{defaultConstraints:{audio:false,video:{facingMode:"environment"}},deviceId:undefined,preferFrontCamera:false,enableGS1Header:false},scanDialog:{title:"",onLiveUpdate:null,barcodeOverlaySetup:false,scanningStartTime:0,keepCameraScan:false,isDecodePaused:false,disableBarcodeInputDialog:false},busyDialog:null,callBackHandler:{onFnFail:null,onFnSuccess:null,callBackFromSetPhysicalScan:false,fnBluetoothScan:null},devices:{mainCamera:undefined,needCheck:true,all:[],front:[],back:[]},apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",description:"Zebra Enterprise Browser",status:O.Initial,enableBarcodeState:"init",enableZebraBarcodeRetryCount:6},Cordova:{key:"Cordova",description:"Cordova",status:O.Initial,scannerAPI:null},ZXingCPP:{key:"ZXingCPP",description:"WebAssembly build (using Emcripten) of zxing-cpp",status:O.Initial,instance:null,scannerAPI:null,multiScan:{enabled:false,maxBarcodeNumber:10,showPauseButton:false,pauseIfHasResult:false,stopIfOnlyHasOneResult:false}},BluetoothScanner:{key:"BluetoothScanner",description:"Bluetooth Barcode Scanner",status:O.UnAvailable,resultBuffer:[],resultMinLength:2,scanningKeyMaxLength:1,scanningLastKey:null,triggerOneTime:false,timeOutForDetection:null,handleFocusedElement:false,focusedElementInstance:"",focusedElementValue:"",focusedElementSelectionStart:null,focusedElementSelectionEnd:null,focusedCurrentWindow:false,scanningMode:"TimeInterval",intervalForDetection:80,maxPrefixSuffixScanningTime:5e3,prefix:"$",suffix:"#",prefixFound:false,suffixFound:false,prefixString:"",suffixString:"",prefixStartDate:null,replaceGS1Separator:false,replaceCharacterBuffer:"",GS1FunctionKey:"altKey",GS1Code:undefined,GS1ReplacementCharacter:undefined}},bReady:true}),L=new a({scannerAPI:"unknown",available:false,deviceId:undefined,devices:[],apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",status:O.Initial},Cordova:{key:"Cordova",status:O.Initial},ZXingCPP:{key:"ZXingCPP",status:O.Initial,multiScan:{enabled:false,maxBarcodeNumber:10,showPauseButton:false,pauseIfHasResult:false,stopIfOnlyHasOneResult:false}},BluetoothScanner:{key:"BluetoothScanner",status:O.UnAvailable}}}).setDefaultBindingMode(t.OneWay),F=new n({bundleName:"sap.ndc.messagebundle"});function M(e){return k.getProperty("/apis/"+e+"/")}function Z(a,t,n){if(!a||!M(a)){e.error("BarcodeScanner.updateScannerAPI: scanner API '"+a+"' is not a valid status code, stop update scanner API. Please check!");return}var r="/apis/"+a+"/";if(t){if(O[t]){k.setProperty(r+"status",t);L.setProperty(r+"status",t)}else{e.error("BarcodeScanner.updateScannerAPI: scanner API status '"+t+"' is not a valid status code, please check!")}}if(typeof n==="boolean"&&n&&a!=="BluetoothScanner"){k.setProperty("/scannerAPI",a);L.setProperty("/scannerAPI",a)}k.checkUpdate(true);L.checkUpdate(true)}function N(e,a){Z(e,O.Available,a)}function G(a,t){k.setProperty("/apis/"+a+"/instance",null);k.setProperty("/apis/"+a+"/scannerAPI",null);if(a==="BluetoothScanner"){k.setProperty("/callBackHandler/fnBluetoothScan",null)}Z(a,O.UnAvailable);if(t){e.debug("Update the related data when API is set to unavailable");var n=k.getProperty("/apis");var r="unknown";for(var i in n){if(n[i].status===O.Available||n[i].status===O.Initial){r=i;break}}N(r,true)}}function H(){return k.getProperty("/scannerAPI")}function X(e){if(e==="unknown"){k.setProperty("/scannerAPI",e);L.setProperty("/scannerAPI",e)}else{Z(e,undefined,true)}}function U(a,t){if(!a||!M(a)){e.error("BarcodeScanner.checkScannerAPIStatus: scanner API '"+a+"' doesn't exist. Please check!");return false}var n=k.getProperty("/apis/"+a+"/status");return t===n}function K(e){return U(e,O.Available)}function W(e){return U(e,O.UnAvailable)}function z(){k.setProperty("/available",false);L.setProperty("/available",false);V()}function V(){G("ZXingCPP");e.debug("BarcodeScanner.disableZXingCPP: Set status of Feature scanner APIs (ZXingCPP) to unavailable!")}function j(){try{var a=cordova.plugins.barcodeScanner;if(a){k.setProperty("/apis/Cordova/scannerAPI",a);N("Cordova");if(H()==="unknown"){X("Cordova")}e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is available!");V()}else{e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");G("Cordova");q()}}catch(a){e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");G("Cordova");q()}}function q(){jQuery(document).ready(function(){if(ee()){ae()}});J()}function Y(a){e.error(a);e.warning("BarcodeScanner.loadZXingCPPFailed: no feature scanner API available now.");z();k.checkUpdate(true)}function J(){e.debug("BarcodeScanner.loadZXingCPPAPI: load ZXingCPP API");Z("ZXingCPP",O.Loading);sap.ui.require(["sap/ndc/thirdparty/zxingcpp/zxing_reader"],function(a){k.setProperty("/apis/ZXingCPP/instance",a);if(H()==="unknown"){X("ZXingCPP")}e.debug("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is Initial!");Z("ZXingCPP",O.Initial)},function(e){Y("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is unavailable.\n"+e)})}function $(a,t){var n=new l({title:F.getProperty("BARCODE_DIALOG_BUSY_TITLE"),text:F.getProperty("BARCODE_DIALOG_BUSY_TEXT_ZXINGCPP")});n.open();Z("ZXingCPP",O.Loading);var r={locateFile:function(e,a){return Q(e,a,"zxingcpp")}};var i=k.getProperty("/apis/ZXingCPP/instance");i(r).then(function(t){k.setProperty("/apis/ZXingCPP/scannerAPI",t);e.debug("BarcodeScanner.loadZXingCPPInstance: wasm lib instance of ZXingCPP is available!");N("ZXingCPP");if(H()==="unknown"){X("ZXingCPP")}e.debug("BarcodeScanner.loadZXingCPPInstance: ZXingCPP API is available!");n.close();a()},function(e){Y("BarcodeScanner.loadZXingCPPInstance: can not load wasm lib instance of ZXingCPP.\n"+e);n.close();t()})}function Q(e,a,t){if(!a||a===""){return sap.ui.require.toUrl("sap/ndc/thirdparty/"+t+"/")+e}return a+e}function ee(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.enumerateDevices)}function ae(){e.debug("BarcodeScanner.getDeviceCameras: start to get device cameras");window.navigator.mediaDevices.enumerateDevices().then(function(a){var t=k.getProperty("/devices");var n=0;a.forEach(function(a){if(a.kind==="videoinput"){n++;var r={deviceId:a.deviceId,groupId:a.groupId,kind:a.kind,label:a.label};if(r.label&&r.label!==""){if(r.label.indexOf("0, facing back")>0){e.debug("BarcodeScanner.getDeviceCameras: has a camera with label contains '0, facing back', set it as main camera.");t.needCheck=false;t.mainCamera=r}if(r.label.indexOf("back")>0){t.back.push(r)}else if(r.label.indexOf("front")>0){t.front.push(r)}}else{r.label="Camera "+n}t.all.push(r)}});if(!t.mainCamera){if(t.back.length===1){e.debug("BarcodeScanner.getDeviceCameras: has only one camera which label contains 'back', set it as main camera.");t.mainCamera=m(t.back[0]);t.needCheck=false}else if(t.all.length===1){e.debug("BarcodeScanner.getDeviceCameras: has only one camera, set it as main camera.");t.mainCamera=m(t.all[0]);t.needCheck=false}}k.setProperty("/devices",t);ne()}).catch(function(a){k.setProperty("/devices/needCheck",false);e.error("BarcodeScanner.getDeviceCameras: Can not get device cameras.\nError Message: "+a)})}function te(a,t){var n=m(a);var r=function(){if(n.length===0){k.setProperty("/devices/needCheck",false);ne();e.debug("BarcodeScanner.findMainCamera: can not find the main camera.");t()}else{var i=n.length-1;var o=n[i];var s=m(k.getProperty("/config/defaultConstraints"));s.video.deviceId={exact:o.deviceId};var c=xe();s.video=Object.assign(s.video,c);window.navigator.mediaDevices.getUserMedia(s).then(function(t){var s=typeof t.stop==="function"?t:t.getTracks()[0];re(s).then(function(){a[i].hasFlashLight=true;k.setProperty("/devices/mainCamera",a[i]);k.setProperty("/devices/needCheck",false);ne();e.debug("BarcodeScanner.findMainCamera: the main camera is "+o.deviceId);D&&D.getModel().setProperty("/hasFlashLight",true);k.setProperty("/scanDialog/hasFlashLight",true);e.debug("BarcodeScanner.findMainCamera: enable flashlight");C=t;if(C){Ae()}else{D&&D.getModel().setProperty("/isNoScanner",true);Se(F.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_STREAM_ERROR_MSG"))}},function(){a[i].hasFlashLight=false;s.stop();e.debug("BarcodeScanner.findMainCamera: "+o.deviceId+" is not the main camera, check the next camera");n.pop();r()})}).catch(function(a){e.debug("BarcodeScanner.findMainCamera: getUserMedia() failed.\nError Message: "+a);if(k.getProperty("/config/defaultConstraints/video/zoom")!==undefined){e.debug("BarcodeScanner.findMainCamera: getUserMedia() failed maybe caused by unsupported constraint 'zoom', delete it and try again.");delete k.getProperty("/config/defaultConstraints/video").zoom}else{n.pop()}r()})}};r()}function ne(){e.debug("BarcodeScanner.updateDevicesInStatusModel: update the devices in status model");var a=m(k.getProperty("/devices/all"));L.setProperty("/devices",a)}function re(a){if(!("ImageCapture"in window)){return new Promise(function(a,t){e.debug("BarcodeScanner.checkFlashLight: Device does not support image capture");t()})}else if(!a){return new Promise(function(a,t){e.debug("BarcodeScanner.checkFlashLight: Camera is not opened");t()})}else{var t=new ImageCapture(a);return new Promise(function(a,n){t.getPhotoCapabilities().then(function(t){if(t.fillLightMode&&t.fillLightMode.includes("flash")){e.debug("BarcodeScanner.checkFlashLight: Camera supports flashlight");a()}else{e.debug("BarcodeScanner.checkFlashLight: Camera doesn't support flashlight");n()}}).catch(function(a){e.debug("BarcodeScanner.checkFlashLight: Camera not started or not available.\nError Message: "+a);n()})})}}function ie(){if(!k.getProperty("/scanDialog/hasFlashLight")){e.error("BarcodeScanner.toggleFlashLight: No flashlight currently");return}var a=k.getProperty("/scanDialog/flashLightOn");var t=!a?"Open":"Close";I.applyConstraints({advanced:[{torch:!a}]}).then(function(){k.setProperty("/scanDialog/flashLightOn",!a);e.debug("BarcodeScanner.toggleFlashLight: "+t+" flashlight of camera success.")}).catch(function(a){var n="BARCODE_DIALOG_"+t.toUpperCase()+"_FLASHLIGHT_ERROR_MSG";f.show(F.getResourceBundle().getText(n),{duration:1e3});e.error("BarcodeScanner.toggleFlashLight: "+t+" flashlight of camera failed.\nError Message: "+a)})}function oe(){var e=k.getProperty("/scanDialog/flashLightOn");if(e){ie()}if(T){se(false);return T.click()}}function se(a){var t=typeof a==="boolean"?a:k.getProperty("/scanDialog/isDecodePaused");if(t){e.debug("BarcodeScanner.toggleCameraScanning: start camera");Le();k.setProperty("/scanDialog/isDecodePaused",false);D&&D.getModel().setProperty("/isDecodePaused",false);if(R){R.hidden=true}if(I&&I.readyState==="live"){I.stop()}Be(false)}else{e.debug("BarcodeScanner.toggleCameraScanning: pause camera");ce()}}function ce(){D.getModel().setProperty("/hasFlashLight",false);if(y.os.ios||y.os.macintosh){var e=y.orientation["portrait"]?"portrait":"landscape";k.setProperty("/scanDialog/pausedOrientation",e)}if(A){A.pause()}if(x){x.hidden=true}k.setProperty("/scanDialog/isDecodePaused",true);D&&D.getModel().setProperty("/isDecodePaused",true)}function le(){var e=T.files[0];if(e){Le();ue(e)}}function de(){if(!k.getProperty("/apis/ZXingCPP/multiScan/showPauseButton")){se(true)}}function ue(e){var a=new l({title:F.getProperty("BARCODE_DIALOG_SCAN_IMAGE_BUSY_TITLE")});a.open();k.setProperty("/busyDialog",a);k.setProperty("/scanDialog/scanningStartTime",Date.now());var t=new FileReader;t.onload=function(e){ge(e.target.result).then(function(a){fe(a,e.target.result)},function(){a.close();B.closeScanDialog();f.show(F.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_COMPRESS_FAILED_MSG"),{duration:1e3})})};t.onerror=function(){B.closeScanDialog();a.close();f.show(F.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_LOAD_FAILED_MSG"),{duration:1e3})};t.readAsDataURL(e)}function fe(a,t){e.debug("BarcodeScanner.decodeImageData: start to decode the image data");var n=true;var r=a;if(!a&&t){n=false;r=t;e.debug("BarcodeScanner.decodeImageData: image data is not compressed")}var i;var o=k.getProperty("/apis/ZXingCPP/scannerAPI");try{i=o._malloc(r.length);o.HEAPU8.set(r,i)}catch(a){e.info("BarcodeScanner.decodeImageData: zxing.HEAPU8 error: "+a)}var s=k.getProperty("/apis/ZXingCPP/multiScan");var c=s.enabled?s.maxBarcodeNumber:1;var l=o.readBarcodesFromImage(i,r.length,true,"",c);o._free(i);var d=k.getProperty("/busyDialog");var u=function(){if(d){d.close();k.setProperty("/busyDialog",null)}f.show(F.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_ERROR_MSG"),{duration:1e3});if(!k.getProperty("/apis/ZXingCPP/multiScan/showPauseButton")){se(true)}};var g=l.size();if(g===1){e.debug("BarcodeScanner.decodeImageData: decode successful");if(d){d.close();k.setProperty("/busyDialog",null)}var p=l.get(0);Oe(p)}else if(g>1){e.debug("BarcodeScanner.decodeImageData: decode successful");if(d){d.close();k.setProperty("/busyDialog",null)}if(R){R.hidden=false}var h=32768;var y=[];for(var m=0;m<r.length;m+=h){y.push(String.fromCharCode.apply(null,r.subarray(m,m+h)))}y=y.join("");var P="data:image/jpeg;base64,"+window.btoa(y);pe(P).then(function(e){ke(l,true,e)})}else if(n&&t){e.debug("BarcodeScanner.decodeImageData: decode compressed image data failed");S.confirm(F.getResourceBundle().getText("BARCODE_DIALOG_SCAN_WITH_ORIGINAL_IMAGE_CONFIRM_MSG"),{onClose:function(e){if(e===S.Action.CANCEL){u();return}ge(t,false).then(function(e){fe(null,e)},function(){d.close();B.closeScanDialog();f.show(F.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_COMPRESS_FAILED_MSG"),{duration:1e3})})}})}else{u()}}function ge(a,t){var n=1080,r="image/jpeg";t=typeof t==="boolean"?t:true;return new Promise(function(i,o){var s=new Image;s.onload=function(){var a=this.width,o=this.height,c=document.createElement("canvas"),l=c.getContext("2d"),d=a,u=o;if(t){if(a<=o&&a>n){d=n;u=Math.round(o*(n/a))}else if(a>=o&&o>n){u=n;d=Math.round(a*(n/o))}e.debug("BarcodeScanner.getImageData: Compress image data")}c.width=d;c.height=u;e.debug("BarcodeScanner.getImageData: Canvas width is "+d+"; the Height is "+u);l.drawImage(s,0,0,d,u);var f=c.toDataURL(r);f=f.split(",")[1];f=window.atob(f);var g=new Uint8Array(f.length);for(var p=0;p<f.length;p++){g[p]=f.charCodeAt(p)}i(g)};s.onerror=function(){o()};s.src=a})}function pe(e,a){return new Promise(function(t,n){if(a){he(R.oImage,t)}else{var r=new Image;r.onload=function(){R.oImage=r;he(r,t)};r.onerror=function(){R.oImage=null;n()};r.src=e}})}function he(a,t){var n=a.width,r=a.height,i=n,o=r,s=R.getContext("2d"),c=E.getDomRef().clientWidth,l=E.getDomRef().clientHeight;s.clearRect(0,0,c,l);if(n>c||r>l){if(n/r>c/l){i=c;o=Math.round(c*(r/n))}else{o=l;i=Math.round(l*(n/r))}}e.debug("Compress image data. The width is "+i+"; the Height is "+o);R.width=c;R.height=l;var d=(c-i)/2;var u=(l-o)/2;s.drawImage(a,d,u,i,o);var f=Math.round(i*100/n)/100;var g={left:d,top:u,imageScaleRate:f};t(g)}function ye(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.getUserMedia)}function me(){try{if(self!=top&&typeof cordova==="undefined"){window.cordova=top.cordova}}catch(a){e.info("BarcodeScanner.checkCordovaInIframe: cordova is unavailable in cross-origin iframe")}}function Pe(){try{if(self!=top&&(typeof EB==="undefined"||typeof window.Rho==="undefined")){if(typeof top.EB!=="undefined"||typeof top.Rho!=="undefined"){window.EB=top.EB;window.Rho=top.Rho}}if(typeof EB!=="undefined"&&typeof EB.Barcode!=="undefined"){N("ZebraEnterpriseBrowser",true);e.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is available!")}else{G("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is unavailable!")}}catch(a){e.info("BarcodeScanner.initZebraEB: EB and Rho are unavailable")}}function ve(){me();k.setProperty("/available",true);L.setProperty("/available",true);if(y.os.android){jQuery(document).ready(function(){Pe();Ge()})}else{G("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.init: Not Android device, Zebra Enterprise Browser plugin is unavailable!")}if(sap.Settings&&typeof sap.Settings.isFeatureEnabled==="function"){sap.Settings.isFeatureEnabled("cordova.plugins.barcodeScanner",function(a){if(a){j()}else{z();e.warning("BarcodeScanner.init: Feature disabled in sap.Settings");j()}},function(){e.warning("BarcodeScanner.init: Feature check failed");j()})}else{if(sap.Settings===undefined){e.debug("BarcodeScanner.init: No sap.Settings. No feature vector available.")}else{e.warning("BarcodeScanner.init: Feature vector (sap.Settings.isFeatureEnabled) is unavailable")}j()}}function Se(a){if(a){e.warning("BarcodeScanner.openBarcodeInputDialog: isNoScanner. Message: "+a);var t=F.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_OTHER_ERROR_MSG",[a]);if(a.name){var n="BARCODE_DIALOG_CAMERA_"+a.name.toUpperCase()+"_ERROR_MSG";t=F.getResourceBundle().getText(n)}f.show(t,{duration:1e3})}var s=k.getProperty("/scanDialog/disableBarcodeInputDialog");if(s){B.closeScanDialog()}else{D.setShowHeader(true);D.destroyContent();D.setTitle("");D.setStretch(false);D.setContentHeight("auto");if(x){x.hidden=true}D.removeStyleClass("sapUiNoContentPadding");D.setTitle(k.getProperty("/scanDialog/title"));var c=new i(D.getId()+"-txt_barcode",{text:"{i18n>BARCODE_DIALOG_MSG}",visible:"{/isNoScanner}"});D.addContent(c);var l=new r(D.getId()+"-inp_barcode",{value:"{/barcode}",valueLiveUpdate:true,ariaLabelledBy:c.getId(),liveChange:function(e){var a=k.getProperty("/scanDialog/onLiveUpdate");if(typeof a==="function"){a({newValue:e.getParameter("newValue")})}},placeholder:"{i18n>BARCODE_DIALOG_PLACEHOLDER}"});D.addContent(l);var d=g.ButtonType;D.setBeginButton(new o(D.getId()+"-btn_barcode_ok",{type:d.Emphasized,text:"{i18n>BARCODE_DIALOG_OK}",press:function(e){var a=k.getProperty("/callBackHandler/onFnSuccess");if(typeof a==="function"){var t="unknown";if(k.getProperty("/scanDialog/scanningStartTime")>0){var n=Date.now();t=n-k.getProperty("/scanDialog/scanningStartTime")}a({text:D.getModel().getProperty("/barcode"),scanningTime:t,cancelled:false})}B.closeScanDialog()}}));D.setEndButton(new o({text:"{i18n>BARCODE_DIALOG_CANCEL}",press:function(){B.closeScanDialog()}}));D.setBusy(false)}}function be(){if(!k.getProperty("/config/preferFrontCamera")){delete k.getProperty("/config/defaultConstraints/video").facingMode;var a=k.getProperty("/devices");if(!k.getProperty("/config/deviceId")&&!a.mainCamera&&!y.os.ios&&!y.os.macintosh&&a.needCheck&&a.all.length>1){var t=a.back.length>1?a.back:a.all;var n=a.back.length>1?"back":"all";e.debug("BarcodeScanner.openCorrectCamera: start to find the main camera in "+n+" camera list.");te(t,Be);return}}Be()}function Be(a){e.debug("BarcodeScanner.openCamera: start to open camera");k.setProperty("/scanDialog/pausedOrientation",undefined);var t=false;if(k.getProperty("/config/deviceId")){delete k.getProperty("/config/defaultConstraints/video").facingMode;k.setProperty("/config/defaultConstraints/video/deviceId",{exact:k.getProperty("/config/deviceId")})}else if(k.getProperty("/config/preferFrontCamera")){k.setProperty("/config/defaultConstraints/video/facingMode","user");delete k.getProperty("/config/defaultConstraints/video").deviceId}else{var n=k.getProperty("/devices");if(n.mainCamera&&n.mainCamera.deviceId!==""){t=true;k.setProperty("/config/defaultConstraints/video/deviceId",{exact:n.mainCamera.deviceId})}else{k.setProperty("/config/defaultConstraints/video/facingMode","environment")}}var r=m(k.getProperty("/config/defaultConstraints"));var i=xe();r.video=Object.assign(r.video,i);window.navigator.mediaDevices.getUserMedia(r).then(function(e){C=e;if(y.os.ios){k.setProperty("/scanDialog/hasFlashLight",false);D&&D.getModel().setProperty("/hasFlashLight",false)}else{if(t&&typeof n.mainCamera.hasFlashLight==="boolean"){k.setProperty("/scanDialog/hasFlashLight",n.mainCamera.hasFlashLight);D&&D.getModel().setProperty("/hasFlashLight",n.mainCamera.hasFlashLight)}else{var r=typeof e.stop==="function"?e:e.getTracks()[0];re(r).then(function(){k.setProperty("/scanDialog/hasFlashLight",true);if(t){n.mainCamera.hasFlashLight=true}D&&D.getModel().setProperty("/hasFlashLight",true)},function(){k.setProperty("/scanDialog/hasFlashLight",false);if(t){n.mainCamera.hasFlashLight=false}D&&D.getModel().setProperty("/hasFlashLight",false)})}}if(C){Ae(a)}else{D&&D.getModel().setProperty("/isNoScanner",true);Se(F.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_STREAM_ERROR_MSG"))}}).catch(function(a){e.debug("BarcodeScanner.openCamera: getUserMedia() failed.\nError Message: "+a);if(k.getProperty("/config/defaultConstraints/video/zoom")!==undefined){e.debug("BarcodeScanner.openCamera: getUserMedia() failed maybe caused by unsupported constraint 'zoom', delete it and try again.");delete k.getProperty("/config/defaultConstraints/video").zoom;Be()}else{D&&D.getModel().setProperty("/isNoScanner",true);Se(a)}})}function Ce(){k.checkUpdate(true);var e;if(!D||D&&D.getContent().length===0){e=new a({hasFlashLight:k.getProperty("/scanDialog/hasFlashLight")&&!y.os.ios,isDecodePaused:k.getProperty("/scanDialog/isDecodePaused"),showPauseButton:k.getProperty("/apis/ZXingCPP/multiScan/enabled")&&k.getProperty("/apis/ZXingCPP/multiScan/showPauseButton")});D=new s("sapNdcBarcodeScannerDialog",{icon:"sap-icon://bar-code",title:F.getProperty("BARCODE_DIALOG_SCANNING_TITLE"),stretch:true,horizontalScrolling:false,verticalScrolling:false,afterClose:function(){Ne();if(D){D.destroyContent();D.destroy()}D=null;if(typeof _==="object"){jQuery(_).focus();jQuery(_).on("blur",Ye)}}});D.setEscapeHandler(function(a){B.closeScanDialog();var t=k.getProperty("/callBackHandler/onFnSuccess");if(typeof t==="function"){t({text:e.getProperty("/barcode"),cancelled:true})}a.resolve()});D.setModel(e);D.setModel(F,"i18n")}D.addStyleClass("sapUiNoContentPadding");D.setBusy(true);if(K("ZXingCPP")&&ye()){D.attachAfterOpen(function(){document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",E.getDomRef().clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",E.getDomRef().clientWidth+"px");be()});D.setShowHeader(false);D.destroyContent();x=undefined;A=undefined;w=undefined;T=undefined;R=undefined;var t=k.getProperty("/apis/ZXingCPP/multiScan");var n=t.enabled?t.maxBarcodeNumber:1;E=new u;E.oResourceModel=F;E.prepareBarcodeAvatars(n);E.setAggregation("_oCloseButton",new P({src:"sap-icon://decline",backgroundColor:"Transparent",tooltip:F.getResourceBundle().getText("BARCODE_DIALOG_STOP_SCANNING_BUTTON_TOOLTIP"),press:function(){D.getModel().setProperty("/isNoScanner",false);Ne();Se()}}).addStyleClass("sapNdcRTCDialogButton").addStyleClass("closeButton"));E.setAggregation("_oFlashLightButton",new P({src:"sap-icon://lightbulb",visible:"{/hasFlashLight}",backgroundColor:"Transparent",tooltip:{path:"/flashLightOn",formatter:function(e){var a="";if(!e){a="BARCODE_DIALOG_SELECT_FLASHLIGHT_BUTTON_TOOLTIP_OPEN"}else{a="BARCODE_DIALOG_SELECT_FLASHLIGHT_BUTTON_TOOLTIP_CLOSE"}return F.getResourceBundle().getText(a)}},press:function(){ie()}}).addStyleClass("sapNdcRTCDialogButton").addStyleClass("flashLightButton"));var r=new c({alignItems:"Start",justifyContent:"SpaceBetween",items:[new P({visible:"{/showPauseButton}",backgroundColor:"Transparent",src:{path:"/isDecodePaused",formatter:function(e){if(e){return"sap-icon://media-play"}else{return"sap-icon://media-pause"}}},tooltip:{path:"/isDecodePaused",formatter:function(e){if(e){return F.getResourceBundle().getText("BARCODE_DIALOG_SCAN_BUTTON_TOOLTIP_START")}else{return F.getResourceBundle().getText("BARCODE_DIALOG_SCAN_BUTTON_TOOLTIP_PAUSE")}}},press:function(){se()}}).addStyleClass("sapNdcRTCDialogControlButton"),new P({src:"sap-icon://picture",backgroundColor:"Transparent",tooltip:F.getResourceBundle().getText("BARCODE_DIALOG_SELECT_IMAGE_BUTTON_TOOLTIP"),press:function(){oe()}}).addStyleClass("sapNdcRTCDialogControlButton")]});if(k.getProperty("/apis/ZXingCPP/multiScan/showPauseButton")){r.addStyleClass("sapNdcRTCDialogControlFlexBoxWithPauseButton")}else{r.addStyleClass("sapNdcRTCDialogControlFlexBoxWithoutPauseButton")}E.setAggregation("_oControlFlexBox",r);D.addContent(E);D.setContentWidth("100%");D.setContentHeight("100%");D.addStyleClass("sapUiNoContentPadding");D.setBusy(true);k.setProperty("/scanDialog/barcodeOverlaySetup",false)}else{if(k.getProperty("/available")){D.getModel().setProperty("/isNoScanner",false)}else{D.getModel().setProperty("/isNoScanner",true)}Se()}D.open()}function De(){k.setProperty("/bReady",true);k.setProperty("/callBackHandler/callBackFromSetPhysicalScan",false);EB.Barcode.triggerType=EB.Barcode.SOFT_ONCE;EB.Barcode.start()}function Ee(){var a;if(k.getProperty("/config/preferFrontCamera")){a={preferFrontCamera:true}}k.getProperty("/apis/Cordova/scannerAPI").scan(function(e){if(e.cancelled==="false"||!e.cancelled){e.cancelled=false;var a=k.getProperty("/callBackHandler/onFnSuccess");if(typeof a==="function"){a(e)}}else{Ce()}k.setProperty("/bReady",true)},function(a){e.error("BarcodeScanner.scanWithCordova: Barcode scanning failed.");k.setProperty("/bReady",true);var t=k.getProperty("/callBackHandler/onFnFail");if(typeof t==="function"){if(typeof a==="string"){var n=a;a={text:n};e.debug("BarcodeScanner.scanWithCordova: Change the type of oEvent from string to object")}t(a)}},a)}function Ie(){if(U("ZXingCPP",O.Initial)){e.debug("BarcodeScanner.scanWithZXingCPP: ZXingCPP instances is not loaded, start to load them.");$(Ce,function(){if(K("ZebraEnterpriseBrowser")){X("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.scanWithZXingCPP: Zebra is available, set the current scanner API to Zebra.")}else{X("unknown");e.warning("BarcodeScanner.scanWithZXingCPP: Zebra is unavailable too, set the current scanner API to unknown.")}Ce()})}else{e.debug("BarcodeScanner.scanWithZXingCPP: open scan dialog.");Ce()}}function Ae(a){D.setBusy(false);if(!A){A=E?E.getDomRef("video"):undefined}if(!T){T=E?E.getDomRef("image"):undefined;if(T){T.addEventListener("change",le);T.addEventListener("cancel",de)}}if(!R){R=E?E.getDomRef("image-canvas"):undefined}try{A.srcObject=C;A.play().then(function(){Ze();if(y.support.orientation&&a!==false){y.orientation.attachHandler(Re)}e.debug("BarcodeScanner.playbackVideoAndDecode: video screen size "+A.videoHeight+"X"+A.videoWidth);I=typeof C.stop==="function"?C:C.getTracks()[0];var t=I.getSettings();e.debug("BarcodeScanner.playbackVideoAndDecode: video screen frameRate is "+t.frameRate+", zoom is "+t.zoom);we()})}catch(a){e.debug("BarcodeScanner.playbackVideoAndDecode is failed. error: "+a)}}function we(){e.debug("BarcodeScanner.decodeWithZXingCPP: start to decode");if(!A||!A.srcObject){e.debug("BarcodeScanner.decodeWithZXingCPP: video dom doesn't exist, stop decoding");return}if(k.getProperty("/scanDialog/isDecodePaused")){e.debug("BarcodeScanner.decodeWithZXingCPP: camera is paused, stop decoding");return}try{if(k.getProperty("/scanDialog/barcodeOverlaySetup")){Le()}if(!w){w=E?document.createElement("canvas"):undefined}if(!w){e.debug("BarcodeScanner.decodeWithZXingCPP: canvas dom doesn't exist, stop decoding");return}var a=w.getContext("2d",{willReadFrequently:true});var t=A.videoWidth;var n=A.videoHeight;w.width=t;w.height=n;a.drawImage(A,0,0,t,n);var r=a.getImageData(0,0,t,n);var i=r.data;var o;var s=k.getProperty("/apis/ZXingCPP/scannerAPI");try{o=s._malloc(i.length);s.HEAPU8.set(i,o)}catch(a){e.error("BarcodeScanner.decodeWithZXingCPP: zxing.HEAPU8 error: "+a)}var c=k.getProperty("/apis/ZXingCPP/multiScan");var l=c.enabled?c.maxBarcodeNumber:1;var d=s.readBarcodesFromPixmap(o,t,n,true,"",l);s._free(o);var u=d.size();if(c.enabled&&u>0){e.debug("BarcodeScanner.decodeWithZXingCPP: decode successful");var f=!c.showPauseButton&&c.pauseIfHasResult;var g=f&&c.stopIfOnlyHasOneResult;if(g&&u===1){var p=d.get(0);Te(p);Oe(p)}else{ke(d,f)}}else if(u===1){e.debug("BarcodeScanner.decodeWithZXingCPP: decode successful");var p=d.get(0);Te(p);Oe(p)}else{if(k.getProperty("/scanDialog/barcodeOverlaySetup")){Le()}setTimeout(we,0)}}catch(a){e.debug("BarcodeScanner: err1: "+a)}}function Te(e,a,t){t=Object.assign({left:0,top:0,imageScaleRate:1},t);a=a||0;var n=0,r=0,i,o;if(E&&Array.isArray(E._aBarcodeAvatars)){i=E._aBarcodeAvatars[a]}if(i){i.oBarcode=e;o=i.getDomRef()}if(o){if(!k.getProperty("/scanDialog/barcodeOverlaySetup")){k.setProperty("/scanDialog/barcodeOverlaySetup",true)}if(e.position){e.resultPoints=[e.position.topLeft,e.position.topRight,e.position.bottomRight,e.position.bottomLeft]}if(e.resultPoints&&e.resultPoints.length>0){var s=e.resultPoints.length;for(var c=0;c<s;c++){r+=e.resultPoints[c].x;n+=e.resultPoints[c].y}r=r*t.imageScaleRate/s;n=n*t.imageScaleRate/s}if(R&&!R.hidden){r+=t.left;n+=t.top}else if(k.getProperty("/scanDialog/isDecodePaused")){r+=t.left;n+=t.top}else{var l=E.getDomRef().clientWidth/A.videoWidth;var d=E.getDomRef().clientHeight/A.videoHeight;n=n*d;r=r*l}o.style.visibility="visible";o.style.left="calc("+r+"px - 1.5rem)";o.style.top="calc("+n+"px - 1.5rem)"}}function Re(a,t){t=typeof t==="boolean"?t:true;if(t&&(y.os.ios||y.os.macintosh)){setTimeout(function(){e.debug("BarcodeScanner.orientationChangeListener: reposition and resize the dialog on iOS devices first");D._positionDialog();e.debug("BarcodeScanner.orientationChangeListener: call orientationChangeListener again");Re(a,false)},500);return}var n=a.landscape?"landscape":"portrait";e.debug("BarcodeScanner.orientationChangeListener: device orientation changed to "+n);if(x){x.hidden=true}if(R&&R.oImage&&!R.hidden){setTimeout(function(){document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",E.getDomRef().clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",E.getDomRef().clientWidth+"px");pe(undefined,true).then(Me)},500)}else if(k.getProperty("/scanDialog/isDecodePaused")){setTimeout(function(){var e=E.getDomRef().clientWidth,a=E.getDomRef().clientHeight;document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",a+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",e+"px");var t=false;if(y.os.ios||y.os.macintosh){var n=y.orientation["portrait"]?"portrait":"landscape";var r=k.getProperty("/scanDialog/pausedOrientation");if(n!==r){t=true}}var i=t?A.videoHeight:A.videoWidth,o=t?A.videoWidth:A.videoHeight,s=i,c=o;if(i>e||o>a){if(i/o>e/a){s=e;c=Math.round(e*(o/i))}else{c=a;s=Math.round(a*(i/o))}}var l=(e-s)/2;var d=(a-c)/2;var u=Math.round(s*100/i)/100;var f={left:l,top:d,imageScaleRate:u};Me(f)},500)}else{D.setBusy(true);Ne(false);setTimeout(function(){document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",E.getDomRef().clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",E.getDomRef().clientWidth+"px");Be(false)},500)}}function xe(){var e=E.getDomRef().clientHeight,a=E.getDomRef().clientWidth,t=1920,n=1440;if(e>a){n=Math.trunc(1920*a/e)}else{n=Math.trunc(1920*e/a)}return{width:{ideal:t},height:{ideal:n}}}function _e(e,a){a=a||0;var t;if(E&&Array.isArray(E._aBarcodeAvatars)){t=E._aBarcodeAvatars[a]}if(t){t.removeAllCustomData();t.addCustomData(new v({key:"barcode",value:e}));t.addCustomData(new v({key:"press",value:function(e){Oe(e)}}))}}function Oe(e){var a=k.getProperty("/callBackHandler/onFnSuccess");if(typeof a==="function"){e.scanningTime="unknown";if(k.getProperty("/scanDialog/scanningStartTime")>0){var t=Date.now();e.scanningTime=t-k.getProperty("/scanDialog/scanningStartTime")}if(k.getProperty("/config/enableGS1Header")){e.text=e.symbologyIdentifier+e.text}if(typeof e.cancelled!=="boolean"){e.cancelled=false}a(e)}B.closeScanDialog()}function ke(e,a,t){var n=e.size();for(var r=0;r<n;r++){var i=e.get(r);Te(i,r,t);_e(i,r)}if(a){se(false)}else{setTimeout(we,0)}}function Le(){var e=k.getProperty("/apis/ZXingCPP/multiScan");var a=e.enabled?e.maxBarcodeNumber:1;for(var t=0;t<a;t++){Fe(t)}}function Fe(e){e=e||0;var a,t;if(E&&Array.isArray(E._aBarcodeAvatars)){a=E._aBarcodeAvatars[e]}if(a){a.oBarcode=undefined;t=a.getDomRef()}if(t){t.hidden=true;t.style.visibility="hidden";t.style.top=0;t.style.left=0}}function Me(e){var a=k.getProperty("/apis/ZXingCPP/multiScan");var t=a.enabled?a.maxBarcodeNumber:1;if(E&&Array.isArray(E._aBarcodeAvatars)){for(var n=0;n<t;n++){var r=E._aBarcodeAvatars[n];if(r&&r.oBarcode){var i=r.getDomRef();if(i&&i.style.visibility==="visible"){Te(r.oBarcode,n,e)}}}}}function Ze(){e.debug("BarcodeScanner.scanFrame: start to set up overlay dom");if(!D||!A||!A.videoHeight||!A.videoWidth){e.debug("BarcodeScanner.scanFrame: scan dialog or video screen is closed, stop set up");return}var a=.15;if(!x&&E){x=E.getDomRef("overlay")}if(x){x.hidden=false;var t=E.getDomRef().clientWidth,n=E.getDomRef().clientHeight;var r=t*(1-2*a);var i=n*(1-2*a);if(r<=i){i=r*(1-2*a)}var o=E.getDomRef("overlay-box");if(o){o.style.width=r+"px";o.style.height=i+"px";x.style.width=t+"px";x.style.height=n+"px"}}}function Ne(e){if(E&&e!==false){E.destroy()}if(I){I.stop();I=undefined}if(C){C=undefined}if(y.support.orientation&&e!==false){y.orientation.detachHandler(Re)}if(A&&A.srcObject){A.srcObject=undefined}}function Ge(){k.checkUpdate(true);var a=k.getProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount");var t=k.getProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState");if(H()==="ZebraEnterpriseBrowser"&&K("ZebraEnterpriseBrowser")&&t!==true){var n=function(a){if(a["data"]==""||a["time"]==""){var t=k.getProperty("/callBackHandler/onFnFail");if(typeof t==="function"){var n={text:"Zebra Scan failed",resultStatus:"Error"};if(k.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){n=new p("scanFailEvent",new h,n)}t(n)}e.error("BarcodeScanner.zebraEBScanEnable: Zebra Enterprise Browser Scan Failed")}else{e.debug("BarcodeScanner.zebraEBScanEnable: Zebra EB Scan Result: "+a.data+"; Scan Json: "+JSON.stringify(a));var r=k.getProperty("/callBackHandler/onFnSuccess");if(typeof r==="function"){var i="unknown";if(k.getProperty("/scanDialog/scanningStartTime")>0){var o=Date.now();i=o-k.getProperty("/scanDialog/scanningStartTime")}var s={text:a.data,format:a.source,resultStatus:"Success",scanningTime:i,cancelled:false};if(k.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){s=new p("scanSuccessEvent",new h,s)}r(s);k.setProperty("/scanDialog/scanningStartTime",0)}}};if(k.getProperty("/config/enableGS1Header")){EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_AIM}else{EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_NONE}EB.Barcode.enable({},n);k.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",true);e.debug("BarcodeScanner.zebraEBScanEnable: try to enable EB Barcode in ("+(6-a)+") times")}else if(a>1&&t==="init"){a--;k.setProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount",a);Pe();setTimeout(Ge,500)}else{e.debug("BarcodeScanner.zebraEBScanEnable: The scanner API is not ZebraEnterpriseBrowser or cannot been enabled.")}}function He(){var e=k.getProperty("/scanDialog/keepCameraScan");var a=false;if(K("ZebraEnterpriseBrowser")&&(!e||typeof e!=="boolean")){a=true}return a}function Xe(a){var t=k.getProperty("/apis/BluetoothScanner/");if(a.key==="Unidentified"&&t.replaceGS1Separator){var n=a.keyCode||a.which;var r=String.fromCharCode(n);a.key=r;e.debug("The unidentified oEvent.key is replaced by (keyCode:"+n+"|keyCharacter:"+r)}if(t.resultBuffer.length>5e3){e.error("Key Buffer contains "+t.resultBuffer.length+" characters");var i={resultBuffer:[]};B.enableBluetoothBarcodeScanner(null,i)}else if(k.getProperty("/bReady")&&K("BluetoothScanner")){if(t.scanningMode==="TimeInterval"){Ue(a,t)}else if(t.scanningMode==="PrefixSuffix"){Ke(a,t)}}k.setProperty("/apis/BluetoothScanner/",t)}function Ue(a,t){e.debug("The detectScanViaTimeInterval() is calling.");var n={key:a.key,timestamp:Date.now(),deltaTime:Number.MAX_VALUE};var r=n;if(t.resultBuffer[t.resultBuffer.length-1]!==undefined){r=t.resultBuffer[t.resultBuffer.length-1]}n.deltaTime=n.timestamp-r.timestamp;e.debug("jKey.deltaTime: "+n.deltaTime+"; key: "+n.key+"(AltKey:"+a.altKey+";CtrlKey:"+a.ctrlKey+";Which:"+a.which+"); oldLastKey:"+r.key);if(n.deltaTime>t.intervalForDetection){e.debug("jKey(key:"+n.key+").deltaTime("+n.deltaTime+") > "+t.intervalForDetection);if(n.key.length<=t.scanningKeyMaxLength){n.deltaTime=0;t.scanningLastKey=n;e.debug("addKeyToResultBuffer(): the Last key is saved.")}je()}else{if(n.key.length<=t.scanningKeyMaxLength){t.resultBuffer.push(n);if(t.replaceGS1Separator){t=Ve(a,t)}}else if(t.resultBuffer.length>0){t.resultBuffer[t.resultBuffer.length-1].timestamp=n.timestamp}if(t.timeOutForDetection){clearTimeout(t.timeOutForDetection)}e.debug("The waiting time of Bluetooth Scanner Schedule must be more than the intervalForDetection("+t.intervalForDetection+"). The default value is 50 ms and the added value is 20 ms.");t.timeOutForDetection=setTimeout(je,t.intervalForDetection+20);if(t.handleFocusedElement&&t.resultBuffer.length<3){qe()}}}function Ke(a,t){e.debug("The detectScanViaPrefixSuffix() is calling.");var n={key:a.key,timestamp:Date.now(),deltaTime:Number.MAX_VALUE};if(n.key.length<=t.scanningKeyMaxLength){if(t.resultBuffer.length>0){if(n.timestamp-t.resultBuffer[0].timestamp>t.maxPrefixSuffixScanningTime){e.debug("detectScanViaPrefixSuffix(): The scan time to long");var r={resultBuffer:[]};B.enableBluetoothBarcodeScanner(null,r)}else if(ze(n,t)){e.debug("detectScanViaPrefixSuffix(): The suffix("+t.suffix+") is matched.");if(t.handleFocusedElement){e.debug("Stop the event of suffix last character to trigger");a.preventDefault()}je()}else{t.resultBuffer.push(n);if(t.replaceGS1Separator){t=Ve(a,t)}}}else{We(n,t)}}}function We(e,a){var t=a.prefixString+e.key;a.prefixFound=false;if(t===a.prefix){e.key=t;if(a.prefixStartDate){e.timestamp=a.prefixStartDate}a.resultBuffer.push(e);a.prefixString="";a.prefixStartDate=null;a.prefixFound=true;if(a.handleFocusedElement){qe()}}else if(a.prefix.indexOf(t)===0){if(a.prefixString.length===0){a.prefixStartDate=e.timestamp}a.prefixString=t}else{a.prefixString="";a.prefixStartDate=null;a.resultBuffer.length=0}return a.prefixFound}function ze(a,t){var n=t.suffixString+a.key;t.suffixFound=false;if(n===t.suffix){var r=t.resultBuffer.length-t.suffix.length+1;t.resultBuffer.splice(r);t.resultBuffer.splice(0,1);t.suffixString="";t.suffixFound=true;if(t.handleFocusedElement){e.debug("The value of focusedElementInstance:"+t.focusedElementInstance.value);qe()}}else if(n.length<t.suffix.length){t.suffixString=n}else{t.suffixString=n.substr(1)}return t.suffixFound}function Ve(a,t){e.debug("The replaceGS1Codes() is calling. The GS1 will be replaced by specified characters.");if(a[t.GS1FunctionKey]){var n=t.resultBuffer;var r=t.GS1Code;if(r===undefined||r===null){if(t.GS1FunctionKey==="altKey"){r="0029"}else if(t.GS1FunctionKey==="ctrlKey"){r="]"}}if(t.replaceCharacterBuffer.length===0){t.replaceCharacterBuffer=a.key}else if(t.replaceCharacterBuffer.length>0){if(t.replaceCharacterBuffer.length<r.length){t.replaceCharacterBuffer+=a.key}else{var i=t.replaceCharacterBuffer.length-r.length+1;e.debug("The replaceCharacterBuffer: "+t.replaceCharacterBuffer+"; oStart: "+i+"; oGS1Code: "+r);t.replaceCharacterBuffer=t.replaceCharacterBuffer.slice(i)+a.key;e.debug("The replaceCharacterBuffer is changed to "+t.replaceCharacterBuffer)}}var o=false;if(t.GS1FunctionKey==="altKey"&&t.replaceCharacterBuffer.length>0&&!isNaN(t.replaceCharacterBuffer)&&!isNaN(r)){o=Number(t.replaceCharacterBuffer)===Number(r)}else{o=t.replaceCharacterBuffer===r}if(t.replaceCharacterBuffer.length>0){e.debug("replacementData - Code: "+t.GS1Code+"; Buffer:"+t.replaceCharacterBuffer+"; Function Key:"+t.GS1FunctionKey)}if(o){var s=n[n.length-1];if(t.GS1ReplacementCharacter!==undefined){s.key=t.GS1ReplacementCharacter}else{s.key=String.fromCharCode("29")}var c=t.replaceCharacterBuffer.length;n.splice(n.length-c,c,s);e.debug("replaceGS1Codes(): Replace ("+t.GS1FunctionKey+" + "+t.replaceCharacterBuffer+") by ("+s.key+")");t.replaceCharacterBuffer=""}}else{e.debug("This function key("+t.GS1FunctionKey+") of Event is false.")}return t}function je(){var a=k.getProperty("/apis/BluetoothScanner/");e.debug("Call getScannedCharacterFromBuffer(). The length is "+a.resultBuffer.length);var t="";if(a.scanningMode==="TimeInterval"&&a.resultBuffer.length>=a.resultMinLength||a.scanningMode==="PrefixSuffix"&&a.suffixFound){a.resultBuffer.forEach(function(e){t+=e.key});var n=k.getProperty("/callBackHandler/fnBluetoothScan");if(typeof n==="function"){var r=0;if(a.resultBuffer.length>0){r=Date.now()-a.resultBuffer[0].timestamp}r=r>0?r:"unknown";var i={text:t,format:"bluetoothScanner",resultStatus:"Success",scanningTime:r,cancelled:false};i=new p("bluetoothScanSuccessEvent",new h,i);if(a.triggerOneTime){B.disableBluetoothBarcodeScanner()}n(i);k.setProperty("/scanDialog/scanningStartTime",0);e.debug("Result is: "+t)}if(a.handleFocusedElement){qe()}}else{e.debug("The length of input string is less than "+a.resultMinLength)}a.resultBuffer.length=0;a.prefixFound=false;a.suffixFound=false;if(a.focusedElementInstance){e.debug("Value of focusedElementInstance: "+a.focusedElementInstance.value)}if(a.scanningLastKey){a.resultBuffer.push(a.scanningLastKey);e.debug("Re-push the scanningLastKey("+a.scanningLastKey.key+") into the buffer.");a.scanningLastKey=null;if(a.handleFocusedElement){qe()}}else{e.debug("Clear the data of focused element");a.focusedElementValue="";a.focusedElementInstance=""}if(a.timeOutForDetection){clearTimeout(a.timeOutForDetection)}k.setProperty("/apis/BluetoothScanner/",a)}function qe(){var a=jQuery(":focus")[0];var t=k.getProperty("/apis/BluetoothScanner/");e.debug("Calling the focusedElementHandler()");if(a){if(t.scanningMode==="TimeInterval"&&t.resultBuffer.length===2||t.scanningMode==="PrefixSuffix"&&t.suffixFound){e.debug("For the focused element, the focal point will be removed and data will be reset.");t.focusedElementInstance=a;if(jQuery(a).is("input, textarea")){a.value=b.sanitize(t.focusedElementValue);e.debug("This focused element is the input or text area element. The value is "+a.value);if(a.setSelectionRange&&t.focusedElementSelectionStart!==null&&t.focusedElementSelectionEnd!==null){e.debug("Reset the caret of the focused element");a.setSelectionRange(t.focusedElementSelectionStart,t.focusedElementSelectionEnd)}t.focusedElementValue="";t.focusedElementSelectionStart=null;t.focusedElementSelectionEnd=null}jQuery(a).blur()}else if(t.resultBuffer.length===1&&jQuery(a).is("input, textarea")){e.debug("Store the data of focused input or textarea element. ElementValue: "+a.value+"; SelectionStart: "+a.selectionStart+"; SelectionEnd: "+a.selectionEnd);t.focusedElementInstance=a;t.focusedElementValue=b.sanitize(a.value);t.focusedElementSelectionStart=a.selectionStart;t.focusedElementSelectionEnd=a.selectionEnd;if(t.scanningMode==="PrefixSuffix"){e.debug("The scanning mode is PrefixSuffix");var n=t.prefix.substr(0,t.prefix.length-1);var r=a.value.lastIndexOf(n);if(r!==-1){t.focusedElementValue=t.focusedElementValue.substr(0,r)+t.focusedElementValue.substr(r+n.length);t.focusedElementSelectionStart=t.focusedElementSelectionStart-n.length;t.focusedElementSelectionEnd=t.focusedElementSelectionEnd-n.length;e.debug("The focusedElementHandler():prefixStart:"+r+";Value"+a.value+";New Value:"+t.focusedElementValue+";PrefixSub:"+n)}}if(t.scanningLastKey){e.debug("The function focusedElementHandler() will clear the info about the LastKey: "+t.scanningLastKey.key);t.scanningLastKey=null}}}else if(typeof t.focusedElementInstance==="object"){e.debug("Re-focused this element. The value is "+t.focusedElementInstance.value);jQuery(t.focusedElementInstance).focus();t.focusedElementInstance=""}else{e.debug("There is not the focused element.")}k.setProperty("/apis/BluetoothScanner/",t)}function Ye(){e.debug("The custom Blur handler is called");if(typeof _==="object"){_.focus();jQuery(_).off("blur",Ye)}}B.scan=function(a,t,n,r,i,o,s,c,l){if(!k.getProperty("/bReady")){e.error("BarcodeScanner.scan: Barcode scanning is already in progress.");return}e.debug("BarcodeScanner.scan: start to scan barcode.");k.setProperty("/bReady",false);if(typeof a==="function"){k.setProperty("/callBackHandler/onFnSuccess",a)}else{k.setProperty("/callBackHandler/onFnSuccess",null)}if(typeof t==="function"){k.setProperty("/callBackHandler/onFnFail",t)}else{k.setProperty("/callBackHandler/onFnFail",null)}if(typeof n==="function"){k.setProperty("/scanDialog/onLiveUpdate",n)}else{k.setProperty("/scanDialog/onLiveUpdate",null)}if(typeof r==="string"&&r!=null&&r.trim()!=""){k.setProperty("/scanDialog/title",r)}else{k.setProperty("/scanDialog/title",F.getProperty("BARCODE_DIALOG_TITLE"))}k.setProperty("/scanDialog/scanningStartTime",Date.now());k.setProperty("/config/preferFrontCamera",i);if(k.getProperty("/config/defaultConstraints/video/frameRate")!==undefined){delete k.getProperty("/config/defaultConstraints/video").frameRate}if(typeof o==="number"&&o>0){k.setProperty("/config/defaultConstraints/video/frameRate",o)}else if(typeof o!=="undefined"){f.show(F.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG",["frameRate"]),{duration:1e3})}if(k.getProperty("/config/defaultConstraints/video/zoom")!==undefined){delete k.getProperty("/config/defaultConstraints/video").zoom}if(typeof s==="number"&&s>0){k.setProperty("/config/defaultConstraints/video/zoom",s)}else if(typeof s!=="undefined"){f.show(F.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG",["zoom"]),{duration:1e3})}k.setProperty("/scanDialog/keepCameraScan",c);k.setProperty("/scanDialog/disableBarcodeInputDialog",l);k.checkUpdate(true);if(He()){e.debug("BarcodeScanner.scan: Zebra EB is available, use it to scan barcode.");De()}else if(K("Cordova")){e.debug("BarcodeScanner.scan: Cordova is available, use it to scan barcode.");Ee()}else{e.debug("BarcodeScanner.scan: both of Zebra EB and Cordova are NOT available, use ZXingCPP to scan barcode.");Ie()}};B.closeScanDialog=function(){if(D){D.close();D.fireAfterClose();k.setProperty("/scanDialog/scanningStartTime",0);k.setProperty("/scanDialog/onLiveUpdate",null);k.setProperty("/scanDialog/isDecodePaused",false)}k.setProperty("/bReady",true);k.checkUpdate(true)};B.getStatusModel=function(){return L};B.getScanAPIInfo=function(){return H()};B.setScanAPIInfo=function(a){if(!a){e.error("BarcodeScanner.setScanAPIInfo: scannerAPI is undefined.");return false}if(H()!==a){var t=k.getProperty("/apis/"+a);if(!t){e.error("BarcodeScanner.scan: The scanner API '"+a+"' doesn't exist, will use current scanner API '"+k.getProperty("/apis/"+H()+"/description")+"' to scan the barcode.");return false}else if(a==="ZXingCPP"){if(W(a)){e.error("BarcodeScanner.scan: The scanner API '"+a+"' is unavailable, will use current scanner API '"+k.getProperty("/apis/"+H()+"/description")+"' to scan the barcode.");return false}else{e.debug("BarcodeScanner.scan: Switch to scanner API '"+a+"' to scan the barcode.");X(a);return true}}else if(!K(a)){e.error("BarcodeScanner.scan: The scanner API '"+a+"' is unavailable, will use current scanner API '"+k.getProperty("/apis/"+H()+"/description")+"' to scan the barcode.");return false}else{e.debug("BarcodeScanner.scan: Switch to scanner API '"+a+"' to scan the barcode.");X(a);return true}}else{e.debug("BarcodeScanner.setScanAPIInfo: '"+a+"' is already current scanner API. It need not to be changed.");return true}};B.setPhysicalScan=function(a){if(typeof a==="function"){k.setProperty("/callBackHandler/callBackFromSetPhysicalScan",true);k.setProperty("/callBackHandler/onFnSuccess",a);k.setProperty("/callBackHandler/onFnFail",a);if(y.os.android){jQuery(document).on("visibilitychange",function(){if(document.visibilityState==="visible"){Pe();Ge()}})}else{G("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.setPhysicalScan: Not Android device, Zebra Enterprise Browser plugin is unavailable!")}}else{e.debug("setPhysicalScan is failed.")}};B.setConfig=function(a){if(typeof a==="object"&&Object.keys(a).length>0){var t=k.getProperty("/config");for(var n in a){if(n==="multiScan"){if(typeof a.multiScan!=="object"){e.error("The config value for parameter 'multiScan' is not an object, please check!");continue}var r=Object.assign({},k.getProperty("/apis/ZXingCPP/multiScan"),a.multiScan);k.setProperty("/apis/ZXingCPP/multiScan",r);L.setProperty("/apis/ZXingCPP/multiScan",m(r));delete t.multiScan}else if(t.hasOwnProperty(n)){t[n]=a[n];if(He()&&n==="enableGS1Header"){k.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",false);EB.Barcode.disable(Ge)}if(n==="deviceId"){L.setProperty("/"+n,a[n])}e.debug("The parameter("+n+") has been changed.")}else{e.error("The parameter("+n+") is unavailable.")}}k.setProperty("/config",t);L.checkUpdate()}else{e.error("The options are not available.")}};B.enableBluetoothBarcodeScanner=function(a,t){var n=true;if(typeof a==="function"){k.setProperty("/callBackHandler/fnBluetoothScan",a);jQuery(document).off("keydown",Xe);jQuery(document).on("keydown",Xe);N("BluetoothScanner",true)}else{e.debug("enableBluetoothBarcodeScanner: callback function is not available.");n=false}if(t&&typeof t==="object"&&Object.keys(t).length>0){var r=k.getProperty("/apis/BluetoothScanner");for(var i in t){if(r.hasOwnProperty(i)){e.debug("Clear the temp data about Bluetooth Scanner");r.resultBuffer.length=0;r.scanningLastKey=null;r.focusedElementValue="";r.focusedElementInstance="";r.focusedElementSelectionStart=null;r.focusedElementSelectionEnd=null;r.replaceCharacterBuffer="";r.suffixString="";r.prefixString="";r.prefixStartDate=null;r.prefixFound=false;r.suffixFound=false;if(r.timeOutForDetection){clearTimeout(r.timeOutForDetection)}if(i==="intervalForDetection"||i==="maxPrefixSuffixScanningTime"||i==="resultMinLength"||i==="scanningKeyMaxLength"){if(typeof t[i]==="number"){setTimeout(je,0);e.debug("The parameter ("+i+") will be updated.")}else{e.error("The value of "+i+" is not a valid number.");n=false}}r[i]=t[i];e.debug("The parameter("+i+") has been changed.")}else{e.error("The parameter("+i+") is not exist.");n=false}}k.setProperty("/apis/BluetoothScanner/",r)}else{e.debug("enableBluetoothBarcodeScanner: The settings are not available.");n=false}if(self!=top&&k.getProperty("/apis/BluetoothScanner/focusedCurrentWindow")){window.focus();e.debug("Current window is focused for bluetooth scanner.")}return n};B.disableBluetoothBarcodeScanner=function(){jQuery(document).off("keydown",Xe);G("BluetoothScanner",true)};B.setFocusedInstanceId=function(a){var t=false;_=jQuery.sap.byId(a);if(_[0]){t=true;e.debug("The sId has been successful set, and the instance of the focused SAP UI5 element is now available.")}else{_=undefined;e.warning("The sId is not available.")}return t};ve();return B},true);
//# sourceMappingURL=BarcodeScanner.js.map