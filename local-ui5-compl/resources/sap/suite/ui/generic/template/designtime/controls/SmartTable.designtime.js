/*!
* SAP UI development toolkit for HTML5 (SAPUI5)

		(c) Copyright 2009-2015 SAP SE. All rights reserved
	
*/
sap.ui.define(["sap/base/util/deepClone","sap/base/util/merge","sap/suite/ui/generic/template/designtime/utils/designtimeUtils","sap/suite/ui/generic/template/genericUtilities/testableHelper"],function(e,t,n,a){"use strict";const i="sap.suite.ui.generic.template.ObjectPage";const o="sap.suite.ui.generic.template.ListReport";const{SettingScope:s}=n;function l(e){const t=n.getLocalId(e);return t.split("-")[1]}function c(e,t){const n=e.getQuickVariantSelectionX();const a=n?.variants||{};const i=Object.entries(a).find(([e,n])=>n.key===t);if(!i?.length){throw new Error("Error while retrieving the variant info for the selected tab")}return i}function r(e){const a=n.getOwnerComponentFor(e);const o=a.getAppComponent();const s=n.getSupportedGlobalManifestSettings(o)?.["tableSettings"]||{};let r;if(a.getMetadata().getComponentName()===i){const n=a.getSections();const i=d(e);const o=n?.[i]?.tableSettings||{};r=t(s,o)}else{const n=a.getTableSettings()||{};let i={};if(a.getQuickVariantSelectionX?.()){const t=l(e);const n=c(a,t);const[,o]=n;i=o.tableSettings||{}}r=t(s,n,i)}return r}function d(e){const t=n.getLocalId(e);return t.split("::Table")[0]}function u(e,t){const n={};e.forEach(e=>{const a=e.id;switch(a){case"type":n[a]=t.type||e.value;break;case"multiSelect":n[a]=t.multiSelect||e.value;break;case"createMode":n[a]=t.createMode||e.value;break;case"selectAll":n[a]=t.selectAll||e.value;break;case"condensedTableLayout":n[a]=t.condensedTableLayout||e.value;break;case"widthIncludingColumnHeader":n[a]=t.widthIncludingColumnHeader||e.value;break;case"addCardtoInsightsHidden":n[a]=t.addCardtoInsightsHidden||e.value;break;case"selectionLimit":n[a]=t.selectionLimit||e.value;break;default:break}});return n}async function p(t,a){const o=t.getModel("i18n");const p=n.getOwnerComponentFor(t);const g=p.getMetadata().getComponentName();const m=b(t);const S=["condensedTableLayout"];const f=S.reduce((e,t)=>{e[t]=p.getProperty(t);return e},{});const h=r(t);const y=u(m,Object.assign(f,h));const T=e(y);const C=n.getSettings(y,m);const v={type:"string",enum:[{id:s.Page,name:s.Page}],value:s.Page,id:"scope",disabled:false};const P=[{label:"Scope of the changes",tooltip:"Scope of the changes",control:[v]}];const A=p.getQuickVariantSelectionX?.();if(A){v.enum.push({id:s.Control,name:s.Control})}const w=m.some(e=>e.bSupportsGlobalScope&&!e.bGlobalSettingsOnly);if(w){v.enum.push({id:s.Application,name:s.Application})}v.disabled=v.enum.length<=1;const I=await n.openAdaptionDialog([...P,...C],y,T,"{i18n>RTA_CONFIGURATION_TITLE_TABLE}",{width:"650px",height:"800px"},o);const L=l(t);const k=L?c(p,L)[0]:null;I["scope"]=I["scope"]||s.Page;T["scope"]=T["scope"]||s.Page;const D={sChangeType:n.ChangeType.ChangePageConfiguration,sParentComponentName:g,sSectionKey:g===i?d(t):null,sSelectedVariantKey:k,sScope:I["scope"]};return n.extractChanges(I,T,m,p,D)}let g=function e(t,n=false){return function(e){if(e.sParentComponentName===i){return`component/settings/sections/${e.sSectionKey}/tableSettings/${t}`}else{let a=`component/settings/tableSettings/${t}`;if(e.sScope===s.Application&&n){a=`settings/tableSettings/${t}`}if(e.sScope===s.Control&&e.sSelectedVariantKey){a=`component/settings/quickVariantSelectionX/variants/${e.sSelectedVariantKey}/tableSettings/${t}`}return a}}};let b=function e(t){const a={id:"type",name:"Table Type",description:"Define which table type should be used",value:"ResponsiveTable",type:"string",getPath:g("type"),enums:[{id:"ResponsiveTable",name:"Responsive Table"},{id:"GridTable",name:"Grid Table"},{id:"TreeTable",name:"Tree Table"},{id:"AnalyticalTable",name:"Analytical Table"}],bSupportsGlobalScope:false};const i={id:"multiSelect",name:"Selection Mode",description:"Define the selection mode",value:false,type:"booleanOrString",getPath:g("multiSelect"),bSupportsGlobalScope:false,enums:[{id:"false",name:"Single"},{id:"true",name:"Multi"}]};const s={id:"selectAll",name:"Enable Select All",description:"Define if the table should support select all",value:false,type:"boolean",getPath:g("selectAll"),bSupportsGlobalScope:false};const l={id:"condensedTableLayout",name:"Condensed Table Layout",description:"Define if the table should have a condensed layout",value:false,type:"boolean",getPath:()=>"component/settings/condensedTableLayout",bSupportsGlobalScope:false};const c={id:"widthIncludingColumnHeader",name:"Width Including Column Header",description:"Define if the table should have a width including column header",value:false,type:"boolean",getPath:g("widthIncludingColumnHeader"),bSupportsGlobalScope:true,restrictedTo:[o],bGlobalSettingsOnly:true};const r={id:"addCardtoInsightsHidden",name:"Disable Insights",description:"Define if the table should have a insights button",value:false,type:"boolean",getPath:g("addCardtoInsightsHidden"),restrictedTo:[o]};const d={id:"selectionLimit",name:"Selection Limit",description:"Define the selection limit",value:300,type:"number",getPath:g("selectionLimit")};const u=[a,l,c,i,s,d,r];return u.filter(e=>{const a=n.getOwnerComponentFor(t).getMetadata().getComponentName();return!e.restrictedTo||e.restrictedTo.includes(a)})};b=a.testableStatic(b,"getAllowedDesigntimeSettings");g=a.testableStatic(g,"getPathForTableSettings");a.testableStatic(u,"getRuntimeAdapationProperties");a.testableStatic(r,"getManifestTableSettings");a.testableStatic(l,"getSelectedTabKey");a.testableStatic(c,"getVariantInfo");a.testableStatic(p,"fnOpenTableConfigurationDialog");const m={getDesigntime:function(e){return{actions:{settings:{fe:{name:"Configuration",icon:"sap-icon://developer-settings",handler:p}}}}}};return m});
//# sourceMappingURL=SmartTable.designtime.js.map