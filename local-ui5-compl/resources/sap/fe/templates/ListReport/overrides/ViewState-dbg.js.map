{"version":3,"names":["NavType","NavLibrary","VariantManagementType","CoreLibrary","VariantManagement","TemplateContentView","InitialLoadMode","DISPLAY_CURRENCY_PROPERTY_NAME","ViewStateOverride","_bSearchTriggered","applyInitialStateOnly","onBeforeStateApplied","aPromises","navigationType","oView","getView","oController","getController","oFilterBar","_getFilterBarControl","aTables","_getControls","setSuspendSelection","push","waitForInitialization","hybrid","_clearFilterConditions","forEach","oTable","initialized","adaptBindingRefreshControls","aControls","base","aViewControls","aControlsToRefresh","KeepAliveHelper","getControlsForRefresh","Array","prototype","apply","adaptStateControls","aStateControls","oFilterBarVM","_getFilterBarVM","_isMultiMode","_getMultiModeControl","_hasMultiVisualizations","_getSegmentedButton","Chart","Table","byId","retrieveAdditionalStates","mAdditionalStates","bPendingFilter","getBindingContext","getProperty","dataLoaded","sAlpContentView","alpContentView","applyAdditionalStates","oAdditionalStates","filterBarAPI","getParent","triggerSearch","oInternalModelContext","Device","system","desktop","Hybrid","getModel","setProperty","getPath","isSearchTriggeredByInitialLoad","view","controller","viewData","getViewData","variantManagement","Control","_getFilterBarVariantControl","currentVariantKey","getCurrentVariantKey","xAppState","initialLoad","Enabled","_shouldAutoTriggerSearch","_getApplyAutomaticallyOnVariant","_enableFilterBar","filterBarControl","preventInitialSearch","fnOnSearch","getSuspendSelection","attachEventOnce","_applyNavigationParametersToFilterbar","oNavigationParameter","aResults","oAppComponent","getAppComponent","oComponentData","getComponentData","oStartupParameters","startupParameters","oVariantPromise","handleVariantIdPassedViaURLParams","bFilterVariantApplied","then","aVariants","length","_applySelectionVariant","bPreventInitialSearch","oFilterBarControl","initial","requiresStandardVariant","_preventInitialSearch","internalModelContext","searchTriggeredByInitialLoad","catch","Log","error","oUrlParams","aPageVariantId","aFilterBarVariantId","aTableVariantId","aChartVariantId","oVariantIDs","sPageVariantId","sFilterBarVariantId","sTableVariantId","sChartVariantId","_handleControlVariantId","oVM","sVariantManagement","_handlePageVariantId","_handleFilterBarVariantControlId","_handleTableControlVariantId","_handleChartControlVariantId","Promise","all","getVariants","oVariant","_findAndPushVariantToPromise","oTableVariant","getVariant","aCharts","oChart","oChartVariant","sVariantId","key","_applyControlVariant","sVariantID","sVariantReference","_checkIfVariantIdIsAvailable","getStandardVariantKey","ControlVariantApplyAPI","activateVariant","element","variantReference","Page","None","oVariantManagement","oCurrentVariant","find","oItem","getKey","executeOnSelect","_checkIfDisplayCurrencyIsRequired","metaModel","contextPath","metaContext","getMetaContext","dataModelObjectPath","getInvolvedDataModelObjects","entitySet","startingEntitySet","_type","undefined","requiredProperties","annotations","Capabilities","FilterRestrictions","RequiredProperties","displayCurrencyIsMandatory","some","requiredProperty","value","_addDefaultDisplayCurrencyToSV","sv","svDefaults","isEmpty","getMetaModel","svOptions","getSelectOption","defaultSVOptions","displayCurrencyDefaultExists","noSVDisplayCurrencyExists","displayCurrencySelectOption","sign","option","low","high","addSelectOption","_getAdjustedSV","appStateSV","useFLPDefaultValues","adjustedSV","SelectionVariant","toJSONObject","alreadyAppliedSV","getSelectionVariant","appliedSelOptNames","getSelectOptionsPropertyNames","reduce","svCopy","selOptionName","svSelOpts","selectOptions","massAddSelectOption","navigationParameter","filterVariantApplied","filterBar","selectionVariant","selectionVariantDefaults","reqStdVariant","bNavSelVarHasDefaultsOnly","svDefaultsOnly","resolve","clearFiltersAndReplaceWithAppState","_activeVariantAndGetAppStateOverride","svDefaultsArePresent","stdVariantIsDefaultVariant","getDefaultVariantKey","svToSet","setSelectionVariant","variantKey","getId","_fnClearStateBeforexAppNav","StateUtil","retrieveExternalState","oExternalState","oCondition","filter","field","condition","oError","aItems","oClearConditions","applyExternalState","items"],"sourceRoot":".","sources":["ViewState.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type ViewState from \"sap/fe/core/controllerextensions/ViewState\";\nimport type { NavigationParameter } from \"sap/fe/core/controllerextensions/ViewState\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport KeepAliveHelper from \"sap/fe/core/helpers/KeepAliveHelper\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport CoreLibrary from \"sap/fe/core/library\";\nimport type { PropertyInfo } from \"sap/fe/macros/DelegateUtil\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport NavLibrary from \"sap/fe/navigation/library\";\nimport type {\n\tdefault as ListReportController,\n\tdefault as ListReportControllerController\n} from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport Device from \"sap/ui/Device\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport ControlVariantApplyAPI from \"sap/ui/fl/apply/api/ControlVariantApplyAPI\";\nimport type VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport type Chart from \"sap/ui/mdc/Chart\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\n\ntype VariantObject = {\n\tauthor: string;\n\tchange: boolean;\n\tcontexts: object;\n\texecuteOnSelect: boolean;\n\tfavorite: boolean;\n\tkey: string;\n\toriginalContexts: object;\n\toriginalExecuteOnSelect: boolean;\n\toriginalFavorite: boolean;\n\toriginalTitle: string;\n\toriginalVisible: boolean;\n\tremove: boolean;\n\trename: boolean;\n\tsharing: string;\n\ttitle: string;\n\tvisible: boolean;\n};\n\ntype NavHandlerNavParams = NavigationParameter & {\n\tbNavSelVarHasDefaultsOnly?: boolean;\n};\n\ntype LRViewData = {\n\tcontrolConfiguration?: Record<string, Record<string, unknown>>;\n\tentitySet?: string;\n\tcontextPath?: string;\n\tvariantManagement?: boolean;\n};\n\ntype VariantIDs = {\n\tsPageVariantId: string;\n\tsFilterBarVariantId: string;\n\tsTableVariantId: string;\n\tsChartVariantId: string;\n};\n\nconst NavType = NavLibrary.NavType,\n\tVariantManagementType = CoreLibrary.VariantManagement,\n\tTemplateContentView = CoreLibrary.TemplateContentView,\n\tInitialLoadMode = CoreLibrary.InitialLoadMode,\n\tDISPLAY_CURRENCY_PROPERTY_NAME = \"DisplayCurrency\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nconst ViewStateOverride = {\n\t_bSearchTriggered: false,\n\tapplyInitialStateOnly: function (): boolean {\n\t\treturn true;\n\t},\n\tonBeforeStateApplied: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\taPromises: Promise<unknown>[],\n\t\tnavigationType?: string\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\toFilterBar = oController._getFilterBarControl(),\n\t\t\taTables = oController._getControls(\"table\") as Table[];\n\t\tif (oFilterBar) {\n\t\t\toFilterBar.setSuspendSelection(true);\n\t\t\taPromises.push(oFilterBar.waitForInitialization());\n\t\t\t//This is required to remove any existing or default filter conditions before restoring the filter bar state in hybrid navigation mode.\n\t\t\tif (navigationType === NavType.hybrid) {\n\t\t\t\tthis._clearFilterConditions(oFilterBar);\n\t\t\t}\n\t\t}\n\t\taTables.forEach(function (oTable: Table): void {\n\t\t\taPromises.push((oTable as unknown as { initialized: () => Promise<unknown> }).initialized());\n\t\t});\n\n\t\tdelete this._bSearchTriggered;\n\t},\n\tadaptBindingRefreshControls: function (this: ViewState, aControls: Control[]): void {\n\t\tconst oView = this.base.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\taViewControls = oController._getControls(),\n\t\t\taControlsToRefresh = KeepAliveHelper.getControlsForRefresh(oView, aViewControls);\n\n\t\tArray.prototype.push.apply(aControls, aControlsToRefresh);\n\t},\n\tadaptStateControls: function (this: ViewState & typeof ViewStateOverride, aStateControls: UI5Element[]): void {\n\t\tconst oView = this.base.getView(),\n\t\t\toController = oView.getController() as ListReportController;\n\t\tconst oFilterBarVM = this._getFilterBarVM(oView);\n\t\tif (oFilterBarVM) {\n\t\t\taStateControls.push(oFilterBarVM);\n\t\t}\n\t\tif (oController._isMultiMode()) {\n\t\t\taStateControls.push(oController._getMultiModeControl());\n\t\t}\n\t\tif (oController._hasMultiVisualizations()) {\n\t\t\taStateControls.push(oController._getSegmentedButton(TemplateContentView.Chart)!);\n\t\t\taStateControls.push(oController._getSegmentedButton(TemplateContentView.Table)!);\n\t\t}\n\t\taStateControls.push(oView.byId(\"fe::ListReport\")!);\n\t},\n\tretrieveAdditionalStates: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\tmAdditionalStates: { dataLoaded: boolean; alpContentView: string }\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\tbPendingFilter = (oView.getBindingContext(\"internal\") as InternalModelContext).getProperty(\"hasPendingFilters\");\n\n\t\tmAdditionalStates.dataLoaded = !bPendingFilter || !!this._bSearchTriggered;\n\t\tif (oController._hasMultiVisualizations()) {\n\t\t\tconst sAlpContentView = oView.getBindingContext(\"internal\")!.getProperty(\"alpContentView\");\n\t\t\tmAdditionalStates.alpContentView = sAlpContentView;\n\t\t}\n\n\t\tdelete this._bSearchTriggered;\n\t},\n\tapplyAdditionalStates: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toAdditionalStates?: { dataLoaded: boolean; alpContentView?: string }\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\toFilterBar = oController._getFilterBarControl();\n\n\t\tif (oAdditionalStates) {\n\t\t\t// explicit check for boolean values - 'undefined' should not alter the triggered search property\n\t\t\tif (oAdditionalStates.dataLoaded === false && oFilterBar) {\n\t\t\t\t// without this, the data is loaded on navigating back\n\t\t\t\t(oFilterBar as { _bSearchTriggered?: boolean })._bSearchTriggered = false;\n\t\t\t} else if (oAdditionalStates.dataLoaded === true) {\n\t\t\t\tif (oFilterBar) {\n\t\t\t\t\tconst filterBarAPI = oFilterBar.getParent() as FilterBarAPI;\n\t\t\t\t\tfilterBarAPI.triggerSearch();\n\t\t\t\t}\n\t\t\t\tthis._bSearchTriggered = true;\n\t\t\t}\n\t\t\tif (oController._hasMultiVisualizations()) {\n\t\t\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\t\tif (!Device.system.desktop && oAdditionalStates.alpContentView == TemplateContentView.Hybrid) {\n\t\t\t\t\toAdditionalStates.alpContentView = TemplateContentView.Chart;\n\t\t\t\t}\n\t\t\t\toInternalModelContext\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.setProperty(`${oInternalModelContext.getPath()}/alpContentView`, oAdditionalStates.alpContentView);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Determines whether Search can be triggered at initial load of the application or not.\n\t * @param navigationType Navigation Type during the load of the application\n\t * @returns A Boolean determining whether Search can be triggered or not\n\t */\n\tisSearchTriggeredByInitialLoad(this: ViewState & typeof ViewStateOverride, navigationType: string): boolean {\n\t\tconst view = this.base.getView(),\n\t\t\tcontroller = view.getController() as ListReportController,\n\t\t\tviewData = view.getViewData();\n\t\tlet isSearchTriggeredByInitialLoad = false,\n\t\t\tvariantManagement;\n\t\t// Determining whether it's Control variantManagement or Page variantManagement\n\t\tif (viewData.variantManagement === CoreLibrary.VariantManagement.Control) {\n\t\t\tvariantManagement = controller._getFilterBarVariantControl();\n\t\t} else {\n\t\t\tvariantManagement = view.byId(\"fe::PageVariantManagement\") as VariantManagement;\n\t\t}\n\t\tconst currentVariantKey = variantManagement?.getCurrentVariantKey();\n\t\t//The check shall happen for 'intial load' and 'Apply Automatically' for collapsing the header or\n\t\t// always be collapsed if navType is xAppState\n\t\t// initialLoad Auto or Disabled\n\t\tif (navigationType === NavType.xAppState) {\n\t\t\treturn true;\n\t\t} else if (variantManagement && viewData.initialLoad !== InitialLoadMode.Enabled) {\n\t\t\t// Header is collapsed if preset filters are set for initial load Auto, Header shall remain expanded if initial load is Auto without preset filters or intial load is disabled\n\t\t\tif (controller._shouldAutoTriggerSearch(this._getFilterBarVM(view))) {\n\t\t\t\tisSearchTriggeredByInitialLoad = true;\n\t\t\t}\n\t\t}\n\t\t// initialLoad Enabled\n\t\telse if (\n\t\t\tvariantManagement &&\n\t\t\tviewData.initialLoad === InitialLoadMode.Enabled &&\n\t\t\tcontroller._getApplyAutomaticallyOnVariant(variantManagement, currentVariantKey)\n\t\t) {\n\t\t\tisSearchTriggeredByInitialLoad = true;\n\t\t}\n\t\treturn isSearchTriggeredByInitialLoad;\n\t},\n\n\t_enableFilterBar: function (filterBarControl: FilterBar, preventInitialSearch: boolean): void {\n\t\tconst filterBarAPI = filterBarControl.getParent() as FilterBarAPI;\n\t\tconst fnOnSearch = (): void => {\n\t\t\tthis._bSearchTriggered = !preventInitialSearch;\n\t\t};\n\n\t\t// reset the suspend selection on filter bar to allow loading of data when needed (was set on LR Init)\n\t\tif (filterBarControl.getSuspendSelection()) {\n\t\t\t// Only if search is fired we set _bSearchTriggered.\n\t\t\t// If there was an error due to required filterfields empty or other issues we skip setting _bSearchTriggered.\n\t\t\tfilterBarAPI.attachEventOnce(\"search\", fnOnSearch);\n\t\t\tfilterBarControl.setSuspendSelection(false);\n\t\t} else {\n\t\t\t// search might already be triggered.\n\t\t\tfnOnSearch();\n\t\t}\n\t},\n\n\t_applyNavigationParametersToFilterbar: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toNavigationParameter: NavigationParameter,\n\t\taResults: unknown[]\n\t): void {\n\t\tconst oView = this.base.getView();\n\t\tconst oController = oView.getController() as ListReportController;\n\t\tconst oAppComponent = oController.getAppComponent();\n\t\tconst oComponentData = oAppComponent.getComponentData();\n\t\tconst oStartupParameters = (oComponentData && oComponentData.startupParameters) || {};\n\t\tconst oVariantPromise = this.handleVariantIdPassedViaURLParams(oStartupParameters);\n\t\tlet bFilterVariantApplied: boolean;\n\t\taResults.push(\n\t\t\toVariantPromise\n\t\t\t\t.then((aVariants: unknown[]) => {\n\t\t\t\t\tif (aVariants && aVariants.length > 0) {\n\t\t\t\t\t\tif (aVariants[0] === true || aVariants[1] === true) {\n\t\t\t\t\t\t\tbFilterVariantApplied = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this._applySelectionVariant(oView, oNavigationParameter, bFilterVariantApplied);\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tlet bPreventInitialSearch = false;\n\t\t\t\t\tconst oFilterBarVM = this._getFilterBarVM(oView);\n\t\t\t\t\tconst oFilterBarControl = oController._getFilterBarControl();\n\t\t\t\t\tif (oFilterBarControl) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(oNavigationParameter.navigationType !== NavType.initial && oNavigationParameter.requiresStandardVariant) ||\n\t\t\t\t\t\t\t(!oFilterBarVM && oView.getViewData().initialLoad === InitialLoadMode.Enabled) ||\n\t\t\t\t\t\t\toController._shouldAutoTriggerSearch(oFilterBarVM)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst filterBarAPI = oFilterBarControl.getParent() as FilterBarAPI;\n\t\t\t\t\t\t\tfilterBarAPI.triggerSearch();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbPreventInitialSearch = this._preventInitialSearch(oFilterBarVM);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//collapse or expand shall be available only for non-desktop systems\n\t\t\t\t\t\tif (!Device.system.desktop) {\n\t\t\t\t\t\t\tconst internalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\t\t\t\t\tconst searchTriggeredByInitialLoad = this.isSearchTriggeredByInitialLoad(oNavigationParameter.navigationType);\n\t\t\t\t\t\t\tinternalModelContext.setProperty(\"searchTriggeredByInitialLoad\", searchTriggeredByInitialLoad);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._enableFilterBar(oFilterBarControl, bPreventInitialSearch);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function () {\n\t\t\t\t\tLog.error(\"Variant ID cannot be applied\");\n\t\t\t\t})\n\t\t);\n\t},\n\n\t// eslint-disable-next-line @typescript-eslint/require-await\n\thandleVariantIdPassedViaURLParams: async function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toUrlParams: Record<string, string>\n\t): Promise<VariantManagement[]> {\n\t\tconst aPageVariantId = oUrlParams[\"sap-ui-fe-variant-id\"],\n\t\t\taFilterBarVariantId = oUrlParams[\"sap-ui-fe-filterbar-variant-id\"],\n\t\t\taTableVariantId = oUrlParams[\"sap-ui-fe-table-variant-id\"],\n\t\t\taChartVariantId = oUrlParams[\"sap-ui-fe-chart-variant-id\"];\n\t\tlet oVariantIDs: VariantIDs | undefined;\n\t\tif (aPageVariantId || aFilterBarVariantId || aTableVariantId || aChartVariantId) {\n\t\t\toVariantIDs = {\n\t\t\t\tsPageVariantId: aPageVariantId && aPageVariantId[0],\n\t\t\t\tsFilterBarVariantId: aFilterBarVariantId && aFilterBarVariantId[0],\n\t\t\t\tsTableVariantId: aTableVariantId && aTableVariantId[0],\n\t\t\t\tsChartVariantId: aChartVariantId && aChartVariantId[0]\n\t\t\t};\n\t\t}\n\t\treturn this._handleControlVariantId(oVariantIDs);\n\t},\n\n\t_handleControlVariantId: async function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toVariantIDs: VariantIDs | undefined\n\t): Promise<unknown> {\n\t\tlet oVM: VariantManagement;\n\t\tconst oView = this.base.getView(),\n\t\t\taPromises: Promise<boolean>[] = [];\n\t\tconst sVariantManagement = oView.getViewData().variantManagement;\n\t\tif (oVariantIDs && oVariantIDs.sPageVariantId && sVariantManagement === \"Page\") {\n\t\t\toVM = oView.byId(\"fe::PageVariantManagement\") as VariantManagement;\n\t\t\tthis._handlePageVariantId(oVariantIDs, oVM, aPromises);\n\t\t} else if (oVariantIDs && sVariantManagement === \"Control\") {\n\t\t\tif (oVariantIDs.sFilterBarVariantId) {\n\t\t\t\toVM = (oView.getController() as ListReportControllerController)._getFilterBarVariantControl()!;\n\t\t\t\tthis._handleFilterBarVariantControlId(oVariantIDs, oVM, aPromises);\n\t\t\t}\n\t\t\tif (oVariantIDs.sTableVariantId) {\n\t\t\t\tconst oController = oView.getController() as ListReportController;\n\t\t\t\tthis._handleTableControlVariantId(oVariantIDs, oController, aPromises);\n\t\t\t}\n\n\t\t\tif (oVariantIDs.sChartVariantId) {\n\t\t\t\tconst oController = oView.getController() as ListReportController;\n\t\t\t\tthis._handleChartControlVariantId(oVariantIDs, oController, aPromises);\n\t\t\t}\n\t\t}\n\t\treturn Promise.all(aPromises);\n\t},\n\t/*\n\t * Handles page level variant and passes the variant to the function that pushes the promise to the promise array\n\t *\n\t * @param oVarinatIDs contains an object of all variant IDs\n\t * @param oVM contains the vairant management object for the page variant\n\t * @param aPromises is an array of all promises\n\t * @private\n\t */\n\t_handlePageVariantId: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toVariantIDs: VariantIDs,\n\t\toVM: VariantManagement,\n\t\taPromises: VariantManagement[]\n\t): void {\n\t\toVM.getVariants()?.forEach((oVariant: VariantObject) => {\n\t\t\tthis._findAndPushVariantToPromise(oVariant, oVariantIDs.sPageVariantId, oVM, aPromises, true);\n\t\t});\n\t},\n\n\t/*\n\t * Handles control level variant for filter bar and passes the variant to the function that pushes the promise to the promise array\n\t *\n\t * @param oVarinatIDs contains an object of all variant IDs\n\t * @param oVM contains the vairant management object for the filter bar\n\t * @param aPromises is an array of all promises\n\t * @private\n\t */\n\n\t_handleFilterBarVariantControlId: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toVariantIDs: VariantIDs,\n\t\toVM: VariantManagement,\n\t\taPromises: VariantManagement[]\n\t): void {\n\t\tif (oVM) {\n\t\t\toVM.getVariants().forEach((oVariant: VariantObject) => {\n\t\t\t\tthis._findAndPushVariantToPromise(oVariant, oVariantIDs.sFilterBarVariantId, oVM, aPromises, true);\n\t\t\t});\n\t\t}\n\t},\n\n\t/*\n\t * Handles control level variant for table and passes the variant to the function that pushes the promise to the promise array\n\t *\n\t * @param oVarinatIDs contains an object of all variant IDs\n\t * @param oController has the list report controller object\n\t * @param aPromises is an array of all promises\n\t * @private\n\t */\n\t_handleTableControlVariantId: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toVariantIDs: VariantIDs,\n\t\toController: ListReportController,\n\t\taPromises: VariantManagement[]\n\t): void {\n\t\tconst aTables = oController._getControls(\"table\") as Table[];\n\t\taTables.forEach((oTable: Table) => {\n\t\t\tconst oTableVariant = oTable.getVariant();\n\t\t\tif (oTable && oTableVariant) {\n\t\t\t\toTableVariant.getVariants().forEach((oVariant: VariantObject) => {\n\t\t\t\t\tthis._findAndPushVariantToPromise(oVariant, oVariantIDs.sTableVariantId, oTableVariant, aPromises);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\t/*\n\t * Handles control level variant for chart and passes the variant to the function that pushes the promise to the promise array\n\t *\n\t * @param oVarinatIDs contains an object of all variant IDs\n\t * @param oController has the list report controller object\n\t * @param aPromises is an array of all promises\n\t * @private\n\t */\n\t_handleChartControlVariantId: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toVariantIDs: VariantIDs,\n\t\toController: ListReportController,\n\t\taPromises: VariantManagement[]\n\t): void {\n\t\tconst aCharts = oController._getControls(\"Chart\") as Chart[];\n\t\taCharts.forEach((oChart: Chart) => {\n\t\t\tconst oChartVariant = oChart.getVariant();\n\t\t\tconst aVariants = oChartVariant.getVariants();\n\t\t\tif (aVariants) {\n\t\t\t\taVariants.forEach((oVariant: VariantObject) => {\n\t\t\t\t\tthis._findAndPushVariantToPromise(oVariant, oVariantIDs.sChartVariantId, oChartVariant, aPromises);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\t/*\n\t * Matches the variant ID provided in the url to the available vairant IDs and pushes the appropriate promise to the promise array\n\t *\n\t * @param oVariant is an object for a specific variant\n\t * @param sVariantId is the variant ID provided in the url\n\t * @param oVM is the variant management object for the specfic variant\n\t * @param aPromises is an array of promises\n\t * @param bFilterVariantApplied is an optional parameter which is set to ture in case the filter variant is applied\n\t * @private\n\t */\n\t_findAndPushVariantToPromise: function (\n\t\t//This function finds the suitable variant for the variantID provided in the url and pushes them to the promise array\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toVariant: VariantObject,\n\t\tsVariantId: string,\n\t\toVM: VariantManagement,\n\t\taPromises: Promise<boolean>[],\n\t\tbFilterVariantApplied?: boolean\n\t): void {\n\t\tif (oVariant.key === sVariantId) {\n\t\t\taPromises.push(this._applyControlVariant(oVM, sVariantId, bFilterVariantApplied));\n\t\t}\n\t},\n\n\t_applyControlVariant: async function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toVariant: VariantManagement,\n\t\tsVariantID: string,\n\t\tbFilterVariantApplied: boolean\n\t): Promise<boolean> {\n\t\tconst sVariantReference = this._checkIfVariantIdIsAvailable(oVariant, sVariantID) ? sVariantID : oVariant.getStandardVariantKey();\n\t\tconst oVM = ControlVariantApplyAPI.activateVariant({\n\t\t\telement: oVariant,\n\t\t\tvariantReference: sVariantReference\n\t\t});\n\t\treturn oVM.then(function () {\n\t\t\treturn bFilterVariantApplied;\n\t\t});\n\t},\n\t/************************************* private helper *****************************************/\n\n\t/**\n\t * Variant management used by filter bar.\n\t * @param view View of the LR filter bar\n\t * @returns VariantManagement if used\n\t */\n\t_getFilterBarVM: (view: View): VariantManagement | undefined => {\n\t\tlet variantManagement;\n\t\tconst viewData = view.getViewData() as LRViewData;\n\t\tswitch (viewData.variantManagement) {\n\t\t\tcase VariantManagementType.Page:\n\t\t\t\tvariantManagement = view.byId(\"fe::PageVariantManagement\");\n\t\t\t\tbreak;\n\t\t\tcase VariantManagementType.Control:\n\t\t\t\tvariantManagement = (view.getController() as ListReportController)._getFilterBarVariantControl();\n\t\t\t\tbreak;\n\t\t\tcase VariantManagementType.None:\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn variantManagement as VariantManagement | undefined;\n\t},\n\n\t_preventInitialSearch: function (oVariantManagement: VariantManagement): boolean {\n\t\tif (!oVariantManagement) {\n\t\t\treturn true;\n\t\t}\n\t\tconst aVariants = oVariantManagement.getVariants();\n\t\tconst oCurrentVariant = aVariants.find(function (oItem): boolean {\n\t\t\treturn oItem.getKey() === oVariantManagement.getCurrentVariantKey();\n\t\t});\n\t\treturn !oCurrentVariant.executeOnSelect;\n\t},\n\n\t/**\n\t * Checks if DisplayCurrency is mandatory for filtering.\n\t * @param metaModel OdataV4 MetaModel\n\t * @param contextPath List Report context path.\n\t * @returns Boolean\n\t */\n\t_checkIfDisplayCurrencyIsRequired: function (metaModel: ODataMetaModel, contextPath: string): boolean {\n\t\tconst metaContext = metaModel.getMetaContext(contextPath),\n\t\t\tdataModelObjectPath = getInvolvedDataModelObjects(metaContext),\n\t\t\tentitySet = dataModelObjectPath.startingEntitySet._type === \"EntitySet\" ? dataModelObjectPath.startingEntitySet : undefined,\n\t\t\trequiredProperties = entitySet?.annotations.Capabilities?.FilterRestrictions?.RequiredProperties ?? [],\n\t\t\tdisplayCurrencyIsMandatory = requiredProperties.some(\n\t\t\t\t(requiredProperty) => requiredProperty.value === DISPLAY_CURRENCY_PROPERTY_NAME\n\t\t\t);\n\n\t\treturn displayCurrencyIsMandatory;\n\t},\n\n\t/**\n\t * Add DisplayCurrency to SV if it is mandatory and exists in SV defaults.\n\t * @param view View of the LR filter bar\n\t * @param sv Selection Variant to apply\n\t * @param svDefaults Selection Variant defaults\n\t */\n\t_addDefaultDisplayCurrencyToSV: function (view: View, sv: SelectionVariant, svDefaults?: SelectionVariant): void {\n\t\tif (!svDefaults || svDefaults?.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewData = view.getViewData() as LRViewData,\n\t\t\tmetaModel = view.getModel()?.getMetaModel() as ODataMetaModel,\n\t\t\tcontextPath = viewData.contextPath || `/${viewData.entitySet}`,\n\t\t\tdisplayCurrencyIsMandatory = this._checkIfDisplayCurrencyIsRequired(metaModel, contextPath);\n\n\t\tif (!displayCurrencyIsMandatory) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst svOptions = sv.getSelectOption(DISPLAY_CURRENCY_PROPERTY_NAME),\n\t\t\tdefaultSVOptions = svDefaults.getSelectOption(DISPLAY_CURRENCY_PROPERTY_NAME),\n\t\t\tdisplayCurrencyDefaultExists = !!defaultSVOptions && defaultSVOptions.length > 0,\n\t\t\tnoSVDisplayCurrencyExists = !svOptions || !svOptions.length;\n\n\t\tif (noSVDisplayCurrencyExists && displayCurrencyDefaultExists) {\n\t\t\tconst displayCurrencySelectOption = defaultSVOptions[0],\n\t\t\t\tsign = displayCurrencySelectOption[\"Sign\"],\n\t\t\t\toption = displayCurrencySelectOption[\"Option\"],\n\t\t\t\tlow = displayCurrencySelectOption[\"Low\"],\n\t\t\t\thigh = displayCurrencySelectOption[\"High\"];\n\n\t\t\tsv.addSelectOption(DISPLAY_CURRENCY_PROPERTY_NAME, sign, option, low, high);\n\t\t}\n\t},\n\n\t/**\n\t * Get adjusted Selection Variant based on 'useFLPDefaultValues' and 'already applied SV'.\n\t *\n\t * If useFLPDefaultValues is :\n\t * 1. FALSE, combine 'appSate SV' and 'already applied SV'.\n\t * 2. TRUE, 'appSate SV' is same as 'default SV'. Select Options of 'default SV' takes priority over 'already applied SV'.\n\t * @param filterBarAPI FilterBarAPI to fetch the applied SV\n\t * @param appStateSV Selection Variant to apply from appState\n\t * @param useFLPDefaultValues Should FLP defaults be used\n\t * @returns Adjusted SV\n\t */\n\t_getAdjustedSV: async (\n\t\tfilterBarAPI: FilterBarAPI,\n\t\tappStateSV: SelectionVariant,\n\t\tuseFLPDefaultValues: boolean\n\t): Promise<SelectionVariant> => {\n\t\tlet adjustedSV = new SelectionVariant(appStateSV.toJSONObject());\n\t\tconst alreadyAppliedSV = await filterBarAPI.getSelectionVariant();\n\t\tconst appliedSelOptNames = alreadyAppliedSV?.getSelectOptionsPropertyNames() || [];\n\t\tif (appliedSelOptNames.length > 0) {\n\t\t\t// We merge 'applied SV' and 'appState SV' based on 'useFLPDefaultValues'.\n\t\t\tadjustedSV = appliedSelOptNames.reduce((svCopy: SelectionVariant, selOptionName) => {\n\t\t\t\t// (appStateSV = adjustedSV = svCopy)\n\t\t\t\tconst svSelOpts = svCopy.getSelectOption(selOptionName);\n\t\t\t\t// If useFLPDefaultValues = true, means (appStateSV = svDefaults)\n\t\t\t\tif ((useFLPDefaultValues && !svSelOpts?.length) || !useFLPDefaultValues) {\n\t\t\t\t\t// if default SV needs to be used, then select options from default select options take priority.\n\t\t\t\t\t// else we merge both: already applied SV and SV from navParams.\n\t\t\t\t\tconst selectOptions = alreadyAppliedSV.getSelectOption(selOptionName);\n\t\t\t\t\tsvCopy.massAddSelectOption(selOptionName, selectOptions || []);\n\t\t\t\t}\n\t\t\t\treturn svCopy;\n\t\t\t}, adjustedSV);\n\t\t}\n\n\t\treturn adjustedSV;\n\t},\n\n\t/**\n\t * Apply Selection Variant from Navigation Parameter.\n\t * @param view View of the LR filter bar\n\t * @param navigationParameter Selection Variant to apply from appState\n\t * @param filterVariantApplied Is a filter variant alaready applied\n\t * @returns Promise for asynchronous handling\n\t */\n\t_applySelectionVariant: async function (\n\t\tview: View,\n\t\tnavigationParameter: NavHandlerNavParams,\n\t\tfilterVariantApplied: boolean\n\t): Promise<unknown> {\n\t\tconst filterBar = (view.getController() as ListReportController)._getFilterBarControl();\n\t\tconst {\n\t\t\tselectionVariant: sv,\n\t\t\tselectionVariantDefaults: svDefaults,\n\t\t\trequiresStandardVariant: reqStdVariant = false,\n\t\t\tbNavSelVarHasDefaultsOnly: svDefaultsOnly = false\n\t\t} = navigationParameter;\n\n\t\tif (!filterBar || !sv) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst variantManagement = this._getFilterBarVM(view) as VariantManagement;\n\t\tconst clearFiltersAndReplaceWithAppState = await this._activeVariantAndGetAppStateOverride(\n\t\t\tvariantManagement,\n\t\t\treqStdVariant,\n\t\t\tfilterVariantApplied\n\t\t);\n\n\t\tif (clearFiltersAndReplaceWithAppState) {\n\t\t\tthis._addDefaultDisplayCurrencyToSV(view, sv, svDefaults);\n\n\t\t\t// check if FLP default values are there and is it standard variant\n\t\t\tconst svDefaultsArePresent = svDefaults ? svDefaults.getSelectOptionsPropertyNames().length > 0 : false;\n\t\t\tconst stdVariantIsDefaultVariant =\n\t\t\t\tvariantManagement && variantManagement.getDefaultVariantKey() === variantManagement.getStandardVariantKey();\n\t\t\tconst useFLPDefaultValues: boolean =\n\t\t\t\tsvDefaultsArePresent && (stdVariantIsDefaultVariant || !variantManagement) && svDefaultsOnly;\n\n\t\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\t\tlet svToSet: SelectionVariant = sv;\n\t\t\tif (filterVariantApplied || useFLPDefaultValues) {\n\t\t\t\tsvToSet = await this._getAdjustedSV(filterBarAPI, sv, useFLPDefaultValues);\n\t\t\t}\n\n\t\t\treturn filterBarAPI.setSelectionVariant(svToSet, true);\n\t\t}\n\t},\n\n\t/**\n\t * Activate variant from variant management and return if appState needs to be applied.\n\t * @param variantManagement VariantManagement used by filter bar\n\t * @param reqStdVariant If standard variant is required to be used\n\t * @param filterVariantApplied Is a filter variant already applied\n\t * @returns Promise for asynchronous handling\n\t */\n\t_activeVariantAndGetAppStateOverride: async function (\n\t\tvariantManagement: VariantManagement | undefined,\n\t\treqStdVariant: boolean,\n\t\tfilterVariantApplied: boolean\n\t): Promise<boolean> {\n\t\tif (variantManagement && !filterVariantApplied) {\n\t\t\tlet variantKey = reqStdVariant ? variantManagement.getStandardVariantKey() : variantManagement.getDefaultVariantKey();\n\t\t\tif (variantKey === null) {\n\t\t\t\tvariantKey = variantManagement.getId();\n\t\t\t}\n\t\t\tawait ControlVariantApplyAPI.activateVariant({\n\t\t\t\telement: variantManagement,\n\t\t\t\tvariantReference: variantKey\n\t\t\t});\n\t\t\treturn reqStdVariant || variantManagement.getDefaultVariantKey() === variantManagement.getStandardVariantKey();\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/*\n\t * Sets filtered: false flag to every field so that it can be cleared out\n\t *\n\t * @param oFilterBar filterbar control is used to display filter properties in a user-friendly manner to populate values for a query\n\t * @returns promise which will be resolved to object\n\t * @private\n\t */\n\t_fnClearStateBeforexAppNav: async function (oFilterBar: FilterBar): Promise<unknown> {\n\t\treturn StateUtil.retrieveExternalState(oFilterBar)\n\t\t\t.then((oExternalState: { filter: Record<string, Record<string, boolean>[]> }) => {\n\t\t\t\tconst oCondition = oExternalState.filter;\n\t\t\t\tfor (const field in oCondition) {\n\t\t\t\t\tif (field !== \"$editState\" && field !== \"$search\" && oCondition[field]) {\n\t\t\t\t\t\toCondition[field].forEach((condition: Record<string, boolean>) => {\n\t\t\t\t\t\t\tcondition[\"filtered\"] = false;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn oCondition;\n\t\t\t})\n\t\t\t.catch(function (oError: unknown): void {\n\t\t\t\tLog.error(\"Error while retrieving the external state\", oError as string);\n\t\t\t});\n\t},\n\n\t_clearFilterConditions: async function (oFilterBar: FilterBar): Promise<unknown> {\n\t\tconst aItems: PropertyInfo[] = [];\n\t\treturn oFilterBar.waitForInitialization().then(async () => {\n\t\t\tconst oClearConditions = await this._fnClearStateBeforexAppNav(oFilterBar);\n\t\t\treturn StateUtil.applyExternalState(oFilterBar, {\n\t\t\t\tfilter: oClearConditions,\n\t\t\t\titems: aItems\n\t\t\t});\n\t\t});\n\t}\n};\n\nexport default ViewStateOverride;\n"],"mappings":"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","ignoreList":[],"file":"ViewState-dbg.js"}