{"version":3,"file":"jsx-control.js","names":["FL_DELEGATE","CORE_REQUIRE","DT_DESIGNTIME","addChildAggregation","aggregationChildren","aggregationName","child","undefined","isChildAnElement","push","Array","isArray","forEach","subChild","Object","keys","childKey","children","isA","isAControl","getMetadata","processAggregations","metadata","mSettings","metadataAggregations","getAllAggregations","defaultAggregationName","getDefaultAggregationName","hasOwnProperty","path","factory","template","processProperties","settings","settingsKey","lateProperties","allEvents","getAllEvents","allProperties","getAllProperties","value","isBindingToolkitExpression","bindingToolkitExpression","isConstant","compileConstant","call","isPathInModelExpression","model","modelName","compileExpression","then","startsWith","propertyType","getType","DataType","includes","getName","parseValue","__bindingInfo","processCommand","commandProperty","command","eventName","split","event","name","EventHandlerResolver","resolveEventHandler","jsxControl","ControlType","key","jsxContext","targetControl","isFragment","isRuntime","runtimeBuildingBlock","getContent","view","appComponent","classDef","class","refDef","ref","bindingDef","binding","flDelegate","dtDesigntime","targetControlInstance","addStyleClass","setCurrent","customSettings","data","delegate","designtime","length","bindingInfo","bindingParser","bindElement","bindingDefKey","latePropertiesKey","setProperty","catch","error","Log","controlTypeFn","Text","text"],"sources":["./jsx-control.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileConstant,\n\tcompileExpression,\n\tisBindingToolkitExpression,\n\tisConstant,\n\tisPathInModelExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport type { BindingInfoHolder, NonAbstractClass } from \"sap/fe/base/ClassSupport\";\nimport type { ControlProperties, JSXContext, NonControlProperties, Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport type BuildingBlockTemplatingBase from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplatingBase\";\nimport type RuntimeBuildingBlock from \"sap/fe/core/buildingBlocks/templating/RuntimeBuildingBlock\";\nimport Text from \"sap/m/Text\";\nimport DataType from \"sap/ui/base/DataType\";\nimport { bindingParser } from \"sap/ui/base/ManagedObject\";\nimport type ManagedObjectMetadata from \"sap/ui/base/ManagedObjectMetadata\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { default as Element, default as UI5Element } from \"sap/ui/core/Element\";\nimport EventHandlerResolver from \"sap/ui/core/mvc/EventHandlerResolver\";\n\nconst FL_DELEGATE = \"fl:delegate\";\nconst CORE_REQUIRE = \"core:require\";\nconst DT_DESIGNTIME = \"dt:designtime\";\nconst addChildAggregation = function (\n\taggregationChildren: Record<string, (string | UI5Element)[]>,\n\taggregationName: string,\n\tchild?: string | UI5Element | UI5Element[]\n): void {\n\tif (child === null || child === undefined || typeof child === \"string\") {\n\t\treturn;\n\t}\n\tif (!aggregationChildren[aggregationName]) {\n\t\taggregationChildren[aggregationName] = [];\n\t}\n\tif (isChildAnElement(child)) {\n\t\taggregationChildren[aggregationName].push(child);\n\t} else if (Array.isArray(child)) {\n\t\tchild.forEach((subChild) => {\n\t\t\taddChildAggregation(aggregationChildren, aggregationName, subChild);\n\t\t});\n\t} else if (typeof child === \"function\") {\n\t\taggregationChildren[aggregationName] = child;\n\t} else {\n\t\tObject.keys(child).forEach((childKey) => {\n\t\t\taddChildAggregation(aggregationChildren, childKey, child[childKey]);\n\t\t});\n\t}\n};\nconst isChildAnElement = function (children?: unknown): children is Element {\n\treturn (children as Element)?.isA?.(\"sap.ui.core.Element\");\n};\nconst isAControl = function (children?: typeof Control | Function): children is NonAbstractClass<Control> {\n\treturn !!(children as typeof Control)?.getMetadata;\n};\n\nfunction processAggregations(metadata: ManagedObjectMetadata, mSettings: Record<string, unknown>): void {\n\tconst metadataAggregations = metadata.getAllAggregations();\n\tconst defaultAggregationName = metadata.getDefaultAggregationName();\n\tconst aggregationChildren: Record<string, (string | UI5Element)[]> = {};\n\taddChildAggregation(aggregationChildren, defaultAggregationName, mSettings.children as string | UI5Element | UI5Element[]);\n\tdelete mSettings.children;\n\t// find out which aggregation are bound (both in children and directly under it)\n\tObject.keys(metadataAggregations).forEach((aggregationName) => {\n\t\tif (aggregationChildren[aggregationName] !== undefined) {\n\t\t\tif (mSettings.hasOwnProperty(aggregationName)) {\n\t\t\t\tif (typeof mSettings[aggregationName] === \"string\") {\n\t\t\t\t\tmSettings[aggregationName] = {\n\t\t\t\t\t\tpath: mSettings[aggregationName]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (typeof aggregationChildren[aggregationName] === \"function\") {\n\t\t\t\t\t(mSettings[aggregationName] as { factory: Function }).factory = aggregationChildren[\n\t\t\t\t\t\taggregationName\n\t\t\t\t\t] as unknown as Function;\n\t\t\t\t} else {\n\t\t\t\t\t(mSettings[aggregationName] as { template: string | UI5Element }).template = aggregationChildren[aggregationName][0];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmSettings[aggregationName] = aggregationChildren[aggregationName];\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Processes the properties.\n *\n * If the property is a bindingToolkit expression we need to compile it.\n * Else if the property is set as string (compiled binding expression returns string by default even if it's a boolean, int, etc.) and it doesn't match with expected\n * format the value is parsed to provide expected format.\n * @param metadata Metadata of the control\n * @param settings Settings of the control\n * @returns A map of late properties that need to be awaited after the control is created\n */\nfunction processProperties(metadata: ManagedObjectMetadata, settings: Record<string, unknown>): Record<string, Promise<unknown>> {\n\tlet settingsKey: keyof typeof settings;\n\tconst lateProperties: Record<string, Promise<unknown>> = {};\n\tconst allEvents = metadata.getAllEvents();\n\tconst allProperties = metadata.getAllProperties();\n\tfor (settingsKey in settings) {\n\t\tconst value = settings[settingsKey];\n\t\tif (isBindingToolkitExpression(value)) {\n\t\t\tconst bindingToolkitExpression: BindingToolkitExpression<unknown> = value;\n\t\t\tif (isConstant(bindingToolkitExpression)) {\n\t\t\t\tsettings[settingsKey] = compileConstant(bindingToolkitExpression, false, true, true);\n\t\t\t} else if (!Object.hasOwnProperty.call(allProperties, settingsKey)) {\n\t\t\t\t// Aggregation case - we need to compile the expression but as an object\n\t\t\t\tif (isPathInModelExpression(bindingToolkitExpression)) {\n\t\t\t\t\tsettings[settingsKey] = { path: bindingToolkitExpression.path, model: bindingToolkitExpression.modelName };\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsettings[settingsKey] = compileExpression(bindingToolkitExpression);\n\t\t\t}\n\t\t} else if (value !== null && typeof value === \"object\" && (value as Promise<unknown>).then) {\n\t\t\tlateProperties[settingsKey] = value as Promise<unknown>;\n\t\t\tdelete settings[settingsKey];\n\t\t} else if (typeof value === \"string\" && !value.startsWith(\"{\")) {\n\t\t\tconst propertyType = (allProperties[settingsKey] as { getType?: Function })?.getType?.();\n\t\t\tif (propertyType && propertyType instanceof DataType && [\"boolean\", \"int\", \"float\"].includes(propertyType.getName())) {\n\t\t\t\tsettings[settingsKey] = propertyType.parseValue(value);\n\t\t\t}\n\t\t} else if (typeof value === \"object\" && (value as BindingInfoHolder<unknown>).__bindingInfo) {\n\t\t\tsettings[settingsKey] = (value as BindingInfoHolder<unknown>).__bindingInfo;\n\t\t} else if (value === undefined) {\n\t\t\tif (Object.hasOwnProperty.call(allEvents, settingsKey)) {\n\t\t\t\tdelete settings[settingsKey];\n\t\t\t}\n\t\t}\n\t}\n\treturn lateProperties;\n}\n\n/**\n * Processes the command.\n *\n * Resolves the command set on the control via the intrinsic class attribute \"jsx:command\".\n * If no command has been set or the targeted event doesn't exist, no configuration is set.\n * @param metadata Metadata of the control\n * @param settings Settings of the control\n */\nfunction processCommand(metadata: ManagedObjectMetadata, settings: Record<string, unknown>): void {\n\tconst commandProperty = settings[\"jsx:command\"];\n\tif (commandProperty) {\n\t\tconst [command, eventName] = (commandProperty as string).split(\"|\");\n\t\tconst event = metadata.getAllEvents()[eventName];\n\t\tif (event && command.startsWith(\"cmd:\")) {\n\t\t\tsettings[event.name] = EventHandlerResolver.resolveEventHandler(command);\n\t\t}\n\t}\n\tdelete settings[\"jsx:command\"];\n}\n\nconst jsxControl = function <T extends Element>(\n\tControlType: NonAbstractClass<Control> | Function,\n\tsettings: NonControlProperties<T> & {\n\t\tkey: string;\n\t\tchildren?: Element | ControlProperties<T>;\n\t\tref?: Ref<T>;\n\t\tbinding?: string;\n\t\tclass?: string;\n\t\t[FL_DELEGATE]?: string;\n\t\t[DT_DESIGNTIME]?: string;\n\t\t[CORE_REQUIRE]?: string;\n\t},\n\tkey: string,\n\tjsxContext: JSXContext\n): Control | Control[] | undefined {\n\tlet targetControl: Control | Control[] | undefined;\n\n\tif ((ControlType as { isFragment?: boolean })?.isFragment) {\n\t\ttargetControl = settings.children as Control | Control[];\n\t} else if ((ControlType as typeof BuildingBlockTemplatingBase)?.isRuntime) {\n\t\tconst runtimeBuildingBlock = new (ControlType as typeof RuntimeBuildingBlock)(settings as unknown as $ControlSettings);\n\t\ttargetControl = runtimeBuildingBlock.getContent?.(jsxContext.view!, jsxContext.appComponent!);\n\t} else if (isAControl(ControlType)) {\n\t\tconst metadata = ControlType.getMetadata();\n\t\tif (key !== undefined) {\n\t\t\tsettings[\"key\"] = key;\n\t\t}\n\t\tconst lateProperties = processProperties(metadata, settings);\n\t\tprocessCommand(metadata, settings);\n\t\tprocessAggregations(metadata, settings);\n\t\tconst classDef = settings.class;\n\t\tconst refDef = settings.ref;\n\t\tconst bindingDef = settings.binding;\n\t\tconst flDelegate = settings[FL_DELEGATE];\n\t\tconst dtDesigntime = settings[DT_DESIGNTIME];\n\t\tdelete settings.ref;\n\t\tdelete settings.class;\n\t\tdelete settings.binding;\n\t\tdelete settings[FL_DELEGATE];\n\t\tdelete settings[DT_DESIGNTIME];\n\t\tdelete settings[CORE_REQUIRE]; // Core require is not useful in control mode\n\t\tconst targetControlInstance = new ControlType(settings as $ControlSettings);\n\t\tif (classDef) {\n\t\t\ttargetControlInstance.addStyleClass(classDef);\n\t\t}\n\t\tif (refDef) {\n\t\t\trefDef.setCurrent(targetControlInstance as unknown as T);\n\t\t}\n\t\tconst customSettings = targetControlInstance.data(\"sap-ui-custom-settings\") ?? {};\n\t\tif (flDelegate) {\n\t\t\tcustomSettings[\"sap.ui.fl\"] ??= {};\n\t\t\tcustomSettings[\"sap.ui.fl\"].delegate = flDelegate;\n\t\t}\n\t\tif (dtDesigntime) {\n\t\t\tcustomSettings[\"sap.ui.dt\"] ??= {};\n\t\t\tcustomSettings[\"sap.ui.dt\"].designtime = dtDesigntime;\n\t\t}\n\t\tif (Object.keys(customSettings).length > 0) {\n\t\t\ttargetControlInstance.data(\"sap-ui-custom-settings\", customSettings);\n\t\t}\n\n\t\tif (bindingDef) {\n\t\t\tif (typeof bindingDef === \"string\") {\n\t\t\t\tconst bindingInfo = bindingParser(bindingDef);\n\t\t\t\tif (bindingInfo) {\n\t\t\t\t\ttargetControlInstance.bindElement({ model: bindingInfo.model ?? undefined, path: bindingInfo.path });\n\t\t\t\t}\n\t\t\t\ttargetControlInstance.bindElement(bindingDef);\n\t\t\t} else {\n\t\t\t\t// We consider it's an object\n\t\t\t\tObject.keys(bindingDef).forEach((bindingDefKey) => {\n\t\t\t\t\ttargetControlInstance.bindElement({ model: bindingDefKey, path: bindingDef[bindingDefKey] });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tfor (const latePropertiesKey in lateProperties) {\n\t\t\tlateProperties[latePropertiesKey]\n\t\t\t\t.then((value) => {\n\t\t\t\t\treturn targetControlInstance.setProperty(latePropertiesKey, value);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tLog.error(`Couldn't set property ${latePropertiesKey} on ${ControlType.getMetadata().getName()}`, error, \"jsxControl\");\n\t\t\t\t});\n\t\t}\n\t\ttargetControl = targetControlInstance;\n\t} else if (typeof ControlType === \"function\") {\n\t\tconst controlTypeFn = ControlType;\n\t\ttargetControl = controlTypeFn(settings as $ControlSettings);\n\t} else {\n\t\ttargetControl = new Text({ text: \"Missing component \" + (ControlType as string) });\n\t}\n\n\treturn targetControl;\n};\n\nexport default jsxControl;\n"],"mappings":"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","ignoreList":[]}