{"version":3,"names":["FL_DELEGATE","CORE_REQUIRE","DT_DESIGNTIME","addChildAggregation","aggregationChildren","aggregationName","child","undefined","isChildAnElement","push","Array","isArray","forEach","subChild","Object","keys","childKey","children","isA","isAControl","getMetadata","processAggregations","metadata","mSettings","metadataAggregations","getAllAggregations","defaultAggregationName","getDefaultAggregationName","hasOwnProperty","path","factory","template","processProperties","settings","settingsKey","lateProperties","allEvents","getAllEvents","allProperties","getAllProperties","value","isBindingToolkitExpression","bindingToolkitExpression","isConstant","compileConstant","call","isPathInModelExpression","model","modelName","compileExpression","then","startsWith","propertyType","getType","DataType","includes","getName","parseValue","__bindingInfo","processCommand","commandProperty","command","eventName","split","event","name","EventHandlerResolver","resolveEventHandler","jsxControl","ControlType","key","jsxContext","targetControl","isFragment","isRuntime","runtimeBuildingBlock","getContent","view","appComponent","classDef","class","refDef","ref","bindingDef","binding","flDelegate","dtDesigntime","targetControlInstance","addStyleClass","setCurrent","customSettings","data","delegate","designtime","length","bindingInfo","bindingParser","bindElement","bindingDefKey","latePropertiesKey","setProperty","catch","error","Log","controlTypeFn","Text","text"],"sourceRoot":".","sources":["jsx-control.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileConstant,\n\tcompileExpression,\n\tisBindingToolkitExpression,\n\tisConstant,\n\tisPathInModelExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport type { BindingInfoHolder, NonAbstractClass } from \"sap/fe/base/ClassSupport\";\nimport type { ControlProperties, JSXContext, NonControlProperties, Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport type BuildingBlockTemplatingBase from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplatingBase\";\nimport type RuntimeBuildingBlock from \"sap/fe/core/buildingBlocks/templating/RuntimeBuildingBlock\";\nimport Text from \"sap/m/Text\";\nimport DataType from \"sap/ui/base/DataType\";\nimport { bindingParser } from \"sap/ui/base/ManagedObject\";\nimport type ManagedObjectMetadata from \"sap/ui/base/ManagedObjectMetadata\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { default as Element, default as UI5Element } from \"sap/ui/core/Element\";\nimport EventHandlerResolver from \"sap/ui/core/mvc/EventHandlerResolver\";\n\nconst FL_DELEGATE = \"fl:delegate\";\nconst CORE_REQUIRE = \"core:require\";\nconst DT_DESIGNTIME = \"dt:designtime\";\nconst addChildAggregation = function (\n\taggregationChildren: Record<string, (string | UI5Element)[]>,\n\taggregationName: string,\n\tchild?: string | UI5Element | UI5Element[]\n): void {\n\tif (child === null || child === undefined || typeof child === \"string\") {\n\t\treturn;\n\t}\n\tif (!aggregationChildren[aggregationName]) {\n\t\taggregationChildren[aggregationName] = [];\n\t}\n\tif (isChildAnElement(child)) {\n\t\taggregationChildren[aggregationName].push(child);\n\t} else if (Array.isArray(child)) {\n\t\tchild.forEach((subChild) => {\n\t\t\taddChildAggregation(aggregationChildren, aggregationName, subChild);\n\t\t});\n\t} else if (typeof child === \"function\") {\n\t\taggregationChildren[aggregationName] = child;\n\t} else {\n\t\tObject.keys(child).forEach((childKey) => {\n\t\t\taddChildAggregation(aggregationChildren, childKey, child[childKey]);\n\t\t});\n\t}\n};\nconst isChildAnElement = function (children?: unknown): children is Element {\n\treturn (children as Element)?.isA?.(\"sap.ui.core.Element\");\n};\nconst isAControl = function (children?: typeof Control | Function): children is NonAbstractClass<Control> {\n\treturn !!(children as typeof Control)?.getMetadata;\n};\n\nfunction processAggregations(metadata: ManagedObjectMetadata, mSettings: Record<string, unknown>): void {\n\tconst metadataAggregations = metadata.getAllAggregations();\n\tconst defaultAggregationName = metadata.getDefaultAggregationName();\n\tconst aggregationChildren: Record<string, (string | UI5Element)[]> = {};\n\taddChildAggregation(aggregationChildren, defaultAggregationName, mSettings.children as string | UI5Element | UI5Element[]);\n\tdelete mSettings.children;\n\t// find out which aggregation are bound (both in children and directly under it)\n\tObject.keys(metadataAggregations).forEach((aggregationName) => {\n\t\tif (aggregationChildren[aggregationName] !== undefined) {\n\t\t\tif (mSettings.hasOwnProperty(aggregationName)) {\n\t\t\t\tif (typeof mSettings[aggregationName] === \"string\") {\n\t\t\t\t\tmSettings[aggregationName] = {\n\t\t\t\t\t\tpath: mSettings[aggregationName]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (typeof aggregationChildren[aggregationName] === \"function\") {\n\t\t\t\t\t(mSettings[aggregationName] as { factory: Function }).factory = aggregationChildren[\n\t\t\t\t\t\taggregationName\n\t\t\t\t\t] as unknown as Function;\n\t\t\t\t} else {\n\t\t\t\t\t(mSettings[aggregationName] as { template: string | UI5Element }).template = aggregationChildren[aggregationName][0];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmSettings[aggregationName] = aggregationChildren[aggregationName];\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Processes the properties.\n *\n * If the property is a bindingToolkit expression we need to compile it.\n * Else if the property is set as string (compiled binding expression returns string by default even if it's a boolean, int, etc.) and it doesn't match with expected\n * format the value is parsed to provide expected format.\n * @param metadata Metadata of the control\n * @param settings Settings of the control\n * @returns A map of late properties that need to be awaited after the control is created\n */\nfunction processProperties(metadata: ManagedObjectMetadata, settings: Record<string, unknown>): Record<string, Promise<unknown>> {\n\tlet settingsKey: keyof typeof settings;\n\tconst lateProperties: Record<string, Promise<unknown>> = {};\n\tconst allEvents = metadata.getAllEvents();\n\tconst allProperties = metadata.getAllProperties();\n\tfor (settingsKey in settings) {\n\t\tconst value = settings[settingsKey];\n\t\tif (isBindingToolkitExpression(value)) {\n\t\t\tconst bindingToolkitExpression: BindingToolkitExpression<unknown> = value;\n\t\t\tif (isConstant(bindingToolkitExpression)) {\n\t\t\t\tsettings[settingsKey] = compileConstant(bindingToolkitExpression, false, true, true);\n\t\t\t} else if (!Object.hasOwnProperty.call(allProperties, settingsKey)) {\n\t\t\t\t// Aggregation case - we need to compile the expression but as an object\n\t\t\t\tif (isPathInModelExpression(bindingToolkitExpression)) {\n\t\t\t\t\tsettings[settingsKey] = { path: bindingToolkitExpression.path, model: bindingToolkitExpression.modelName };\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsettings[settingsKey] = compileExpression(bindingToolkitExpression);\n\t\t\t}\n\t\t} else if (value !== null && typeof value === \"object\" && (value as Promise<unknown>).then) {\n\t\t\tlateProperties[settingsKey] = value as Promise<unknown>;\n\t\t\tdelete settings[settingsKey];\n\t\t} else if (typeof value === \"string\" && !value.startsWith(\"{\")) {\n\t\t\tconst propertyType = (allProperties[settingsKey] as { getType?: Function })?.getType?.();\n\t\t\tif (propertyType && propertyType instanceof DataType && [\"boolean\", \"int\", \"float\"].includes(propertyType.getName())) {\n\t\t\t\tsettings[settingsKey] = propertyType.parseValue(value);\n\t\t\t}\n\t\t} else if (typeof value === \"object\" && (value as BindingInfoHolder<unknown>).__bindingInfo) {\n\t\t\tsettings[settingsKey] = (value as BindingInfoHolder<unknown>).__bindingInfo;\n\t\t} else if (value === undefined) {\n\t\t\tif (Object.hasOwnProperty.call(allEvents, settingsKey)) {\n\t\t\t\tdelete settings[settingsKey];\n\t\t\t}\n\t\t}\n\t}\n\treturn lateProperties;\n}\n\n/**\n * Processes the command.\n *\n * Resolves the command set on the control via the intrinsic class attribute \"jsx:command\".\n * If no command has been set or the targeted event doesn't exist, no configuration is set.\n * @param metadata Metadata of the control\n * @param settings Settings of the control\n */\nfunction processCommand(metadata: ManagedObjectMetadata, settings: Record<string, unknown>): void {\n\tconst commandProperty = settings[\"jsx:command\"];\n\tif (commandProperty) {\n\t\tconst [command, eventName] = (commandProperty as string).split(\"|\");\n\t\tconst event = metadata.getAllEvents()[eventName];\n\t\tif (event && command.startsWith(\"cmd:\")) {\n\t\t\tsettings[event.name] = EventHandlerResolver.resolveEventHandler(command);\n\t\t}\n\t}\n\tdelete settings[\"jsx:command\"];\n}\n\nconst jsxControl = function <T extends Element>(\n\tControlType: NonAbstractClass<Control> | Function,\n\tsettings: NonControlProperties<T> & {\n\t\tkey: string;\n\t\tchildren?: Element | ControlProperties<T>;\n\t\tref?: Ref<T>;\n\t\tbinding?: string;\n\t\tclass?: string;\n\t\t[FL_DELEGATE]?: string;\n\t\t[DT_DESIGNTIME]?: string;\n\t\t[CORE_REQUIRE]?: string;\n\t},\n\tkey: string,\n\tjsxContext: JSXContext\n): Control | Control[] | undefined {\n\tlet targetControl: Control | Control[] | undefined;\n\n\tif ((ControlType as { isFragment?: boolean })?.isFragment) {\n\t\ttargetControl = settings.children as Control | Control[];\n\t} else if ((ControlType as typeof BuildingBlockTemplatingBase)?.isRuntime) {\n\t\tconst runtimeBuildingBlock = new (ControlType as typeof RuntimeBuildingBlock)(settings as unknown as $ControlSettings);\n\t\ttargetControl = runtimeBuildingBlock.getContent?.(jsxContext.view!, jsxContext.appComponent!);\n\t} else if (isAControl(ControlType)) {\n\t\tconst metadata = ControlType.getMetadata();\n\t\tif (key !== undefined) {\n\t\t\tsettings[\"key\"] = key;\n\t\t}\n\t\tconst lateProperties = processProperties(metadata, settings);\n\t\tprocessCommand(metadata, settings);\n\t\tprocessAggregations(metadata, settings);\n\t\tconst classDef = settings.class;\n\t\tconst refDef = settings.ref;\n\t\tconst bindingDef = settings.binding;\n\t\tconst flDelegate = settings[FL_DELEGATE];\n\t\tconst dtDesigntime = settings[DT_DESIGNTIME];\n\t\tdelete settings.ref;\n\t\tdelete settings.class;\n\t\tdelete settings.binding;\n\t\tdelete settings[FL_DELEGATE];\n\t\tdelete settings[DT_DESIGNTIME];\n\t\tdelete settings[CORE_REQUIRE]; // Core require is not useful in control mode\n\t\tconst targetControlInstance = new ControlType(settings as $ControlSettings);\n\t\tif (classDef) {\n\t\t\ttargetControlInstance.addStyleClass(classDef);\n\t\t}\n\t\tif (refDef) {\n\t\t\trefDef.setCurrent(targetControlInstance as unknown as T);\n\t\t}\n\t\tconst customSettings = targetControlInstance.data(\"sap-ui-custom-settings\") ?? {};\n\t\tif (flDelegate) {\n\t\t\tcustomSettings[\"sap.ui.fl\"] ??= {};\n\t\t\tcustomSettings[\"sap.ui.fl\"].delegate = flDelegate;\n\t\t}\n\t\tif (dtDesigntime) {\n\t\t\tcustomSettings[\"sap.ui.dt\"] ??= {};\n\t\t\tcustomSettings[\"sap.ui.dt\"].designtime = dtDesigntime;\n\t\t}\n\t\tif (Object.keys(customSettings).length > 0) {\n\t\t\ttargetControlInstance.data(\"sap-ui-custom-settings\", customSettings);\n\t\t}\n\n\t\tif (bindingDef) {\n\t\t\tif (typeof bindingDef === \"string\") {\n\t\t\t\tconst bindingInfo = bindingParser(bindingDef);\n\t\t\t\tif (bindingInfo) {\n\t\t\t\t\ttargetControlInstance.bindElement({ model: bindingInfo.model ?? undefined, path: bindingInfo.path });\n\t\t\t\t}\n\t\t\t\ttargetControlInstance.bindElement(bindingDef);\n\t\t\t} else {\n\t\t\t\t// We consider it's an object\n\t\t\t\tObject.keys(bindingDef).forEach((bindingDefKey) => {\n\t\t\t\t\ttargetControlInstance.bindElement({ model: bindingDefKey, path: bindingDef[bindingDefKey] });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tfor (const latePropertiesKey in lateProperties) {\n\t\t\tlateProperties[latePropertiesKey]\n\t\t\t\t.then((value) => {\n\t\t\t\t\treturn targetControlInstance.setProperty(latePropertiesKey, value);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tLog.error(`Couldn't set property ${latePropertiesKey} on ${ControlType.getMetadata().getName()}`, error, \"jsxControl\");\n\t\t\t\t});\n\t\t}\n\t\ttargetControl = targetControlInstance;\n\t} else if (typeof ControlType === \"function\") {\n\t\tconst controlTypeFn = ControlType;\n\t\ttargetControl = controlTypeFn(settings as $ControlSettings);\n\t} else {\n\t\ttargetControl = new Text({ text: \"Missing component \" + (ControlType as string) });\n\t}\n\n\treturn targetControl;\n};\n\nexport default jsxControl;\n"],"mappings":"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","ignoreList":[],"file":"jsx-control-dbg.js"}