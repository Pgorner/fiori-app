{"version":3,"file":"FPMHelper.js","names":["FPMHelper","loadModuleAndCallMethod","async","module","method","view","_len","arguments","length","args","Array","_key","Promise","resolve","extensionAPI","getControllerName","getController","getExtensionAPI","startsWith","fnTarget","ObjectPath","get","replace","substring","sap","ui","require","loadedModule","bind","actionWrapper","oEvent","sModule","sMethod","oParameters","Log","debug","oSource","getSource","oView","CommonUtils","getTargetView","oBindingContext","getBindingContext","listBinding","aSelectedContexts","undefined","contexts","getParent","isA","getMdcTable","getRowBinding","control","parent","validationWrapper","oValidationContexts","getCustomFunction","moduleName","functionName","source","customFunction","controllerExt","error"],"sources":["./FPMHelper.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ExtensionAPI from \"sap/fe/core/ExtensionAPI\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type MdcTable from \"sap/ui/mdc/Table\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\n\nconst FPMHelper = {\n\tloadModuleAndCallMethod: async function (module: string, method: string, view: View, ...args: unknown[]): Promise<unknown> {\n\t\treturn new Promise(function (resolve: (value: unknown) => void) {\n\t\t\tlet extensionAPI: ExtensionAPI | undefined;\n\t\t\tif (\n\t\t\t\tview.getControllerName() === \"sap.fe.templates.ObjectPage.ObjectPageController\" ||\n\t\t\t\tview.getControllerName() === \"sap.fe.templates.ListReport.ListReportController\"\n\t\t\t) {\n\t\t\t\textensionAPI = (view as FEView).getController().getExtensionAPI();\n\t\t\t}\n\n\t\t\tif (module.startsWith(\"/extension/\")) {\n\t\t\t\tconst fnTarget = ObjectPath.get(module.replace(/\\//g, \".\").substring(1), extensionAPI);\n\t\t\t\tresolve(fnTarget[method](...args));\n\t\t\t} else {\n\t\t\t\tsap.ui.require([module], function (loadedModule: Record<string, Function>) {\n\t\t\t\t\t// - we bind the action to the extensionAPI of the controller so it has the same scope as a custom section\n\t\t\t\t\t// - we provide the context as API, maybe if needed further properties\n\t\t\t\t\tresolve(loadedModule[method].bind(extensionAPI)(...args));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\tactionWrapper: async function (\n\t\toEvent: UI5Event,\n\t\tsModule?: string,\n\t\tsMethod?: string,\n\t\toParameters?: { contexts?: Context[] }\n\t): Promise<unknown> {\n\t\tif (!sModule || !sMethod) {\n\t\t\tLog.debug(\"Both the module and the method must be defined to execute a custom action\");\n\t\t\treturn;\n\t\t}\n\n\t\t//The source would be command execution, in case a command is defined for the action in the manifest.\n\t\tconst oSource = (oEvent.getSource ? oEvent.getSource() : (oEvent as { oSource?: EventProvider }).oSource) as Control,\n\t\t\toView = CommonUtils.getTargetView(oSource),\n\t\t\toBindingContext = oSource.getBindingContext()!;\n\n\t\tlet listBinding: ODataListBinding | undefined;\n\t\tlet aSelectedContexts: Context[];\n\n\t\tif (oParameters !== undefined) {\n\t\t\taSelectedContexts = oParameters.contexts || [];\n\t\t} else if (oBindingContext !== undefined) {\n\t\t\taSelectedContexts = [oBindingContext];\n\t\t} else {\n\t\t\taSelectedContexts = [];\n\t\t}\n\t\tif (oSource.getParent()?.isA(\"sap.ui.mdc.actiontoolbar.ActionToolbarAction\") || oSource.getParent()?.isA(\"sap.m.Menu\")) {\n\t\t\tlistBinding = FPMHelper.getMdcTable(oSource)?.getRowBinding();\n\t\t}\n\n\t\treturn FPMHelper.loadModuleAndCallMethod(sModule, sMethod, oView, oBindingContext, aSelectedContexts, listBinding);\n\t},\n\tgetMdcTable: function (control: UI5Element): MdcTable | null | undefined {\n\t\tconst parent = control.getParent();\n\t\tif (!parent || parent.isA<MdcTable>(\"sap.ui.mdc.Table\")) {\n\t\t\treturn parent;\n\t\t}\n\t\treturn FPMHelper.getMdcTable(parent as Control);\n\t},\n\tvalidationWrapper: async function (\n\t\tsModule: string,\n\t\tsMethod: string,\n\t\toValidationContexts: Record<string, unknown>,\n\t\toView: View,\n\t\toBindingContext: Context\n\t): Promise<{ messageTarget?: string; messageText: string }[]> {\n\t\treturn FPMHelper.loadModuleAndCallMethod(sModule, sMethod, oView, oBindingContext, oValidationContexts) as Promise<\n\t\t\t{ messageTarget?: string; messageText: string }[]\n\t\t>;\n\t},\n\t/**\n\t * Returns an external custom function defined either in a custom controller extension or in an external module.\n\t * @param moduleName The external module name, or /extension/<path to the custom controller extension module>\n\t * @param functionName The name of the function\n\t * @param source A control in the view or an event triggered by a control in the view\n\t * @returns The function (or undefined if it couldn't be found)\n\t */\n\tgetCustomFunction<FunctionType>(\n\t\tmoduleName: string,\n\t\tfunctionName: string,\n\t\tsource: Control | UI5Event<{}, Control>\n\t): FunctionType | undefined {\n\t\tlet control: Control;\n\t\tif (source.isA<UI5Event>(\"sap.ui.base.Event\")) {\n\t\t\tcontrol = source.getSource();\n\t\t} else {\n\t\t\tcontrol = source;\n\t\t}\n\t\tconst view = CommonUtils.getTargetView(control);\n\t\tconst extensionAPI = view.getController().getExtensionAPI();\n\n\t\tlet customFunction: FunctionType | undefined;\n\n\t\tif (moduleName.startsWith(\"/extension/\")) {\n\t\t\tconst controllerExt = ObjectPath.get(moduleName.replace(/\\//g, \".\").substring(1), extensionAPI);\n\t\t\tcustomFunction = controllerExt ? controllerExt[functionName] : undefined;\n\t\t} else {\n\t\t\tconst module = sap.ui.require(moduleName);\n\t\t\tcustomFunction = module ? module[functionName]?.bind(extensionAPI) : undefined;\n\t\t}\n\n\t\tif (!customFunction) {\n\t\t\tLog.error(`Couldn't find method ${functionName} in ${moduleName}`);\n\t\t}\n\t\treturn customFunction;\n\t}\n};\n\nexport default FPMHelper;\n"],"mappings":";;;;iHAcA,MAAMA,EAAY,CACjBC,wBAAyBC,eAAgBC,EAAgBC,EAAgBC,GAAkD,QAAAC,EAAAC,UAAAC,OAAnCC,EAAI,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAA,CAAJF,EAAIE,EAAA,GAAAJ,UAAAI,EAAA,CAC3F,OAAO,IAAIC,QAAQ,SAAUC,GAC5B,IAAIC,EACJ,GACCT,EAAKU,sBAAwB,oDAC7BV,EAAKU,sBAAwB,mDAC5B,CACDD,EAAgBT,EAAgBW,gBAAgBC,iBACjD,CAEA,GAAId,EAAOe,WAAW,eAAgB,CACrC,MAAMC,EAAWC,EAAWC,IAAIlB,EAAOmB,QAAQ,MAAO,KAAKC,UAAU,GAAIT,GACzED,EAAQM,EAASf,MAAWK,GAC7B,KAAO,CACNe,IAAIC,GAAGC,QAAQ,CAACvB,GAAS,SAAUwB,GAGlCd,EAAQc,EAAavB,GAAQwB,KAAKd,EAA1Ba,IAA2ClB,GACpD,EACD,CACD,EACD,EAEAoB,cAAe3B,eACd4B,EACAC,EACAC,EACAC,GAEA,IAAKF,IAAYC,EAAS,CACzBE,EAAIC,MAAM,6EACV,MACD,CAGA,MAAMC,EAAWN,EAAOO,UAAYP,EAAOO,YAAeP,EAAuCM,QAChGE,EAAQC,EAAYC,cAAcJ,GAClCK,EAAkBL,EAAQM,oBAE3B,IAAIC,EACJ,IAAIC,EAEJ,GAAIX,IAAgBY,UAAW,CAC9BD,EAAoBX,EAAYa,UAAY,EAC7C,MAAO,GAAIL,IAAoBI,UAAW,CACzCD,EAAoB,CAACH,EACtB,KAAO,CACNG,EAAoB,EACrB,CACA,GAAIR,EAAQW,aAAaC,IAAI,iDAAmDZ,EAAQW,aAAaC,IAAI,cAAe,CACvHL,EAAc3C,EAAUiD,YAAYb,IAAUc,eAC/C,CAEA,OAAOlD,EAAUC,wBAAwB8B,EAASC,EAASM,EAAOG,EAAiBG,EAAmBD,EACvG,EACAM,YAAa,SAAUE,GACtB,MAAMC,EAASD,EAAQJ,YACvB,IAAKK,GAAUA,EAAOJ,IAAc,oBAAqB,CACxD,OAAOI,CACR,CACA,OAAOpD,EAAUiD,YAAYG,EAC9B,EACAC,kBAAmBnD,eAClB6B,EACAC,EACAsB,EACAhB,EACAG,GAEA,OAAOzC,EAAUC,wBAAwB8B,EAASC,EAASM,EAAOG,EAAiBa,EAGpF,EAQAC,kBACCC,EACAC,EACAC,GAEA,IAAIP,EACJ,GAAIO,EAAOV,IAAc,qBAAsB,CAC9CG,EAAUO,EAAOrB,WAClB,KAAO,CACNc,EAAUO,CACX,CACA,MAAMrD,EAAOkC,EAAYC,cAAcW,GACvC,MAAMrC,EAAeT,EAAKW,gBAAgBC,kBAE1C,IAAI0C,EAEJ,GAAIH,EAAWtC,WAAW,eAAgB,CACzC,MAAM0C,EAAgBxC,EAAWC,IAAImC,EAAWlC,QAAQ,MAAO,KAAKC,UAAU,GAAIT,GAClF6C,EAAiBC,EAAgBA,EAAcH,GAAgBZ,SAChE,KAAO,CACN,MAAM1C,EAASqB,IAAIC,GAAGC,QAAQ8B,GAC9BG,EAAiBxD,EAASA,EAAOsD,IAAe7B,KAAKd,GAAgB+B,SACtE,CAEA,IAAKc,EAAgB,CACpBzB,EAAI2B,MAAM,wBAAwBJ,QAAmBD,IACtD,CACA,OAAOG,CACR,GACC,OAEa3D,CAAS","ignoreList":[]}