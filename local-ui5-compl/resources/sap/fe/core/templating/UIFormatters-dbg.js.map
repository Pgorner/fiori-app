{"version":3,"names":["FieldEditMode","Disabled","Display","Editable","EditableDisplay","EditableReadOnly","ReadOnly","_exports","getDisplayMode","oDataModelObjectPath","DisplayModeFormatter","targetObject","getEditableExpressionAsObject","oPropertyPath","oDataFieldConverted","isEditable","arguments","length","undefined","UI","IsEditable","considerUpdateRestrictions","getEditableExpression","bAsObject","relativePath","getRelativePaths","compileExpression","dataFieldEditableExpression","constant","isProperty","ifElse","isNonEditableExpression","oProperty","isPathAnnotationExpression","$target","isPathUpdatableExpression","isPathUpdatable","propertyPath","pathVisitor","path","navigationPaths","singletonPathVisitor","convertedTypes","editableExpression","or","and","not","isComputed","isKey","isImmutable","IsTransientBinding","unresolvableExpression","getCollaborationExpression","dataModelObjectPath","formatter","objectPath","getTargetObjectPath","activityExpression","pathInModel","keys","targetEntityType","keysExpressions","forEach","key","keyExpression","name","push","formatResult","getEnabledExpressionAsObject","getEnabledExpression","dataFieldEnabledExpression","isDisabledExpression","enabledExpression","getEditMode","measureReadOnly","asObject","dataFieldConverted","$Type","property","associatedCurrencyProperty","getAssociatedCurrencyProperty","unitProperty","getAssociatedUnitProperty","resultExpression","isUnitReadOnly","isReadOnlyExpression","isConstant","annotations","Measures","ISOCurrency","Unit","readOnlyExpression","editModeExpression","hasValidAnalyticalCurrencyOrUnit","oPropertyDataModelObjectPath","oPropertyDefinition","currency","measure","isTruthy","getExpressionFromAnnotation","IsTotal","getFieldDisplay","sTargetDisplayMode","oComputedEditMode","hasTextAnnotation","Common","Text","hasValueHelp","equal","getTypeConfig","dataType","oTargetMapping","EDM_TYPE_MAPPING","type","propertyTypeConfig","constraints","formatOptions","scale","$Scale","precision","$Precision","maxLength","$MaxLength","nullable","$Nullable","minimum","isNaN","Validation","Minimum","maximum","Maximum","isDigitSequence","IsDigitSequence","V4","$V4","parseAsString","indexOf","emptyString","parseKeepsEmptyString","getConstraintOptions","DoNotCheckScaleOfMeasuredQuantity","valueOf","skipDecimalsValidation","getBindingWithUnitOrCurrency","oPropertyDataModelPath","propertyBindingExpression","ignoreUnitConstraint","unit","relativeLocation","formatWithTypeInformation","hasStaticPercentUnit","showMeasure","valueFormatters","formatWithPercentage","complexType","unitBindingExpression","constraintOptions","addTypeInformation","getBindingForDatePicker","minDate","$Date","maxDate","minExpression","maxExpression","getBindingForUnitOrCurrency","getContextRelativeTargetObjectPath","showNumber","getBindingWithTimezone","hideTimezoneForEmptyValues","fieldFormatOptions","timezone","Timezone","style","DateTimeStyle","showTimezoneForEmptyValues","dateTimeStyle","dateTimePattern","pattern","showTime","showDate","showTimezone","getBindingForDateFormat","propertyDataModelPath","formatOptionsDateFormat","toString","getBindingForTimezone","propertyDefinition","getAlignmentExpression","sAlignDisplay","sAlignEdit","getConverterContext","oContext","oInterface","context","convertMetaModelContext","requiresIContext","getDataModelObjectPath","getInvolvedDataModelObjects","isMultiValueField","oDataModelPath","navigationProperties","hasOneToManyNavigation","findIndex","oNav","isMultipleNavigationProperty","contextLocation","oContextNav","getRequiredExpressionAsObject","forceEditMode","getRequiredExpression","oRequiredProperties","aRequiredPropertiesFromInsertRestrictions","requiredPropertiesFromInsertRestrictions","aRequiredPropertiesFromUpdateRestrictions","requiredPropertiesFromUpdateRestrictions","dataFieldRequiredExpression","isRequiredExpression","requiredPropertyFromInsertRestrictionsExpression","requiredPropertyFromUpdateRestrictionsExpression","requiredExpression","editMode","includes","IsCreateMode","returnExpression","getRequiredExpressionForConnectedDataField","dataFieldObjectPath","data","Data","Object","dataFields","isRequiredExpressions","dataField","Value","Target","isAnnotationOfType","isVisible","Hidden","isMultiLine","isMultiLineText","getActionEnabledExpression","actionTarget","pathFromContextLocation","operationAvailableIsAnnotated","Core","OperationAvailable","term","prefix","sourceEntityType","navigations","sourceActionDataModelObject","enhanceDataModelPath","nav","join","bindingParameterFullName","isBound","parameters","fullyQualifiedName","operationAvailableExpression","bindingContextPathVisitor","isQuickViewFacetVisible","facetModelPath","targetVisible"],"sourceRoot":".","sources":["UIFormatters.ts"],"sourcesContent":["import type { Action, ActionParameter, ConvertedMetadata, PathAnnotationExpression, Property } from \"@sap-ux/vocabularies-types\";\nimport type { AnnotationPath } from \"@sap-ux/vocabularies-types/Edm\";\nimport { CoreAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Core\";\nimport type { Unit } from \"@sap-ux/vocabularies-types/vocabularies/Measures\";\nimport type {\n\tCollectionFacet,\n\tConnectedFieldsType,\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldForActionTypes,\n\tDataFieldTypes,\n\tDataPointType,\n\tDataPointTypeTypes,\n\tFieldGroup,\n\tReferenceFacet\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type {\n\tBindingToolkitExpression,\n\tCompiledBindingToolkitExpression,\n\tComplexTypeConstraintOptions,\n\tFn\n} from \"sap/fe/base/BindingToolkit\";\nimport {\n\tEDM_TYPE_MAPPING,\n\taddTypeInformation,\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tformatResult,\n\tformatWithTypeInformation,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tisConstant,\n\tisTruthy,\n\tnot,\n\tor,\n\tpathInModel,\n\tunresolvableExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport { convertMetaModelContext, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { UI, bindingContextPathVisitor, singletonPathVisitor } from \"sap/fe/core/helpers/BindingHelper\";\nimport { isAnnotationOfType, isMultipleNavigationProperty, isPathAnnotationExpression, isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tenhanceDataModelPath,\n\tgetContextRelativeTargetObjectPath,\n\tgetRelativePaths,\n\tgetTargetObjectPath,\n\tisPathUpdatable\n} from \"sap/fe/core/templating/DataModelPathHelper\";\nimport * as DisplayModeFormatter from \"sap/fe/core/templating/DisplayModeFormatter\";\nimport {\n\tisDisabledExpression,\n\tisNonEditableExpression,\n\tisReadOnlyExpression,\n\tisRequiredExpression\n} from \"sap/fe/core/templating/FieldControlHelper\";\nimport {\n\tgetAssociatedCurrencyProperty,\n\tgetAssociatedUnitProperty,\n\thasStaticPercentUnit,\n\thasValueHelp,\n\tisComputed,\n\tisImmutable,\n\tisKey,\n\tisMultiLineText\n} from \"sap/fe/core/templating/PropertyHelper\";\nimport type FieldFormatOptions from \"sap/fe/macros/field/FieldFormatOptions\";\nimport type { DataPointFormatOptions } from \"sap/fe/macros/internal/helpers/DataPointTemplating\";\nimport type Context from \"sap/ui/model/Context\";\n\n// Import-export method used by the converter to use them in the templating through the UIFormatters.\nexport type DisplayMode = DisplayModeFormatter.DisplayMode;\n\nexport type FieldEditStyle = \"RadioButtons\";\n\nexport type PropertyOrPath<P> = string | P | PathAnnotationExpression<P>;\nexport type MetaModelContext = {\n\t$kind: string;\n\t$Type: string;\n\t$Nullable?: boolean;\n};\n\n/**\n * Interface representing the structure returned by the ODataMetaModel when using the @@ operator in XML templates.\n */\nexport type ComputedAnnotationInterface = {\n\tcontext: Context;\n\targuments?: unknown[];\n\t$$valueAsPromise?: boolean;\n};\n\nexport type configTypeConstraints = {\n\tscale?: number;\n\tprecision?: number;\n\tmaxLength?: number;\n\tnullable?: boolean;\n\tminimum?: string;\n\tmaximum?: string;\n\tisDigitSequence?: boolean;\n\tV4?: boolean;\n};\n\nexport type configTypeformatOptions = {\n\tparseAsString?: boolean;\n\temptyString?: string;\n\tparseKeepsEmptyString?: boolean;\n};\n\nexport type ConfigType = {\n\ttype: string;\n\tconstraints: configTypeConstraints;\n\tformatOptions: configTypeformatOptions;\n};\n\nexport type DateTimeStyle = \"short\" | \"medium\" | \"long\" | \"full\";\n\nexport type FormatOptionsDateFormat = FieldFormatOptions | DataPointFormatOptions;\n\nexport const FieldEditMode = {\n\t/**\n\t * {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField }\n\t * is rendered in disabled mode\n\t */\n\tDisabled: \"Disabled\",\n\t/**\n\t * {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField }\n\t * is rendered in display mode\n\t */\n\tDisplay: \"Display\",\n\t/**\n\t * {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField }\n\t * is rendered in editable mode\n\t */\n\tEditable: \"Editable\",\n\t/**\n\t * If more than one control is rendered by the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField }\n\t * or {@link sap.ui.mdc.MultiValueField MultiValueField} control, the first part is editable, and the other\n\t * parts are in display mode.\n\t */\n\tEditableDisplay: \"EditableDisplay\",\n\t/**\n\t * If more than one control is rendered by the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField }\n\t * or {@link sap.ui.mdc.MultiValueField MultiValueField} control, the first part is editable, and the other\n\t * parts are read-only.\n\t */\n\tEditableReadOnly: \"EditableReadOnly\",\n\t/**\n\t * {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField }\n\t * is rendered in read-only mode\n\t */\n\tReadOnly: \"ReadOnly\"\n};\n\nexport const getDisplayMode = function (\n\toDataModelObjectPath: DataModelObjectPath<Property | DataFieldAbstractTypes | DataPointTypeTypes>\n): DisplayMode {\n\treturn DisplayModeFormatter.getDisplayMode(oDataModelObjectPath.targetObject, oDataModelObjectPath);\n};\nexport const getEditableExpressionAsObject = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\toDataFieldConverted: Property | DataFieldAbstractTypes | DataPointTypeTypes | undefined,\n\toDataModelObjectPath: DataModelObjectPath<unknown>,\n\tisEditable: BindingToolkitExpression<boolean> = UI.IsEditable,\n\tconsiderUpdateRestrictions = true\n): BindingToolkitExpression<boolean> {\n\treturn getEditableExpression(\n\t\toPropertyPath,\n\t\toDataFieldConverted,\n\t\toDataModelObjectPath,\n\t\ttrue,\n\t\tisEditable,\n\t\tconsiderUpdateRestrictions\n\t) as BindingToolkitExpression<boolean>;\n};\n\n/**\n * Create the expression to generate an \"editable\" Boolean value.\n * @param oPropertyPath The input property\n * @param oDataFieldConverted The DataFieldConverted object to read the fieldControl annotation\n * @param oDataModelObjectPath The path to this property object\n * @param bAsObject Whether or not this should be returned as an object or a binding string\n * @param isEditable Whether or not UI.IsEditable be considered.\n * @param considerUpdateRestrictions Whether we want to take into account UpdateRestrictions to compute the editable\n * @returns The binding expression used to determine if a property is editable or not\n */\nexport const getEditableExpression = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\toDataFieldConverted: Property | DataFieldAbstractTypes | DataPointTypeTypes | undefined = undefined,\n\toDataModelObjectPath: DataModelObjectPath<unknown>,\n\tbAsObject = false,\n\tisEditable: BindingToolkitExpression<boolean> = UI.IsEditable,\n\tconsiderUpdateRestrictions = true\n): CompiledBindingToolkitExpression | BindingToolkitExpression<boolean> {\n\tconst relativePath = getRelativePaths(oDataModelObjectPath);\n\tif (!oPropertyPath || typeof oPropertyPath === \"string\") {\n\t\treturn compileExpression(false);\n\t}\n\tlet dataFieldEditableExpression: BindingToolkitExpression<boolean> = constant(true);\n\tif (oDataFieldConverted !== undefined && !isProperty(oDataFieldConverted)) {\n\t\tdataFieldEditableExpression = ifElse(isNonEditableExpression(oDataFieldConverted), false, isEditable);\n\t} else if (oDataFieldConverted !== undefined) {\n\t\tdataFieldEditableExpression = isEditable;\n\t}\n\n\tconst oProperty = isPathAnnotationExpression(oPropertyPath) ? oPropertyPath.$target : oPropertyPath;\n\n\t// Editability depends on the field control expression\n\t// If the Field control is statically in ReadOnly or Inapplicable (disabled) -> not editable\n\t// If the property is a key -> not editable except in creation if not computed\n\t// If the property is computed -> not editable\n\t// If the property is not updatable -> not editable\n\t// If the property is immutable -> not editable except in creation\n\t// If the Field control is a path resolving to ReadOnly or Inapplicable (disabled) (<= 1) -> not editable\n\t// Else, to be editable you need\n\t// immutable and key while in the creation row\n\t// ui/isEditable\n\tconst isPathUpdatableExpression = isPathUpdatable(oDataModelObjectPath, {\n\t\tpropertyPath: oPropertyPath,\n\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\tsingletonPathVisitor(path, oDataModelObjectPath.convertedTypes, navigationPaths)\n\t});\n\tif (compileExpression(isPathUpdatableExpression) === \"false\" && considerUpdateRestrictions) {\n\t\treturn bAsObject ? isPathUpdatableExpression : \"false\";\n\t}\n\tconst editableExpression =\n\t\toProperty !== undefined\n\t\t\t? ifElse(\n\t\t\t\t\tor(\n\t\t\t\t\t\tand(not(isPathUpdatableExpression), considerUpdateRestrictions),\n\t\t\t\t\t\tisComputed(oProperty),\n\t\t\t\t\t\tisKey(oProperty),\n\t\t\t\t\t\tisImmutable(oProperty),\n\t\t\t\t\t\tisNonEditableExpression(oProperty, relativePath)\n\t\t\t\t\t),\n\t\t\t\t\tifElse(or(isComputed(oProperty), isNonEditableExpression(oProperty, relativePath)), false, UI.IsTransientBinding),\n\t\t\t\t\tisEditable\n\t\t\t  )\n\t\t\t: unresolvableExpression;\n\tif (bAsObject) {\n\t\treturn and(editableExpression, dataFieldEditableExpression);\n\t}\n\treturn compileExpression(and(editableExpression, dataFieldEditableExpression));\n};\n\nexport const getCollaborationExpression = function <T>(\n\tdataModelObjectPath: DataModelObjectPath<Property>,\n\tformatter: Fn<T>\n): BindingToolkitExpression<T> {\n\tconst objectPath = getTargetObjectPath(dataModelObjectPath);\n\tconst activityExpression = pathInModel(`/collaboration/activities${objectPath}`, \"internal\");\n\tconst keys = dataModelObjectPath?.targetEntityType?.keys;\n\tconst keysExpressions: BindingToolkitExpression<unknown>[] = [];\n\tkeys?.forEach(function (key) {\n\t\tconst keyExpression = pathInModel(key.name);\n\t\tkeysExpressions.push(keyExpression);\n\t});\n\treturn formatResult([activityExpression, ...keysExpressions], formatter);\n};\nexport const getEnabledExpressionAsObject = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\toDataFieldConverted?: Property | DataFieldAbstractTypes | DataPointTypeTypes,\n\toDataModelObjectPath?: DataModelObjectPath<unknown>\n): BindingToolkitExpression<boolean> {\n\treturn getEnabledExpression(oPropertyPath, oDataFieldConverted, true, oDataModelObjectPath) as BindingToolkitExpression<boolean>;\n};\n/**\n * Create the expression to generate an \"enabled\" Boolean value.\n * @param oPropertyPath The input property\n * @param oDataFieldConverted The DataFieldConverted Object to read the fieldControl annotation\n * @param bAsObject Whether or not this should be returned as an object or a binding string\n * @param oDataModelObjectPath\n * @returns The binding expression to determine if a property is enabled or not\n */\nexport const getEnabledExpression = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\toDataFieldConverted?: Property | DataFieldAbstractTypes | DataPointTypeTypes,\n\tbAsObject = false,\n\toDataModelObjectPath?: DataModelObjectPath<unknown>\n): CompiledBindingToolkitExpression | BindingToolkitExpression<boolean> {\n\tif (!oPropertyPath || typeof oPropertyPath === \"string\") {\n\t\treturn compileExpression(true);\n\t}\n\tlet relativePath;\n\tif (oDataModelObjectPath) {\n\t\trelativePath = getRelativePaths(oDataModelObjectPath);\n\t}\n\tlet dataFieldEnabledExpression: BindingToolkitExpression<boolean> = constant(true);\n\tif (oDataFieldConverted !== undefined && !isProperty(oDataFieldConverted)) {\n\t\tdataFieldEnabledExpression = ifElse(isDisabledExpression(oDataFieldConverted), false, true);\n\t}\n\n\tconst oProperty = isPathAnnotationExpression(oPropertyPath) ? oPropertyPath.$target : oPropertyPath;\n\t// Enablement depends on the field control expression\n\t// If the Field control is statically in Inapplicable (disabled) -> not enabled\n\tconst enabledExpression =\n\t\toProperty !== undefined ? ifElse(isDisabledExpression(oProperty, relativePath), false, true) : unresolvableExpression;\n\tif (bAsObject) {\n\t\treturn and(enabledExpression, dataFieldEnabledExpression);\n\t}\n\treturn compileExpression(and(enabledExpression, dataFieldEnabledExpression));\n};\n\n/**\n * Create the expression to generate an \"editMode\" enum value.\n * @param propertyPath The input property\n * @param dataModelObjectPath The list of data model objects that are involved to reach that property\n * @param measureReadOnly Whether we should set UoM / currency field mode to read only\n * @param asObject Whether we should return this as an expression or as a string\n * @param dataFieldConverted The dataField object\n * @param isEditable Whether or not UI.IsEditable be considered.\n * @returns The binding expression representing the current property edit mode, compliant with the MDC Field definition of editMode.\n */\nexport const getEditMode = function (\n\tpropertyPath: PropertyOrPath<Property>,\n\tdataModelObjectPath: DataModelObjectPath<unknown>,\n\tmeasureReadOnly = false,\n\tasObject = false,\n\tdataFieldConverted: Property | DataFieldAbstractTypes | DataPointTypeTypes | undefined = undefined,\n\tisEditable: BindingToolkitExpression<boolean> = UI.IsEditable\n): CompiledBindingToolkitExpression | BindingToolkitExpression<string> {\n\tif (\n\t\t!propertyPath ||\n\t\ttypeof propertyPath === \"string\" ||\n\t\t(!isProperty(dataFieldConverted) && dataFieldConverted?.$Type === UIAnnotationTypes.DataFieldWithNavigationPath)\n\t) {\n\t\treturn FieldEditMode.Display;\n\t}\n\tconst property = isPathAnnotationExpression(propertyPath) ? propertyPath.$target : propertyPath;\n\tconst relativePath = getRelativePaths(dataModelObjectPath);\n\tconst isPathUpdatableExpression = isPathUpdatable(dataModelObjectPath, {\n\t\tpropertyPath: property,\n\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\tsingletonPathVisitor(path, dataModelObjectPath.convertedTypes, navigationPaths)\n\t});\n\n\t// we get the editable Expression without considering update Restrictions because they are handled separately\n\tconst editableExpression = getEditableExpressionAsObject(propertyPath, dataFieldConverted, dataModelObjectPath, isEditable, false);\n\n\tconst enabledExpression = getEnabledExpressionAsObject(propertyPath, dataFieldConverted, dataModelObjectPath);\n\tconst associatedCurrencyProperty = getAssociatedCurrencyProperty(property);\n\tconst unitProperty = associatedCurrencyProperty || getAssociatedUnitProperty(property);\n\tlet resultExpression: BindingToolkitExpression<string> = constant(FieldEditMode.Editable);\n\tif (unitProperty) {\n\t\tconst isUnitReadOnly = isReadOnlyExpression(unitProperty, relativePath);\n\t\tresultExpression = ifElse(\n\t\t\tor(isUnitReadOnly, isComputed(unitProperty), and(isImmutable(unitProperty), not(UI.IsTransientBinding)), measureReadOnly),\n\t\t\tifElse(!isConstant(isUnitReadOnly) && isUnitReadOnly, FieldEditMode.EditableReadOnly, FieldEditMode.EditableDisplay),\n\t\t\tFieldEditMode.Editable\n\t\t);\n\t}\n\tif (!unitProperty && (property?.annotations?.Measures?.ISOCurrency || property?.annotations?.Measures?.Unit)) {\n\t\t// no unit property associated means this is a static unit\n\t\tresultExpression = constant(FieldEditMode.EditableDisplay);\n\t}\n\tlet readOnlyExpression;\n\tif (dataFieldConverted != undefined && !isProperty(dataFieldConverted)) {\n\t\treadOnlyExpression = or(isReadOnlyExpression(property, relativePath), isReadOnlyExpression(dataFieldConverted));\n\t} else {\n\t\treadOnlyExpression = isReadOnlyExpression(property, relativePath);\n\t}\n\n\t// if there are update Restrictions it is always display mode\n\tconst editModeExpression = ifElse(\n\t\tor(isPathUpdatableExpression, UI.IsTransientBinding),\n\t\tifElse(\n\t\t\tenabledExpression,\n\t\t\tifElse(\n\t\t\t\teditableExpression,\n\t\t\t\tresultExpression,\n\t\t\t\tifElse(\n\t\t\t\t\tand(!isConstant(readOnlyExpression) && readOnlyExpression, isEditable),\n\t\t\t\t\tFieldEditMode.ReadOnly,\n\t\t\t\t\tFieldEditMode.Display\n\t\t\t\t)\n\t\t\t),\n\t\t\tifElse(isEditable, FieldEditMode.Disabled, FieldEditMode.Display)\n\t\t),\n\t\tFieldEditMode.Display\n\t);\n\tif (asObject) {\n\t\treturn editModeExpression;\n\t}\n\treturn compileExpression(editModeExpression);\n};\n\nexport const hasValidAnalyticalCurrencyOrUnit = function (\n\toPropertyDataModelObjectPath: DataModelObjectPath<Property> | undefined\n): CompiledBindingToolkitExpression {\n\tconst oPropertyDefinition = oPropertyDataModelObjectPath?.targetObject;\n\tconst currency = oPropertyDefinition?.annotations?.Measures?.ISOCurrency;\n\tconst measure = currency ? currency : oPropertyDefinition?.annotations?.Measures?.Unit;\n\tif (measure) {\n\t\treturn compileExpression(or(isTruthy(getExpressionFromAnnotation(measure)), not(UI.IsTotal)));\n\t} else {\n\t\treturn compileExpression(constant(true));\n\t}\n};\n\n/**\n * Create the binding expression for the fieldDisplay.\n * @param oPropertyPath\n * @param sTargetDisplayMode\n * @param oComputedEditMode\n * @returns The binding expression representing the current property display mode, compliant with the MDC Field definition of displayMode.\n */\nexport const getFieldDisplay = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\tsTargetDisplayMode: string,\n\toComputedEditMode: BindingToolkitExpression<string>\n): CompiledBindingToolkitExpression {\n\tconst oProperty = (isPathAnnotationExpression(oPropertyPath) && oPropertyPath.$target) || (oPropertyPath as Property);\n\tconst hasTextAnnotation = oProperty.annotations?.Common?.Text !== undefined;\n\n\tif (hasValueHelp(oProperty)) {\n\t\treturn compileExpression(sTargetDisplayMode);\n\t} else {\n\t\treturn hasTextAnnotation ? compileExpression(ifElse(equal(oComputedEditMode, \"Editable\"), \"Value\", sTargetDisplayMode)) : \"Value\";\n\t}\n};\n\nexport const getTypeConfig = function (oProperty: Property | DataFieldAbstractTypes, dataType: string | undefined): ConfigType {\n\tconst oTargetMapping = EDM_TYPE_MAPPING[(oProperty as Property)?.type] || (dataType ? EDM_TYPE_MAPPING[dataType] : undefined);\n\tconst propertyTypeConfig: ConfigType = {\n\t\ttype: oTargetMapping.type,\n\t\tconstraints: {},\n\t\tformatOptions: {}\n\t};\n\tif (isProperty(oProperty)) {\n\t\tpropertyTypeConfig.constraints = {\n\t\t\tscale: oTargetMapping.constraints?.$Scale ? oProperty.scale : undefined,\n\t\t\tprecision: oTargetMapping.constraints?.$Precision ? oProperty.precision : undefined,\n\t\t\tmaxLength: oTargetMapping.constraints?.$MaxLength ? oProperty.maxLength : undefined,\n\t\t\tnullable: oTargetMapping.constraints?.$Nullable ? oProperty.nullable : undefined,\n\t\t\tminimum:\n\t\t\t\toTargetMapping.constraints?.[\"@Org.OData.Validation.V1.Minimum/$Decimal\"] &&\n\t\t\t\t!isNaN(oProperty.annotations?.Validation?.Minimum)\n\t\t\t\t\t? `${oProperty.annotations?.Validation?.Minimum}`\n\t\t\t\t\t: undefined,\n\t\t\tmaximum:\n\t\t\t\toTargetMapping.constraints?.[\"@Org.OData.Validation.V1.Maximum/$Decimal\"] &&\n\t\t\t\t!isNaN(oProperty.annotations?.Validation?.Maximum)\n\t\t\t\t\t? `${oProperty.annotations?.Validation?.Maximum}`\n\t\t\t\t\t: undefined,\n\t\t\tisDigitSequence:\n\t\t\t\tpropertyTypeConfig.type === \"sap.ui.model.odata.type.String\" &&\n\t\t\t\toTargetMapping.constraints?.[\"@com.sap.vocabularies.Common.v1.IsDigitSequence\"] &&\n\t\t\t\toProperty.annotations?.Common?.IsDigitSequence\n\t\t\t\t\t? true\n\t\t\t\t\t: undefined,\n\t\t\tV4: oTargetMapping.constraints?.$V4 ? true : undefined\n\t\t};\n\t}\n\tpropertyTypeConfig.formatOptions = {\n\t\tparseAsString:\n\t\t\tpropertyTypeConfig?.type?.indexOf(\"sap.ui.model.odata.type.Int\") === 0 ||\n\t\t\tpropertyTypeConfig?.type?.indexOf(\"sap.ui.model.odata.type.Double\") === 0\n\t\t\t\t? false\n\t\t\t\t: undefined,\n\t\temptyString:\n\t\t\tpropertyTypeConfig?.type?.indexOf(\"sap.ui.model.odata.type.Int\") === 0 ||\n\t\t\tpropertyTypeConfig?.type?.indexOf(\"sap.ui.model.odata.type.Double\") === 0\n\t\t\t\t? \"\"\n\t\t\t\t: undefined,\n\t\tparseKeepsEmptyString: propertyTypeConfig.type === \"sap.ui.model.odata.type.String\" ? true : undefined\n\t};\n\treturn propertyTypeConfig;\n};\n\nexport const getConstraintOptions = function (property: Property | undefined): ComplexTypeConstraintOptions {\n\treturn property?.annotations?.UI?.DoNotCheckScaleOfMeasuredQuantity &&\n\t\tproperty?.annotations?.UI.DoNotCheckScaleOfMeasuredQuantity?.valueOf()\n\t\t? { skipDecimalsValidation: true }\n\t\t: {};\n};\n\nexport const getBindingWithUnitOrCurrency = function (\n\toPropertyDataModelPath: DataModelObjectPath<Property>,\n\tpropertyBindingExpression: BindingToolkitExpression<string>,\n\tignoreUnitConstraint?: boolean,\n\tformatOptions?: {\n\t\tshowMeasure?: boolean;\n\t}\n): BindingToolkitExpression<string> {\n\tconst oPropertyDefinition = oPropertyDataModelPath.targetObject as Property;\n\tlet unit = oPropertyDefinition.annotations?.Measures?.Unit;\n\tconst relativeLocation = getRelativePaths(oPropertyDataModelPath);\n\tpropertyBindingExpression = formatWithTypeInformation(oPropertyDefinition, propertyBindingExpression);\n\tif (hasStaticPercentUnit(oPropertyDefinition)) {\n\t\tif (formatOptions?.showMeasure === false) {\n\t\t\treturn propertyBindingExpression;\n\t\t}\n\t\treturn formatResult([propertyBindingExpression], valueFormatters.formatWithPercentage);\n\t}\n\tconst complexType = unit ? \"sap.ui.model.odata.type.Unit\" : \"sap.ui.model.odata.type.Currency\";\n\tunit = unit ? unit : (oPropertyDefinition.annotations?.Measures?.ISOCurrency as unknown as Unit | undefined);\n\tconst unitBindingExpression =\n\t\tisPathAnnotationExpression(unit) && unit.$target\n\t\t\t? formatWithTypeInformation(unit.$target, getExpressionFromAnnotation(unit, relativeLocation), ignoreUnitConstraint)\n\t\t\t: getExpressionFromAnnotation(unit, relativeLocation);\n\tconst constraintOptions: ComplexTypeConstraintOptions | undefined =\n\t\tcomplexType === \"sap.ui.model.odata.type.Unit\" ? getConstraintOptions(oPropertyDataModelPath.targetObject) : undefined;\n\treturn addTypeInformation([propertyBindingExpression, unitBindingExpression], complexType, undefined, formatOptions, constraintOptions);\n};\n\n/**\n * Create the binding expression for the date picker with minimum and maximum value present.\n * @param oPropertyDataModelPath The list of data model objects that are involved to reach that property\n * @param propertyBindingExpression Binding expression for the property\n * @returns The binding expression representing the date property with minimum and maximum value for the same\n */\nexport const getBindingForDatePicker = function (\n\toPropertyDataModelPath: DataModelObjectPath<Property | DataFieldTypes>,\n\tpropertyBindingExpression: BindingToolkitExpression<string>\n): BindingToolkitExpression<string> | CompiledBindingToolkitExpression {\n\tconst oPropertyDefinition = oPropertyDataModelPath.targetObject as Property;\n\tconst relativeLocation = getRelativePaths(oPropertyDataModelPath);\n\tconst formatOptions = {};\n\tpropertyBindingExpression = formatWithTypeInformation(oPropertyDefinition, propertyBindingExpression);\n\tconst complexType = \"sap.fe.core.type.Date\";\n\tconst minDate = oPropertyDefinition?.annotations?.Validation?.Minimum?.$Date\n\t\t? oPropertyDefinition?.annotations?.Validation?.Minimum?.$Date\n\t\t: oPropertyDefinition?.annotations?.Validation?.Minimum;\n\tconst maxDate = oPropertyDefinition?.annotations?.Validation?.Maximum?.$Date\n\t\t? oPropertyDefinition?.annotations?.Validation?.Maximum?.$Date\n\t\t: oPropertyDefinition?.annotations?.Validation?.Maximum;\n\tconst minExpression =\n\t\tminDate && isPathAnnotationExpression(minDate)\n\t\t\t? formatWithTypeInformation(\n\t\t\t\t\toPropertyDefinition?.annotations?.Validation?.Minimum,\n\t\t\t\t\tgetExpressionFromAnnotation(oPropertyDefinition?.annotations?.Validation?.Minimum, relativeLocation)\n\t\t\t  )\n\t\t\t: minDate;\n\tconst maxExpression =\n\t\tmaxDate && isPathAnnotationExpression(maxDate)\n\t\t\t? formatWithTypeInformation(\n\t\t\t\t\toPropertyDefinition?.annotations?.Validation?.Maximum,\n\t\t\t\t\tgetExpressionFromAnnotation(oPropertyDefinition?.annotations?.Validation?.Maximum, relativeLocation)\n\t\t\t  )\n\t\t\t: maxDate;\n\n\treturn (\n\t\t(minExpression || maxExpression) &&\n\t\taddTypeInformation([propertyBindingExpression, minExpression, maxExpression], complexType, undefined, formatOptions)\n\t);\n};\n\nexport const getBindingForUnitOrCurrency = function (\n\toPropertyDataModelPath: DataModelObjectPath<Property> | undefined\n): BindingToolkitExpression<string> | string {\n\tconst oPropertyDefinition = oPropertyDataModelPath?.targetObject;\n\tif (!oPropertyDefinition) {\n\t\treturn \"\";\n\t}\n\n\tlet unit = oPropertyDefinition.annotations?.Measures?.Unit;\n\tif (hasStaticPercentUnit(oPropertyDefinition)) {\n\t\treturn constant(\"%\");\n\t}\n\tconst relativeLocation = getRelativePaths(oPropertyDataModelPath);\n\n\tconst complexType = unit ? \"sap.ui.model.odata.type.Unit\" : \"sap.ui.model.odata.type.Currency\";\n\tunit = unit ? unit : (oPropertyDefinition.annotations?.Measures?.ISOCurrency as unknown as Unit | undefined);\n\tconst unitBindingExpression =\n\t\tisPathAnnotationExpression(unit) && unit.$target\n\t\t\t? formatWithTypeInformation(unit.$target, getExpressionFromAnnotation(unit, relativeLocation))\n\t\t\t: getExpressionFromAnnotation(unit, relativeLocation);\n\n\tlet propertyBindingExpression = pathInModel(\n\t\tgetContextRelativeTargetObjectPath(oPropertyDataModelPath)\n\t) as BindingToolkitExpression<string>;\n\tpropertyBindingExpression = formatWithTypeInformation(oPropertyDefinition, propertyBindingExpression, true);\n\tconst constraintOptions: ComplexTypeConstraintOptions | undefined =\n\t\tcomplexType === \"sap.ui.model.odata.type.Unit\" ? getConstraintOptions(oPropertyDataModelPath.targetObject) : undefined;\n\treturn addTypeInformation(\n\t\t[propertyBindingExpression, unitBindingExpression],\n\t\tcomplexType,\n\t\tundefined,\n\t\t{\n\t\t\tparseKeepsEmptyString: true,\n\t\t\tshowNumber: false\n\t\t},\n\t\tconstraintOptions\n\t);\n};\nexport const getBindingWithTimezone = function (\n\toPropertyDataModelPath: DataModelObjectPath<Property>,\n\tpropertyBindingExpression: BindingToolkitExpression<string>,\n\tignoreUnitConstraint = false,\n\thideTimezoneForEmptyValues = false,\n\tfieldFormatOptions?: FieldFormatOptions\n): BindingToolkitExpression<string> {\n\tconst oPropertyDefinition = oPropertyDataModelPath.targetObject as Property;\n\tconst timezone = oPropertyDefinition.annotations?.Common?.Timezone;\n\tconst style = oPropertyDefinition.annotations?.UI?.DateTimeStyle;\n\tconst relativeLocation = getRelativePaths(oPropertyDataModelPath);\n\tpropertyBindingExpression = formatWithTypeInformation(oPropertyDefinition, propertyBindingExpression);\n\n\tconst complexType = \"sap.fe.core.type.DateTimeWithTimezone\";\n\tconst unitBindingExpression =\n\t\tisPathAnnotationExpression(timezone) && timezone.$target\n\t\t\t? formatWithTypeInformation(\n\t\t\t\t\t(timezone as PathAnnotationExpression<unknown>).$target as Property,\n\t\t\t\t\tgetExpressionFromAnnotation(timezone, relativeLocation),\n\t\t\t\t\tignoreUnitConstraint\n\t\t\t  )\n\t\t\t: getExpressionFromAnnotation(timezone, relativeLocation);\n\tlet formatOptions = {};\n\tif (hideTimezoneForEmptyValues) {\n\t\tformatOptions = {\n\t\t\tshowTimezoneForEmptyValues: false\n\t\t};\n\t}\n\t// if style or pattern is also set\n\tif (style) {\n\t\tformatOptions = { ...formatOptions, ...{ style: style } };\n\t} else if (fieldFormatOptions?.dateTimeStyle !== undefined) {\n\t\tformatOptions = { ...formatOptions, ...{ style: fieldFormatOptions.dateTimeStyle } };\n\t}\n\n\tif (fieldFormatOptions?.dateTimePattern !== undefined) {\n\t\tformatOptions = { ...formatOptions, ...{ pattern: fieldFormatOptions.dateTimePattern } };\n\t}\n\n\tif (fieldFormatOptions?.showTime !== undefined) {\n\t\tformatOptions = { ...formatOptions, ...{ showTime: fieldFormatOptions.showTime } };\n\t}\n\tif (fieldFormatOptions?.showDate !== undefined) {\n\t\tformatOptions = { ...formatOptions, ...{ showDate: fieldFormatOptions.showDate } };\n\t}\n\tif (fieldFormatOptions?.showTimezone !== undefined) {\n\t\tformatOptions = { ...formatOptions, ...{ showTimezone: fieldFormatOptions.showTimezone } };\n\t}\n\n\treturn addTypeInformation([propertyBindingExpression, unitBindingExpression], complexType, undefined, formatOptions);\n};\n\n/**\n * Creates the binding expression for the date format of a date, time or dateTime.\n * @param propertyDataModelPath The list of data model objects that are involved to reach that property\n * @param propertyBindingExpression Binding expression for the property\n * @param formatOptionsDateFormat Format options which contain the style or pattern property\n * @returns The binding expression representing a date, time, or date-time, with the given pattern or style property\n */\nexport const getBindingForDateFormat = function (\n\tpropertyDataModelPath: DataModelObjectPath<Property>,\n\tpropertyBindingExpression: BindingToolkitExpression<string>,\n\tformatOptionsDateFormat?: FormatOptionsDateFormat\n): BindingToolkitExpression<string> {\n\tconst oPropertyDefinition = propertyDataModelPath.targetObject as Property;\n\tconst pattern = formatOptionsDateFormat?.dateTimePattern;\n\tconst style = oPropertyDefinition.annotations?.UI?.DateTimeStyle ?? formatOptionsDateFormat?.dateTimeStyle;\n\tpropertyBindingExpression = formatWithTypeInformation(oPropertyDefinition, propertyBindingExpression);\n\tpropertyBindingExpression.type = EDM_TYPE_MAPPING[oPropertyDefinition.type].type;\n\tpropertyBindingExpression.formatOptions = {\n\t\t...(style && { style: style.toString() }),\n\t\t...(pattern && { pattern: pattern })\n\t};\n\n\treturn propertyBindingExpression;\n};\n\nexport const getBindingForTimezone = function (\n\tpropertyDataModelPath: DataModelObjectPath<Property>,\n\tpropertyBindingExpression: BindingToolkitExpression<string>\n): BindingToolkitExpression<string> {\n\tconst propertyDefinition = propertyDataModelPath.targetObject as Property;\n\tpropertyBindingExpression = formatWithTypeInformation(propertyDefinition, propertyBindingExpression);\n\tpropertyBindingExpression.type = \"any\";\n\tconst complexType = \"sap.ui.model.odata.type.DateTimeWithTimezone\";\n\tconst formatOptions = { showTime: false, showDate: false, showTimezone: true };\n\n\t// null is required by formatter when there is just a timezone\n\treturn addTypeInformation([null, propertyBindingExpression], complexType, undefined, formatOptions);\n};\n\nexport const getAlignmentExpression = function (\n\toComputedEditMode: BindingToolkitExpression<string>,\n\tsAlignDisplay = \"Begin\",\n\tsAlignEdit = \"Begin\"\n): CompiledBindingToolkitExpression {\n\treturn compileExpression(ifElse(equal(oComputedEditMode, \"Display\"), sAlignDisplay, sAlignEdit));\n};\n\n/**\n * Formatter helper to retrieve the converterContext from the metamodel context.\n * @param oContext The original metamodel context\n * @param oInterface The current templating context\n * @returns The ConverterContext representing that object\n */\nexport const getConverterContext = function (oContext: MetaModelContext, oInterface: ComputedAnnotationInterface): object | null {\n\tif (oInterface && oInterface.context) {\n\t\treturn convertMetaModelContext(oInterface.context) as object;\n\t}\n\treturn null;\n};\ngetConverterContext.requiresIContext = true;\n\n/**\n * Formatter helper to retrieve the data model objects that are involved from the metamodel context.\n * @param oContext The original ODataMetaModel context\n * @param oInterface The current templating context\n * @returns An array of entitysets and navproperties that are involved to get to a specific object in the metamodel\n */\nexport const getDataModelObjectPath = function <T>(\n\toContext: MetaModelContext,\n\toInterface: ComputedAnnotationInterface\n): DataModelObjectPath<T> | null {\n\tif (oInterface && oInterface.context) {\n\t\treturn getInvolvedDataModelObjects(oInterface.context);\n\t}\n\treturn null;\n};\ngetDataModelObjectPath.requiresIContext = true;\n\n/**\n * Checks if the referenced property is part of a 1..n navigation.\n * @param oDataModelPath The data model path to check\n * @returns True if the property is part of a 1..n navigation\n */\nexport const isMultiValueField = function (oDataModelPath: DataModelObjectPath<unknown>): boolean {\n\tif (oDataModelPath.navigationProperties?.length) {\n\t\tconst hasOneToManyNavigation =\n\t\t\toDataModelPath?.navigationProperties.findIndex((oNav) => {\n\t\t\t\tif (isMultipleNavigationProperty(oNav)) {\n\t\t\t\t\tif (oDataModelPath.contextLocation?.navigationProperties?.length) {\n\t\t\t\t\t\t//we check the one to many nav is not already part of the context\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\toDataModelPath.contextLocation?.navigationProperties.findIndex(\n\t\t\t\t\t\t\t\t(oContextNav) => oContextNav.name === oNav.name\n\t\t\t\t\t\t\t) === -1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}) > -1;\n\t\tif (hasOneToManyNavigation) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nexport const getRequiredExpressionAsObject = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\toDataFieldConverted?: Property | DataFieldAbstractTypes | DataPointTypeTypes,\n\tforceEditMode = false\n): BindingToolkitExpression<boolean> {\n\treturn getRequiredExpression(oPropertyPath, oDataFieldConverted, forceEditMode, true) as BindingToolkitExpression<boolean>;\n};\nexport const getRequiredExpression = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\toDataFieldConverted?: Property | DataFieldAbstractTypes | DataPointTypeTypes,\n\tforceEditMode = false,\n\tbAsObject = false,\n\toRequiredProperties: {\n\t\trequiredPropertiesFromInsertRestrictions?: unknown[];\n\t\trequiredPropertiesFromUpdateRestrictions?: unknown[];\n\t} = {},\n\tdataModelObjectPath?: DataModelObjectPath<unknown>\n): CompiledBindingToolkitExpression | BindingToolkitExpression<boolean> {\n\tconst aRequiredPropertiesFromInsertRestrictions = oRequiredProperties.requiredPropertiesFromInsertRestrictions;\n\tconst aRequiredPropertiesFromUpdateRestrictions = oRequiredProperties.requiredPropertiesFromUpdateRestrictions;\n\tif (!oPropertyPath || typeof oPropertyPath === \"string\") {\n\t\tif (bAsObject) {\n\t\t\treturn constant(false);\n\t\t}\n\t\treturn compileExpression(constant(false));\n\t}\n\tlet relativePath;\n\tif (dataModelObjectPath) {\n\t\trelativePath = getRelativePaths(dataModelObjectPath);\n\t}\n\tlet dataFieldRequiredExpression: BindingToolkitExpression<boolean> = constant(false);\n\tif (oDataFieldConverted !== undefined && !isProperty(oDataFieldConverted)) {\n\t\t// For the datafield expression we should not  consider the relative path\n\t\tdataFieldRequiredExpression = isRequiredExpression(oDataFieldConverted);\n\t}\n\tlet requiredPropertyFromInsertRestrictionsExpression: BindingToolkitExpression<boolean> = constant(false);\n\tlet requiredPropertyFromUpdateRestrictionsExpression: BindingToolkitExpression<boolean> = constant(false);\n\n\tconst oProperty: Property = (isPathAnnotationExpression(oPropertyPath) && oPropertyPath.$target) || (oPropertyPath as Property);\n\t// Enablement depends on the field control expression\n\t// If the Field control is statically in Inapplicable (disabled) -> not enabled\n\tconst requiredExpression = isRequiredExpression(oProperty, relativePath);\n\tconst editMode = forceEditMode || UI.IsEditable;\n\tif (aRequiredPropertiesFromInsertRestrictions?.includes(oProperty.name)) {\n\t\trequiredPropertyFromInsertRestrictionsExpression = UI.IsCreateMode;\n\t}\n\tif (aRequiredPropertiesFromUpdateRestrictions?.includes(oProperty.name)) {\n\t\trequiredPropertyFromUpdateRestrictionsExpression = and(UI.IsEditable, not(UI.IsCreateMode));\n\t}\n\tconst returnExpression = or(\n\t\tand(or(requiredExpression, dataFieldRequiredExpression), editMode),\n\t\trequiredPropertyFromInsertRestrictionsExpression,\n\t\trequiredPropertyFromUpdateRestrictionsExpression\n\t);\n\tif (bAsObject) {\n\t\treturn returnExpression;\n\t}\n\treturn compileExpression(returnExpression);\n};\n\nexport const getRequiredExpressionForConnectedDataField = function (\n\tdataFieldObjectPath: DataModelObjectPath<AnnotationPath<ConnectedFieldsType>>\n): CompiledBindingToolkitExpression {\n\tconst data: Record<string, DataFieldAbstractTypes> = (dataFieldObjectPath?.targetObject?.$target?.Data ?? {}) as Record<\n\t\tstring,\n\t\tDataFieldAbstractTypes\n\t>;\n\tconst keys: Array<string> = Object.keys(data);\n\tconst dataFields = [];\n\tlet propertyPath;\n\tconst isRequiredExpressions: (CompiledBindingToolkitExpression | BindingToolkitExpression<boolean>)[] | undefined = [];\n\tfor (const key of keys) {\n\t\tif (data[key]?.[\"$Type\"] && data[key][\"$Type\"]?.includes(\"DataField\")) {\n\t\t\tdataFields.push(data[key]);\n\t\t}\n\t}\n\tfor (const dataField of dataFields) {\n\t\tswitch (dataField.$Type) {\n\t\t\tcase UIAnnotationTypes.DataField:\n\t\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\t\tif (typeof dataField.Value === \"object\") {\n\t\t\t\t\tpropertyPath = dataField.Value.$target;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\t\tif (dataField.Target?.$target) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tisAnnotationOfType<DataField | DataPointType>(dataField.Target.$target, [\n\t\t\t\t\t\t\tUIAnnotationTypes.DataField,\n\t\t\t\t\t\t\tUIAnnotationTypes.DataPointType\n\t\t\t\t\t\t])\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (typeof dataField.Target.$target.Value === \"object\") {\n\t\t\t\t\t\t\tpropertyPath = dataField.Target.$target.Value.$target;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof dataField.Target === \"object\") {\n\t\t\t\t\t\t\tpropertyPath = dataField.Target.$target;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t// no default\n\t\t}\n\t\tisRequiredExpressions.push(getRequiredExpressionAsObject(propertyPath, dataField, false));\n\t}\n\treturn compileExpression(or(...(isRequiredExpressions as BindingToolkitExpression<boolean>[])));\n};\n\n/**\n * Check if header facet or action is visible.\n * @param targetObject Header facets or Actions\n * @returns BindingToolkitExpression<boolean>\n */\nexport function isVisible(\n\ttargetObject:\n\t\t| DataFieldAbstractTypes\n\t\t| DataPointTypeTypes\n\t\t| ReferenceFacet\n\t\t| CollectionFacet\n\t\t| DataFieldForActionTypes\n\t\t| FieldGroup\n\t\t| Property\n\t\t| undefined,\n\tnavigationProperties?: string[]\n): BindingToolkitExpression<boolean> {\n\treturn not(equal(getExpressionFromAnnotation(targetObject?.annotations?.UI?.Hidden, navigationProperties), true));\n}\n\n/**\n * Checks whether action parameter is supports multi line input.\n * @param dataModelObjectPath Object path to the action parameter.\n * @returns Boolean\n */\nexport const isMultiLine = function (dataModelObjectPath: DataModelObjectPath<ActionParameter>): boolean {\n\treturn isMultiLineText(dataModelObjectPath.targetObject);\n};\n\n/**\n * Check if the action is enabled.\n * @param actionTarget Action\n * @param convertedTypes ConvertedMetadata\n * @param dataModelObjectPath DataModelObjectPath\n * @param pathFromContextLocation Boolean\n * @returns BindingToolkitExpression\n */\nexport function getActionEnabledExpression(\n\tactionTarget: Action,\n\tconvertedTypes: ConvertedMetadata,\n\tdataModelObjectPath?: DataModelObjectPath<PageContextPathTarget>,\n\tpathFromContextLocation?: boolean\n): BindingToolkitExpression<boolean> {\n\tconst operationAvailableIsAnnotated =\n\t\tactionTarget.annotations.Core?.OperationAvailable?.term === CoreAnnotationTerms.OperationAvailable;\n\n\tif (!operationAvailableIsAnnotated) {\n\t\t// OperationAvailable term doesn't exist for the action\n\t\treturn constant(true);\n\t}\n\n\tlet prefix = \"\";\n\tif (\n\t\tdataModelObjectPath &&\n\t\tpathFromContextLocation &&\n\t\tpathFromContextLocation === true &&\n\t\tdataModelObjectPath.contextLocation?.targetEntityType &&\n\t\tdataModelObjectPath.contextLocation.targetEntityType !== actionTarget.sourceEntityType\n\t) {\n\t\tconst navigations = getRelativePaths(dataModelObjectPath);\n\t\tlet sourceActionDataModelObject = enhanceDataModelPath(dataModelObjectPath.contextLocation);\n\t\t//Start from contextLocation and navigate until the source entityType of the action to get the right prefix\n\t\tfor (const nav of navigations) {\n\t\t\tsourceActionDataModelObject = enhanceDataModelPath(sourceActionDataModelObject, nav);\n\t\t\tif (sourceActionDataModelObject.targetEntityType === actionTarget.sourceEntityType) {\n\t\t\t\tprefix = `${getRelativePaths(sourceActionDataModelObject).join(\"/\")}/`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tconst bindingParameterFullName = actionTarget.isBound ? actionTarget.parameters[0]?.fullyQualifiedName : undefined;\n\tconst operationAvailableExpression = getExpressionFromAnnotation(\n\t\tactionTarget.annotations.Core?.OperationAvailable,\n\t\t[],\n\t\tundefined,\n\t\t(path: string) => `${prefix}${bindingContextPathVisitor(path, convertedTypes, bindingParameterFullName)}`\n\t);\n\n\treturn equal(operationAvailableExpression, true);\n}\n\n/**\n * Generates the expression to check if the quickView facet is visible.\n * @param facetModelPath\n * @returns BindingToolkitExpression The binding expression of the visibility\n */\nexport function isQuickViewFacetVisible(facetModelPath: DataModelObjectPath<ReferenceFacet>): CompiledBindingToolkitExpression {\n\tlet targetVisible: BindingToolkitExpression<boolean> = constant(true);\n\tif (isAnnotationOfType<FieldGroup>(facetModelPath.targetObject?.Target?.$target, UIAnnotationTypes.FieldGroupType)) {\n\t\ttargetVisible = isVisible(facetModelPath.targetObject?.Target?.$target);\n\t}\n\treturn compileExpression(and(isVisible(facetModelPath.targetObject), targetVisible));\n}\n"],"mappings":"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","ignoreList":[],"file":"UIFormatters-dbg.js"}