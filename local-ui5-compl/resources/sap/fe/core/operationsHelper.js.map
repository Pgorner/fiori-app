{"version":3,"file":"operationsHelper.js","names":["renderMessageView","parameters","messageHandler","messages","strictHandlingUtilities","isMultiContext412","resolve","groupId","isUnboundAction","length","resourceModel","ResourceModelHelper","getResourceModel","appComponent","actionName","getLocalizedText","label","model","strictHandlingPromises","message","cancelButtonTxt","getText","warningMessageText","genericChangesetMessage","bGrouped","messageText","getMessage","identifierText","getAdditionalText","undefined","headerInfoTypeName","control","getParent","getTableDefinition","toString","MessageBox","warning","title","actions","emphasizedAction","onClose","action","submitBatch","requestSideEffects","strictHandlingPromise","promises","strictHandlingTransitionFails","removeTransitionMessages","is412Executed","information","contentWidth","strictHandlingWarningMessages","messageDialogModel","JSONModel","warningMessage","warningDesc","genericMessage","Message","type","MessageType","Information","target","persistent","description","concat","setData","OperationsDialog","messageObject","messageHandling","prepareMessageViewForDialog","isGrouped","showMessageInfo","open","async","fnOnStrictHandlingFailed","currentContextIndex","context","contextLength","internalOperationsPromiseResolve","messages412","arguments","filteredErrorMessages","filterErrorMessages","forEach","includes","Log","addWarningMessagesToMessageHandler","shPromiseParams","Promise","operationsHelper","push","value","tableAPI","column","isA","getIdentifierColumn","getObject","setAdditionalText"],"sources":["./operationsHelper.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type Control from \"sap/ui/mdc/Control\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type AppComponent from \"./AppComponent\";\nimport type MessageHandler from \"./controllerextensions/MessageHandler\";\nimport OperationsDialog from \"./controllerextensions/dialog/OperationsDialog\";\nimport messageHandling from \"./controllerextensions/messageHandler/messageHandling\";\nimport ResourceModelHelper from \"./helpers/ResourceModelHelper\";\n\ntype StrictHandlingPromise = {\n\tresolve: Function;\n\tgroupId: string;\n\trequestSideEffects?: Function;\n};\nexport type StrictHandlingParameters = {\n\tappComponent: AppComponent;\n\tlabel: string;\n\tmodel: ODataModel;\n\tinternalModelContext?: InternalModelContext | null;\n\tcontrol?: Control;\n\trequestSideEffects?: Function;\n\toDialog?: Dialog;\n\tbGrouped: boolean;\n};\ntype OperationsHelper = {\n\trenderMessageView: Function;\n\tfnOnStrictHandlingFailed: Function;\n};\n\nexport type StrictHandlingUtilities = {\n\tis412Executed: boolean;\n\tstrictHandlingTransitionFails: {\n\t\toAction: ODataContextBinding;\n\t\tgroupId: string;\n\t}[];\n\tstrictHandlingPromises: StrictHandlingPromise[];\n\tstrictHandlingWarningMessages: Message[];\n\tdelaySuccessMessages: Message[];\n\tprocessedMessageIds: Set<string>;\n};\n\nfunction renderMessageView(\n\tparameters: StrictHandlingParameters,\n\tmessageHandler: MessageHandler | undefined,\n\tmessages: Message[],\n\tstrictHandlingUtilities: StrictHandlingUtilities | undefined,\n\tisMultiContext412?: boolean,\n\tresolve?: Function,\n\tgroupId?: string,\n\tisUnboundAction?: boolean\n): void {\n\tif (!messages.length) {\n\t\treturn;\n\t}\n\tconst resourceModel = ResourceModelHelper.getResourceModel(parameters.appComponent);\n\tconst actionName = ResourceModelHelper.getLocalizedText(parameters.label, parameters.appComponent);\n\tconst model = parameters.model;\n\tconst strictHandlingPromises = strictHandlingUtilities?.strictHandlingPromises ?? [];\n\tlet message: string;\n\tlet cancelButtonTxt: string = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\");\n\tlet warningMessageText = \"\";\n\tlet genericChangesetMessage = \"\";\n\twarningMessageText = parameters.bGrouped\n\t\t? resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGE_TEXT\", [actionName])\n\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP_SINGLE_MESSAGE_TEXT\");\n\tif (messages.length === 1) {\n\t\tconst messageText = messages[0].getMessage();\n\t\tconst identifierText = messages[0].getAdditionalText();\n\t\tgenericChangesetMessage = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_SINGLE_MESSAGE_TEXT\");\n\t\tif (!isMultiContext412) {\n\t\t\tmessage = `${messageText}\\n${resourceModel.getText(\"PROCEED\")}`;\n\t\t} else if (identifierText !== undefined && identifierText !== \"\") {\n\t\t\tcancelButtonTxt = parameters.bGrouped ? cancelButtonTxt : resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\tconst headerInfoTypeName = (parameters.control?.getParent() as TableAPI | undefined)?.getTableDefinition().headerInfoTypeName;\n\t\t\tif (headerInfoTypeName) {\n\t\t\t\tmessage = `${headerInfoTypeName.toString()} ${identifierText}: ${messageText}\\n\\n${warningMessageText}`;\n\t\t\t} else {\n\t\t\t\tmessage = `${identifierText}: ${messageText}\\n\\n${warningMessageText}`;\n\t\t\t}\n\t\t} else {\n\t\t\tcancelButtonTxt = parameters.bGrouped ? cancelButtonTxt : resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\tmessage = `${messageText}\\n\\n${warningMessageText}`;\n\t\t}\n\t\tif (isMultiContext412 && parameters.bGrouped) {\n\t\t\tmessage = `${genericChangesetMessage}\\n\\n${message}`;\n\t\t}\n\t\tMessageBox.warning(message, {\n\t\t\ttitle: resourceModel.getText(\"WARNING\"),\n\t\t\tactions: [actionName, cancelButtonTxt],\n\t\t\temphasizedAction: actionName,\n\t\t\tonClose: (action: string) => {\n\t\t\t\tif (action === actionName) {\n\t\t\t\t\tif (isUnboundAction) {\n\t\t\t\t\t\t// condition is true for unbound as well as static actions\n\t\t\t\t\t\tresolve?.(true);\n\t\t\t\t\t\tmodel.submitBatch(groupId!);\n\t\t\t\t\t\tparameters.requestSideEffects?.();\n\t\t\t\t\t} else if (!isMultiContext412) {\n\t\t\t\t\t\t// condition true when multiple contexts are selected but only one strict handling warning is received\n\t\t\t\t\t\tconst strictHandlingPromise = strictHandlingPromises[0];\n\t\t\t\t\t\tstrictHandlingPromise.resolve(true);\n\t\t\t\t\t\tmodel.submitBatch(strictHandlingPromise.groupId);\n\t\t\t\t\t\tstrictHandlingPromise.requestSideEffects?.();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const promises of strictHandlingPromises) {\n\t\t\t\t\t\t\tpromises.resolve(true);\n\t\t\t\t\t\t\tmodel.submitBatch(promises.groupId);\n\t\t\t\t\t\t\tpromises.requestSideEffects?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (strictHandlingUtilities?.strictHandlingTransitionFails?.length) {\n\t\t\t\t\t\t\tmessageHandler?.removeTransitionMessages();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (strictHandlingUtilities) {\n\t\t\t\t\t\tstrictHandlingUtilities.is412Executed = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (strictHandlingUtilities) {\n\t\t\t\t\t\tstrictHandlingUtilities.is412Executed = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (isUnboundAction) {\n\t\t\t\t\t\tresolve?.(false);\n\t\t\t\t\t} else if (!isMultiContext412) {\n\t\t\t\t\t\tstrictHandlingPromises[0].resolve(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const promises of strictHandlingPromises) {\n\t\t\t\t\t\t\tpromises.resolve(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (parameters.bGrouped) {\n\t\t\t\t\t\tMessageBox.information(resourceModel.getText(\"M_CHANGESET_CANCEL_MESSAGES\"), {\n\t\t\t\t\t\t\tcontentWidth: \"150px\"\n\t\t\t\t\t\t} as object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (strictHandlingUtilities) {\n\t\t\t\t\tstrictHandlingUtilities.strictHandlingWarningMessages = [];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\tconst messageDialogModel = new JSONModel();\n\tlet warningMessage = \"\";\n\tlet warningDesc = \"\";\n\tif (isMultiContext412) {\n\t\tcancelButtonTxt = parameters.bGrouped ? cancelButtonTxt : resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\twarningMessage = parameters.bGrouped\n\t\t\t? resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGES_WARNING\")\n\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP_MESSAGES_WARNING\");\n\t\twarningDesc = parameters.bGrouped\n\t\t\t? resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGES_TEXT\", [actionName])\n\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP_MESSAGES_TEXT\", [actionName]);\n\t} else {\n\t\twarningMessage = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGES_GENERIC_ACTION_WARNING\", [actionName]);\n\t}\n\tconst genericMessage = new Message({\n\t\tmessage: warningMessage,\n\t\ttype: MessageType.Information,\n\t\ttarget: undefined,\n\t\tpersistent: true,\n\t\tdescription: warningDesc.length ? warningDesc : undefined\n\t});\n\tmessages = [genericMessage].concat(messages);\n\tmessageDialogModel.setData(messages);\n\tnew OperationsDialog({\n\t\tmessageObject: messageHandling.prepareMessageViewForDialog(messageDialogModel, true, isMultiContext412),\n\t\tisMultiContext412,\n\t\tisGrouped: parameters.bGrouped,\n\t\trequestSideEffects: parameters.requestSideEffects,\n\t\tresolve,\n\t\tmodel,\n\t\tgroupId,\n\t\tactionName,\n\t\tstrictHandlingUtilities,\n\t\tstrictHandlingPromises,\n\t\tmessageHandler,\n\t\tmessageDialogModel,\n\t\tcancelButtonTxt,\n\t\tshowMessageInfo: (): void => {\n\t\t\tMessageBox.information(resourceModel.getText(\"M_CHANGESET_CANCEL_MESSAGES\"), {\n\t\t\t\tcontentWidth: \"150px\"\n\t\t\t} as object);\n\t\t}\n\t}).open();\n}\n\nasync function fnOnStrictHandlingFailed(\n\tgroupId: string,\n\tparameters: StrictHandlingParameters,\n\tcurrentContextIndex: number | null,\n\tcontext: Context | null,\n\tcontextLength: number | null,\n\tmessageHandler: MessageHandler,\n\tstrictHandlingUtilities: StrictHandlingUtilities | undefined,\n\tinternalOperationsPromiseResolve: Function | undefined,\n\tmessages412: Message[] = []\n): Promise<boolean> {\n\t// Find error message in the 412 response and raise warning.\n\tconst filteredErrorMessages = messageHandler.filterErrorMessages(messages412);\n\tmessages412.forEach((message) => {\n\t\tif (filteredErrorMessages.includes(message)) {\n\t\t\tLog.warning(\n\t\t\t\t\"Warning: 412 ('Pre-condition Check Failed due to strict-handling') returns messages of type error but only warning messages are appropriate!\"\n\t\t\t);\n\t\t}\n\t});\n\n\tmessageHandler.addWarningMessagesToMessageHandler(messages412);\n\tlet shPromiseParams: StrictHandlingPromise | undefined;\n\n\tif ((currentContextIndex === null && contextLength === null) || (currentContextIndex === 1 && contextLength === 1)) {\n\t\treturn new Promise((resolve) => {\n\t\t\toperationsHelper.renderMessageView(\n\t\t\t\tparameters,\n\t\t\t\tmessageHandler,\n\t\t\t\tmessages412,\n\t\t\t\tstrictHandlingUtilities,\n\t\t\t\tfalse,\n\t\t\t\tresolve,\n\t\t\t\tgroupId,\n\t\t\t\ttrue\n\t\t\t);\n\t\t});\n\t}\n\tconst strictHandlingPromise = new Promise<boolean>(function (resolve) {\n\t\tshPromiseParams = {\n\t\t\trequestSideEffects: parameters.requestSideEffects,\n\t\t\tresolve: resolve,\n\t\t\tgroupId: groupId\n\t\t};\n\t});\n\n\tstrictHandlingUtilities?.strictHandlingPromises.push(shPromiseParams as StrictHandlingPromise);\n\n\tif (messages412.length && strictHandlingUtilities) {\n\t\t// copy existing 412 warning messages\n\t\tconst strictHandlingWarningMessages: Message[] = strictHandlingUtilities.strictHandlingWarningMessages;\n\t\tlet value = \"\";\n\t\t// If there is more than one context we need the identifier. This would fix if the action is triggered via table chevron\n\t\tif (contextLength && contextLength > 1) {\n\t\t\tconst tableAPI = parameters.control?.getParent() as TableAPI;\n\t\t\tconst column = tableAPI && tableAPI.isA(\"sap.fe.macros.table.TableAPI\") && (tableAPI.getIdentifierColumn() as string);\n\t\t\tif (column) {\n\t\t\t\tvalue = context?.getObject(column);\n\t\t\t}\n\t\t}\n\n\t\t// set type and subtitle for all warning messages\n\t\tfor (const message of messages412) {\n\t\t\tmessage.setAdditionalText(value);\n\t\t\tstrictHandlingWarningMessages.push(message);\n\t\t}\n\n\t\tstrictHandlingUtilities.strictHandlingWarningMessages = strictHandlingWarningMessages;\n\t}\n\tinternalOperationsPromiseResolve?.();\n\treturn strictHandlingPromise;\n}\n\nconst operationsHelper: OperationsHelper = {\n\trenderMessageView: renderMessageView,\n\tfnOnStrictHandlingFailed: fnOnStrictHandlingFailed\n};\n\nexport default operationsHelper;\n"],"mappings":"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","ignoreList":[]}