{"version":3,"file":"CommonUtils.js","names":["normalizeSearchTerm","sSearchTerm","undefined","replace","split","reduce","sNormalized","sCurrentWord","async","waitForContextRequested","bindingContext","model","getModel","metaModel","getMetaModel","entityPath","getMetaPath","getPath","dataModel","MetaModelConverter","getInvolvedDataModelObjects","getContext","requestProperty","targetEntityType","keys","name","fnHasTransientContexts","oListBinding","bHasTransientContexts","getCurrentContexts","forEach","oContext","isTransient","_getSOIntents","oShellServiceHelper","oObjectPageLayout","oSemanticObject","oParam","getLinks","semanticObject","params","_createMappings","oMapping","aSOMappings","aMappingKeys","Object","oSemanticMapping","element","LocalProperty","$PropertyPath","SemanticObjectProperty","push","_getRelatedAppsMenuItems","linkGroup","aExcludedActions","oTargetParams","aItems","aAllowedActions","links","oLink","sIntent","intent","sAction","includes","text","targetSemObject","targetAction","targetParams","_getRelatedIntents","oAdditionalSemanticObjects","oBindingContext","aManifestSOItems","aLinks","length","allowedActions","unavailableActions","mapping","navigationContexts","semanticObjectMapping","_getRelatedIntentsWithSemanticObjectsAndAction","semanticObjectAndAction","appComponentSOItems","actions","action","excludedActions","soMappings","updateRelateAppsModel","oEntry","aSemKeys","oMetaModel","oMetaPath","appComponent","getShellServices","sCurrentSemObj","sCurrentAction","oSemanticObjectAnnotations","aRelatedAppsMenuItems","aManifestSOKeys","fnGetParseShellHashAndGetLinks","oParsedUrl","parseShellHash","document","location","hash","sSemKey","value","aTechnicalKeys","getObject","key","sObjKey","oManifestData","getTargetView","getViewData","semanticObjectIntents","additionalSemanticObjects","Promise","resolve","componentData","getComponentData","feEnvironment","getIntent","internalModelContext","getBindingContext","isSemanticObjectHasSameTargetInManifest","aAnnotationsSOItems","sEntitySetPath","sEntityTypePath","oEntitySetAnnotations","CommonUtils","getSemanticObjectAnnotations","bHasEntitySetSO","oEntityTypeAnnotations","aUnavailableActions","aMappings","_ref","soItems","concat","setProperty","error","Log","_getSemanticObjectAnnotations","oEntityAnnotations","sAnnotationMappingTerm","sAnnotationActionTerm","sQualifier","fnUpdateRelatedAppsDetails","path","sSemanticKeyVocabulary","requestObject","then","requestedObject","catch","oError","fnFireButtonPress","oButton","isA","getVisible","getEnabled","firePress","getAppComponent","oControl","oOwner","Component","getOwnerComponentFor","Error","getCurrentPageView","oAppComponent","rootViewController","getRootViewController","isFclEnabled","getRightmostView","getRootContainer","getCurrentPage","oComponent","getComponentInstance","getRootControl","getParent","_fnCheckIsMatch","oObject","oKeysToCheck","sKey","fnGetContextPathProperties","metaModelContext","sContextPath","oFilter","oEntityType","oProperties","hasOwnProperty","test","$kind","fnGetIBNActions","aIBNActions","aActions","getActions","oAction","getAction","oMenu","getMenu","getItems","oItem","data","fnUpdateDataFieldForIBNButtonsVisibility","oView","oParams","isSticky","ModelHelper","isStickySessionSupported","fnGetLinks","oData","aKeys","indexOf","oIBNAction","sSemanticObject","aLink","setVisible","getId","shellNavigationNotAvailable","updateMenuButtonVisiblity","IBNActions","menuButtonWithIBNAction","IBNAction","menuAction","menuItems","visibleMenuItems","filter","menuItem","getActionPath","actionContext","bReturnOnlyPath","inActionName","bCheckStaticValue","sActionName","toString","sEntityTypeName","$Type","sEntityName","getEntitySetName","sProperty","sBindingParameter","sEntityType","oEntityContainer","computeDisplayMode","oPropertyAnnotations","oCollectionAnnotations","oTextAnnotation","oTextArrangementAnnotation","$EnumMember","_getEntityType","_requestObject","oSelectedContext","nBracketIndex","sTargetType","slice","sCurrentType","getBinding","warning","sDynamicActionEnabledPath","oPromise","requestSingletonProperty","vPropertyValue","setContextsBasedOnOperationAvailable","oInternalModelContext","aRequestPromises","forContextMenu","arguments","all","aResults","aApplicableContexts","aNotApplicableContexts","aResult","setDynamicActionContexts","trace","applicable","notApplicable","dynamicActionPathPrefix","internalModel","applicableProperty","notApplicableProperty","getSpecificAllowedExpression","aExpressions","aAllowedExpressionsPriority","AllowedExpressionsPrio","sort","a","b","getOperatorsForGuidProperty","allowedOperatorsForGuid","getParameterInfo","sParameterContextPath","substring","lastIndexOf","bResultContext","oParameterInfo","contextPath","parameterProperties","getContextPathProperties","addPageContextToSelectionVariant","oSelectionVariant","mPageContext","oNavigationService","getNavigationService","mixAttributesAndSelectionVariant","toJSONString","isStickyEditMode","bIsStickyMode","bUIEditable","getIsEditable","setUserDefaults","parameters","isAction","isCreate","actionDefaultValues","BaseType","__ui5_require_async","default","TypeMap","startupParameters","shellServices","startupAppState","getStartupAppState","startupAppStateData","getData","extendedParameters","selectionVariant","SelectOptions","oParameter","sPropertyName","sParameterName","parametertType","type","getBaseType","String","typeInstance","getDataTypeInstance","parseValue","oExtendedParameter","PropertyName","oRange","Ranges","Sign","Option","Low","getAdditionalParamsForCreate","oStartupParameters","oInboundParameters","oInbounds","aCreateParameters","sParameter","useForCreate","oRet","sCreateParameter","aValues","create","getSemanticObjectMapping","oOutbound","aSemanticObjectMapping","aParameters","sParam","format","getHeaderFacetItemConfigForExternalNavigation","oViewData","oCrossNav","oHeaderFacetItems","sId","oControlConfig","controlConfiguration","config","sOutbound","navigation","targetOutbound","outbound","generate","setSemanticObjectMappings","vMappings","oMappings","JSON","parse","sLocalProperty","sSemanticObjectProperty","oSelectOption","getSelectOption","removeSelectOption","massAddSelectOption","fnGetSemanticObjectsFromPath","sPath","aSemanticObjectUnavailableActions","aSemanticObjectForGetLinks","semanticObjectPath","semanticObjectForGetLinks","fnGetSemanticObjectPromise","getSemanticObjectsFromPath","getFilterAllowedExpression","oFilterRestrictionsAnnotation","mAllowedExpressions","FilterExpressionRestrictions","oProperty","Property","AllowedExpressions","getFilterRestrictions","sRestriction","aProps","map","_fetchPropertiesForNavPath","paths","navPath","props","navPathPrefix","outPaths","pathToCheck","startsWith","outPath","getFilterRestrictionsByPath","RequiredProperties","NonFilterableProperties","FilterAllowedExpressions","oFilterRestrictions","navigationText","frTerm","entityTypePathParts","replaceAll","filterOutNavPropBinding","entityTypePath","join","entitySetPath","getEntitySetPath","entitySetPathParts","isContainment","containmentNavPath","resultContextCheck","parentEntitySetPath","oParentRet","oParentFR","completeAllowedExps","outProp","propPath","outPropPath","mergeObjects","oNavRestrictions","MetaModelFunction","getNavigationRestrictions","oNavFilterRest","navResReqProps","uniqueSort","navNonFilterProps","navAssociationEntityRest","navAssocReqProps","navAssocNonFilterProps","templateControlFragment","sFragmentName","oPreprocessorSettings","oInOptions","oModifier","oOptions","view","oFragment","targets","fragmentData","XMLTemplateProcessor","loadTemplate","XMLPreprocessor","process","firstElementChild","isXML","owner","runAsOwner","fn","containingView","viewOwner","controller","Fragment","load","id","definition","getSingletonPath","parts","Boolean","propertyName","pop","navigationPath","entitySet","singletonName","resolvedPath","propertyBinding","bindProperty","requestValue","getParameterPath","sContext","aAction","_fntranslatedTextFromExpBindingString","expBinding","control","anyResourceText","AnyElement","anyText","addDependent","resultText","getAnyText","removeDependent","destroy","isSmallDevice","Device","system","desktop","resize","width","getFiltersFromAnnotation","annotationPath","svContext","getMetaContext","propertyFilters","annotation","targetObject","isAnnotationOfType","SelectionVariant","selectOption","$target","propertyType","propertyPath","j","range","getRangeDefinition","Filter","operator","rangeLow","rangeHigh","filters","and","getConverterContextForPath","sMetaPath","sEntitySet","oDiagnostics","createBindingContext","ConverterContext","createConverterContextForMacro","createRootContext","programmingModel","context","rootContextPath","getDraftRootPath","getStickyRootPath","simpleRootContext","existingBindingContextOnPage","getInstancedViews","find","pageView","getProperty","bindContext","getBoundContext","source","managedObject","getView","fireButtonPress","hasTransientContext","updateRelatedAppsDetails","updateDataFieldForIBNButtonsVisibility","getIBNActions","getSemanticObjectPromise","FilterRestrictions","REQUIRED_PROPERTIES","NON_FILTERABLE_PROPERTIES","ALLOWED_EXPRESSIONS","getRelatedAppsMenuItems","getTranslatedTextFromExpBindingString"],"sources":["./CommonUtils.ts"],"sourcesContent":["import type { ActionParameter as EdmActionParameter } from \"@sap-ux/vocabularies-types\";\nimport type * as Edm from \"@sap-ux/vocabularies-types/Edm\";\nimport type { FilterRestrictionsType } from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type {\n\tSemanticObjectMappingAbstractTypes,\n\tSemanticObjectMappingTypeTypes,\n\tSemanticObjectUnavailableActions\n} from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { SelectionPresentationVariant, SelectionVariantType, TextArrangement } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport uniqueSort from \"sap/base/util/array/uniqueSort\";\nimport mergeObjects from \"sap/base/util/merge\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { ComponentData } from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport type ExtensionAPI from \"sap/fe/core/ExtensionAPI\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isAnnotationOfType } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { IShellServices } from \"sap/fe/core/services/ShellServicesFactory\";\nimport type Diagnostics from \"sap/fe/core/support/Diagnostics\";\nimport type SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport type Button from \"sap/m/Button\";\nimport type MenuButton from \"sap/m/MenuButton\";\nimport type MenuItem from \"sap/m/MenuItem\";\nimport type NavContainer from \"sap/m/NavContainer\";\nimport type OverflowToolbarButton from \"sap/m/OverflowToolbarButton\";\nimport Device from \"sap/ui/Device\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Component from \"sap/ui/core/Component\";\nimport type ComponentContainer from \"sap/ui/core/ComponentContainer\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport XMLTemplateProcessor from \"sap/ui/core/XMLTemplateProcessor\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nimport type { default as MDCChart } from \"sap/ui/mdc/Chart\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type ActionToolbarAction from \"sap/ui/mdc/actiontoolbar/ActionToolbarAction\";\nimport type MDCTable from \"sap/ui/mdc/valuehelp/content/MDCTable\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { Link } from \"sap/ushell/services/Navigation\";\nimport type ObjectPageDynamicHeaderTitle from \"sap/uxap/ObjectPageDynamicHeaderTitle\";\nimport type ObjectPageLayout from \"sap/uxap/ObjectPageLayout\";\nimport type ObjectPageSubSection from \"sap/uxap/ObjectPageSubSection\";\nimport type {\n\tExpandPathType,\n\tMetaModelEntityType,\n\tMetaModelEnum,\n\tMetaModelNavProperty,\n\tMetaModelProperty,\n\tMetaModelType\n} from \"types/metamodel_types\";\nimport AnyElement from \"./controls/AnyElement\";\nimport { getRangeDefinition } from \"./converters/helpers/SelectionVariantHelper\";\nimport * as MetaModelFunction from \"./helpers/MetaModelFunction\";\n\ntype MyInboxIntent = {\n\tsemanticObject: string;\n\taction: string;\n};\n\nfunction normalizeSearchTerm(sSearchTerm: string): string | undefined {\n\tif (!sSearchTerm) {\n\t\treturn undefined;\n\t}\n\n\treturn sSearchTerm\n\t\t.replace(/\"/g, \" \")\n\t\t.replace(/\\\\/g, \"\\\\\\\\\") //escape backslash characters. Can be removed if odata/binding handles backend errors responds.\n\t\t.replace(/\\*/g, \"\") // removing the * currently shows the best search-results\n\t\t.split(/\\s+/)\n\t\t.reduce(function (sNormalized: string | undefined, sCurrentWord: string) {\n\t\t\tif (sCurrentWord !== \"\") {\n\t\t\t\tsNormalized = `${sNormalized ? `${sNormalized} ` : \"\"}\"${sCurrentWord}\"`;\n\t\t\t}\n\t\t\treturn sNormalized;\n\t\t}, undefined);\n}\n\nasync function waitForContextRequested(bindingContext: ODataV4Context): Promise<void> {\n\tconst model = bindingContext.getModel();\n\tconst metaModel = model.getMetaModel();\n\tconst entityPath = metaModel.getMetaPath(bindingContext.getPath());\n\tconst dataModel = MetaModelConverter.getInvolvedDataModelObjects(metaModel.getContext(entityPath));\n\tawait bindingContext.requestProperty(dataModel.targetEntityType.keys[0]?.name);\n}\n\nfunction fnHasTransientContexts(oListBinding: ODataListBinding): boolean {\n\tlet bHasTransientContexts = false;\n\tif (oListBinding) {\n\t\toListBinding.getCurrentContexts().forEach(function (oContext: ODataV4Context) {\n\t\t\tif (oContext && oContext.isTransient()) {\n\t\t\t\tbHasTransientContexts = true;\n\t\t\t}\n\t\t});\n\t}\n\treturn bHasTransientContexts;\n}\n\n// there is no navigation in entitySet path and property path\n\nasync function _getSOIntents(\n\toShellServiceHelper: IShellServices,\n\toObjectPageLayout: ObjectPageLayout,\n\toSemanticObject: string | undefined,\n\toParam: object | undefined\n): Promise<Link[][]> {\n\treturn oShellServiceHelper.getLinks([\n\t\t{\n\t\t\tsemanticObject: oSemanticObject,\n\t\t\tparams: oParam\n\t\t}\n\t]);\n}\n\ntype SOMapping = { LocalProperty: { $PropertyPath: string }; SemanticObjectProperty: unknown };\n// TO-DO add this as part of applySemanticObjectmappings logic in IntentBasednavigation controller extension\nfunction _createMappings(oMapping: Record<string, unknown>): SOMapping[] {\n\tconst aSOMappings: SOMapping[] = [];\n\tconst aMappingKeys = Object.keys(oMapping);\n\tlet oSemanticMapping: SOMapping;\n\tfor (const element of aMappingKeys) {\n\t\toSemanticMapping = {\n\t\t\tLocalProperty: {\n\t\t\t\t$PropertyPath: element\n\t\t\t},\n\t\t\tSemanticObjectProperty: oMapping[element]\n\t\t};\n\t\taSOMappings.push(oSemanticMapping);\n\t}\n\n\treturn aSOMappings;\n}\ntype SemanticItem = {\n\ttext: string;\n\ttargetSemObject: string;\n\ttargetAction: string;\n\ttargetParams: unknown;\n};\n/**\n * @param linkGroup\n * @param aExcludedActions\n * @param oTargetParams\n * @param aItems\n * @param aAllowedActions\n */\nfunction _getRelatedAppsMenuItems(\n\tlinkGroup: Link[][],\n\taExcludedActions: unknown[],\n\toTargetParams: unknown,\n\taItems: SemanticItem[],\n\taAllowedActions?: unknown[]\n): void {\n\tfor (const links of linkGroup) {\n\t\tfor (const oLink of links) {\n\t\t\tconst sIntent = oLink.intent;\n\t\t\tconst sAction = sIntent.split(\"-\")[1].split(\"?\")[0];\n\t\t\tif (\n\t\t\t\t(aAllowedActions && aAllowedActions.includes(sAction)) ||\n\t\t\t\t(!aAllowedActions && aExcludedActions && !aExcludedActions.includes(sAction))\n\t\t\t) {\n\t\t\t\taItems.push({\n\t\t\t\t\ttext: oLink.text,\n\t\t\t\t\ttargetSemObject: sIntent.split(\"#\")[1].split(\"-\")[0],\n\t\t\t\t\ttargetAction: sAction.split(\"~\")[0],\n\t\t\t\t\ttargetParams: oTargetParams\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport type SemanticObject = {\n\tallowedActions?: unknown[];\n\tunavailableActions?: unknown[];\n\tsemanticObject: string;\n\tpath: string;\n\tmapping?: Record<string, string>;\n};\n\nfunction _getRelatedIntents(\n\toAdditionalSemanticObjects: SemanticObject,\n\toBindingContext: Context,\n\taManifestSOItems: SemanticItem[],\n\taLinks: Link[][]\n): void {\n\tif (aLinks && aLinks.length > 0) {\n\t\tconst aAllowedActions = oAdditionalSemanticObjects.allowedActions || undefined;\n\t\tconst aExcludedActions = oAdditionalSemanticObjects.unavailableActions ? oAdditionalSemanticObjects.unavailableActions : [];\n\t\tconst aSOMappings = oAdditionalSemanticObjects.mapping ? _createMappings(oAdditionalSemanticObjects.mapping) : [];\n\t\tconst oTargetParams = { navigationContexts: oBindingContext, semanticObjectMapping: aSOMappings };\n\t\t_getRelatedAppsMenuItems(aLinks, aExcludedActions, oTargetParams, aManifestSOItems, aAllowedActions);\n\t}\n}\n\n/**\n * This function fetches the related intents when semantic object and action are passed from feEnvironment.getIntent() only in case of My Inbox integration.\n * @param semanticObjectAndAction This specifies the semantic object and action for fetching the intents\n * @param oBindingContext This sepcifies the binding context for updating related apps\n * @param appComponentSOItems This is a list of semantic items used for updating the related apps button\n * @param aLinks This is an array comprising of related intents\n */\n\nfunction _getRelatedIntentsWithSemanticObjectsAndAction(\n\tsemanticObjectAndAction: MyInboxIntent,\n\toBindingContext: Context,\n\tappComponentSOItems: SemanticItem[],\n\taLinks: Link[][]\n): void {\n\tif (aLinks.length > 0) {\n\t\tconst actions = [semanticObjectAndAction.action];\n\t\tconst excludedActions: [] = [];\n\t\tconst soMappings: [] = [];\n\t\tconst targetParams = { navigationContexts: oBindingContext, semanticObjectMapping: soMappings };\n\t\t_getRelatedAppsMenuItems(aLinks, excludedActions, targetParams, appComponentSOItems, actions);\n\t}\n}\n\ntype SemanticObjectConfig = {\n\tadditionalSemanticObjects: Record<string, SemanticObject>;\n};\ntype RelatedAppsConfig = {\n\ttext: string;\n\ttargetSemObject: string;\n\ttargetAction: string;\n};\nasync function updateRelateAppsModel(\n\toBindingContext: Context,\n\toEntry: Record<string, unknown> | undefined,\n\toObjectPageLayout: ObjectPageLayout,\n\taSemKeys: { $PropertyPath: string }[],\n\toMetaModel: ODataMetaModel,\n\toMetaPath: string,\n\tappComponent: AppComponent\n): Promise<RelatedAppsConfig[]> {\n\tconst oShellServiceHelper: IShellServices = appComponent.getShellServices();\n\tconst oParam: Record<string, unknown> = {};\n\tlet sCurrentSemObj = \"\",\n\t\tsCurrentAction = \"\";\n\tlet oSemanticObjectAnnotations;\n\tlet aRelatedAppsMenuItems: RelatedAppsConfig[] = [];\n\tlet aExcludedActions: unknown[] = [];\n\tlet aManifestSOKeys: string[];\n\n\tasync function fnGetParseShellHashAndGetLinks(): Promise<Link[][]> {\n\t\tconst oParsedUrl = oShellServiceHelper.parseShellHash(document.location.hash);\n\t\tsCurrentSemObj = oParsedUrl.semanticObject; // Current Semantic Object\n\t\tsCurrentAction = oParsedUrl.action;\n\t\treturn _getSOIntents(oShellServiceHelper, oObjectPageLayout, sCurrentSemObj, oParam);\n\t}\n\n\ttry {\n\t\tif (oEntry) {\n\t\t\tif (aSemKeys && aSemKeys.length > 0) {\n\t\t\t\tfor (const element of aSemKeys) {\n\t\t\t\t\tconst sSemKey = element.$PropertyPath;\n\t\t\t\t\tif (!oParam[sSemKey]) {\n\t\t\t\t\t\toParam[sSemKey] = { value: oEntry[sSemKey] };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// fallback to Technical Keys if no Semantic Key is present\n\t\t\t\tconst aTechnicalKeys = oMetaModel.getObject(`${oMetaPath}/$Type/$Key`);\n\t\t\t\tfor (const key in aTechnicalKeys) {\n\t\t\t\t\tconst sObjKey = aTechnicalKeys[key];\n\t\t\t\t\tif (!oParam[sObjKey]) {\n\t\t\t\t\t\toParam[sObjKey] = { value: oEntry[sObjKey] };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Logic to read additional SO from manifest and updated relatedapps model\n\n\t\tconst oManifestData = getTargetView(oObjectPageLayout).getViewData() as SemanticObjectConfig;\n\t\tconst aManifestSOItems: SemanticItem[] = [];\n\t\tlet semanticObjectIntents;\n\t\tif (oManifestData.additionalSemanticObjects) {\n\t\t\taManifestSOKeys = Object.keys(oManifestData.additionalSemanticObjects);\n\t\t\tfor (const element of aManifestSOKeys) {\n\t\t\t\tsemanticObjectIntents = await Promise.resolve(_getSOIntents(oShellServiceHelper, oObjectPageLayout, element, oParam));\n\t\t\t\t_getRelatedIntents(\n\t\t\t\t\toManifestData.additionalSemanticObjects[element],\n\t\t\t\t\toBindingContext,\n\t\t\t\t\taManifestSOItems,\n\t\t\t\t\tsemanticObjectIntents\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// appComponentSOItems is updated in case of My Inbox integration when semantic object and action are passed from feEnvironment.getIntent() method\n\t\t// In other cases it remains as an empty list\n\t\t// We concat this list towards the end with aManifestSOItems\n\n\t\tconst appComponentSOItems: SemanticItem[] = [];\n\t\tconst componentData: ComponentData = appComponent.getComponentData();\n\t\tif (componentData.feEnvironment && componentData.feEnvironment.getIntent()) {\n\t\t\tconst intent: MyInboxIntent = componentData.feEnvironment.getIntent();\n\t\t\tsemanticObjectIntents = await Promise.resolve(\n\t\t\t\t_getSOIntents(oShellServiceHelper, oObjectPageLayout, intent.semanticObject, oParam)\n\t\t\t);\n\t\t\t_getRelatedIntentsWithSemanticObjectsAndAction(intent, oBindingContext, appComponentSOItems, semanticObjectIntents);\n\t\t}\n\n\t\tconst internalModelContext = oObjectPageLayout.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst aLinks = await fnGetParseShellHashAndGetLinks();\n\t\tif (aLinks) {\n\t\t\tif (aLinks.length > 0) {\n\t\t\t\tlet isSemanticObjectHasSameTargetInManifest = false;\n\t\t\t\tconst oTargetParams: {\n\t\t\t\t\tnavigationContexts?: Context;\n\t\t\t\t\tsemanticObjectMapping?: MetaModelType<SemanticObjectMappingAbstractTypes>[];\n\t\t\t\t} = {};\n\t\t\t\tconst aAnnotationsSOItems: SemanticItem[] = [];\n\t\t\t\tconst sEntitySetPath = `${oMetaPath}@`;\n\t\t\t\tconst sEntityTypePath = `${oMetaPath}/@`;\n\t\t\t\tconst oEntitySetAnnotations = oMetaModel.getObject(sEntitySetPath);\n\t\t\t\toSemanticObjectAnnotations = CommonUtils.getSemanticObjectAnnotations(oEntitySetAnnotations, sCurrentSemObj);\n\t\t\t\tif (!oSemanticObjectAnnotations.bHasEntitySetSO) {\n\t\t\t\t\tconst oEntityTypeAnnotations = oMetaModel.getObject(sEntityTypePath);\n\t\t\t\t\toSemanticObjectAnnotations = CommonUtils.getSemanticObjectAnnotations(oEntityTypeAnnotations, sCurrentSemObj);\n\t\t\t\t}\n\t\t\t\taExcludedActions = oSemanticObjectAnnotations.aUnavailableActions;\n\t\t\t\t//Skip same application from Related Apps\n\t\t\t\taExcludedActions.push(sCurrentAction);\n\t\t\t\toTargetParams.navigationContexts = oBindingContext;\n\t\t\t\toTargetParams.semanticObjectMapping = oSemanticObjectAnnotations.aMappings;\n\t\t\t\t_getRelatedAppsMenuItems(aLinks, aExcludedActions, oTargetParams, aAnnotationsSOItems);\n\n\t\t\t\taManifestSOItems.forEach(function ({ targetSemObject }) {\n\t\t\t\t\tif (aAnnotationsSOItems[0]?.targetSemObject === targetSemObject) {\n\t\t\t\t\t\tisSemanticObjectHasSameTargetInManifest = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// remove all actions from current hash application if manifest contains empty allowedActions\n\t\t\t\tif (\n\t\t\t\t\toManifestData.additionalSemanticObjects &&\n\t\t\t\t\taAnnotationsSOItems[0] &&\n\t\t\t\t\toManifestData.additionalSemanticObjects[aAnnotationsSOItems[0].targetSemObject] &&\n\t\t\t\t\t!!oManifestData.additionalSemanticObjects[aAnnotationsSOItems[0].targetSemObject].allowedActions\n\t\t\t\t) {\n\t\t\t\t\tisSemanticObjectHasSameTargetInManifest = true;\n\t\t\t\t}\n\t\t\t\tconst soItems = aManifestSOItems.concat(appComponentSOItems);\n\t\t\t\taRelatedAppsMenuItems = isSemanticObjectHasSameTargetInManifest ? soItems : soItems.concat(aAnnotationsSOItems);\n\t\t\t\t// If no app in list, related apps button will be hidden\n\t\t\t\tinternalModelContext.setProperty(\"relatedApps/visibility\", aRelatedAppsMenuItems.length > 0);\n\t\t\t\tinternalModelContext.setProperty(\"relatedApps/items\", aRelatedAppsMenuItems);\n\t\t\t} else {\n\t\t\t\tinternalModelContext.setProperty(\"relatedApps/visibility\", false);\n\t\t\t}\n\t\t} else {\n\t\t\tinternalModelContext.setProperty(\"relatedApps/visibility\", false);\n\t\t}\n\t} catch (error: unknown) {\n\t\tLog.error(\"Cannot read links\", error as string);\n\t}\n\treturn aRelatedAppsMenuItems;\n}\n\nfunction _getSemanticObjectAnnotations(\n\toEntityAnnotations: Record<string, unknown>,\n\tsCurrentSemObj: string\n): {\n\tbHasEntitySetSO: boolean;\n\taAllowedActions: string[];\n\taUnavailableActions: MetaModelType<SemanticObjectUnavailableActions>[];\n\taMappings: MetaModelType<SemanticObjectMappingAbstractTypes>[];\n} {\n\tconst oSemanticObjectAnnotations = {\n\t\tbHasEntitySetSO: false,\n\t\taAllowedActions: [],\n\t\taUnavailableActions: [] as MetaModelType<SemanticObjectUnavailableActions>[],\n\t\taMappings: [] as MetaModelType<SemanticObjectMappingAbstractTypes>[]\n\t};\n\tlet sAnnotationMappingTerm, sAnnotationActionTerm;\n\tlet sQualifier;\n\tfor (const key in oEntityAnnotations) {\n\t\tif (key.includes(CommonAnnotationTerms.SemanticObject) && oEntityAnnotations[key] === sCurrentSemObj) {\n\t\t\toSemanticObjectAnnotations.bHasEntitySetSO = true;\n\t\t\tsAnnotationMappingTerm = `@${CommonAnnotationTerms.SemanticObjectMapping}`;\n\t\t\tsAnnotationActionTerm = `@${CommonAnnotationTerms.SemanticObjectUnavailableActions}`;\n\n\t\t\tif (key.includes(\"#\")) {\n\t\t\t\tsQualifier = key.split(\"#\")[1];\n\t\t\t\tsAnnotationMappingTerm = `${sAnnotationMappingTerm}#${sQualifier}`;\n\t\t\t\tsAnnotationActionTerm = `${sAnnotationActionTerm}#${sQualifier}`;\n\t\t\t}\n\t\t\tif (oEntityAnnotations[sAnnotationMappingTerm]) {\n\t\t\t\toSemanticObjectAnnotations.aMappings = oSemanticObjectAnnotations.aMappings.concat(\n\t\t\t\t\toEntityAnnotations[sAnnotationMappingTerm] as MetaModelType<SemanticObjectMappingAbstractTypes>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (oEntityAnnotations[sAnnotationActionTerm]) {\n\t\t\t\toSemanticObjectAnnotations.aUnavailableActions = oSemanticObjectAnnotations.aUnavailableActions.concat(\n\t\t\t\t\toEntityAnnotations[sAnnotationActionTerm] as MetaModelType<SemanticObjectUnavailableActions>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn oSemanticObjectAnnotations;\n}\n\nasync function fnUpdateRelatedAppsDetails(oObjectPageLayout: ObjectPageLayout, appComponent: AppComponent): Promise<unknown> {\n\tconst oMetaModel = (oObjectPageLayout.getModel() as ODataModel).getMetaModel();\n\tconst oBindingContext = oObjectPageLayout.getBindingContext() as ODataV4Context;\n\tconst path = (oBindingContext && oBindingContext.getPath()) || \"\";\n\tconst oMetaPath = oMetaModel.getMetaPath(path);\n\t// Semantic Key Vocabulary\n\tconst sSemanticKeyVocabulary = `${oMetaPath}/` + `@com.sap.vocabularies.Common.v1.SemanticKey`;\n\t//Semantic Keys\n\tconst aSemKeys = oMetaModel.getObject(sSemanticKeyVocabulary);\n\t// Unavailable Actions\n\tconst oEntry = oBindingContext?.getObject();\n\tif (!oEntry && oBindingContext) {\n\t\toBindingContext\n\t\t\t.requestObject()\n\t\t\t.then(async function (requestedObject: Record<string, unknown> | undefined) {\n\t\t\t\treturn CommonUtils.updateRelateAppsModel(\n\t\t\t\t\toBindingContext,\n\t\t\t\t\trequestedObject,\n\t\t\t\t\toObjectPageLayout,\n\t\t\t\t\taSemKeys,\n\t\t\t\t\toMetaModel,\n\t\t\t\t\toMetaPath,\n\t\t\t\t\tappComponent\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch(function (oError: unknown) {\n\t\t\t\tLog.error(\"Cannot update the related app details\", oError as string);\n\t\t\t});\n\t} else {\n\t\treturn CommonUtils.updateRelateAppsModel(oBindingContext, oEntry, oObjectPageLayout, aSemKeys, oMetaModel, oMetaPath, appComponent);\n\t}\n}\n\n/**\n * @param oButton\n */\nfunction fnFireButtonPress(oButton?: Control): void {\n\tif (\n\t\toButton &&\n\t\toButton.isA<Button | OverflowToolbarButton>([\"sap.m.Button\", \"sap.m.OverflowToolbarButton\"]) &&\n\t\toButton.getVisible() &&\n\t\toButton.getEnabled()\n\t) {\n\t\toButton.firePress();\n\t}\n}\n\nfunction getAppComponent(oControl: Control | Component): AppComponent {\n\tif (oControl.isA<AppComponent>(\"sap.fe.core.AppComponent\")) {\n\t\treturn oControl;\n\t}\n\tconst oOwner = Component.getOwnerComponentFor(oControl);\n\tif (!oOwner) {\n\t\tthrow new Error(\"There should be a sap.fe.core.AppComponent as owner of the control\");\n\t} else {\n\t\treturn getAppComponent(oOwner);\n\t}\n}\n\nfunction getCurrentPageView(oAppComponent: AppComponent): FEView {\n\tconst rootViewController = oAppComponent.getRootViewController();\n\treturn rootViewController.isFclEnabled()\n\t\t? rootViewController.getRightmostView()\n\t\t: CommonUtils.getTargetView((oAppComponent.getRootContainer() as NavContainer).getCurrentPage());\n}\n\nfunction getTargetView(oControl: ManagedObject | null): FEView {\n\tif (oControl && oControl.isA<ComponentContainer>(\"sap.ui.core.ComponentContainer\")) {\n\t\tconst oComponent = oControl.getComponentInstance();\n\t\toControl = oComponent && oComponent.getRootControl();\n\t}\n\twhile (oControl && !oControl.isA<FEView>(\"sap.ui.core.mvc.View\")) {\n\t\toControl = oControl.getParent();\n\t}\n\treturn oControl!;\n}\n\nfunction _fnCheckIsMatch(oObject: object, oKeysToCheck: Record<string, unknown>): boolean {\n\tfor (const sKey in oKeysToCheck) {\n\t\tif (oKeysToCheck[sKey] !== oObject[sKey as keyof typeof oObject]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction fnGetContextPathProperties(\n\tmetaModelContext: ODataMetaModel,\n\tsContextPath: string,\n\toFilter?: Record<string, unknown>\n): Record<string, MetaModelProperty> | Record<string, MetaModelNavProperty> {\n\tconst oEntityType: MetaModelEntityType = (metaModelContext.getObject(`${sContextPath}/`) || {}) as MetaModelEntityType,\n\t\toProperties: Record<string, MetaModelProperty> | Record<string, MetaModelNavProperty> = {};\n\n\tfor (const sKey in oEntityType) {\n\t\tif (\n\t\t\toEntityType.hasOwnProperty(sKey) &&\n\t\t\t!/^\\$/i.test(sKey) &&\n\t\t\toEntityType[sKey].$kind &&\n\t\t\t_fnCheckIsMatch(oEntityType[sKey], oFilter || { $kind: \"Property\" })\n\t\t) {\n\t\t\toProperties[sKey] = oEntityType[sKey];\n\t\t}\n\t}\n\treturn oProperties;\n}\n\nfunction fnGetIBNActions(oControl: Table | ObjectPageDynamicHeaderTitle | ObjectPageSubSection, aIBNActions: UI5Element[]): UI5Element[] {\n\tconst aActions = oControl && oControl.getActions();\n\tif (aActions) {\n\t\taActions.forEach(function (oAction) {\n\t\t\tif (oAction.isA<ActionToolbarAction>(\"sap.ui.mdc.actiontoolbar.ActionToolbarAction\")) {\n\t\t\t\toAction = oAction.getAction();\n\t\t\t}\n\t\t\tif (oAction.isA<MenuButton>(\"sap.m.MenuButton\")) {\n\t\t\t\tconst oMenu = oAction.getMenu();\n\t\t\t\tconst aItems = oMenu.getItems();\n\t\t\t\taItems.forEach((oItem) => {\n\t\t\t\t\tif (oItem.data(\"IBNData\")) {\n\t\t\t\t\t\taIBNActions.push(oItem);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (oAction.data(\"IBNData\")) {\n\t\t\t\taIBNActions.push(oAction);\n\t\t\t}\n\t\t});\n\t}\n\treturn aIBNActions;\n}\n\nasync function fnUpdateDataFieldForIBNButtonsVisibility(aIBNActions: UI5Element[], oView: View): Promise<void> {\n\tconst oParams: Record<string, { value: unknown }> = {};\n\tconst oAppComponent = CommonUtils.getAppComponent(oView);\n\tconst isSticky = ModelHelper.isStickySessionSupported((oView.getModel() as ODataModel).getMetaModel());\n\tconst fnGetLinks = function (oData?: Record<string, unknown> | undefined): void {\n\t\tif (oData) {\n\t\t\tconst aKeys = Object.keys(oData);\n\t\t\taKeys.forEach(function (sKey: string) {\n\t\t\t\tif (sKey.indexOf(\"_\") !== 0 && !sKey.includes(\"odata.context\")) {\n\t\t\t\t\toParams[sKey] = { value: oData[sKey] };\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (aIBNActions.length) {\n\t\t\taIBNActions.forEach(function (oIBNAction) {\n\t\t\t\tconst sSemanticObject = oIBNAction.data(\"IBNData\").semanticObject;\n\t\t\t\tconst sAction = oIBNAction.data(\"IBNData\").action;\n\t\t\t\toAppComponent\n\t\t\t\t\t.getShellServices()\n\t\t\t\t\t.getLinks([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsemanticObject: sSemanticObject,\n\t\t\t\t\t\t\taction: sAction,\n\t\t\t\t\t\t\tparams: oParams\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t\t.then(function (aLink): void {\n\t\t\t\t\t\tif (oIBNAction.isA<Control>(\"sap.ui.core.Control\") || oIBNAction.isA<MenuItem>(\"sap.m.MenuItem\")) {\n\t\t\t\t\t\t\toIBNAction.setVisible(\n\t\t\t\t\t\t\t\toIBNAction.getVisible() && aLink && aLink.length === 1 && aLink[0] && aLink[0].length === 1\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\t\t(oIBNAction.getBindingContext(\"internal\") as InternalModelContext).setProperty(\n\t\t\t\t\t\t\t\toIBNAction.getId().split(\"--\")[1],\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tshellNavigationNotAvailable: !(aLink && aLink.length === 1 && aLink[0] && aLink[0].length === 1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\t\tLog.error(\"Cannot retrieve the links from the shell service\", oError as string);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\tif (oView && oView.getBindingContext()) {\n\t\treturn (oView.getBindingContext() as ODataV4Context)\n\t\t\t?.requestObject()\n\t\t\t.then(function (oData: Record<string, unknown> | undefined) {\n\t\t\t\treturn fnGetLinks(oData);\n\t\t\t})\n\t\t\t.catch(function (oError: unknown) {\n\t\t\t\tLog.error(\"Cannot retrieve the links from the shell service\", oError as string);\n\t\t\t});\n\t} else {\n\t\treturn fnGetLinks();\n\t}\n}\n\n/**\n * Updates the menu button visibility if all the underlying selection buttons are hidden.\n * @param IBNActions\n */\nfunction updateMenuButtonVisiblity(IBNActions: UI5Element[]): void {\n\tconst menuButtonWithIBNAction: MenuButton[] = [];\n\tIBNActions.forEach(function (IBNAction) {\n\t\tif (IBNAction.isA<MenuButton>(\"sap.m.MenuItem\")) {\n\t\t\tmenuButtonWithIBNAction.push(IBNAction.getParent()?.getParent() as MenuButton);\n\t\t}\n\t});\n\tmenuButtonWithIBNAction.forEach(function (menuAction) {\n\t\tconst menuItems = menuAction.getMenu().getItems();\n\t\tconst visibleMenuItems = menuItems.filter(function (menuItem) {\n\t\t\treturn menuItem.getVisible();\n\t\t});\n\t\tif (visibleMenuItems.length === 0) {\n\t\t\tmenuAction.setVisible(false);\n\t\t}\n\t});\n}\n\nfunction getActionPath(\n\tactionContext: Context,\n\tbReturnOnlyPath: boolean,\n\tinActionName?: string,\n\tbCheckStaticValue?: boolean\n):\n\t| string\n\t| {\n\t\t\tsContextPath: string;\n\t\t\tsProperty: string;\n\t\t\tsBindingParameter: string;\n\t  } {\n\tconst sActionName: string = !inActionName ? actionContext.getObject(actionContext.getPath()).toString() : inActionName;\n\tlet sContextPath = actionContext.getPath().split(\"/@\")[0];\n\tconst sEntityTypeName = (actionContext.getObject(sContextPath) as MetaModelEntityType).$Type;\n\tconst sEntityName = getEntitySetName(actionContext.getModel() as ODataMetaModel, sEntityTypeName);\n\tif (sEntityName) {\n\t\tsContextPath = `/${sEntityName}`;\n\t}\n\tif (bCheckStaticValue) {\n\t\treturn actionContext.getObject(`${sContextPath}/${sActionName}@Org.OData.Core.V1.OperationAvailable`);\n\t}\n\tif (bReturnOnlyPath) {\n\t\treturn `${sContextPath}/${sActionName}`;\n\t} else {\n\t\treturn {\n\t\t\tsContextPath: sContextPath,\n\t\t\tsProperty: actionContext.getObject(`${sContextPath}/${sActionName}@Org.OData.Core.V1.OperationAvailable/$Path`),\n\t\t\tsBindingParameter: actionContext.getObject(`${sContextPath}/${sActionName}/@$ui5.overload/0/$Parameter/0/$Name`)\n\t\t};\n\t}\n}\n\nfunction getEntitySetName(oMetaModel: ODataMetaModel, sEntityType: string): string | undefined {\n\tconst oEntityContainer = oMetaModel.getObject(\"/\");\n\tfor (const key in oEntityContainer) {\n\t\tif (typeof oEntityContainer[key] === \"object\" && oEntityContainer[key].$Type === sEntityType) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nfunction computeDisplayMode(\n\toPropertyAnnotations: Record<string, unknown>,\n\toCollectionAnnotations?: Record<string, unknown>\n): \"Description\" | \"ValueDescription\" | \"Value\" | \"DescriptionValue\" {\n\tconst oTextAnnotation = oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Text\"],\n\t\toTextArrangementAnnotation = (oTextAnnotation &&\n\t\t\t((oPropertyAnnotations &&\n\t\t\t\toPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\"]) ||\n\t\t\t\t(oCollectionAnnotations &&\n\t\t\t\t\toCollectionAnnotations[\"@com.sap.vocabularies.UI.v1.TextArrangement\"]))) as MetaModelEnum<TextArrangement>;\n\n\tif (oTextArrangementAnnotation) {\n\t\tif (oTextArrangementAnnotation.$EnumMember === \"com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly\") {\n\t\t\treturn \"Description\";\n\t\t} else if (oTextArrangementAnnotation.$EnumMember === \"com.sap.vocabularies.UI.v1.TextArrangementType/TextLast\") {\n\t\t\treturn \"ValueDescription\";\n\t\t} else if (oTextArrangementAnnotation.$EnumMember === \"com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate\") {\n\t\t\treturn \"Value\";\n\t\t}\n\t\t//Default should be TextFirst if there is a Text annotation and neither TextOnly nor TextLast are set\n\t\treturn \"DescriptionValue\";\n\t}\n\treturn oTextAnnotation ? \"DescriptionValue\" : \"Value\";\n}\n\nfunction _getEntityType(oContext: ODataV4Context): string | undefined {\n\tconst oMetaModel = oContext.getModel().getMetaModel();\n\treturn oMetaModel.getObject(`${oMetaModel.getMetaPath(oContext.getPath())}/$Type`);\n}\n\nasync function _requestObject(sAction: string, oSelectedContext: ODataV4Context, sProperty: string): Promise<unknown> {\n\tlet oContext = oSelectedContext;\n\tconst nBracketIndex = sAction.indexOf(\"(\");\n\n\tif (nBracketIndex > -1) {\n\t\tconst sTargetType = sAction.slice(nBracketIndex + 1, -1);\n\t\tlet sCurrentType = _getEntityType(oContext);\n\n\t\twhile (sCurrentType !== sTargetType) {\n\t\t\t// Find parent binding context and retrieve entity type\n\t\t\toContext = oContext.getBinding().getContext() as ODataV4Context;\n\t\t\tif (oContext) {\n\t\t\t\tsCurrentType = _getEntityType(oContext);\n\t\t\t} else {\n\t\t\t\tLog.warning(\"Cannot determine target type to request property value for bound action invocation\");\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oContext.requestObject(sProperty);\n}\n\nexport type _RequestedProperty = {\n\tvPropertyValue: unknown;\n\toSelectedContext: Context;\n\tsAction: string;\n\tsDynamicActionEnabledPath: string;\n};\nasync function requestProperty(\n\toSelectedContext: ODataV4Context,\n\tsAction: string,\n\tsProperty: string,\n\tsDynamicActionEnabledPath: string\n): Promise<_RequestedProperty> {\n\tconst oPromise =\n\t\tsProperty && sProperty.indexOf(\"/\") === 0\n\t\t\t? requestSingletonProperty(sProperty, oSelectedContext.getModel())\n\t\t\t: _requestObject(sAction, oSelectedContext, sProperty);\n\n\treturn oPromise.then(function (vPropertyValue: unknown) {\n\t\treturn {\n\t\t\tvPropertyValue: vPropertyValue,\n\t\t\toSelectedContext: oSelectedContext,\n\t\t\tsAction: sAction,\n\t\t\tsDynamicActionEnabledPath: sDynamicActionEnabledPath\n\t\t};\n\t});\n}\n\nasync function setContextsBasedOnOperationAvailable(\n\toInternalModelContext: InternalModelContext,\n\taRequestPromises: Promise<_RequestedProperty>[],\n\tforContextMenu = false\n): Promise<void> {\n\treturn Promise.all(aRequestPromises)\n\t\t.then(function (aResults): void {\n\t\t\tif (aResults.length) {\n\t\t\t\tconst aApplicableContexts: unknown[] = [],\n\t\t\t\t\taNotApplicableContexts: unknown[] = [];\n\t\t\t\taResults.forEach(function (aResult) {\n\t\t\t\t\tif (aResult) {\n\t\t\t\t\t\tif (aResult.vPropertyValue) {\n\t\t\t\t\t\t\toInternalModelContext.getModel().setProperty(aResult.sDynamicActionEnabledPath, true);\n\t\t\t\t\t\t\taApplicableContexts.push(aResult.oSelectedContext);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taNotApplicableContexts.push(aResult.oSelectedContext);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetDynamicActionContexts(\n\t\t\t\t\toInternalModelContext,\n\t\t\t\t\taResults[0].sAction,\n\t\t\t\t\taApplicableContexts,\n\t\t\t\t\taNotApplicableContexts,\n\t\t\t\t\tforContextMenu\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t})\n\t\t.catch(function (oError: unknown) {\n\t\t\tLog.trace(\"Cannot retrieve property value from path\", oError as string);\n\t\t});\n}\n\n/**\n * @param internalModelContext\n * @param action\n * @param applicable\n * @param notApplicable\n * @param forContextMenu\n */\nfunction setDynamicActionContexts(\n\tinternalModelContext: InternalModelContext,\n\taction: string,\n\tapplicable: unknown[],\n\tnotApplicable: unknown[],\n\tforContextMenu = false\n): void {\n\tconst dynamicActionPathPrefix = `${internalModelContext.getPath()}/dynamicActions/${action}`,\n\t\tinternalModel = internalModelContext.getModel(),\n\t\tapplicableProperty = !forContextMenu ? \"aApplicable\" : \"aApplicableForContextMenu\",\n\t\tnotApplicableProperty = !forContextMenu ? \"aNotApplicable\" : \"aNotApplicableForContextMenu\";\n\tinternalModel.setProperty(`${dynamicActionPathPrefix}/${applicableProperty}`, applicable);\n\tinternalModel.setProperty(`${dynamicActionPathPrefix}/${notApplicableProperty}`, notApplicable);\n}\n\nfunction getSpecificAllowedExpression(aExpressions: string[]): string {\n\tconst aAllowedExpressionsPriority = CommonUtils.AllowedExpressionsPrio;\n\n\taExpressions.sort(function (a: string, b: string) {\n\t\treturn aAllowedExpressionsPriority.indexOf(a) - aAllowedExpressionsPriority.indexOf(b);\n\t});\n\n\treturn aExpressions[0];\n}\n\n/**\n * Method to return allowed operators for type Guid.\n * @returns Allowed operators for type Guid\n */\nfunction getOperatorsForGuidProperty(): string {\n\tconst allowedOperatorsForGuid = [\"EQ\", \"NE\"];\n\treturn allowedOperatorsForGuid.toString();\n}\n\ntype ParameterInfo = {\n\tcontextPath?: string;\n\tparameterProperties?: Record<string, MetaModelProperty>;\n};\nfunction getParameterInfo(metaModelContext: ODataMetaModel, sContextPath: string): ParameterInfo {\n\tconst sParameterContextPath = sContextPath.substring(0, sContextPath.lastIndexOf(\"/\"));\n\tconst bResultContext = metaModelContext.getObject(`${sParameterContextPath}/@com.sap.vocabularies.Common.v1.ResultContext`);\n\tconst oParameterInfo: ParameterInfo = {};\n\tif (bResultContext && sParameterContextPath !== sContextPath) {\n\t\toParameterInfo.contextPath = sParameterContextPath;\n\t\toParameterInfo.parameterProperties = CommonUtils.getContextPathProperties(metaModelContext, sParameterContextPath) as Record<\n\t\t\tstring,\n\t\t\tMetaModelProperty\n\t\t>;\n\t}\n\treturn oParameterInfo;\n}\n\ntype ViewData = {\n\tcontrolConfiguration?: Record<string, Record<string, unknown>>;\n};\n\nfunction addPageContextToSelectionVariant(oSelectionVariant: SelectionVariant, mPageContext: unknown[], oView: View): SelectionVariant {\n\tconst oAppComponent = CommonUtils.getAppComponent(oView);\n\tconst oNavigationService = oAppComponent.getNavigationService();\n\treturn oNavigationService.mixAttributesAndSelectionVariant(mPageContext, oSelectionVariant.toJSONString());\n}\n\nfunction isStickyEditMode(oControl: Control): boolean {\n\tconst bIsStickyMode = ModelHelper.isStickySessionSupported((oControl.getModel() as ODataModel).getMetaModel());\n\tconst bUIEditable = CommonUtils.getIsEditable(oControl);\n\treturn bIsStickyMode && bUIEditable;\n}\n\nexport type UserDefaultParameter = EdmActionParameter | Context;\n\n/**\n * Retrieves the user defaults from the startup app state (if available) or the startup parameter and sets them to a model.\n * @param appComponent\n * @param parameters\n * @param model\n * @param isAction\n * @param isCreate\n * @param actionDefaultValues\n */\nasync function setUserDefaults(\n\tappComponent: AppComponent,\n\tparameters: UserDefaultParameter[],\n\tmodel: JSONModel | ODataV4Context,\n\tisAction: boolean,\n\tisCreate?: boolean,\n\tactionDefaultValues?: Record<string, unknown>\n): Promise<void> {\n\tconst BaseType = (await import(\"sap/ui/mdc/enums/BaseType\")).default;\n\tconst TypeMap = (await import(\"sap/ui/mdc/odata/v4/TypeMap\")).default;\n\n\tconst componentData = appComponent.getComponentData(),\n\t\tstartupParameters = (componentData && componentData.startupParameters) || {},\n\t\tshellServices = appComponent.getShellServices();\n\tconst startupAppState = await shellServices.getStartupAppState(appComponent);\n\tconst startupAppStateData = startupAppState?.getData() || {},\n\t\textendedParameters = (startupAppStateData.selectionVariant && startupAppStateData.selectionVariant.SelectOptions) || [];\n\tparameters.forEach(function (oParameter) {\n\t\tconst sPropertyName = isAction\n\t\t\t? `/${(oParameter as { name: string }).name}`\n\t\t\t: (oParameter as Context).getPath?.().slice((oParameter as Context).getPath().lastIndexOf(\"/\") + 1);\n\t\tconst sParameterName = isAction ? sPropertyName.slice(1) : sPropertyName;\n\t\tif (actionDefaultValues && isCreate) {\n\t\t\tif (actionDefaultValues[sParameterName]) {\n\t\t\t\tmodel.setProperty(sPropertyName, actionDefaultValues[sParameterName]);\n\t\t\t}\n\t\t} else if (startupParameters[sParameterName]) {\n\t\t\tconst parametertType = (\n\t\t\t\toParameter as {\n\t\t\t\t\tname: string;\n\t\t\t\t\ttype?: string;\n\t\t\t\t}\n\t\t\t).type\n\t\t\t\t? TypeMap.getBaseType(\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\toParameter as {\n\t\t\t\t\t\t\t\tname: string;\n\t\t\t\t\t\t\t\ttype: string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t).type\n\t\t\t\t  )\n\t\t\t\t: BaseType.String;\n\t\t\tconst typeInstance = TypeMap.getDataTypeInstance(parametertType);\n\t\t\tmodel.setProperty(sPropertyName, typeInstance.parseValue(startupParameters[sParameterName][0], \"string\"));\n\t\t} else if (extendedParameters.length > 0) {\n\t\t\tfor (const oExtendedParameter of extendedParameters) {\n\t\t\t\tif (oExtendedParameter.PropertyName === sParameterName) {\n\t\t\t\t\tconst oRange = oExtendedParameter.Ranges.length\n\t\t\t\t\t\t? oExtendedParameter.Ranges[oExtendedParameter.Ranges.length - 1]\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tif (oRange && oRange.Sign === \"I\" && oRange.Option === \"EQ\") {\n\t\t\t\t\t\tmodel.setProperty(sPropertyName, oRange.Low); // high is ignored when Option=EQ\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport type InboundParameter = {\n\tuseForCreate: boolean;\n};\nfunction getAdditionalParamsForCreate(\n\toStartupParameters: Record<string, unknown[]>,\n\toInboundParameters?: Record<string, InboundParameter>\n): unknown {\n\tconst oInbounds = oInboundParameters,\n\t\taCreateParameters =\n\t\t\toInbounds !== undefined\n\t\t\t\t? Object.keys(oInbounds).filter(function (sParameter: string) {\n\t\t\t\t\t\treturn oInbounds[sParameter].useForCreate;\n\t\t\t\t  })\n\t\t\t\t: [];\n\tlet oRet;\n\tfor (const element of aCreateParameters) {\n\t\tconst sCreateParameter = element;\n\t\tconst aValues = oStartupParameters && oStartupParameters[sCreateParameter];\n\t\tif (aValues && aValues.length === 1) {\n\t\t\toRet = oRet || Object.create(null);\n\t\t\toRet[sCreateParameter] = aValues[0];\n\t\t}\n\t}\n\treturn oRet;\n}\ntype OutboundParameter = {\n\tparameters: Record<string, OutboundParameterValue>;\n\tsemanticObject?: string;\n\taction?: string;\n};\ntype OutboundParameterValue = {\n\tvalue?: {\n\t\tvalue?: string;\n\t\tformat?: string;\n\t};\n};\nfunction getSemanticObjectMapping(oOutbound: OutboundParameter): MetaModelType<SemanticObjectMappingTypeTypes>[] {\n\tconst aSemanticObjectMapping: MetaModelType<SemanticObjectMappingTypeTypes>[] = [];\n\t// eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n\tif (oOutbound.parameters) {\n\t\tconst aParameters = Object.keys(oOutbound.parameters) || [];\n\t\tif (aParameters.length > 0) {\n\t\t\taParameters.forEach(function (sParam: string) {\n\t\t\t\tconst oMapping = oOutbound.parameters[sParam];\n\t\t\t\tif (oMapping.value && oMapping.value.value && oMapping.value.format === \"binding\") {\n\t\t\t\t\t// using the format of UI.Mapping\n\t\t\t\t\tconst oSemanticMapping = {\n\t\t\t\t\t\tLocalProperty: {\n\t\t\t\t\t\t\t$PropertyPath: oMapping.value.value\n\t\t\t\t\t\t},\n\t\t\t\t\t\tSemanticObjectProperty: sParam\n\t\t\t\t\t};\n\n\t\t\t\t\tif (aSemanticObjectMapping.length > 0) {\n\t\t\t\t\t\t// To check if the semanticObject Mapping is done for the same local property more that once then first one will be considered\n\t\t\t\t\t\tfor (const element of aSemanticObjectMapping) {\n\t\t\t\t\t\t\tif (element.LocalProperty?.$PropertyPath !== oSemanticMapping.LocalProperty.$PropertyPath) {\n\t\t\t\t\t\t\t\taSemanticObjectMapping.push(oSemanticMapping);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\taSemanticObjectMapping.push(oSemanticMapping);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn aSemanticObjectMapping;\n}\n\nfunction getHeaderFacetItemConfigForExternalNavigation(\n\toViewData: ViewData,\n\toCrossNav: Record<string, OutboundParameter>\n): Record<\n\tstring,\n\t{\n\t\tsemanticObject: string;\n\t\taction: string;\n\t\tsemanticObjectMapping: MetaModelType<SemanticObjectMappingTypeTypes>[];\n\t}\n> {\n\tconst oHeaderFacetItems: Record<\n\t\tstring,\n\t\t{\n\t\t\tsemanticObject: string;\n\t\t\taction: string;\n\t\t\tsemanticObjectMapping: MetaModelType<SemanticObjectMappingTypeTypes>[];\n\t\t}\n\t> = {};\n\tlet sId;\n\tconst oControlConfig = oViewData.controlConfiguration as Record<\n\t\tstring,\n\t\t{\n\t\t\tnavigation?: {\n\t\t\t\ttargetOutbound?: {\n\t\t\t\t\toutbound: string;\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t>;\n\tfor (const config in oControlConfig) {\n\t\tif (config.includes(\"@com.sap.vocabularies.UI.v1.DataPoint\") || config.includes(\"@com.sap.vocabularies.UI.v1.Chart\")) {\n\t\t\tconst sOutbound = oControlConfig[config].navigation?.targetOutbound?.outbound;\n\t\t\tif (sOutbound !== undefined) {\n\t\t\t\tconst oOutbound = oCrossNav[sOutbound];\n\t\t\t\tif (oOutbound.semanticObject && oOutbound.action) {\n\t\t\t\t\tif (config.includes(\"Chart\")) {\n\t\t\t\t\t\tsId = generate([\"fe\", \"MicroChartLink\", config]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsId = generate([\"fe\", \"HeaderDPLink\", config]);\n\t\t\t\t\t}\n\t\t\t\t\tconst aSemanticObjectMapping = CommonUtils.getSemanticObjectMapping(oOutbound);\n\t\t\t\t\toHeaderFacetItems[sId] = {\n\t\t\t\t\t\tsemanticObject: oOutbound.semanticObject,\n\t\t\t\t\t\taction: oOutbound.action,\n\t\t\t\t\t\tsemanticObjectMapping: aSemanticObjectMapping\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tLog.error(`Cross navigation outbound is configured without semantic object and action for ${sOutbound}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn oHeaderFacetItems;\n}\n\nfunction setSemanticObjectMappings(oSelectionVariant: SelectionVariant, vMappings: unknown): SelectionVariant {\n\tconst oMappings = typeof vMappings === \"string\" ? JSON.parse(vMappings) : vMappings;\n\tfor (const element of oMappings) {\n\t\tconst sLocalProperty =\n\t\t\t(element[\"LocalProperty\"] && element[\"LocalProperty\"][\"$PropertyPath\"]) ||\n\t\t\t(element[\"@com.sap.vocabularies.Common.v1.LocalProperty\"] && element[\"@com.sap.vocabularies.Common.v1.LocalProperty\"][\"$Path\"]);\n\t\tconst sSemanticObjectProperty =\n\t\t\telement[\"SemanticObjectProperty\"] || element[\"@com.sap.vocabularies.Common.v1.SemanticObjectProperty\"];\n\t\tconst oSelectOption = oSelectionVariant.getSelectOption(sLocalProperty);\n\t\tif (oSelectOption) {\n\t\t\t//Create a new SelectOption with sSemanticObjectProperty as the property Name and remove the older one\n\t\t\toSelectionVariant.removeSelectOption(sLocalProperty);\n\t\t\toSelectionVariant.massAddSelectOption(sSemanticObjectProperty, oSelectOption);\n\t\t}\n\t}\n\treturn oSelectionVariant;\n}\n\ntype SemanticObjectFromPath = {\n\tsemanticObjectPath: string;\n\tsemanticObjectForGetLinks: { semanticObject: string }[];\n\tsemanticObject: {\n\t\tsemanticObject: { $Path: string };\n\t};\n\tunavailableActions: string[];\n};\nasync function fnGetSemanticObjectsFromPath(\n\toMetaModel: ODataMetaModel,\n\tsPath: string,\n\tsQualifier: string\n): Promise<SemanticObjectFromPath> {\n\treturn new Promise<SemanticObjectFromPath>(function (resolve) {\n\t\tlet sSemanticObject, aSemanticObjectUnavailableActions;\n\t\tif (sQualifier === \"\") {\n\t\t\tsSemanticObject = oMetaModel.getObject(`${sPath}@${CommonAnnotationTerms.SemanticObject}`);\n\t\t\taSemanticObjectUnavailableActions = oMetaModel.getObject(`${sPath}@${CommonAnnotationTerms.SemanticObjectUnavailableActions}`);\n\t\t} else {\n\t\t\tsSemanticObject = oMetaModel.getObject(`${sPath}@${CommonAnnotationTerms.SemanticObject}#${sQualifier}`);\n\t\t\taSemanticObjectUnavailableActions = oMetaModel.getObject(\n\t\t\t\t`${sPath}@${CommonAnnotationTerms.SemanticObjectUnavailableActions}#${sQualifier}`\n\t\t\t);\n\t\t}\n\n\t\tconst aSemanticObjectForGetLinks = [{ semanticObject: sSemanticObject }];\n\t\tconst oSemanticObject = {\n\t\t\tsemanticObject: sSemanticObject\n\t\t};\n\t\tresolve({\n\t\t\tsemanticObjectPath: sPath,\n\t\t\tsemanticObjectForGetLinks: aSemanticObjectForGetLinks,\n\t\t\tsemanticObject: oSemanticObject,\n\t\t\tunavailableActions: aSemanticObjectUnavailableActions\n\t\t});\n\t});\n}\n\nasync function fnGetSemanticObjectPromise(oMetaModel: ODataMetaModel, sPath: string, sQualifier: string): Promise<SemanticObjectFromPath> {\n\treturn CommonUtils.getSemanticObjectsFromPath(oMetaModel, sPath, sQualifier);\n}\n\nfunction getFilterAllowedExpression(oFilterRestrictionsAnnotation?: MetaModelType<FilterRestrictionsType>): _FilterAllowedExpressions {\n\tconst mAllowedExpressions: _FilterAllowedExpressions = {};\n\tif (oFilterRestrictionsAnnotation && oFilterRestrictionsAnnotation.FilterExpressionRestrictions !== undefined) {\n\t\toFilterRestrictionsAnnotation.FilterExpressionRestrictions.forEach(function (oProperty) {\n\t\t\tif (oProperty.Property && oProperty.AllowedExpressions !== undefined) {\n\t\t\t\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\t\t\t\tif (mAllowedExpressions[oProperty.Property.$PropertyPath] !== undefined) {\n\t\t\t\t\tmAllowedExpressions[oProperty.Property.$PropertyPath].push(oProperty.AllowedExpressions);\n\t\t\t\t} else {\n\t\t\t\t\tmAllowedExpressions[oProperty.Property.$PropertyPath] = [oProperty.AllowedExpressions];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn mAllowedExpressions;\n}\nfunction getFilterRestrictions(\n\toFilterRestrictionsAnnotation?: MetaModelType<FilterRestrictionsType>,\n\tsRestriction?: \"RequiredProperties\" | \"NonFilterableProperties\"\n): string[] {\n\tlet aProps: string[] = [];\n\tif (oFilterRestrictionsAnnotation && oFilterRestrictionsAnnotation[sRestriction as keyof MetaModelType<FilterRestrictionsType>]) {\n\t\taProps = (\n\t\t\toFilterRestrictionsAnnotation[sRestriction as keyof MetaModelType<FilterRestrictionsType>] as ExpandPathType<Edm.PropertyPath>[]\n\t\t).map(function (oProperty: ExpandPathType<Edm.PropertyPath>) {\n\t\t\treturn oProperty.$PropertyPath;\n\t\t});\n\t}\n\treturn aProps;\n}\n\nfunction _fetchPropertiesForNavPath(paths: string[], navPath: string, props: string[]): string[] {\n\tconst navPathPrefix = navPath + \"/\";\n\treturn paths.reduce((outPaths: string[], pathToCheck: string) => {\n\t\tif (pathToCheck.startsWith(navPathPrefix)) {\n\t\t\tconst outPath = pathToCheck.replace(navPathPrefix, \"\");\n\t\t\tif (!outPaths.includes(outPath)) {\n\t\t\t\toutPaths.push(outPath);\n\t\t\t}\n\t\t}\n\t\treturn outPaths;\n\t}, props);\n}\ntype _FilterAllowedExpressions = Record<string, string[]>;\nexport type _FilterRestrictions = {\n\tRequiredProperties: string[];\n\tNonFilterableProperties: string[];\n\tFilterAllowedExpressions: _FilterAllowedExpressions;\n};\nfunction getFilterRestrictionsByPath(entityPath: string, oContext: ODataMetaModel): _FilterRestrictions {\n\tconst oRet: _FilterRestrictions = {\n\t\tRequiredProperties: [],\n\t\tNonFilterableProperties: [],\n\t\tFilterAllowedExpressions: {}\n\t};\n\tlet oFilterRestrictions;\n\tconst navigationText = \"$NavigationPropertyBinding\";\n\tconst frTerm = \"@Org.OData.Capabilities.V1.FilterRestrictions\";\n\tconst entityTypePathParts = entityPath.replaceAll(\"%2F\", \"/\").split(\"/\").filter(ModelHelper.filterOutNavPropBinding);\n\tconst entityTypePath = `/${entityTypePathParts.join(\"/\")}/`;\n\tconst entitySetPath = ModelHelper.getEntitySetPath(entityPath, oContext);\n\tconst entitySetPathParts = entitySetPath.split(\"/\").filter(ModelHelper.filterOutNavPropBinding);\n\tconst isContainment = oContext.getObject(`${entityTypePath}$ContainsTarget`);\n\tconst containmentNavPath = !!isContainment && entityTypePathParts[entityTypePathParts.length - 1];\n\n\t//LEAST PRIORITY - Filter restrictions directly at Entity Set\n\t//e.g. FR in \"NS.EntityContainer/SalesOrderManage\" ContextPath: /SalesOrderManage\n\tif (!isContainment) {\n\t\toFilterRestrictions = oContext.getObject(`${entitySetPath}${frTerm}`) as MetaModelType<FilterRestrictionsType> | undefined;\n\t\toRet.RequiredProperties = getFilterRestrictions(oFilterRestrictions, \"RequiredProperties\") || [];\n\t\tconst resultContextCheck = oContext.getObject(`${entityTypePath}@com.sap.vocabularies.Common.v1.ResultContext`);\n\t\tif (!resultContextCheck) {\n\t\t\toRet.NonFilterableProperties = getFilterRestrictions(oFilterRestrictions, \"NonFilterableProperties\") || [];\n\t\t}\n\t\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\t\toRet.FilterAllowedExpressions = getFilterAllowedExpression(oFilterRestrictions) || {};\n\t}\n\n\tif (entityTypePathParts.length > 1) {\n\t\tconst navPath = isContainment ? (containmentNavPath as string) : entitySetPathParts[entitySetPathParts.length - 1];\n\t\t// In case of containment we take entitySet provided as parent. And in case of normal we would remove the last navigation from entitySetPath.\n\t\tconst parentEntitySetPath = isContainment ? entitySetPath : `/${entitySetPathParts.slice(0, -1).join(`/${navigationText}/`)}`;\n\t\t//THIRD HIGHEST PRIORITY - Reading property path restrictions - Annotation at main entity but directly on navigation property path\n\t\t//e.g. Parent Customer with PropertyPath=\"Set/CityName\" ContextPath: Customer/Set\n\t\tconst oParentRet: _FilterRestrictions = {\n\t\t\tRequiredProperties: [],\n\t\t\tNonFilterableProperties: [],\n\t\t\tFilterAllowedExpressions: {}\n\t\t};\n\t\tif (!navPath.includes(\"%2F\")) {\n\t\t\tconst oParentFR = oContext.getObject(`${parentEntitySetPath}${frTerm}`) as MetaModelType<FilterRestrictionsType> | undefined;\n\t\t\toRet.RequiredProperties = _fetchPropertiesForNavPath(\n\t\t\t\tgetFilterRestrictions(oParentFR, \"RequiredProperties\") || [],\n\t\t\t\tnavPath,\n\t\t\t\toRet.RequiredProperties || []\n\t\t\t);\n\t\t\toRet.NonFilterableProperties = _fetchPropertiesForNavPath(\n\t\t\t\tgetFilterRestrictions(oParentFR, \"NonFilterableProperties\") || [],\n\t\t\t\tnavPath,\n\t\t\t\toRet.NonFilterableProperties || []\n\t\t\t);\n\t\t\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\t\t\tconst completeAllowedExps = getFilterAllowedExpression(oParentFR) || {};\n\t\t\toParentRet.FilterAllowedExpressions = Object.keys(completeAllowedExps).reduce(\n\t\t\t\t(outProp: Record<string, string[]>, propPath: string) => {\n\t\t\t\t\tif (propPath.startsWith(navPath + \"/\")) {\n\t\t\t\t\t\tconst outPropPath = propPath.replace(navPath + \"/\", \"\");\n\t\t\t\t\t\toutProp[outPropPath] = completeAllowedExps[propPath];\n\t\t\t\t\t}\n\t\t\t\t\treturn outProp;\n\t\t\t\t},\n\t\t\t\t{} as Record<string, string[]>\n\t\t\t);\n\t\t}\n\n\t\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\t\toRet.FilterAllowedExpressions = mergeObjects(\n\t\t\t{},\n\t\t\toRet.FilterAllowedExpressions || {},\n\t\t\toParentRet.FilterAllowedExpressions || {}\n\t\t) as Record<string, string[]>;\n\n\t\t//SECOND HIGHEST priority - Navigation restrictions\n\t\t//e.g. Parent \"/Customer\" with NavigationPropertyPath=\"Set\" ContextPath: Customer/Set\n\t\tconst oNavRestrictions = MetaModelFunction.getNavigationRestrictions(oContext, parentEntitySetPath, navPath.replaceAll(\"%2F\", \"/\"));\n\t\tconst oNavFilterRest = oNavRestrictions && (oNavRestrictions[\"FilterRestrictions\"] as MetaModelType<FilterRestrictionsType>);\n\t\tconst navResReqProps = getFilterRestrictions(oNavFilterRest, \"RequiredProperties\") || [];\n\t\toRet.RequiredProperties = uniqueSort(oRet.RequiredProperties.concat(navResReqProps));\n\t\tconst navNonFilterProps = getFilterRestrictions(oNavFilterRest, \"NonFilterableProperties\") || [];\n\t\toRet.NonFilterableProperties = uniqueSort(oRet.NonFilterableProperties.concat(navNonFilterProps));\n\t\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\t\toRet.FilterAllowedExpressions = mergeObjects(\n\t\t\t{},\n\t\t\toRet.FilterAllowedExpressions || {},\n\t\t\tgetFilterAllowedExpression(oNavFilterRest) || {}\n\t\t) as Record<string, string[]>;\n\n\t\t//HIGHEST priority - Restrictions having target with navigation association entity\n\t\t// e.g. FR in \"CustomerParameters/Set\" ContextPath: \"Customer/Set\"\n\t\tconst navAssociationEntityRest = oContext.getObject(\n\t\t\t`/${entityTypePathParts.join(\"/\")}${frTerm}`\n\t\t) as MetaModelType<FilterRestrictionsType>;\n\t\tconst navAssocReqProps = getFilterRestrictions(navAssociationEntityRest, \"RequiredProperties\") || [];\n\t\toRet.RequiredProperties = uniqueSort(oRet.RequiredProperties.concat(navAssocReqProps));\n\t\tconst navAssocNonFilterProps = getFilterRestrictions(navAssociationEntityRest, \"NonFilterableProperties\") || [];\n\t\toRet.NonFilterableProperties = uniqueSort(oRet.NonFilterableProperties.concat(navAssocNonFilterProps));\n\t\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\t\toRet.FilterAllowedExpressions = mergeObjects(\n\t\t\t{},\n\t\t\toRet.FilterAllowedExpressions,\n\t\t\tgetFilterAllowedExpression(navAssociationEntityRest) || {}\n\t\t) as _FilterAllowedExpressions;\n\t}\n\treturn oRet;\n}\n\nexport type PreprocessorSettings = {\n\tappComponent?: AppComponent;\n\tbindingContexts: object;\n\tmodels: object;\n};\nexport type BaseTreeModifier = {\n\ttemplateControlFragment(\n\t\tsFragmentName: string,\n\t\tmPreprocessorSettings: PreprocessorSettings,\n\t\toView?: View\n\t): Promise<UI5Element[] | Element[]>;\n\ttargets: string;\n\tgetId(vControl: UI5Element | Element): string;\n\tgetControlType(oControl: UI5Element | Element): string;\n\tgetProperty<T>(oControl: UI5Element | Element, sPropertyName: string): Promise<T>;\n\tgetAggregation(parent: UI5Element | Element, name: string): Promise<UI5Element[] | Element[]>;\n\tinsertAggregation(\n\t\tparent: UI5Element | Element,\n\t\tname: string,\n\t\tcontrol: UI5Element | Element | UI5Element[] | Element[],\n\t\tindex?: number,\n\t\tview?: Element,\n\t\tskipAdjustIndex?: boolean\n\t): Promise<void>;\n\tsetProperty(oControl: UI5Element | Element, sPropertyName: string, vValue: unknown): void;\n\tbySelector(oSelector: object, oAppComponent?: Component, oView?: Element): ManagedObject | Element;\n};\n\nasync function templateControlFragment(\n\tsFragmentName: string | Element | null,\n\toPreprocessorSettings: PreprocessorSettings,\n\toInOptions?: { view?: View; isXML?: boolean; id?: string; controller?: PageController | ExtensionAPI; containingView?: View },\n\toModifier?: BaseTreeModifier\n): Promise<Element | UI5Element | Element[] | UI5Element[]> {\n\tconst oOptions = oInOptions || {};\n\tif (oModifier && typeof sFragmentName === \"string\") {\n\t\treturn oModifier.templateControlFragment(sFragmentName, oPreprocessorSettings, oOptions.view).then(function (oFragment) {\n\t\t\t// This is required as Flex returns an HTMLCollection as templating result in XML time.\n\t\t\treturn oModifier.targets === \"xmlTree\" && oFragment.length > 0 ? oFragment[0] : oFragment;\n\t\t});\n\t} else {\n\t\tconst fragmentData =\n\t\t\ttypeof sFragmentName === \"string\" ? XMLTemplateProcessor.loadTemplate(sFragmentName, \"fragment\") : sFragmentName;\n\t\tconst oFragment = await XMLPreprocessor.process(fragmentData, { name: sFragmentName }, oPreprocessorSettings);\n\t\tconst oControl = oFragment.firstElementChild;\n\t\tif (!!oOptions.isXML && oControl) {\n\t\t\treturn oControl;\n\t\t}\n\t\tlet owner: { runAsOwner: <T>(fn: () => T) => T } = oPreprocessorSettings.appComponent ?? { runAsOwner: (fn) => fn() };\n\t\tif (oOptions.containingView) {\n\t\t\tconst viewOwner = Component.getOwnerComponentFor(oOptions.containingView);\n\t\t\tif (viewOwner) {\n\t\t\t\towner = viewOwner;\n\t\t\t}\n\t\t}\n\t\tlet containingView: View | undefined;\n\t\tif (oOptions.view && !oOptions.controller) {\n\t\t\t// this is overall stupid, in case we are coming from the delegate with an xml node instead of a fragment we need to pass the containingView in there (done by the oModifier call for instance)\n\t\t\t// But in other runtime case where we are here we need to maintain the controller and thus cannot have a containingView...\n\t\t\tcontainingView = oOptions.view;\n\t\t}\n\t\treturn owner.runAsOwner(async () => {\n\t\t\treturn Fragment.load({\n\t\t\t\tid: oOptions.id,\n\t\t\t\tdefinition: oFragment as unknown as string,\n\t\t\t\tcontroller: oOptions.controller,\n\t\t\t\tcontainingView: containingView\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction getSingletonPath(path: string, metaModel: ODataMetaModel): string | undefined {\n\tconst parts = path.split(\"/\").filter(Boolean),\n\t\tpropertyName = parts.pop()!,\n\t\tnavigationPath = parts.join(\"/\"),\n\t\tentitySet = navigationPath && metaModel.getObject(`/${navigationPath}`);\n\tif (entitySet?.$kind === \"Singleton\") {\n\t\tconst singletonName = parts[parts.length - 1];\n\t\treturn `/${singletonName}/${propertyName}`;\n\t}\n\treturn undefined;\n}\n\nasync function requestSingletonProperty(path: string, model: ODataModel): Promise<unknown> {\n\tif (!path || !model) {\n\t\treturn Promise.resolve(null);\n\t}\n\tconst metaModel = model.getMetaModel();\n\t// Find the underlying entity set from the property path and check whether it is a singleton.\n\tconst resolvedPath = getSingletonPath(path, metaModel);\n\tif (resolvedPath) {\n\t\tconst propertyBinding = model.bindProperty(resolvedPath);\n\t\treturn propertyBinding.requestValue();\n\t}\n\n\treturn Promise.resolve(null);\n}\n\n// Get the path for action parameters that is needed to read the annotations\nfunction getParameterPath(sPath: string, sParameter: string): string {\n\tlet sContext;\n\tif (sPath.includes(\"@$ui5.overload\")) {\n\t\tsContext = sPath.split(\"@$ui5.overload\")[0];\n\t} else {\n\t\t// For Unbound Actions in Action Parameter Dialogs\n\t\tconst aAction = sPath.split(\"/0\")[0].split(\".\");\n\t\tsContext = `/${aAction[aAction.length - 1]}/`;\n\t}\n\treturn sContext + sParameter;\n}\n\n/**\n * Get resolved expression binding used for texts at runtime.\n * @param expBinding\n * @param control\n * @returns A string after resolution.\n */\nfunction _fntranslatedTextFromExpBindingString(expBinding: string, control: Control): string {\n\t// The idea here is to create dummy element with the expresion binding.\n\t// Adding it as dependent to the view/control would propagate all the models to the dummy element and resolve the binding.\n\t// We remove the dummy element after that and destroy it.\n\n\tconst anyResourceText = new AnyElement({ anyText: expBinding });\n\tcontrol.addDependent(anyResourceText);\n\tconst resultText = anyResourceText.getAnyText();\n\tcontrol.removeDependent(anyResourceText);\n\tanyResourceText.destroy();\n\n\treturn resultText;\n}\n/**\n * Check if the current device has a small screen.\n * @returns A Boolean.\n */\nfunction isSmallDevice(): boolean {\n\treturn !Device.system.desktop || Device.resize.width <= 320;\n}\n\n/**\n * Parses a SelectionVariant or SelectionPresentationVariant annotation and creates the corresponding filters.\n * @param control MDC Chart, MDC Table or MultiView control on which the filters are applied\n * @param annotationPath SelectionVariant or SelectionPresentationVariant annotation\n * @returns Returns an array of filters.\n */\nfunction getFiltersFromAnnotation(control: Control | MDCChart | MDCTable, annotationPath: string): Filter[] {\n\tconst metaModel = CommonUtils.getAppComponent(control as Control).getMetaModel();\n\tconst svContext = metaModel.getMetaContext(`${control.data(\"entityType\")}${annotationPath}`);\n\tconst propertyFilters: Record<string, Filter[]> = {};\n\tlet annotation = MetaModelConverter.getInvolvedDataModelObjects(svContext).targetObject;\n\n\tif (isAnnotationOfType<SelectionPresentationVariant>(annotation, UIAnnotationTypes.SelectionPresentationVariantType)) {\n\t\tannotation = annotation.SelectionVariant;\n\t}\n\n\tif (!annotation || !isAnnotationOfType<SelectionVariantType>(annotation, UIAnnotationTypes.SelectionVariantType)) {\n\t\treturn [];\n\t}\n\n\t(annotation.SelectOptions || []).forEach((selectOption) => {\n\t\tif (selectOption.PropertyName?.$target && selectOption.Ranges?.length > 0) {\n\t\t\tconst propertyType = selectOption.PropertyName.$target.type;\n\t\t\tconst propertyPath = selectOption.PropertyName.value;\n\t\t\tfor (const j in selectOption.Ranges) {\n\t\t\t\tconst range = getRangeDefinition(selectOption.Ranges[j], propertyType);\n\t\t\t\tpropertyFilters[propertyPath] = (propertyFilters[propertyPath] ?? []).concat(\n\t\t\t\t\tnew Filter(propertyPath, range.operator as FilterOperator, range.rangeLow, range.rangeHigh)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst filters = [];\n\tfor (const path in propertyFilters) {\n\t\tfilters.push(\n\t\t\tnew Filter({\n\t\t\t\tfilters: propertyFilters[path],\n\t\t\t\tand: false\n\t\t\t})\n\t\t);\n\t}\n\treturn filters;\n}\n\nfunction getConverterContextForPath(\n\tsMetaPath: string,\n\toMetaModel: ODataMetaModel,\n\tsEntitySet: string,\n\toDiagnostics: Diagnostics\n): ConverterContext<PageContextPathTarget> {\n\tconst oContext = oMetaModel.createBindingContext(sMetaPath) as ODataV4Context;\n\treturn ConverterContext?.createConverterContextForMacro(sEntitySet, oContext || oMetaModel, oDiagnostics, mergeObjects);\n}\n\n/**\n * Gets the context of the DraftRoot path.\n * If a view has been created with the draft Root Path, this method returns its bindingContext.\n * Where no view is found a new created context is returned.\n * The new created context request the key of the entity in order to get the Etag of this entity.\n * @param programmingModel\n * @param view\n * @param appComponent\n * @returns Returns a Promise\n */\nasync function createRootContext(programmingModel: string, view: View, appComponent: AppComponent): Promise<Context | undefined> {\n\tconst context = view.getBindingContext() as ODataV4Context;\n\tif (context) {\n\t\tconst rootContextPath =\n\t\t\tprogrammingModel === \"Draft\" ? ModelHelper.getDraftRootPath(context) : ModelHelper.getStickyRootPath(context);\n\t\tlet simpleRootContext: ODataV4Context;\n\t\tif (rootContextPath) {\n\t\t\t// Check if a view matches with the draft root path\n\t\t\tconst existingBindingContextOnPage = appComponent\n\t\t\t\t.getRootViewController()\n\t\t\t\t.getInstancedViews()\n\t\t\t\t.find((pageView: View) => pageView.getBindingContext()?.getPath() === rootContextPath)\n\t\t\t\t?.getBindingContext() as Context;\n\t\t\tif (existingBindingContextOnPage) {\n\t\t\t\treturn existingBindingContextOnPage;\n\t\t\t}\n\t\t\tconst internalModel = view.getModel(\"internal\") as JSONModel;\n\t\t\tsimpleRootContext = internalModel.getProperty(\"/simpleRootContext\");\n\t\t\tif (simpleRootContext?.getPath() === rootContextPath) {\n\t\t\t\treturn simpleRootContext;\n\t\t\t}\n\t\t\tconst model = context.getModel();\n\t\t\tsimpleRootContext = model.bindContext(rootContextPath).getBoundContext();\n\t\t\tawait CommonUtils.waitForContextRequested(simpleRootContext);\n\t\t\t// Store this new created context to use it on the next iterations\n\t\t\tinternalModel.setProperty(\"/simpleRootContext\", simpleRootContext);\n\t\t\treturn simpleRootContext;\n\t\t}\n\t}\n}\n\n/**\n * Helper method to determine if the source is to be display for the editmode or not.\n * @param source\n * @returns If the source is to be displayed in edit mode\n */\nfunction getIsEditable(source: ManagedObject | PageController): boolean {\n\tconst managedObject = source.isA<PageController>(\"sap.fe.core.PageController\") ? source.getView() : source;\n\treturn managedObject.getBindingContext(\"ui\")?.getProperty(\"/isEditable\");\n}\n\nconst CommonUtils = {\n\tfireButtonPress: fnFireButtonPress,\n\tgetTargetView: getTargetView,\n\tgetCurrentPageView: getCurrentPageView,\n\thasTransientContext: fnHasTransientContexts,\n\tupdateRelatedAppsDetails: fnUpdateRelatedAppsDetails,\n\tgetAppComponent: getAppComponent,\n\tgetContextPathProperties: fnGetContextPathProperties,\n\tgetParameterInfo: getParameterInfo,\n\tupdateDataFieldForIBNButtonsVisibility: fnUpdateDataFieldForIBNButtonsVisibility,\n\tgetEntitySetName: getEntitySetName,\n\tgetActionPath: getActionPath,\n\tcomputeDisplayMode: computeDisplayMode,\n\tisStickyEditMode: isStickyEditMode,\n\tgetOperatorsForGuidProperty: getOperatorsForGuidProperty,\n\taddPageContextToSelectionVariant: addPageContextToSelectionVariant,\n\tsetUserDefaults: setUserDefaults,\n\tgetIBNActions: fnGetIBNActions,\n\tgetHeaderFacetItemConfigForExternalNavigation: getHeaderFacetItemConfigForExternalNavigation,\n\tgetSemanticObjectMapping: getSemanticObjectMapping,\n\tsetSemanticObjectMappings: setSemanticObjectMappings,\n\tgetSemanticObjectPromise: fnGetSemanticObjectPromise,\n\tgetSemanticObjectsFromPath: fnGetSemanticObjectsFromPath,\n\twaitForContextRequested: waitForContextRequested,\n\tgetFilterRestrictionsByPath: getFilterRestrictionsByPath,\n\tgetSpecificAllowedExpression: getSpecificAllowedExpression,\n\tgetAdditionalParamsForCreate: getAdditionalParamsForCreate,\n\trequestSingletonProperty: requestSingletonProperty,\n\ttemplateControlFragment: templateControlFragment,\n\tFilterRestrictions: {\n\t\tREQUIRED_PROPERTIES: \"RequiredProperties\",\n\t\tNON_FILTERABLE_PROPERTIES: \"NonFilterableProperties\",\n\t\tALLOWED_EXPRESSIONS: \"FilterAllowedExpressions\"\n\t},\n\tAllowedExpressionsPrio: [\"SingleValue\", \"MultiValue\", \"SingleRange\", \"MultiRange\", \"SearchExpression\", \"MultiRangeOrSearchExpression\"],\n\tnormalizeSearchTerm: normalizeSearchTerm,\n\tsetContextsBasedOnOperationAvailable: setContextsBasedOnOperationAvailable,\n\tsetDynamicActionContexts: setDynamicActionContexts,\n\trequestProperty: requestProperty,\n\tgetParameterPath: getParameterPath,\n\tgetRelatedAppsMenuItems: _getRelatedAppsMenuItems,\n\tgetTranslatedTextFromExpBindingString: _fntranslatedTextFromExpBindingString,\n\tupdateRelateAppsModel: updateRelateAppsModel,\n\tgetSemanticObjectAnnotations: _getSemanticObjectAnnotations,\n\tgetFiltersFromAnnotation: getFiltersFromAnnotation,\n\tcreateRootContext: createRootContext,\n\tupdateMenuButtonVisiblity: updateMenuButtonVisiblity,\n\tisSmallDevice,\n\tgetConverterContextForPath,\n\tgetIsEditable: getIsEditable\n};\n\nexport default CommonUtils;\n"],"mappings":"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","ignoreList":[]}