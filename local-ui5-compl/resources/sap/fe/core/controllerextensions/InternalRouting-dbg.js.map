{"version":3,"names":["InternalRouting","_dec","defineUI5Class","_dec2","methodOverride","_dec3","_dec4","publicExtension","_dec5","extensible","OverrideExecution","After","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","finalExtension","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","Before","_class","_class2","_ControllerExtension","apply","arguments","_inheritsLoose","_proto","prototype","onExit","_oRoutingService","detachRouteMatched","_fnRouteMatchedBound","onInit","_oView","base","getView","_oAppComponent","CommonUtils","getAppComponent","_oPageComponent","Component","getOwnerComponentFor","_oRouter","getRouter","_oRouterProxy","getRouterProxy","Error","getService","then","oRoutingService","_onRouteMatched","bind","attachRouteMatched","_oTargetInformation","getTargetInformationFor","catch","onRouteMatched","onRouteMatchedFinished","onBeforeBinding","_bindingContext","_mParameters","beforeSetBindingContext","bindingContext","oRouting","getController","routing","onAfterBinding","getRootViewController","onContextBoundToView","afterSetBindingContext","deferredCreation","navigateToTarget","oContext","sNavigationTargetName","bPreserveHistory","delayedUsage","oNavigationConfiguration","getNavigationConfiguration","oDetailRoute","detail","sRouteName","route","mParameterMapping","parameters","navigateTo","getHashForNavigation","context","navigationTargetName","navigationConfiguration","detailRoute","routeName","parameterMapping","getHashFromRoute","navigateToRoute","sTargetRouteName","oParameters","navigateToContext","length","undefined","isA","createOnNavigateParameters","mode","activateRouteMatchSynchronization","createContextPromise","createdContext","checkNoHashChange","editable","persistOPScroll","updateFCLLevel","forceFocus","oError","Log","error","callExtension","internalModel","getModel","setProperty","overrideNav","onBeforeNavigation","Promise","resolve","FCLLevel","_getFCLLevel","reason","NavigationReason","RowPress","model","metaModel","getMetaModel","isPathOnDraftRoot","getPath","contextForNavigation","getContextForNavigationWithCollaboration","getContextForNavigationFromTreeOrAnalyticalTable","getViewData","originalContext","ModelHelper","isCollaborationDraftSupported","getProperty","draftOrActiveContext","getDraftOrActiveContext","objectPath","getInvolvedDataModelObjects","getMetaContext","redirectedToNonDraft","targetEntityType","annotations","UI","HeaderInfo","TypeName","name","isFclEnabled","contextToReplaceWith","getKeepAliveContext","replaceWith","EditState","setEditStateDirty","parentBinding","getBinding","aggregation","getAggregation","hierarchyQualifier","group","aggregate","navigateBackFromContext","navigateForwardToContext","getBindingContext","navigateBackFromTransientState","sHash","getHash","includes","navBack","navigateToMessagePage","sErrorMessage","mParameters","navToHash","getDefaultCreateHash","displayErrorPage","isCurrentStateImpactedBy","_isViewPartOfRoute","routeInformation","aTargets","targets","targetName","viewLevel","routeLevel","setTimeout","collaborativeDraft","isConnected","disconnect","_setBindingContext","_buildBindingPath","routeArguments","bindingPattern","navigationParameters","path","replace","deferred","sKey","sValue","bTargetEditable","bActionCreate","oEvent","getParameter","getBindingContextPattern","contextPattern","mArguments","getParameters","oNavigationParameters","bindPromise","oModel","_bindDeferred","EditFlowAction","isOpenInEditMode","_bindPageForEdit","_bindPage","finally","toString","updateUIStateForView","targetPath","createDeferredContext","listBinding","parentContext","data","currentBindingContext","_getBindingContext","hasPendingChanges","resetChanges","_bindPageToContext","technicalPath","resolvePath","isStickyEditMode","isSticky","isStickySessionSupported","activeContext","useContext","_createContext","editFlow","editDocument","_bindPageToPath","resourceBundle","Library","getResourceBundleFor","getText","title","description","message","sTargetPath","oCurrentContext","sCurrentPath","oUseContext","oRootViewController","shouldRefreshContext","isDraftSupported","getSideEffectsService","requestSideEffects","$NavigationPropertyPath","getGroupId","err","bPersistOPScroll","showPlaceholder","bShowPlaceholder","AppStateChanged","RestoreHistory","isEditStateDirty","_refreshBindingContext","oParentListBinding","_setKeepAlive","isExiting","isContextUsedInPages","sPath","oPageComponent","sEntitySet","getEntitySet","sContextPath","getContextPath","oMetaModel","$$groupId","$$updateGroupId","$$patchWithoutSideEffects","oDraftRoot","getObject","oDraftNode","dataModelObject","getContext","alternateAndSecondaryKeys","getAlternateAndSecondaryKeys","targetEntitySet","semanticKeys","Common","SemanticKey","map","key","value","_getKeepAliveContext","propertiesToRequest","concat","requestProperty","requestObject","propertiesToSelect","sMessagesPath","getMessagesPath","push","$select","join","oPreviousBinding","getUpdateGroupId","destroy","oHiddenBinding","bindContext","attachEventOnce","BusyLocker","lock","onDataReceived","getBoundContext","isLocked","unlock","messageHandler","messageHandlingKey","registerToHoldMessages","mParams","errorStatus","status","cause","oResourceBundle","isInitialLoad503Error","shellBack","isDataReceivedError","unHoldKey","showMessages","oBindingContext","oSideEffectsService","sRootContextPath","aNavigationPropertyPaths","aPropertyPaths","oSideEffects","targetProperties","targetEntities","getBindingPaths","oBinding","aDependentBindings","sRelativePath","slice","getDependentBindings","item","i","reduce","targetProperty","index","indexOf","oPreviousContext","oTargetControl","setBindingContext","isKeepAlive","bKeepAlive","fnBeforeDestroy","bRequestMessages","endsWith","sMetaPath","getMetaPath","setKeepAlive","keptAliveSegments","split","additionnalSegments","pop","keptAlivePath","oKeepAliveContext","reverse","additionnalPath","switchFullScreen","oSource","oFCLHelperModel","bIsFullScreen","sNextLayout","getRightmostContext","_routing","layout","warning","closeColumn","oViewData","noPreservationCache","sLayout","draft","processDataLossOrDraftDiscardConfirmation","Function","NavigationType","BackNavigation","messageHandling","removeTransistionMessageForContext","ControllerExtension","_applyDecoratedDescriptor","Object","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["InternalRouting.ts"],"sourcesContent":["import type { EntitySet, EntityType } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, extensible, finalExtension, methodOverride, publicExtension } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport { type NavigationToErrorPageResult, type ShowMessagesParameters } from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport { getDraftOrActiveContext, isPathOnDraftRoot, resolvePath } from \"sap/fe/core/controllerextensions/routing/ContextPathHelper\";\nimport NavigationReason from \"sap/fe/core/controllerextensions/routing/NavigationReason\";\nimport type RouterProxy from \"sap/fe/core/controllerextensions/routing/RouterProxy\";\nimport EditState from \"sap/fe/core/helpers/EditState\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type FclController from \"sap/fe/core/rootView/Fcl.controller\";\nimport type { RoutingNavigationInfo, RoutingNavigationParameters, RoutingService } from \"sap/fe/core/services/RoutingServiceFactory\";\nimport type Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { RoutingTarget } from \"sap/ui/core/Manifest\";\nimport ControllerExtension from \"sap/ui/core/mvc/ControllerExtension\";\nimport OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type Router from \"sap/ui/core/routing/Router\";\nimport type Binding from \"sap/ui/model/Binding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ODataPropertyBinding from \"sap/ui/model/odata/v4/ODataPropertyBinding\";\nimport { getInvolvedDataModelObjects } from \"../converters/MetaModelConverter\";\nimport type { SideEffectsTargetType } from \"../services/SideEffectsServiceFactory\";\nimport messageHandling from \"./messageHandler/messageHandling\";\n\ntype RouteInformation = {\n\ttargets?: unknown[];\n\trouteLevel: number;\n};\n/**\n * {@link sap.ui.core.mvc.ControllerExtension Controller extension}\n * @since 1.74.0\n */\n@defineUI5Class(\"sap.fe.core.controllerextensions.InternalRouting\")\nclass InternalRouting extends ControllerExtension {\n\tprivate base!: PageController;\n\n\tprivate _oView!: FEView;\n\n\tprivate _oAppComponent!: AppComponent;\n\n\tprivate _oPageComponent!: EnhanceWithUI5<TemplateComponent> | null;\n\n\tprivate _oRouter!: Router;\n\n\tprivate _oRoutingService!: RoutingService;\n\n\tprivate _oRouterProxy!: RouterProxy;\n\n\tprivate _fnRouteMatchedBound!: Function;\n\n\tprotected _oTargetInformation!: RoutingTarget;\n\n\t@methodOverride()\n\tonExit(): void {\n\t\tif (this._oRoutingService) {\n\t\t\tthis._oRoutingService.detachRouteMatched(this._fnRouteMatchedBound);\n\t\t}\n\t}\n\n\t@methodOverride()\n\tonInit(): void {\n\t\tthis._oView = this.base.getView();\n\t\tthis._oAppComponent = CommonUtils.getAppComponent(this._oView);\n\t\tthis._oPageComponent = Component.getOwnerComponentFor(this._oView) as EnhanceWithUI5<TemplateComponent>;\n\t\tthis._oRouter = this._oAppComponent.getRouter();\n\t\tthis._oRouterProxy = this._oAppComponent.getRouterProxy();\n\n\t\tif (!this._oAppComponent || !this._oPageComponent) {\n\t\t\tthrow new Error(\"Failed to initialize controler extension 'sap.fe.core.controllerextesions.InternalRouting\");\n\t\t}\n\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tif (this._oAppComponent === this._oPageComponent) {\n\t\t\t// The view isn't hosted in a dedicated UIComponent, but directly in the app\n\t\t\t// --> just keep the view\n\t\t\tthis._oPageComponent = null;\n\t\t}\n\n\t\tthis._oAppComponent\n\t\t\t.getService(\"routingService\")\n\t\t\t.then((oRoutingService: RoutingService) => {\n\t\t\t\tthis._oRoutingService = oRoutingService;\n\t\t\t\tthis._fnRouteMatchedBound = this._onRouteMatched.bind(this);\n\t\t\t\tthis._oRoutingService.attachRouteMatched({}, this._fnRouteMatchedBound);\n\t\t\t\tthis._oTargetInformation = oRoutingService.getTargetInformationFor(this._oPageComponent || this._oView)! ?? {};\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(function () {\n\t\t\t\tthrow new Error(\"This controller extension cannot work without a 'routingService' on the main AppComponent\");\n\t\t\t});\n\t}\n\n\t/**\n\t * Triggered every time this controller is a navigation target.\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonRouteMatched(): void {\n\t\t/**/\n\t}\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonRouteMatchedFinished(): void {\n\t\t/**/\n\t}\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonBeforeBinding(_bindingContext: Context | null, _mParameters?: unknown): void {}\n\n\tbeforeSetBindingContext(bindingContext: Context | null, _mParameters?: unknown): void {\n\t\tthis.onBeforeBinding(bindingContext, _mParameters);\n\t\tconst oRouting = this.base.getView().getController().routing;\n\t\tif (oRouting && oRouting.onBeforeBinding) {\n\t\t\toRouting.onBeforeBinding(bindingContext);\n\t\t}\n\t}\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonAfterBinding(bindingContext: Context | null, _mParameters?: unknown): void {\n\t\tthis._oAppComponent.getRootViewController().onContextBoundToView(bindingContext);\n\t}\n\n\tafterSetBindingContext(bindingContext: Context | null, _mParameters?: object): void {\n\t\tthis.onAfterBinding(bindingContext, { ..._mParameters, deferredCreation: true });\n\t\tconst oRouting = this.base.getView().getController().routing;\n\t\tif (oRouting && oRouting.onAfterBinding) {\n\t\t\toRouting.onAfterBinding(bindingContext);\n\t\t}\n\t}\n\n\t///////////////////////////////////////////////////////////\n\t// Methods triggering a navigation after a user action\n\t// (e.g. click on a table row, button, etc...)\n\t///////////////////////////////////////////////////////////\n\n\t/**\n\t * Navigates to the specified navigation target.\n\t * @param oContext Context instance\n\t * @param sNavigationTargetName Name of the navigation target\n\t * @param bPreserveHistory True to force the new URL to be added at the end of the browser history (no replace)\n\t * @param delayedUsage True to return a function for executing the navigation, False to execute the navigation immediately\n\t */\n\tasync navigateToTarget(\n\t\toContext: Context,\n\t\tsNavigationTargetName: string,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: true\n\t): Promise<() => void>;\n\n\t@publicExtension()\n\tasync navigateToTarget(\n\t\toContext: Context,\n\t\tsNavigationTargetName: string,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: boolean\n\t): Promise<(() => void) | void> {\n\t\tconst oNavigationConfiguration =\n\t\t\tthis._oPageComponent &&\n\t\t\tthis._oPageComponent.getNavigationConfiguration &&\n\t\t\tthis._oPageComponent.getNavigationConfiguration(sNavigationTargetName);\n\t\tif (oNavigationConfiguration) {\n\t\t\tconst oDetailRoute = oNavigationConfiguration.detail;\n\t\t\tconst sRouteName = oDetailRoute.route;\n\t\t\tconst mParameterMapping = oDetailRoute.parameters;\n\t\t\treturn this._oRoutingService.navigateTo(oContext, sRouteName, mParameterMapping, bPreserveHistory, delayedUsage);\n\t\t} else {\n\t\t\treturn this._oRoutingService.navigateTo(oContext, null, null, bPreserveHistory, delayedUsage);\n\t\t}\n\t}\n\n\t/**\n\t * Get the Hash we're navigating to.\n\t * @param context Context instance\n\t * @param navigationTargetName Name of the navigation target\n\t * @returns The Hash we're navigating to\n\t */\n\tasync getHashForNavigation(context: Context, navigationTargetName: string): Promise<string> {\n\t\tconst navigationConfiguration = this?._oPageComponent?.getNavigationConfiguration(navigationTargetName);\n\t\tif (navigationConfiguration) {\n\t\t\tconst detailRoute = navigationConfiguration.detail;\n\t\t\tconst routeName = detailRoute.route;\n\t\t\tconst parameterMapping = detailRoute.parameters;\n\t\t\treturn this._oRoutingService.getHashFromRoute(context, routeName, parameterMapping);\n\t\t} else {\n\t\t\treturn this._oRoutingService.getHashFromRoute(context, null);\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to the specified navigation target route.\n\t * @param sTargetRouteName Name of the target route\n\t * @param [oParameters] Parameters to be used with route to create the target hash\n\t * @returns Promise that is resolved when the navigation is finalized\n\t */\n\t@publicExtension()\n\tasync navigateToRoute(sTargetRouteName: string, oParameters?: object): Promise<boolean> {\n\t\treturn this._oRoutingService.navigateToRoute(sTargetRouteName, oParameters);\n\t}\n\n\t/**\n\t * Navigates to a specific context.\n\t * @param context The context to be navigated to\n\t * @param parameters Optional navigation parameters\n\t * @returns Promise resolved to 'true' when the navigation has been triggered, 'false' if the navigation did not happen\n\t */\n\tasync navigateToContext(context: Context | ODataListBinding, parameters: RoutingNavigationParameters = {}): Promise<boolean> {\n\t\tif (context.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\tif (parameters.createOnNavigateParameters?.mode === \"Async\") {\n\t\t\t\t// the context is either created async (Promise)\n\t\t\t\t// We need to activate the routeMatchSynchro on the RouterProxy to avoid that\n\t\t\t\t// the subsequent call to navigateToContext conflicts with the current one\n\t\t\t\tthis._oRouterProxy.activateRouteMatchSynchronization();\n\n\t\t\t\tparameters.createOnNavigateParameters.createContextPromise\n\t\t\t\t\t.then(async (createdContext) => {\n\t\t\t\t\t\t// once the context is returned we navigate into it\n\t\t\t\t\t\treturn this.navigateToContext(createdContext, {\n\t\t\t\t\t\t\tcheckNoHashChange: parameters.checkNoHashChange,\n\t\t\t\t\t\t\teditable: parameters.editable,\n\t\t\t\t\t\t\tpersistOPScroll: parameters.persistOPScroll,\n\t\t\t\t\t\t\tupdateFCLLevel: parameters.updateFCLLevel,\n\t\t\t\t\t\t\tforceFocus: parameters.forceFocus\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\t\tLog.error(\"Error with the async context\", oError as string);\n\t\t\t\t\t});\n\t\t\t} else if (parameters.createOnNavigateParameters?.mode !== \"Deferred\") {\n\t\t\t\t// Navigate to a list binding not yet supported\n\t\t\t\tthrow \"navigation to a list binding is not yet supported\";\n\t\t\t}\n\t\t} else if (parameters.callExtension) {\n\t\t\tconst internalModel = this._oView.getModel(\"internal\");\n\t\t\tinternalModel.setProperty(\"/paginatorCurrentContext\", null);\n\n\t\t\t// Storing the selected context to use it in internal route navigation if neccessary.\n\t\t\tconst overrideNav = await this.base.getView().getController().routing.onBeforeNavigation({ bindingContext: context });\n\t\t\tif (overrideNav) {\n\t\t\t\tinternalModel.setProperty(\"/paginatorCurrentContext\", context);\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t}\n\n\t\tparameters.FCLLevel = this._getFCLLevel();\n\n\t\t// In case we're navigating from a table in a ListReport with draft, there's special handling for collaboration and tree table.\n\t\t// We may not navigate to the context the user clicked on.\n\t\tif (parameters.reason === NavigationReason.RowPress && context.isA<Context>(\"sap.ui.model.odata.v4.Context\")) {\n\t\t\tconst model = context.getModel();\n\t\t\tconst metaModel = model.getMetaModel();\n\n\t\t\tif (isPathOnDraftRoot(context.getPath(), metaModel)) {\n\t\t\t\tconst contextForNavigation =\n\t\t\t\t\t(await this.getContextForNavigationWithCollaboration(context, parameters)) ??\n\t\t\t\t\t(await this.getContextForNavigationFromTreeOrAnalyticalTable(context));\n\n\t\t\t\t// Use another instance for navigation\n\t\t\t\tif (contextForNavigation) {\n\t\t\t\t\tcontext = contextForNavigation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._oRoutingService.navigateToContext(context, parameters, this._oView.getViewData(), this._oTargetInformation);\n\t}\n\n\t/**\n\t * Retrieves the context to use for navigation in case we're navigating to a draft instance from the LR and we're in a collaboration application.\n\t * @param originalContext\n\t * @param parameters\n\t * @returns The context to use for navigation if it's different from the original context, null otherwise\n\t */\n\tprivate async getContextForNavigationWithCollaboration(\n\t\toriginalContext: Context,\n\t\tparameters: RoutingNavigationParameters\n\t): Promise<Context | null> {\n\t\tconst model = originalContext.getModel();\n\t\tconst metaModel = model.getMetaModel();\n\t\tif (ModelHelper.isCollaborationDraftSupported(metaModel) && originalContext.getProperty(\"IsActiveEntity\") === false) {\n\t\t\t// If we're in a collaboration application, and we're navigating to a draft instance from the LR,\n\t\t\t// We want to check if the draft instance exists first. Otherwise we navigate to the original (draft) version.\n\t\t\tconst draftOrActiveContext = await getDraftOrActiveContext(originalContext);\n\n\t\t\tif (draftOrActiveContext !== null && originalContext.getPath() !== draftOrActiveContext.getPath()) {\n\t\t\t\t// Notify the user that we have navigated to the saved instance\n\t\t\t\tconst objectPath = getInvolvedDataModelObjects(metaModel.getMetaContext(originalContext.getPath()));\n\t\t\t\tparameters.redirectedToNonDraft =\n\t\t\t\t\t(objectPath.targetEntityType.annotations.UI?.HeaderInfo?.TypeName as unknown as string) ??\n\t\t\t\t\tobjectPath.targetEntityType.name;\n\n\t\t\t\tif (this._oAppComponent.getRootViewController().isFclEnabled()) {\n\t\t\t\t\t// FCL: replace the context in the list binding\n\t\t\t\t\tconst contextToReplaceWith = model.getKeepAliveContext(draftOrActiveContext.getPath());\n\t\t\t\t\toriginalContext.replaceWith(contextToReplaceWith);\n\t\t\t\t} else {\n\t\t\t\t\t// Fullscreen: trigger a refresh of the list binding\n\t\t\t\t\tEditState.setEditStateDirty();\n\t\t\t\t}\n\n\t\t\t\t// Use the saved instance for navigation\n\t\t\t\treturn draftOrActiveContext;\n\t\t\t}\n\t\t}\n\n\t\t// Use the original context\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieves the context to use for navigation in case we're navigating to an active instance from the LR and we're in a Tree or Analytical table.\n\t * @param originalContext\n\t * @returns The context to use for navigation if it's different from the original context, null otherwise\n\t */\n\tprivate async getContextForNavigationFromTreeOrAnalyticalTable(originalContext: Context): Promise<Context | null> {\n\t\tconst parentBinding = originalContext.getBinding();\n\t\tif (!parentBinding.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t// The context doesn't belong to a list binding\n\t\t\treturn null;\n\t\t}\n\t\tconst aggregation = parentBinding.getAggregation() as\n\t\t\t| { hierarchyQualifier?: string; group?: object; aggregate?: object }\n\t\t\t| undefined;\n\t\tif (!aggregation?.hierarchyQualifier && !aggregation?.group && !aggregation?.aggregate) {\n\t\t\t// The context doesn't belong to a hierarchical/analytical list binding\n\t\t\treturn null;\n\t\t}\n\n\t\tif (originalContext.getProperty(\"IsActiveEntity\") === true && originalContext.getProperty(\"HasDraftEntity\") === true) {\n\t\t\t// If we're in a Tree/Analytical table, and we're navigating to an active instance instance that has a draft,\n\t\t\t// --> We try to navigate to the draft instance (if it still exists)\n\t\t\tconst draftOrActiveContext = await getDraftOrActiveContext(originalContext);\n\n\t\t\tif (draftOrActiveContext !== null && originalContext.getPath() !== draftOrActiveContext.getPath()) {\n\t\t\t\t// Use the draft instance for navigation\n\t\t\t\treturn draftOrActiveContext;\n\t\t\t}\n\t\t}\n\n\t\t// Use the original context\n\t\treturn null;\n\t}\n\n\t/**\n\t * Navigates backwards from a context.\n\t * @param context Context to be navigated from\n\t * @param [parameters] Optional navigation parameters\n\t * @returns Promise resolved when the navigation has been triggered\n\t */\n\tasync navigateBackFromContext(context: Context, parameters: RoutingNavigationParameters = {}): Promise<boolean> {\n\t\tparameters.updateFCLLevel = -1;\n\n\t\treturn this.navigateToContext(context, parameters);\n\t}\n\n\t/**\n\t * Navigates forwards to a context.\n\t * @param context Context to be navigated to\n\t * @param parameters Optional navigation parameters\n\t * @returns Promise resolved when the navigation has been triggered\n\t */\n\tasync navigateForwardToContext(context: Context | ODataListBinding, parameters: RoutingNavigationParameters = {}): Promise<boolean> {\n\t\tif (this._oView.getBindingContext(\"internal\")?.getProperty(\"messageFooterContainsErrors\") === true) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tparameters.updateFCLLevel = 1;\n\n\t\treturn this.navigateToContext(context, parameters);\n\t}\n\n\t/**\n\t * Navigates back in history if the current hash corresponds to a transient state.\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tnavigateBackFromTransientState(): void {\n\t\tconst sHash = this._oRouterProxy.getHash();\n\n\t\t// if triggered while navigating to (...), we need to navigate back\n\t\tif (sHash.includes(\"(...)\")) {\n\t\t\tthis._oRouterProxy.navBack();\n\t\t}\n\t}\n\n\t/**\n\t * Displays an error (illustrated message) in the page.\n\t * @param sErrorMessage\n\t * @param mParameters\n\t * @returns A promise\n\t */\n\tasync navigateToMessagePage(sErrorMessage: string, mParameters: NavigationToErrorPageResult): Promise<boolean> {\n\t\tmParameters = mParameters || {};\n\t\tif (this._oRouterProxy.getHash().includes(\"i-action=create\") || this._oRouterProxy.getHash().includes(\"i-action=autoCreate\")) {\n\t\t\treturn this._oRouterProxy.navToHash(this._oRoutingService.getDefaultCreateHash());\n\t\t} else {\n\t\t\treturn this._oAppComponent.getRootViewController().displayErrorPage(sErrorMessage, mParameters, this._getFCLLevel());\n\t\t}\n\t}\n\n\t/**\n\t * Checks if one of the current views on the screen is bound to a given context.\n\t * @param oContext\n\t * @returns `true` if the state is impacted by the context\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tisCurrentStateImpactedBy(oContext: Context): boolean {\n\t\treturn this._oRoutingService.isCurrentStateImpactedBy(oContext);\n\t}\n\n\t_isViewPartOfRoute(routeInformation?: RouteInformation): boolean {\n\t\tconst aTargets = routeInformation?.targets;\n\t\tif (!aTargets || !aTargets.includes(this._oTargetInformation.targetName)) {\n\t\t\t// If the target for this view has a view level greater than the route level, it means this view comes \"after\" the route\n\t\t\t// in terms of navigation.\n\t\t\t// In such case, we remove its binding context, to avoid this view to have data if we navigate to it later on\n\t\t\t// This is done in a timeout to allow for focusout events to be processed before properly in collaborative draft\n\t\t\tif ((this._oTargetInformation.viewLevel ?? 0) >= (routeInformation?.routeLevel ?? 0)) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (routeInformation?.routeLevel === 0 && this.base.collaborativeDraft.isConnected()) {\n\t\t\t\t\t\t// The route has level 0 --> we need to leave the collaboration session as no OP is displayed\n\t\t\t\t\t\tthis.base.collaborativeDraft.disconnect();\n\t\t\t\t\t}\n\t\t\t\t\tthis._setBindingContext(null); // This also call setKeepAlive(false) on the current context\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t_buildBindingPath(\n\t\trouteArguments: Record<string, string | object>,\n\t\tbindingPattern: string,\n\t\tnavigationParameters: RoutingNavigationInfo\n\t): { path: string; deferred: boolean } {\n\t\tlet path = bindingPattern.replace(\":?query:\", \"\");\n\t\tlet deferred = false;\n\n\t\tfor (const sKey in routeArguments) {\n\t\t\tconst sValue = routeArguments[sKey];\n\n\t\t\tif (typeof sValue !== \"string\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (sValue === \"...\" && bindingPattern.includes(`{${sKey}}`)) {\n\t\t\t\tdeferred = true;\n\t\t\t\t// Sometimes in preferredMode = create, the edit button is shown in background when the\n\t\t\t\t// action parameter dialog shows up, setting bTargetEditable passes editable as true\n\t\t\t\t// to onBeforeBinding in _bindTargetPage function\n\t\t\t\tnavigationParameters.bTargetEditable = true;\n\t\t\t}\n\t\t\tpath = path.replace(`{${sKey}}`, sValue);\n\t\t}\n\t\tif ((routeArguments[\"?query\"] as Record<string, string>)?.[\"i-action\"]?.includes(\"create\")) {\n\t\t\tnavigationParameters.bActionCreate = true;\n\t\t}\n\n\t\t// the binding path is always absolute\n\t\tif (path && path[0] !== \"/\") {\n\t\t\tpath = `/${path}`;\n\t\t}\n\n\t\treturn { path, deferred };\n\t}\n\n\t///////////////////////////////////////////////////////////\n\t// Methods to bind the page when a route is matched\n\t///////////////////////////////////////////////////////////\n\n\t/**\n\t * Called when a route is matched.\n\t * Builds the binding context from the navigation parameters, and bind the page accordingly.\n\t * @param oEvent\n\t */\n\t_onRouteMatched(\n\t\toEvent: Event<{\n\t\t\trouteInformation?: RouteInformation;\n\t\t\troutePattern: string;\n\t\t\tnavigationInfo: RoutingNavigationInfo;\n\t\t\targuments: Record<string, string | object>;\n\t\t}>\n\t): void {\n\t\t// Check if the target for this view is part of the event targets (i.e. is a target for the current route).\n\t\t// If not, we don't need to bind it --> return\n\t\tif (!this._isViewPartOfRoute(oEvent.getParameter(\"routeInformation\"))) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Retrieve the binding context pattern\n\t\tlet bindingPattern;\n\t\tif (this._oPageComponent && this._oPageComponent.getBindingContextPattern) {\n\t\t\tbindingPattern = this._oPageComponent.getBindingContextPattern();\n\t\t}\n\t\tbindingPattern = bindingPattern || this._oTargetInformation.contextPattern;\n\n\t\tif (bindingPattern === null || bindingPattern === undefined) {\n\t\t\t// Don't do this if we already got sTarget == '', which is a valid target pattern\n\t\t\tbindingPattern = oEvent.getParameter(\"routePattern\");\n\t\t}\n\n\t\t// Replace the parameters by their values in the binding context pattern\n\t\tconst mArguments = oEvent.getParameters().arguments;\n\t\tconst oNavigationParameters = oEvent.getParameter(\"navigationInfo\");\n\t\tconst { path, deferred } = this._buildBindingPath(mArguments, bindingPattern, oNavigationParameters);\n\n\t\tthis.onRouteMatched();\n\n\t\tlet bindPromise;\n\t\tconst oModel = this._oView.getModel();\n\t\tif (deferred) {\n\t\t\tbindPromise = this._bindDeferred(path, oNavigationParameters);\n\t\t} else if (\n\t\t\toNavigationParameters.reason !== NavigationReason.EditFlowAction &&\n\t\t\t(this._oRouterProxy.getHash().includes(\"i-action=edit\") || (this._oPageComponent?.isOpenInEditMode?.() ?? false))\n\t\t) {\n\t\t\tbindPromise = this._bindPageForEdit(path, oModel, oNavigationParameters);\n\t\t} else {\n\t\t\tbindPromise = this._bindPage(path, oModel, oNavigationParameters);\n\t\t}\n\n\t\tbindPromise\n\t\t\t.finally(() => {\n\t\t\t\tthis.onRouteMatchedFinished();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tLog.error(\"Error during page binding \" + error.toString());\n\t\t\t});\n\n\t\tthis._oAppComponent.getRootViewController().updateUIStateForView(this._oView, this._getFCLLevel());\n\t}\n\n\t/**\n\t * Deferred binding (during object creation).\n\t * @param targetPath The path to the deffered context\n\t * @param navigationParameters Navigation parameters\n\t * @returns A promise\n\t */\n\tasync _bindDeferred(targetPath: string, navigationParameters: RoutingNavigationInfo): Promise<void> {\n\t\tthis.beforeSetBindingContext(null, { editable: navigationParameters.bTargetEditable });\n\n\t\tif (!navigationParameters.createOnNavigateParameters || navigationParameters.createOnNavigateParameters.mode === \"Deferred\") {\n\t\t\t// either the context shall be created in the target page (deferred Context) or it shall\n\t\t\t// be created async but the user refreshed the page / bookmarked this URL\n\t\t\t// TODO: currently the target component creates this document but we shall move this to\n\t\t\t// a central place\n\t\t\tif (this._oPageComponent && this._oPageComponent.createDeferredContext) {\n\t\t\t\tthis._oPageComponent.createDeferredContext(\n\t\t\t\t\ttargetPath,\n\t\t\t\t\tnavigationParameters.createOnNavigateParameters?.listBinding,\n\t\t\t\t\tnavigationParameters.createOnNavigateParameters?.parentContext,\n\t\t\t\t\tnavigationParameters.createOnNavigateParameters?.data,\n\t\t\t\t\t!!navigationParameters.bActionCreate\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst currentBindingContext = this._getBindingContext();\n\t\tif (currentBindingContext?.hasPendingChanges()) {\n\t\t\t// For now remove the pending changes to avoid the model raises errors and the object page is at least bound\n\t\t\t// Ideally the user should be asked for\n\t\t\tcurrentBindingContext.getBinding().resetChanges();\n\t\t}\n\n\t\t// remove the context to avoid showing old data\n\t\tthis._setBindingContext(null);\n\n\t\tthis.afterSetBindingContext(null);\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sets the binding context for the page from a path, if the app is started with the preferred mode edit.\n\t *\n\t * If the context points to an active entity, it is directly converted to draft using the EditFlow controller extension.\n\t * @param targetPath\n\t * @param model\n\t * @param navigationParameters\n\t * @returns A Promise resolved once the binding has been set on the page\n\t */\n\tasync _bindPageForEdit(targetPath: string, model: ODataModel, navigationParameters: RoutingNavigationInfo): Promise<void | Context> {\n\t\tif (targetPath === \"\") {\n\t\t\treturn Promise.resolve(this._bindPageToContext(null, model, navigationParameters));\n\t\t}\n\n\t\ttry {\n\t\t\tconst technicalPath: string = await resolvePath(targetPath, model, this._oRoutingService, this._oRouter);\n\t\t\tconst metaModel = model.getMetaModel();\n\t\t\t// check for sticky & sticky edit session\n\t\t\tconst isStickyEditMode = CommonUtils.isStickyEditMode(this.base.getView());\n\t\t\tconst isSticky = ModelHelper.isStickySessionSupported(metaModel);\n\t\t\tif (technicalPath.includes(\"IsActiveEntity=true\") || (isSticky && !isStickyEditMode)) {\n\t\t\t\t// create context or use the one the user clicked on\n\t\t\t\tconst activeContext =\n\t\t\t\t\tnavigationParameters.useContext?.getPath() === technicalPath\n\t\t\t\t\t\t? navigationParameters.useContext\n\t\t\t\t\t\t: this._createContext(technicalPath, model);\n\n\t\t\t\t// edit document\n\t\t\t\treturn await this.base.editFlow.editDocument(activeContext);\n\t\t\t} else {\n\t\t\t\treturn this._bindPageToPath(technicalPath, model, navigationParameters);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\n\t\t\tthis.navigateToMessagePage(resourceBundle.getText(\"C_COMMON_SAPFE_DATA_RECEIVED_ERROR\"), {\n\t\t\t\ttitle: resourceBundle.getText(\"C_COMMON_SAPFE_ERROR\"),\n\t\t\t\tdescription: (error as Error).message\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Sets the binding context of the page from a path.\n\t * @param targetPath The path to the context\n\t * @param model The OData model\n\t * @param navigationParameters Navigation parameters\n\t * @returns A Promise resolved once the binding on the page is set\n\t */\n\tasync _bindPage(targetPath: string, model: ODataModel, navigationParameters: RoutingNavigationInfo): Promise<void> {\n\t\tif (targetPath === \"\") {\n\t\t\treturn Promise.resolve(this._bindPageToContext(null, model, navigationParameters));\n\t\t}\n\n\t\treturn resolvePath(targetPath, model, this._oRoutingService, this._oRouter)\n\t\t\t.then((technicalPath: string): void => {\n\t\t\t\treturn this._bindPageToPath(technicalPath, model, navigationParameters);\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\t// Error handling for erroneous metadata request\n\t\t\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\n\t\t\t\tthis.navigateToMessagePage(resourceBundle.getText(\"C_COMMON_SAPFE_DATA_RECEIVED_ERROR\"), {\n\t\t\t\t\ttitle: resourceBundle.getText(\"C_COMMON_SAPFE_ERROR\"),\n\t\t\t\t\tdescription: (error as Error).message\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * Sets the binding context for the page from a path.\n\t * @param sTargetPath The path to build the context (this is a path in the model, so only technical keys are allowed).\n\t * @param oModel The OData model\n\t * @param oNavigationParameters Navigation parameters\n\t */\n\t_bindPageToPath(sTargetPath: string, oModel: ODataModel, oNavigationParameters: RoutingNavigationInfo): void {\n\t\tconst oCurrentContext = this._getBindingContext(),\n\t\t\tsCurrentPath = oCurrentContext && oCurrentContext.getPath(),\n\t\t\toUseContext = oNavigationParameters.useContext as Context | undefined | null;\n\n\t\tconst oRootViewController = this._oAppComponent.getRootViewController();\n\n\t\t// We set the binding context only if it's different from the current one\n\t\t// or if we have a context already selected\n\t\tif (oUseContext && oUseContext.getPath() === sTargetPath) {\n\t\t\tif (oUseContext !== oCurrentContext) {\n\t\t\t\tlet shouldRefreshContext = false;\n\t\t\t\t// We already have the context to be used, and it's not the current one\n\n\t\t\t\t// In case of FCL, if we're reusing a context from a table (through navigation), we refresh it to avoid outdated data\n\t\t\t\t// We don't wait for the refresh to be completed (requestRefresh), so that the corresponding query goes into the same\n\t\t\t\t// batch as the ones from controls in the page.\n\t\t\t\tif (oRootViewController.isFclEnabled() && oNavigationParameters.reason === NavigationReason.RowPress) {\n\t\t\t\t\tconst metaModel = oUseContext.getModel().getMetaModel();\n\t\t\t\t\tif (!oUseContext.getBinding().hasPendingChanges() && ModelHelper.isDraftSupported(metaModel, oUseContext.getPath())) {\n\t\t\t\t\t\tshouldRefreshContext = true;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tthis.base.collaborativeDraft.isConnected() ||\n\t\t\t\t\t\t(ModelHelper.isDraftSupported(metaModel, oUseContext.getPath()) &&\n\t\t\t\t\t\t\tModelHelper.isCollaborationDraftSupported(metaModel))\n\t\t\t\t\t) {\n\t\t\t\t\t\t// If there are pending changes but we're in collaboration draft, we force the refresh (discarding pending changes) as we need to have the latest version.\n\t\t\t\t\t\t// When navigating from LR to OP, the view is not connected yet --> check if we're in draft with collaboration from the metamodel\n\t\t\t\t\t\toUseContext.getBinding().resetChanges();\n\t\t\t\t\t\tshouldRefreshContext = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._bindPageToContext(oUseContext, oModel, oNavigationParameters);\n\t\t\t\tif (shouldRefreshContext) {\n\t\t\t\t\tthis._oAppComponent\n\t\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t\t.requestSideEffects([{ $NavigationPropertyPath: \"\" }], oUseContext, oUseContext.getBinding().getGroupId())\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tLog.error(`Cannot refresh context: ${err}`);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (oNavigationParameters.reason === NavigationReason.EditFlowAction) {\n\t\t\t\t// We have the same context but an editflow action happened (e.g. CancelDocument in sticky mode)\n\t\t\t\t// --> We need to call onBefore/AfterBinding to refresh the object page properly\n\t\t\t\tthis.beforeSetBindingContext(oUseContext, {\n\t\t\t\t\teditable: oNavigationParameters.bTargetEditable,\n\t\t\t\t\tlistBinding: oUseContext.getBinding(),\n\t\t\t\t\tbPersistOPScroll: oNavigationParameters.bPersistOPScroll,\n\t\t\t\t\treason: oNavigationParameters.reason,\n\t\t\t\t\tshowPlaceholder: oNavigationParameters.bShowPlaceholder\n\t\t\t\t});\n\t\t\t\tthis.afterSetBindingContext(oUseContext, { redirectedToNonDraft: oNavigationParameters?.redirectedToNonDraft });\n\t\t\t}\n\t\t} else if (sCurrentPath !== sTargetPath || oNavigationParameters.reason === NavigationReason.EditFlowAction) {\n\t\t\t// We need to create a new context for its path\n\t\t\tthis._bindPageToContext(this._createContext(sTargetPath, oModel), oModel, oNavigationParameters);\n\t\t} else if (\n\t\t\toNavigationParameters.reason !== NavigationReason.AppStateChanged &&\n\t\t\toNavigationParameters.reason !== NavigationReason.RestoreHistory &&\n\t\t\tEditState.isEditStateDirty() &&\n\t\t\t!oRootViewController.isFclEnabled() &&\n\t\t\toCurrentContext\n\t\t) {\n\t\t\tthis._refreshBindingContext(oCurrentContext);\n\t\t}\n\t}\n\n\t/**\n\t * Binds the page to a context.\n\t * @param oContext Context to be bound\n\t * @param oModel The OData model\n\t * @param oNavigationParameters Navigation parameters\n\t */\n\t_bindPageToContext(oContext: Context | null, oModel: ODataModel, oNavigationParameters: RoutingNavigationInfo): void {\n\t\tif (!oContext) {\n\t\t\tthis.beforeSetBindingContext(null);\n\t\t\tthis.afterSetBindingContext(null);\n\t\t\treturn;\n\t\t}\n\n\t\tconst oParentListBinding = oContext.getBinding();\n\t\tconst oRootViewController = this._oAppComponent.getRootViewController();\n\t\tif (oRootViewController.isFclEnabled()) {\n\t\t\tif (!oParentListBinding || !oParentListBinding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\t// if the parentBinding is not a listBinding, we create a new context\n\t\t\t\toContext = this._createContext(oContext.getPath(), oModel);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis._setKeepAlive(\n\t\t\t\t\toContext,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (oContext && !this._oAppComponent.isExiting && oRootViewController.isContextUsedInPages(oContext)) {\n\t\t\t\t\t\t\tthis.navigateBackFromContext(oContext);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttrue // Load messages, otherwise they don't get refreshed later, e.g. for side effects\n\t\t\t\t);\n\t\t\t} catch (oError) {\n\t\t\t\t// setKeepAlive throws an exception if the parent listbinding doesn't have $$ownRequest=true\n\t\t\t\t// This case for custom fragments is supported, but an error is logged to make the lack of synchronization apparent\n\t\t\t\tLog.error(\n\t\t\t\t\t`View for ${oContext.getPath()} won't be synchronized. Parent listBinding must have binding parameter $$ownRequest=true`\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (!oParentListBinding || oParentListBinding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t// We need to recreate the context otherwise we get errors\n\t\t\toContext = this._createContext(oContext.getPath(), oModel);\n\t\t}\n\n\t\t// Set the binding context with the proper before/after callbacks\n\t\tthis.beforeSetBindingContext(oContext, {\n\t\t\teditable: oNavigationParameters.bTargetEditable,\n\t\t\tlistBinding: oParentListBinding,\n\t\t\tbPersistOPScroll: oNavigationParameters.bPersistOPScroll,\n\t\t\treason: oNavigationParameters.reason,\n\t\t\tshowPlaceholder: oNavigationParameters.bShowPlaceholder\n\t\t});\n\n\t\tthis._setBindingContext(oContext);\n\t\tthis.afterSetBindingContext(oContext, { redirectedToNonDraft: oNavigationParameters?.redirectedToNonDraft });\n\t}\n\n\t/**\n\t * Creates a context from a path.\n\t * @param sPath The path\n\t * @param oModel The OData model\n\t * @returns The created context\n\t */\n\t_createContext(sPath: string, oModel: ODataModel): Context {\n\t\tconst oPageComponent = this._oPageComponent,\n\t\t\tsEntitySet = oPageComponent && oPageComponent.getEntitySet && oPageComponent.getEntitySet(),\n\t\t\tsContextPath =\n\t\t\t\t(oPageComponent && oPageComponent.getContextPath && oPageComponent.getContextPath()) || (sEntitySet && `/${sEntitySet}`),\n\t\t\toMetaModel = oModel.getMetaModel(),\n\t\t\tmParameters: BindContextParameters = {\n\t\t\t\t$$groupId: \"$auto.Heroes\",\n\t\t\t\t$$updateGroupId: \"$auto\",\n\t\t\t\t$$patchWithoutSideEffects: true\n\t\t\t};\n\n\t\t// In case of draft: $select the state flags (HasActiveEntity, HasDraftEntity, and IsActiveEntity) and semantic keys (for creating the semantic URL)\n\t\tconst oDraftRoot = oMetaModel.getObject(`${sContextPath}@com.sap.vocabularies.Common.v1.DraftRoot`);\n\t\tconst oDraftNode = oMetaModel.getObject(`${sContextPath}@com.sap.vocabularies.Common.v1.DraftNode`);\n\t\tconst dataModelObject = sContextPath\n\t\t\t? oMetaModel.getContext(sContextPath) && getInvolvedDataModelObjects(oMetaModel.getContext(sContextPath))\n\t\t\t: null;\n\t\tconst alternateAndSecondaryKeys = ModelHelper.getAlternateAndSecondaryKeys(\n\t\t\tdataModelObject?.targetEntityType as EntityType,\n\t\t\tdataModelObject?.targetEntitySet as EntitySet\n\t\t);\n\t\tconst semanticKeys = oDraftRoot\n\t\t\t? dataModelObject?.targetEntityType.annotations.Common?.SemanticKey?.map((key) => key.value) ?? []\n\t\t\t: [];\n\t\tconst oRootViewController = this._oAppComponent.getRootViewController();\n\t\tif (oRootViewController.isFclEnabled()) {\n\t\t\tconst oContext = this._getKeepAliveContext(oModel, sPath, false, mParameters);\n\t\t\tif (!oContext) {\n\t\t\t\tthrow new Error(`Cannot create keepAlive context ${sPath}`);\n\t\t\t} else if (oDraftRoot || oDraftNode) {\n\t\t\t\tconst propertiesToRequest = [\"HasActiveEntity\", \"HasDraftEntity\", \"IsActiveEntity\"].concat(semanticKeys);\n\t\t\t\tif (oContext.getProperty(\"IsActiveEntity\") === undefined) {\n\t\t\t\t\toContext.requestProperty(propertiesToRequest);\n\t\t\t\t\tif (oDraftRoot) {\n\t\t\t\t\t\toContext.requestObject(\"DraftAdministrativeData\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// when switching between draft and edit we need to ensure those properties are requested again even if they are in the binding's cache\n\t\t\t\t\t// otherwise when you edit and go to the saved version you have no way of switching back to the edit version\n\t\t\t\t\toContext.requestSideEffects(oDraftRoot ? propertiesToRequest.concat([\"DraftAdministrativeData\"]) : propertiesToRequest);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn oContext;\n\t\t} else {\n\t\t\tconst propertiesToSelect: string[] = [];\n\t\t\tif (sContextPath) {\n\t\t\t\tconst sMessagesPath = ModelHelper.getMessagesPath(oMetaModel, sContextPath);\n\t\t\t\tif (sMessagesPath) {\n\t\t\t\t\tpropertiesToSelect.push(sMessagesPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In case of draft: $select the state flags (HasActiveEntity, HasDraftEntity, and IsActiveEntity)\n\t\t\tif (oDraftRoot || oDraftNode) {\n\t\t\t\tpropertiesToSelect.push(\"HasActiveEntity\", \"HasDraftEntity\", \"IsActiveEntity\");\n\t\t\t\tpropertiesToSelect.push(...semanticKeys);\n\t\t\t}\n\t\t\tpropertiesToSelect.push(...alternateAndSecondaryKeys);\n\n\t\t\tif (propertiesToSelect.length) {\n\t\t\t\tmParameters.$select = propertiesToSelect.join(\",\");\n\t\t\t}\n\n\t\t\tif (this._oView.getBindingContext()) {\n\t\t\t\tconst oPreviousBinding = this._oView.getBindingContext()?.getBinding();\n\t\t\t\tif (oPreviousBinding) {\n\t\t\t\t\toModel.resetChanges(oPreviousBinding.getUpdateGroupId());\n\t\t\t\t\toPreviousBinding.destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst oHiddenBinding = oModel.bindContext(sPath, undefined, mParameters);\n\n\t\t\toHiddenBinding.attachEventOnce(\"dataRequested\", () => {\n\t\t\t\tBusyLocker.lock(this._oView);\n\t\t\t});\n\t\t\toHiddenBinding.attachEventOnce(\"dataReceived\", this.onDataReceived.bind(this));\n\t\t\treturn oHiddenBinding.getBoundContext();\n\t\t}\n\t}\n\n\t@publicExtension()\n\tasync onDataReceived(oEvent: Event<{ error: { status?: number; cause?: { status?: number }; message?: string } }>): Promise<void> {\n\t\tconst error = oEvent?.getParameter(\"error\");\n\t\tif (BusyLocker.isLocked(this._oView)) {\n\t\t\tBusyLocker.unlock(this._oView);\n\t\t}\n\n\t\tif (error) {\n\t\t\t// TODO: in case of 404 the text shall be different\n\t\t\tconst messageHandler = this.base.messageHandler;\n\t\t\tconst messageHandlingKey = messageHandler.registerToHoldMessages();\n\t\t\tlet mParams: ShowMessagesParameters = {};\n\t\t\tconst errorStatus = error.status ?? error.cause?.status;\n\t\t\ttry {\n\t\t\t\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\t\t\tif (errorStatus === 503) {\n\t\t\t\t\tmParams = {\n\t\t\t\t\t\tisInitialLoad503Error: true,\n\t\t\t\t\t\tshellBack: true\n\t\t\t\t\t};\n\t\t\t\t} else if (errorStatus === 400) {\n\t\t\t\t\tmParams = {\n\t\t\t\t\t\ttitle: oResourceBundle.getText(\"C_COMMON_SAPFE_ERROR\"),\n\t\t\t\t\t\tdescription: oResourceBundle.getText(\"C_COMMON_SAPFE_DATA_RECEIVED_ERROR_DESCRIPTION\"),\n\t\t\t\t\t\tisDataReceivedError: true,\n\t\t\t\t\t\tshellBack: true\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tmParams = {\n\t\t\t\t\t\ttitle: oResourceBundle.getText(\"C_COMMON_SAPFE_ERROR\"),\n\t\t\t\t\t\tdescription: error?.message,\n\t\t\t\t\t\tisDataReceivedError: true,\n\t\t\t\t\t\tshellBack: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} catch (oError: unknown) {\n\t\t\t\tLog.error(\"Error while getting the core resource bundle\", oError as string);\n\t\t\t} finally {\n\t\t\t\tmParams.unHoldKey = messageHandlingKey;\n\t\t\t\tawait messageHandler.showMessages(mParams);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Requests side effects on a binding context to \"refresh\" it.\n\t * TODO: get rid of this once provided by the model\n\t * a refresh on the binding context does not work in case a creation row with a transient context is\n\t * used. also a requestSideEffects with an empty path would fail due to the transient context\n\t * therefore we get all dependent bindings (via private model method) to determine all paths and then\n\t * request them.\n\t * @param oBindingContext Context to be refreshed\n\t */\n\t_refreshBindingContext(oBindingContext: Context): void {\n\t\tconst oPageComponent = this._oPageComponent;\n\t\tconst oSideEffectsService = this._oAppComponent.getSideEffectsService();\n\t\tconst sRootContextPath = oBindingContext.getPath();\n\t\tconst sEntitySet = oPageComponent && oPageComponent.getEntitySet && oPageComponent.getEntitySet();\n\t\tconst sContextPath =\n\t\t\t(oPageComponent && oPageComponent.getContextPath && oPageComponent.getContextPath()) || (sEntitySet && `/${sEntitySet}`);\n\t\tconst oMetaModel = this._oView.getModel().getMetaModel();\n\t\tlet sMessagesPath;\n\t\tconst aNavigationPropertyPaths: string[] = [];\n\t\tconst aPropertyPaths: string[] = [];\n\t\tconst oSideEffects: SideEffectsTargetType = {\n\t\t\ttargetProperties: [],\n\t\t\ttargetEntities: []\n\t\t};\n\n\t\tfunction getBindingPaths(oBinding: Binding): void {\n\t\t\tlet aDependentBindings;\n\t\t\tconst sRelativePath = (oBinding.getContext()?.getPath() ?? \"\").replace(sRootContextPath, \"\"); // If no context, this is an absolute binding so no relative path\n\t\t\tconst sPath = (sRelativePath ? `${sRelativePath.slice(1)}/` : sRelativePath) + oBinding.getPath();\n\n\t\t\tif (oBinding.isA<ODataContextBinding>(\"sap.ui.model.odata.v4.ODataContextBinding\")) {\n\t\t\t\t// if (sPath === \"\") {\n\t\t\t\t// now get the dependent bindings\n\t\t\t\taDependentBindings = oBinding.getDependentBindings();\n\t\t\t\tif (aDependentBindings) {\n\t\t\t\t\t// ask the dependent bindings (and only those with the specified groupId\n\t\t\t\t\t//if (aDependentBindings.length > 0) {\n\t\t\t\t\tfor (const item of aDependentBindings) {\n\t\t\t\t\t\tgetBindingPaths(item);\n\t\t\t\t\t}\n\t\t\t\t} else if (!aNavigationPropertyPaths.includes(sPath)) {\n\t\t\t\t\taNavigationPropertyPaths.push(sPath);\n\t\t\t\t}\n\t\t\t} else if (oBinding.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\tif (!aNavigationPropertyPaths.includes(sPath)) {\n\t\t\t\t\taNavigationPropertyPaths.push(sPath);\n\t\t\t\t}\n\t\t\t} else if (oBinding.isA<ODataPropertyBinding>(\"sap.ui.model.odata.v4.ODataPropertyBinding\")) {\n\t\t\t\tif (!aPropertyPaths.includes(sPath)) {\n\t\t\t\t\taPropertyPaths.push(sPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sContextPath) {\n\t\t\tsMessagesPath = ModelHelper.getMessagesPath(oMetaModel, sContextPath);\n\t\t}\n\n\t\t// binding of the context must have $$PatchWithoutSideEffects true, this bound context may be needed to be fetched from the dependent binding\n\t\tgetBindingPaths(oBindingContext.getBinding());\n\n\t\tlet i;\n\t\tfor (i = 0; i < aNavigationPropertyPaths.length; i++) {\n\t\t\toSideEffects.targetEntities.push({\n\t\t\t\t$NavigationPropertyPath: aNavigationPropertyPaths[i]\n\t\t\t});\n\t\t}\n\t\toSideEffects.targetProperties = aPropertyPaths;\n\t\tif (sMessagesPath) {\n\t\t\toSideEffects.targetProperties.push(sMessagesPath);\n\t\t}\n\t\t//all this logic to be replaced with a SideEffects request for an empty path (refresh everything), after testing transient contexts\n\t\toSideEffects.targetProperties = oSideEffects.targetProperties.reduce((targets: string[], targetProperty) => {\n\t\t\tif (targetProperty) {\n\t\t\t\tconst index = targetProperty.indexOf(\"/\");\n\t\t\t\ttargets.push(index > 0 ? targetProperty.slice(0, index) : targetProperty);\n\t\t\t}\n\t\t\treturn targets;\n\t\t}, []);\n\t\t// OData model will take care of duplicates\n\t\toSideEffectsService.requestSideEffects([...oSideEffects.targetEntities, ...oSideEffects.targetProperties], oBindingContext);\n\t}\n\n\t/**\n\t * Gets the binding context of the page or the component.\n\t * @returns The binding context\n\t */\n\t_getBindingContext(): Context | null | undefined {\n\t\tif (this._oPageComponent) {\n\t\t\treturn this._oPageComponent.getBindingContext() as Context;\n\t\t} else {\n\t\t\treturn this._oView.getBindingContext();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the binding context of the page or the component.\n\t * @param oContext The binding context\n\t */\n\t_setBindingContext(oContext: Context | null): void {\n\t\tlet oPreviousContext, oTargetControl;\n\t\tif (this._oPageComponent) {\n\t\t\toPreviousContext = this._oPageComponent.getBindingContext() as Context;\n\t\t\toTargetControl = this._oPageComponent;\n\t\t} else {\n\t\t\toPreviousContext = this._oView.getBindingContext();\n\t\t\toTargetControl = this._oView;\n\t\t}\n\n\t\toTargetControl.setBindingContext(oContext);\n\n\t\tif (oPreviousContext?.isKeepAlive() && oPreviousContext !== oContext) {\n\t\t\tthis._setKeepAlive(oPreviousContext, false);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the flexible column layout (FCL) level corresponding to the view (-1 if the app is not FCL).\n\t * @returns The level\n\t */\n\t_getFCLLevel(): number {\n\t\treturn this._oTargetInformation.FCLLevel;\n\t}\n\n\t_setKeepAlive(\n\t\toContext: Context,\n\t\tbKeepAlive: boolean,\n\t\tfnBeforeDestroy?: Parameters<Context[\"setKeepAlive\"]>[1],\n\t\tbRequestMessages?: boolean\n\t): void {\n\t\tif (oContext.getPath().endsWith(\")\")) {\n\t\t\t// We keep the context alive only if they're part of a collection, i.e. if the path ends with a ')'\n\t\t\tconst oMetaModel = oContext.getModel().getMetaModel();\n\t\t\tconst sMetaPath = oMetaModel.getMetaPath(oContext.getPath());\n\t\t\tconst sMessagesPath = ModelHelper.getMessagesPath(oMetaModel, sMetaPath);\n\t\t\toContext.setKeepAlive(bKeepAlive, fnBeforeDestroy, !!sMessagesPath && bRequestMessages);\n\t\t}\n\t}\n\n\t_getKeepAliveContext(\n\t\toModel: ODataModel,\n\t\tpath: string,\n\t\tbRequestMessages?: boolean,\n\t\tparameters?: BindContextParameters\n\t): Context | undefined {\n\t\t// Get the path for the context that is really kept alive (part of a collection)\n\t\t// i.e. remove all segments not ending with a ')'\n\t\tconst keptAliveSegments = path.split(\"/\");\n\t\tconst additionnalSegments: string[] = [];\n\t\twhile (keptAliveSegments.length && !keptAliveSegments[keptAliveSegments.length - 1].endsWith(\")\")) {\n\t\t\tadditionnalSegments.push(keptAliveSegments.pop()!);\n\t\t}\n\n\t\tif (keptAliveSegments.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst keptAlivePath = keptAliveSegments.join(\"/\");\n\t\tconst oKeepAliveContext = oModel.getKeepAliveContext(keptAlivePath, bRequestMessages, parameters);\n\n\t\tif (additionnalSegments.length === 0) {\n\t\t\treturn oKeepAliveContext;\n\t\t} else {\n\t\t\tadditionnalSegments.reverse();\n\t\t\tconst additionnalPath = additionnalSegments.join(\"/\");\n\t\t\treturn oModel.bindContext(additionnalPath, oKeepAliveContext).getBoundContext();\n\t\t}\n\t}\n\n\t/**\n\t * Switches between column and full-screen mode when FCL is used.\n\t *\n\t */\n\n\t@publicExtension()\n\t@finalExtension()\n\tswitchFullScreen(): void {\n\t\tconst oSource = this.base.getView();\n\t\tconst oFCLHelperModel = oSource.getModel(\"fclhelper\"),\n\t\t\tbIsFullScreen = oFCLHelperModel.getProperty(\"/actionButtonsInfo/isFullScreen\"),\n\t\t\tsNextLayout = oFCLHelperModel.getProperty(\n\t\t\t\tbIsFullScreen ? \"/actionButtonsInfo/exitFullScreen\" : \"/actionButtonsInfo/fullScreen\"\n\t\t\t),\n\t\t\toRootViewController = this._oAppComponent.getRootViewController();\n\n\t\tconst oContext = (oRootViewController as FclController).getRightmostContext\n\t\t\t? (oRootViewController as FclController).getRightmostContext()!\n\t\t\t: oSource.getBindingContext();\n\n\t\tthis.base._routing.navigateToContext(oContext, { layout: sNextLayout }).catch(function () {\n\t\t\tLog.warning(\"cannot switch between column and fullscreen\");\n\t\t});\n\t}\n\n\t/**\n\t * Closes the column for the current view in a FCL.\n\t *\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.Before)\n\tcloseColumn(): void {\n\t\tconst oViewData = this._oView.getViewData();\n\t\tconst oContext = this._oView.getBindingContext();\n\t\tconst oMetaModel = oContext.getModel().getMetaModel();\n\t\tconst navigationParameters = {\n\t\t\tnoPreservationCache: true,\n\t\t\tsLayout: this._oView.getModel(\"fclhelper\").getProperty(\"/actionButtonsInfo/closeColumn\")\n\t\t};\n\n\t\tif (oViewData?.viewLevel === 1 && ModelHelper.isDraftSupported(oMetaModel, oContext.getPath())) {\n\t\t\tdraft.processDataLossOrDraftDiscardConfirmation(\n\t\t\t\t() => {\n\t\t\t\t\tthis.navigateBackFromContext(oContext, navigationParameters);\n\t\t\t\t},\n\t\t\t\tFunction.prototype,\n\t\t\t\toContext,\n\t\t\t\tthis._oView.getController(),\n\t\t\t\tfalse,\n\t\t\t\tdraft.NavigationType.BackNavigation\n\t\t\t);\n\t\t} else {\n\t\t\tthis.navigateBackFromContext(oContext, navigationParameters);\n\t\t}\n\n\t\t// Removes transition message for the specified context\n\t\tmessageHandling.removeTransistionMessageForContext(oContext);\n\t}\n}\n\nexport default InternalRouting;\n"],"mappings":"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","ignoreList":[],"file":"InternalRouting-dbg.js"}