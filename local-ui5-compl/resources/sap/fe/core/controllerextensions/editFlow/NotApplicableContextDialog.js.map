{"version":3,"file":"NotApplicableContextDialog.js","names":["NotApplicableContextDialog","props","this","title","resourceModel","entityType","notApplicableContexts","_shouldContinue","actionName","entitySetName","entitySet","_dialog","createDialog","_processingPromise","Promise","resolve","_fnResolve","_exports","_proto","prototype","onAfterClose","destroy","onContinue","close","open","async","owner","addDependent","getDialog","boundActionName","includes","split","length","suffixResourceKey","_jsx","Dialog","state","showHeader","resizable","verticalScrolling","horizontalScrolling","class","afterClose","bind","children","beginButton","Button","text","getText","undefined","press","type","endButton","content","_jsxs","_Fragment","VBox","Text","List","headerText","annotations","UI","HeaderInfo","TypeNamePlural","showSeparators","items","map","notApplicableContext","titleExpression","getTitleExpression","customListItem","CustomListItem","HBox","justifyContent","setBindingContext"],"sources":["./NotApplicableContextDialog.tsx"],"sourcesContent":["import type { EntityType } from \"@sap-ux/vocabularies-types\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport { getTitleExpression } from \"sap/fe/core/templating/EntityTypeHelper\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport HBox from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport type Control from \"sap/ui/core/Control\";\nimport type Context from \"sap/ui/model/Context\";\n\n/**\n * Display a dialog to inform the user that some contexts are not applicable for the action.\n * This is not the target Ux but just keeping the current behavior\n */\nexport default class NotApplicableContextDialog {\n\tprivate readonly title: string;\n\n\tprivate resourceModel: ResourceModel;\n\n\tprivate readonly entityType: EntityType;\n\n\tprivate readonly _dialog: Dialog;\n\n\tprivate readonly _processingPromise: Promise<boolean>;\n\n\tprivate _fnResolve!: (resolveValue: boolean) => void;\n\n\tprivate _shouldContinue: boolean;\n\n\tprivate readonly actionName: string | undefined;\n\n\tprivate readonly entitySetName: string | undefined;\n\n\tprivate notApplicableContexts: Context[];\n\n\tconstructor(props: { title: string; entityType: EntityType; resourceModel: ResourceModel; notApplicableContexts: Context[]; entitySet?: string; actionName?: string }) {\n\t\tthis.title = props.title;\n\t\tthis.resourceModel = props.resourceModel;\n\t\tthis.entityType = props.entityType;\n\t\tthis.notApplicableContexts = props.notApplicableContexts;\n\t\tthis._shouldContinue = false;\n\t\tthis.actionName = props.actionName;\n\t\tthis.entitySetName = props.entitySet;\n\t\tthis._dialog = this.createDialog();\n\t\tthis._processingPromise = new Promise((resolve) => {\n\t\t\tthis._fnResolve = resolve;\n\t\t});\n\t}\n\n\tprivate onAfterClose(): void {\n\t\tthis._fnResolve(this._shouldContinue);\n\t\tthis._dialog.destroy();\n\t}\n\n\tprivate onContinue(): void {\n\t\tthis._shouldContinue = true;\n\t\tthis._dialog.close();\n\t}\n\n\tasync open(owner: Control): Promise<boolean> {\n\t\towner.addDependent(this._dialog);\n\t\tthis._dialog.open();\n\t\treturn this._processingPromise;\n\t}\n\n\tgetDialog(): Dialog {\n\t\treturn this._dialog;\n\t}\n\n\tcreateDialog(): Dialog {\n\t\tlet boundActionName = this.actionName;\n\t\tboundActionName = boundActionName?.includes(\".\")\n\t\t\t? boundActionName?.split(\".\")[boundActionName?.split(\".\").length - 1]\n\t\t\t: boundActionName;\n\t\tconst suffixResourceKey = boundActionName && this.entitySetName ? `${this.entitySetName}|${boundActionName}` : \"\";\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\tstate={\"Warning\"}\n\t\t\t\tshowHeader={true}\n\t\t\t\tresizable={true}\n\t\t\t\tverticalScrolling={true}\n\t\t\t\thorizontalScrolling={true}\n\t\t\t\tclass={\"sapUiContentPadding\"}\n\t\t\t\ttitle={this.title}\n\t\t\t\tafterClose={this.onAfterClose.bind(this)}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tbeginButton: (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttext={this.resourceModel.getText(\"C_ACTION_PARTIAL_FRAGMENT_SAPFE_CONTINUE_ANYWAY\", undefined, suffixResourceKey)}\n\t\t\t\t\t\t\tpress={this.onContinue.bind(this)}\n\t\t\t\t\t\t\ttype=\"Emphasized\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tendButton: (\n\t\t\t\t\t\t<Button text={this.resourceModel.getText(\"C_COMMON_SAPFE_CLOSE\")} press={(): Dialog => this._dialog.close()} />\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\ttext={\n\t\t\t\t\t\t\t\t\t\tthis.notApplicableContexts.length === 1\n\t\t\t\t\t\t\t\t\t\t\t? this.resourceModel.getText(\"C_ACTION_PARTIAL_FRAGMENT_SAPFE_BOUND_ACTION\", undefined, suffixResourceKey)\n\t\t\t\t\t\t\t\t\t\t\t: this.resourceModel.getText(\"C_ACTION_PARTIAL_FRAGMENT_SAPFE_BOUND_ACTION_PLURAL\", [\n\t\t\t\t\t\t\t\t\t\t\t\tthis.notApplicableContexts.length\n\t\t\t\t\t\t\t\t\t\t\t], suffixResourceKey)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclass=\"sapUiTinyMarginBegin sapUiTinyMarginTopBottom\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t<List headerText={this.entityType.annotations.UI?.HeaderInfo?.TypeNamePlural} showSeparators=\"None\">\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\titems: this.notApplicableContexts.map((notApplicableContext) => {\n\t\t\t\t\t\t\t\t\t\t// Either show the HeaderInfoName or the Semantic Key property\n\t\t\t\t\t\t\t\t\t\tconst titleExpression = getTitleExpression(this.entityType);\n\t\t\t\t\t\t\t\t\t\tconst customListItem = (\n\t\t\t\t\t\t\t\t\t\t\t<CustomListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<HBox justifyContent={\"Start\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text text={titleExpression} class=\"sapUiTinyMarginBegin sapUiTinyMarginTopBottom\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t\t\t\t\t\t</CustomListItem>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tcustomListItem.setBindingContext(notApplicableContext);\n\t\t\t\t\t\t\t\t\t\treturn customListItem;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Dialog>\n\t\t) as Dialog;\n\t}\n}\n"],"mappings":";;;;oVAaA,IAIqBA,EAA0B,WAqB9C,SAAAA,EAAYC,GACXC,KAAKC,MAAQF,EAAME,MACnBD,KAAKE,cAAgBH,EAAMG,cAC3BF,KAAKG,WAAaJ,EAAMI,WACxBH,KAAKI,sBAAwBL,EAAMK,sBACnCJ,KAAKK,gBAAkB,MACvBL,KAAKM,WAAaP,EAAMO,WACxBN,KAAKO,cAAgBR,EAAMS,UAC3BR,KAAKS,QAAUT,KAAKU,eACpBV,KAAKW,mBAAqB,IAAIC,QAASC,IACtCb,KAAKc,WAAaD,CAAO,EAE3B,CAACE,EAAAjB,EAAA,IAAAkB,EAAAlB,EAAAmB,UAAAD,EAEOE,aAAR,SAAQA,IACPlB,KAAKc,WAAWd,KAAKK,iBACrBL,KAAKS,QAAQU,SACd,EAACH,EAEOI,WAAR,SAAQA,IACPpB,KAAKK,gBAAkB,KACvBL,KAAKS,QAAQY,OACd,EAACL,EAEKM,KAANC,eAAMD,EAAKE,GACVA,EAAMC,aAAazB,KAAKS,SACxBT,KAAKS,QAAQa,OACb,OAAOtB,KAAKW,kBACb,EAACK,EAEDU,UAAA,SAAAA,IACC,OAAO1B,KAAKS,OACb,EAACO,EAEDN,aAAA,SAAAA,IACC,IAAIiB,EAAkB3B,KAAKM,WAC3BqB,EAAkBA,GAAiBC,SAAS,KACzCD,GAAiBE,MAAM,KAAKF,GAAiBE,MAAM,KAAKC,OAAS,GACjEH,EACH,MAAMI,EAAoBJ,GAAmB3B,KAAKO,cAAgB,GAAGP,KAAKO,iBAAiBoB,IAAoB,GAC/G,OACCK,EAACC,EAAM,CACNC,MAAO,UACPC,WAAY,KACZC,UAAW,KACXC,kBAAmB,KACnBC,oBAAqB,KACrBC,MAAO,sBACPtC,MAAOD,KAAKC,MACZuC,WAAYxC,KAAKkB,aAAauB,KAAKzC,MAAM0C,SAExC,CACAC,YACCX,EAACY,EAAM,CACNC,KAAM7C,KAAKE,cAAc4C,QAAQ,kDAAmDC,UAAWhB,GAC/FiB,MAAOhD,KAAKoB,WAAWqB,KAAKzC,MAC5BiD,KAAK,eAGPC,UACClB,EAACY,EAAM,CAACC,KAAM7C,KAAKE,cAAc4C,QAAQ,wBAAyBE,MAAOA,IAAchD,KAAKS,QAAQY,UAErG8B,QAECC,EAAAC,EAAA,CAAAX,SAAA,CACCV,EAACsB,EAAI,CAAAZ,SACJV,EAACuB,EAAI,CACJV,KACC7C,KAAKI,sBAAsB0B,SAAW,EACnC9B,KAAKE,cAAc4C,QAAQ,+CAAgDC,UAAWhB,GACtF/B,KAAKE,cAAc4C,QAAQ,sDAAuD,CACnF9C,KAAKI,sBAAsB0B,QACzBC,GAELQ,MAAM,oDAGRP,EAACwB,EAAI,CAACC,WAAYzD,KAAKG,WAAWuD,YAAYC,IAAIC,YAAYC,eAAgBC,eAAe,OAAMpB,SACjG,CACAqB,MAAO/D,KAAKI,sBAAsB4D,IAAKC,IAEtC,MAAMC,EAAkBC,EAAmBnE,KAAKG,YAChD,MAAMiE,EACLpC,EAACqC,EAAc,CAAA3B,SACdV,EAACsC,EAAI,CAACC,eAAgB,QAAQ7B,SAC7BV,EAACuB,EAAI,CAACV,KAAMqB,EAAiB3B,MAAM,sDAItC6B,EAAeI,kBAAkBP,GACjC,OAAOG,CAAc,WAS9B,EAAC,OAAAtE,CAAA,CAxH6C,GAwH7CiB,EAAAjB,EAAA,OAAAiB,CAAA","ignoreList":[]}