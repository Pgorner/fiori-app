{"version":3,"file":"InlineEditHelper.js","names":["INLINEEDIT_UPDATEGROUPID","toggleControlLocalEdit","control","showInEdit","uiModel","getModel","registeredBindingContexts","getProperty","controlId","getId","path","setProperty","isEditable","bindElement","model","push","unbindElement","filter","id","_exports","leaveInlineEdit","view","resetChanges","Element","getElementById"],"sources":["./InlineEditHelper.ts"],"sourcesContent":["import { type FEView } from \"sap/fe/core/BaseController\";\nimport type Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\n\nconst INLINEEDIT_UPDATEGROUPID = \"inlineEdit\";\n\n/**\n * Toggles the control in local edit mode.\n * @param control The control to toggle\n * @param showInEdit Whether to show the control in edit mode\n */\nexport function toggleControlLocalEdit(control: Control, showInEdit: boolean): void {\n\tconst uiModel = control.getModel(\"ui\") as JSONModel;\n\tconst registeredBindingContexts = uiModel.getProperty(\"/registeredBindingContexts\") ?? [];\n\tconst controlId = control.getId();\n\tif (showInEdit) {\n\t\tconst path = `/${controlId}`;\n\t\tuiModel.setProperty(path, { isEditable: true });\n\t\tcontrol.bindElement({ path, model: \"ui\" });\n\t\tregisteredBindingContexts.push(controlId);\n\t\tuiModel.setProperty(\"/registeredBindingContexts\", registeredBindingContexts);\n\t} else {\n\t\tcontrol.unbindElement(\"ui\");\n\t\tuiModel.setProperty(\n\t\t\t\"/registeredBindingContexts\",\n\t\t\tregisteredBindingContexts.filter((id: string) => id !== controlId)\n\t\t);\n\t}\n}\n\n/**\n * Leaves inline edit mode.\n * @param view The view\n */\nexport function leaveInlineEdit(view: FEView): void {\n\tview.getModel().resetChanges(INLINEEDIT_UPDATEGROUPID);\n\tconst uiModel = view.getModel(\"ui\");\n\tconst registeredBindingContexts = uiModel.getProperty(\"/registeredBindingContexts\") ?? [];\n\tfor (const controlId of registeredBindingContexts) {\n\t\tconst control = Element.getElementById(controlId);\n\t\tif (control) {\n\t\t\tcontrol.unbindElement(\"ui\");\n\t\t}\n\t}\n\tuiModel.setProperty(\"/registeredBindingContexts\", []);\n}\n"],"mappings":";;;;wEAKA,MAAMA,EAA2B,aAO1B,SAASC,EAAuBC,EAAkBC,GACxD,MAAMC,EAAUF,EAAQG,SAAS,MACjC,MAAMC,EAA4BF,EAAQG,YAAY,+BAAiC,GACvF,MAAMC,EAAYN,EAAQO,QAC1B,GAAIN,EAAY,CACf,MAAMO,EAAO,IAAIF,IACjBJ,EAAQO,YAAYD,EAAM,CAAEE,WAAY,OACxCV,EAAQW,YAAY,CAAEH,OAAMI,MAAO,OACnCR,EAA0BS,KAAKP,GAC/BJ,EAAQO,YAAY,6BAA8BL,EACnD,KAAO,CACNJ,EAAQc,cAAc,MACtBZ,EAAQO,YACP,6BACAL,EAA0BW,OAAQC,GAAeA,IAAOV,GAE1D,CACD,CAEAW,EAAAlB,yBAIO,SAASmB,EAAgBC,GAC/BA,EAAKhB,WAAWiB,aAAatB,GAC7B,MAAMI,EAAUiB,EAAKhB,SAAS,MAC9B,MAAMC,EAA4BF,EAAQG,YAAY,+BAAiC,GACvF,IAAK,MAAMC,KAAaF,EAA2B,CAClD,MAAMJ,EAAUqB,EAAQC,eAAehB,GACvC,GAAIN,EAAS,CACZA,EAAQc,cAAc,KACvB,CACD,CACAZ,EAAQO,YAAY,6BAA8B,GACnD,CAACQ,EAAAC,kBAAA,OAAAD,CAAA","ignoreList":[]}