{"version":3,"names":["draftOperations","EDIT","ACTIVATION","DISCARD","PREPARE","getActionName","oContext","sOperation","oModel","getModel","oMetaModel","getMetaModel","sEntitySetPath","getMetaPath","getPath","getObject","createOperation","oOptions","sOperationName","bindContext","getReturnType","hasPrepareAction","executeDraftEditAction","bPreserveChanges","oView","groupId","messageHandler","overwriteChange","undefined","getProperty","$$inheritExpandSelect","oOperation","draft","setParameter","ignoreETag","resourceModel","getResourceModel","sActionName","getText","oEditPromise","execute","operationsHelper","fnOnStrictHandlingFailed","bind","appComponent","CommonUtils","getAppComponent","label","model","getBinding","isA","submitBatch","Error","executeDraftValidation","context","ModelHelper","getMessagesPath","isKeepAlive","requestObject","operation","executeDraftPreparationAction","getUpdateGroupId","requestMessages","getSideEffectsService","error","Log","executeDraftActivationAction","oAppComponent","sGroupId","bHasPrepareAction","bIgnoreEtag","e","actionName","oSideEffectsService","oBindingParameters","getODataActionSideEffects","aTargetPaths","pathExpressions","length","requestSideEffects","oError","getMessagePathForPrepare","getMessagePathForContext","metaContext","getMetaContext","convertedContext","getInvolvedDataModelObjects","messages","targetEntityType","annotations","Common","Messages","isPathAnnotationExpression","path","bMessages","sMessagesPath","$select","getGroupId","then","catch","executeDraftDiscardAction","bEnableStrictHandling","oDiscardOperation","oDiscardPromise","AppComponent","computeSiblingInformation","rootCurrentContext","rightmostCurrentContext","rootContextInfo","startsWith","additionalPath","replace","segments","substring","split","unshift","oldPaths","newPaths","currentPath","paths","rootSiblingPathPromise","shift","canonicalPathPromises","map","segment","endsWith","siblingContext","$$groupId","getBoundContext","requestCanonicalPath","Promise","resolve","canonicalPaths","all","rootSiblingPath","push","siblingPath","forEach","canonicalPath","index","navigation","keys","targetContext","pathMapping","oldPath","newPath","createDraftFromActiveDocument","mParameters","mParam","bRunPreserveChangesFlow","response","draftDataContext","draftAdminData","messageHandling","removeUnboundTransitionMessages","sInfo","InProcessByUserDescription","InProcessByUser","sEntitySet","getViewData","entitySet","sLockedByUserMsg","MessageBox","CreatedByUserDescription","CreatedByUser","sUnsavedChangesMsg","showEditConfirmationMessageBox","message","oDraftContext","oResponse","status","removeBoundTransitionMessages","siblingInfo","waitForContextRequested","canceled","sEditActionName","oSideEffects","triggerActions","requestSideEffectsForODataAction","activateDocument","bExecute","fnBeforeActivateDocument","oActiveDocumentContext","sBatchGroup","ignoreEtag","hasPendingChanges","oPreparePromise","oActivatePromise","values","err","data","removeTransitionMessages","fnAfterActivateDocument","localI18nRef","Library","getResourceBundleFor","reject","oDialog","Dialog","title","state","content","Text","text","beginButton","Button","type","press","close","endButton","afterClose","destroy","addStyleClass","open","deleteDraft","sDiscardAction","bIsActiveEntity","IsActiveEntity","isInactive","resetChanges","delete","isDraftRoot","targetEntitySet","processDataLossOrDraftDiscardConfirmation","draftDataLossPopup","silentlyKeepDraftOnForwardNavigation","NavigationType"],"sourceRoot":".","sources":["draft.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport draftDataLossPopup from \"sap/fe/core/controllerextensions/editFlow/draftDataLossPopup\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { SideEffectsService } from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Text from \"sap/m/Text\";\nimport Library from \"sap/ui/core/Lib\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type { ContextErrorType } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type { FEView } from \"../../BaseController\";\nimport ModelHelper from \"../../helpers/ModelHelper\";\nimport operationsHelper from \"../../operationsHelper\";\nimport type MessageHandler from \"../MessageHandler\";\n\nexport type SiblingInformation = {\n\ttargetContext: Context;\n\tpathMapping: { oldPath: string; newPath: string }[];\n};\n\nexport type RootContextInfo = {\n\trootSiblingPathPromise: Promise<Context | undefined>;\n};\n\nexport type BindContextParameters = {\n\t/**\n\t * The value for the \"5.1.2 System Query Option $expand\" or an object which determines that value. The object\n\t * is a map from expand path to expand options, where the options are again maps of system query options,\n\t * typically with string values. $count can also be given as a `boolean` value, $expand can recursively\n\t * be given as a map, $levels can also be given as a `number` value, and $select can also be given as an\n\t * array (but without navigation paths). An empty map can also be given as `null` or `true`. See also {@link https://ui5.sap.com/#/topic/1ab4f62de6ab467096a2a98b363a1373 Parameters}.\n\t */\n\t$expand?: string | object;\n\t/**\n\t * A comma separated list or an array of items which determine the value for the \"5.1.3 System Query Option\n\t * $select\". Since 1.75.0, when using the \"autoExpandSelect\" model parameter (see {@link sap.ui.model.odata.v4.ODataModel#constructor}),\n\t * paths with navigation properties can be included and will contribute to the \"5.1.2 System Query Option\n\t * $expand\".\n\t */\n\t$select?: string;\n\t/**\n\t * Whether a binding relative to an {@link sap.ui.model.odata.v4.Context} uses the canonical path computed\n\t * from its context's path for data service requests; only the value `true` is allowed.\n\t */\n\t$$canonicalPath?: boolean;\n\t/**\n\t * The group ID to be used for **read** requests triggered by this binding; if not specified, either the\n\t * parent binding's group ID (if the binding is relative) or the model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n\t * Valid values are `undefined`, '$auto', '$auto.*', '$direct' or application group IDs as specified in\n\t * {@link sap.ui.model.odata.v4.ODataModel}.\n\t */\n\t$$groupId?: string;\n\t/**\n\t * For operation bindings only: Whether $expand and $select from the parent binding are used in the request\n\t * sent on {@link #execute}. If set to `true`, the binding must not set the $expand itself, the operation\n\t * must be bound, and the return value and the binding parameter must belong to the same entity set.\n\t */\n\t$$inheritExpandSelect?: boolean;\n\t/**\n\t * Whether the binding always uses an own service request to read its data; only the value `true` is allowed.\n\t */\n\t$$ownRequest?: boolean;\n\t/**\n\t * Whether implicit loading of side effects via PATCH requests is switched off; only the value `true` is\n\t * allowed. This sets the preference \"return=minimal\" and requires the service to return an ETag header\n\t * for \"204 No Content\" responses. If not specified, the value of the parent binding is used.\n\t */\n\t$$patchWithoutSideEffects?: boolean;\n\t/**\n\t * The group ID to be used for **update** requests triggered by this binding; if not specified, either the\n\t * parent binding's update group ID (if the binding is relative) or the model's update group ID is used,\n\t * see {@link sap.ui.model.odata.v4.ODataModel#constructor}. For valid values, see parameter \"$$groupId\".\n\t */\n\t$$updateGroupId?: string;\n};\n\n/* Constants for draft operations */\nconst draftOperations = {\n\tEDIT: \"EditAction\",\n\tACTIVATION: \"ActivationAction\",\n\tDISCARD: \"DiscardAction\",\n\tPREPARE: \"PreparationAction\"\n};\n\n/**\n * Static functions for the draft programming model\n * @namespace\n * @experimental This module is only for experimental use! <br/><b>This is only a POC and maybe deleted</b>\n * @since 1.54.0\n */\n\n/**\n * Determines the action name for a draft operation.\n * @param oContext The context that should be bound to the operation\n * @param sOperation The operation name\n * @returns The name of the draft operation\n */\nfunction getActionName(oContext: Context, sOperation: string): string {\n\tconst oModel = oContext.getModel(),\n\t\toMetaModel = oModel.getMetaModel(),\n\t\tsEntitySetPath = oMetaModel.getMetaPath(oContext.getPath());\n\n\treturn oMetaModel.getObject(`${sEntitySetPath}@com.sap.vocabularies.Common.v1.DraftRoot/${sOperation}`);\n}\n/**\n * Creates an operation context binding for the given context and operation.\n * @param oContext The context that should be bound to the operation\n * @param sOperation The operation (action or function import)\n * @param oOptions Options to create the operation context\n * @returns The context binding of the bound operation\n */\nfunction createOperation(oContext: Context, sOperation: string, oOptions?: BindContextParameters): ODataContextBinding {\n\tconst sOperationName = getActionName(oContext, sOperation);\n\n\treturn oContext.getModel().bindContext(`${sOperationName}(...)`, oContext, oOptions);\n}\n/**\n * Determines the return type for a draft operation.\n * @param oContext The context that should be bound to the operation\n * @param sOperation The operation name\n * @returns The return type of the draft operation\n */\nfunction getReturnType(oContext: Context, sOperation: string): unknown {\n\tconst oModel = oContext.getModel(),\n\t\toMetaModel = oModel.getMetaModel(),\n\t\tsEntitySetPath = oMetaModel.getMetaPath(oContext.getPath());\n\n\treturn oMetaModel.getObject(`${sEntitySetPath}@com.sap.vocabularies.Common.v1.DraftRoot/${sOperation}/$ReturnType`);\n}\n/**\n * Check if optional draft prepare action exists.\n * @param oContext The context that should be bound to the operation\n * @returns True if a a prepare action exists\n */\nfunction hasPrepareAction(oContext: Context): boolean {\n\treturn !!getActionName(oContext, draftOperations.PREPARE);\n}\n/**\n * Creates a new draft from an active document.\n * @param oContext Context for which the action should be performed\n * @param bPreserveChanges If true - existing changes from another user that are not locked are preserved and an error is sent from the backend, otherwise false - existing changes from another user that are not locked are overwritten</li>\n * @param oView If true - existing changes from another\n * @param groupId The batch groupId for post call of edit action\n * @param messageHandler  The message handler controller extension\n * @param overwriteChange\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftEditAction(\n\toContext: Context,\n\tbPreserveChanges: boolean,\n\toView: View,\n\tgroupId: string,\n\tmessageHandler: MessageHandler,\n\toverwriteChange?: boolean\n): Promise<Context> {\n\t// If the context is not loaded (i.e. oContext.getObject() == undefined), we assume it corresponds to an active context\n\t// This situation happens when opening an OP directly in edit mode (InternalRouting._bindPageForEdit)\n\tif (oContext.getObject() === undefined || oContext.getProperty(\"IsActiveEntity\")) {\n\t\tconst oOptions = { $$inheritExpandSelect: true };\n\t\tconst oOperation = draft.createOperation(oContext, draftOperations.EDIT, oOptions);\n\t\toOperation.setParameter(\"PreserveChanges\", bPreserveChanges);\n\n\t\t// If the context has not been loaded yet, we can ignore the ETag (as no previous ETag is available)\n\t\tconst ignoreETag = oContext.getObject() === undefined ? true : undefined;\n\n\t\tconst resourceModel = getResourceModel(oView);\n\t\tconst sActionName = resourceModel.getText(\"C_COMMON_OBJECT_PAGE_EDIT\");\n\t\t//If the context is coming from a list binding we pass the flag true to replace the context by the active one\n\t\tconst oEditPromise = oOperation.execute(\n\t\t\tgroupId,\n\t\t\tignoreETag,\n\t\t\toperationsHelper.fnOnStrictHandlingFailed.bind(\n\t\t\t\tdraft,\n\t\t\t\tgroupId,\n\t\t\t\t{ appComponent: CommonUtils.getAppComponent(oView), label: sActionName, model: oContext.getModel() },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tmessageHandler,\n\t\t\t\tundefined,\n\t\t\t\tundefined\n\t\t\t),\n\t\t\toContext.getBinding().isA(\"sap.ui.model.odata.v4.ODataListBinding\")\n\t\t);\n\t\tif (overwriteChange) {\n\t\t\toOperation.getModel().submitBatch(groupId);\n\t\t}\n\t\treturn oEditPromise;\n\t} else {\n\t\tthrow new Error(\"You cannot edit this draft document\");\n\t}\n}\n\n/**\n * Executes the validation of the draft. The PrepareAction is triggered if the messages are annotated and entitySet gets a PreparationAction annotated.\n * If the operation succeeds and operation doesn't get a return type (RAP system) the messages are requested.\n * @param context Context for which the PrepareAction should be performed\n * @param appComponent The AppComponent\n * @param ignoreETag If set to true, ETags are ignored when executing the action\n * @returns Resolve function returns\n *  - the context of the operation if the action has been successfully executed\n *  - void if the action has failed\n *  - undefined if the action has not been triggered since the prerequisites are not met\n */\nasync function executeDraftValidation(\n\tcontext: Context,\n\tappComponent: AppComponent,\n\tignoreETag: boolean\n): Promise<ODataContextBinding | void | undefined> {\n\tif (ModelHelper.getMessagesPath(context.getModel().getMetaModel(), context.getPath()) && draft.hasPrepareAction(context)) {\n\t\ttry {\n\t\t\tif (!ignoreETag && !context.isKeepAlive()) {\n\t\t\t\t// We need to wait for the entity related to the context to post the action with the If-Match header\n\t\t\t\t// Some triggers (enter on table) can generate a promise in the cache so if we don't wait for the entity\n\t\t\t\t// the POST will be sent without If-Match and will generate an error on backend side.\n\t\t\t\tawait (context.getBinding() as ODataContextBinding).requestObject(\"\");\n\t\t\t}\n\t\t\tconst operation = draft.executeDraftPreparationAction(context, context.getUpdateGroupId(), true, ignoreETag);\n\t\t\tif (!getReturnType(context, draftOperations.PREPARE)) {\n\t\t\t\trequestMessages(context, appComponent.getSideEffectsService());\n\t\t\t}\n\n\t\t\treturn await operation;\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(\"Error while requesting messages\", error as string);\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Activates a draft document. The draft will replace the sibling entity and will be deleted by the back end.\n * @param oContext Context for which the action should be performed\n * @param oAppComponent The AppComponent\n * @param messageHandler\n * @param [sGroupId] The optional batch group in which the operation is to be executed\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftActivationAction(\n\toContext: Context,\n\toAppComponent: AppComponent,\n\tmessageHandler: MessageHandler,\n\tsGroupId?: string\n): Promise<Context> {\n\tconst bHasPrepareAction = hasPrepareAction(oContext);\n\t// According to the draft spec if the service contains a prepare action and we trigger both prepare and\n\t// activate in one $batch the activate action is called with iF-Match=*\n\tconst bIgnoreEtag = bHasPrepareAction;\n\n\tif (!oContext.getProperty(\"IsActiveEntity\")) {\n\t\tconst oOperation = createOperation(oContext, draftOperations.ACTIVATION, { $$inheritExpandSelect: true });\n\t\tconst resourceModel = getResourceModel(oAppComponent);\n\t\tconst sActionName = resourceModel.getText(\"C_OP_OBJECT_PAGE_SAVE\");\n\t\ttry {\n\t\t\treturn await oOperation.execute(\n\t\t\t\tsGroupId,\n\t\t\t\tbIgnoreEtag,\n\t\t\t\tsGroupId\n\t\t\t\t\t? operationsHelper.fnOnStrictHandlingFailed.bind(\n\t\t\t\t\t\t\tdraft,\n\t\t\t\t\t\t\tsGroupId,\n\t\t\t\t\t\t\t{ appComponent: oAppComponent, label: sActionName, model: oContext.getModel() },\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tmessageHandler,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined,\n\t\t\t\toContext.getBinding().isA(\"sap.ui.model.odata.v4.ODataListBinding\")\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (bHasPrepareAction) {\n\t\t\t\tconst actionName = getActionName(oContext, draftOperations.PREPARE),\n\t\t\t\t\toSideEffectsService = oAppComponent.getSideEffectsService(),\n\t\t\t\t\toBindingParameters = oSideEffectsService.getODataActionSideEffects(actionName, oContext),\n\t\t\t\t\taTargetPaths = oBindingParameters && oBindingParameters.pathExpressions;\n\t\t\t\tif (aTargetPaths && aTargetPaths.length > 0) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait oSideEffectsService.requestSideEffects(aTargetPaths, oContext);\n\t\t\t\t\t} catch (oError: unknown) {\n\t\t\t\t\t\tLog.error(\"Error while requesting side effects\", oError as string);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait requestMessages(oContext, oSideEffectsService);\n\t\t\t\t\t} catch (oError: unknown) {\n\t\t\t\t\t\tLog.error(\"Error while requesting messages\", oError as string);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t} else {\n\t\tthrow new Error(\"The activation action cannot be executed on an active document\");\n\t}\n}\n\n/**\n * Gets the supported message property path on the PrepareAction for a context.\n * @param context Context to be checked\n * @returns Path to the message\n */\nfunction getMessagePathForPrepare(context: Context): string | undefined {\n\t// If there is no return parameter, it is not possible to request Messages.\n\t// RAP draft prepare has no return parameter\n\treturn getReturnType(context, draftOperations.PREPARE) ? getMessagePathForContext(context) : undefined;\n}\n\n/**\n * Gets the supported message property path for a context.\n * @param context Context to be checked\n * @returns Path to the message\n */\nfunction getMessagePathForContext(context: Context): string | undefined {\n\tconst metaContext = context.getModel().getMetaModel().getMetaContext(context.getPath());\n\tconst convertedContext = getInvolvedDataModelObjects(metaContext);\n\tconst messages = convertedContext.targetEntityType.annotations.Common?.Messages;\n\treturn isPathAnnotationExpression(messages) ? messages.path : undefined;\n}\n\n/**\n * Execute a preparation action.\n * @param oContext Context for which the action should be performed\n * @param groupId The optional batch group in which we want to execute the operation\n * @param bMessages If set to true, the PREPARE action retrieves SAP_Messages\n * @param ignoreETag If set to true, ETag information is ignored when the action is executed\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftPreparationAction(\n\toContext: Context,\n\tgroupId?: string,\n\tbMessages?: boolean,\n\tignoreETag?: boolean\n): Promise<void | ODataContextBinding> {\n\tif (!oContext.getProperty(\"IsActiveEntity\")) {\n\t\tconst sMessagesPath = bMessages ? getMessagePathForPrepare(oContext) : undefined;\n\t\tconst oOperation = createOperation(oContext, draftOperations.PREPARE, sMessagesPath ? { $select: sMessagesPath } : undefined);\n\n\t\t// TODO: side effects qualifier shall be even deprecated to be checked\n\t\toOperation.setParameter(\"SideEffectsQualifier\", \"\");\n\n\t\tconst sGroupId = groupId || oOperation.getGroupId();\n\t\treturn oOperation\n\t\t\t.execute(sGroupId, ignoreETag)\n\t\t\t.then(function () {\n\t\t\t\treturn oOperation;\n\t\t\t})\n\t\t\t.catch(function (oError: unknown) {\n\t\t\t\tLog.error(\"Error while executing the operation\", oError as string);\n\t\t\t});\n\t} else {\n\t\tthrow new Error(\"The preparation action cannot be executed on an active document\");\n\t}\n}\n\n/**\n * Requests the messages if annotated for a given context.\n * @param oContext Context for which the messages shall be requested\n * @param oSideEffectsService Service for the SideEffects on SAP Fiori elements\n * @returns Promise which is resolved once messages were requested\n */\nasync function requestMessages(oContext: Context, oSideEffectsService: SideEffectsService): Promise<void> {\n\tconst sMessagesPath = ModelHelper.getMessagesPath(oContext.getModel().getMetaModel(), oContext.getPath());\n\tif (sMessagesPath) {\n\t\treturn oSideEffectsService.requestSideEffects([sMessagesPath], oContext);\n\t}\n\treturn;\n}\n/**\n * Executes discard of a draft function using HTTP Post.\n * @param oContext Context for which the action should be performed\n * @param messageHandler The message handler controller extension\n * @param oAppComponent App Component\n * @param bEnableStrictHandling\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftDiscardAction(\n\toContext: Context,\n\tmessageHandler: MessageHandler,\n\toAppComponent: AppComponent,\n\tbEnableStrictHandling?: boolean\n): Promise<void> {\n\tif (!oContext.getProperty(\"IsActiveEntity\")) {\n\t\tconst oDiscardOperation = draft.createOperation(oContext, draftOperations.DISCARD);\n\t\tconst resourceModel = getResourceModel(oAppComponent);\n\t\tconst sGroupId = \"direct\";\n\t\tconst sActionName = resourceModel?.getText(\"C_TRANSACTION_HELPER_DRAFT_DISCARD_BUTTON\") || \"\";\n\t\t// as the discard action doesnt' send the active version in the response we do not use the replace in cache\n\t\tconst oDiscardPromise = !bEnableStrictHandling\n\t\t\t? oDiscardOperation.execute(sGroupId)\n\t\t\t: oDiscardOperation.execute(\n\t\t\t\t\tsGroupId,\n\t\t\t\t\tundefined,\n\t\t\t\t\toperationsHelper.fnOnStrictHandlingFailed.bind(\n\t\t\t\t\t\tdraft,\n\t\t\t\t\t\tsGroupId,\n\t\t\t\t\t\t{ AppComponent: oAppComponent, label: sActionName, model: oContext.getModel() },\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tmessageHandler,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined\n\t\t\t\t\t),\n\t\t\t\t\tfalse\n\t\t\t  );\n\t\toContext.getModel().submitBatch(sGroupId);\n\t\tawait oDiscardPromise;\n\t} else {\n\t\tthrow new Error(\"The discard action cannot be executed on an active document\");\n\t}\n}\n\n/**\n * This method creates a sibling context for a subobject page and calculates a sibling path for all intermediate paths\n * between the object page and the subobject page.\n * @param rootCurrentContext The context for the root of the draft\n * @param rightmostCurrentContext The context of the subobject page\n * @param rootContextInfo The context info of root of the draft\n * @param groupId\n * @returns The siblingInformation object\n */\nasync function computeSiblingInformation(\n\trootCurrentContext: Context,\n\trightmostCurrentContext: Context,\n\trootContextInfo?: RootContextInfo,\n\tgroupId?: string\n): Promise<SiblingInformation | undefined> {\n\tif (!rightmostCurrentContext.getPath().startsWith(rootCurrentContext.getPath())) {\n\t\t// Wrong usage !!\n\t\tLog.error(\"Cannot compute rightmost sibling context\");\n\t\tthrow new Error(\"Cannot compute rightmost sibling context\");\n\t}\n\n\tif (\n\t\trightmostCurrentContext.getProperty(\"IsActiveEntity\") === false &&\n\t\trightmostCurrentContext.getProperty(\"HasActiveEntity\") === false\n\t) {\n\t\t// We already know the sibling for rightmostCurrentContext doesn't exist\n\t\t// --> No need to check canonical paths etc...\n\t\treturn undefined;\n\t}\n\n\tconst model = rootCurrentContext.getModel();\n\ttry {\n\t\t// //////////////////////////////////////////////////////////////////\n\t\t// 1. Find all segments between the root object and the sub-object\n\t\t// Example: for root = /Param(aa)/Entity(bb) and rightMost = /Param(aa)/Entity(bb)/_Nav(cc)/_SubNav(dd)\n\t\t// ---> [\"Param(aa)/Entity(bb)\", \"_Nav(cc)\", \"_SubNav(dd)\"]\n\n\t\t// Find all segments in the rightmost path\n\t\tconst additionalPath = rightmostCurrentContext.getPath().replace(rootCurrentContext.getPath(), \"\");\n\t\tconst segments = additionalPath ? additionalPath.substring(1).split(\"/\") : [];\n\t\t// First segment is always the full path of the root object, which can contain '/' in case of a parametrized entity\n\t\tsegments.unshift(rootCurrentContext.getPath().substring(1));\n\n\t\t// //////////////////////////////////////////////////////////////////\n\t\t// 2. Request canonical paths of the sibling entity for each segment\n\t\t// Example: for [\"Param(aa)/Entity(bb)\", \"_Nav(cc)\", \"_SubNav(dd)\"]\n\t\t// --> request canonical paths for \"Param(aa)/Entity(bb)/SiblingEntity\", \"Param(aa)/Entity(bb)/_Nav(cc)/SiblingEntity\", \"Param(aa)/Entity(bb)/_Nav(cc)/_SubNav(dd)/SiblingEntity\"\n\t\tconst oldPaths: string[] = [];\n\t\tconst newPaths: string[] = [];\n\t\tlet currentPath = \"\";\n\n\t\t// Computing sibling entity of root of the draft context is not required if the context is already in the sub-OP\n\t\t// Example: Edit in Sub-OP where new context is already available\n\t\tconst paths = [...segments];\n\t\tif (rootContextInfo?.rootSiblingPathPromise) {\n\t\t\tpaths.shift();\n\t\t\tcurrentPath = \"/\" + rootCurrentContext?.getPath()?.substring(1);\n\t\t}\n\t\tconst canonicalPathPromises = paths.map(async (segment) => {\n\t\t\tcurrentPath += `/${segment}`;\n\t\t\toldPaths.unshift(currentPath);\n\t\t\tif (currentPath.endsWith(\")\")) {\n\t\t\t\tconst siblingContext = model\n\t\t\t\t\t.bindContext(`${currentPath}/SiblingEntity`, undefined, groupId ? { $$groupId: groupId } : undefined)\n\t\t\t\t\t.getBoundContext();\n\t\t\t\treturn siblingContext.requestCanonicalPath();\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve(undefined); // 1-1 relation\n\t\t\t}\n\t\t});\n\n\t\t// //////////////////////////////////////////////////////////////////\n\t\t// 3. Reconstruct the full paths from canonical paths (for path mapping)\n\t\t// Example: for canonical paths \"/Param(aa)/Entity(bb-sibling)\", \"/Entity2(cc-sibling)\", \"/Entity3(dd-sibling)\"\n\t\t// --> [\"Param(aa)/Entity(bb-sibling)\", \"Param(aa)/Entity(bb-sibling)/_Nav(cc-sibling)\", \"Param(aa)/Entity(bb-sibling)/_Nav(cc-sibling)/_SubNav(dd-sibling)\"]\n\t\tconst canonicalPaths = (await Promise.all(canonicalPathPromises)) as string[];\n\n\t\tif (rootContextInfo?.rootSiblingPathPromise) {\n\t\t\tconst rootSiblingPath = (await rootContextInfo.rootSiblingPathPromise)?.getPath() as string;\n\t\t\tcanonicalPaths.unshift(rootSiblingPath);\n\t\t\toldPaths.push(rootCurrentContext.getPath());\n\t\t}\n\t\tlet siblingPath = \"\";\n\t\tcanonicalPaths.forEach((canonicalPath, index) => {\n\t\t\tif (index !== 0) {\n\t\t\t\tif (segments[index].endsWith(\")\")) {\n\t\t\t\t\tconst navigation = segments[index].replace(/\\(.*$/, \"\"); // Keep only navigation name from the segment, i.e. aaa(xxx) --> aaa\n\t\t\t\t\tconst keys = canonicalPath.replace(/.*\\(/, \"(\"); // Keep only the keys from the canonical path, i.e. aaa(xxx) --> (xxx)\n\t\t\t\t\tsiblingPath += `/${navigation}${keys}`;\n\t\t\t\t} else {\n\t\t\t\t\tsiblingPath += `/${segments[index]}`; // 1-1 relation\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsiblingPath = canonicalPath; // To manage parametrized entities\n\t\t\t}\n\t\t\tnewPaths.unshift(siblingPath);\n\t\t});\n\n\t\treturn {\n\t\t\ttargetContext: model\n\t\t\t\t.bindContext(siblingPath, undefined, {\n\t\t\t\t\t$select: getMessagePathForContext(rightmostCurrentContext),\n\t\t\t\t\t$$groupId: \"$auto.Heroes\"\n\t\t\t\t})\n\t\t\t\t.getBoundContext(), // Create the rightmost sibling context from its path\n\t\t\tpathMapping: oldPaths.map((oldPath, index) => {\n\t\t\t\treturn {\n\t\t\t\t\toldPath,\n\t\t\t\t\tnewPath: newPaths[index]\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t} catch (error) {\n\t\t// A canonical path couldn't be resolved (because a sibling doesn't exist)\n\t\treturn undefined;\n\t}\n}\n\n/**\n * Creates a draft document from an existing document.\n *\n * The function supports several hooks as there is a certain coreography defined.\n * @param oContext Context of the active document for the new draft\n * @param oAppComponent The AppComponent\n * @param mParameters The parameters\n * @param [mParameters.oView] The view\n * @param [mParameters.bPreserveChanges] Preserve changes of an existing draft of another user\n * @param groupId The batch groupId for post call of edit action\n * @param messageHandler The message handler controller extension\n * @returns Promise resolves with the {@link sap.ui.model.odata.v4.Context context} of the new draft document\n */\nasync function createDraftFromActiveDocument(\n\toContext: Context,\n\toAppComponent: AppComponent,\n\tmParameters: {\n\t\toView: FEView;\n\t\tbPreserveChanges?: boolean | undefined;\n\t},\n\tgroupId: string,\n\tmessageHandler: MessageHandler\n): Promise<Context | undefined> {\n\tconst mParam = mParameters || {},\n\t\tbRunPreserveChangesFlow =\n\t\t\ttypeof mParam.bPreserveChanges === \"undefined\" || (typeof mParam.bPreserveChanges === \"boolean\" && mParam.bPreserveChanges); //default true\n\n\t/**\n\t * Overwrite the existing change.\n\t * @param response Context of the active document for the new draft or the error retrieved\n\t * @returns Resolves with result of {@link sap.fe.core.actions#executeDraftEditAction}\n\t */\n\tasync function overwriteChange(response: Context | ContextErrorType): Promise<Context | ContextErrorType | undefined> {\n\t\t//Overwrite existing changes\n\t\tconst oModel = oContext.getModel();\n\t\tconst draftDataContext = oModel.bindContext(`${oContext.getPath()}/DraftAdministrativeData`).getBoundContext();\n\t\tconst resourceModel = getResourceModel(mParameters.oView);\n\t\tconst draftAdminData = await draftDataContext.requestObject();\n\t\tif (draftAdminData) {\n\t\t\t// remove all unbound transition messages as we show a special dialog\n\t\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\t\tlet sInfo = draftAdminData.InProcessByUserDescription || draftAdminData.InProcessByUser;\n\t\t\tconst sEntitySet = mParameters.oView.getViewData().entitySet;\n\t\t\tif (sInfo) {\n\t\t\t\tconst sLockedByUserMsg = resourceModel.getText(\"C_DRAFT_OBJECT_PAGE_DRAFT_LOCKED_BY_USER\", sInfo, sEntitySet);\n\t\t\t\tMessageBox.error(sLockedByUserMsg);\n\t\t\t\tthrow new Error(sLockedByUserMsg);\n\t\t\t} else {\n\t\t\t\tsInfo = draftAdminData.CreatedByUserDescription || draftAdminData.CreatedByUser;\n\t\t\t\tconst sUnsavedChangesMsg = resourceModel.getText(\"C_DRAFT_OBJECT_PAGE_DRAFT_UNSAVED_CHANGES\", sInfo, sEntitySet);\n\t\t\t\tawait draft.showEditConfirmationMessageBox(sUnsavedChangesMsg, oContext);\n\t\t\t\treturn draft.executeDraftEditAction(oContext, false, mParameters.oView, groupId, messageHandler, true); // true because we overwrite changes\n\t\t\t}\n\t\t} else if ((response as ContextErrorType)?.message) {\n\t\t\tMessageBox.error((response as ContextErrorType).message);\n\t\t}\n\t\tthrow new Error(`Draft creation aborted for document: ${oContext.getPath()}`);\n\t}\n\n\tif (!oContext) {\n\t\tthrow new Error(\"Binding context to active document is required\");\n\t}\n\tlet oDraftContext: Context | ContextErrorType | undefined;\n\ttry {\n\t\toDraftContext = await draft.executeDraftEditAction(oContext, bRunPreserveChangesFlow, mParameters.oView, groupId, messageHandler);\n\t} catch (oResponse) {\n\t\tif ((oResponse as ContextErrorType).status === 409 || (oResponse as ContextErrorType).status === 423) {\n\t\t\tmessageHandling.removeBoundTransitionMessages();\n\t\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\t\tconst siblingInfo = await draft.computeSiblingInformation(oContext, oContext);\n\t\t\tif (siblingInfo?.targetContext) {\n\t\t\t\t//there is a context authorized to be edited by the current user\n\t\t\t\tawait CommonUtils.waitForContextRequested(siblingInfo.targetContext);\n\t\t\t\treturn siblingInfo.targetContext;\n\t\t\t} else {\n\t\t\t\t//there is no draft owned by the current user\n\t\t\t\toDraftContext = await overwriteChange(oResponse as ContextErrorType);\n\t\t\t}\n\t\t} else if (!(oResponse && (oResponse as ContextErrorType).canceled)) {\n\t\t\tthrow new Error(oResponse as string);\n\t\t}\n\t}\n\n\tif (oDraftContext) {\n\t\tconst sEditActionName = draft.getActionName(oDraftContext as Context, draftOperations.EDIT);\n\t\tconst oSideEffects = oAppComponent.getSideEffectsService().getODataActionSideEffects(sEditActionName, oDraftContext as Context);\n\t\tif (oSideEffects?.triggerActions?.length) {\n\t\t\tawait oAppComponent.getSideEffectsService().requestSideEffectsForODataAction(oSideEffects, oDraftContext as Context);\n\t\t\treturn oDraftContext as Context;\n\t\t} else {\n\t\t\treturn oDraftContext as Context;\n\t\t}\n\t} else {\n\t\treturn undefined;\n\t}\n}\n/**\n * Creates an active document from a draft document.\n *\n * The function supports several hooks as there is a certain choreography defined.\n * @param oContext Context of the active document for the new draft\n * @param oAppComponent The AppComponent\n * @param mParameters The parameters\n * @param [mParameters.fnBeforeActivateDocument] Callback that allows a veto before the 'Create' request is executed\n * @param [mParameters.fnAfterActivateDocument] Callback for postprocessing after document was activated.\n * @param messageHandler The message handler controller extension\n * @returns Promise resolves with the {@link sap.ui.model.odata.v4.Context context} of the new draft document\n */\nasync function activateDocument(\n\toContext: Context,\n\toAppComponent: AppComponent,\n\tmParameters: { fnBeforeActivateDocument?: Function; fnAfterActivateDocument?: Function },\n\tmessageHandler: MessageHandler\n): Promise<Context> {\n\tconst mParam = mParameters || {};\n\tif (!oContext) {\n\t\tthrow new Error(\"Binding context to draft document is required\");\n\t}\n\n\tconst bExecute = mParam.fnBeforeActivateDocument ? await mParam.fnBeforeActivateDocument(oContext) : true;\n\tif (!bExecute) {\n\t\tthrow new Error(`Activation of the document was aborted by extension for document: ${oContext.getPath()}`);\n\t}\n\n\tlet oActiveDocumentContext: Context;\n\tif (!hasPrepareAction(oContext)) {\n\t\toActiveDocumentContext = await executeDraftActivationAction(oContext, oAppComponent, messageHandler);\n\t} else {\n\t\t/* activation requires preparation */\n\t\tconst sBatchGroup = \"$auto\";\n\t\t//when there are pending changes there will be a patch request merged together with the draftPrepare and draftAcivate.\n\t\t//The patch changes the Etag, therfore the prepare needs to ignore Etags\n\t\tconst ignoreEtag: boolean = oContext.getModel().hasPendingChanges(\"$auto\") ? true : false;\n\t\t// we use the same batchGroup to force prepare and activate in a same batch but with different changeset\n\t\tlet oPreparePromise = draft.executeDraftPreparationAction(oContext, sBatchGroup, undefined, ignoreEtag);\n\t\toContext.getModel().submitBatch(sBatchGroup);\n\t\tconst oActivatePromise = draft.executeDraftActivationAction(oContext, oAppComponent, messageHandler, sBatchGroup);\n\t\ttry {\n\t\t\tconst values = await Promise.all([oPreparePromise, oActivatePromise]);\n\t\t\toActiveDocumentContext = values[1];\n\t\t} catch (err) {\n\t\t\t// BCP 2270084075\n\t\t\t// if the Activation fails, then the messages are retrieved from PREPARATION action\n\t\t\tconst sMessagesPath = getMessagePathForPrepare(oContext);\n\t\t\tif (sMessagesPath) {\n\t\t\t\toPreparePromise = draft.executeDraftPreparationAction(oContext, sBatchGroup, true);\n\t\t\t\toContext.getModel().submitBatch(sBatchGroup);\n\t\t\t\tawait oPreparePromise;\n\t\t\t\tconst data = await oContext.requestObject();\n\t\t\t\tif (data[sMessagesPath].length > 0) {\n\t\t\t\t\t//if messages are available from the PREPARATION action, then previous transition messages are removed\n\t\t\t\t\tmessageHandler?.removeTransitionMessages(false, false, oContext.getPath());\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t}\n\treturn mParam.fnAfterActivateDocument ? mParam.fnAfterActivateDocument(oContext, oActiveDocumentContext) : oActiveDocumentContext;\n}\n\n/**\n * Display the confirmation dialog box after pressing the edit button of an object page with unsaved changes.\n * @param sUnsavedChangesMsg Dialog box message informing the user that if he starts editing, the previous unsaved changes will be lost\n * @param oContext Context of the active document for the new draft\n * @returns Promise resolves\n */\nasync function showEditConfirmationMessageBox(sUnsavedChangesMsg: string, oContext: Context): Promise<boolean> {\n\tconst localI18nRef = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\treturn new Promise(function (resolve: (value: boolean) => void, reject: (reason?: unknown) => void) {\n\t\tconst oDialog = new Dialog({\n\t\t\ttitle: localI18nRef.getText(\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_WARNING\"),\n\t\t\tstate: \"Warning\",\n\t\t\tcontent: new Text({\n\t\t\t\ttext: sUnsavedChangesMsg\n\t\t\t}),\n\t\t\tbeginButton: new Button({\n\t\t\t\ttext: localI18nRef.getText(\"C_COMMON_OBJECT_PAGE_EDIT\"),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: function (): void {\n\t\t\t\t\toDialog.close();\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tendButton: new Button({\n\t\t\t\ttext: localI18nRef.getText(\"C_COMMON_OBJECT_PAGE_CANCEL\"),\n\t\t\t\tpress: function (): void {\n\t\t\t\t\toDialog.close();\n\t\t\t\t\treject(`Draft creation aborted for document: ${oContext.getPath()}`);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tafterClose: function (): void {\n\t\t\t\toDialog.destroy();\n\t\t\t}\n\t\t});\n\t\toDialog.addStyleClass(\"sapUiContentPadding\");\n\t\toDialog.open();\n\t});\n}\n\n/**\n * HTTP POST call when DraftAction is present for Draft Delete; HTTP DELETE call when there is no DraftAction\n * and Active Instance always uses DELETE.\n * @param oContext Context of the document to be discarded\n * @param messageHandler The message handler controller extension\n * @param oAppComponent Context of the document to be discarded\n * @param bEnableStrictHandling\n * @returns A Promise resolved when the context is deleted\n */\nasync function deleteDraft(\n\toContext: Context,\n\tmessageHandler: MessageHandler,\n\toAppComponent: AppComponent,\n\tbEnableStrictHandling?: boolean\n): Promise<void> {\n\tconst sDiscardAction = getActionName(oContext, draftOperations.DISCARD),\n\t\tbIsActiveEntity = oContext.getObject().IsActiveEntity;\n\n\tif (bIsActiveEntity || (!bIsActiveEntity && !sDiscardAction)) {\n\t\t//Use Delete in case of active entity and no discard action available for draft\n\t\tif (oContext.hasPendingChanges() && !oContext.isInactive()) {\n\t\t\treturn oContext\n\t\t\t\t.getBinding()\n\t\t\t\t.resetChanges()\n\t\t\t\t.then(async function () {\n\t\t\t\t\treturn oContext.delete();\n\t\t\t\t})\n\t\t\t\t.catch(function (error: unknown) {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t} else {\n\t\t\t// When cancelling an edit draft root node, use model.delete instead of context.delete, to only send deletion to backend,\n\t\t\t// but keep context alive (including bindings). Thus, we can ensure seamless transistion from draft to active instance\n\t\t\t// (without intermediate undefined bindings e.g. leading to flickering).\n\t\t\t// In other cases (deleting active, discarding create draft or discarding draft node), stay with context.delete.\n\t\t\t// When cancelling a create draft, page is closed, thus the problem of flickering cannot occur.\n\t\t\t// In case of discarding a draft node, theoretically the same problem could\n\t\t\t// occur, but needs quite specific modelling (button visibility on item level bound against service property in an FCL app)\n\t\t\t// and acting (looking at button on third column while discarding on 2nd column). Currently, model seems not to be prepared\n\t\t\t// for that case, thus due to the minimal impact (only intermediate visual state), accepting this for the time being.\n\t\t\treturn !oContext.getProperty(\"IsActiveEntity\") &&\n\t\t\t\tModelHelper.isDraftRoot(\n\t\t\t\t\tgetInvolvedDataModelObjects(oContext.getModel().getMetaModel().getMetaContext(oContext.getPath()))?.targetEntitySet\n\t\t\t\t) &&\n\t\t\t\toContext.getProperty(\"HasActiveEntity\")\n\t\t\t\t? oContext.getModel().delete(oContext)\n\t\t\t\t: oContext.delete();\n\t\t}\n\t} else {\n\t\t//Use Discard Post Action if it is a draft entity and discard action exists\n\t\tawait executeDraftDiscardAction(oContext, messageHandler, oAppComponent, bEnableStrictHandling);\n\t}\n}\n\nconst draft = {\n\tcreateDraftFromActiveDocument: createDraftFromActiveDocument,\n\tactivateDocument: activateDocument,\n\tdeleteDraft: deleteDraft,\n\texecuteDraftEditAction: executeDraftEditAction,\n\texecuteDraftValidation: executeDraftValidation,\n\texecuteDraftPreparationAction: executeDraftPreparationAction,\n\texecuteDraftActivationAction: executeDraftActivationAction,\n\thasPrepareAction: hasPrepareAction,\n\tcomputeSiblingInformation: computeSiblingInformation,\n\tprocessDataLossOrDraftDiscardConfirmation: draftDataLossPopup.processDataLossOrDraftDiscardConfirmation,\n\tsilentlyKeepDraftOnForwardNavigation: draftDataLossPopup.silentlyKeepDraftOnForwardNavigation,\n\tcreateOperation: createOperation,\n\texecuteDraftDiscardAction: executeDraftDiscardAction,\n\tNavigationType: draftDataLossPopup.NavigationType,\n\tgetActionName: getActionName,\n\tshowEditConfirmationMessageBox: showEditConfirmationMessageBox\n};\n\nexport default draft;\n"],"mappings":"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","ignoreList":[],"file":"draft-dbg.js"}