{"version":3,"names":["NavigationType","DraftDataLossOptions","dataLossDialog","DraftDataLossDialog","silentlyKeepDraftOnForwardNavigation","pageController","oManifest","getAppComponent","getManifestEntry","app","processFclMode","draftAdminData","fnCancelFunction","oController","processFunctionForDrafts","bSkipBindingToView","context","CreationDateTime","LastChangeDateTime","open","then","selectedKey","draftDataLossPopup","handleDialogSelection","processNoActiveEntityMode","navigationType","bSilentlyKeepDraftOnForwardNavigation","EditState","isEditStateDirty","BackNavigation","discardDraft","error","Log","ForwardNavigation","processEditingDraftForExistingEntity","oContext","mParameters","skipDiscardPopover","skipBindingToView","editFlow","cancelDocument","processEditStateDirty","processDraftAdminData","fnProcessFunction","draftRootContext","arguments","length","undefined","collaborationConnected","collaborativeDraft","isConnected","disconnect","_len","args","Array","_key","apply","getRootViewController","isFclEnabled","getObject","HasActiveEntity","processDataLossOrDraftDiscardConfirmation","oView","getView","oModel","getBindingContext","getModel","oMetaModel","getMetaModel","viewData","getViewData","contextPath","entitySet","isDraftRoot","bIsEditable","CommonUtils","getIsEditable","originalContext","draftRootPath","getPath","ModelHelper","getDraftRootPath","bindContext","$expand","getBoundContext","backNavExitsApp","getRouterProxy","checkIfBackExitsApp","isDeleted","requestProperty","oError","saveDocument","controller","hasInitialContext","isA","_saveDocument","params","skipBackNavigation","Save","savedContext","catch","RecommendationDialogDecision","Continue","close","Keep","Discard","discardedDraft"],"sourceRoot":".","sources":["draftDataLossPopup.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport EditState from \"sap/fe/core/helpers/EditState\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type ObjectPageControllerController from \"sap/fe/templates/ObjectPage/ObjectPageController.controller\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport DraftDataLossDialog from \"../../controls/DataLossOrDraftDiscard/DraftDataLossDialog\";\nimport { RecommendationDialogDecision } from \"../../controls/Recommendations/ConfirmRecommendationDialog\";\n\n/* Enum for navigation types */\nenum NavigationType {\n\tBackNavigation = \"BackNavigation\",\n\tForwardNavigation = \"ForwardNavigation\"\n}\n\n/* Enum types for the data loss dialog options */\nenum DraftDataLossOptions {\n\tSave = \"draftDataLossOptionSave\",\n\tKeep = \"draftDataLossOptionKeep\",\n\tDiscard = \"draftDataLossOptionDiscard\"\n}\n\ntype DraftAdministrativeData = {\n\tCreationDateTime: Date;\n\tLastChangeDateTime: Date;\n};\n\n/*Create the data loss dialog*/\nconst dataLossDialog = new DraftDataLossDialog(\"fe::DraftDataLossPopup\");\n\n/**\n * The method checks whether an optional parameter in the manifest is set to silently keep the draft in case a forward navigation is triggered.\n * @param pageController The reference to the current PageController instance\n * @returns Boolean value with true or false to silently keep the draft\n */\nfunction silentlyKeepDraftOnForwardNavigation(pageController: PageController): boolean {\n\tconst oManifest = pageController.getAppComponent().getManifestEntry(\"sap.fe\");\n\treturn oManifest?.app?.silentlyKeepDraftOnForwardNavigation || false;\n}\n\n/**\n * Logic to process the FCL mode.\n * @param draftAdminData Admin data\n * @param fnCancelFunction The cancel function\n * @param oController The current controller referenced\n * @param processFunctionForDrafts The function to process the handler\n * @param bSkipBindingToView The optional parameter to skip the binding to the view\n * @param context The context to be used for the draft operation\n * @returns Nothing\n */\nasync function processFclMode(\n\tdraftAdminData: DraftAdministrativeData,\n\tfnCancelFunction: Function,\n\toController: PageController,\n\tprocessFunctionForDrafts: Function,\n\tbSkipBindingToView?: boolean,\n\tcontext?: ODataV4Context\n): Promise<void> {\n\t// The application is running in FCL mode so in this case we fall back to\n\t// the old logic since the dirty state handling is not properly working\n\t// for FCL.\n\tif (draftAdminData.CreationDateTime !== draftAdminData.LastChangeDateTime) {\n\t\treturn dataLossDialog\n\t\t\t.open(oController)\n\t\t\t.then((selectedKey) =>\n\t\t\t\tdraftDataLossPopup.handleDialogSelection(\n\t\t\t\t\tselectedKey as string,\n\t\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\t\tfnCancelFunction,\n\t\t\t\t\toController,\n\t\t\t\t\tbSkipBindingToView,\n\t\t\t\t\tcontext\n\t\t\t\t)\n\t\t\t);\n\t} else {\n\t\tprocessFunctionForDrafts();\n\t}\n}\n\n/**\n * Logic to process the mode with no active entity.\n * @param draftAdminData Admin data\n * @param fnCancelFunction The cancel function\n * @param oController The current controller referenced\n * @param processFunctionForDrafts The function to process the handler\n * @param navigationType The navigation type for which the function should be called\n * @param bSilentlyKeepDraftOnForwardNavigation The parameter to determine whether to skip the popup appearance in forward case\n * @param bSkipBindingToView The optional parameter to skip the binding to the view\n * @param context The context to be used for the draft operations\n * @returns Nothing\n */\nasync function processNoActiveEntityMode(\n\tdraftAdminData: DraftAdministrativeData,\n\tfnCancelFunction: Function,\n\toController: PageController,\n\tprocessFunctionForDrafts: Function,\n\tnavigationType: NavigationType,\n\tbSilentlyKeepDraftOnForwardNavigation: boolean,\n\tbSkipBindingToView?: boolean,\n\tcontext?: ODataV4Context\n): Promise<void> {\n\t// There is no active entity so, we are editing either newly created data or\n\t// a draft which has never been saved to active version\n\t// Since we want to react differently in the two situations, we have to check the\n\t// dirty state\n\tif (EditState.isEditStateDirty()) {\n\t\tif (draftAdminData.CreationDateTime === draftAdminData.LastChangeDateTime && navigationType === NavigationType.BackNavigation) {\n\t\t\t// in case we have untouched changes for the draft and a \"back\"\n\t\t\t// navigation we can silently discard the draft again\n\t\t\t// eslint-disable-next-line promise/no-nesting\n\t\t\ttry {\n\t\t\t\tawait draftDataLossPopup.discardDraft(oController, bSkipBindingToView, context);\n\t\t\t\tprocessFunctionForDrafts();\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.error(\"Error while canceling the document\", error as string);\n\t\t\t}\n\t\t} else if (navigationType === NavigationType.ForwardNavigation && bSilentlyKeepDraftOnForwardNavigation) {\n\t\t\t// In case we have a \"forward navigation\" and an additional parameter set in the manifest\n\t\t\t// we \"silently\" keep the draft\n\t\t\tprocessFunctionForDrafts();\n\t\t} else {\n\t\t\t// In this case data is being changed or a forward navigation is triggered\n\t\t\t// and, we always want to show the data loss dialog on navigation\n\t\t\treturn dataLossDialog\n\t\t\t\t.open(oController)\n\t\t\t\t.then((selectedKey) =>\n\t\t\t\t\tdraftDataLossPopup.handleDialogSelection(\n\t\t\t\t\t\tselectedKey as string,\n\t\t\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\t\t\tfnCancelFunction,\n\t\t\t\t\t\toController,\n\t\t\t\t\t\tbSkipBindingToView,\n\t\t\t\t\t\tcontext\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t}\n\t} else {\n\t\t// We are editing a draft which has been created earlier but never saved to active\n\t\t// version and since the edit state is not dirty, there have been no user changes\n\t\t// so in this case we want to silently navigate and do nothing\n\t\tprocessFunctionForDrafts();\n\t}\n}\n\n/**\n * Logic to process the draft editing for existing entity.\n * @param oController The current controller referenced.\n * @param oContext The context of the current call\n * @param processFunctionForDrafts The function to process the handler\n * @param navigationType The navigation type for which the function should be called\n */\nasync function processEditingDraftForExistingEntity(\n\toController: PageController,\n\toContext: ODataV4Context,\n\tprocessFunctionForDrafts: Function,\n\tnavigationType: NavigationType\n): Promise<void> {\n\t// We are editing a draft for an existing active entity\n\t// The CreationDateTime and LastChangeDateTime are equal, so this draft was\n\t// never saved before, hence we're currently editing a newly created draft for\n\t// an existing active entity for the first time.\n\t// Also, there have so far been no changes made to the draft and in this\n\t// case we want to silently navigate and delete the draft in case of a back\n\t// navigation but in case of a forward navigation we want to silently keep it!\n\tif (navigationType === NavigationType.BackNavigation) {\n\t\tconst mParameters = {\n\t\t\tskipDiscardPopover: true,\n\t\t\tskipBindingToView: true\n\t\t};\n\n\t\ttry {\n\t\t\tawait oController.editFlow.cancelDocument(oContext, mParameters);\n\t\t\tprocessFunctionForDrafts();\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while canceling the document\", error as Error);\n\t\t}\n\t} else {\n\t\t// In case of a forward navigation we silently keep the draft and only\n\t\t// execute the followup function.\n\t\tprocessFunctionForDrafts();\n\t}\n}\n\n/**\n * Logic to process the context when the edit state is in dirty mode.\n * @param oController The current controller referenced.\n * @param fnCancelFunction The cancel function\n * @param processFunctionForDrafts The function to process the handler\n * @param navigationType The navigation type for which the function should be called\n * @param bSilentlyKeepDraftOnForwardNavigation The parameter to determine whether to skip the popup appearance in forward case\n * @param bSkipBindingToView The optional parameter to skip the binding to the view.\n * @param context The context to be used for the draft operations\n * @returns Nothing\n */\nasync function processEditStateDirty(\n\toController: PageController,\n\tfnCancelFunction: Function,\n\tprocessFunctionForDrafts: Function,\n\tnavigationType: NavigationType,\n\tbSilentlyKeepDraftOnForwardNavigation: boolean,\n\tbSkipBindingToView?: boolean,\n\tcontext?: ODataV4Context\n): Promise<void> {\n\tif (navigationType === NavigationType.ForwardNavigation && bSilentlyKeepDraftOnForwardNavigation) {\n\t\t// In case we have a \"forward navigation\" and an additional parameter set in the manifest\n\t\t// we \"silently\" keep the draft\n\t\tprocessFunctionForDrafts();\n\t} else {\n\t\t// The CreationDateTime and LastChangeDateTime are NOT equal, so we are currently editing\n\t\t// an existing draft and need to distinguish depending on if any changes\n\t\t// have been made in the current editing session or not\n\t\t// Changes have been made in the current editing session, so we want\n\t\t// to show the data loss dialog and let the user decide\n\t\treturn dataLossDialog\n\t\t\t.open(oController)\n\t\t\t.then((selectedKey) =>\n\t\t\t\tdraftDataLossPopup.handleDialogSelection(\n\t\t\t\t\tselectedKey as string,\n\t\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\t\tfnCancelFunction,\n\t\t\t\t\toController,\n\t\t\t\t\tbSkipBindingToView,\n\t\t\t\t\tcontext\n\t\t\t\t)\n\t\t\t);\n\t}\n}\n\n/**\n * Logic to process the admin data.\n * @param draftAdminData Admin data\n * @param fnProcessFunction The function to process the handler\n * @param fnCancelFunction The cancel function\n * @param draftRootContext The context for the draft root\n * @param oController The current controller referenced\n * @param bSkipBindingToView The optional parameter to skip the binding to the view\n * @param navigationType The navigation type for which the function should be called\n * @returns Nothing\n */\nasync function processDraftAdminData(\n\tdraftAdminData: DraftAdministrativeData,\n\tfnProcessFunction: Function,\n\tfnCancelFunction: Function,\n\tdraftRootContext: ODataV4Context,\n\toController: PageController,\n\tbSkipBindingToView?: boolean,\n\tnavigationType: NavigationType = NavigationType.BackNavigation\n): Promise<void> {\n\tconst collaborationConnected = oController.collaborativeDraft.isConnected();\n\tconst processFunctionForDrafts = !collaborationConnected\n\t\t? fnProcessFunction\n\t\t: function (...args: unknown[]): void {\n\t\t\t\toController.collaborativeDraft.disconnect();\n\t\t\t\tfnProcessFunction.apply(null, ...args);\n\t\t  };\n\n\tconst bSilentlyKeepDraftOnForwardNavigation = silentlyKeepDraftOnForwardNavigation(oController);\n\n\tif (draftAdminData) {\n\t\tif (oController.getAppComponent().getRootViewController().isFclEnabled()) {\n\t\t\tawait processFclMode(\n\t\t\t\tdraftAdminData,\n\t\t\t\tfnCancelFunction,\n\t\t\t\toController,\n\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\tbSkipBindingToView,\n\t\t\t\tdraftRootContext\n\t\t\t);\n\t\t} else if (!draftRootContext.getObject().HasActiveEntity) {\n\t\t\tprocessNoActiveEntityMode(\n\t\t\t\tdraftAdminData,\n\t\t\t\tfnCancelFunction,\n\t\t\t\toController,\n\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\tnavigationType,\n\t\t\t\tbSilentlyKeepDraftOnForwardNavigation,\n\t\t\t\tbSkipBindingToView\n\t\t\t);\n\t\t} else if (draftAdminData.CreationDateTime === draftAdminData.LastChangeDateTime) {\n\t\t\tprocessEditingDraftForExistingEntity(oController, draftRootContext, processFunctionForDrafts, navigationType);\n\t\t} else if (EditState.isEditStateDirty()) {\n\t\t\tprocessEditStateDirty(\n\t\t\t\toController,\n\t\t\t\tfnCancelFunction,\n\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\tnavigationType,\n\t\t\t\tbSilentlyKeepDraftOnForwardNavigation,\n\t\t\t\tbSkipBindingToView,\n\t\t\t\tdraftRootContext\n\t\t\t);\n\t\t} else {\n\t\t\t// The user started editing the existing draft but did not make any changes\n\t\t\t// in the current editing session, so in this case we do not want\n\t\t\t// to show the data loss dialog but just keep the draft\n\t\t\tprocessFunctionForDrafts();\n\t\t}\n\t} else {\n\t\tfnProcessFunction();\n\t}\n}\n\n/**\n * The general handler in which the individual steps are called.\n * @param fnProcessFunction\n * @param fnCancelFunction\n * @param oContext\n * @param oController\n * @param bSkipBindingToView\n * @param navigationType\n */\nasync function processDataLossOrDraftDiscardConfirmation(\n\tfnProcessFunction: Function,\n\tfnCancelFunction: Function,\n\toContext: ODataV4Context,\n\toController: PageController,\n\tbSkipBindingToView?: boolean,\n\tnavigationType: NavigationType = NavigationType.BackNavigation\n): Promise<void> {\n\tconst oView = oController.getView();\n\tconst oModel = oView.getBindingContext().getModel();\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst viewData = oView.getViewData() as { entitySet?: string; contextPath?: string };\n\tconst contextPath = viewData.contextPath || (viewData.entitySet ? `/${viewData.entitySet}` : undefined);\n\tconst isDraftRoot = contextPath ? !!oMetaModel.getObject(`${contextPath}@com.sap.vocabularies.Common.v1.DraftRoot`) : false;\n\tconst bIsEditable = CommonUtils.getIsEditable(oView);\n\tconst originalContext = oContext;\n\tlet draftRootPath = oContext.getPath();\n\tif (!isDraftRoot) {\n\t\tdraftRootPath = ModelHelper.getDraftRootPath(oContext) ?? draftRootPath;\n\t\toContext = oModel.bindContext(draftRootPath, undefined, { $expand: \"DraftAdministrativeData\" }).getBoundContext();\n\t}\n\n\t// Shouldn't display data loss popover on shell back navigation from sub-object pages (unless there's no page before in the history because of deep linking)\n\t// or when object page is in display mode, or when the object is deleted\n\tconst backNavExitsApp = isDraftRoot || oController.getAppComponent().getRouterProxy().checkIfBackExitsApp();\n\tif (originalContext.isDeleted() || (!backNavExitsApp && navigationType === NavigationType.BackNavigation) || !bIsEditable) {\n\t\tfnProcessFunction();\n\t} else {\n\t\ttry {\n\t\t\t// The following 3 properties are needed to determine the state of the draft, so we ensure they are loaded\n\t\t\tawait oContext.requestProperty([\n\t\t\t\t\"DraftAdministrativeData/CreationDateTime\",\n\t\t\t\t\"DraftAdministrativeData/LastChangeDateTime\",\n\t\t\t\t\"HasActiveEntity\"\n\t\t\t]);\n\t\t\tconst draftAdminData = oContext.getObject(\"DraftAdministrativeData\");\n\t\t\tawait processDraftAdminData(\n\t\t\t\tdraftAdminData,\n\t\t\t\tfnProcessFunction,\n\t\t\t\tfnCancelFunction,\n\t\t\t\toContext,\n\t\t\t\toController,\n\t\t\t\tbSkipBindingToView,\n\t\t\t\tnavigationType\n\t\t\t);\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"Cannot retrieve draftDataContext information\", oError as string);\n\t\t\tfnProcessFunction();\n\t\t}\n\t}\n}\n\n/**\n * Saves the document. If the controller is of type ObjectPage, then internal _saveDocument is called, otherwise saveDocument\n * from EditFlow is called.\n * @param controller Controller of the current view\n * @param context The context to be used for the draft operations\n * @returns A promise resolved if the save was successful\n */\nasync function saveDocument(controller: PageController, context?: ODataV4Context): Promise<unknown> {\n\tconst hasInitialContext = context !== undefined;\n\tcontext = context ?? controller.getView().getBindingContext();\n\tif (!hasInitialContext && controller.isA<ObjectPageControllerController>(\"sap.fe.templates.ObjectPage.ObjectPageController\")) {\n\t\treturn controller._saveDocument();\n\t} else {\n\t\treturn controller.editFlow.saveDocument(context, {});\n\t}\n}\n\n/**\n * Discards the draft.\n * @param controller Controller of the current view\n * @param skipBindingToView The parameter to skip the binding to the view\n * @param context The context to be used for the draft operations\n * @returns A promise resolved if cancelDocument was successful\n */\nasync function discardDraft(\n\tcontroller: PageController,\n\tskipBindingToView: boolean | undefined,\n\tcontext?: ODataV4Context\n): Promise<unknown> {\n\tcontext = context ?? controller.getView().getBindingContext();\n\tconst params = {\n\t\tskipBackNavigation: true,\n\t\tskipDiscardPopover: true,\n\t\tskipBindingToView: skipBindingToView !== undefined ? skipBindingToView : true\n\t};\n\treturn controller.editFlow.cancelDocument(context, params);\n}\n\n/**\n * Executes the follow-up functions after an option was selected in the data loss dialog.\n * @param selectedKey The key of the selected option from the data loss dialog\n * @param processFunctionForDrafts The function to process the handler\n * @param fnCancelFunction The function to process the handler\n * @param controller Controller of the current view\n * @param skipBindingToView The parameter to skip the binding to the view\n * @param context The context to be used for the binding\n */\nfunction handleDialogSelection(\n\tselectedKey: string,\n\tprocessFunctionForDrafts: Function,\n\tfnCancelFunction: Function,\n\tcontroller: PageController,\n\tskipBindingToView: boolean | undefined,\n\tcontext?: ODataV4Context\n): void {\n\tswitch (selectedKey) {\n\t\tcase DraftDataLossOptions.Save:\n\t\t\tdraftDataLossPopup\n\t\t\t\t.saveDocument(controller, context)\n\t\t\t\t.then((savedContext?) => processFunctionForDrafts(savedContext))\n\t\t\t\t.catch(function (error: string | undefined) {\n\t\t\t\t\tif (error === RecommendationDialogDecision.Continue) {\n\t\t\t\t\t\treturn fnCancelFunction();\n\t\t\t\t\t}\n\t\t\t\t\tLog.error(\"Error while saving document\", error);\n\t\t\t\t});\n\t\t\tdataLossDialog.close();\n\t\t\tbreak;\n\t\tcase DraftDataLossOptions.Keep:\n\t\t\tprocessFunctionForDrafts();\n\t\t\tdataLossDialog.close();\n\t\t\tbreak;\n\t\tcase DraftDataLossOptions.Discard:\n\t\t\tdraftDataLossPopup\n\t\t\t\t.discardDraft(controller, skipBindingToView, context)\n\t\t\t\t.then((discardedDraft?) => processFunctionForDrafts(discardedDraft))\n\t\t\t\t.catch(function (error: string | undefined) {\n\t\t\t\t\tLog.error(\"Error while discarding draft\", error);\n\t\t\t\t});\n\t\t\tdataLossDialog.close();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tfnCancelFunction();\n\t\t\tdataLossDialog.close();\n\t}\n}\n\nconst draftDataLossPopup = {\n\tprocessDataLossOrDraftDiscardConfirmation: processDataLossOrDraftDiscardConfirmation,\n\tsilentlyKeepDraftOnForwardNavigation: silentlyKeepDraftOnForwardNavigation,\n\tNavigationType: NavigationType,\n\tprocessFclMode: processFclMode,\n\tprocessNoActiveEntityMode: processNoActiveEntityMode,\n\tprocessEditingDraftForExistingEntity: processEditingDraftForExistingEntity,\n\tprocessEditStateDirty: processEditStateDirty,\n\thandleDialogSelection: handleDialogSelection,\n\tsaveDocument: saveDocument,\n\tdiscardDraft: discardDraft\n};\n\nexport default draftDataLossPopup;\n"],"mappings":"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","ignoreList":[],"file":"draftDataLossPopup-dbg.js"}