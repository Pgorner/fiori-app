{"version":3,"names":["Constants","FELibrary","InvocationGrouping","Action","MessageBox","callBoundAction","sActionName","contexts","oModel","oAppComponent","mParameters","length","Error","aContexts","Array","isArray","oMetaModel","getMetaModel","sActionPath","getMetaPath","getPath","oBoundAction","createBindingContext","isCriticalAction","ActionRuntime","getIsActionCritical","convertedTypes","convertTypes","convertedAction","resolvePath","target","callAction","callActionImport","actionName","model","appComponent","parameters","metaModel","actionPath","convertedActionImport","action","unboundActionIndex","actions","filter","name","findIndex","isBound","actionNameFromModel","actionImport","callBoundFunction","sFunctionName","context","Promise","reject","sFunctionPath","oBoundFunction","_executeFunction","callFunctionImport","bindContext","oFunctionImport","getObject","oFunction","functionToCall","groupId","executionPromise","execute","submitBatch","getBoundContext","checkParameterTypeAndReturnConvertedValue","parameter","value","undefined","BaseType","__ui5_require_async","default","TypeMap","parameterType","type","getBaseType","String","typeInstance","getDataTypeInstance","parseValue","oAction","strictHandlingUtilities","is412Executed","strictHandlingTransitionFails","strictHandlingPromises","strictHandlingWarningMessages","delaySuccessMessages","processedMessageIds","Set","fullyQualifiedName","replace","bGrouped","invocationGrouping","ChangeSet","resolve","sActionLabel","label","bSkipParameterDialog","skipParameterDialog","bIsCreateAction","bIsCriticalAction","sMessagesPath","iMessageSideEffect","isSameEntity","bValuesProvidedForAllMandatoryParameters","actionDefinition","actionParameters","slice","bActionNeedsParameterDialog","aParameterValues","parameterValues","oComponentData","getComponentData","oStartupParameters","startupParameters","actionParameter","every","annotations","UI","Hidden","valueOf","_valuesProvidedForAllMandatoryParameters","mActionExecutionParameters","defaultParametersValues","fnOnSubmitted","onSubmitted","fnOnResponse","onResponse","aActionParameters","defaultValuesExtensionFunction","selectedItems","convertedMetaData","filteredEntitySet","entitySets","singleEntitySet","entityType","returnEntityType","currentEntitySet","returnCollection","sourceEntityType","ModelHelper","isDraftRoot","mBindingParameters","$select","additionalSideEffect","pathExpressions","getMessagesPath","exp","entityProperties","find","property","split","includes","push","triggerActions","splice","internalModelContext","operationAvailableMap","isCreateAction","bObjectPage","disableStrictHandling","controlId","control","parentControl","byId","isStatic","isCollection","operationResult","executionWitDialog","parameterDialog","getCoreUIFactory","newParameterDialog","entitySetName","view","messageHandler","beforeShowingMessage","actionParameterShowMessageCallback","ignoreETag","createDialog","openDialog","confirmCriticalAction","e","afterActionResolution","i","element","parameterValueNotConverted","ParameterDefaultValue","oOperationResult","ODataOperation","messages","Messaging","getMessageModel","getData","concat","strictHandlingFails","aFailedContexts","forEach","fail","getContext","oFailedOperationResult","addMessages","showGenericErrorMessageForChangeSet","messageHandling","hasTransitionErrorsOrWarnings","showMessageDialog","onBeforeShowMessage","aMessages","showMessageParametersIn","res","status","aSelectedContexts","entitySet","boundActionName","then","clearStrictWarningMessages","getConfirmTitle","oParentControl","suffixResourceKey","key","resourceModel","getResourceModel","titleOverrideExists","checkIfResourceKeyExists","getText","sConfirmationText","confirm","title","onClose","sAction","OK","oOperation","oError","CancelActionDialog","$IsBound","selectedContexts","getProperty","setActionEnablement","JSON","parse","isA","getSelectedContexts","DeleteHelper","updateDeleteInfoForSelectedContexts","filterAPDandContextMessages","errorTargetsInAPD","unboundMessages","isAPDOPen","removeContextMessagesfromModel","containsBoundTransistion","CommonUtils","getIsEditable","removeMessagesForActionParameterDialog","messagesToShow","showMessageInDialog","oDialog","isActionSuccessful","showMessageBox","oControl","oResourceBundle","Library","getResourceBundleFor","message","getTargets","APDmessages","some","actionParam","APDMessage","isAPDTarget","messageModel","messagesInModel","aBoundMessages","getMessages","genericMessage","isEditable","nonErrorMessageExistsInDialog","getType","nonErrorMessageExistsInModel","getGenericMsgForSingleErrorInChangeSet","unshift","sMessage","sDescriptionText","Message","MessageType","persistent","description","code","isOpen","close","destroy","filteredMessages","bIsAPDOpen","fnGetMessageSubtitle","setMessageSubtitle","bind","showChangeSetErrorDialog","hiddenAnnotationSetOnAllActions","fieldControl","Common","FieldControl","isMandatory","toString","parameterValue","resourceBundle","technicalDetails","fe","changeSetPreTextForSingleError","operations","valuesProvidedForAllMandatoryParameters"],"sourceRoot":".","sources":["facade.ts"],"sourcesContent":["import type {\n\tActionImport,\n\tActionParameter,\n\tAction as EdmAction,\n\tActionParameter as EdmActionParameter,\n\tPrimitiveType\n} from \"@sap-ux/vocabularies-types\";\nimport ActionRuntime from \"sap/fe/core/ActionRuntime\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport { getCoreUIFactory } from \"sap/fe/core/UIProvider\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport type { MessageWithHeader, ShowMessageParameters } from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport { convertTypes, type MetaModelAction } from \"sap/fe/core/converters/MetaModelConverter\";\nimport DeleteHelper from \"sap/fe/core/helpers/DeleteHelper\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport FELibrary from \"sap/fe/core/library\";\nimport type { ActionSideEffectsType } from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport type Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport type Control from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type MultiValueFieldItem from \"sap/ui/mdc/field/MultiValueFieldItem\";\nimport type Context from \"sap/ui/model/Context\";\nimport type { default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type AppComponent from \"../../../AppComponent\";\nimport { type StrictHandlingUtilities } from \"../../../operationsHelper\";\nimport type MessageHandler from \"../../MessageHandler\";\n\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport ODataOperation, { type OperationResult } from \"../ODataOperation\";\n\nconst Constants = FELibrary.Constants,\n\tInvocationGrouping = FELibrary.InvocationGrouping;\nconst Action = MessageBox.Action;\n\nexport type ShowActionDialogParameters = {\n\tappComponent: AppComponent;\n\tfnOnSubmitted?: Function;\n\tfnOnResponse?: Function;\n\tactionName: string;\n\tmodel: ODataModel;\n\taActionParameters: EdmActionParameter[];\n\tdefaultParametersValues: Record<string, PrimitiveType>;\n\tdefaultValuesExtensionFunction?: string;\n\tlabel?: string;\n\tselectedItems: ODataV4Context[];\n\taContexts: ODataV4Context[];\n\tmBindingParameters?: BindContextParameters;\n\tadditionalSideEffect?: ActionSideEffectsType;\n\tbGrouped?: boolean;\n\tinternalModelContext?: InternalModelContext | null;\n\toperationAvailableMap?: string;\n\tisCreateAction?: boolean;\n\tbObjectPage?: boolean;\n\tdisableStrictHandling?: boolean;\n\tbIsCreateAction?: boolean;\n\tgroupId?: string;\n\tisStatic?: boolean;\n\tcontrol?: Control;\n\toDialog?: Dialog;\n\trequestSideEffects?: Function;\n};\n\nexport type CallActionParameters = {\n\tparameterValues?: Record<string, string | boolean | number | MultiValueFieldItem[]>[];\n\tlabel?: string;\n\tinvocationGrouping?: string;\n\tskipParameterDialog?: boolean;\n\tbindingParameters?: BindContextParameters;\n\tentitySetName?: string;\n\tonSubmitted: Function;\n\tonResponse: Function;\n\tparentControl: View;\n\tcontrol?: Control;\n\tbIsCreateAction?: boolean;\n\tinternalModelContext?: InternalModelContext | null;\n\toperationAvailableMap?: string;\n\tmessageHandler: MessageHandler;\n\tbObjectPage?: boolean;\n\tisCriticalAction?: boolean;\n\tcontrolId?: string;\n\tignoreETag?: boolean;\n\tview: View | null;\n} & {\n\tdefaultValuesExtensionFunction?: string;\n} & {\n\tbGrouped?: boolean;\n\taContexts?: ODataV4Context[];\n\tselectedItems?: ODataV4Context[];\n\tadditionalSideEffect?: ActionSideEffectsType;\n\tmBindingParameters?: BindContextParameters;\n\tdisableStrictHandling?: boolean;\n\tgroupId?: string;\n};\n\ntype BaseTypeParameter = string | number | boolean;\n\n/**\n * Calls a bound action for one or multiple contexts.\n * @param sActionName The name of the action to be called\n * @param contexts Either one context or an array with contexts for which the action is to be be called\n * @param oModel OData Model\n * @param oAppComponent The AppComponent\n * @param [mParameters] Optional, can contain the following attributes:\n * @param [mParameters.parameterValues] A map of action parameter names and provided values\n * @param [mParameters.mBindingParameters] A map of binding parameters that would be part of $select and $expand coming from side effects for bound actions\n * @param [mParameters.additionalSideEffect] Array of property paths to be requested in addition to actual target properties of the side effect\n * @param [mParameters.showActionParameterDialog] If set and if parameters exist the user retrieves a dialog to fill in parameters, if actionParameters are passed they are shown to the user\n * @param [mParameters.label] A human-readable label for the action\n * @param [mParameters.invocationGrouping] Mode how actions are to be called: Changeset to put all action calls into one changeset, Isolated to put them into separate changesets, defaults to Isolated\n * @param [mParameters.onSubmitted] Function which is called once the actions are submitted with an array of promises\n * @param [mParameters.defaultParameters] Can contain default parameters from FLP user defaults\n * @param [mParameters.parentControl] If specified, the dialogs are added as dependent of the parent control\n * @param [mParameters.ignoreETag] If specified, the action is called without ETag handling\n * @returns Promise resolves with an array of response objects\n */\nasync function callBoundAction(\n\tsActionName: string,\n\tcontexts: ODataV4Context[],\n\toModel: ODataModel,\n\toAppComponent: AppComponent,\n\tmParameters: CallActionParameters\n): Promise<PromiseSettledResult<OperationResult>[]> {\n\tif (!contexts || contexts.length === 0) {\n\t\t//In Freestyle apps bound actions can have no context\n\t\tthrow new Error(\"Bound actions always requires at least one context\");\n\t}\n\tmParameters.aContexts = Array.isArray(contexts) ? contexts : [contexts];\n\n\tconst oMetaModel = oModel.getMetaModel(),\n\t\t// Analyzing metaModelPath for action only from first context seems weird, but probably works in all existing scenarios - if several contexts are passed, they probably\n\t\t// belong to the same metamodelpath. TODO: Check, whether this can be improved / scenarios with different metaModelPaths might exist\n\t\tsActionPath = `${oMetaModel.getMetaPath(mParameters.aContexts[0].getPath())}/${sActionName}`,\n\t\toBoundAction = oMetaModel.createBindingContext(`${sActionPath}/@$ui5.overload/0`)!;\n\tmParameters.isCriticalAction = await ActionRuntime.getIsActionCritical(oMetaModel, sActionPath, mParameters.aContexts);\n\tconst convertedTypes = convertTypes(oModel.getMetaModel());\n\tconst convertedAction = convertedTypes.resolvePath<EdmAction | undefined>(oBoundAction.getPath()).target;\n\tif (!convertedAction) {\n\t\tthrow new Error(\"Unknown bound action\");\n\t}\n\treturn callAction(convertedAction, oModel, oBoundAction, oAppComponent, mParameters);\n}\n/**\n * Calls an action import.\n * @param actionName The name of the action import to be called\n * @param model An instance of an OData V4 model\n * @param appComponent The AppComponent\n * @param [parameters] Optional, can contain the following attributes:\n * @param [parameters.parameterValues] A map of action parameter names and provided values\n * @param [parameters.label] A human-readable label for the action\n * @param [parameters.showActionParameterDialog] If set and if parameters exist the user retrieves a dialog to fill in parameters, if actionParameters are passed they are shown to the user\n * @param [parameters.onSubmitted] Function which is called once the actions are submitted with an array of promises\n * @param [parameters.defaultParameters] Can contain default parameters from FLP user defaults\n * @param [parameters.ignoreETag] If specified, the action is called without ETag handling\n * @returns Promise resolves with an array of response objects\n */\nasync function callActionImport(\n\tactionName: string,\n\tmodel: ODataModel,\n\tappComponent: AppComponent,\n\tparameters: {\n\t\tparameterValues?: Record<string, string | boolean | number | MultiValueFieldItem[]>[];\n\t\tlabel?: string;\n\t\tskipParameterDialog?: boolean;\n\t\tbindingParameters?: BindContextParameters;\n\t\tentitySetName?: string;\n\t\tadditionalSideEffect?: ActionSideEffectsType;\n\t\tonSubmitted: Function;\n\t\tonResponse: Function;\n\t\tparentControl: View;\n\t\tinternalModelContext?: InternalModelContext | null;\n\t\toperationAvailableMap?: string;\n\t\tmessageHandler: MessageHandler;\n\t\tbObjectPage?: boolean;\n\t\tselectedItems?: ODataV4Context[];\n\t\tignoreETag?: boolean;\n\t\tview: View | null;\n\t} & {\n\t\tisCriticalAction?: boolean;\n\t}\n): Promise<PromiseSettledResult<OperationResult>[]> {\n\tconst metaModel = model.getMetaModel();\n\tconst actionPath = `/${actionName}`;\n\tconst convertedTypes = convertTypes(metaModel);\n\tconst convertedActionImport = convertedTypes.resolvePath<ActionImport | undefined>(actionPath).target,\n\t\tconvertedAction = convertedActionImport?.action;\n\tif (!convertedAction) {\n\t\tthrow new Error(\"Unknown action import\");\n\t}\n\tconst unboundActionIndex = convertedTypes.actions\n\t\t\t.filter((action) => action.name === convertedAction.name)\n\t\t\t.findIndex((action) => !action.isBound),\n\t\tactionNameFromModel = convertedActionImport.actionName,\n\t\tactionImport = metaModel.createBindingContext(`/${actionNameFromModel}/${unboundActionIndex}`);\n\tparameters.isCriticalAction = await ActionRuntime.getIsActionCritical(metaModel, `${actionPath}/@$ui5.overload`);\n\treturn callAction(convertedActionImport.action, model, actionImport, appComponent, parameters);\n}\nasync function callBoundFunction(sFunctionName: string, context: Context, oModel: ODataModel): Promise<ODataV4Context> {\n\tif (!context) {\n\t\treturn Promise.reject(\"Bound functions always requires a context\");\n\t}\n\tconst oMetaModel = oModel.getMetaModel(),\n\t\tsFunctionPath = `${oMetaModel.getMetaPath(context.getPath())}/${sFunctionName}`,\n\t\toBoundFunction = oMetaModel.createBindingContext(sFunctionPath);\n\treturn _executeFunction(sFunctionName, oModel, oBoundFunction, context);\n}\n\n/**\n * Calls a function import.\n * @param sFunctionName The name of the function to be called\n * @param oModel An instance of an OData v4 model\n * @returns Promise resolves\n */\nasync function callFunctionImport(sFunctionName: string, oModel: ODataModel): Promise<void | ODataV4Context> {\n\tconst oMetaModel = oModel.getMetaModel(),\n\t\tsFunctionPath = oModel.bindContext(`/${sFunctionName}`).getPath(),\n\t\toFunctionImport = oMetaModel.createBindingContext(`/${oMetaModel.createBindingContext(sFunctionPath)!.getObject(\"$Function\")}/0`);\n\treturn _executeFunction(sFunctionName, oModel, oFunctionImport);\n}\nasync function _executeFunction(\n\tsFunctionName: string,\n\toModel: ODataModel,\n\toFunction: Context | null,\n\tcontext?: Context\n): Promise<ODataV4Context> {\n\tif (!oFunction?.getObject()) {\n\t\treturn Promise.reject(new Error(`Function ${sFunctionName} not found`));\n\t}\n\tconst functionToCall: ODataContextBinding = oModel.bindContext(`${context?.getPath() ?? \"\"}/${sFunctionName}(...)`);\n\tconst groupId = context ? \"functionGroup\" : \"functionImport\";\n\tconst executionPromise = functionToCall.execute(groupId);\n\toModel.submitBatch(groupId);\n\tawait executionPromise;\n\treturn functionToCall.getBoundContext();\n}\n\nasync function checkParameterTypeAndReturnConvertedValue(\n\tparameter: ActionParameter,\n\tvalue?: BaseTypeParameter | null\n): Promise<BaseTypeParameter | undefined | null> {\n\tif (value === undefined || value === null) {\n\t\treturn value;\n\t}\n\tconst BaseType = (await import(\"sap/ui/mdc/enums/BaseType\")).default;\n\tconst TypeMap = (await import(\"sap/ui/mdc/odata/v4/TypeMap\")).default;\n\tconst parameterType = (\n\t\tparameter as {\n\t\t\tname: string;\n\t\t\ttype?: string;\n\t\t}\n\t).type\n\t\t? TypeMap.getBaseType(\n\t\t\t\t(\n\t\t\t\t\tparameter as {\n\t\t\t\t\t\tname: string;\n\t\t\t\t\t\ttype: string;\n\t\t\t\t\t}\n\t\t\t\t).type\n\t\t  )\n\t\t: BaseType.String;\n\tconst typeInstance = TypeMap.getDataTypeInstance(parameterType);\n\treturn typeInstance.parseValue(value, \"string\");\n}\n\nasync function callAction(\n\tconvertedAction: EdmAction,\n\toModel: ODataModel,\n\toAction: Context,\n\toAppComponent: AppComponent,\n\tmParameters: CallActionParameters\n): Promise<PromiseSettledResult<OperationResult>[]> {\n\tlet strictHandlingUtilities: StrictHandlingUtilities = {\n\t\tis412Executed: false,\n\t\tstrictHandlingTransitionFails: [],\n\t\tstrictHandlingPromises: [],\n\t\tstrictHandlingWarningMessages: [],\n\t\tdelaySuccessMessages: [],\n\t\tprocessedMessageIds: new Set<string>()\n\t};\n\tconst sActionName = convertedAction.isBound\n\t\t? convertedAction.fullyQualifiedName.replace(/\\(.*\\)$/g, \"\") // remove the part related to the overlay\n\t\t: convertedAction.name;\n\tmParameters.bGrouped = mParameters.invocationGrouping === InvocationGrouping.ChangeSet;\n\treturn new Promise<PromiseSettledResult<OperationResult>[]>(async function (\n\t\tresolve: (value: PromiseSettledResult<OperationResult>[]) => void,\n\t\treject: (error: unknown) => void\n\t) {\n\t\tconst sActionLabel = mParameters.label;\n\t\tlet bSkipParameterDialog = mParameters.skipParameterDialog;\n\t\tconst aContexts = mParameters.aContexts;\n\t\tconst bIsCreateAction = mParameters.bIsCreateAction;\n\t\tconst bIsCriticalAction = mParameters.isCriticalAction;\n\t\tlet oMetaModel;\n\t\tlet sMessagesPath: string;\n\t\tlet iMessageSideEffect;\n\t\tlet isSameEntity;\n\t\tlet bValuesProvidedForAllMandatoryParameters;\n\t\tconst actionDefinition = oAction.getObject() as MetaModelAction;\n\n\t\t//in case of bound actions, ignore the first parameter and consider the rest\n\t\tconst actionParameters = convertedAction.isBound ? convertedAction.parameters.slice(1) : convertedAction.parameters;\n\n\t\t// Check if the action has parameters and would need a parameter dialog\n\t\t// The parameter ResultIsActiveEntity is always hidden in the dialog! Hence if\n\t\t// this is the only parameter, this is treated as no parameter here because the\n\t\t// dialog would be empty!\n\t\t// FIXME: Should only ignore this if this is a 'create' action, otherwise it is just some normal parameter that happens to have this name\n\t\tconst bActionNeedsParameterDialog =\n\t\t\tactionParameters.length > 0 && !(actionParameters.length === 1 && actionParameters[0].name === \"ResultIsActiveEntity\");\n\n\t\t// Provided values for the action parameters from invokeAction call\n\t\tconst aParameterValues = mParameters.parameterValues;\n\n\t\t// Determine startup parameters if provided\n\t\tconst oComponentData = oAppComponent.getComponentData();\n\t\tconst oStartupParameters = (oComponentData && oComponentData.startupParameters) || {};\n\n\t\t// If all parameters are hidden  and all mandatory parameters values are available, then we skip the dialog.\n\t\tbSkipParameterDialog =\n\t\t\tactionParameters.length &&\n\t\t\tactionParameters\n\t\t\t\t.filter((actionParameter) => actionParameter.name !== \"ResultIsActiveEntity\")\n\t\t\t\t.every((parameter) => parameter.annotations.UI?.Hidden?.valueOf() === true)\n\t\t\t\t? true\n\t\t\t\t: bSkipParameterDialog;\n\t\t// In case an action parameter is needed, and we shall skip the dialog, check if values are provided for all parameters\n\t\tif (bActionNeedsParameterDialog && bSkipParameterDialog) {\n\t\t\tbValuesProvidedForAllMandatoryParameters = _valuesProvidedForAllMandatoryParameters(\n\t\t\t\t!!bIsCreateAction,\n\t\t\t\tactionParameters,\n\t\t\t\taParameterValues,\n\t\t\t\toStartupParameters\n\t\t\t);\n\t\t}\n\n\t\t// Depending on the previously determined data, either set a dialog or leave it empty which\n\t\t// will lead to direct execution of the action without a dialog\n\n\t\tconst mActionExecutionParameters: ShowActionDialogParameters = {\n\t\t\tdefaultParametersValues: {},\n\t\t\tappComponent: oAppComponent,\n\t\t\tfnOnSubmitted: mParameters.onSubmitted,\n\t\t\tfnOnResponse: mParameters.onResponse,\n\t\t\tactionName: sActionName,\n\t\t\taContexts: [],\n\t\t\tmodel: oModel,\n\t\t\taActionParameters: actionParameters,\n\t\t\tdefaultValuesExtensionFunction: mParameters.defaultValuesExtensionFunction,\n\t\t\tlabel: mParameters.label,\n\t\t\tselectedItems: mParameters.selectedItems!\n\t\t};\n\t\tif (convertedAction.isBound) {\n\t\t\toMetaModel = oModel.getMetaModel();\n\n\t\t\tconst convertedMetaData = convertTypes(oMetaModel);\n\t\t\tconst filteredEntitySet = convertedMetaData.entitySets.filter(\n\t\t\t\t(singleEntitySet) => singleEntitySet.entityType === convertedAction.returnEntityType\n\t\t\t);\n\t\t\tconst currentEntitySet = filteredEntitySet.length > 0 ? filteredEntitySet[0] : undefined;\n\n\t\t\tisSameEntity =\n\t\t\t\t!convertedAction.returnCollection &&\n\t\t\t\tconvertedAction.returnEntityType &&\n\t\t\t\tconvertedAction.sourceEntityType === convertedAction.returnEntityType;\n\n\t\t\tif (isSameEntity && ModelHelper.isDraftRoot(currentEntitySet)) {\n\t\t\t\tmParameters.mBindingParameters ??= {};\n\t\t\t\tmParameters.mBindingParameters.$select = mParameters.mBindingParameters.$select\n\t\t\t\t\t? `${mParameters.mBindingParameters.$select},HasActiveEntity`\n\t\t\t\t\t: \"HasActiveEntity\";\n\t\t\t}\n\n\t\t\tif (mParameters.additionalSideEffect?.pathExpressions) {\n\t\t\t\tsMessagesPath = ModelHelper.getMessagesPath(oMetaModel, aContexts![0].getPath())!;\n\n\t\t\t\tif (sMessagesPath) {\n\t\t\t\t\t// '*' effectively includes the messages path if there is one\n\t\t\t\t\tiMessageSideEffect = mParameters.additionalSideEffect.pathExpressions.findIndex(\n\t\t\t\t\t\t(exp) => typeof exp === \"string\" && (exp === sMessagesPath || exp === \"*\")\n\t\t\t\t\t);\n\n\t\t\t\t\t// Add SAP_Messages by default if not annotated by side effects, action does not return a collection and\n\t\t\t\t\t// the return type is the same as the bound type\n\t\t\t\t\tif (iMessageSideEffect > -1 || isSameEntity) {\n\t\t\t\t\t\t// the message path is annotated as side effect. As there's no binding for it and the model does currently not allow\n\t\t\t\t\t\t// to add it at a later point of time we have to take care it's part of the $select of the POST, therefore moving it.\n\t\t\t\t\t\tmParameters.mBindingParameters ??= {};\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tconvertedAction.returnEntityType?.entityProperties.find((property) => property.name === sMessagesPath) &&\n\t\t\t\t\t\t\t!(mParameters.mBindingParameters.$select ?? \"\").split(\",\").includes(sMessagesPath)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmParameters.mBindingParameters.$select = mParameters.mBindingParameters.$select\n\t\t\t\t\t\t\t\t? `${mParameters.mBindingParameters.$select},${sMessagesPath}`\n\t\t\t\t\t\t\t\t: sMessagesPath;\n\t\t\t\t\t\t\t// Add side effects at entity level because $select stops these being returned by the action\n\t\t\t\t\t\t\t// Only if no other side effects were added for Messages\n\t\t\t\t\t\t\tif (iMessageSideEffect === -1) {\n\t\t\t\t\t\t\t\tmParameters.additionalSideEffect.pathExpressions.push(\"*\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (mParameters.additionalSideEffect.triggerActions?.length === 0 && iMessageSideEffect > -1) {\n\t\t\t\t\t\t\t\t// no trigger action therefore no need to request messages again\n\t\t\t\t\t\t\t\tmParameters.additionalSideEffect.pathExpressions.splice(iMessageSideEffect, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmActionExecutionParameters.aContexts = aContexts ?? [];\n\t\t\tmActionExecutionParameters.mBindingParameters = mParameters.mBindingParameters;\n\t\t\tmActionExecutionParameters.additionalSideEffect = mParameters.additionalSideEffect;\n\t\t\tmActionExecutionParameters.bGrouped = mParameters.invocationGrouping === InvocationGrouping.ChangeSet;\n\t\t\tmActionExecutionParameters.internalModelContext = mParameters.internalModelContext;\n\t\t\tmActionExecutionParameters.operationAvailableMap = mParameters.operationAvailableMap;\n\t\t\tmActionExecutionParameters.isCreateAction = bIsCreateAction;\n\t\t\tmActionExecutionParameters.bObjectPage = mParameters.bObjectPage;\n\t\t\tmActionExecutionParameters.disableStrictHandling = mParameters.disableStrictHandling;\n\t\t\tmActionExecutionParameters.groupId = mParameters.groupId;\n\t\t\tif (mParameters.controlId) {\n\t\t\t\tmActionExecutionParameters.control = mParameters.parentControl.byId(mParameters.controlId) as Control;\n\t\t\t\tmParameters.control = mActionExecutionParameters.control;\n\t\t\t} else {\n\t\t\t\tmActionExecutionParameters.control = mParameters.parentControl;\n\t\t\t\tmParameters.control = mParameters.parentControl;\n\t\t\t}\n\t\t}\n\t\tmActionExecutionParameters.additionalSideEffect = mParameters.additionalSideEffect;\n\t\tif (bIsCreateAction) {\n\t\t\tmActionExecutionParameters.bIsCreateAction = bIsCreateAction;\n\t\t}\n\t\tmActionExecutionParameters.isStatic = convertedAction.isBound && !!convertedAction.parameters[0]?.isCollection;\n\n\t\tlet operationResult: PromiseSettledResult<OperationResult>[] = [];\n\t\tlet executionWitDialog = false;\n\t\ttry {\n\t\t\tif (bActionNeedsParameterDialog) {\n\t\t\t\tif (!(bSkipParameterDialog && bValuesProvidedForAllMandatoryParameters)) {\n\t\t\t\t\texecutionWitDialog = true;\n\t\t\t\t\tconst parameterDialog = getCoreUIFactory().newParameterDialog(\n\t\t\t\t\t\tconvertedAction,\n\t\t\t\t\t\toAction as ODataV4Context,\n\t\t\t\t\t\tmActionExecutionParameters,\n\t\t\t\t\t\taParameterValues,\n\t\t\t\t\t\tmParameters.entitySetName,\n\t\t\t\t\t\tmParameters.view as FEView | null,\n\t\t\t\t\t\tmParameters.messageHandler,\n\t\t\t\t\t\tstrictHandlingUtilities,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbeforeShowingMessage: actionParameterShowMessageCallback\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmParameters.ignoreETag\n\t\t\t\t\t);\n\t\t\t\t\tawait parameterDialog.createDialog();\n\t\t\t\t\toperationResult = await parameterDialog.openDialog(mParameters.parentControl);\n\t\t\t\t}\n\t\t\t} else if (bIsCriticalAction) {\n\t\t\t\texecutionWitDialog = true;\n\t\t\t\toperationResult = await confirmCriticalAction(\n\t\t\t\t\tconvertedAction,\n\t\t\t\t\tsActionName,\n\t\t\t\t\tmActionExecutionParameters,\n\t\t\t\t\tmParameters.parentControl,\n\t\t\t\t\tmParameters.entitySetName,\n\t\t\t\t\tmParameters.messageHandler,\n\t\t\t\t\tstrictHandlingUtilities,\n\t\t\t\t\tmParameters.ignoreETag\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treject(e);\n\t\t}\n\t\tif (executionWitDialog) {\n\t\t\tafterActionResolution(mParameters, mActionExecutionParameters, actionDefinition);\n\t\t\tresolve(operationResult);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take over all provided parameter values and call the action.\n\t\t// This shall only happen if values are provided for all the parameters, otherwise the parameter dialog shall be shown which is ensured earlier\n\n\t\tif (aParameterValues) {\n\t\t\tfor (const i in mActionExecutionParameters.aActionParameters) {\n\t\t\t\tmActionExecutionParameters.defaultParametersValues[mActionExecutionParameters.aActionParameters[i].name] =\n\t\t\t\t\taParameterValues?.find((element) => element.name === mActionExecutionParameters.aActionParameters[i].name)?.value;\n\t\t\t}\n\t\t} else {\n\t\t\tlet actionParameter, parameterValueNotConverted;\n\t\t\tfor (const i in mActionExecutionParameters.aActionParameters) {\n\t\t\t\tactionParameter = mActionExecutionParameters.aActionParameters[i];\n\t\t\t\tparameterValueNotConverted =\n\t\t\t\t\t(oStartupParameters[actionParameter.name]?.[0] as BaseTypeParameter) ||\n\t\t\t\t\tactionParameter.annotations?.UI?.ParameterDefaultValue?.valueOf();\n\t\t\t\tmActionExecutionParameters.defaultParametersValues[actionParameter.name] =\n\t\t\t\t\tparameterValueNotConverted === undefined\n\t\t\t\t\t\t? parameterValueNotConverted\n\t\t\t\t\t\t: await checkParameterTypeAndReturnConvertedValue(actionParameter, parameterValueNotConverted);\n\t\t\t}\n\t\t}\n\t\tlet oOperationResult: PromiseSettledResult<OperationResult>[] = [];\n\t\ttry {\n\t\t\toOperationResult = await new ODataOperation(\n\t\t\t\tconvertedAction,\n\t\t\t\tmActionExecutionParameters,\n\t\t\t\tmParameters.messageHandler,\n\t\t\t\tstrictHandlingUtilities,\n\t\t\t\t{ ignoreETag: mParameters.ignoreETag }\n\t\t\t).execute();\n\n\t\t\tconst messages = Messaging.getMessageModel().getData();\n\t\t\tif (\n\t\t\t\tstrictHandlingUtilities &&\n\t\t\t\tstrictHandlingUtilities.is412Executed &&\n\t\t\t\tstrictHandlingUtilities.strictHandlingTransitionFails.length\n\t\t\t) {\n\t\t\t\tstrictHandlingUtilities.delaySuccessMessages = strictHandlingUtilities.delaySuccessMessages.concat(messages);\n\t\t\t}\n\t\t\tafterActionResolution(mParameters, mActionExecutionParameters, actionDefinition);\n\t\t\tresolve(oOperationResult);\n\t\t} catch (e) {\n\t\t\treject(e);\n\t\t} finally {\n\t\t\tif (\n\t\t\t\tstrictHandlingUtilities &&\n\t\t\t\tstrictHandlingUtilities.is412Executed &&\n\t\t\t\tstrictHandlingUtilities.strictHandlingTransitionFails.length &&\n\t\t\t\tmParameters.aContexts!.length > 1\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\tconst strictHandlingFails = strictHandlingUtilities.strictHandlingTransitionFails;\n\t\t\t\t\tconst aFailedContexts = [] as ODataV4Context[];\n\t\t\t\t\tstrictHandlingFails.forEach(function (fail: { oAction: ODataContextBinding; groupId: string }): void {\n\t\t\t\t\t\taFailedContexts.push(fail.oAction.getContext() as ODataV4Context);\n\t\t\t\t\t});\n\t\t\t\t\tmActionExecutionParameters.aContexts = aFailedContexts;\n\t\t\t\t\tconst oFailedOperationResult = await new ODataOperation(\n\t\t\t\t\t\tconvertedAction,\n\t\t\t\t\t\tmActionExecutionParameters,\n\t\t\t\t\t\tmParameters.messageHandler,\n\t\t\t\t\t\tstrictHandlingUtilities,\n\t\t\t\t\t\t{ ignoreETag: mParameters.ignoreETag }\n\t\t\t\t\t).execute();\n\t\t\t\t\tstrictHandlingUtilities.strictHandlingTransitionFails = [];\n\t\t\t\t\tMessaging.addMessages(strictHandlingUtilities.delaySuccessMessages);\n\t\t\t\t\tafterActionResolution(mParameters, mActionExecutionParameters, actionDefinition);\n\t\t\t\t\tresolve(oFailedOperationResult);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet showGenericErrorMessageForChangeSet = false;\n\t\t\tif (\n\t\t\t\t(mParameters.bGrouped && strictHandlingUtilities && strictHandlingUtilities.strictHandlingPromises.length) ||\n\t\t\t\t(mParameters.bGrouped && messageHandling.hasTransitionErrorsOrWarnings())\n\t\t\t) {\n\t\t\t\tshowGenericErrorMessageForChangeSet = true;\n\t\t\t}\n\t\t\tmParameters?.messageHandler\n\t\t\t\t?.showMessageDialog({\n\t\t\t\t\tcontrol: mActionExecutionParameters?.control,\n\t\t\t\t\tonBeforeShowMessage: function (aMessages: Message[], showMessageParametersIn: ShowMessageParameters) {\n\t\t\t\t\t\treturn actionParameterShowMessageCallback(\n\t\t\t\t\t\t\tmActionExecutionParameters,\n\t\t\t\t\t\t\taContexts!,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\taMessages,\n\t\t\t\t\t\t\tshowMessageParametersIn,\n\t\t\t\t\t\t\tshowGenericErrorMessageForChangeSet,\n\t\t\t\t\t\t\toOperationResult.length > 0 && oOperationResult.every((res) => res.status === \"fulfilled\")\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\taSelectedContexts: mParameters.aContexts,\n\t\t\t\t\tsActionName: sActionLabel,\n\t\t\t\t\tentitySet: mParameters.entitySetName,\n\t\t\t\t\tboundActionName: sActionName\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tmParameters.messageHandler.clearStrictWarningMessages();\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t\tif (strictHandlingUtilities) {\n\t\t\t\tstrictHandlingUtilities = {\n\t\t\t\t\tis412Executed: false,\n\t\t\t\t\tstrictHandlingTransitionFails: [],\n\t\t\t\t\tstrictHandlingPromises: [],\n\t\t\t\t\tstrictHandlingWarningMessages: [],\n\t\t\t\t\tdelaySuccessMessages: [],\n\t\t\t\t\tprocessedMessageIds: new Set()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Reads a title from custom i18n file.\n * @param oParentControl The view where the action is called\n * @param suffixResourceKey The key of the title\n * @returns Title if defined\n */\nfunction getConfirmTitle(oParentControl: View, suffixResourceKey: string): string | undefined {\n\t// A title only exists if it has been defined in the extension. Otherwise \"Confirmation\"\n\t// is used from the MessageBox control.\n\tconst key = \"C_OPERATIONS_ACTION_CONFIRM_TITLE\";\n\tconst resourceModel = getResourceModel(oParentControl);\n\tconst titleOverrideExists = resourceModel.checkIfResourceKeyExists(`${key}|${suffixResourceKey}`);\n\tif (titleOverrideExists) {\n\t\treturn resourceModel.getText(key, undefined, suffixResourceKey);\n\t}\n}\nasync function confirmCriticalAction(\n\tconvertedAction: EdmAction,\n\tsActionName: string,\n\tmParameters: ShowActionDialogParameters,\n\toParentControl: View,\n\tentitySetName: string | undefined,\n\tmessageHandler: MessageHandler,\n\tstrictHandlingUtilities: StrictHandlingUtilities,\n\tignoreETag?: boolean\n): Promise<PromiseSettledResult<OperationResult>[]> {\n\treturn new Promise((resolve, reject) => {\n\t\tlet boundActionName = sActionName;\n\t\tboundActionName = boundActionName.includes(\".\")\n\t\t\t? boundActionName.split(\".\")[boundActionName.split(\".\").length - 1]\n\t\t\t: boundActionName;\n\t\tconst suffixResourceKey = boundActionName && entitySetName ? `${entitySetName}|${boundActionName}` : \"\";\n\t\tconst resourceModel = getResourceModel(oParentControl);\n\t\tconst sConfirmationText = resourceModel.getText(\"C_OPERATIONS_ACTION_CONFIRM_MESSAGE\", undefined, suffixResourceKey);\n\n\t\tMessageBox.confirm(sConfirmationText, {\n\t\t\ttitle: getConfirmTitle(oParentControl, suffixResourceKey),\n\t\t\tonClose: async function (sAction: string) {\n\t\t\t\tif (sAction === Action.OK) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst oOperation = await new ODataOperation(convertedAction, mParameters, messageHandler, strictHandlingUtilities, {\n\t\t\t\t\t\t\tignoreETag\n\t\t\t\t\t\t}).execute();\n\t\t\t\t\t\tresolve(oOperation);\n\t\t\t\t\t} catch (oError: unknown) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait messageHandler.showMessageDialog();\n\t\t\t\t\t\t\treject(oError);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treject(oError);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treject(Constants.CancelActionDialog);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction afterActionResolution(\n\tmParameters: CallActionParameters,\n\tmActionExecutionParameters: ShowActionDialogParameters,\n\tactionDefinition: MetaModelAction\n): void {\n\tif (\n\t\tmActionExecutionParameters.internalModelContext &&\n\t\tmActionExecutionParameters.operationAvailableMap &&\n\t\tmActionExecutionParameters.aContexts &&\n\t\tmActionExecutionParameters.aContexts.length &&\n\t\tactionDefinition.$IsBound\n\t) {\n\t\tlet selectedContexts: ODataV4Context[] = [];\n\t\t//check for skipping static actions\n\t\tconst isStatic = mActionExecutionParameters.isStatic;\n\t\tif (!isStatic) {\n\t\t\tselectedContexts = mActionExecutionParameters.internalModelContext.getProperty(\"selectedContexts\") || [];\n\t\t\tActionRuntime.setActionEnablement(\n\t\t\t\tmActionExecutionParameters.internalModelContext,\n\t\t\t\tJSON.parse(mActionExecutionParameters.operationAvailableMap),\n\t\t\t\tselectedContexts,\n\t\t\t\t\"table\"\n\t\t\t);\n\t\t} else if (mActionExecutionParameters.control) {\n\t\t\tconst control = mActionExecutionParameters.control;\n\t\t\tif (control.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\t\tselectedContexts = control.getSelectedContexts() as ODataV4Context[];\n\t\t\t\tActionRuntime.setActionEnablement(\n\t\t\t\t\tmActionExecutionParameters.internalModelContext,\n\t\t\t\t\tJSON.parse(mActionExecutionParameters.operationAvailableMap),\n\t\t\t\t\tselectedContexts,\n\t\t\t\t\t\"table\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t//update delete button\n\t\tDeleteHelper.updateDeleteInfoForSelectedContexts(mActionExecutionParameters.internalModelContext, selectedContexts);\n\t}\n}\n\n/**\n * Filters an array of messages based on various conditions and returns an object containing the filtered messages and other properties.\n * @param messages The messages to filter.\n * @param errorTargetsInAPD Indicates whether error targets are in APD.\n * @param contexts An array of contexts.\n * @param unboundMessages An array of unbound messages.\n * @param control A control object.\n * @param isAPDOPen Indicates whether APD is open.\n * @param showMessageDialog Indicates whether to show the message dialog.\n * @returns An object containing a boolean indicating whether the result contains a bound transition, an array of messages to show, and a boolean indicating whether to show the message in a dialog.\n */\nfunction filterAPDandContextMessages(\n\tmessages: Message[],\n\terrorTargetsInAPD?: boolean,\n\tcontexts?: Context[],\n\tunboundMessages?: Message[],\n\tcontrol?: Control,\n\tisAPDOPen?: boolean,\n\tshowMessageDialog?: boolean\n): { containsBoundTransistion: boolean | undefined; messagesToShow: Message[]; showMessageInDialog?: boolean } {\n\tif (isAPDOPen && errorTargetsInAPD) {\n\t\t/* When APD is open, we need to remove the messages which are related to the objectpage context */\n\t\tmessageHandling.removeContextMessagesfromModel(messages, contexts);\n\t}\n\n\t// Filter out messages which are not related to the action parameter dialog in the edit mode and display mode\n\tlet containsBoundTransistion;\n\tif (!(control && CommonUtils.getIsEditable(control))) {\n\t\tif (isAPDOPen && errorTargetsInAPD) {\n\t\t\tif (unboundMessages?.length === 0) {\n\t\t\t\tcontainsBoundTransistion = false;\n\t\t\t\tshowMessageDialog = false;\n\t\t\t}\n\t\t\tmessages = messageHandling.removeMessagesForActionParameterDialog(messages);\n\t\t}\n\t} else {\n\t\tif (unboundMessages?.length === 0) {\n\t\t\tcontainsBoundTransistion = false;\n\t\t}\n\t\tmessages = messageHandling.removeMessagesForActionParameterDialog(messages);\n\t}\n\treturn {\n\t\tmessagesToShow: messages,\n\t\tcontainsBoundTransistion: containsBoundTransistion,\n\t\tshowMessageInDialog: showMessageDialog\n\t};\n}\n\nfunction actionParameterShowMessageCallback(\n\tmParameters: ShowActionDialogParameters,\n\taContexts: ODataV4Context[],\n\toDialog: Dialog | undefined,\n\tmessages: Message[],\n\tshowMessageParametersIn: ShowMessageParameters,\n\tshowGenericErrorMessageForChangeSet: boolean,\n\tisActionSuccessful?: boolean\n): ShowMessageParameters {\n\tlet showMessageBox = showMessageParametersIn.showMessageBox,\n\t\tshowMessageDialog = showMessageParametersIn.showMessageDialog;\n\tconst oControl = mParameters.control;\n\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\tconst unboundMessages = messages.filter(function (message: Message) {\n\t\treturn message.getTargets()?.[0] === \"\";\n\t});\n\tconst APDmessages = messages.filter(function (message) {\n\t\treturn (\n\t\t\tmessage.getTargets &&\n\t\t\tmessage.getTargets()?.[0].includes(mParameters.actionName) &&\n\t\t\tmParameters?.aActionParameters?.some(function (actionParam) {\n\t\t\t\treturn message.getTargets()?.[0].includes(actionParam.name);\n\t\t\t})\n\t\t);\n\t});\n\tAPDmessages?.forEach(function (APDMessage) {\n\t\t(APDMessage as unknown as { isAPDTarget: boolean }).isAPDTarget = true;\n\t});\n\n\tconst errorTargetsInAPD = APDmessages.length ? true : false;\n\t//If Action is successful with warnings, dont show the generic error message for changeset in dialog\n\tif (showGenericErrorMessageForChangeSet && !errorTargetsInAPD && !isActionSuccessful) {\n\t\tconst messageModel = Messaging.getMessageModel();\n\t\tconst messagesInModel = messageModel.getData();\n\t\tconst aBoundMessages = messageHandling.getMessages(true);\n\t\tlet genericMessage;\n\t\tconst isEditable = (oControl && CommonUtils.getIsEditable(oControl)) ?? false;\n\n\t\tconst nonErrorMessageExistsInDialog = messages.findIndex(function (message: Message) {\n\t\t\treturn message.getType() === \"Error\" || message.getType() === \"Warning\";\n\t\t});\n\t\tconst nonErrorMessageExistsInModel = messagesInModel.findIndex(function (message: Message) {\n\t\t\treturn message.getType() === \"Error\" || message.getType() === \"Warning\";\n\t\t});\n\n\t\tif (\n\t\t\tnonErrorMessageExistsInDialog !== 1 &&\n\t\t\tnonErrorMessageExistsInModel !== -1 &&\n\t\t\tmParameters.aContexts &&\n\t\t\tmParameters.aContexts.length > 1\n\t\t) {\n\t\t\tif (messagesInModel.length === 1 && aBoundMessages.length === 1) {\n\t\t\t\tgenericMessage = getGenericMsgForSingleErrorInChangeSet(isEditable, oResourceBundle);\n\t\t\t\tmessages.unshift(genericMessage);\n\t\t\t\tshowMessageBox = true;\n\t\t\t\tshowMessageDialog = false;\n\t\t\t} else {\n\t\t\t\tconst sMessage = oResourceBundle.getText(\"C_COMMON_DIALOG_CANCEL_ERROR_MESSAGES_TEXT\");\n\t\t\t\tconst sDescriptionText = oResourceBundle.getText(\"C_COMMON_DIALOG_CANCEL_ERROR_MESSAGES_DETAIL_TEXT\");\n\t\t\t\tgenericMessage = new Message({\n\t\t\t\t\tmessage: sMessage,\n\t\t\t\t\ttype: MessageType.Error,\n\t\t\t\t\ttarget: \"\",\n\t\t\t\t\tpersistent: true,\n\t\t\t\t\tdescription: sDescriptionText,\n\t\t\t\t\tcode: \"FE_CUSTOM_MESSAGE_CHANGESET_ALL_FAILED\"\n\t\t\t\t});\n\t\t\t\tmessages.unshift(genericMessage);\n\t\t\t\tif (messages.length === 1) {\n\t\t\t\t\tshowMessageBox = true;\n\t\t\t\t\tshowMessageDialog = false;\n\t\t\t\t} else {\n\t\t\t\t\tshowMessageDialog = true;\n\t\t\t\t\tshowMessageBox = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (oDialog && oDialog.isOpen() && aContexts.length !== 0 && !mParameters.isStatic) {\n\t\tif (!mParameters.bGrouped) {\n\t\t\t//isolated\n\t\t\tif (aContexts.length > 1 || !errorTargetsInAPD) {\n\t\t\t\t// does not matter if error is in APD or not, if there are multiple contexts selected or if the error is not the APD, we close it.\n\t\t\t\t// TODO: Dilaog handling should not be part of message handling. Refactor accordingly - dialog should not be needed inside this method - neither\n\t\t\t\t// to ask whether it's open, nor to close/destroy it!\n\t\t\t\toDialog.close();\n\t\t\t\toDialog.destroy();\n\t\t\t}\n\t\t} else if (!errorTargetsInAPD) {\n\t\t\t//changeset\n\t\t\toDialog.close();\n\t\t\toDialog.destroy();\n\t\t}\n\t}\n\tconst filteredMessages: Message[] = [];\n\tconst bIsAPDOpen = oDialog && oDialog.isOpen();\n\n\tconst { messagesToShow, containsBoundTransistion, showMessageInDialog } = filterAPDandContextMessages(\n\t\tmessages,\n\t\terrorTargetsInAPD,\n\t\taContexts,\n\t\tunboundMessages,\n\t\toControl,\n\t\tbIsAPDOpen\n\t);\n\tmessages = messagesToShow;\n\tshowMessageDialog = showMessageInDialog ?? showMessageDialog;\n\n\tif (!bIsAPDOpen && errorTargetsInAPD && !mParameters.bGrouped) {\n\t\t// If APD is not open and there are messages related to APD, then show in the message dialog. since\n\t\tshowMessageDialog = true;\n\t\tmessages = messages.concat(APDmessages);\n\t}\n\n\tlet fnGetMessageSubtitle;\n\tif (oControl && oControl.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\tfnGetMessageSubtitle = messageHandling.setMessageSubtitle.bind({}, oControl, aContexts);\n\t}\n\treturn {\n\t\tshowMessageBox: showMessageBox,\n\t\tshowMessageDialog: showMessageDialog,\n\t\tfilteredMessages: filteredMessages.length ? filteredMessages : messages,\n\t\tfnGetMessageSubtitle: fnGetMessageSubtitle,\n\t\tshowChangeSetErrorDialog: mParameters.bGrouped,\n\t\tcontainsBoundTransistion: containsBoundTransistion\n\t};\n}\n\nfunction _valuesProvidedForAllMandatoryParameters(\n\tisCreateAction: boolean,\n\tactionParameters: EdmActionParameter[],\n\tparameterValues?: Record<string, unknown>[],\n\tstartupParameters?: Record<string, unknown>\n): boolean {\n\tconst hiddenAnnotationSetOnAllActions = actionParameters.every((parameter) => parameter?.annotations?.UI?.Hidden?.valueOf() === true);\n\n\tif (parameterValues?.length && !hiddenAnnotationSetOnAllActions) {\n\t\t// If showDialog is false but there are parameters from the invokeAction call which need to be checked on existance\n\t\tfor (const actionParameter of actionParameters) {\n\t\t\tif (\n\t\t\t\tactionParameter.name !== \"ResultIsActiveEntity\" &&\n\t\t\t\t!parameterValues?.find((element) => element.name === actionParameter.name)\n\t\t\t) {\n\t\t\t\t// At least for one parameter no value has been provided, so we can't skip the dialog\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isCreateAction && startupParameters?.length && !hiddenAnnotationSetOnAllActions) {\n\t\t// If parameters have been provided during application launch, we need to check if the set is complete\n\t\t// If not, the parameter dialog still needs to be shown.\n\t\tfor (const actionParameter of actionParameters) {\n\t\t\tif (startupParameters && !startupParameters[actionParameter.name]) {\n\t\t\t\t// At least for one parameter no value has been provided, so we can't skip the dialog\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (actionParameters.length && hiddenAnnotationSetOnAllActions) {\n\t\treturn actionParameters.every(function (parameter) {\n\t\t\tconst fieldControl = parameter.annotations?.Common?.FieldControl;\n\t\t\tconst isMandatory = fieldControl?.toString() === \"Common.FieldControlType/Mandatory\";\n\n\t\t\t// Possible sources may be startupParameters, parameterValues, defaultValues per annotation (ParameterDefaultValue)\n\t\t\t// If none is found, return false\n\t\t\treturn (\n\t\t\t\t!isMandatory ||\n\t\t\t\t(startupParameters && startupParameters[parameter.name]) ||\n\t\t\t\tparameterValues?.find((parameterValue) => parameterValue.name === parameter.name) ||\n\t\t\t\tparameter?.annotations?.UI?.ParameterDefaultValue?.valueOf()\n\t\t\t);\n\t\t});\n\t}\n\n\treturn true;\n}\n\nfunction getGenericMsgForSingleErrorInChangeSet(isEditable: boolean, resourceBundle: ResourceBundle): MessageWithHeader {\n\tconst message = isEditable\n\t\t? resourceBundle.getText(\"C_COMMON_DIALOG_CANCEL_SINGLE_ERROR_MESSAGE_TEXT_EDIT\")\n\t\t: resourceBundle.getText(\"C_COMMON_DIALOG_CANCEL_SINGLE_ERROR_MESSAGE_TEXT\");\n\treturn new Message({\n\t\tmessage,\n\t\ttype: MessageType.Error,\n\t\ttarget: \"\",\n\t\tpersistent: true,\n\t\tcode: \"FE_CUSTOM_MESSAGE_CHANGESET_ALL_FAILED\",\n\t\ttechnicalDetails: {\n\t\t\tfe: {\n\t\t\t\tchangeSetPreTextForSingleError: message\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Static functions to call OData actions (bound/import) and functions (bound/import)\n * @namespace\n * @experimental This module is only for experimental use! <br/><b>This is only a POC and maybe deleted</b>\n * @since 1.56.0\n */\nconst operations = {\n\tcallBoundAction: callBoundAction,\n\tcallActionImport: callActionImport,\n\tcallBoundFunction: callBoundFunction,\n\tcallFunctionImport: callFunctionImport,\n\tvaluesProvidedForAllMandatoryParameters: _valuesProvidedForAllMandatoryParameters,\n\tactionParameterShowMessageCallback: actionParameterShowMessageCallback,\n\tafterActionResolution: afterActionResolution,\n\tcheckParameterTypeAndReturnConvertedValue: checkParameterTypeAndReturnConvertedValue,\n\tgetConfirmTitle: getConfirmTitle\n};\n\nexport default operations;\n"],"mappings":"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","ignoreList":[],"file":"facade-dbg.js"}