{"version":3,"names":["Constants","FELibrary","ODataOperation","operation","parameters","messageHandler","strictHandlingUtilities","operationProperties","arguments","length","undefined","enableStrictHandling","firstIterationOperations","operationParameters","neverSubmitted","apiGroupIdsToSubmit","Set","disableStrictHandling","isFunction","defineOperationParameters","_exports","_proto","prototype","_type","action","isBound","slice","execute","result","aContexts","bGrouped","executeChangeset","executeSequentially","Promise","allSettled","executeImport","error","Log","actionName","fnOnResponse","operationContext","model","bindContext","setParametersValue","groupId","promises","invoke","additionalSideEffect","context","getBoundContext","sideEffect","pathExpressions","triggerActions","requestSideEffects","destroy","defaultSubmit","currentPromiseValues","all","operationPromises","map","executeBoundOperation","manageStrictHandlingFails","reduce","promise","id","push","resolve","targetContext","mBindingParameters","finalGroupId","getUpdateGroupId","initialTableContext","control","getRowBinding","getHeaderContext","sideEffects","getPath","bind","operationPromise","findIndex","operationContextBinding","contextIndex","returnedContext","firstIterationResolve","firstIterationReject","strictHandlingPromise","reject","isAPIMode","add","contextLength","operationInvoke","ignoreETag","operationsHelper","fnOnStrictHandlingFailed","getContext","replaceWithRVC","race","update412TransitionMessages","ActionExecutionFailed","boundContext","submit","size","Array","from","values","submitOnModel","fnOnSubmitted","submitBatch","delete","startsWith","submitMode","appComponent","getManifestEntry","models","settings","groupProperties","SubmitMode","Auto","Direct","includes","firstSubmit","deferredSubmit","displayErrorOrWarning","strictHandlingPromises","messageHandling","hasTransitionErrorsOrWarnings","strictHandlingWarningMessages","renderMessageView","shPromise","messageModel","Messaging","getMessageModel","messagesInModel","getData","setData","concat","onlySuccessMessages","messages","processedMessageIds","delaySuccessMessages","strictHandlingTransitionFails","unProcessedMessages","acc","message","has","getId","newTransitionErrorMessagesId","filter","getPersistent","getType","MessageType","Success","Object","internalModelContext","oAction","defaultValues","defaultParametersValues","parameter","name","type","setParameter","localPromise","sideEffectsService","getSideEffectsService","executeAction","operationAvailableMap","ActionRuntime","setActionEnablement","JSON","parse","selectedItems"],"sourceRoot":".","sources":["ODataOperation.ts"],"sourcesContent":["import type { ActionImport, ActionParameter, Action as EdmAction } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { ShowActionDialogParameters } from \"sap/fe/core/controllerextensions/editFlow/operations/facade\";\nimport FELibrary from \"sap/fe/core/library\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type { default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport SubmitMode from \"sap/ui/model/odata/v4/SubmitMode\";\nimport ActionRuntime from \"../../ActionRuntime\";\nimport operationsHelper, { type StrictHandlingUtilities } from \"../../operationsHelper\";\nimport type { ActionSideEffectsType } from \"../../services/SideEffectsServiceFactory\";\nimport type MessageHandler from \"../MessageHandler\";\nimport messageHandling from \"../messageHandler/messageHandling\";\n\nconst Constants = FELibrary.Constants;\n\nexport type OperationResult = {\n\treturnedContext?: ODataV4Context;\n\tboundContext: ODataV4Context;\n};\n\nexport default class ODataOperation {\n\tprivate readonly enableStrictHandling: boolean = true;\n\n\tprivate readonly firstIterationOperations: Promise<unknown>[] = [];\n\n\tprivate operationParameters: ActionParameter[] = [];\n\n\tprivate neverSubmitted = true;\n\n\tprivate readonly apiGroupIdsToSubmit: Set<string> = new Set();\n\n\tconstructor(\n\t\tprivate readonly operation: EdmAction | ActionImport,\n\t\tprivate readonly parameters: ShowActionDialogParameters,\n\t\tprivate readonly messageHandler: MessageHandler,\n\t\tprivate readonly strictHandlingUtilities: StrictHandlingUtilities | undefined,\n\t\tprivate readonly operationProperties: {\n\t\t\tdeferredSubmit?: boolean;\n\t\t\tignoreETag?: boolean;\n\t\t\treplaceWithRVC?: boolean;\n\t\t} = {}\n\t) {\n\t\tthis.enableStrictHandling = this.parameters.disableStrictHandling !== true && !(this.operation as EdmAction).isFunction;\n\t\tthis.defineOperationParameters();\n\t}\n\n\t/**\n\t * Defines the parameters of the operation.\n\t */\n\tprivate defineOperationParameters(): void {\n\t\tif (this.operation._type === \"ActionImport\") {\n\t\t\tthis.operationParameters = this.operation.action.parameters;\n\t\t} else {\n\t\t\t//Remove the binding parameters from the parameters list\n\t\t\tthis.operationParameters = this.operation.isBound ? this.operation.parameters.slice(1) : this.operation.parameters;\n\t\t}\n\t}\n\n\t/**\n\t * Executes the operation.\n\t * @returns The promise of the operation\n\t */\n\tasync execute(): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\tlet result: PromiseSettledResult<OperationResult>[];\n\t\ttry {\n\t\t\tif (this.parameters.aContexts.length) {\n\t\t\t\tresult = await (this.parameters.bGrouped === true ? this.executeChangeset() : this.executeSequentially());\n\t\t\t} else {\n\t\t\t\tresult = await Promise.allSettled([this.executeImport()]);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while executing operation \" + this.parameters.actionName, error as string);\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tthis.parameters.fnOnResponse?.();\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Executes the import operation.\n\t * @returns The promise of the operation\n\t */\n\tprivate async executeImport(): Promise<OperationResult> {\n\t\tconst operationContext = this.parameters.model.bindContext(`/${this.parameters.actionName}(...)`);\n\t\tthis.setParametersValue(operationContext);\n\t\tconst groupId = this.parameters.groupId ?? \"actionImport\";\n\t\tconst promises = [this.invoke(operationContext, groupId, null)];\n\n\t\tif (this.parameters.additionalSideEffect) {\n\t\t\tconst context = this.parameters.model.bindContext(\"/unBoundAction\").getBoundContext();\n\t\t\tconst sideEffect = {\n\t\t\t\tcontext: context,\n\t\t\t\tpathExpressions: this.parameters.additionalSideEffect.pathExpressions,\n\t\t\t\ttriggerActions: this.parameters.additionalSideEffect.triggerActions\n\t\t\t};\n\t\t\tthis.requestSideEffects(sideEffect, groupId, promises);\n\t\t\tcontext.destroy();\n\t\t}\n\t\tthis.defaultSubmit(groupId);\n\n\t\tconst currentPromiseValues = await Promise.all(promises);\n\t\treturn currentPromiseValues[0];\n\t}\n\n\t/**\n\t * Executes the operations on one changeset.\n\t * @returns The promise of the operations\n\t */\n\tprivate async executeChangeset(): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\tconst operationPromises = this.parameters.aContexts.map(async (context) =>\n\t\t\tthis.executeBoundOperation(context, this.parameters.groupId)\n\t\t);\n\t\tawait Promise.allSettled(this.firstIterationOperations);\n\t\tawait this.manageStrictHandlingFails();\n\t\treturn Promise.allSettled(operationPromises);\n\t}\n\n\t/**\n\t * Executes the operations sequentially.\n\t * @returns The promise of the operations\n\t */\n\tprivate async executeSequentially(): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\tconst operationPromises: Promise<OperationResult>[] = [];\n\n\t\t// serialization: executeBoundOperation to be called for each entry only after the promise returned from the one before has been resolved\n\t\tawait this.parameters.aContexts.reduce(async (promise: Promise<void>, context: ODataV4Context, id: number): Promise<void> => {\n\t\t\tawait promise;\n\t\t\toperationPromises.push(this.executeBoundOperation(context, this.parameters.groupId ?? `apiMode${id + 1}`));\n\t\t\tawait Promise.allSettled(this.firstIterationOperations);\n\t\t}, Promise.resolve());\n\t\tawait this.manageStrictHandlingFails(true);\n\t\treturn Promise.allSettled(operationPromises);\n\t}\n\n\t/**\n\t * Executes the bound operation.\n\t * @param targetContext The target context\n\t * @param groupId The groupId of the batch\n\t * @returns The promise of the operation\n\t */\n\tprivate async executeBoundOperation(targetContext: ODataV4Context, groupId?: string): Promise<OperationResult> {\n\t\tconst operationContext = this.parameters.model.bindContext(\n\t\t\t`${this.parameters.actionName}(...)`,\n\t\t\ttargetContext,\n\t\t\tthis.parameters.mBindingParameters\n\t\t);\n\n\t\tconst promises: Promise<unknown>[] = [];\n\t\tthis.setParametersValue(operationContext);\n\t\tconst finalGroupId = groupId ?? operationContext.getUpdateGroupId();\n\n\t\t// Action on the table level is bound on a copy of the oDataListBinding, to execute the SideEffects we need\n\t\t// to do it on the original oDataListBinding\n\t\tconst initialTableContext = (this.parameters.control as Table)?.getRowBinding?.()?.getHeaderContext();\n\t\tconst sideEffects = {\n\t\t\tcontext: initialTableContext?.getPath() === targetContext.getPath() ? initialTableContext : targetContext,\n\t\t\tpathExpressions: this.parameters.additionalSideEffect?.pathExpressions,\n\t\t\ttriggerActions: this.parameters.additionalSideEffect?.triggerActions\n\t\t};\n\t\t//Has to be removed when the refactoring  is done\n\t\tthis.parameters.requestSideEffects = this.requestSideEffects.bind(this, sideEffects, finalGroupId, promises);\n\t\tconst operationPromise = this.invoke(\n\t\t\toperationContext,\n\t\t\tfinalGroupId,\n\t\t\tthis.parameters.aContexts.findIndex((context) => context === targetContext) + 1\n\t\t);\n\n\t\tpromises.push(operationPromise);\n\n\t\tthis.requestSideEffects(sideEffects, finalGroupId, promises);\n\t\tthis.defaultSubmit(finalGroupId);\n\t\tPromise.allSettled(promises);\n\t\treturn operationPromise;\n\t}\n\n\t/**\n\t * Invokes the operation on the context.\n\t * @param operationContextBinding The operation context binding\n\t * @param groupId The groupId of the batch\n\t * @param contextIndex The index of the context\n\t * @returns The promise of the operation\n\t */\n\tprivate async invoke(\n\t\toperationContextBinding: ODataContextBinding,\n\t\tgroupId: string,\n\t\tcontextIndex: number | null\n\t): Promise<OperationResult> {\n\t\tlet returnedContext;\n\t\tlet firstIterationResolve!: Function;\n\t\tlet firstIterationReject!: Function;\n\t\tconst strictHandlingPromise = new Promise<unknown>(function (resolve, reject) {\n\t\t\tfirstIterationResolve = resolve;\n\t\t\tfirstIterationReject = reject;\n\t\t});\n\t\tthis.firstIterationOperations.push(strictHandlingPromise);\n\t\tif (groupId && this.isAPIMode(groupId)) {\n\t\t\tthis.apiGroupIdsToSubmit.add(groupId);\n\t\t}\n\t\ttry {\n\t\t\tconst contextLength = this.parameters.aContexts.length ? this.parameters.aContexts.length : null;\n\t\t\tconst operationInvoke = operationContextBinding.invoke(\n\t\t\t\tgroupId,\n\t\t\t\tthis.operationProperties.ignoreETag,\n\t\t\t\tthis.enableStrictHandling\n\t\t\t\t\t? operationsHelper.fnOnStrictHandlingFailed.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tgroupId,\n\t\t\t\t\t\t\tthis.parameters,\n\t\t\t\t\t\t\tcontextIndex,\n\t\t\t\t\t\t\toperationContextBinding.getContext(),\n\t\t\t\t\t\t\tcontextLength,\n\t\t\t\t\t\t\tthis.messageHandler,\n\t\t\t\t\t\t\tthis.strictHandlingUtilities,\n\t\t\t\t\t\t\tfirstIterationResolve\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined,\n\t\t\t\tthis.operationProperties.replaceWithRVC\n\t\t\t);\n\t\t\tawait Promise.race([operationInvoke, strictHandlingPromise]);\n\n\t\t\treturnedContext = await operationInvoke;\n\t\t\tfirstIterationResolve();\n\t\t\tif (!this.parameters.bGrouped) {\n\t\t\t\t//Has to be removed when the refactoring  is done\n\t\t\t\tthis.update412TransitionMessages(operationContextBinding, groupId, true);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (!this.parameters.bGrouped) {\n\t\t\t\tthis.update412TransitionMessages(operationContextBinding, groupId);\n\t\t\t}\n\t\t\tfirstIterationReject(error);\n\t\t\tthrow Constants.ActionExecutionFailed;\n\t\t}\n\n\t\treturn {\n\t\t\treturnedContext,\n\t\t\tboundContext: operationContextBinding.getBoundContext()\n\t\t};\n\t}\n\n\t/**\n\t * Submits the batch related to the groupId of the operation.\n\t */\n\tpublic submit(): void {\n\t\tif (!this.neverSubmitted || this.apiGroupIdsToSubmit.size === 0) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const groupId of Array.from(this.apiGroupIdsToSubmit.values())) {\n\t\t\tthis.submitOnModel(groupId);\n\t\t}\n\t\tthis.parameters.fnOnSubmitted?.();\n\t}\n\n\t/**\n\t * Submits the batch at the model level related to the groupId of the operation.\n\t * @param groupId The groupId of the batch\n\t */\n\tprivate submitOnModel(groupId: string): void {\n\t\tthis.parameters.model.submitBatch(groupId);\n\t\tthis.apiGroupIdsToSubmit.delete(groupId);\n\t}\n\n\t/**\n\t * Is the SubmitMode of the groupId set to API.\n\t * @param groupId The groupId of the batch\n\t * @returns True if the SubmitMode is set to API, false otherwise\n\t */\n\tprivate isAPIMode(groupId?: string): boolean {\n\t\tif (!groupId) {\n\t\t\treturn false;\n\t\t}\n\t\tif (groupId.startsWith(\"$auto\") || groupId.startsWith(\"$direct\") || groupId.startsWith(\"$single\")) {\n\t\t\treturn false;\n\t\t}\n\t\tconst submitMode = (\n\t\t\tthis.parameters.appComponent.getManifestEntry(\"sap.ui5\")?.models[\"\"]?.settings as\n\t\t\t\t| { groupProperties?: Record<string, { submit: SubmitMode }> }\n\t\t\t\t| undefined\n\t\t)?.groupProperties?.[groupId]?.submit;\n\n\t\tif (submitMode === undefined || [SubmitMode.Auto, SubmitMode.Direct].includes(submitMode)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Executes the submit of the operation if the submitMode is on API and deferredSubmit is not set to true\n\t * The submitBatch is skipped if the groupId is $auto or $direct since done by the model.\n\t * @param groupId The groupId of the batch\n\t */\n\tprivate defaultSubmit(groupId?: string): void {\n\t\tconst firstSubmit = this.neverSubmitted;\n\t\tconst isAPIMode = this.isAPIMode(groupId);\n\t\tif (!isAPIMode) {\n\t\t\t// The submitBatch is skipped if the groupId is $auto or $direct since done by the model\n\t\t\tthis.neverSubmitted = false;\n\t\t} else if (this.operationProperties.deferredSubmit !== true && groupId) {\n\t\t\tthis.neverSubmitted = false;\n\t\t\tthis.submitOnModel(groupId);\n\t\t}\n\t\tif (firstSubmit && !this.neverSubmitted) {\n\t\t\t//Trigger the callback only once\n\t\t\tthis.parameters.fnOnSubmitted?.();\n\t\t}\n\t}\n\n\t/**\n\t * Manages the strict handling fails.\n\t * @param displayErrorOrWarning True, if the warning/error messages have to be displayed, false otherwise (default)\n\t * @returns The promise of the strict handling\n\t */\n\tprivate async manageStrictHandlingFails(displayErrorOrWarning = false): Promise<void> {\n\t\tif (this.strictHandlingUtilities && this.strictHandlingUtilities.strictHandlingPromises.length) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\t(!messageHandling.hasTransitionErrorsOrWarnings() || displayErrorOrWarning) &&\n\t\t\t\t\tthis.strictHandlingUtilities.strictHandlingWarningMessages.length\n\t\t\t\t) {\n\t\t\t\t\tawait operationsHelper.renderMessageView(\n\t\t\t\t\t\tthis.parameters,\n\t\t\t\t\t\tthis.messageHandler,\n\t\t\t\t\t\tthis.strictHandlingUtilities.strictHandlingWarningMessages,\n\t\t\t\t\t\tthis.strictHandlingUtilities,\n\t\t\t\t\t\tthis.parameters.aContexts.length > 1\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tfor (const shPromise of this.strictHandlingUtilities.strictHandlingPromises) {\n\t\t\t\t\t\tshPromise.resolve(false);\n\t\t\t\t\t}\n\t\t\t\t\tconst messageModel = Messaging.getMessageModel();\n\t\t\t\t\tconst messagesInModel = messageModel.getData();\n\t\t\t\t\tmessageModel.setData(messagesInModel.concat(this.strictHandlingUtilities.strictHandlingWarningMessages));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tLog.error(\"Re-triggering of strict handling operations failed\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the strictHandling utilities with the failed and successful transition messages.\n\t * @param operation The operation context binding\n\t * @param groupId GroupId of the batch\n\t * @param onlySuccessMessages To update only successful transition messages\n\t */\n\tprivate update412TransitionMessages(operation: ODataContextBinding, groupId: string, onlySuccessMessages = false): void {\n\t\t//Has to be removed  from here when the refactoring  is done\n\t\tif (this.enableStrictHandling && this.strictHandlingUtilities) {\n\t\t\tconst messages: Array<Message> = Messaging.getMessageModel().getData();\n\t\t\tconst { processedMessageIds, delaySuccessMessages, strictHandlingTransitionFails } = this.strictHandlingUtilities;\n\t\t\tconst unProcessedMessages = messages.reduce((acc: Message[], message) => {\n\t\t\t\tif (!processedMessageIds.has(message.getId())) {\n\t\t\t\t\tacc.push(message);\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, []);\n\n\t\t\tconst newTransitionErrorMessagesId = unProcessedMessages\n\t\t\t\t.filter(\n\t\t\t\t\t(message) =>\n\t\t\t\t\t\tmessage.getPersistent() === true &&\n\t\t\t\t\t\tmessage.getType() !== MessageType.Success &&\n\t\t\t\t\t\t!processedMessageIds.has(message.getId())\n\t\t\t\t)\n\t\t\t\t.map((message) => message.getId());\n\n\t\t\tif (newTransitionErrorMessagesId.length) {\n\t\t\t\tthis.strictHandlingUtilities.processedMessageIds = new Set([\n\t\t\t\t\t...Array.from(processedMessageIds),\n\t\t\t\t\t...newTransitionErrorMessagesId\n\t\t\t\t]);\n\t\t\t\tdelaySuccessMessages.push(\n\t\t\t\t\t...Object.values(unProcessedMessages).filter((message) => message.getType() === MessageType.Success)\n\t\t\t\t);\n\t\t\t\tif (!onlySuccessMessages && this.parameters.internalModelContext) {\n\t\t\t\t\tstrictHandlingTransitionFails.push({\n\t\t\t\t\t\toAction: operation,\n\t\t\t\t\t\tgroupId\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Sets the default values for the parameters of the operation.\n\t * @param operationContextBinding The operation context binding\n\t */\n\tprivate setParametersValue(operationContextBinding: ODataContextBinding): void {\n\t\tif (this.operationParameters.length) {\n\t\t\tconst defaultValues = this.parameters.defaultParametersValues ?? {};\n\t\t\tfor (const parameter of this.operationParameters) {\n\t\t\t\tconst name = parameter.name;\n\t\t\t\tif (!defaultValues[name]) {\n\t\t\t\t\tswitch (parameter.type) {\n\t\t\t\t\t\tcase \"Edm.String\":\n\t\t\t\t\t\t\tdefaultValues[name] = \"\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Edm.Boolean\":\n\t\t\t\t\t\t\tdefaultValues[name] = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Edm.Byte\":\n\t\t\t\t\t\tcase \"Edm.Int16\":\n\t\t\t\t\t\tcase \"Edm.Int32\":\n\t\t\t\t\t\tcase \"Edm.Int64\":\n\t\t\t\t\t\t\tdefaultValues[name] = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toperationContextBinding.setParameter(name, defaultValues[name]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Requests the side effects for the action.\n\t * @param sideEffect  The side effect to be executed\n\t * @param groupId  The groupId of the batch\n\t * @param localPromise The promise of the invoked action\n\t * @returns The promise of the side effect\n\t */\n\tprivate async requestSideEffects(\n\t\tsideEffect: (ActionSideEffectsType & { context: ODataV4Context }) | undefined,\n\t\tgroupId: string,\n\t\tlocalPromise?: Promise<unknown>[]\n\t): Promise<void> {\n\t\tconst sideEffectsService = this.parameters.appComponent.getSideEffectsService();\n\t\tlet promises: Promise<unknown>[] = localPromise ?? [];\n\t\t// trigger actions from side effects\n\t\tif (sideEffect) {\n\t\t\tpromises = promises.concat(\n\t\t\t\t(sideEffect.triggerActions ?? []).map(async (action) =>\n\t\t\t\t\tsideEffectsService.executeAction(action, sideEffect.context, groupId)\n\t\t\t\t),\n\t\t\t\tsideEffect.pathExpressions\n\t\t\t\t\t? sideEffectsService.requestSideEffects(sideEffect.pathExpressions, sideEffect.context, groupId)\n\t\t\t\t\t: []\n\t\t\t);\n\t\t\tif (sideEffect.pathExpressions) {\n\t\t\t\ttry {\n\t\t\t\t\tawait Promise.all(promises);\n\t\t\t\t\tif (this.parameters.operationAvailableMap && this.parameters.internalModelContext) {\n\t\t\t\t\t\tActionRuntime.setActionEnablement(\n\t\t\t\t\t\t\tthis.parameters.internalModelContext,\n\t\t\t\t\t\t\tJSON.parse(this.parameters.operationAvailableMap),\n\t\t\t\t\t\t\tthis.parameters.selectedItems,\n\t\t\t\t\t\t\t\"table\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tLog.error(\"Error while requesting side effects\", error as string);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"ODataOperation-dbg.js"}