{"version":3,"file":"SideEffects.js","names":["IMMEDIATE_REQUEST","SideEffectsControllerExtension","_dec","defineUI5Class","_dec2","methodOverride","_dec3","publicExtension","_dec4","finalExtension","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","_dec23","_dec24","_dec25","_dec26","_dec27","_dec28","_dec29","_dec30","_dec31","_dec32","extensible","OverrideExecution","Instead","_dec33","_dec34","_dec35","_dec36","_dec37","privateExtension","_dec38","_dec39","_dec40","_dec41","_dec42","_dec43","_dec44","_dec45","_dec46","_dec47","_dec48","_dec49","_dec50","_class","_class2","_ControllerExtension","_this","call","this","requestExecutions","_inheritsLoose","_proto","prototype","onInit","_view","base","getView","_pageComponent","Component","getOwnerComponentFor","_sideEffectsService","CommonUtils","getAppComponent","getSideEffectsService","_registeredFieldGroupMap","_fieldGroupInvalidity","_registeredFailedSideEffects","addControlSideEffects","entityType","controlSideEffects","removeControlSideEffects","control","controlId","isA","getId","getContextForSideEffects","bindingContext","sideEffectEntityType","contextForSideEffects","getEntityTypeFromContext","getBinding","getContext","undefined","waitForSideEffectExecutions","async","Promise","allSettled","getFieldSideEffectsMap","field","sideEffectsMap","entitySet","getEntitySet","contextPath","getContextPath","fieldGroupIds","getFieldGroupIds","contextDataModelObject","getInvolvedDataModelObjectsForTargetPath","getModel","getMetaModel","getSideEffectsMapForFieldGroups","getBindingContext","viewEntityType","targetEntityType","fullyQualifiedName","fieldPath","getTargetProperty","context","controlSideEffectsEntityType","getControlEntitySideEffects","Object","keys","forEach","sideEffectsName","oControlSideEffects","sourceProperties","includes","name","immediate","sideEffects","fieldContext","mSideEffectsMap","fieldGroupId","_getSideEffectsPropertyForFieldGroup","oContext","clearFieldGroupsValidity","isFieldGroupValid","id","_getFieldGroupIndex","length","data","metaModel","viewBindingPath","getPath","viewMetaModelPath","getMetaPath","replace","prepareDeferredSideEffectsForField","event","fieldValidity","fieldGroupPreRequisite","getSource","_saveFieldPropertiesStatus","filter","sideEffectsProperties","registerFieldGroupSideEffects","handleFieldChange","skipDeferredRegistration","arguments","_manageSideEffectsFromField","handleFieldGroupChange","getParameter","customSideEffectHandling","some","startsWith","sideEffectRequestPromises","customImmediateSideEffectPromises","handleCustomFieldFieldGroupChange","push","then","fieldGroupsSideEffects","reduce","results","concat","getRegisteredSideEffectsForFieldGroup","map","_requestFieldGroupSideEffects","fieldGroupSideEffects","all","catch","error","Log","debug","values","sideEffectDef","resolve","immediateSideEffects","requestMultipleSideEffects","handlePageChangeContext","sideEffectsFieldGroupOnPage","getRegisteredSideEffectsForContext","requestSideEffects","groupId","fnGetTargets","ignoreTriggerActions","fnTriggerCallbacks","triggerCallbacks","bind","targets","triggerAction","targetEntities","targetProperties","isControlSideEffects","executeAction","requestTargets","target","$NavigationPropertyPath","registerFailedSideEffects","requestSideEffectsForEvent","eventName","path","isDataPathRelevant","_findRelevantContext","_eventName","_contextIsRelevant","getCanonicalPath","model","dependentBindings","getDependentBindings","binding","bindingPath","propertyTarget","fetchUpdateData","getResult","entityPath","editUrl","getBoundContext","listContexts","getAllCurrentContexts","listContext","getDataRefreshText","resourceModel","getResourceModel","getText","notifyDataRefresh","MessageToast","show","getController","_sideEffects","confirmDataRefresh","isConfirmationDialogOpen","reject","text","confirmationDialog","Dialog","title","state","content","Text","beginButton","Button","press","close","endButton","afterClose","destroy","addStyleClass","open","multiSideEffects","properties","Set","navigationProperties","actions","sideEffectAction","fntriggerCallbacks","action","mySet","property","add","navigationProperty","Array","from","getRegisteredFailedRequests","isNotAlreadyListed","every","mFailedSideEffects","unregisterFailedSideEffectsForAContext","unregisterFailedSideEffects","sideEffectsFullyQualifiedName","promise","sideEffectProperty","unregisterFieldGroupSideEffects","registryIndex","sideEffectParts","split","sideEffectPath","getODataEntitySideEffects","sideEffectsToExecute","addSideEffects","failedSideEffects","failedSideEffect","e","navigation","nav","registerCallBack","getRegisteredCallback","success","key","ControllerExtension","_applyDecoratedDescriptor","getOwnPropertyDescriptor"],"sources":["./SideEffects.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, extensible, finalExtension, methodOverride, privateExtension, publicExtension } from \"sap/fe/base/ClassSupport\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport { getInvolvedDataModelObjectsForTargetPath } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type {\n\tControlSideEffectsType,\n\tODataSideEffectsType,\n\tSideEffectsService,\n\tSideEffectsTarget,\n\tSideEffectsType\n} from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type { RadioButtonGroup$SelectEvent } from \"sap/m/RadioButtonGroup\";\nimport Text from \"sap/m/Text\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport ControllerExtension from \"sap/ui/core/mvc/ControllerExtension\";\nimport OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type { Field$ChangeEvent } from \"sap/ui/mdc/Field\";\nimport type { MultiValueField$ChangeEvent } from \"sap/ui/mdc/MultiValueField\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport CommonUtils from \"../CommonUtils\";\nimport type PageController from \"../PageController\";\n\nimport type { EntitySet, NavigationProperty } from \"@sap-ux/vocabularies-types\";\nimport Component from \"sap/ui/core/Component\";\nimport type TemplateComponent from \"../TemplateComponent\";\n\ntype BaseSideEffectPropertyType = {\n\tname: string;\n\timmediate?: boolean;\n\tsideEffects: SideEffectsType;\n};\n\nexport type FieldSideEffectPropertyType = BaseSideEffectPropertyType & {\n\tcontext: Context;\n};\n\nexport type FieldSideEffectDictionary = Record<string, FieldSideEffectPropertyType>;\n\nexport type MassEditFieldSideEffectDictionary = Record<string, BaseSideEffectPropertyType>;\n\ntype FailedSideEffectDictionary = Record<string, SideEffectsType[]>;\n\nexport type FieldGroupSideEffectType = {\n\tpromise: Promise<unknown>;\n\tsideEffectProperty: FieldSideEffectPropertyType;\n};\n\nconst IMMEDIATE_REQUEST = \"$$ImmediateRequest\";\n@defineUI5Class(\"sap.fe.core.controllerextensions.SideEffects\")\nclass SideEffectsControllerExtension extends ControllerExtension {\n\tprotected base!: PageController;\n\n\tprivate _view!: FEView;\n\n\tprivate _pageComponent: EnhanceWithUI5<TemplateComponent> | undefined;\n\n\tprivate _registeredFieldGroupMap!: Record<string, FieldGroupSideEffectType>;\n\n\tprivate _fieldGroupInvalidity!: Record<string, Record<string, boolean>>;\n\n\tprivate _sideEffectsService!: SideEffectsService;\n\n\tprivate _registeredFailedSideEffects!: FailedSideEffectDictionary;\n\n\tprivate isConfirmationDialogOpen?: boolean;\n\n\tprivate readonly requestExecutions: Promise<unknown>[] = [];\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t@methodOverride()\n\tonInit(): void {\n\t\tthis._view = this.base.getView();\n\t\tthis._pageComponent = Component.getOwnerComponentFor(this._view) as EnhanceWithUI5<TemplateComponent> | undefined;\n\n\t\tthis._sideEffectsService = CommonUtils.getAppComponent(this._view).getSideEffectsService();\n\t\tthis._registeredFieldGroupMap = {};\n\t\tthis._fieldGroupInvalidity = {};\n\t\tthis._registeredFailedSideEffects = {};\n\t}\n\n\t/**\n\t * Adds a SideEffects control.\n\t * @param entityType Name of the entity where the SideEffects control will be registered\n\t * @param controlSideEffects SideEffects to register. Ensure the sourceControlId matches the associated SAPUI5 control ID.\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\taddControlSideEffects(entityType: string, controlSideEffects: Omit<ControlSideEffectsType, \"fullyQualifiedName\">): void {\n\t\tthis._sideEffectsService.addControlSideEffects(entityType, controlSideEffects);\n\t}\n\n\t/**\n\t * Removes SideEffects created by a control.\n\t * @param control SAPUI5 Control\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tremoveControlSideEffects(control: Control): void {\n\t\tconst controlId = control.isA?.(\"sap.ui.base.ManagedObject\") && control.getId();\n\n\t\tif (controlId) {\n\t\t\tthis._sideEffectsService.removeControlSideEffects(controlId);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the appropriate context on which SideEffects can be requested.\n\t * The correct one must have the binding parameter $$patchWithoutSideEffects.\n\t * @param bindingContext Initial binding context\n\t * @param sideEffectEntityType EntityType of the sideEffects\n\t * @returns SAPUI5 Context or undefined\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetContextForSideEffects(bindingContext: Context, sideEffectEntityType: string): Context | undefined {\n\t\tlet contextForSideEffects = bindingContext,\n\t\t\tentityType = this._sideEffectsService.getEntityTypeFromContext(bindingContext);\n\n\t\tif (sideEffectEntityType !== entityType) {\n\t\t\tcontextForSideEffects = bindingContext.getBinding().getContext() as Context;\n\t\t\tif (contextForSideEffects) {\n\t\t\t\tentityType = this._sideEffectsService.getEntityTypeFromContext(contextForSideEffects);\n\t\t\t\tif (sideEffectEntityType !== entityType) {\n\t\t\t\t\tcontextForSideEffects = contextForSideEffects.getBinding().getContext() as Context;\n\t\t\t\t\tif (contextForSideEffects) {\n\t\t\t\t\t\tentityType = this._sideEffectsService.getEntityTypeFromContext(contextForSideEffects);\n\t\t\t\t\t\tif (sideEffectEntityType !== entityType) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn contextForSideEffects || undefined;\n\t}\n\n\t/**\n\t * Wait For all sideEffects execution to be completed.\n\t *\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tasync waitForSideEffectExecutions(): Promise<void> {\n\t\tawait Promise.allSettled(this.requestExecutions);\n\t}\n\n\t/**\n\t * Gets the SideEffects map for a field\n\t * These SideEffects are\n\t * - listed into FieldGroupIds (coming from an OData Service)\n\t * - generated by a control or controls and that configure this field as SourceProperties.\n\t * @param field Field control\n\t * @returns SideEffects map\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetFieldSideEffectsMap(field: Control): FieldSideEffectDictionary {\n\t\tlet sideEffectsMap: FieldSideEffectDictionary = {};\n\t\tif (this._pageComponent) {\n\t\t\tconst entitySet = this._pageComponent.getEntitySet?.();\n\t\t\tconst contextPath = this._pageComponent.getContextPath?.() || (entitySet && `/${entitySet}`);\n\n\t\t\tif (contextPath) {\n\t\t\t\tconst fieldGroupIds = field.getFieldGroupIds(),\n\t\t\t\t\tcontextDataModelObject = getInvolvedDataModelObjectsForTargetPath<EntitySet | NavigationProperty>(\n\t\t\t\t\t\tcontextPath,\n\t\t\t\t\t\tthis._view.getModel().getMetaModel()\n\t\t\t\t\t);\n\n\t\t\t\t// SideEffects coming from an OData Service\n\t\t\t\tsideEffectsMap = this.getSideEffectsMapForFieldGroups(\n\t\t\t\t\tfieldGroupIds,\n\t\t\t\t\tfield.getBindingContext() as Context | null | undefined\n\t\t\t\t) as FieldSideEffectDictionary;\n\n\t\t\t\t// SideEffects coming from control(s)\n\t\t\t\tif (contextDataModelObject) {\n\t\t\t\t\tconst viewEntityType = contextDataModelObject.targetEntityType.fullyQualifiedName,\n\t\t\t\t\t\tfieldPath = this.getTargetProperty(field),\n\t\t\t\t\t\tcontext = this.getContextForSideEffects(field.getBindingContext() as Context, viewEntityType);\n\n\t\t\t\t\tif (fieldPath && context) {\n\t\t\t\t\t\tconst controlSideEffectsEntityType = this._sideEffectsService.getControlEntitySideEffects(viewEntityType);\n\t\t\t\t\t\tObject.keys(controlSideEffectsEntityType).forEach((sideEffectsName) => {\n\t\t\t\t\t\t\tconst oControlSideEffects = controlSideEffectsEntityType[sideEffectsName];\n\t\t\t\t\t\t\tif (oControlSideEffects.sourceProperties.includes(fieldPath)) {\n\t\t\t\t\t\t\t\tconst name = `${sideEffectsName}::${viewEntityType}`;\n\t\t\t\t\t\t\t\tsideEffectsMap[name] = {\n\t\t\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\t\t\timmediate: true,\n\t\t\t\t\t\t\t\t\tsideEffects: oControlSideEffects,\n\t\t\t\t\t\t\t\t\tcontext: context\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sideEffectsMap;\n\t}\n\n\t/**\n\t * Gets the sideEffects map for fieldGroups.\n\t * @param fieldGroupIds Field group ids\n\t * @param fieldContext Field binding context\n\t * @returns SideEffects map\n\t */\n\n\t@publicExtension()\n\t@finalExtension()\n\tgetSideEffectsMapForFieldGroups(\n\t\tfieldGroupIds: string[],\n\t\tfieldContext?: Context | null\n\t): MassEditFieldSideEffectDictionary | FieldSideEffectDictionary {\n\t\tconst mSideEffectsMap: MassEditFieldSideEffectDictionary | FieldSideEffectDictionary = {};\n\t\tfieldGroupIds.forEach((fieldGroupId) => {\n\t\t\tconst { name, immediate, sideEffects, sideEffectEntityType } = this._getSideEffectsPropertyForFieldGroup(fieldGroupId);\n\t\t\tconst oContext = fieldContext ? (this.getContextForSideEffects(fieldContext, sideEffectEntityType) as Context) : undefined;\n\t\t\tif (sideEffects && (!fieldContext || (fieldContext && oContext))) {\n\t\t\t\tmSideEffectsMap[name] = {\n\t\t\t\t\tname,\n\t\t\t\t\timmediate,\n\t\t\t\t\tsideEffects\n\t\t\t\t};\n\t\t\t\tif (fieldContext) {\n\t\t\t\t\t(mSideEffectsMap[name] as FieldSideEffectPropertyType).context = oContext!;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn mSideEffectsMap;\n\t}\n\n\t/**\n\t * Clear recorded validation status for all properties.\n\t *\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tclearFieldGroupsValidity(): void {\n\t\tthis._fieldGroupInvalidity = {};\n\t}\n\n\t/**\n\t * Clear recorded validation status for all properties.\n\t * @param fieldGroupId Field group id\n\t * @param context Context\n\t * @returns SAPUI5 Context or undefined\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tisFieldGroupValid(fieldGroupId: string, context: Context): boolean {\n\t\tconst id = this._getFieldGroupIndex(fieldGroupId, context);\n\t\treturn Object.keys(this._fieldGroupInvalidity[id] ?? {}).length === 0;\n\t}\n\n\t/**\n\t * Gets the relative target property related to the Field.\n\t * @param field Field control\n\t * @returns Relative target property\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetTargetProperty(field: Control): string | undefined {\n\t\tconst fieldPath = field.data(\"sourcePath\") as string;\n\t\tconst metaModel = this._view.getModel().getMetaModel();\n\t\tconst viewBindingPath = this._view.getBindingContext()?.getPath();\n\t\tconst viewMetaModelPath = viewBindingPath ? `${metaModel.getMetaPath(viewBindingPath)}/` : \"\";\n\t\treturn fieldPath?.replace(viewMetaModelPath, \"\");\n\t}\n\n\t/**\n\t * Caches deferred SideEffects that will be executed when the FieldGroup is unfocused.\n\t * @param event SAPUI5 event that comes from a field change\n\t * @param fieldValidity\n\t * @param fieldGroupPreRequisite Promise to be fulfilled before executing deferred SideEffects\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tprepareDeferredSideEffectsForField(\n\t\tevent: Field$ChangeEvent | MultiValueField$ChangeEvent | RadioButtonGroup$SelectEvent,\n\t\tfieldValidity: boolean,\n\t\tfieldGroupPreRequisite?: Promise<unknown>\n\t): void {\n\t\tconst field = (event as UI5Event<{}, Control>).getSource();\n\t\tthis._saveFieldPropertiesStatus(field, fieldValidity);\n\t\tif (!fieldValidity) {\n\t\t\treturn;\n\t\t}\n\t\tconst sideEffectsMap = this.getFieldSideEffectsMap(field);\n\n\t\t// register field group SideEffects\n\t\tObject.keys(sideEffectsMap)\n\t\t\t.filter((sideEffectsName) => sideEffectsMap[sideEffectsName].immediate !== true)\n\t\t\t.forEach((sideEffectsName) => {\n\t\t\t\tconst sideEffectsProperties = sideEffectsMap[sideEffectsName];\n\t\t\t\tthis.registerFieldGroupSideEffects(sideEffectsProperties, fieldGroupPreRequisite);\n\t\t\t});\n\t}\n\n\t/**\n\t * Manages the workflow for SideEffects with related changes to a field\n\t * The following scenarios are managed:\n\t * - Register: caches deferred SideEffects that will be executed when the FieldGroup is unfocused\n\t * - Execute: triggers immediate SideEffects requests if the promise for the field event is fulfilled.\n\t * @param event SAPUI5 event that comes from a field change\n\t * @param fieldValidity\n\t * @param fieldGroupPreRequisite Promise to be fulfilled before executing deferred SideEffects\n\t * @param skipDeferredRegistration If true then deferred side effects are not registered. This is useful when the registration of deferred side effects and triggering needs to be done separately.\n\t * @returns  Promise on SideEffects request(s)\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tasync handleFieldChange(\n\t\tevent: Field$ChangeEvent | MultiValueField$ChangeEvent | RadioButtonGroup$SelectEvent,\n\t\tfieldValidity: boolean,\n\t\tfieldGroupPreRequisite?: Promise<unknown>,\n\t\tskipDeferredRegistration = false\n\t): Promise<void> {\n\t\tconst field = (event as UI5Event<{}, Control>).getSource();\n\t\tif (!skipDeferredRegistration) {\n\t\t\tthis.prepareDeferredSideEffectsForField(event, fieldValidity, fieldGroupPreRequisite);\n\t\t} else {\n\t\t\tthis._saveFieldPropertiesStatus(field, fieldValidity);\n\t\t\tif (!fieldValidity) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn this._manageSideEffectsFromField(field);\n\t}\n\n\t/**\n\t * Manages SideEffects with a related 'focus out' to a field group.\n\t * @param event SAPUI5 Event\n\t * @returns Promise returning true if the SideEffects have been successfully executed\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tasync handleFieldGroupChange(event: Control$ValidateFieldGroupEvent): Promise<void | void[]> {\n\t\tconst field = event.getSource(),\n\t\t\tfieldGroupIds: string[] = event.getParameter(\"fieldGroupIds\") ?? [],\n\t\t\tcustomSideEffectHandling = fieldGroupIds.some((fieldGroupId) => fieldGroupId.startsWith(\"fe_sideEffectHandling_\"));\n\n\t\tlet sideEffectRequestPromises = [];\n\t\tif (customSideEffectHandling) {\n\t\t\tconst customImmediateSideEffectPromises = this.handleCustomFieldFieldGroupChange(event);\n\t\t\tif (customImmediateSideEffectPromises) {\n\t\t\t\tsideEffectRequestPromises.push(\n\t\t\t\t\tcustomImmediateSideEffectPromises.then(() => {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst fieldGroupsSideEffects = fieldGroupIds.reduce((results: FieldGroupSideEffectType[], fieldGroupId) => {\n\t\t\treturn results.concat(this.getRegisteredSideEffectsForFieldGroup(fieldGroupId));\n\t\t}, []);\n\t\tsideEffectRequestPromises = sideEffectRequestPromises.concat(\n\t\t\tfieldGroupsSideEffects.map(async (fieldGroupSideEffects) => {\n\t\t\t\treturn this._requestFieldGroupSideEffects(fieldGroupSideEffects);\n\t\t\t})\n\t\t);\n\n\t\treturn Promise.all(sideEffectRequestPromises).catch((error) => {\n\t\t\tconst contextPath = field.getBindingContext()?.getPath();\n\t\t\tLog.debug(`Error while processing FieldGroup SideEffects on context ${contextPath}`, error);\n\t\t});\n\t}\n\n\t/**\n\t * Manages SideEffects when the fieldGroupChange event is fired for a custom field.\n\t * @param event\n\t * @returns Promise of the immediate side effects request if there are any\n\t */\n\thandleCustomFieldFieldGroupChange(event: Control$ValidateFieldGroupEvent): null | Promise<unknown> {\n\t\tconst field = event.getSource();\n\t\tconst controlSideEffects = Object.values(this.getFieldSideEffectsMap(field));\n\n\t\t// register the non immediate side effects\n\t\tcontrolSideEffects\n\t\t\t.filter((sideEffectDef) => sideEffectDef.immediate !== true)\n\t\t\t.forEach((sideEffectDef) => {\n\t\t\t\tthis.registerFieldGroupSideEffects(sideEffectDef, Promise.resolve());\n\t\t\t});\n\n\t\t// execute the immediate side effects of the control\n\t\tconst immediateSideEffects = controlSideEffects\n\t\t\t.filter((sideEffectDef) => sideEffectDef.immediate === true)\n\t\t\t.map((sideEffectDef) => sideEffectDef.sideEffects);\n\t\tconst context = field.getBindingContext();\n\n\t\tif (immediateSideEffects.length && context) {\n\t\t\treturn this.requestMultipleSideEffects(immediateSideEffects, context as Context);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/* Manages the deferred SideEffects which have to be executed when the context of the page changes (saving a document).\n\t *\n\t * @param context The context of the page\n\t * @returns Promise returning true if the SideEffects have been successfully executed\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tasync handlePageChangeContext(context: Context): Promise<void | unknown[]> {\n\t\tawait this.waitForSideEffectExecutions();\n\t\tconst sideEffectsFieldGroupOnPage = this.getRegisteredSideEffectsForContext(context);\n\t\treturn Promise.all(\n\t\t\tsideEffectsFieldGroupOnPage.map(async (fieldGroupSideEffects) => {\n\t\t\t\treturn this._requestFieldGroupSideEffects(fieldGroupSideEffects);\n\t\t\t})\n\t\t).catch((error) => {\n\t\t\tLog.debug(`Error while processing on page context ${context.getPath()}`, error);\n\t\t});\n\t}\n\n\t/**\n\t * Request SideEffects on a specific context.\n\t * @param sideEffects SideEffects to be executed\n\t * @param context Context where SideEffects need to be executed\n\t * @param groupId\n\t * @param fnGetTargets The callback function which will give us the targets and actions if it was coming through some specific handling.\n\t * @param ignoreTriggerActions If true, we do not trigger actions defined in the side effect\n\t * @returns SideEffects request on SAPUI5 context\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tasync requestSideEffects(\n\t\tsideEffects: SideEffectsType,\n\t\tcontext: Context,\n\t\tgroupId?: string,\n\t\tfnGetTargets?: (sideEffectsDef: SideEffectsType) => { targets: SideEffectsTarget[]; triggerAction: string | undefined },\n\t\tignoreTriggerActions = false\n\t): Promise<unknown> {\n\t\tconst fnTriggerCallbacks = this.triggerCallbacks.bind(this);\n\t\tconst { targets, triggerAction } = fnGetTargets\n\t\t\t? fnGetTargets(sideEffects)\n\t\t\t: {\n\t\t\t\t\ttargets: [...(sideEffects.targetEntities ?? []), ...(sideEffects.targetProperties ?? [])],\n\t\t\t\t\ttriggerAction: !this._sideEffectsService.isControlSideEffects(sideEffects) ? sideEffects.triggerAction : undefined\n\t\t\t  };\n\t\tif (triggerAction && !ignoreTriggerActions) {\n\t\t\tthis.requestExecutions.push(this._sideEffectsService.executeAction(triggerAction, context, groupId));\n\t\t}\n\n\t\tif (targets.length) {\n\t\t\tconst requestTargets = this._sideEffectsService\n\t\t\t\t.requestSideEffects(targets, context, groupId)\n\t\t\t\t.then(async function async() {\n\t\t\t\t\treturn fnTriggerCallbacks(sideEffects.targetEntities?.map((target) => target.$NavigationPropertyPath) || []);\n\t\t\t\t})\n\t\t\t\t.catch((error: unknown) => {\n\t\t\t\t\tthis.registerFailedSideEffects([sideEffects], context);\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\tthis.requestExecutions.push(requestTargets);\n\t\t\treturn requestTargets;\n\t\t}\n\t}\n\n\t/**\n\t * Requests the SideEffects for a sideEffect event.\n\t *\n\t * The default implementation is to execute the side effect on the page's context, but pages (like the LR) might override this method.\n\t * @param eventName The SideEffects event that is triggered\n\t * @param path The path for which this event was triggered\n\t * @returns Promise on SideEffects request\n\t */\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.Instead)\n\tasync requestSideEffectsForEvent(eventName: string, path: string): Promise<undefined> {\n\t\tif (this.isDataPathRelevant(path, eventName)) {\n\t\t\t// use the default implementation from the SideEffects Service\n\t\t\tconst context = this._findRelevantContext(path, this.getView().getBindingContext() as Context);\n\t\t\tif (context) {\n\t\t\t\treturn this._sideEffectsService.requestSideEffectsForEvent(eventName, context);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether a specific data path is visible on the page.\n\t * @param path The path to be checked\n\t * @param _eventName SideEffects event which was triggered\n\t * @returns True if the data path is shown on the UI\n\t */\n\tisDataPathRelevant(path: string, _eventName: string): boolean {\n\t\tconst context = this.getView().getBindingContext() as Context;\n\n\t\tif (this._contextIsRelevant(path, context)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !!this._findRelevantContext(path, context);\n\t}\n\n\t/**\n\t * Checks if a given context fits to a given path.\n\t *\n\t * This is done by checking both the navigation path and the canonical path.\n\t * We also check dependent property bindings if they follow a navigation path to the given path.\n\t * @param path The path to be checked\n\t * @param context The context to be checked\n\t * @returns True if the context fits to the given path\n\t */\n\t_contextIsRelevant(path: string, context: Context): boolean {\n\t\tif (context?.getPath() === path || context?.getCanonicalPath() === path) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// check if a dependent binding follows a navigation path and fits to this path\n\t\tconst model = context.getModel();\n\t\tconst metaModel = model.getMetaModel();\n\t\tconst dependentBindings = model.getDependentBindings(context);\n\t\tfor (const binding of dependentBindings) {\n\t\t\tconst bindingPath = binding.getPath() ?? \"\";\n\t\t\t// ignore UI5 internal bindings\n\t\t\tif (bindingPath.startsWith(\"@$ui5\")) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst propertyTarget = metaModel.fetchUpdateData(bindingPath, context).getResult();\n\t\t\tif (propertyTarget?.entityPath === path || \"/\" + propertyTarget?.editUrl === path) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Find context for a given path by checking dependent bindings.\n\t * @param path The path to be checked\n\t * @param context The parent context\n\t * @returns Context if found, otherwise returns undefined\n\t */\n\t_findRelevantContext(path: string, context: Context): Context | undefined {\n\t\tif (this._contextIsRelevant(path, context)) {\n\t\t\treturn context;\n\t\t}\n\n\t\tconst dependentBindings = context.getModel().getDependentBindings(context);\n\t\tfor (const binding of dependentBindings) {\n\t\t\tif (binding.isA<ODataContextBinding>(\"sap.ui.model.odata.v4.ODataContextBinding\")) {\n\t\t\t\tif (this._contextIsRelevant(path, binding.getBoundContext())) {\n\t\t\t\t\treturn binding.getBoundContext();\n\t\t\t\t}\n\t\t\t} else if (binding.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\tconst listContexts = binding.getAllCurrentContexts();\n\t\t\t\tfor (const listContext of listContexts) {\n\t\t\t\t\tif (this._contextIsRelevant(path, listContext)) {\n\t\t\t\t\t\treturn listContext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get text to be shown for user to indicate data refresh.\n\t *\n\t * This is currently only used by SideEffects events. Pages (like the LR) might override this method.\n\t * @returns Text to be shown to the user in case of a data refresh\n\t */\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.Instead)\n\tgetDataRefreshText(): string {\n\t\tconst resourceModel = getResourceModel(this.getView());\n\t\treturn resourceModel.getText(\"C_SERVER_EVENTS_NEW_DATA_ITEM\");\n\t}\n\n\t/**\n\t * Notify the user that data was refreshed.\n\t *\n\t * This is currently only used by SideEffects events.\n\t */\n\n\tnotifyDataRefresh(): void {\n\t\tMessageToast.show(this.base.getView().getController()._sideEffects.getDataRefreshText());\n\t}\n\n\t/**\n\t * Ask the user for confirmation of a data refresh.\n\t *\n\t * This is currently only used by SideEffects events.\n\t * @returns Promise that is resolved if the user confirms and rejects if the user cancels.\n\t */\n\tasync confirmDataRefresh(): Promise<void> {\n\t\tif (!this.isConfirmationDialogOpen) {\n\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\tconst text = this.getDataRefreshText();\n\t\t\t\tconst resourceModel = getResourceModel(this.getView());\n\n\t\t\t\tconst confirmationDialog = new Dialog({\n\t\t\t\t\ttitle: resourceModel.getText(\"WARNING\"),\n\t\t\t\t\tstate: \"Warning\",\n\t\t\t\t\tcontent: new Text({ text: text }),\n\t\t\t\t\tbeginButton: new Button({\n\t\t\t\t\t\ttext: resourceModel.getText(\"C_COMMON_SAPFE_REFRESH\"),\n\t\t\t\t\t\tpress: (): void => {\n\t\t\t\t\t\t\tconfirmationDialog.close();\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tendButton: new Button({\n\t\t\t\t\t\ttext: resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\"),\n\t\t\t\t\t\tpress: (): void => {\n\t\t\t\t\t\t\tconfirmationDialog.close();\n\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tafterClose: (): void => {\n\t\t\t\t\t\tconfirmationDialog.destroy();\n\t\t\t\t\t\tthis.isConfirmationDialogOpen = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconfirmationDialog.addStyleClass(\"sapUiContentPadding\");\n\t\t\t\tthis.isConfirmationDialogOpen = true;\n\t\t\t\tconfirmationDialog.open();\n\t\t\t});\n\t\t}\n\t\treturn Promise.reject();\n\t}\n\n\t/**\n\t * Request multiple SideEffects on a specific context.\n\t * @param multiSideEffects SideEffects to be executed\n\t * @param context Context where SideEffects need to be executed\n\t * @param groupId The group id of the batch\n\t * @returns SideEffects request on SAPUI5 context\n\t */\n\tasync requestMultipleSideEffects(multiSideEffects: SideEffectsType[], context: Context, groupId?: string): Promise<unknown> {\n\t\tlet properties = new Set<string>();\n\t\tlet navigationProperties = new Set<string>();\n\t\tconst actions = multiSideEffects.reduce((actions, sideEffects) => {\n\t\t\tconst sideEffectAction = (sideEffects as ODataSideEffectsType).triggerAction;\n\t\t\tif (sideEffectAction) {\n\t\t\t\tactions.push(sideEffectAction);\n\t\t\t}\n\t\t\treturn actions;\n\t\t}, [] as string[]);\n\t\tconst fntriggerCallbacks = this.triggerCallbacks.bind(this);\n\n\t\tfor (const action of actions) {\n\t\t\tthis._sideEffectsService.executeAction(action, context, groupId);\n\t\t}\n\n\t\tfor (const sideEffects of multiSideEffects) {\n\t\t\tproperties = (sideEffects.targetProperties ?? []).reduce((mySet, property) => mySet.add(property), properties);\n\t\t\tnavigationProperties = (sideEffects.targetEntities ?? []).reduce(\n\t\t\t\t(mySet, navigationProperty) => mySet.add(navigationProperty.$NavigationPropertyPath),\n\t\t\t\tnavigationProperties\n\t\t\t);\n\t\t}\n\n\t\treturn this._sideEffectsService\n\t\t\t.requestSideEffects(\n\t\t\t\t[\n\t\t\t\t\t...Array.from(properties),\n\t\t\t\t\t...Array.from(navigationProperties).map((navigationProperty) => {\n\t\t\t\t\t\treturn { $NavigationPropertyPath: navigationProperty };\n\t\t\t\t\t})\n\t\t\t\t],\n\t\t\t\tcontext,\n\t\t\t\tgroupId\n\t\t\t)\n\t\t\t.then(async function async() {\n\t\t\t\treturn fntriggerCallbacks(Array.from(navigationProperties));\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tthis.registerFailedSideEffects(multiSideEffects, context);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\t/**\n\t * Gets failed SideEffects.\n\t * @returns Registered SideEffects requests that have failed\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tpublic getRegisteredFailedRequests(): FailedSideEffectDictionary {\n\t\treturn this._registeredFailedSideEffects;\n\t}\n\n\t/**\n\t * Adds SideEffects to the queue of the failed SideEffects\n\t * The SideEffects are retriggered on the next request on the same context.\n\t * @param multiSideEffects SideEffects that need to be retriggered\n\t * @param context Context where SideEffects have failed\n\t */\n\t@privateExtension()\n\t@finalExtension()\n\tregisterFailedSideEffects(multiSideEffects: SideEffectsType[], context: Context): void {\n\t\tconst contextPath = context.getPath();\n\t\tthis._registeredFailedSideEffects[contextPath] = this._registeredFailedSideEffects[contextPath] ?? [];\n\t\tfor (const sideEffects of multiSideEffects) {\n\t\t\tconst isNotAlreadyListed = this._registeredFailedSideEffects[contextPath].every(\n\t\t\t\t(mFailedSideEffects) => sideEffects.fullyQualifiedName !== mFailedSideEffects.fullyQualifiedName\n\t\t\t);\n\t\t\tif (isNotAlreadyListed) {\n\t\t\t\tthis._registeredFailedSideEffects[contextPath].push(sideEffects);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Deletes SideEffects in the queue of the failed SideEffects for a context.\n\t * @param contextPath Context path where SideEffects have failed\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tunregisterFailedSideEffectsForAContext(contextPath: string): void {\n\t\tdelete this._registeredFailedSideEffects[contextPath];\n\t}\n\n\t/**\n\t * Deletes SideEffects to the queue of the failed SideEffects.\n\t * @param sideEffectsFullyQualifiedName SideEffects that need to be retriggered\n\t * @param context Context where SideEffects have failed\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tunregisterFailedSideEffects(sideEffectsFullyQualifiedName: string, context: Context): void {\n\t\tconst contextPath = context.getPath();\n\t\tif (this._registeredFailedSideEffects[contextPath]?.length) {\n\t\t\tthis._registeredFailedSideEffects[contextPath] = this._registeredFailedSideEffects[contextPath].filter(\n\t\t\t\t(sideEffects) => sideEffects.fullyQualifiedName !== sideEffectsFullyQualifiedName\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Adds SideEffects to the queue of a FieldGroup\n\t * The SideEffects are triggered when event related to the field group change is fired.\n\t * @param sideEffectsProperties SideEffects properties\n\t * @param fieldGroupPreRequisite Promise to fullfil before executing the SideEffects\n\t */\n\t@privateExtension()\n\t@finalExtension()\n\tregisterFieldGroupSideEffects(sideEffectsProperties: FieldSideEffectPropertyType, fieldGroupPreRequisite?: Promise<unknown>): void {\n\t\tconst id = this._getFieldGroupIndex(sideEffectsProperties.name, sideEffectsProperties.context);\n\t\tif (!this._registeredFieldGroupMap[id]) {\n\t\t\tthis._registeredFieldGroupMap[id] = {\n\t\t\t\tpromise: fieldGroupPreRequisite ?? Promise.resolve(),\n\t\t\t\tsideEffectProperty: sideEffectsProperties\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Deletes SideEffects to the queue of a FieldGroup.\n\t * @param sideEffectsProperties SideEffects properties\n\t */\n\t@privateExtension()\n\t@finalExtension()\n\tunregisterFieldGroupSideEffects(sideEffectsProperties: FieldSideEffectPropertyType): void {\n\t\tconst { context, name } = sideEffectsProperties;\n\t\tconst id = this._getFieldGroupIndex(name, context);\n\t\tdelete this._registeredFieldGroupMap[id];\n\t}\n\n\t/**\n\t * Gets the registered SideEffects into the queue for a field group id.\n\t * @param fieldGroupId Field group id\n\t * @returns Array of registered SideEffects and their promise\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetRegisteredSideEffectsForFieldGroup(fieldGroupId: string): FieldGroupSideEffectType[] {\n\t\tconst sideEffects = [];\n\t\tfor (const registryIndex of Object.keys(this._registeredFieldGroupMap)) {\n\t\t\tif (registryIndex.startsWith(`${fieldGroupId}_`)) {\n\t\t\t\tsideEffects.push(this._registeredFieldGroupMap[registryIndex]);\n\t\t\t}\n\t\t}\n\t\treturn sideEffects;\n\t}\n\n\t/**\n\t * Gets the registered SideEffects into the queue for a context and its children.\n\t * @param context The context\n\t * @returns Array of registered SideEffects and their promise\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetRegisteredSideEffectsForContext(context: Context): FieldGroupSideEffectType[] {\n\t\tconst sideEffects = [];\n\t\tfor (const registryIndex of Object.keys(this._registeredFieldGroupMap)) {\n\t\t\tif (this._registeredFieldGroupMap)\n\t\t\t\tif (registryIndex.includes(`_${context.getPath()}`)) {\n\t\t\t\t\tsideEffects.push(this._registeredFieldGroupMap[registryIndex]);\n\t\t\t\t}\n\t\t}\n\t\treturn sideEffects;\n\t}\n\n\t/**\n\t * Gets a status index.\n\t * @param fieldGroupId The field group id\n\t * @param context SAPUI5 Context\n\t * @returns Index\n\t */\n\tprivate _getFieldGroupIndex(fieldGroupId: string, context: Context): string {\n\t\treturn `${fieldGroupId}_${context.getPath()}`;\n\t}\n\n\t/**\n\t * Gets sideEffects properties from a field group id\n\t * The properties are:\n\t * - name\n\t * - sideEffects definition\n\t * - sideEffects entity type\n\t * - immediate sideEffects.\n\t * @param fieldGroupId\n\t * @returns SideEffects properties\n\t */\n\tprivate _getSideEffectsPropertyForFieldGroup(fieldGroupId: string): {\n\t\tsideEffectEntityType: string;\n\t\tname: string;\n\t\timmediate: boolean;\n\t\tsideEffects: ODataSideEffectsType | undefined;\n\t} {\n\t\t/**\n\t\t * string \"$$ImmediateRequest\" is added to the SideEffects name during templating to know\n\t\t * if this SideEffects must be immediately executed requested (on field change) or must\n\t\t * be deferred (on field group focus out)\n\t\t *\n\t\t */\n\t\tconst immediate = fieldGroupId.includes(IMMEDIATE_REQUEST),\n\t\t\tname = fieldGroupId.replace(IMMEDIATE_REQUEST, \"\"),\n\t\t\tsideEffectParts = name.split(\"#\"),\n\t\t\tsideEffectEntityType = sideEffectParts[0],\n\t\t\tsideEffectPath = `${sideEffectEntityType}@com.sap.vocabularies.Common.v1.SideEffects${\n\t\t\t\tsideEffectParts.length === 2 ? `#${sideEffectParts[1]}` : \"\"\n\t\t\t}`,\n\t\t\tsideEffects: ODataSideEffectsType | undefined =\n\t\t\t\tthis._sideEffectsService.getODataEntitySideEffects(sideEffectEntityType)?.[sideEffectPath];\n\t\treturn { name, immediate, sideEffects, sideEffectEntityType };\n\t}\n\n\t/**\n\t * Manages the SideEffects for a field.\n\t * @param field Field control\n\t * @returns Promise related to the requested immediate sideEffects\n\t */\n\tprivate async _manageSideEffectsFromField(field: Control): Promise<void> {\n\t\tconst sideEffectsMap = this.getFieldSideEffectsMap(field);\n\t\ttry {\n\t\t\tconst sideEffectsToExecute: Record<string, { sideEffects: SideEffectsType[]; context: Context }> = {};\n\t\t\tconst addSideEffects = (context: Context, sideEffects: SideEffectsType): void => {\n\t\t\t\tconst contextPath = context.getPath();\n\t\t\t\tif (sideEffectsToExecute[contextPath]) {\n\t\t\t\t\tsideEffectsToExecute[contextPath].sideEffects.push(sideEffects);\n\t\t\t\t} else {\n\t\t\t\t\tsideEffectsToExecute[contextPath] = {\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tsideEffects: [sideEffects]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//Get Immediate SideEffects\n\t\t\tfor (const sideEffectsProperties of Object.values(sideEffectsMap).filter(\n\t\t\t\t(sideEffectsProperties) => sideEffectsProperties.immediate === true\n\t\t\t)) {\n\t\t\t\t// if this SideEffects is recorded as failed SideEffects, need to remove it.\n\t\t\t\tthis.unregisterFailedSideEffects(sideEffectsProperties.sideEffects.fullyQualifiedName, sideEffectsProperties.context);\n\t\t\t\taddSideEffects(sideEffectsProperties.context, sideEffectsProperties.sideEffects);\n\t\t\t}\n\n\t\t\t//Replay failed SideEffects related to the view or Field\n\t\t\tfor (const context of [field.getBindingContext(), this._view.getBindingContext()].filter(\n\t\t\t\t(context): context is Context => !!context\n\t\t\t)) {\n\t\t\t\tconst contextPath = context.getPath();\n\t\t\t\tconst failedSideEffects = this._registeredFailedSideEffects[contextPath] ?? [];\n\t\t\t\tthis.unregisterFailedSideEffectsForAContext(contextPath);\n\t\t\t\tfor (const failedSideEffect of failedSideEffects) {\n\t\t\t\t\taddSideEffects(context, failedSideEffect);\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait Promise.all(\n\t\t\t\tObject.values(sideEffectsToExecute).map(async (sideEffectsProperties) =>\n\t\t\t\t\tsideEffectsProperties.sideEffects.length === 1\n\t\t\t\t\t\t? this.requestSideEffects(sideEffectsProperties.sideEffects[0], sideEffectsProperties.context)\n\t\t\t\t\t\t: this.requestMultipleSideEffects(sideEffectsProperties.sideEffects, sideEffectsProperties.context)\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tLog.debug(`Error while managing Field SideEffects`, e as string);\n\t\t}\n\t}\n\n\tasync triggerCallbacks(navigation: string[]): Promise<undefined> {\n\t\tawait Promise.all(\n\t\t\tnavigation.map((nav) => {\n\t\t\t\tconst registerCallBack = this._sideEffectsService.getRegisteredCallback(nav);\n\t\t\t\tif (registerCallBack) {\n\t\t\t\t\treturn registerCallBack();\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Requests the SideEffects for a fieldGroup.\n\t * @param fieldGroupSideEffects Field group sideEffects with its promise\n\t * @returns Promise returning true if the SideEffects have been successfully executed\n\t */\n\tprivate async _requestFieldGroupSideEffects(fieldGroupSideEffects: FieldGroupSideEffectType): Promise<void> {\n\t\tthis.unregisterFieldGroupSideEffects(fieldGroupSideEffects.sideEffectProperty);\n\t\ttry {\n\t\t\tawait fieldGroupSideEffects.promise;\n\t\t} catch (e) {\n\t\t\tLog.debug(`Error while processing FieldGroup SideEffects`, e as string);\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst { sideEffects, context, name } = fieldGroupSideEffects.sideEffectProperty;\n\t\t\tif (this.isFieldGroupValid(name, context)) {\n\t\t\t\tawait this.requestSideEffects(sideEffects, context);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tLog.debug(`Error while executing FieldGroup SideEffects`, e as string);\n\t\t}\n\t}\n\n\t/**\n\t * Saves the validation status of properties related to a field control.\n\t * @param field The field control\n\t * @param success Status of the field validation\n\t */\n\tprivate _saveFieldPropertiesStatus(field: Control, success: boolean): void {\n\t\tconst sideEffectsMap = this.getFieldSideEffectsMap(field);\n\t\tObject.keys(sideEffectsMap).forEach((key) => {\n\t\t\tconst { name, immediate, context } = sideEffectsMap[key];\n\t\t\tif (!immediate) {\n\t\t\t\tconst id = this._getFieldGroupIndex(name, context);\n\t\t\t\tif (success) {\n\t\t\t\t\tdelete this._fieldGroupInvalidity[id]?.[field.getId()];\n\t\t\t\t} else {\n\t\t\t\t\tthis._fieldGroupInvalidity[id] = {\n\t\t\t\t\t\t...this._fieldGroupInvalidity[id],\n\t\t\t\t\t\t...{ [field.getId()]: true }\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default SideEffectsControllerExtension;\n"],"mappings":"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","ignoreList":[]}