{"version":3,"names":["RuntimeBuildingBlockFragment","_dec","defineUI5Class","_dec2","event","_dec3","aggregation","type","_dec4","multiple","_dec5","_dec6","_class","_class2","_Fragment","_this","_len","arguments","length","args","Array","_key","call","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_exports","_inheritsLoose","Fragment","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","RUNTIME_BLOCKS","storeRuntimeBlock","BuildingBlockClass","metadata","namespace","publicNamespace","name","registerType","load","mSettings","buildingBlockDetail","fragmentName","e","loadErrorMessage","init","Label","text","fragmentContent","undefined","Error","classSettings","feCustomData","customData","mProperties","value","functionHolder","containingView","getController","getView","pageComponent","Component","getOwnerComponentFor","appComponent","CommonUtils","getAppComponent","metaModel","getMetaModel","pageModel","getModel","functionStringInOrder","split","propertiesAssignedToFunction","propertyName","properties","propertyMetadata","pageModelContext","createBindingContext","bindable","Number","resolveBindingString","functionIndex","indexOf","functionString","targetFunction","find","functionDef","_sapui_handlerName","bind","getObject","ManagedObject","runWithPreprocessors","renderedControl","jsx","withContext","view","templateProcessingSettings","models","converterContext","JSONModel","isRuntimeInstantiation","buildingBlockInstance","initControllerExtensionHookHandlers","fragmentXML","dependents","dependent","addDependent","customDataHolder","addCustomData","layoutData","setAggregation","getContent","_bAsync","_aContent","id","sId","createId","settings","controlSettings","allAssociations","getMetadata","getAllAssociations","associationDetailName","Object","keys","associations","isArray","map","association","singleAssociationValue"],"sourceRoot":".","sources":["RuntimeBuildingBlockFragment.ts"],"sourcesContent":["import type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { resolveBindingString } from \"sap/fe/base/BindingToolkit\";\nimport type { UI5AssociationMetadata } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineUI5Class, event } from \"sap/fe/base/ClassSupport\";\nimport { initControllerExtensionHookHandlers } from \"sap/fe/base/HookSupport\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ExtensionAPI from \"sap/fe/core/ExtensionAPI\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport type RuntimeBuildingBlock from \"sap/fe/core/buildingBlocks/templating/RuntimeBuildingBlock\";\nimport Label from \"sap/m/Label\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Component from \"sap/ui/core/Component\";\nimport type Control from \"sap/ui/core/Control\";\nimport type CustomData from \"sap/ui/core/CustomData\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport type LayoutData from \"sap/ui/core/LayoutData\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type { ManagedObjectEx } from \"types/extension_types\";\n\n/**\n * Internal extension to the Fragment class in order to add some place to hold functions for runtime building blocks\n */\n@defineUI5Class(\"sap.fe.core.buildingBlocks.templating.RuntimeBuildingBlockFragment\")\nexport default class RuntimeBuildingBlockFragment extends Fragment {\n\t/*\n\t * Event to hold and resolve functions for runtime building blocks\n\t */\n\t@event()\n\tfunctionHolder!: Function;\n\n\t@aggregation({ type: \"sap.ui.core.Control\" })\n\tfragmentXML?: Control;\n\n\t@aggregation({ type: \"sap.ui.core.Control[]\", multiple: true })\n\tdependents!: Control[];\n\n\t@aggregation({ type: \"sap.ui.core.CustomData[]\", multiple: true })\n\tcustomDataHolder!: CustomData[];\n\n\t@aggregation({ type: \"sap.ui.core.LayoutData\" })\n\tlayoutData!: LayoutData;\n}\n\ntype FragmentCustomData = {\n\tmProperties: {\n\t\tvalue: {\n\t\t\t\"sap.fe.core.buildingBlocks.templating\"?: Record<string, string>;\n\t\t};\n\t};\n};\n\nexport type RuntimeBuildingBlockFragmentSettings = {\n\tfragmentName: string;\n\tfragmentContent?: typeof RuntimeBuildingBlock;\n\tcontainingView: View;\n\tcustomData?: FragmentCustomData[];\n\tdependents?: UI5Element[];\n\tcustomDataHolder?: CustomData[];\n\tlayoutData?: LayoutData;\n\tfragmentXML?: Control;\n\tfunctionHolder?: FunctionWithHandler[][];\n\tloadErrorMessage?: string;\n};\n\ntype FunctionWithHandler = Function & {\n\t_sapui_handlerName?: string;\n};\ntype FragmentWithInternals = {\n\t_bAsync: boolean;\n\t_aContent: Control | Control[] | undefined;\n};\n\nconst RUNTIME_BLOCKS: Record<string, typeof RuntimeBuildingBlock> = {};\n/**\n * Stores the class of a runtime building block to be loaded whenever the building block is used at runtime.\n * @param BuildingBlockClass\n */\nexport function storeRuntimeBlock(BuildingBlockClass: typeof RuntimeBuildingBlock): void {\n\tRUNTIME_BLOCKS[\n\t\t`${BuildingBlockClass.metadata.namespace ?? BuildingBlockClass.metadata.publicNamespace}.${BuildingBlockClass.metadata.name}`\n\t] = BuildingBlockClass;\n}\n\nRuntimeBuildingBlockFragment.registerType(\"FE_COMPONENTS\", {\n\tload: async function (mSettings: RuntimeBuildingBlockFragmentSettings) {\n\t\tlet buildingBlockDetail;\n\t\ttry {\n\t\t\tbuildingBlockDetail = await RUNTIME_BLOCKS[mSettings.fragmentName].load();\n\t\t} catch (e) {\n\t\t\tmSettings.loadErrorMessage = e as string;\n\t\t}\n\t\treturn buildingBlockDetail;\n\t},\n\tinit: function (this: FragmentWithInternals, mSettings: RuntimeBuildingBlockFragmentSettings) {\n\t\t// In case there was an error during the load process, exit early\n\t\tif (mSettings.loadErrorMessage) {\n\t\t\treturn new Label({ text: mSettings.loadErrorMessage });\n\t\t}\n\t\tlet BuildingBlockClass = mSettings.fragmentContent;\n\t\tif (BuildingBlockClass === undefined) {\n\t\t\t// In some case we might have been called here synchronously (unstash case for instance), which means we didn't go through the load function\n\t\t\tBuildingBlockClass = RUNTIME_BLOCKS[mSettings.fragmentName];\n\t\t}\n\t\tif (BuildingBlockClass === undefined) {\n\t\t\tthrow new Error(`No building block class for runtime building block ${mSettings.fragmentName} found`);\n\t\t}\n\n\t\tconst classSettings: Record<string, unknown> = {};\n\t\tconst feCustomData: Record<string, string> =\n\t\t\tmSettings.customData?.[0]?.mProperties?.value?.[\"sap.fe.core.buildingBlocks.templating\"] || {};\n\t\tdelete mSettings.customData;\n\t\tconst functionHolder: FunctionWithHandler[][] = mSettings.functionHolder ?? [];\n\t\tdelete mSettings.functionHolder;\n\n\t\t// containingView can also be a fragment, so we have to use the controller (which could also be an ExtensionAPI) get the actual view\n\t\tconst containingView =\n\t\t\tmSettings.containingView.getController?.()?.getView?.() ??\n\t\t\t(mSettings.containingView.getController?.() as unknown as ExtensionAPI)?.[\"_view\"] ??\n\t\t\tmSettings.containingView;\n\t\tconst pageComponent = Component.getOwnerComponentFor(containingView) as TemplateComponent;\n\t\tconst appComponent = CommonUtils.getAppComponent(containingView);\n\n\t\tconst metaModel = appComponent.getMetaModel();\n\t\tconst pageModel = pageComponent.getModel(\"_pageModel\");\n\n\t\tconst functionStringInOrder: string[] | undefined = feCustomData.functionStringInOrder?.split(\",\");\n\t\tconst propertiesAssignedToFunction: string[] | undefined = feCustomData.propertiesAssignedToFunction?.split(\",\") ?? [];\n\t\tfor (const propertyName in BuildingBlockClass.metadata.properties) {\n\t\t\tconst propertyMetadata = BuildingBlockClass.metadata.properties[propertyName];\n\t\t\tconst pageModelContext = pageModel.createBindingContext(feCustomData[propertyName]);\n\n\t\t\tif (pageModelContext === null) {\n\t\t\t\t// value cannot be resolved, so it is either a runtime binding or a constant\n\t\t\t\tlet value: string | boolean | number | BindingToolkitExpression<string | boolean | number> | undefined =\n\t\t\t\t\tfeCustomData[propertyName];\n\n\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\tif (propertyMetadata.bindable !== true) {\n\t\t\t\t\t\t// runtime bindings are not allowed, so convert strings into actual primitive types\n\t\t\t\t\t\tswitch (propertyMetadata.type) {\n\t\t\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\t\t\tvalue = value === \"true\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\t\t\tvalue = Number(value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// runtime bindings are allowed, so resolve the values as BindingToolkit expressions\n\t\t\t\t\t\tvalue = resolveBindingString(value, propertyMetadata.type);\n\t\t\t\t\t}\n\t\t\t\t} else if (propertyMetadata.type === \"function\") {\n\t\t\t\t\tconst functionIndex = propertiesAssignedToFunction.indexOf(propertyName);\n\t\t\t\t\tif (functionIndex > -1) {\n\t\t\t\t\t\tconst functionString = functionStringInOrder[functionIndex];\n\t\t\t\t\t\tconst targetFunction = functionHolder?.find((functionDef) => functionDef[0]?._sapui_handlerName === functionString);\n\t\t\t\t\t\t// We use the _sapui_handlerName to identify which function is the one we want to bind here\n\t\t\t\t\t\tif (targetFunction && targetFunction.length > 1) {\n\t\t\t\t\t\t\tvalue = targetFunction[0].bind(targetFunction[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclassSettings[propertyName] = value;\n\t\t\t} else if (pageModelContext.getObject() !== undefined && propertyName !== \"contextPath\" && propertyName !== \"metaPath\") {\n\t\t\t\t// get value from page model\n\t\t\t\tclassSettings[propertyName] = pageModelContext.getObject();\n\t\t\t} else {\n\t\t\t\t// bind to metamodel\n\t\t\t\tclassSettings[propertyName] = metaModel.createBindingContext(feCustomData[propertyName]);\n\t\t\t}\n\t\t}\n\n\t\treturn (ManagedObject as ManagedObjectEx).runWithPreprocessors(\n\t\t\t() => {\n\t\t\t\tconst renderedControl = jsx.withContext({ view: containingView, appComponent: appComponent }, () => {\n\t\t\t\t\tconst templateProcessingSettings = {\n\t\t\t\t\t\tmodels: {\n\t\t\t\t\t\t\t\"sap.fe.i18n\": containingView.getModel(\"sap.fe.i18n\") as ResourceModel,\n\t\t\t\t\t\t\tconverterContext: (containingView.getModel(\"_pageModel\") ?? new JSONModel()) as JSONModel\n\t\t\t\t\t\t},\n\t\t\t\t\t\tappComponent: appComponent,\n\t\t\t\t\t\tisRuntimeInstantiation: true\n\t\t\t\t\t} as TemplateProcessorSettings;\n\n\t\t\t\t\tconst buildingBlockInstance = new BuildingBlockClass!(classSettings, {}, templateProcessingSettings);\n\t\t\t\t\tinitControllerExtensionHookHandlers(buildingBlockInstance, containingView.getController() as PageController);\n\t\t\t\t\tif (mSettings.fragmentXML) {\n\t\t\t\t\t\tif (mSettings.dependents) {\n\t\t\t\t\t\t\tfor (const dependent of mSettings.dependents) {\n\t\t\t\t\t\t\t\tmSettings.fragmentXML.addDependent(dependent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete mSettings.dependents;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (mSettings.customDataHolder) {\n\t\t\t\t\t\t\tfor (const customDataHolder of mSettings.customDataHolder) {\n\t\t\t\t\t\t\t\tmSettings.fragmentXML.addCustomData(customDataHolder);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete mSettings.customDataHolder;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (mSettings.layoutData) {\n\t\t\t\t\t\t\tmSettings.fragmentXML.setAggregation(\"layoutData\", mSettings.layoutData);\n\t\t\t\t\t\t\tdelete mSettings.layoutData;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn buildingBlockInstance.getContent?.(containingView, appComponent, mSettings.fragmentXML);\n\t\t\t\t});\n\t\t\t\tif (!this._bAsync) {\n\t\t\t\t\tthis._aContent = renderedControl;\n\t\t\t\t}\n\t\t\t\treturn renderedControl;\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: function (sId: string) {\n\t\t\t\t\treturn mSettings.containingView.createId(sId);\n\t\t\t\t},\n\t\t\t\tsettings: function (controlSettings: Record<string, string | ManagedObject | (string | ManagedObject)[]>) {\n\t\t\t\t\tconst allAssociations = this.getMetadata().getAllAssociations();\n\t\t\t\t\tfor (const associationDetailName of Object.keys(allAssociations)) {\n\t\t\t\t\t\tif (controlSettings[associationDetailName] !== undefined) {\n\t\t\t\t\t\t\tif ((allAssociations[associationDetailName] as UI5AssociationMetadata).multiple) {\n\t\t\t\t\t\t\t\t// Multiple association\n\t\t\t\t\t\t\t\t// The associated elements are indicated via local IDs; we need to change the references to global ones\n\t\t\t\t\t\t\t\tconst associations = (\n\t\t\t\t\t\t\t\t\tArray.isArray(controlSettings[associationDetailName])\n\t\t\t\t\t\t\t\t\t\t? controlSettings[associationDetailName]\n\t\t\t\t\t\t\t\t\t\t: [controlSettings[associationDetailName]]\n\t\t\t\t\t\t\t\t) as (string | ManagedObject)[];\n\n\t\t\t\t\t\t\t\t// Create global IDs for associations given as strings, not for already resolved ManagedObjects\n\t\t\t\t\t\t\t\tcontrolSettings[associationDetailName] = associations.map((association: string | ManagedObject) =>\n\t\t\t\t\t\t\t\t\ttypeof association === \"string\" ? mSettings.containingView.createId(association) : association\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Single association\n\t\t\t\t\t\t\t\tconst singleAssociationValue = controlSettings[associationDetailName];\n\t\t\t\t\t\t\t\tcontrolSettings[associationDetailName] =\n\t\t\t\t\t\t\t\t\ttypeof singleAssociationValue === \"string\"\n\t\t\t\t\t\t\t\t\t\t? mSettings.containingView.createId(singleAssociationValue)\n\t\t\t\t\t\t\t\t\t\t: singleAssociationValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn controlSettings;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n});\n"],"mappings":"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","ignoreList":[],"file":"RuntimeBuildingBlockFragment-dbg.js"}