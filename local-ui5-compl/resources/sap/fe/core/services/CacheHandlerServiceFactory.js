/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2024 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/strings/hash","sap/ui/core/cache/CacheManager","sap/ui/core/service/Service","sap/ui/core/service/ServiceFactory","sap/ui/thirdparty/jquery"],function(e,t,n,s,jQuery){"use strict";var i={};function o(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,a(e,t)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}async function r(e,t,n){return new Promise(function(s){jQuery.ajax(e,{method:"GET"}).done(function(i,o,a){n[e]=a.getResponseHeader("ETag")||a.getResponseHeader("Last-Modified");s(t===n[e])}).fail(function(){n[e]="";s(false)})})}let c=function(n){function s(){return n.apply(this,arguments)||this}i.CacheHandlerService=s;o(s,n);var a=s.prototype;a.init=function e(){const t=this.getContext();this.oFactory=t.factory;const n=t.settings;if(!n.metaModel){throw new Error("a `metaModel` property is expected when instantiating the CacheHandlerService")}this.oMetaModel=n.metaModel;this.oAppComponent=n.appComponent;this.oComponent=n.component;this.initPromise=this.oMetaModel.fetchEntityContainer().then(()=>this);this.mCacheNeedsInvalidate={}};a.exit=function e(){this.oFactory.removeGlobalInstance(this.oMetaModel)};a.validateCacheKey=async function e(n,s,i){let o=true;let a;try{const e=await t.get(n);const c=this.getETags(s,i);a=JSON.stringify(c);if(e){const t={};const n=JSON.parse(e.cachedETags);const s=await Promise.all(Object.keys(n).map(async function(e){if(n[e]){if(c[e]){t[e]=c[e];return n[e]===c[e]}else{return r(e,n[e],t)}}else{t[e]=c[e];return n[e]===c[e]}}));o=s.includes(false);if(Object.keys(t).some(function(e){return!t[e]})){a=null}else{a=o?JSON.stringify(t):e.viewCacheKey}}else if(Object.keys(c).some(function(e){return!c[e]})){a=null}}catch(e){o=true;a=null}this.mCacheNeedsInvalidate[n]=o;return a};a.invalidateIfNeeded=async function e(n,s,i,o){const a=JSON.stringify(this.getETags(i,o));if(this.mCacheNeedsInvalidate[s]||n&&n!==a){const e={};e.cachedETags=a;e.viewCacheKey=n;return t.set(s,e)}else{return Promise.resolve()}};a.getETags=function t(n,s){const i=this.oMetaModel.getETags();Object.keys(i).forEach(function(e){const t=i[e];if(t!==null&&t instanceof Date){i[e]=i[e].toISOString()}});const o=this.oAppComponent.getManifest();const a=e(JSON.stringify({sapApp:o["sap.app"],viewData:n.getViewData()}));i["manifest"]=a;const r=s.getCapabilities();if(r){i["toggles"]=e(JSON.stringify(r))}return i};a.getInterface=function e(){return this};return s}(n);i.CacheHandlerService=c;let u=function(e){function t(){var t;for(var n=arguments.length,s=new Array(n),i=0;i<n;i++){s[i]=arguments[i]}t=e.call(this,...s)||this;t._oInstanceRegistry={};return t}o(t,e);var n=t.prototype;n.createInstance=async function e(t){const n=t.settings.metaModel.getId();let s=this._oInstanceRegistry[n];if(!s){this._oInstanceRegistry[n]=s=new c(Object.assign({factory:this,scopeObject:null,scopeType:"service"},t))}return s.initPromise.then(()=>this._oInstanceRegistry[n]).catch(e=>{this._oInstanceRegistry[n]=null;throw e})};n.getInstance=function e(t){return this._oInstanceRegistry[t.getId()]};n.removeGlobalInstance=function e(t){this._oInstanceRegistry[t.getId()]=null};return t}(s);return u},false);
//# sourceMappingURL=CacheHandlerServiceFactory.js.map