{"version":3,"file":"EnvironmentServiceFactory.js","names":["OptionalFeatures","SmartSummarize","intent","library","MagicFiltering","imports","ErrorExplanation","DefaultEnvironmentCapabilities","Chart","MicroChart","Collaboration","UShell","IntentBasedNavigation","AppState","InsightsSupported","ContextSharingSupported","DisableInputAssistance","_exports","EnvironmentCapabilitiesService","_Service","_this","_len","arguments","length","args","Array","_key","call","this","optionalFeatureLibraries","_inheritsLoose","_proto","prototype","prepareFeature","async","feature","Error","Library","load","initialize","oContext","getContext","environmentCapabilities","Object","assign","shellContainer","sap","ui","require","versionInfo","VersionInfo","libraries","some","lib","name","navigationService","getServiceAsync","featureName","entries","url","resolveIntent","__ui5_require_async","e","Log","info","message","settings","resolveLibrary","libraryName","Promise","resolve","then","catch","setCapabilities","oCapabilities","setCapability","capability","value","getCapabilities","isInsightsEnabled","isLibAvailable","CardHelper","getMSTeamsActive","isContextSharingEnabled","getInterface","Service","EnvironmentServiceFactory","_ServiceFactory","apply","_proto2","createInstance","oServiceContext","environmentCapabilitiesService","ServiceFactory","isTeamsModeActive","default","CollaborationHelper"],"sources":["./EnvironmentServiceFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Library from \"sap/ui/core/Lib\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type Navigation from \"sap/ushell/services/Navigation\";\nimport type { ServiceContext } from \"types/metamodel_types\";\n\ntype OptionalFeatureDefinition = {\n\tintent: string;\n\tlibrary: string;\n\timports?: string;\n};\n/**\n * Configuration for the optional features.\n */\nconst OptionalFeatures: Record<string, OptionalFeatureDefinition> = {\n\tSmartSummarize: { intent: \"IntelligentPrompt-summarize\", library: \"ux.eng.fioriai.reuse\" },\n\tMagicFiltering: {\n\t\tintent: \"IntelligentPrompt-filter\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\"\n\t},\n\tErrorExplanation: {\n\t\tintent: \"IntelligentPrompt-explain\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/errorexplanation/ErrorExplanation\"\n\t}\n};\ntype FeatureName = keyof typeof OptionalFeatures;\n\nexport type EnvironmentCapabilities = {\n\tChart: boolean;\n\tMicroChart: boolean;\n\tCollaboration: boolean;\n\tUShell: boolean;\n\tIntentBasedNavigation: boolean;\n\tAppState: boolean;\n\tDisableInputAssistance: boolean;\n\tInsightsSupported: boolean;\n\tContextSharingSupported: boolean;\n} & {\n\t[feature in FeatureName]: boolean;\n};\n\nexport const DefaultEnvironmentCapabilities: Readonly<EnvironmentCapabilities> = {\n\tChart: true,\n\tMicroChart: true,\n\tCollaboration: false,\n\tUShell: true,\n\tIntentBasedNavigation: true,\n\tAppState: true,\n\tInsightsSupported: false,\n\tContextSharingSupported: false,\n\tSmartSummarize: false,\n\tMagicFiltering: false,\n\tErrorExplanation: false,\n\tDisableInputAssistance: false\n};\nexport class EnvironmentCapabilitiesService extends Service<EnvironmentCapabilities> {\n\trejectFn!: () => void;\n\n\tinitPromise!: Promise<this>;\n\n\tenvironmentCapabilities!: EnvironmentCapabilities;\n\n\t// !: means that we know it will be assigned before usage\n\tprivate optionalFeatureLibraries: Partial<Record<FeatureName, { url: string; name: string; imports?: string }>> = {};\n\n\t/**\n\t * Prepares the feature for usage.\n\t *\n\t * This function loads the library registered for the feature.\n\t * @param feature The feature to prepare.\n\t * @throws Error if the feature is unavailable.\n\t */\n\tasync prepareFeature(feature: FeatureName): Promise<void> {\n\t\tconst library = this.optionalFeatureLibraries[feature];\n\t\tif (!library) {\n\t\t\tthrow new Error(`Feature '${feature}' is unavailable`);\n\t\t}\n\n\t\tawait Library.load(library);\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst oContext = this.getContext();\n\t\tthis.environmentCapabilities = Object.assign({}, DefaultEnvironmentCapabilities);\n\n\t\tconst shellContainer = sap.ui.require(\"sap/ushell/Container\");\n\t\tconst versionInfo = await VersionInfo.load();\n\t\tthis.environmentCapabilities.Chart = versionInfo.libraries.some((lib) => lib.name === \"sap.viz\");\n\t\tthis.environmentCapabilities.MicroChart = versionInfo.libraries.some((lib) => lib.name === \"sap.suite.ui.microchart\");\n\t\tthis.environmentCapabilities.Collaboration = versionInfo.libraries.some((lib) => lib.name === \"sap.suite.ui.commons\");\n\t\tthis.environmentCapabilities.UShell = !!shellContainer;\n\t\tthis.environmentCapabilities.IntentBasedNavigation = !!shellContainer;\n\t\tthis.environmentCapabilities.InsightsSupported = versionInfo.libraries.some((lib) => lib.name === \"sap.insights\");\n\t\tthis.environmentCapabilities.ContextSharingSupported = versionInfo.libraries.some((lib) => lib.name === \"sap.insights\");\n\n\t\t// Initialize optional features\n\t\tconst navigationService: Navigation | undefined = await shellContainer?.getServiceAsync(\"Navigation\");\n\n\t\tfor (const [featureName, feature] of Object.entries(OptionalFeatures)) {\n\t\t\t// The feature is off by default. Only if there is a shell and the intent resolves, the feature is available\n\t\t\tthis.environmentCapabilities[featureName] = false;\n\n\t\t\tif (navigationService) {\n\t\t\t\ttry {\n\t\t\t\t\t// Resolve by intent:\n\t\t\t\t\t//  - intent resolves \t\t  ==> feature available, provided by the library located at the returned URL\n\t\t\t\t\t//  - intent does not resolve ==> resolveIntent() throws an error ==> feature unavailable\n\t\t\t\t\tconst { url } = await navigationService.resolveIntent(`#${feature.intent}`);\n\t\t\t\t\tthis.optionalFeatureLibraries[featureName] = { name: feature.library, url: url, imports: feature.imports };\n\n\t\t\t\t\tif (feature.imports) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait Library.load(this.optionalFeatureLibraries[featureName]!);\n\t\t\t\t\t\t\tawait import(feature.imports);\n\t\t\t\t\t\t\tthis.environmentCapabilities[featureName] = true;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthis.environmentCapabilities[featureName] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.environmentCapabilities[featureName] = true;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Feature unavailable\n\t\t\t\t\tLog.info(`Feature unavailable ${featureName}: ${(e as { message: string; stack: string })?.message}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.environmentCapabilities = Object.assign(this.environmentCapabilities, oContext.settings);\n\t}\n\n\tstatic async resolveLibrary(libraryName: string): Promise<boolean> {\n\t\treturn new Promise(function (resolve) {\n\t\t\tLibrary.load({ name: `${libraryName}` })\n\t\t\t\t.then(function () {\n\t\t\t\t\tresolve(true);\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function () {\n\t\t\t\t\tresolve(false);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setCapabilities(oCapabilities: EnvironmentCapabilities): void {\n\t\tthis.environmentCapabilities = oCapabilities;\n\t}\n\n\tpublic setCapability(capability: keyof EnvironmentCapabilities, value: boolean): void {\n\t\tthis.environmentCapabilities[capability] = value;\n\t}\n\n\tpublic getCapabilities(): EnvironmentCapabilities {\n\t\treturn this.environmentCapabilities;\n\t}\n\n\t/**\n\t * Checks if insights are enabled on the home page.\n\t * @returns True if insights are enabled on the home page.\n\t */\n\tasync isInsightsEnabled(): Promise<boolean> {\n\t\t// insights is enabled\n\t\treturn new Promise<boolean>(async (resolve) => {\n\t\t\ttry {\n\t\t\t\t// getServiceAsync from suite/insights checks to see if myHome is configured with insights and returns a cardHelperInstance if so.\n\t\t\t\tconst isLibAvailable = await EnvironmentCapabilitiesService.resolveLibrary(\"sap.insights\");\n\t\t\t\tif (isLibAvailable) {\n\t\t\t\t\tsap.ui.require([\"sap/insights/CardHelper\"], async (CardHelper: { getServiceAsync: Function }) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait CardHelper.getServiceAsync(\"UIService\");\n\t\t\t\t\t\t\tresolve(!(await getMSTeamsActive()));\n\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tresolve(false);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks if insights context channel is enabled .\n\t * @returns True if enabled.\n\t */\n\tasync isContextSharingEnabled(): Promise<boolean> {\n\t\t// getServiceAsync from suite/insights checks to see if myHome is configured with insights and returns a cardHelperInstance if so.\n\t\tconst isLibAvailable = await EnvironmentCapabilitiesService.resolveLibrary(\"sap.insights\");\n\t\tif (isLibAvailable) {\n\t\t\ttry {\n\t\t\t\tawait import(\"sap/insights/channels/ContextChannel\");\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetInterface(): this {\n\t\treturn this;\n\t}\n}\n\nexport class EnvironmentServiceFactory extends ServiceFactory<EnvironmentCapabilities> {\n\tasync createInstance(oServiceContext: ServiceContext<Partial<EnvironmentCapabilities>>): Promise<EnvironmentCapabilitiesService> {\n\t\tconst environmentCapabilitiesService = new EnvironmentCapabilitiesService(oServiceContext);\n\t\tawait environmentCapabilitiesService.initialize();\n\t\treturn environmentCapabilitiesService;\n\t}\n}\n\n/**\n * Checks if the application is opened on Microsoft Teams.\n * @returns True if the application is opened on Microsoft Teams.\n */\nexport async function getMSTeamsActive(): Promise<boolean> {\n\tlet isTeamsModeActive = false;\n\ttry {\n\t\tconst { default: CollaborationHelper } = await import(\"sap/suite/ui/commons/collaboration/CollaborationHelper\");\n\t\tisTeamsModeActive = await CollaborationHelper.isTeamsModeActive();\n\t} catch {\n\t\treturn false;\n\t}\n\treturn isTeamsModeActive;\n}\n"],"mappings":";;;;0mBAgBA,MAAMA,EAA8D,CACnEC,eAAgB,CAAEC,OAAQ,8BAA+BC,QAAS,wBAClEC,eAAgB,CACfF,OAAQ,2BACRC,QAAS,uBACTE,QAAS,8CAEVC,iBAAkB,CACjBJ,OAAQ,4BACRC,QAAS,uBACTE,QAAS,2DAmBJ,MAAME,EAAoE,CAChFC,MAAO,KACPC,WAAY,KACZC,cAAe,MACfC,OAAQ,KACRC,sBAAuB,KACvBC,SAAU,KACVC,kBAAmB,MACnBC,wBAAyB,MACzBd,eAAgB,MAChBG,eAAgB,MAChBE,iBAAkB,MAClBU,uBAAwB,OACvBC,EAAAV,iCAAA,IACWW,EAA8B,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,QAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAA,CAAAF,EAAAE,GAAAJ,UAAAI,EAAA,CAAAN,EAAAD,EAAAQ,KAAAC,QAAAJ,IAAAI,KAO1CR,EACQS,yBAA0G,CAAC,EAAC,OAAAT,CAAA,CAAAH,EAAAC,iCAAAY,EAAAZ,EAAAC,GAAA,IAAAY,EAAAb,EAAAc,UAEpHD,EAOME,eAANC,eAAMD,EAAeE,GACpB,MAAMhC,EAAUyB,KAAKC,yBAAyBM,GAC9C,IAAKhC,EAAS,CACb,MAAM,IAAIiC,MAAM,YAAYD,oBAC7B,OAEME,EAAQC,KAAKnC,EACpB,EAAC4B,EAEKQ,WAANL,eAAMK,IACL,MAAMC,EAAWZ,KAAKa,aACtBb,KAAKc,wBAA0BC,OAAOC,OAAO,CAAC,EAAGrC,GAEjD,MAAMsC,EAAiBC,IAAIC,GAAGC,QAAQ,wBACtC,MAAMC,QAAoBC,EAAYZ,OACtCV,KAAKc,wBAAwBlC,MAAQyC,EAAYE,UAAUC,KAAMC,GAAQA,EAAIC,OAAS,WACtF1B,KAAKc,wBAAwBjC,WAAawC,EAAYE,UAAUC,KAAMC,GAAQA,EAAIC,OAAS,2BAC3F1B,KAAKc,wBAAwBhC,cAAgBuC,EAAYE,UAAUC,KAAMC,GAAQA,EAAIC,OAAS,wBAC9F1B,KAAKc,wBAAwB/B,SAAWkC,EACxCjB,KAAKc,wBAAwB9B,wBAA0BiC,EACvDjB,KAAKc,wBAAwB5B,kBAAoBmC,EAAYE,UAAUC,KAAMC,GAAQA,EAAIC,OAAS,gBAClG1B,KAAKc,wBAAwB3B,wBAA0BkC,EAAYE,UAAUC,KAAMC,GAAQA,EAAIC,OAAS,gBAGxG,MAAMC,QAAkDV,GAAgBW,gBAAgB,eAExF,IAAK,MAAOC,EAAatB,KAAYQ,OAAOe,QAAQ1D,GAAmB,CAEtE4B,KAAKc,wBAAwBe,GAAe,MAE5C,GAAIF,EAAmB,CACtB,IAIC,MAAMI,IAAEA,SAAcJ,EAAkBK,cAAc,IAAIzB,EAAQjC,UAClE0B,KAAKC,yBAAyB4B,GAAe,CAAEH,KAAMnB,EAAQhC,QAASwD,IAAKA,EAAKtD,QAAS8B,EAAQ9B,SAEjG,GAAI8B,EAAQ9B,QAAS,CACpB,UACOgC,EAAQC,KAAKV,KAAKC,yBAAyB4B,UAC3CI,EAAO1B,EAAQ9B,SACrBuB,KAAKc,wBAAwBe,GAAe,IAC7C,CAAE,MAAOK,GACRlC,KAAKc,wBAAwBe,GAAe,KAC7C,CACD,KAAO,CACN7B,KAAKc,wBAAwBe,GAAe,IAC7C,CACD,CAAE,MAAOK,GAERC,EAAIC,KAAK,uBAAuBP,MAAiBK,GAA0CG,UAC5F,CACD,CACD,CAEArC,KAAKc,wBAA0BC,OAAOC,OAAOhB,KAAKc,wBAAyBF,EAAS0B,SACrF,EAAChD,EAEYiD,eAAbjC,eAAaiC,EAAeC,GAC3B,OAAO,IAAIC,QAAQ,SAAUC,GAC5BjC,EAAQC,KAAK,CAAEgB,KAAM,GAAGc,MACtBG,KAAK,WACLD,EAAQ,MACR,MACD,GACCE,MAAM,WACNF,EAAQ,MACT,EACF,EACD,EAACvC,EAEM0C,gBAAP,SAAOA,EAAgBC,GACtB9C,KAAKc,wBAA0BgC,CAChC,EAAC3C,EAEM4C,cAAP,SAAOA,EAAcC,EAA2CC,GAC/DjD,KAAKc,wBAAwBkC,GAAcC,CAC5C,EAAC9C,EAEM+C,gBAAP,SAAOA,IACN,OAAOlD,KAAKc,uBACb,EAEAX,EAIMgD,kBAAN7C,eAAM6C,IAEL,OAAO,IAAIV,QAAiBnC,UAC3B,IAEC,MAAM8C,QAAuB9D,EAA+BiD,eAAe,gBAC3E,GAAIa,EAAgB,CACnBlC,IAAIC,GAAGC,QAAQ,CAAC,2BAA4Bd,UAC3C,UACO+C,EAAWzB,gBAAgB,aACjCc,SAAgBY,IACjB,CAAE,MACDZ,EAAQ,MACT,GAEF,KAAO,CACNA,EAAQ,MACT,CACD,CAAE,MACDA,EAAQ,MACT,GAEF,EAEAvC,EAIMoD,wBAANjD,eAAMiD,IAEL,MAAMH,QAAuB9D,EAA+BiD,eAAe,gBAC3E,GAAIa,EAAgB,CACnB,UACOnB,EAAO,uCACd,CAAE,MAAOC,GACR,OAAO,KACR,CACA,OAAO,IACR,KAAO,CACN,OAAO,KACR,CACD,EAAC/B,EAEDqD,aAAA,SAAAA,IACC,OAAOxD,IACR,EAAC,OAAAV,CAAA,CAtJyC,CAASmE,GAAOpE,EAAAC,iCAAA,IAyJ9CoE,EAAyB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA5D,KAAAN,YAAAM,IAAA,CAAAX,EAAAqE,4BAAAxD,EAAAwD,EAAAC,GAAA,IAAAE,EAAAH,EAAAtD,UAAAyD,EAC/BC,eAANxD,eAAMwD,EAAeC,GACpB,MAAMC,EAAiC,IAAI1E,EAA+ByE,SACpEC,EAA+BrD,aACrC,OAAOqD,CACR,EAAC,OAAAN,CAAA,CALoC,CAASO,GAQ/C5E,EAAAqE,4BAIOpD,eAAegD,IACrB,IAAIY,EAAoB,MACxB,IACC,MAAQC,QAASC,SAA8BnC,EAAO,0DACtDiC,QAA0BE,EAAoBF,mBAC/C,CAAE,MACD,OAAO,KACR,CACA,OAAOA,CACR,CAAC7E,EAAAiE,mBAAA,OAAAjE,CAAA","ignoreList":[]}