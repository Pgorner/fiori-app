{"version":3,"names":["RoutingServiceEventing","_dec","defineUI5Class","_dec2","event","_dec3","_class","_class2","_EventProvider","_this","_len","arguments","length","args","Array","_key","call","_initializerDefineProperty","_descriptor","_descriptor2","_inheritsLoose","EventProvider","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","RoutingService","_Service","_this2","_len2","_key2","navigationInfoQueue","enabled","_exports","_proto","init","oContext","getContext","scopeType","oAppComponent","scopeObject","oModel","getModel","oMetaModel","getMetaModel","oRouter","getRouter","oRouterProxy","getRouterProxy","eventProvider","oRoutingConfig","getManifestEntry","routing","_parseRoutingConfiguration","oAppConfig","outbounds","crossNavigation","initPromise","Promise","resolve","beforeExit","detachRouteMatched","_fnOnRouteMatched","fireEvent","exit","destroy","isFCL","config","routerClass","_mTargets","targets","sTargetName","Object","keys","assign","targetName","contextPattern","undefined","viewLevel","_getViewLevelFromPattern","_mRoutes","routes","oRouteManifestInfo","aRouteTargets","getRouteTargetNames","target","sRouteName","name","sRoutePattern","pattern","indexOf","Log","warning","iRouteLevel","routeLevel","item","sParentTargetName","parent","push","FCLLevel","controlAggregation","forEach","aLevel0RouteNames","aLevel1RouteNames","sDefaultRouteName","sName","iLevel","sDefaultTargetName","slice","sContextPath","oSettings","options","settings","contextPath","entitySet","map","sTargetKey","sort","a","b","fullContextPath","navigation","sNavName","targetRoute","detail","route","startsWith","sPattern","replace","regex","RegExp","match","_getRouteInformation","_getTargetInformation","_getComponentId","sOwnerId","sComponentId","substring","getTargetInformationFor","oComponentInstance","sTargetComponentId","_sOwnerId","getId","sCorrectTargetName","id","viewId","getLastSemanticMapping","oLastSemanticMapping","setLastSemanticMapping","oMapping","getHashFromRoute","context","routeName","parameterMapping","targetURLPromise","SemanticKeyHelper","getSemanticPath","prepareParameters","then","parameters","getURL","navigateTo","mParameterMapping","bPreserveHistory","delayedUsage","sTargetURLPromise","bIsStickyMode","ModelHelper","isStickySessionSupported","mParameters","targetUrl","navigateFunction","navToHash","sTargetRoute","oParametersPromise","getPath","aContextPathParts","split","aAllResolvedParameterPromises","sParameterKey","sParameterMappingExpression","oParsedExpression","BindingParser","complexParser","aParts","parts","aResolvedParameterPromises","oPathPart","aRelativeParts","path","aLocalParts","localContextPath","join","localContext","bindContext","getBoundContext","oMetaContext","getMetaContext","requestProperty","oValue","oPropertyInfo","getObject","sEdmType","$Type","ODataUtils","formatLiteral","all","aResolvedParameters","value","formatter","apply","key","aAllResolvedParameters","oParameters","oResolvedParameter","oError","error","_fireRouteMatchEvents","EditState","cleanProcessedEditState","navigateToContext","viewData","currentTargetInfo","routeParametersPromise","isStickyMode","targetPath","navigationInfo","oRouteDetail","isA","sTargetPath","_getPathFromContext","bExitOnNavigateBackToRoot","exitFromApp","createOnNavigateParameters","sLayout","_calculateLayout","oNavigationInfo","bTargetEditable","editable","bPersistOPScroll","persistOPScroll","bShowPlaceholder","showPlaceholder","reason","redirectedToNonDraft","updateFCLLevel","recreateContext","useContext","checkNoHashChange","sCurrentHashNoAppState","getHash","routeInfoByHash","getRouteInfoByHash","mEventParameters","routeInformation","sCurrentRouteName","routePattern","sCurrentRoutePattern","views","aCurrentViews","setFocusForced","forceFocus","transient","includes","navMode","sap","ui","require","Container","shellServiceHelper","getShellServices","parsedUrl","parseShellHash","document","location","hash","navigationService","getServiceAsync","href","getHref","semanticObject","action","applicationUrlBasedOnIframe","getInframeUrl","url","URL","encodeURI","window","origin","pathname","openWindow","oRouteInfo","oRoute","sLastTargetName","oTarget","messageHandling","removeUnboundTransitionMessages","oRouteParameters","navTo","preserveHistory","noPreservationCache","bNavigated","pop","navigateToRoute","sTargetRouteName","sTargetURL","isCurrentStateImpactedBy","sPath","test","sSemanticPath","technicalPath","semanticPath","_findPathToNavigate","_checkIfContextSupportsSemanticPath","metaModel","MetaModelConverter","getInvolvedDataModelObjects","targetObject","isDraftRoot","getProperty","entitySetName","getSemanticKeys","getHeaderContext","layout","findLayoutForHash","getRootViewController","calculateLayout","keepCurrentLayout","_beforeRouteMatched","bPlaceholderEnabled","Placeholder","isPlaceholderEnabled","oRootView","getRootControl","BusyLocker","lock","_isNavigationTriggeredByRouterProxy","history","state","feLevel","_onRouteMatched","oEvent","oAppStateHandler","getAppStateHandler","isLocked","unlock","getParameters","checkIfRouteChangedByIApp","NavigationReason","AppStateChanged","resetRouteChangedByIApp","checkRestoreHistoryWasTriggered","RestoreHistory","resetRestoreHistoryFlag","getParameter","restoreHistory","resolveRouteMatch","catch","attachRouteMatched","oData","fnFunction","oListener","attachEvent","detachEvent","attachAfterRouteMatched","detachAfterRouteMatched","initializeRouting","getEnvironmentCapabilities","getCapabilities","Collaboration","default","CollaborationHelper","__ui5_require_async","processAndExpandHash","bind","attachBeforeRouteMatched","resetEditState","manageStartupMode","onRestore","bIsIappState","getHashChanger","oStartupParameters","getStartupParameters","bHasStartUpParameters","sHash","preferredMode","toUpperCase","_manageCreateStartup","_manageDeepLinkStartup","_managedPreferredModeEdit","getDefaultCreateHash","AppStartupHelper","getContextPath","getCreateStartupHash","sNewHash","replaceHash","setStartupModeAutoCreate","setStartupModeCreate","getDeepLinkStartupHash","oDeepLink","sTechnicalPath","setStartupModeDeeplink","startupParameters","resultingHash","shouldEdit","verifyEditAnnotations","parameter","getOutbounds","getInterface","Service","RoutingServiceFactory","_ServiceFactory","_proto2","createInstance","oServiceContext","oRoutingService","ServiceFactory"],"sourceRoot":".","sources":["RoutingServiceFactory.ts"],"sourcesContent":["import type { EntitySet } from \"@sap-ux/vocabularies-types/Edm\";\nimport Log from \"sap/base/Log\";\n\nimport { defineUI5Class, event } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { StartupParameters } from \"sap/fe/core/AppComponent\";\nimport type { NavigationConfiguration } from \"sap/fe/core/TemplateComponent\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport Placeholder from \"sap/fe/core/controllerextensions/Placeholder\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport NavigationReason from \"sap/fe/core/controllerextensions/routing/NavigationReason\";\nimport type RouterProxy from \"sap/fe/core/controllerextensions/routing/RouterProxy\";\nimport AppStartupHelper from \"sap/fe/core/helpers/AppStartupHelper\";\nimport EditState from \"sap/fe/core/helpers/EditState\";\nimport { getRouteTargetNames } from \"sap/fe/core/helpers/ManifestHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport SemanticKeyHelper from \"sap/fe/core/helpers/SemanticKeyHelper\";\nimport BindingParser from \"sap/ui/base/BindingParser\";\nimport EventProvider from \"sap/ui/base/EventProvider\";\nimport type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type Component from \"sap/ui/core/Component\";\nimport type ComponentContainer from \"sap/ui/core/ComponentContainer\";\nimport type { ManifestOutboundEntry, RoutingConfiguration, RoutingTarget } from \"sap/ui/core/Manifest\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type { Route$MatchedEventParameters } from \"sap/ui/core/routing/Route\";\nimport type Router from \"sap/ui/core/routing/Router\";\nimport type { Router$RouteMatchedEvent } from \"sap/ui/core/routing/Router\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport ODataUtils from \"sap/ui/model/odata/v4/ODataUtils\";\nimport openWindow from \"sap/ui/util/openWindow\";\nimport type Container from \"sap/ushell/Container\";\nimport type Navigation from \"sap/ushell/services/Navigation\";\nimport type { ServiceContext } from \"types/metamodel_types\";\nimport * as MetaModelConverter from \"../converters/MetaModelConverter\";\n\ntype RoutingServiceSettings = {};\n@defineUI5Class(\"sap.fe.core.services.RoutingServiceEventing\")\nclass RoutingServiceEventing extends EventProvider {\n\t@event()\n\trouteMatched!: Function;\n\n\t@event()\n\tafterRouteMatched!: Function;\n}\n\nexport type RoutingEventParameters = Route$MatchedEventParameters & {\n\tnavigationInfo?: { reason?: NavigationReason };\n\trouteInformation?: unknown;\n\troutePattern?: string;\n\tconfig: { pattern?: string };\n};\n\nexport type CreateOnNavigateParameters =\n\t| { mode: \"Async\"; createContextPromise: Promise<Context> }\n\t| { mode: \"Deferred\"; listBinding: ODataListBinding; parentContext?: Context; data?: object };\n\nexport type RoutingNavigationInfo = {\n\tcreateOnNavigateParameters?: CreateOnNavigateParameters;\n\tbTargetEditable?: boolean;\n\tbPersistOPScroll?: boolean;\n\tbShowPlaceholder?: boolean;\n\tuseContext?: Context;\n\treason?: NavigationReason;\n\tredirectedToNonDraft?: string;\n\tbActionCreate?: boolean;\n};\n\nexport type RoutingNavigationParameters = {\n\tcheckNoHashChange?: boolean;\n\tcreateOnNavigateParameters?: CreateOnNavigateParameters;\n\teditable?: boolean;\n\ttransient?: boolean;\n\tpersistOPScroll?: boolean;\n\tFCLLevel?: number;\n\tupdateFCLLevel?: number;\n\tpreserveHistory?: boolean;\n\tnoPreservationCache?: boolean;\n\trecreateContext?: boolean;\n\tforceFocus?: boolean;\n\ttargetPath?: string;\n\tshowPlaceholder?: boolean;\n\treason?: NavigationReason;\n\tcallExtension?: boolean;\n\tlayout?: string;\n\tkeepCurrentLayout?: boolean;\n\tnavMode?: string;\n\tredirectedToNonDraft?: string;\n};\n\nexport type RoutingParameterMap = {\n\t[k: string]: unknown;\n};\n\nexport type SemanticMapping = {\n\tsemanticPath: string;\n\ttechnicalPath: string;\n};\ntype MinimalPageSetting = {\n\tcontextPath?: string;\n\tentitySet?: string;\n\tfullContextPath?: string;\n\tnavigation?: Record<string, NavigationConfiguration>;\n};\n\ntype InternalRouteDefinition = {\n\tname: string;\n\tpattern: string;\n\ttargets: string[];\n\trouteLevel: number;\n};\n\ntype ResolvedParameters = { key: string; value: unknown };\n\nexport class RoutingService extends Service<RoutingServiceSettings> {\n\toAppComponent!: AppComponent;\n\n\toModel!: ODataModel;\n\n\toMetaModel!: ODataMetaModel;\n\n\toRouter!: Router;\n\n\toRouterProxy!: RouterProxy;\n\n\teventProvider!: EventProvider;\n\n\tinitPromise!: Promise<RoutingService>;\n\n\toutbounds!: Record<string, ManifestOutboundEntry>;\n\n\t_mTargets!: Record<string, RoutingTarget>;\n\n\t_mRoutes!: Record<string, InternalRouteDefinition>;\n\n\toLastSemanticMapping?: SemanticMapping;\n\n\tbExitOnNavigateBackToRoot?: boolean;\n\n\tsCurrentRouteName?: string;\n\n\tsCurrentRoutePattern?: string;\n\n\taCurrentViews?: (View | ComponentContainer)[];\n\n\tnavigationInfoQueue: RoutingNavigationInfo[] = [];\n\n\tsContextPath!: string;\n\n\t_fnOnRouteMatched!: (ev: Router$RouteMatchedEvent) => void;\n\n\tenabled = false;\n\n\tinit(): void {\n\t\tconst oContext = this.getContext();\n\t\tif (oContext.scopeType === \"component\") {\n\t\t\tthis.oAppComponent = oContext.scopeObject;\n\t\t\tthis.oModel = this.oAppComponent.getModel();\n\t\t\tthis.oMetaModel = this.oModel?.getMetaModel();\n\t\t\tthis.oRouter = this.oAppComponent.getRouter();\n\t\t\tthis.oRouterProxy = this.oAppComponent.getRouterProxy();\n\t\t\tthis.eventProvider = new RoutingServiceEventing();\n\n\t\t\tconst oRoutingConfig = this.oAppComponent.getManifestEntry(\"sap.ui5\").routing;\n\t\t\tthis._parseRoutingConfiguration(oRoutingConfig!);\n\n\t\t\tconst oAppConfig = this.oAppComponent.getManifestEntry(\"sap.app\");\n\t\t\tthis.outbounds = oAppConfig.crossNavigation?.outbounds ?? {};\n\t\t}\n\n\t\tthis.initPromise = Promise.resolve(this);\n\t}\n\n\tbeforeExit(): void {\n\t\tthis.enabled = false;\n\t\tthis.oRouter.detachRouteMatched(this._fnOnRouteMatched, this);\n\t\tthis.eventProvider.fireEvent(\"routeMatched\", {});\n\t}\n\n\texit(): void {\n\t\tthis.eventProvider.destroy();\n\t}\n\n\t/**\n\t * Parse a manifest routing configuration for internal usage.\n\t * @param oRoutingConfig The routing configuration from the manifest\n\t */\n\t_parseRoutingConfiguration(oRoutingConfig: RoutingConfiguration): void {\n\t\tconst isFCL = oRoutingConfig?.config?.routerClass === \"sap.f.routing.Router\";\n\n\t\t// Information of targets\n\t\tthis._mTargets = {};\n\t\tif (oRoutingConfig?.targets) {\n\t\t\tfor (const sTargetName of Object.keys(oRoutingConfig.targets)) {\n\t\t\t\tthis._mTargets[sTargetName] = Object.assign({ targetName: sTargetName }, oRoutingConfig.targets[sTargetName]);\n\n\t\t\t\t// View level for FCL cases is calculated from the target pattern\n\t\t\t\tconst contextPattern = this._mTargets[sTargetName].contextPattern;\n\t\t\t\tif (contextPattern !== undefined) {\n\t\t\t\t\tthis._mTargets[sTargetName].viewLevel = this._getViewLevelFromPattern(contextPattern, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Information of routes\n\t\tthis._mRoutes = {};\n\t\tif (oRoutingConfig?.routes) {\n\t\t\tfor (const oRouteManifestInfo of oRoutingConfig.routes) {\n\t\t\t\tconst aRouteTargets = getRouteTargetNames(oRouteManifestInfo.target),\n\t\t\t\t\tsRouteName = oRouteManifestInfo.name,\n\t\t\t\t\tsRoutePattern = oRouteManifestInfo.pattern;\n\t\t\t\tif (!sRoutePattern) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Check route pattern: all patterns need to end with ':?query:', that we use for parameters\n\t\t\t\tif (sRoutePattern.length < 8 || sRoutePattern.indexOf(\":?query:\") !== sRoutePattern.length - 8) {\n\t\t\t\t\tLog.warning(`Pattern for route ${sRouteName} doesn't end with ':?query:' : ${sRoutePattern}`);\n\t\t\t\t}\n\t\t\t\tconst iRouteLevel = this._getViewLevelFromPattern(sRoutePattern, 0);\n\t\t\t\tthis._mRoutes[sRouteName] = {\n\t\t\t\t\tname: sRouteName,\n\t\t\t\t\tpattern: sRoutePattern,\n\t\t\t\t\ttargets: aRouteTargets,\n\t\t\t\t\trouteLevel: iRouteLevel\n\t\t\t\t};\n\n\t\t\t\t// Add the parent targets in the list of targets for the route\n\t\t\t\tfor (const item of aRouteTargets) {\n\t\t\t\t\tconst sParentTargetName = this._mTargets[item].parent;\n\t\t\t\t\tif (sParentTargetName) {\n\t\t\t\t\t\taRouteTargets.push(sParentTargetName);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!isFCL) {\n\t\t\t\t\t// View level for non-FCL cases is calculated from the route pattern\n\t\t\t\t\tconst viewLevel = this._mTargets[aRouteTargets[0]].viewLevel;\n\t\t\t\t\tif (viewLevel === undefined || viewLevel < iRouteLevel) {\n\t\t\t\t\t\t// There are cases when different routes point to the same target. We take the\n\t\t\t\t\t\t// largest viewLevel in that case.\n\t\t\t\t\t\tthis._mTargets[aRouteTargets[0]].viewLevel = iRouteLevel;\n\t\t\t\t\t}\n\n\t\t\t\t\t// FCL level for non-FCL cases is equal to -1\n\t\t\t\t\tthis._mTargets[aRouteTargets[0]].FCLLevel = -1;\n\t\t\t\t} else if (aRouteTargets.length === 1 && this._mTargets[aRouteTargets[0]].controlAggregation !== \"beginColumnPages\") {\n\t\t\t\t\t// We're in the case where there's only 1 target for the route, and it's not in the first column\n\t\t\t\t\t// --> this is a fullscreen column after all columns in the FCL have been used\n\t\t\t\t\tthis._mTargets[aRouteTargets[0]].FCLLevel = 3;\n\t\t\t\t} else {\n\t\t\t\t\t// Other FCL cases\n\t\t\t\t\taRouteTargets.forEach((sTargetName) => {\n\t\t\t\t\t\tswitch (this._mTargets[sTargetName].controlAggregation) {\n\t\t\t\t\t\t\tcase \"beginColumnPages\":\n\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].FCLLevel = 0;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase \"midColumnPages\":\n\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].FCLLevel = 1;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].FCLLevel = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Propagate viewLevel, contextPattern, FCLLevel and controlAggregation to parent targets\n\t\tObject.keys(this._mTargets).forEach((sTargetName: string) => {\n\t\t\tlet sParentTargetName = this._mTargets[sTargetName].parent;\n\t\t\twhile (sParentTargetName) {\n\t\t\t\tthis._mTargets[sParentTargetName].viewLevel =\n\t\t\t\t\tthis._mTargets[sParentTargetName].viewLevel || this._mTargets[sTargetName].viewLevel;\n\t\t\t\tthis._mTargets[sParentTargetName].contextPattern =\n\t\t\t\t\tthis._mTargets[sParentTargetName].contextPattern || this._mTargets[sTargetName].contextPattern;\n\t\t\t\tthis._mTargets[sParentTargetName].FCLLevel =\n\t\t\t\t\tthis._mTargets[sParentTargetName].FCLLevel || this._mTargets[sTargetName].FCLLevel;\n\t\t\t\tthis._mTargets[sParentTargetName].controlAggregation =\n\t\t\t\t\tthis._mTargets[sParentTargetName].controlAggregation || this._mTargets[sTargetName].controlAggregation;\n\t\t\t\tsTargetName = sParentTargetName;\n\t\t\t\tsParentTargetName = this._mTargets[sTargetName].parent;\n\t\t\t}\n\t\t});\n\n\t\t// Determine the root entity for the app\n\t\tconst aLevel0RouteNames = [];\n\t\tconst aLevel1RouteNames = [];\n\t\tlet sDefaultRouteName;\n\n\t\tfor (const sName in this._mRoutes) {\n\t\t\tconst iLevel = this._mRoutes[sName].routeLevel;\n\t\t\tif (iLevel === 0) {\n\t\t\t\taLevel0RouteNames.push(sName);\n\t\t\t} else if (iLevel === 1) {\n\t\t\t\taLevel1RouteNames.push(sName);\n\t\t\t}\n\t\t}\n\n\t\tif (aLevel0RouteNames.length === 1) {\n\t\t\tsDefaultRouteName = aLevel0RouteNames[0];\n\t\t} else if (aLevel1RouteNames.length === 1) {\n\t\t\tsDefaultRouteName = aLevel1RouteNames[0];\n\t\t}\n\n\t\tif (sDefaultRouteName) {\n\t\t\tconst sDefaultTargetName = this._mRoutes[sDefaultRouteName].targets.slice(-1)[0];\n\t\t\tthis.sContextPath = \"\";\n\t\t\tconst oSettings = this._mTargets[sDefaultTargetName].options?.settings as MinimalPageSetting | undefined;\n\t\t\tif (oSettings) {\n\t\t\t\tthis.sContextPath = oSettings.contextPath || `/${oSettings.entitySet}`;\n\t\t\t}\n\t\t\tif (!this.sContextPath) {\n\t\t\t\tLog.warning(\n\t\t\t\t\t`Cannot determine default contextPath: contextPath or entitySet missing in default target: ${sDefaultTargetName}`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tLog.warning(\"Cannot determine default contextPath: no default route found.\");\n\t\t}\n\n\t\t// We need to establish the correct path to the different pages, including the navigation properties\n\t\tObject.keys(this._mTargets)\n\t\t\t.map((sTargetKey: string) => {\n\t\t\t\treturn this._mTargets[sTargetKey];\n\t\t\t})\n\t\t\t.sort((a: RoutingTarget, b: RoutingTarget) => {\n\t\t\t\treturn a.viewLevel !== undefined && b.viewLevel !== undefined && a.viewLevel < b.viewLevel ? -1 : 1;\n\t\t\t})\n\t\t\t.forEach((target: RoutingTarget) => {\n\t\t\t\t// After sorting the targets per level we can then go through their navigation object and update the paths accordingly.\n\t\t\t\tif (target.options) {\n\t\t\t\t\tconst settings = target.options.settings as MinimalPageSetting;\n\t\t\t\t\tconst sContextPath = settings.contextPath || (settings.entitySet ? `/${settings.entitySet}` : \"\");\n\t\t\t\t\tif (!settings.fullContextPath && sContextPath) {\n\t\t\t\t\t\tsettings.fullContextPath = `${sContextPath}/`;\n\t\t\t\t\t}\n\t\t\t\t\tObject.keys(settings.navigation || {}).forEach((sNavName: string) => {\n\t\t\t\t\t\t// Check if it's a navigation property\n\t\t\t\t\t\tconst targetRoute = this._mRoutes[settings.navigation![sNavName].detail?.route];\n\t\t\t\t\t\tif (targetRoute && targetRoute.targets) {\n\t\t\t\t\t\t\ttargetRoute.targets.forEach((sTargetName: string) => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].options?.settings &&\n\t\t\t\t\t\t\t\t\t!this._mTargets[sTargetName].options?.settings?.fullContextPath\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tif (this._mTargets[sTargetName].options!.settings!.contextPath) {\n\t\t\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].options!.settings!.fullContextPath =\n\t\t\t\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].options!.settings!.contextPath + \"/\";\n\t\t\t\t\t\t\t\t\t} else if (target.viewLevel === 0) {\n\t\t\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].options!.settings!.fullContextPath = `${\n\t\t\t\t\t\t\t\t\t\t\t(sNavName.startsWith(\"/\") ? \"\" : \"/\") + sNavName\n\t\t\t\t\t\t\t\t\t\t}/`;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis._mTargets[sTargetName].options!.settings!.fullContextPath = `${\n\t\t\t\t\t\t\t\t\t\t\tsettings.fullContextPath + sNavName\n\t\t\t\t\t\t\t\t\t\t}/`;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Calculates a view level from a pattern by counting the number of segments.\n\t * @param sPattern The pattern\n\t * @param viewLevel The current level of view\n\t * @returns The level\n\t */\n\t_getViewLevelFromPattern(sPattern: string, viewLevel: number): number {\n\t\tsPattern = sPattern.replace(\":?query:\", \"\");\n\t\tconst regex = new RegExp(\"/[^/]*$\");\n\t\tif (sPattern && sPattern[0] !== \"/\" && sPattern[0] !== \"?\") {\n\t\t\tsPattern = `/${sPattern}`;\n\t\t}\n\t\tif (sPattern.length) {\n\t\t\tsPattern = sPattern.replace(regex, \"\");\n\t\t\tif (this.oRouter.match(sPattern) || sPattern === \"\") {\n\t\t\t\treturn this._getViewLevelFromPattern(sPattern, ++viewLevel);\n\t\t\t} else {\n\t\t\t\treturn this._getViewLevelFromPattern(sPattern, viewLevel);\n\t\t\t}\n\t\t} else {\n\t\t\treturn viewLevel;\n\t\t}\n\t}\n\n\t_getRouteInformation(sRouteName?: string): InternalRouteDefinition | undefined {\n\t\tif (sRouteName === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._mRoutes[sRouteName];\n\t}\n\n\t_getTargetInformation(sTargetName?: string): RoutingTarget | undefined {\n\t\tif (sTargetName === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._mTargets[sTargetName];\n\t}\n\n\t_getComponentId(sOwnerId: string, sComponentId: string): string {\n\t\tif (sComponentId.indexOf(`${sOwnerId}---`) === 0) {\n\t\t\treturn sComponentId.substring(sOwnerId.length + 3);\n\t\t}\n\t\treturn sComponentId;\n\t}\n\n\t/**\n\t * Get target information for a given component.\n\t * @param oComponentInstance Instance of the component\n\t * @param oComponentInstance._sOwnerId\n\t * @param oComponentInstance.getId\n\t * @returns The configuration for the target\n\t */\n\tgetTargetInformationFor(oComponentInstance: Component | View): RoutingTarget | undefined {\n\t\tconst sTargetComponentId = this._getComponentId(\n\t\t\t(oComponentInstance as unknown as { _sOwnerId: string })._sOwnerId,\n\t\t\toComponentInstance.getId()\n\t\t);\n\t\tlet sCorrectTargetName: string | undefined;\n\t\tObject.keys(this._mTargets).forEach((sTargetName: string) => {\n\t\t\tif (this._mTargets[sTargetName].id === sTargetComponentId || this._mTargets[sTargetName].viewId === sTargetComponentId) {\n\t\t\t\tsCorrectTargetName = sTargetName;\n\t\t\t}\n\t\t});\n\t\treturn this._getTargetInformation(sCorrectTargetName);\n\t}\n\n\tgetLastSemanticMapping(): SemanticMapping | undefined {\n\t\treturn this.oLastSemanticMapping;\n\t}\n\n\tsetLastSemanticMapping(oMapping?: SemanticMapping): void {\n\t\tthis.oLastSemanticMapping = oMapping;\n\t}\n\n\tasync getHashFromRoute(context: Context, routeName: string | null, parameterMapping?: unknown): Promise<string> {\n\t\tif (!this.enabled) {\n\t\t\treturn Promise.resolve(\"\");\n\t\t}\n\t\tlet targetURLPromise: Promise<string | undefined>;\n\t\tif (!parameterMapping) {\n\t\t\t// if there is no parameter mapping define this mean we rely entirely on the binding context path\n\t\t\ttargetURLPromise = Promise.resolve(SemanticKeyHelper.getSemanticPath(context));\n\t\t} else {\n\t\t\ttargetURLPromise = this.prepareParameters(parameterMapping as RoutingParameterMap, routeName, context).then(\n\t\t\t\t(parameters: object | undefined) => {\n\t\t\t\t\treturn this.oRouter.getURL(routeName!, parameters);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn (await targetURLPromise) as string;\n\t}\n\n\tasync navigateTo(\n\t\toContext: Context,\n\t\tsRouteName: string | null,\n\t\tmParameterMapping: unknown,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: false\n\t): Promise<void>;\n\n\tasync navigateTo(\n\t\toContext: Context,\n\t\tsRouteName: string | null,\n\t\tmParameterMapping: unknown,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: true\n\t): Promise<() => void>;\n\n\tasync navigateTo(\n\t\toContext: Context,\n\t\tsRouteName: string | null,\n\t\tmParameterMapping: unknown,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: boolean\n\t): Promise<(() => void) | void>;\n\n\tasync navigateTo(\n\t\toContext: Context,\n\t\tsRouteName: string | null,\n\t\tmParameterMapping: unknown,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: boolean\n\t): Promise<(() => void) | void> {\n\t\tif (!this.enabled) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tlet sTargetURLPromise, bIsStickyMode: boolean;\n\t\tif (oContext.getModel() && oContext.getModel().getMetaModel && oContext.getModel().getMetaModel()) {\n\t\t\tbIsStickyMode = ModelHelper.isStickySessionSupported(oContext.getModel().getMetaModel());\n\t\t}\n\t\tif (!mParameterMapping) {\n\t\t\t// if there is no parameter mapping define this mean we rely entirely on the binding context path\n\t\t\tsTargetURLPromise = Promise.resolve(SemanticKeyHelper.getSemanticPath(oContext));\n\t\t} else {\n\t\t\tsTargetURLPromise = this.prepareParameters(mParameterMapping as RoutingParameterMap, sRouteName, oContext).then(\n\t\t\t\t(mParameters: object | undefined) => {\n\t\t\t\t\treturn this.oRouter.getURL(sRouteName!, mParameters);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tconst targetUrl = await sTargetURLPromise;\n\t\tconst navigateFunction = (): void => {\n\t\t\tthis.oRouterProxy.navToHash(targetUrl!, bPreserveHistory, false, false, !bIsStickyMode);\n\t\t};\n\t\tif (delayedUsage === true) {\n\t\t\treturn navigateFunction; // wrong but somehow the types are annoying\n\t\t} else {\n\t\t\treturn navigateFunction();\n\t\t}\n\t}\n\n\t/**\n\t * Method to return a map of routing target parameters where the binding syntax is resolved to the current model.\n\t * @param mParameters Parameters map in the format [k: string] : ComplexBindingSyntax\n\t * @param sTargetRoute Name of the target route\n\t * @param oContext The instance of the binding context\n\t * @returns A promise which resolves to the routing target parameters\n\t */\n\tasync prepareParameters(mParameters: RoutingParameterMap, sTargetRoute: string | null, oContext: Context): Promise<object> {\n\t\tlet oParametersPromise;\n\t\ttry {\n\t\t\tconst sContextPath = oContext.getPath();\n\t\t\tconst oMetaModel: ODataMetaModel = oContext.getModel().getMetaModel();\n\t\t\tconst aContextPathParts = sContextPath.split(\"/\");\n\t\t\tconst aAllResolvedParameterPromises = Object.keys(mParameters).map(async (sParameterKey: string) => {\n\t\t\t\tconst sParameterMappingExpression = mParameters[sParameterKey];\n\t\t\t\t// We assume the defined parameters will be compatible with a binding expression\n\t\t\t\tconst oParsedExpression = BindingParser.complexParser(sParameterMappingExpression);\n\t\t\t\tconst aParts = oParsedExpression.parts || [oParsedExpression];\n\t\t\t\tconst aResolvedParameterPromises = aParts.map(async function (oPathPart: PropertyBindingInfo) {\n\t\t\t\t\tconst aRelativeParts = oPathPart.path.split(\"../\");\n\t\t\t\t\t// We go up the current context path as many times as necessary\n\t\t\t\t\tconst aLocalParts = aContextPathParts.slice(0, aContextPathParts.length - aRelativeParts.length + 1);\n\t\t\t\t\tconst localContextPath = aLocalParts.join(\"/\");\n\t\t\t\t\tconst localContext =\n\t\t\t\t\t\tlocalContextPath === oContext.getPath()\n\t\t\t\t\t\t\t? oContext\n\t\t\t\t\t\t\t: oContext.getModel().bindContext(localContextPath).getBoundContext();\n\n\t\t\t\t\tconst oMetaContext = oMetaModel.getMetaContext(localContextPath + \"/\" + aRelativeParts[aRelativeParts.length - 1]);\n\t\t\t\t\treturn localContext.requestProperty(aRelativeParts[aRelativeParts.length - 1]).then(function (oValue) {\n\t\t\t\t\t\tconst oPropertyInfo = oMetaContext.getObject();\n\t\t\t\t\t\tconst sEdmType = oPropertyInfo.$Type;\n\t\t\t\t\t\treturn ODataUtils.formatLiteral(oValue, sEdmType);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all(aResolvedParameterPromises).then((aResolvedParameters: PropertyBindingInfo) => {\n\t\t\t\t\tconst value = oParsedExpression.formatter\n\t\t\t\t\t\t? oParsedExpression.formatter.apply(this, aResolvedParameters)\n\t\t\t\t\t\t: aResolvedParameters.join(\"\");\n\t\t\t\t\treturn { key: sParameterKey, value: value };\n\t\t\t\t});\n\t\t\t});\n\n\t\t\toParametersPromise = Promise.all(aAllResolvedParameterPromises).then(function (aAllResolvedParameters: ResolvedParameters[]) {\n\t\t\t\tconst oParameters: Record<string, unknown> = {};\n\t\t\t\taAllResolvedParameters.forEach(function (oResolvedParameter: ResolvedParameters) {\n\t\t\t\t\toParameters[oResolvedParameter.key] = oResolvedParameter.value;\n\t\t\t\t});\n\t\t\t\treturn oParameters;\n\t\t\t});\n\t\t} catch (oError) {\n\t\t\tLog.error(`Could not parse the parameters for the navigation to route ${sTargetRoute}`);\n\t\t\toParametersPromise = Promise.resolve({});\n\t\t}\n\t\treturn oParametersPromise;\n\t}\n\n\t_fireRouteMatchEvents(mParameters: Route$MatchedEventParameters): void {\n\t\tthis.eventProvider.fireEvent(\"routeMatched\", mParameters);\n\t\tthis.eventProvider.fireEvent(\"afterRouteMatched\", mParameters);\n\n\t\tEditState.cleanProcessedEditState(); // Reset UI state when all bindings have been refreshed\n\t}\n\n\t/**\n\t * Navigates to a context.\n\t * @param context The Context to be navigated to, or the list binding for creation (deferred creation)\n\t * @param [parameters] Optional, map containing the following attributes:\n\t * @param [parameters.checkNoHashChange] Navigate to the context without changing the URL\n\t * @param [parameters.asyncContext] The context is created async, navigate to (...) and\n\t *                    wait for Promise to be resolved and then navigate into the context\n\t * @param [parameters.bDeferredContext] The context shall be created deferred at the target page\n\t * @param [parameters.editable] The target page shall be immediately in the edit mode to avoid flickering\n\t * @param [parameters.bPersistOPScroll] The bPersistOPScroll will be used for scrolling to first tab\n\t * @param [parameters.updateFCLLevel] `+1` if we add a column in FCL, `-1` to remove a column, 0 to stay on the same column\n\t * @param [parameters.noPreservationCache] Do navigation without taking into account the preserved cache mechanism\n\t * @param [parameters.bRecreateContext] Force re-creation of the context instead of using the one passed as parameter\n\t * @param [parameters.bForceFocus] Forces focus selection after navigation\n\t * @param [viewData] View data\n\t * @param [viewData.navigation]\n\t * @param [currentTargetInfo] The target information from which the navigation is triggered\n\t * @param [currentTargetInfo.name]\n\t * @returns Promise which is resolved once the navigation is triggered\n\t * @final\n\t */\n\tasync navigateToContext(\n\t\tcontext: Context | ODataListBinding,\n\t\tparameters: RoutingNavigationParameters = {},\n\t\tviewData?: { navigation?: object },\n\t\tcurrentTargetInfo?: { name: string }\n\t): Promise<boolean> {\n\t\tif (!this.enabled) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tlet targetRoute = \"\";\n\t\tlet routeParametersPromise: Promise<object> | undefined;\n\t\tconst isStickyMode = ModelHelper.isStickySessionSupported(this.oMetaModel);\n\n\t\t// Manage parameter mapping\n\t\tif (parameters?.targetPath && viewData?.navigation) {\n\t\t\tconst navigationInfo = viewData.navigation as Record<string, { detail: { route: string; parameters: object } }>;\n\t\t\tconst oRouteDetail = navigationInfo[parameters.targetPath].detail;\n\t\t\ttargetRoute = oRouteDetail.route;\n\n\t\t\tif (oRouteDetail.parameters && context.isA<Context>(\"sap.ui.model.odata.v4.Context\")) {\n\t\t\t\trouteParametersPromise = this.prepareParameters(\n\t\t\t\t\toRouteDetail.parameters as unknown as RoutingParameterMap,\n\t\t\t\t\ttargetRoute,\n\t\t\t\t\tcontext\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet sTargetPath = this._getPathFromContext(context, parameters);\n\t\t// If the path is empty, we're supposed to navigate to the first page of the app\n\t\t// Check if we need to exit from the app instead\n\t\tif (sTargetPath.length === 0 && this.bExitOnNavigateBackToRoot) {\n\t\t\tthis.oRouterProxy.exitFromApp();\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\t// If the navigation goes with a creation, we add (...) to the path (expecting context is an ODataListBinding)\n\t\tif (parameters?.createOnNavigateParameters) {\n\t\t\tsTargetPath += \"(...)\";\n\t\t}\n\n\t\t// Add layout parameter if needed\n\t\tconst sLayout = this._calculateLayout(sTargetPath, parameters);\n\t\tif (sLayout) {\n\t\t\tsTargetPath += `?layout=${sLayout}`;\n\t\t}\n\n\t\t// Navigation parameters for later usage\n\t\tconst oNavigationInfo: RoutingNavigationInfo = {\n\t\t\tcreateOnNavigateParameters: parameters.createOnNavigateParameters,\n\t\t\tbTargetEditable: parameters?.editable,\n\t\t\tbPersistOPScroll: parameters?.persistOPScroll,\n\t\t\tbShowPlaceholder: parameters?.showPlaceholder !== undefined ? parameters?.showPlaceholder : true,\n\t\t\treason: parameters?.reason,\n\t\t\tredirectedToNonDraft: parameters.redirectedToNonDraft\n\t\t};\n\n\t\tif (parameters?.updateFCLLevel !== -1 && parameters?.recreateContext !== true) {\n\t\t\tif (context.isA<Context>(\"sap.ui.model.odata.v4.Context\")) {\n\t\t\t\toNavigationInfo.useContext = context;\n\t\t\t}\n\t\t}\n\n\t\tif (parameters?.checkNoHashChange) {\n\t\t\t// Check if the new hash is different from the current one\n\t\t\tconst sCurrentHashNoAppState = this.oRouterProxy.getHash().replace(/[&?]{1}sap-iapp-state=[A-Z0-9]+/, \"\");\n\t\t\tif (sTargetPath === sCurrentHashNoAppState) {\n\t\t\t\t// The hash doesn't change, but we fire the routeMatch event to trigger page refresh / binding\n\t\t\t\tconst routeInfoByHash = this.oRouter.getRouteInfoByHash(this.oRouterProxy.getHash());\n\t\t\t\tlet mEventParameters: RoutingEventParameters = { config: {} };\n\t\t\t\tif (routeInfoByHash) {\n\t\t\t\t\tmEventParameters = { ...routeInfoByHash, config: {} };\n\t\t\t\t\tmEventParameters.navigationInfo = oNavigationInfo;\n\t\t\t\t\tmEventParameters.routeInformation = this._getRouteInformation(this.sCurrentRouteName);\n\t\t\t\t\tmEventParameters.routePattern = this.sCurrentRoutePattern;\n\t\t\t\t\tmEventParameters.views = this.aCurrentViews;\n\t\t\t\t}\n\n\t\t\t\tthis.oRouterProxy.setFocusForced(!!parameters.forceFocus);\n\n\t\t\t\tthis._fireRouteMatchEvents(mEventParameters);\n\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t}\n\n\t\tif (parameters?.transient && !!parameters.editable && !sTargetPath.includes(\"(...)\")) {\n\t\t\tif (sTargetPath.includes(\"?\")) {\n\t\t\t\tsTargetPath += \"&i-action=create\";\n\t\t\t} else {\n\t\t\t\tsTargetPath += \"?i-action=create\";\n\t\t\t}\n\t\t}\n\n\t\tif (parameters.navMode === \"openInNewTab\") {\n\t\t\t// Navigate to new tab/ window\n\t\t\tsap.ui.require([\"sap/ushell/Container\"], async (Container: Container) => {\n\t\t\t\tconst shellServiceHelper = this.oAppComponent.getShellServices();\n\t\t\t\tconst parsedUrl = shellServiceHelper.parseShellHash(document.location.hash);\n\t\t\t\tconst navigationService = (await Container.getServiceAsync(\"Navigation\")) as Navigation;\n\t\t\t\tconst href = await navigationService.getHref({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tsemanticObject: parsedUrl.semanticObject,\n\t\t\t\t\t\taction: parsedUrl.action\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst applicationUrlBasedOnIframe = await shellServiceHelper.getInframeUrl();\n\t\t\t\tlet url, targetUrl: string;\n\t\t\t\tif (applicationUrlBasedOnIframe) {\n\t\t\t\t\turl = new URL(applicationUrlBasedOnIframe);\n\t\t\t\t\ttargetUrl = applicationUrlBasedOnIframe.replace(url.hash, `${href}&/${encodeURI(sTargetPath)}`);\n\t\t\t\t} else {\n\t\t\t\t\turl = new URL(window.location.href);\n\t\t\t\t\ttargetUrl = `${url.origin}${url.pathname}${href}&/${encodeURI(sTargetPath)}`;\n\t\t\t\t}\n\t\t\t\topenWindow(targetUrl);\n\t\t\t});\n\t\t\treturn Promise.resolve(true);\n\t\t} else {\n\t\t\t// Clear unbound messages upon navigating from LR to OP\n\t\t\t// This is to ensure stale error messages from LR are not shown to the user after navigation to OP.\n\t\t\tif (currentTargetInfo?.name === \"sap.fe.templates.ListReport\") {\n\t\t\t\tconst oRouteInfo = this.oRouter.getRouteInfoByHash(sTargetPath);\n\t\t\t\tif (oRouteInfo) {\n\t\t\t\t\tconst oRoute = this._getRouteInformation(oRouteInfo.name);\n\t\t\t\t\tif (oRoute && oRoute.targets && oRoute.targets.length > 0) {\n\t\t\t\t\t\tconst sLastTargetName = oRoute.targets[oRoute.targets.length - 1];\n\t\t\t\t\t\tconst oTarget = this._getTargetInformation(sLastTargetName);\n\t\t\t\t\t\tif (oTarget && oTarget.name === \"sap.fe.templates.ObjectPage\") {\n\t\t\t\t\t\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the navigation parameters in the queue\n\t\t\tthis.navigationInfoQueue.push(oNavigationInfo);\n\n\t\t\tif (targetRoute && routeParametersPromise) {\n\t\t\t\treturn routeParametersPromise.then((oRouteParameters: object) => {\n\t\t\t\t\tObject.assign(oRouteParameters, { bIsStickyMode: isStickyMode });\n\t\t\t\t\tthis.oRouter.navTo(targetRoute, oRouteParameters);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.oRouterProxy\n\t\t\t\t.navToHash(\n\t\t\t\t\tsTargetPath,\n\t\t\t\t\t!!parameters.preserveHistory,\n\t\t\t\t\tparameters?.noPreservationCache,\n\t\t\t\t\tparameters?.forceFocus,\n\t\t\t\t\t!isStickyMode\n\t\t\t\t)\n\t\t\t\t.then((bNavigated) => {\n\t\t\t\t\tif (!bNavigated) {\n\t\t\t\t\t\t// The navigation did not happen --> remove the navigation parameters from the queue as they shouldn't be used\n\t\t\t\t\t\tthis.navigationInfoQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\treturn bNavigated;\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to a route.\n\t * @param sTargetRouteName Name of the target route\n\t * @param [oRouteParameters] Parameters to be used with route to create the target hash\n\t * @param oRouteParameters.bIsStickyMode\n\t * @returns Promise that is resolved when the navigation is finalized\n\t * @final\n\t */\n\tasync navigateToRoute(sTargetRouteName: string, oRouteParameters?: { bIsStickyMode?: boolean }): Promise<boolean> {\n\t\tif (!this.enabled) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tthis.setLastSemanticMapping(undefined);\n\t\tconst sTargetURL = this.oRouter.getURL(sTargetRouteName, oRouteParameters);\n\t\treturn this.oRouterProxy.navToHash(sTargetURL!, undefined, undefined, undefined, !oRouteParameters?.bIsStickyMode);\n\t}\n\n\t/**\n\t * Checks if one of the current views on the screen is bound to a given context.\n\t * @param oContext The context\n\t * @returns `true` or `false` if the current state is impacted or not\n\t */\n\tisCurrentStateImpactedBy(oContext: Context): boolean {\n\t\tconst sPath = oContext.getPath();\n\n\t\t// First, check with the technical path. We have to try it, because for level > 1, we\n\t\t// uses technical keys even if Semantic keys are enabled\n\t\tif (this.oRouterProxy.isCurrentStateImpactedBy(sPath)) {\n\t\t\treturn true;\n\t\t} else if (/^[^()]+\\([^()]+\\)$/.test(sPath)) {\n\t\t\t// If the current path can be semantic (i.e. is like xxx(yyy))\n\t\t\t// check with the semantic path if we can find it\n\t\t\tlet sSemanticPath;\n\t\t\tif (this.oLastSemanticMapping && this.oLastSemanticMapping.technicalPath === sPath) {\n\t\t\t\t// We have already resolved this semantic path\n\t\t\t\tsSemanticPath = this.oLastSemanticMapping.semanticPath;\n\t\t\t} else {\n\t\t\t\tsSemanticPath = SemanticKeyHelper.getSemanticPath(oContext)!;\n\t\t\t}\n\n\t\t\treturn sSemanticPath != sPath ? this.oRouterProxy.isCurrentStateImpactedBy(sSemanticPath) : false;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t_findPathToNavigate(sPath: string): string {\n\t\tconst regex = new RegExp(\"/[^/]*$\");\n\t\tsPath = sPath.replace(regex, \"\");\n\t\tif (this.oRouter.match(sPath) || sPath === \"\") {\n\t\t\treturn sPath;\n\t\t} else {\n\t\t\treturn this._findPathToNavigate(sPath);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a semantic path shall be used to navigate to a given context.\n\t * @param context The context to navigate to\n\t * @returns True if semantic path shall be sued, false otherwise\n\t */\n\t_checkIfContextSupportsSemanticPath(context: Context): boolean {\n\t\t// First, check if this is a level-1 object (path = /aaa(bbb))\n\t\tif (!/^\\/[^(]+\\([^)]+\\)$/.test(context.getPath())) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Then check if the entity is a draft root\n\t\tconst metaModel = context.getModel().getMetaModel();\n\t\tconst entitySet = MetaModelConverter.getInvolvedDataModelObjects(metaModel.getMetaContext(context.getPath()))\n\t\t\t.targetObject as EntitySet;\n\n\t\tif (!ModelHelper.isDraftRoot(entitySet)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We don't support semantic path for newly created objects\n\t\tif (context.getProperty(\"IsActiveEntity\") === false && context.getProperty(\"HasActiveEntity\") === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Finally, check if the entity has semantic keys\n\t\tconst entitySetName = entitySet.name;\n\t\treturn SemanticKeyHelper.getSemanticKeys(metaModel, entitySetName) !== undefined;\n\t}\n\n\t_getPathFromContext(context: Context | ODataListBinding, parameters: RoutingNavigationParameters): string {\n\t\tlet sPath = \"\";\n\n\t\tif (context.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\tsPath = context.getHeaderContext()?.getPath() ?? \"\";\n\t\t} else {\n\t\t\tsPath = context.getPath();\n\n\t\t\tif (parameters.updateFCLLevel === -1) {\n\t\t\t\t// When navigating back from a context, we need to remove the last component of the path\n\t\t\t\tsPath = this._findPathToNavigate(sPath);\n\n\t\t\t\t// Check if we're navigating back to a semantic path that was previously resolved\n\t\t\t\tif (this.oLastSemanticMapping?.technicalPath === sPath) {\n\t\t\t\t\tsPath = this.oLastSemanticMapping.semanticPath;\n\t\t\t\t}\n\t\t\t} else if (this._checkIfContextSupportsSemanticPath(context)) {\n\t\t\t\t// We check if we have to use a semantic path\n\t\t\t\tconst sSemanticPath = SemanticKeyHelper.getSemanticPath(context, true);\n\n\t\t\t\tif (!sSemanticPath) {\n\t\t\t\t\t// We were not able to build the semantic path --> Use the technical path and\n\t\t\t\t\t// clear the previous mapping, otherwise the old mapping is used in EditFlow#updateDocument\n\t\t\t\t\t// and it leads to unwanted page reloads\n\t\t\t\t\tthis.setLastSemanticMapping(undefined);\n\t\t\t\t} else if (sSemanticPath !== sPath) {\n\t\t\t\t\t// Store the mapping technical <-> semantic path to avoid recalculating it later\n\t\t\t\t\t// and use the semantic path instead of the technical one\n\t\t\t\t\tthis.setLastSemanticMapping({ technicalPath: sPath, semanticPath: sSemanticPath });\n\t\t\t\t\tsPath = sSemanticPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// remove extra '/' at the beginning of path\n\t\tif (sPath[0] === \"/\") {\n\t\t\tsPath = sPath.substring(1);\n\t\t}\n\n\t\treturn sPath;\n\t}\n\n\t_calculateLayout(hash: string, parameters: RoutingNavigationParameters): string {\n\t\t// Open in full screen mode when opening in new tab/ window\n\t\tif (parameters.navMode === \"openInNewTab\" && parameters.FCLLevel !== -1) {\n\t\t\treturn parameters.FCLLevel === 0 ? \"MidColumnFullScreen\" : \"EndColumnFullScreen\";\n\t\t}\n\t\tlet FCLLevel = parameters.FCLLevel ?? 0;\n\t\tif (parameters.updateFCLLevel) {\n\t\t\tFCLLevel += parameters.updateFCLLevel;\n\t\t\tif (FCLLevel < 0) {\n\t\t\t\tFCLLevel = 0;\n\t\t\t}\n\t\t}\n\n\t\t// When navigating back, try to find the layout in the navigation history if it's not provided as parameter\n\t\t// (layout calculation is not handled properly by the FlexibleColumnLayoutSemanticHelper in this case)\n\t\tif (parameters.updateFCLLevel !== undefined && parameters.updateFCLLevel < 0 && !parameters.layout) {\n\t\t\tparameters.layout = this.oRouterProxy.findLayoutForHash(hash);\n\t\t}\n\n\t\treturn this.oAppComponent.getRootViewController().calculateLayout(FCLLevel, hash, parameters.layout, parameters.keepCurrentLayout);\n\t}\n\n\t/**\n\t * Event handler before a route is matched.\n\t * Displays a busy indicator.\n\t *\n\t */\n\t_beforeRouteMatched(/*oEvent: Event*/): void {\n\t\tconst bPlaceholderEnabled = new Placeholder().isPlaceholderEnabled();\n\t\tif (!bPlaceholderEnabled) {\n\t\t\tconst oRootView = this.oAppComponent.getRootControl();\n\t\t\tBusyLocker.lock(oRootView);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the current navigation has been triggered by the RouterProxy.\n\t * @returns True if the current navigation has been triggered by the RouterProxy.\n\t */\n\t_isNavigationTriggeredByRouterProxy(): boolean {\n\t\t// The RouterProxy sets a 'feLevel' property on the history.state object\n\t\treturn history.state?.feLevel !== undefined;\n\t}\n\n\t/**\n\t * Event handler when a route is matched.\n\t * Hides the busy indicator and fires its own 'routematched' event.\n\t * @param oEvent The event\n\t */\n\t_onRouteMatched(oEvent: Router$RouteMatchedEvent): void {\n\t\tconst oAppStateHandler = this.oAppComponent.getAppStateHandler(),\n\t\t\toRootView = this.oAppComponent.getRootControl();\n\t\tconst bPlaceholderEnabled = new Placeholder().isPlaceholderEnabled();\n\t\tif (BusyLocker.isLocked(oRootView) && !bPlaceholderEnabled) {\n\t\t\tBusyLocker.unlock(oRootView);\n\t\t}\n\t\tconst mParameters: RoutingEventParameters = oEvent.getParameters() as RoutingEventParameters;\n\t\tif (this.navigationInfoQueue.length) {\n\t\t\tmParameters.navigationInfo = this.navigationInfoQueue[0];\n\t\t\tthis.navigationInfoQueue = this.navigationInfoQueue.slice(1);\n\t\t} else {\n\t\t\tmParameters.navigationInfo = {};\n\t\t}\n\t\tif (oAppStateHandler.checkIfRouteChangedByIApp()) {\n\t\t\tmParameters.navigationInfo.reason = NavigationReason.AppStateChanged;\n\t\t\toAppStateHandler.resetRouteChangedByIApp();\n\t\t} else if (this.oRouterProxy.checkRestoreHistoryWasTriggered()) {\n\t\t\tmParameters.navigationInfo.reason = NavigationReason.RestoreHistory;\n\t\t\tthis.oRouterProxy.resetRestoreHistoryFlag();\n\t\t}\n\n\t\tthis.sCurrentRouteName = oEvent.getParameter(\"name\");\n\t\tthis.sCurrentRoutePattern = mParameters.config.pattern;\n\t\tthis.aCurrentViews = oEvent.getParameter(\"views\");\n\n\t\tmParameters.routeInformation = this._getRouteInformation(this.sCurrentRouteName);\n\t\tmParameters.routePattern = this.sCurrentRoutePattern;\n\n\t\tthis._fireRouteMatchEvents(mParameters);\n\n\t\t// Check if current hash has been set by the routerProxy.navToHash function\n\t\t// If not, rebuild history properly (both in the browser and the RouterProxy)\n\t\tif (!this._isNavigationTriggeredByRouterProxy()) {\n\t\t\tthis.oRouterProxy\n\t\t\t\t.restoreHistory()\n\t\t\t\t.then((): void => {\n\t\t\t\t\tthis.oRouterProxy.resolveRouteMatch();\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\tLog.error(\"Error while restoring history\", oError as string);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.oRouterProxy.resolveRouteMatch();\n\t\t}\n\t}\n\n\tattachRouteMatched(oData: object, fnFunction: Function, oListener?: object): void {\n\t\tthis.eventProvider.attachEvent(\"routeMatched\", oData, fnFunction, oListener);\n\t}\n\n\tdetachRouteMatched(fnFunction: Function, oListener?: object): void {\n\t\tthis.eventProvider.detachEvent(\"routeMatched\", fnFunction, oListener);\n\t}\n\n\tattachAfterRouteMatched(oData: object, fnFunction: Function, oListener?: object): void {\n\t\tthis.eventProvider.attachEvent(\"afterRouteMatched\", oData, fnFunction, oListener);\n\t}\n\n\tdetachAfterRouteMatched(fnFunction: Function, oListener: object): void {\n\t\tthis.eventProvider.detachEvent(\"afterRouteMatched\", fnFunction, oListener);\n\t}\n\n\tasync initializeRouting(): Promise<void> {\n\t\tthis.enabled = true;\n\n\t\tif (this.oAppComponent.getEnvironmentCapabilities().getCapabilities().Collaboration) {\n\t\t\tconst { default: CollaborationHelper } = await import(\"sap/suite/ui/commons/collaboration/CollaborationHelper\");\n\t\t\tawait CollaborationHelper.processAndExpandHash();\n\t\t}\n\t\t// Attach router handlers\n\n\t\tthis._fnOnRouteMatched = this._onRouteMatched.bind(this);\n\t\tthis.oRouter.attachRouteMatched(this._fnOnRouteMatched, this);\n\t\tconst bPlaceholderEnabled = new Placeholder().isPlaceholderEnabled();\n\t\tif (!bPlaceholderEnabled) {\n\t\t\tthis.oRouter.attachBeforeRouteMatched(this._beforeRouteMatched.bind(this));\n\t\t}\n\t\t// Reset internal state\n\t\tthis.navigationInfoQueue = [];\n\t\tEditState.resetEditState();\n\t\tthis.bExitOnNavigateBackToRoot = !this.oRouter.match(\"\");\n\n\t\tawait this.manageStartupMode();\n\t}\n\n\tonRestore(): void {\n\t\tthis.manageStartupMode();\n\t}\n\n\tasync manageStartupMode(): Promise<void> {\n\t\tconst bIsIappState = this.oRouter.getHashChanger().getHash().includes(\"sap-iapp-state\");\n\t\ttry {\n\t\t\tconst oStartupParameters = await this.oAppComponent.getStartupParameters();\n\t\t\tconst bHasStartUpParameters = oStartupParameters !== undefined && Object.keys(oStartupParameters).length !== 0;\n\t\t\tconst sHash = this.oRouter.getHashChanger().getHash();\n\t\t\t// Manage startup parameters (in case of no iapp-state)\n\t\t\tif (!bIsIappState && bHasStartUpParameters && !sHash) {\n\t\t\t\tif (oStartupParameters.preferredMode && oStartupParameters.preferredMode[0].toUpperCase().includes(\"CREATE\")) {\n\t\t\t\t\t// Create mode\n\t\t\t\t\t// This check will catch multiple modes like create, createWith and autoCreateWith which all need\n\t\t\t\t\t// to be handled like create startup!\n\t\t\t\t\tawait this._manageCreateStartup(oStartupParameters);\n\t\t\t\t} else {\n\t\t\t\t\t// Deep link\n\t\t\t\t\tawait this._manageDeepLinkStartup(oStartupParameters);\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this._managedPreferredModeEdit(oStartupParameters);\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"Error during routing initialization\", oError as string);\n\t\t}\n\t}\n\n\tgetDefaultCreateHash(oStartupParameters?: StartupParameters): string {\n\t\treturn AppStartupHelper.getDefaultCreateHash(oStartupParameters, this.getContextPath(), this.oRouter);\n\t}\n\n\tasync _manageCreateStartup(oStartupParameters: StartupParameters): Promise<void> {\n\t\treturn AppStartupHelper.getCreateStartupHash(oStartupParameters, this.getContextPath(), this.oRouter, this.oMetaModel).then(\n\t\t\t(sNewHash: string): void => {\n\t\t\t\tif (sNewHash) {\n\t\t\t\t\t(this.oRouter.getHashChanger().replaceHash as Function)(sNewHash);\n\t\t\t\t\tif (oStartupParameters?.preferredMode && oStartupParameters.preferredMode[0].toUpperCase().includes(\"AUTOCREATE\")) {\n\t\t\t\t\t\tthis.oAppComponent.setStartupModeAutoCreate();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.oAppComponent.setStartupModeCreate();\n\t\t\t\t\t}\n\t\t\t\t\tthis.bExitOnNavigateBackToRoot = true;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t);\n\t}\n\n\tasync _manageDeepLinkStartup(oStartupParameters: StartupParameters | null): Promise<void> {\n\t\treturn AppStartupHelper.getDeepLinkStartupHash(\n\t\t\tthis.oAppComponent.getManifestEntry(\"sap.ui5\").routing,\n\t\t\toStartupParameters,\n\t\t\tthis.oModel\n\t\t).then((oDeepLink) => {\n\t\t\tlet sHash;\n\t\t\tif (oDeepLink.context) {\n\t\t\t\tconst sTechnicalPath = oDeepLink.context.getPath();\n\t\t\t\tconst sSemanticPath = this._checkIfContextSupportsSemanticPath(oDeepLink.context)\n\t\t\t\t\t? SemanticKeyHelper.getSemanticPath(oDeepLink.context, false)!\n\t\t\t\t\t: sTechnicalPath;\n\n\t\t\t\tif (sSemanticPath !== sTechnicalPath) {\n\t\t\t\t\t// Store the mapping technical <-> semantic path to avoid recalculating it later\n\t\t\t\t\t// and use the semantic path instead of the technical one\n\t\t\t\t\tthis.setLastSemanticMapping({ technicalPath: sTechnicalPath, semanticPath: sSemanticPath });\n\t\t\t\t}\n\n\t\t\t\tsHash = sSemanticPath.substring(1); // To remove the leading '/'\n\t\t\t} else if (oDeepLink.hash) {\n\t\t\t\tsHash = oDeepLink.hash;\n\t\t\t}\n\n\t\t\tif (sHash) {\n\t\t\t\t//Replace the hash with newly created hash\n\t\t\t\t(this.oRouter.getHashChanger().replaceHash as Function)(sHash);\n\t\t\t\tthis.oAppComponent.setStartupModeDeeplink();\n\t\t\t}\n\t\t\treturn;\n\t\t});\n\t}\n\n\t/**\n\t * Manages the preferred mode edit by appending \"[&|?]i-action=edit\" to the hash if:\n\t * - There is a resulting hash from the previous logic,\n\t * - The preferred mode is edit, and\n\t * - The entity is editable\n\t * This works for both deep-link startup (#App?ID=myId&preferredMode=edit) and object page routing (#App?preferredMode=edit&/Entity(ID)).\n\t * @param startupParameters\n\t * @param startupParameters.preferredMode\n\t */\n\tasync _managedPreferredModeEdit(startupParameters: { preferredMode?: string[] }): Promise<void> {\n\t\tconst resultingHash = this.oRouter.getHashChanger().getHash();\n\t\tconst shouldEdit = !!startupParameters.preferredMode?.[0]?.toUpperCase()?.includes(\"EDIT\");\n\t\tconst editable = await AppStartupHelper.verifyEditAnnotations(this.getContextPath(), this.oMetaModel);\n\t\tif (resultingHash && shouldEdit && editable) {\n\t\t\tconst parameter = (resultingHash.includes(\"?\") ? \"&\" : \"?\") + \"i-action=edit\";\n\t\t\t(this.oRouter.getHashChanger().replaceHash as (hash: string) => void)(resultingHash + parameter);\n\t\t}\n\t}\n\n\tgetOutbounds(): Record<string, ManifestOutboundEntry> {\n\t\treturn this.outbounds;\n\t}\n\n\t/**\n\t * Gets the name of the Draft root entity set or the sticky-enabled entity set.\n\t * @returns The name of the root EntitySet\n\t */\n\tgetContextPath(): string {\n\t\treturn this.sContextPath;\n\t}\n\n\tgetInterface(): this {\n\t\treturn this;\n\t}\n}\n\nclass RoutingServiceFactory extends ServiceFactory<RoutingServiceSettings> {\n\tasync createInstance(oServiceContext: ServiceContext<RoutingServiceSettings>): Promise<RoutingService> {\n\t\tconst oRoutingService = new RoutingService(oServiceContext);\n\t\treturn oRoutingService.initPromise;\n\t}\n}\n\nexport default RoutingServiceFactory;\n"],"mappings":"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","ignoreList":[],"file":"RoutingServiceFactory-dbg.js"}