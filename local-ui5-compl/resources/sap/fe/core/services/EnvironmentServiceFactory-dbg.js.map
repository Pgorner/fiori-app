{"version":3,"names":["OptionalFeatures","SmartSummarize","intent","library","MagicFiltering","imports","ErrorExplanation","DefaultEnvironmentCapabilities","Chart","MicroChart","Collaboration","UShell","IntentBasedNavigation","AppState","InsightsSupported","ContextSharingSupported","DisableInputAssistance","_exports","EnvironmentCapabilitiesService","_Service","_this","_len","arguments","length","args","Array","_key","call","optionalFeatureLibraries","_inheritsLoose","_proto","prototype","prepareFeature","feature","Error","Library","load","initialize","oContext","getContext","environmentCapabilities","Object","assign","shellContainer","sap","ui","require","versionInfo","VersionInfo","libraries","some","lib","name","navigationService","getServiceAsync","featureName","entries","url","resolveIntent","__ui5_require_async","e","Log","info","message","settings","resolveLibrary","libraryName","Promise","resolve","then","catch","setCapabilities","oCapabilities","setCapability","capability","value","getCapabilities","isInsightsEnabled","isLibAvailable","CardHelper","getMSTeamsActive","isContextSharingEnabled","getInterface","Service","EnvironmentServiceFactory","_ServiceFactory","apply","_proto2","createInstance","oServiceContext","environmentCapabilitiesService","ServiceFactory","isTeamsModeActive","default","CollaborationHelper"],"sourceRoot":".","sources":["EnvironmentServiceFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Library from \"sap/ui/core/Lib\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type Navigation from \"sap/ushell/services/Navigation\";\nimport type { ServiceContext } from \"types/metamodel_types\";\n\ntype OptionalFeatureDefinition = {\n\tintent: string;\n\tlibrary: string;\n\timports?: string;\n};\n/**\n * Configuration for the optional features.\n */\nconst OptionalFeatures: Record<string, OptionalFeatureDefinition> = {\n\tSmartSummarize: { intent: \"IntelligentPrompt-summarize\", library: \"ux.eng.fioriai.reuse\" },\n\tMagicFiltering: {\n\t\tintent: \"IntelligentPrompt-filter\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\"\n\t},\n\tErrorExplanation: {\n\t\tintent: \"IntelligentPrompt-explain\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/errorexplanation/ErrorExplanation\"\n\t}\n};\ntype FeatureName = keyof typeof OptionalFeatures;\n\nexport type EnvironmentCapabilities = {\n\tChart: boolean;\n\tMicroChart: boolean;\n\tCollaboration: boolean;\n\tUShell: boolean;\n\tIntentBasedNavigation: boolean;\n\tAppState: boolean;\n\tDisableInputAssistance: boolean;\n\tInsightsSupported: boolean;\n\tContextSharingSupported: boolean;\n} & {\n\t[feature in FeatureName]: boolean;\n};\n\nexport const DefaultEnvironmentCapabilities: Readonly<EnvironmentCapabilities> = {\n\tChart: true,\n\tMicroChart: true,\n\tCollaboration: false,\n\tUShell: true,\n\tIntentBasedNavigation: true,\n\tAppState: true,\n\tInsightsSupported: false,\n\tContextSharingSupported: false,\n\tSmartSummarize: false,\n\tMagicFiltering: false,\n\tErrorExplanation: false,\n\tDisableInputAssistance: false\n};\nexport class EnvironmentCapabilitiesService extends Service<EnvironmentCapabilities> {\n\trejectFn!: () => void;\n\n\tinitPromise!: Promise<this>;\n\n\tenvironmentCapabilities!: EnvironmentCapabilities;\n\n\t// !: means that we know it will be assigned before usage\n\tprivate optionalFeatureLibraries: Partial<Record<FeatureName, { url: string; name: string; imports?: string }>> = {};\n\n\t/**\n\t * Prepares the feature for usage.\n\t *\n\t * This function loads the library registered for the feature.\n\t * @param feature The feature to prepare.\n\t * @throws Error if the feature is unavailable.\n\t */\n\tasync prepareFeature(feature: FeatureName): Promise<void> {\n\t\tconst library = this.optionalFeatureLibraries[feature];\n\t\tif (!library) {\n\t\t\tthrow new Error(`Feature '${feature}' is unavailable`);\n\t\t}\n\n\t\tawait Library.load(library);\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst oContext = this.getContext();\n\t\tthis.environmentCapabilities = Object.assign({}, DefaultEnvironmentCapabilities);\n\n\t\tconst shellContainer = sap.ui.require(\"sap/ushell/Container\");\n\t\tconst versionInfo = await VersionInfo.load();\n\t\tthis.environmentCapabilities.Chart = versionInfo.libraries.some((lib) => lib.name === \"sap.viz\");\n\t\tthis.environmentCapabilities.MicroChart = versionInfo.libraries.some((lib) => lib.name === \"sap.suite.ui.microchart\");\n\t\tthis.environmentCapabilities.Collaboration = versionInfo.libraries.some((lib) => lib.name === \"sap.suite.ui.commons\");\n\t\tthis.environmentCapabilities.UShell = !!shellContainer;\n\t\tthis.environmentCapabilities.IntentBasedNavigation = !!shellContainer;\n\t\tthis.environmentCapabilities.InsightsSupported = versionInfo.libraries.some((lib) => lib.name === \"sap.insights\");\n\t\tthis.environmentCapabilities.ContextSharingSupported = versionInfo.libraries.some((lib) => lib.name === \"sap.insights\");\n\n\t\t// Initialize optional features\n\t\tconst navigationService: Navigation | undefined = await shellContainer?.getServiceAsync(\"Navigation\");\n\n\t\tfor (const [featureName, feature] of Object.entries(OptionalFeatures)) {\n\t\t\t// The feature is off by default. Only if there is a shell and the intent resolves, the feature is available\n\t\t\tthis.environmentCapabilities[featureName] = false;\n\n\t\t\tif (navigationService) {\n\t\t\t\ttry {\n\t\t\t\t\t// Resolve by intent:\n\t\t\t\t\t//  - intent resolves \t\t  ==> feature available, provided by the library located at the returned URL\n\t\t\t\t\t//  - intent does not resolve ==> resolveIntent() throws an error ==> feature unavailable\n\t\t\t\t\tconst { url } = await navigationService.resolveIntent(`#${feature.intent}`);\n\t\t\t\t\tthis.optionalFeatureLibraries[featureName] = { name: feature.library, url: url, imports: feature.imports };\n\n\t\t\t\t\tif (feature.imports) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait Library.load(this.optionalFeatureLibraries[featureName]!);\n\t\t\t\t\t\t\tawait import(feature.imports);\n\t\t\t\t\t\t\tthis.environmentCapabilities[featureName] = true;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthis.environmentCapabilities[featureName] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.environmentCapabilities[featureName] = true;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Feature unavailable\n\t\t\t\t\tLog.info(`Feature unavailable ${featureName}: ${(e as { message: string; stack: string })?.message}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.environmentCapabilities = Object.assign(this.environmentCapabilities, oContext.settings);\n\t}\n\n\tstatic async resolveLibrary(libraryName: string): Promise<boolean> {\n\t\treturn new Promise(function (resolve) {\n\t\t\tLibrary.load({ name: `${libraryName}` })\n\t\t\t\t.then(function () {\n\t\t\t\t\tresolve(true);\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function () {\n\t\t\t\t\tresolve(false);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setCapabilities(oCapabilities: EnvironmentCapabilities): void {\n\t\tthis.environmentCapabilities = oCapabilities;\n\t}\n\n\tpublic setCapability(capability: keyof EnvironmentCapabilities, value: boolean): void {\n\t\tthis.environmentCapabilities[capability] = value;\n\t}\n\n\tpublic getCapabilities(): EnvironmentCapabilities {\n\t\treturn this.environmentCapabilities;\n\t}\n\n\t/**\n\t * Checks if insights are enabled on the home page.\n\t * @returns True if insights are enabled on the home page.\n\t */\n\tasync isInsightsEnabled(): Promise<boolean> {\n\t\t// insights is enabled\n\t\treturn new Promise<boolean>(async (resolve) => {\n\t\t\ttry {\n\t\t\t\t// getServiceAsync from suite/insights checks to see if myHome is configured with insights and returns a cardHelperInstance if so.\n\t\t\t\tconst isLibAvailable = await EnvironmentCapabilitiesService.resolveLibrary(\"sap.insights\");\n\t\t\t\tif (isLibAvailable) {\n\t\t\t\t\tsap.ui.require([\"sap/insights/CardHelper\"], async (CardHelper: { getServiceAsync: Function }) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait CardHelper.getServiceAsync(\"UIService\");\n\t\t\t\t\t\t\tresolve(!(await getMSTeamsActive()));\n\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tresolve(false);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks if insights context channel is enabled .\n\t * @returns True if enabled.\n\t */\n\tasync isContextSharingEnabled(): Promise<boolean> {\n\t\t// getServiceAsync from suite/insights checks to see if myHome is configured with insights and returns a cardHelperInstance if so.\n\t\tconst isLibAvailable = await EnvironmentCapabilitiesService.resolveLibrary(\"sap.insights\");\n\t\tif (isLibAvailable) {\n\t\t\ttry {\n\t\t\t\tawait import(\"sap/insights/channels/ContextChannel\");\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetInterface(): this {\n\t\treturn this;\n\t}\n}\n\nexport class EnvironmentServiceFactory extends ServiceFactory<EnvironmentCapabilities> {\n\tasync createInstance(oServiceContext: ServiceContext<Partial<EnvironmentCapabilities>>): Promise<EnvironmentCapabilitiesService> {\n\t\tconst environmentCapabilitiesService = new EnvironmentCapabilitiesService(oServiceContext);\n\t\tawait environmentCapabilitiesService.initialize();\n\t\treturn environmentCapabilitiesService;\n\t}\n}\n\n/**\n * Checks if the application is opened on Microsoft Teams.\n * @returns True if the application is opened on Microsoft Teams.\n */\nexport async function getMSTeamsActive(): Promise<boolean> {\n\tlet isTeamsModeActive = false;\n\ttry {\n\t\tconst { default: CollaborationHelper } = await import(\"sap/suite/ui/commons/collaboration/CollaborationHelper\");\n\t\tisTeamsModeActive = await CollaborationHelper.isTeamsModeActive();\n\t} catch {\n\t\treturn false;\n\t}\n\treturn isTeamsModeActive;\n}\n"],"mappings":"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","ignoreList":[],"file":"EnvironmentServiceFactory-dbg.js"}