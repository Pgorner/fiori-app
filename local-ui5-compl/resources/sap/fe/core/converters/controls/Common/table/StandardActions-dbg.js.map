{"version":3,"names":["StandardActionKeys","Cut","Create","Delete","CreationRow","Paste","MassEdit","Insights","MoveUp","MoveDown","_exports","generateStandardActionsContext","converterContext","creationMode","tableManifestConfiguration","collectionPath","getTargetObjectPath","getDataModelObjectPath","hiddenAnnotation","create","isActionAnnotatedHidden","delete","update","isDraftOrStickySupported","newAction","getNewAction","restrictions","getRestrictions","dataModelObjectPath","bIsDraftSupported","ModelHelper","isObjectPathDraftSupported","bIsStickySessionSupported","startingEntitySet","annotations","Session","StickySessionSupported","currentEntitySet","getEntitySet","isEntitySet","Common","DraftRoot","NewAction","undefined","newActionName","toString","availableProperty","getEntityType","actions","Core","OperationAvailable","name","available","getExpressionFromAnnotation","sAnnotationTerm","bWithNavigationPath","arguments","length","actionAnnotationValue","isSingleton","UI","constant","visitedNavigationPaths","navigationProperties","map","navProp","path","singletonPathVisitor","getConvertedTypes","restrictionsDef","key","function","isPathInsertable","isPathUpdatable","isPathDeletable","result","forEach","def","defFunction","expression","apply","pathVisitor","navigationPaths","navigationExpression","ignoreTargetCollection","authorizeUnresolvable","getInsertUpdateActionsTemplating","standardActionsContext","isDraftOrSticky","CreationMode","External","getStandardActionCreate","createVisibility","getCreateVisibility","isTemplated","compileExpression","getCreateTemplating","visible","visibleExpression","enabled","getCreateEnablement","enabledForContextMenu","type","ActionType","Standard","getStandardActionCut","cutVisibility","getCutVisibility","getDefaultTemplating","getCutEnablement","getStandardActionMoveUpDown","forUp","canChangeSibling","Hierarchy","hierarchyQualifier","ChangeNextSiblingAction","moveVisibility","and","getMoveUpDownEnablement","getStandardActionDelete","deleteVisibility","getDeleteVisibility","getDeleteEnablement","getCreationRow","creationRowVisibility","getCreationRowEnablement","pathUpdatableExpression","isUpdatable","templateBindingExpression","getTemplateType","TemplateType","ListReport","IsEditable","ifElse","equal","isHierarchyParentNodeUpdatable","not","isConstant","getStandardActionPaste","isInsertUpdateActionsTemplated","pasteVisibility","getPasteVisibility","pasteEnablement","getPasteEnablement","pasteEnablementForContextMenu","getStandardActionMassEdit","massEditVisibility","getMassEditVisibility","visibleForContextMenu","pathInModel","getMassEditEnablement","getStandardActionInsights","visualizationPath","insightsVisibility","getInsightsVisibility","insightsEnablement","getInsightsEnablement","isForCreationRow","or","actionVisibility","isForPaste","isInsertable","isCreateHidden","InlineCreationRows","inlineCreationRowsHiddenInEditMode","IsCreateMode","isPathInModelExpression","isDeleteHidden","pathDeletableExpression","isDeletable","AnalyticalListPage","updateOnNavigation","_type","notEqual","enablePaste","includes","isUpdateHidden","massEditEnabledInManifest","massEdit","ObjectPage","restrictionsInsertable","indexOf","lastNav","partner","isNavigationProperty","disableAddRowButtonForEmptyData","formatResult","tableFormatters","validateCreationRowFields","forContextMenu","conditions","contextPath","push","CollectionType","resolveAbsolutePath","target","lessOrEqual","createEnablement","deletableContexts","unSavedContexts","draftsWithDeletableActive","draftsWithNonDeletableActive","greaterThan","numberOfSelectedContextsPath","isOnlyDynamicOnCurrentEntity","numberOfSelectedContextProperty","updatableContextProperty","numberOfSelectedContexts","greaterOrEqual","numberOfUpdatableContexts","bDisplayMode","isInDisplayMode","runtimeBinding","cutableContextsPath","moveUpDownVisibility","singleContextMovableUp","singleContextMovableDown","checkMultipleVisualization","templateType","getManifestWrapper","hasMultipleVisualizations"],"sourceRoot":".","sources":["StandardActions.ts"],"sourcesContent":["import type { Boolean, EntitySet } from \"@sap-ux/vocabularies-types\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tformatResult,\n\tgetExpressionFromAnnotation,\n\tgreaterOrEqual,\n\tgreaterThan,\n\tifElse,\n\tisConstant,\n\tisPathInModelExpression,\n\tlength,\n\tlessOrEqual,\n\tnot,\n\tnotEqual,\n\tor,\n\tpathInModel\n} from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { BaseAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { isEntitySet, isNavigationProperty, isSingleton } from \"sap/fe/core/helpers/TypeGuards\";\nimport { getTargetObjectPath, isPathDeletable, isPathInsertable, isPathUpdatable } from \"sap/fe/core/templating/DataModelPathHelper\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport tableFormatters from \"sap/fe/macros/formatters/TableFormatter\";\nimport { UI, singletonPathVisitor } from \"../../../../helpers/BindingHelper\";\nimport type ConverterContext from \"../../../ConverterContext\";\nimport { ActionType, CreationMode, TemplateType } from \"../../../ManifestSettings\";\nimport { getInsightsEnablement, getInsightsVisibility } from \"../../../helpers/InsightsHelpers\";\nimport type { TableControlConfiguration } from \"../Table\";\n\nexport type StandardAction = BaseAction & {\n\ttype: ActionType.Standard;\n\tisTemplated?: CompiledBindingToolkitExpression;\n\tvisible: CompiledBindingToolkitExpression;\n\tvisibleExpression?: BindingToolkitExpression<boolean>;\n\tenabled: CompiledBindingToolkitExpression;\n\tenabledForContextMenu?: CompiledBindingToolkitExpression;\n};\n\ntype ExpressionRestrictionsType = {\n\texpression: BindingToolkitExpression<boolean>;\n\tnavigationExpression: BindingToolkitExpression<boolean>;\n};\ntype StandardActionsRestrictionsType = Record<string, ExpressionRestrictionsType>;\n\nexport type StandardActionsContext = {\n\tcollectionPath: string;\n\thiddenAnnotation: {\n\t\tcreate: BindingToolkitExpression<boolean>;\n\t\tdelete: BindingToolkitExpression<boolean>;\n\t\tupdate: BindingToolkitExpression<boolean>;\n\t};\n\tcreationMode: CreationMode;\n\tisDraftOrStickySupported: boolean;\n\tnewAction?: {\n\t\tname: string;\n\t\tavailable: BindingToolkitExpression<boolean>;\n\t};\n\ttableManifestConfiguration: TableControlConfiguration;\n\trestrictions: StandardActionsRestrictionsType;\n};\n\nexport const StandardActionKeys = {\n\tCut: \"StandardAction::Cut\",\n\tCreate: \"StandardAction::Create\",\n\tDelete: \"StandardAction::Delete\",\n\tCreationRow: \"StandardAction::CreationRow\",\n\tPaste: \"StandardAction::Paste\",\n\tMassEdit: \"StandardAction::MassEdit\",\n\tInsights: \"StandardAction::Insights\",\n\tMoveUp: \"StandardAction::MoveUp\",\n\tMoveDown: \"StandardAction::MoveDown\"\n};\n\n/**\n * Generates context for the standard actions.\n * @param converterContext\n * @param creationMode\n * @param tableManifestConfiguration\n * @returns  The context for table actions\n */\nexport function generateStandardActionsContext(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcreationMode: CreationMode,\n\ttableManifestConfiguration: TableControlConfiguration\n): StandardActionsContext {\n\treturn {\n\t\tcollectionPath: getTargetObjectPath(converterContext.getDataModelObjectPath()),\n\t\thiddenAnnotation: {\n\t\t\tcreate: isActionAnnotatedHidden(converterContext, \"CreateHidden\"),\n\t\t\tdelete: isActionAnnotatedHidden(converterContext, \"DeleteHidden\"),\n\t\t\tupdate: isActionAnnotatedHidden(converterContext, \"UpdateHidden\")\n\t\t},\n\t\tcreationMode: creationMode,\n\t\tisDraftOrStickySupported: isDraftOrStickySupported(converterContext),\n\t\tnewAction: getNewAction(converterContext),\n\t\ttableManifestConfiguration: tableManifestConfiguration,\n\t\trestrictions: getRestrictions(converterContext)\n\t};\n}\n\n/**\n * Checks if sticky or draft is supported.\n * @param converterContext\n * @returns `true` if it is supported\n */\nexport function isDraftOrStickySupported(converterContext: ConverterContext<PageContextPathTarget>): boolean {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath();\n\tconst bIsDraftSupported = ModelHelper.isObjectPathDraftSupported(dataModelObjectPath);\n\tconst bIsStickySessionSupported = (dataModelObjectPath.startingEntitySet as EntitySet)?.annotations?.Session?.StickySessionSupported\n\t\t? true\n\t\t: false;\n\n\treturn bIsDraftSupported || bIsStickySessionSupported;\n}\n\n/**\n * Gets the configured newAction into annotation.\n * @param converterContext\n * @returns The new action info\n */\nexport function getNewAction(\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): { name: string; available: BindingToolkitExpression<boolean> } | undefined {\n\tconst currentEntitySet = converterContext.getEntitySet();\n\tconst newAction = isEntitySet(currentEntitySet)\n\t\t? currentEntitySet.annotations.Common?.DraftRoot?.NewAction ??\n\t\t  currentEntitySet.annotations.Session?.StickySessionSupported?.NewAction\n\t\t: undefined;\n\tconst newActionName: CompiledBindingToolkitExpression = newAction?.toString();\n\tif (newActionName) {\n\t\tconst availableProperty = converterContext?.getEntityType().actions[newActionName]?.annotations?.Core?.OperationAvailable;\n\t\treturn {\n\t\t\tname: newActionName,\n\t\t\tavailable: getExpressionFromAnnotation<Boolean>(availableProperty, [], true)\n\t\t};\n\t}\n\treturn undefined;\n}\n\n/**\n * Gets the binding expression for the action visibility configured into annotation.\n * @param converterContext\n * @param sAnnotationTerm\n * @param bWithNavigationPath\n * @returns The binding expression for the action visibility\n */\nexport function isActionAnnotatedHidden(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tsAnnotationTerm: \"CreateHidden\" | \"UpdateHidden\" | \"DeleteHidden\",\n\tbWithNavigationPath = true\n): BindingToolkitExpression<boolean> {\n\t// The annotations in question (CreateHidden, DeleteHidden, UpdateHidden) most specifically can be defined on EntitySet.\n\t// In several cases, fallback to EntityType needs to be checked:\n\t// - In case of singleton (annotations do not apply)\n\t// - EntitySet cannot be determined (containment or no navigationPropertyBinding)\n\t// - EntitySet can be determined, but the annotation is not defined there\n\n\tconst currentEntitySet = converterContext.getEntitySet();\n\tconst actionAnnotationValue =\n\t\t(!isSingleton(currentEntitySet) && currentEntitySet?.annotations.UI?.[sAnnotationTerm]) ||\n\t\tconverterContext.getEntityType().annotations.UI?.[sAnnotationTerm];\n\n\tif (!actionAnnotationValue) {\n\t\treturn constant(false);\n\t}\n\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath();\n\tconst visitedNavigationPaths =\n\t\tdataModelObjectPath.navigationProperties.length > 0 && bWithNavigationPath\n\t\t\t? dataModelObjectPath.navigationProperties.map((navProp) => navProp.name)\n\t\t\t: [];\n\n\treturn getExpressionFromAnnotation(actionAnnotationValue, visitedNavigationPaths, undefined, (path: string) =>\n\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), visitedNavigationPaths)\n\t);\n}\n\n/**\n * Gets the annotated restrictions for the actions.\n * @param converterContext\n * @returns The restriction information\n */\nexport function getRestrictions(converterContext: ConverterContext<PageContextPathTarget>): StandardActionsRestrictionsType {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath();\n\tconst restrictionsDef = [\n\t\t{\n\t\t\tkey: \"isInsertable\",\n\t\t\tfunction: isPathInsertable\n\t\t},\n\t\t{\n\t\t\tkey: \"isUpdatable\",\n\t\t\tfunction: isPathUpdatable\n\t\t},\n\t\t{\n\t\t\tkey: \"isDeletable\",\n\t\t\tfunction: isPathDeletable\n\t\t}\n\t];\n\tconst result: Record<string, ExpressionRestrictionsType> = {};\n\trestrictionsDef.forEach(function (def) {\n\t\tconst defFunction = def[\"function\"];\n\t\tresult[def.key] = {\n\t\t\texpression: defFunction.apply(null, [\n\t\t\t\tdataModelObjectPath,\n\t\t\t\t{\n\t\t\t\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\t\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), navigationPaths)\n\t\t\t\t}\n\t\t\t]),\n\t\t\tnavigationExpression: defFunction.apply(null, [\n\t\t\t\tdataModelObjectPath,\n\t\t\t\t{\n\t\t\t\t\tignoreTargetCollection: true,\n\t\t\t\t\tauthorizeUnresolvable: true,\n\t\t\t\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\t\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), navigationPaths)\n\t\t\t\t}\n\t\t\t])\n\t\t};\n\t});\n\treturn result;\n}\n\n/**\n * Checks if templating for insert/update actions is mandatory.\n * @param standardActionsContext\n * @param isDraftOrSticky\n * @returns True if we need to template insert or update actions, false otherwise\n */\nexport function getInsertUpdateActionsTemplating(standardActionsContext: StandardActionsContext, isDraftOrSticky: boolean): boolean {\n\treturn isDraftOrSticky || standardActionsContext.creationMode === CreationMode.External;\n}\n\n/**\n * Gets the binding expressions for the properties of the 'Create' action.\n * @param converterContext\n * @param standardActionsContext\n * @returns The standard action info\n */\nexport function getStandardActionCreate(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): StandardAction {\n\tconst createVisibility = getCreateVisibility(converterContext, standardActionsContext);\n\treturn {\n\t\tisTemplated: compileExpression(getCreateTemplating(standardActionsContext, createVisibility)),\n\t\tvisible: compileExpression(createVisibility),\n\t\tvisibleExpression: createVisibility,\n\t\tenabled: compileExpression(getCreateEnablement(converterContext, standardActionsContext, createVisibility)),\n\t\tenabledForContextMenu: compileExpression(getCreateEnablement(converterContext, standardActionsContext, createVisibility, true)),\n\t\tkey: StandardActionKeys.Create,\n\t\ttype: ActionType.Standard\n\t};\n}\n/**\n * Gets the binding expressions for the properties of the 'Cut' action.\n * @param converterContext\n * @param standardActionsContext\n * @returns The standard action info\n */\nexport function getStandardActionCut(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): StandardAction {\n\tconst cutVisibility = getCutVisibility(converterContext, standardActionsContext);\n\treturn {\n\t\tisTemplated: compileExpression(getDefaultTemplating(cutVisibility)),\n\t\tvisible: compileExpression(cutVisibility),\n\t\tenabled: compileExpression(getCutEnablement(cutVisibility, standardActionsContext, false)),\n\t\tenabledForContextMenu: compileExpression(getCutEnablement(cutVisibility, standardActionsContext, true)),\n\t\tkey: StandardActionKeys.Cut,\n\t\ttype: ActionType.Standard\n\t};\n}\n\n/**\n * Gets the binding expressions for the properties of the 'Move up' and 'Move down' actions.\n * @param converterContext\n * @param standardActionsContext\n * @param forUp\n * @returns The standard action info\n */\nexport function getStandardActionMoveUpDown(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tforUp: boolean\n): StandardAction {\n\tconst canChangeSibling =\n\t\tconverterContext.getEntityType().annotations.Hierarchy?.[\n\t\t\t`RecursiveHierarchyActions#${standardActionsContext.tableManifestConfiguration.hierarchyQualifier ?? \"\"}`\n\t\t]?.ChangeNextSiblingAction !== undefined;\n\tconst moveVisibility = and(getCutVisibility(converterContext, standardActionsContext), canChangeSibling);\n\treturn {\n\t\tisTemplated: compileExpression(getDefaultTemplating(moveVisibility)),\n\t\tvisible: compileExpression(moveVisibility),\n\t\tenabled: compileExpression(getMoveUpDownEnablement(moveVisibility, standardActionsContext, forUp)),\n\t\tenabledForContextMenu: compileExpression(getMoveUpDownEnablement(moveVisibility, standardActionsContext, forUp, true)),\n\t\tkey: forUp ? StandardActionKeys.MoveUp : StandardActionKeys.MoveDown,\n\t\ttype: ActionType.Standard\n\t};\n}\n\n/**\n * Gets the binding expressions for the properties of the 'Delete' action.\n * @param converterContext\n * @param standardActionsContext\n * @returns The binding expressions for the properties of the 'Delete' action.\n */\nexport function getStandardActionDelete(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): StandardAction {\n\tconst deleteVisibility = getDeleteVisibility(converterContext, standardActionsContext);\n\n\treturn {\n\t\tisTemplated: compileExpression(getDefaultTemplating(deleteVisibility)),\n\t\tvisible: compileExpression(deleteVisibility),\n\t\tenabled: compileExpression(getDeleteEnablement(converterContext, standardActionsContext, deleteVisibility, false)),\n\t\tenabledForContextMenu: compileExpression(getDeleteEnablement(converterContext, standardActionsContext, deleteVisibility, true)),\n\t\tkey: StandardActionKeys.Delete,\n\t\ttype: ActionType.Standard\n\t};\n}\n\n/**\n * Gets the binding expressions for the properties of the 'CreationRow' action.\n *\n * Note that this is not actually an action that is templated as a button but its properties are used to configure an MDC feature.\n * @param converterContext\n * @param standardActionsContext\n * @returns StandardAction\n */\nexport function getCreationRow(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): StandardAction {\n\tconst creationRowVisibility = getCreateVisibility(converterContext, standardActionsContext, true);\n\n\treturn {\n\t\tisTemplated: compileExpression(getCreateTemplating(standardActionsContext, creationRowVisibility, true)),\n\t\tvisible: compileExpression(creationRowVisibility),\n\t\tenabled: compileExpression(getCreationRowEnablement(converterContext, standardActionsContext, creationRowVisibility)),\n\t\tkey: StandardActionKeys.CreationRow,\n\t\ttype: ActionType.Standard\n\t};\n}\n\n/**\n * Gets the binding expression for the 'visible' property of the 'Cut' action.\n * @param converterContext\n * @param standardActionsContext\n * @returns The binding expression for the 'visible' property of the 'Cut' action.\n */\nexport function getCutVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): BindingToolkitExpression<boolean> {\n\tconst pathUpdatableExpression = standardActionsContext.restrictions?.isUpdatable?.expression;\n\tconst templateBindingExpression =\n\t\tconverterContext.getTemplateType() !== TemplateType.ListReport\n\t\t\t? UI.IsEditable\n\t\t\t: (converterContext.getEntitySet() as EntitySet)?.annotations.Common?.DraftRoot !== undefined; // To allow cut/paste for a draft TreeTable in a ListReport\n\treturn ifElse(\n\t\tequal(standardActionsContext.tableManifestConfiguration?.type, \"TreeTable\"),\n\t\tand(\n\t\t\tstandardActionsContext.tableManifestConfiguration.isHierarchyParentNodeUpdatable!,\n\t\t\tnot(and(isConstant(pathUpdatableExpression), equal(pathUpdatableExpression, false))),\n\t\t\ttemplateBindingExpression\n\t\t),\n\t\tfalse\n\t);\n}\n\n/**\n * Gets the binding expressions for the properties of the 'Paste' action.\n *\n * Note that this is not actually an action that is displayed as a button but its properties are used to configure an MDC feature.\n * @param converterContext\n * @param standardActionsContext\n * @param isInsertUpdateActionsTemplated\n * @returns The binding expressions for the properties of the 'Paste' action.\n */\nexport function getStandardActionPaste(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tisInsertUpdateActionsTemplated: boolean\n): StandardAction {\n\tconst cutVisibility = getCutVisibility(converterContext, standardActionsContext);\n\tconst createVisibility = getCreateVisibility(converterContext, standardActionsContext, false, true);\n\tconst pasteVisibility = getPasteVisibility(\n\t\tconverterContext,\n\t\tstandardActionsContext,\n\t\tcreateVisibility,\n\t\tcutVisibility,\n\t\tisInsertUpdateActionsTemplated\n\t);\n\tconst pasteEnablement = getPasteEnablement(pasteVisibility, standardActionsContext, false);\n\tconst pasteEnablementForContextMenu = getPasteEnablement(pasteVisibility, standardActionsContext, true);\n\treturn {\n\t\tvisible: compileExpression(pasteVisibility),\n\t\tenabled: compileExpression(pasteEnablement),\n\t\tenabledForContextMenu: compileExpression(pasteEnablementForContextMenu),\n\t\tkey: StandardActionKeys.Paste,\n\t\ttype: ActionType.Standard\n\t};\n}\n\n/**\n * Gets the binding expressions for the properties of the 'MassEdit' action.\n * @param converterContext\n * @param standardActionsContext\n * @returns The binding expressions for the properties of the 'MassEdit' action.\n */\nexport function getStandardActionMassEdit(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): StandardAction {\n\tconst massEditVisibility = getMassEditVisibility(converterContext, standardActionsContext);\n\n\treturn {\n\t\tisTemplated: compileExpression(getDefaultTemplating(massEditVisibility)),\n\t\tvisible: compileExpression(massEditVisibility),\n\t\t// For the context menu, the visibility should also consider the 'inactiveContext' property:\n\t\t// only when at least one selected context is active (i.e. \"contextmenu/inactiveContext\" is false), the action should be visible in the context menu\n\t\t// This is only relevant when the table manifest setting \"creationMode\" is \"InlineCreationRows\"\n\t\tvisibleForContextMenu: compileExpression(\n\t\t\tand(massEditVisibility, equal(pathInModel(\"contextmenu/inactiveContext\", \"internal\"), false))\n\t\t),\n\t\tenabled: compileExpression(getMassEditEnablement(converterContext, standardActionsContext, massEditVisibility)),\n\t\tenabledForContextMenu: compileExpression(getMassEditEnablement(converterContext, standardActionsContext, massEditVisibility, true)),\n\t\tkey: StandardActionKeys.MassEdit,\n\t\ttype: ActionType.Standard\n\t};\n}\n\n/**\n * Gets the binding expressions for the properties of the 'AddCardsToInsights' action.\n * @param converterContext\n * @param standardActionsContext\n * @param visualizationPath\n * @returns The binding expressions for the properties of the 'AddCardsToInsights' action.\n */\nexport function getStandardActionInsights(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tvisualizationPath: string\n): StandardAction {\n\tconst insightsVisibility = getInsightsVisibility(\"Table\", converterContext, visualizationPath, standardActionsContext);\n\tconst insightsEnablement = and(insightsVisibility, getInsightsEnablement());\n\treturn {\n\t\tisTemplated: compileExpression(getDefaultTemplating(insightsVisibility)),\n\t\tvisible: compileExpression(insightsVisibility),\n\t\tenabled: compileExpression(insightsEnablement),\n\t\tkey: StandardActionKeys.Insights,\n\t\ttype: ActionType.Standard\n\t};\n}\n\n/**\n * Gets the binding expression for the templating of the 'Create' action.\n * @param standardActionsContext\n * @param createVisibility\n * @param isForCreationRow\n * @returns The create binding expression\n */\nexport function getCreateTemplating(\n\tstandardActionsContext: StandardActionsContext,\n\tcreateVisibility: BindingToolkitExpression<boolean>,\n\tisForCreationRow = false\n): BindingToolkitExpression<boolean> {\n\t//Templating of Create Button is not done:\n\t// \t - If Button is never visible(covered the External create button, new Action)\n\t//\t - or CreationMode is on CreationRow for Create Button\n\t//\t - or CreationMode is not on CreationRow for CreationRow Button\n\n\treturn and(\n\t\t//XNOR gate\n\t\tor(\n\t\t\tand(isForCreationRow, standardActionsContext.creationMode === CreationMode.CreationRow),\n\t\t\tand(!isForCreationRow, standardActionsContext.creationMode !== CreationMode.CreationRow)\n\t\t),\n\t\tor(not(isConstant(createVisibility)), createVisibility)\n\t);\n}\n\n/**\n * Gets the binding expression for the templating of the non-Create actions.\n * @param actionVisibility\n * @returns The binding expression for the templating of the non-Create actions.\n */\nexport function getDefaultTemplating(actionVisibility: BindingToolkitExpression<boolean>): BindingToolkitExpression<boolean> {\n\treturn or(not(isConstant(actionVisibility)), actionVisibility);\n}\n\n/**\n * Gets the binding expression for the 'visible' property of the 'Create' action.\n * @param converterContext\n * @param standardActionsContext\n * @param isForCreationRow\n * @param isForPaste\n * @returns The binding expression for the 'visible' property of the 'Create' action.\n */\nexport function getCreateVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tisForCreationRow = false,\n\tisForPaste = false\n): BindingToolkitExpression<boolean> {\n\tconst isInsertable = standardActionsContext.restrictions.isInsertable.expression;\n\tconst isCreateHidden = isForCreationRow\n\t\t? isActionAnnotatedHidden(converterContext, \"CreateHidden\", false)\n\t\t: standardActionsContext.hiddenAnnotation.create;\n\tconst newAction = standardActionsContext.newAction;\n\t//Create Button is visible:\n\t// \t - If the creation mode is external\n\t//      - If we're on the list report and create is not hidden\n\t//\t\t- Otherwise this depends on the value of the UI.IsEditable\n\t//\t - Otherwise\n\t//\t\t- If any of the following conditions is valid then create button isn't visible\n\t//\t\t\t- no newAction available\n\t//\t\t\t- It's not insertable and there is not a new action\n\t//\t\t\t- create is hidden\n\t//\t\t\t- There are multiple visualizations\n\t//\t\t\t- It's an Analytical List Page\n\t//\t\t\t- Uses InlineCreationRows mode and a Responsive table type, with the parameter inlineCreationRowsHiddenInEditMode to true while not in create mode\n\t//          \t- when calculating paste button visibility,  we force the condition to false with the isForPaste property\n\t//   - Otherwise\n\t// \t \t- If we're on the list report ->\n\t// \t \t\t- If UI.CreateHidden points to a property path -> provide a negated binding to this path\n\t// \t \t\t- Otherwise, create is visible\n\t// \t \t- Otherwise\n\t// \t  \t - This depends on the value of the UI.IsEditable\n\treturn ifElse(\n\t\tstandardActionsContext.creationMode === CreationMode.External,\n\t\tand(not(isCreateHidden), or(converterContext.getTemplateType() === TemplateType.ListReport, UI.IsEditable)),\n\t\tifElse(\n\t\t\tor(\n\t\t\t\tand(isConstant(newAction?.available), equal(newAction?.available, false)),\n\t\t\t\tand(isConstant(isInsertable), equal(isInsertable, false), !newAction),\n\t\t\t\tand(isConstant(isCreateHidden), equal(isCreateHidden, true)),\n\t\t\t\tand(\n\t\t\t\t\tstandardActionsContext.creationMode === CreationMode.InlineCreationRows,\n\t\t\t\t\tstandardActionsContext.tableManifestConfiguration?.type === \"ResponsiveTable\",\n\t\t\t\t\tifElse(\n\t\t\t\t\t\tand(\n\t\t\t\t\t\t\tstandardActionsContext?.tableManifestConfiguration?.inlineCreationRowsHiddenInEditMode === false,\n\t\t\t\t\t\t\tnot(isForPaste)\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tUI.IsCreateMode\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tfalse,\n\t\t\tifElse(\n\t\t\t\tconverterContext.getTemplateType() === TemplateType.ListReport,\n\t\t\t\tor(not(isPathInModelExpression(isCreateHidden)), not(isCreateHidden)),\n\t\t\t\tand(not(isCreateHidden), UI.IsEditable)\n\t\t\t)\n\t\t)\n\t);\n}\n\n/**\n * Gets the binding expression for the 'visible' property of the 'Delete' action.\n * @param converterContext\n * @param standardActionsContext\n * @returns The binding expression for the 'visible' property of the 'Delete' action.\n */\nexport function getDeleteVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): BindingToolkitExpression<boolean> {\n\tconst isDeleteHidden = standardActionsContext.hiddenAnnotation.delete;\n\tconst pathDeletableExpression = standardActionsContext.restrictions.isDeletable.expression;\n\n\t//Delete Button is visible:\n\t// \t Prerequisites:\n\t//\t - If we're not on ALP\n\t//   - If restrictions on deletable set to false -> not visible\n\t//   - Otherwise\n\t//\t\t\t- If UI.DeleteHidden is true -> not visible\n\t//\t\t\t- Otherwise\n\t// \t \t\t\t- If we're on OP -> depending if UI is editable and restrictions on deletable\n\t//\t\t\t\t- Otherwise\n\t//\t\t\t\t \t- If UI.DeleteHidden points to a property path -> provide a negated binding to this path\n\t//\t \t \t\t \t- Otherwise, delete is visible\n\n\treturn ifElse(\n\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage,\n\t\tfalse,\n\t\tifElse(\n\t\t\tand(isConstant(pathDeletableExpression), equal(pathDeletableExpression, false)),\n\t\t\tfalse,\n\t\t\tifElse(\n\t\t\t\tand(isConstant(isDeleteHidden), equal(isDeleteHidden, constant(true))),\n\t\t\t\tfalse,\n\t\t\t\tifElse(\n\t\t\t\t\tconverterContext.getTemplateType() !== TemplateType.ListReport,\n\t\t\t\t\tand(not(isDeleteHidden), UI.IsEditable),\n\t\t\t\t\tnot(and(isPathInModelExpression(isDeleteHidden), isDeleteHidden))\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n}\n\n/**\n * Gets the binding expression for the 'visible' property of the 'Paste' action.\n * @param converterContext\n * @param standardActionsContext\n * @param createVisibility\n * @param cutVisibility\n * @param isInsertUpdateActionsTemplated\n * @returns The binding expression for the 'visible' property of the 'Paste' action.\n */\nexport function getPasteVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tcreateVisibility: BindingToolkitExpression<boolean>,\n\tcutVisibility: BindingToolkitExpression<boolean>,\n\tisInsertUpdateActionsTemplated: boolean\n): BindingToolkitExpression<boolean> {\n\t//If it isn't deactivated within the manifest and we're operating in OP/blocks outside Fiori elements templates,\n\t//the treeTable's visibility relies on the cutvisibility,\n\t//while the visibility of the other table is determined by insertable restrictions and create visibility.\n\tlet updateOnNavigation = standardActionsContext.restrictions?.isUpdatable?.navigationExpression;\n\tif (updateOnNavigation?._type === \"Unresolvable\") {\n\t\tupdateOnNavigation = constant(true);\n\t}\n\treturn and(\n\t\tstandardActionsContext.tableManifestConfiguration.type === \"TreeTable\"\n\t\t\t? cutVisibility\n\t\t\t: and(\n\t\t\t\t\tor(\n\t\t\t\t\t\tand(createVisibility, standardActionsContext.restrictions.isInsertable.expression),\n\t\t\t\t\t\tand(UI.IsEditable, updateOnNavigation)\n\t\t\t\t\t),\n\t\t\t\t\tnotEqual(standardActionsContext.tableManifestConfiguration.enablePaste, false),\n\t\t\t\t\t![TemplateType.ListReport, TemplateType.AnalyticalListPage].includes(converterContext.getTemplateType())\n\t\t\t  ),\n\t\tisInsertUpdateActionsTemplated\n\t);\n}\n\n/**\n * Gets the binding expression for the 'visible' property of the 'MassEdit' action.\n * @param converterContext\n * @param standardActionsContext\n * @returns The binding expression for the 'visible' property of the 'MassEdit' action.\n */\nexport function getMassEditVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext\n): BindingToolkitExpression<boolean> {\n\tconst isUpdateHidden = standardActionsContext.hiddenAnnotation.update,\n\t\tpathUpdatableExpression = standardActionsContext.restrictions.isUpdatable.expression,\n\t\tmassEditEnabledInManifest: boolean = standardActionsContext.tableManifestConfiguration?.massEdit.enabled || false;\n\tconst templateBindingExpression =\n\t\tconverterContext.getTemplateType() === TemplateType.ObjectPage\n\t\t\t? UI.IsEditable\n\t\t\t: converterContext.getTemplateType() === TemplateType.ListReport;\n\t//MassEdit is visible\n\t// If\n\t//\t\t- there is no static restrictions set to false\n\t//\t\t- and enableMassEdit is not set to false into the manifest\n\t//\t\t- and the selectionMode is relevant\n\t//\tThen MassEdit is always visible in LR or dynamically visible in OP according to ui>Editable and hiddenAnnotation\n\t//  Button is hidden for all other cases\n\treturn and(\n\t\tnot(and(isConstant(pathUpdatableExpression), equal(pathUpdatableExpression, false))),\n\t\tmassEditEnabledInManifest,\n\t\ttemplateBindingExpression,\n\t\tnot(isUpdateHidden)\n\t);\n}\n\n/**\n * Gets the binding expression for the 'enabled' property of the creationRow.\n * @param converterContext\n * @param standardActionsContext\n * @param creationRowVisibility\n * @returns The binding expression for the 'enabled' property of the creationRow.\n */\nexport function getCreationRowEnablement(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tcreationRowVisibility: BindingToolkitExpression<boolean>\n): BindingToolkitExpression<boolean> {\n\tconst restrictionsInsertable = isPathInsertable(converterContext.getDataModelObjectPath(), {\n\t\tignoreTargetCollection: true,\n\t\tauthorizeUnresolvable: true,\n\t\tpathVisitor: (path: string, navigationPaths: string[]) => {\n\t\t\tif (path.indexOf(\"/\") === 0) {\n\t\t\t\tpath = singletonPathVisitor(path, converterContext.getConvertedTypes(), navigationPaths);\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\tconst navigationProperties = converterContext.getDataModelObjectPath().navigationProperties;\n\t\t\tif (navigationProperties) {\n\t\t\t\tconst lastNav = navigationProperties[navigationProperties.length - 1];\n\t\t\t\tconst partner = isNavigationProperty(lastNav) && lastNav.partner;\n\t\t\t\tif (partner) {\n\t\t\t\t\tpath = `${partner}/${path}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn path;\n\t\t}\n\t});\n\tconst isInsertable =\n\t\trestrictionsInsertable._type === \"Unresolvable\"\n\t\t\t? isPathInsertable(converterContext.getDataModelObjectPath(), {\n\t\t\t\t\tpathVisitor: (path: string) => singletonPathVisitor(path, converterContext.getConvertedTypes(), [])\n\t\t\t  })\n\t\t\t: restrictionsInsertable;\n\n\treturn and(\n\t\tcreationRowVisibility,\n\t\tisInsertable,\n\t\tor(\n\t\t\t!standardActionsContext.tableManifestConfiguration.disableAddRowButtonForEmptyData,\n\t\t\tformatResult([pathInModel(\"creationRowFieldValidity\", \"internal\")], tableFormatters.validateCreationRowFields)\n\t\t)\n\t);\n}\n\n/**\n * Gets the binding expression for the 'enabled' property of the 'Create' action.\n * @param converterContext\n * @param standardActionsContext\n * @param createVisibility\n * @param forContextMenu\n * @returns The binding expression for the 'enabled' property of the 'Create' action.\n */\nexport function getCreateEnablement(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tcreateVisibility: BindingToolkitExpression<boolean>,\n\tforContextMenu = false\n): BindingToolkitExpression<boolean> {\n\tconst conditions: BindingToolkitExpression<boolean>[] = [];\n\tconst contextPath: string = !forContextMenu ? \"\" : \"contextmenu/\";\n\n\tif (standardActionsContext.creationMode === CreationMode.InlineCreationRows) {\n\t\t// for Inline creation rows create can be hidden via manifest and this should not impact its enablement\n\t\tconditions.push(and(not(standardActionsContext.hiddenAnnotation.create), UI.IsEditable));\n\t} else {\n\t\tconditions.push(createVisibility);\n\t}\n\n\tconst isInsertable = standardActionsContext.restrictions.isInsertable.expression;\n\tconst CollectionType = converterContext.resolveAbsolutePath<EntitySet>(standardActionsContext.collectionPath).target;\n\tconditions.push(\n\t\tor(\n\t\t\tisEntitySet(CollectionType),\n\t\t\tand(isInsertable, or(converterContext.getTemplateType() !== TemplateType.ObjectPage, UI.IsEditable))\n\t\t)\n\t);\n\n\tif (standardActionsContext.tableManifestConfiguration.type === \"TreeTable\") {\n\t\t// In case of a TreeTable, the create button shall be active only if 0 or 1 items are selected (parent node)\n\t\t// We do not need this condition on the ContextMenu, as we only create on the selected node\n\t\tconditions.push(lessOrEqual(pathInModel(contextPath + \"numberOfSelectedContexts\", \"internal\"), 1));\n\n\t\tif (standardActionsContext.tableManifestConfiguration.createEnablement) {\n\t\t\t// There's a createEnablement callback function for additionnal conditions\n\t\t\t// These conditions will be reflected in the internal model\n\t\t\tconditions.push(notEqual(pathInModel(contextPath + \"createEnablement/Create\", \"internal\"), false));\n\t\t}\n\t}\n\n\treturn and(...conditions);\n}\n\n/**\n * Gets the binding expression for the 'enabled' property of the 'Delete' action.\n * @param converterContext\n * @param standardActionsContext\n * @param deleteVisibility\n * @param forContextMenu Indicates if the action appears in the context menu. If false, the action appears in the table toolbar\n * @returns The binding expression for the 'enabled' property of the 'Delete' action.\n */\nexport function getDeleteEnablement(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tdeleteVisibility: BindingToolkitExpression<boolean>,\n\tforContextMenu = false\n): BindingToolkitExpression<boolean> {\n\t// The following contexts are filled at runtime when a user selects one or more items from a list.\n\t// Checks are then made in function updateDeleteInfoForSelectedContexts in file DeleteHelper to see if there\n\t// are items that can be deleted, thus the delete button should be enabled in these cases.\n\tconst contextPath = !forContextMenu ? \"\" : \"contextmenu/\";\n\tconst deletableContexts = pathInModel(contextPath + \"deletableContexts\", \"internal\");\n\tconst unSavedContexts = pathInModel(contextPath + \"unSavedContexts\", \"internal\");\n\tconst draftsWithDeletableActive = pathInModel(contextPath + \"draftsWithDeletableActive\", \"internal\");\n\tconst draftsWithNonDeletableActive = pathInModel(contextPath + \"draftsWithNonDeletableActive\", \"internal\");\n\n\t// \"Unresolvable\" in navigationExpression is interpreted to mean that there are no navigationExpressions\n\t// defined.\n\t// standardActionsContext.restrictions.isDeletable.expression is a binding expression that comes\n\t// from the Delete restrictions defined in NavigationRestrictions for this entity. In order to\n\t// be deletable, the item must also be allowed to be deletable according to the Delete Restrictions\n\t// on the entity itself.\n\treturn and(\n\t\tdeleteVisibility,\n\t\tor(\n\t\t\tstandardActionsContext.restrictions.isDeletable.navigationExpression._type === \"Unresolvable\",\n\t\t\tstandardActionsContext.restrictions.isDeletable.expression\n\t\t),\n\t\tor(\n\t\t\tgreaterThan(length(deletableContexts, true), 0),\n\t\t\tgreaterThan(length(draftsWithDeletableActive, true), 0),\n\t\t\tgreaterThan(length(draftsWithNonDeletableActive, true), 0),\n\t\t\tgreaterThan(length(unSavedContexts, true), 0)\n\t\t)\n\t);\n}\n\n/**\n * Gets the binding expression for the 'enabled' property of the 'Paste' action.\n * @param pasteVisibility\n * @param standardActionsContext\n * @param forContextMenu\n * @returns The binding expression for the 'enabled' property of the 'Paste' action.\n */\nexport function getPasteEnablement(\n\tpasteVisibility: BindingToolkitExpression<boolean>,\n\tstandardActionsContext: StandardActionsContext,\n\tforContextMenu: boolean\n): BindingToolkitExpression<boolean> {\n\tif (standardActionsContext.tableManifestConfiguration.type === \"TreeTable\") {\n\t\tconst numberOfSelectedContextsPath = !forContextMenu ? \"numberOfSelectedContexts\" : \"contextmenu/numberOfSelectedContexts\";\n\t\treturn and(\n\t\t\tpasteVisibility,\n\t\t\tor(\n\t\t\t\tstandardActionsContext.restrictions.isUpdatable.navigationExpression._type === \"Unresolvable\",\n\t\t\t\tstandardActionsContext.restrictions.isUpdatable.expression\n\t\t\t),\n\t\t\tand(\n\t\t\t\tequal(length(pathInModel(\"pastableContexts\", \"internal\"), true), 1),\n\t\t\t\tstandardActionsContext.tableManifestConfiguration.type === \"TreeTable\"\n\t\t\t\t\t? lessOrEqual(pathInModel(numberOfSelectedContextsPath, \"internal\"), 1)\n\t\t\t\t\t: true,\n\t\t\t\tequal(pathInModel(\"pasteAuthorized\", \"internal\"), true)\n\t\t\t)\n\t\t);\n\t}\n\tlet updateOnNavigation = standardActionsContext.restrictions?.isUpdatable?.navigationExpression;\n\tif (updateOnNavigation?._type === \"Unresolvable\") {\n\t\tupdateOnNavigation = constant(true);\n\t}\n\treturn and(updateOnNavigation, pasteVisibility);\n}\n\n/**\n * Gets the binding expression for the 'enabled' property of the 'MassEdit' action.\n * @param converterContext\n * @param standardActionsContext\n * @param massEditVisibility\n * @param forContextMenu Indicates if the action appears in the context menu. If false, the action appears in the table toolbar\n * @returns The binding expression for the 'enabled' property of the 'MassEdit' action.\n */\nexport function getMassEditEnablement(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActionsContext: StandardActionsContext,\n\tmassEditVisibility: BindingToolkitExpression<boolean>,\n\tforContextMenu = false\n): BindingToolkitExpression<boolean> {\n\tconst pathUpdatableExpression = standardActionsContext.restrictions.isUpdatable.expression;\n\tconst isOnlyDynamicOnCurrentEntity =\n\t\t!isConstant(pathUpdatableExpression) &&\n\t\tstandardActionsContext.restrictions.isUpdatable.navigationExpression._type === \"Unresolvable\";\n\tconst numberOfSelectedContextProperty = !forContextMenu ? \"numberOfSelectedContexts\" : \"contextmenu/numberOfSelectedContexts\";\n\tconst updatableContextProperty = !forContextMenu ? \"updatableContexts\" : \"contextmenu/updatableContexts\";\n\tconst numberOfSelectedContexts = greaterOrEqual(pathInModel(numberOfSelectedContextProperty, \"internal\"), 1);\n\tconst numberOfUpdatableContexts = greaterOrEqual(length(pathInModel(updatableContextProperty, \"internal\")), 1);\n\tconst bIsDraftSupported = ModelHelper.isObjectPathDraftSupported(converterContext.getDataModelObjectPath());\n\tconst bDisplayMode = isInDisplayMode(converterContext);\n\n\t// numberOfUpdatableContexts needs to be added to the binding in case\n\t// 1. Update is dependent on current entity property (isOnlyDynamicOnCurrentEntity is true).\n\t// 2. The table is read only and draft enabled(like LR), in this case only active contexts can be mass edited.\n\t//    So, update depends on 'IsActiveEntity' value which needs to be checked runtime.\n\tconst runtimeBinding = ifElse(\n\t\tor(and(bDisplayMode, bIsDraftSupported), isOnlyDynamicOnCurrentEntity),\n\t\tand(numberOfSelectedContexts, numberOfUpdatableContexts),\n\t\tand(numberOfSelectedContexts)\n\t);\n\n\treturn and(massEditVisibility, ifElse(isOnlyDynamicOnCurrentEntity, runtimeBinding, and(runtimeBinding, pathUpdatableExpression)));\n}\n\n/**\n * Gets the binding expression for the 'enabled' property of the 'Cut' action.\n * @param cutVisibility\n * @param standardActionsContext\n * @param forContextMenu\n * @returns The binding expression for the 'enabled' property of the 'MassEdit' action.\n */\nexport function getCutEnablement(\n\tcutVisibility: BindingToolkitExpression<boolean>,\n\tstandardActionsContext: StandardActionsContext,\n\tforContextMenu: boolean\n): BindingToolkitExpression<boolean> {\n\tconst numberOfSelectedContextsPath = !forContextMenu ? \"numberOfSelectedContexts\" : \"contextmenu/numberOfSelectedContexts\";\n\tconst numberOfSelectedContexts = equal(pathInModel(numberOfSelectedContextsPath, \"internal\"), 1);\n\tconst cutableContextsPath = !forContextMenu ? \"cutableContexts\" : \"contextmenu/cutableContexts\";\n\n\tconst runtimeBinding = and(numberOfSelectedContexts, equal(length(pathInModel(cutableContextsPath, \"internal\"), true), 1));\n\treturn and(\n\t\tcutVisibility,\n\t\tor(\n\t\t\tstandardActionsContext.restrictions.isUpdatable.navigationExpression._type === \"Unresolvable\",\n\t\t\tstandardActionsContext.restrictions.isUpdatable.expression\n\t\t),\n\t\truntimeBinding\n\t);\n}\n\n/**\n * Gets the binding expression for the 'enabled' property of the 'Move up' and 'Move down' actions.\n * @param moveUpDownVisibility\n * @param standardActionsContext\n * @param forUp\n * @param forContextMenu\n * @returns The binding expression\n */\nfunction getMoveUpDownEnablement(\n\tmoveUpDownVisibility: BindingToolkitExpression<boolean>,\n\tstandardActionsContext: StandardActionsContext,\n\tforUp: boolean,\n\tforContextMenu = false\n): BindingToolkitExpression<boolean> {\n\tconst singleContextMovableUp = !forContextMenu ? \"singleContextMovableUp\" : \"contextmenu/singleContextMovableUp\";\n\tconst singleContextMovableDown = !forContextMenu ? \"singleContextMovableDown\" : \"contextmenu/singleContextMovableDown\";\n\tconst runtimeBinding = forUp\n\t\t? equal(pathInModel(singleContextMovableUp, \"internal\"), true)\n\t\t: equal(pathInModel(singleContextMovableDown, \"internal\"), true);\n\treturn and(\n\t\tmoveUpDownVisibility,\n\t\tor(\n\t\t\tstandardActionsContext.restrictions.isUpdatable.navigationExpression._type === \"Unresolvable\",\n\t\t\tstandardActionsContext.restrictions.isUpdatable.expression\n\t\t),\n\t\truntimeBinding\n\t);\n}\n\n/**\n * Tells if the table in template is in display mode.\n * @param converterContext\n * @param checkMultipleVisualization\n * @returns `true` if the table is in display mode\n */\nexport function isInDisplayMode(converterContext: ConverterContext<PageContextPathTarget>, checkMultipleVisualization = false): boolean {\n\tconst templateType = converterContext.getTemplateType();\n\tif (\n\t\ttemplateType === TemplateType.ListReport ||\n\t\ttemplateType === TemplateType.AnalyticalListPage ||\n\t\t(checkMultipleVisualization && converterContext.getManifestWrapper().hasMultipleVisualizations())\n\t) {\n\t\treturn true;\n\t}\n\t// updatable will be handled at the property level\n\treturn false;\n}\n"],"mappings":"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","ignoreList":[],"file":"StandardActions-dbg.js"}