{"version":3,"file":"HeaderAndFooterAction.js","names":["getIdentificationDataFieldForActions","entityType","isDeterminingAction","annotations","UI","Identification","filter","identificationDataField","$Type","Boolean","Determining","valueOf","ActionTarget","isBound","Core","OperationAvailable","_exports","getIdentificationDataFieldForActionsOrGroups","getIdentificationDataFieldForIBNActions","IMPORTANT_CRITICALITIES","getDeleteButtonVisibility","converterContext","deleteHidden","dataModelObjectPath","getDataModelObjectPath","visitedNavigationPaths","navigationProperties","map","navProp","name","deleteHiddenExpression","getExpressionFromAnnotation","path","singletonPathVisitor","getConvertedTypes","manifestWrapper","getManifestWrapper","viewLevel","getViewLevel","editableExpression","IsEditable","not","ifElse","undefined","and","equal","getDeleteButtonEnabled","isDeletable","isParentDeletable","entitySet","getEntitySet","isDraftRoot","ModelHelper","ret","constant","pathInModel","getEditButtonVisibility","rootUpdateHidden","rootConverterContext","updateHidden","rootEntitySet","isFCLEnabled","isFclEnabled","isDraftEnabled","rootUpdateHiddenExpression","getHiddenExpression","isDraftNode","updateHiddenExpression","notEditableExpression","resultantExpression","Draft","HasNoDraftForCurrentUser","getEditButtonEnabled","updateRestrictions","isSticky","editActionName","isEntitySet","Common","DraftRoot","EditAction","Session","StickySessionSupported","editActionAnnotationPath","getAbsoluteAnnotationPath","editAction","resolveAbsolutePath","target","compileExpression","getEnabledForAnnotationAction","getHeaderDefaultActions","sContextPath","getContextPath","rootEntitySetPath","getRootEntitySetPath","getConverterContextFor","getEntityType","rootEntityType","stickySessionSupported","getStickySession","draftRoot","getDraftRoot","draftNode","getDraftNode","entityDeleteRestrictions","Capabilities","DeleteRestrictions","isUpdateHidden","isPathDeletable","pathVisitor","navigationPaths","parentEntitySetDeletable","identificationDataFieldForActions","copyDataField","getCopyAction","dataField","dataFieldIsCopyAction","headerDataFieldForActions","headerActions","push","type","ActionType","DraftActions","key","updatablePropertyPath","UpdateRestrictions","Updatable","CollaborationAvatars","computeActionsAndActionGroups","Primary","visible","enabled","Deletable","getDeleteHidden","Secondary","parentEntityDeleteEnabled","getDataFieldAnnotationAction","Copy","text","Label","toString","Library","getResourceBundleFor","getText","headerDataFieldForIBNActions","criticality","Criticality","includes","forEach","RequiresContext","Error","Inline","oNavigationParams","semanticObjectMapping","getSemanticObjectMapping","Mapping","DataFieldForIntentBasedNavigation","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","buttonType","ButtonType","Ghost","Hidden","NavigationAvailable","KeyHelper","generateKeyFromDataField","isNavigable","press","fn","SemanticObject","Action","customData","semanticObject","action","getHiddenHeaderActions","hiddenActions","Default","getFooterDefaultActions","entitySetDraftRoot","term","conditionSave","SaveAction","conditionApply","conditionCancel","DiscardAction","footerDataFieldForActions","footerActions","entityTypeName","DefaultApply","position","placement","Placement","End","isVisibleExp","isVisible","DataFieldForAction","prioritizeCriticality","headerDataFieldForActionsOrGroups","Menu","id","menu","Actions"],"sources":["./HeaderAndFooterAction.ts"],"sourcesContent":["import type { Action, EntityType, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type {\n\tDataFieldForAction,\n\tDataFieldForActionGroupTypes,\n\tDataFieldForActionTypes,\n\tDataFieldForIntentBasedNavigationTypes,\n\tDeleteHidden,\n\tUpdateHidden\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tfn,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tnot,\n\tpathInModel\n} from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { AnnotationAction, BaseAction, DataFieldForActionOrActionGroup } from \"sap/fe/core/converters/controls/Common/Action\";\nimport {\n\tButtonType,\n\tdataFieldIsCopyAction,\n\tgetCopyAction,\n\tgetEnabledForAnnotationAction,\n\tgetSemanticObjectMapping\n} from \"sap/fe/core/converters/controls/Common/Action\";\nimport { Placement } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { KeyHelper } from \"sap/fe/core/converters/helpers/Key\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { isEntitySet } from \"sap/fe/core/helpers/TypeGuards\";\nimport { isPathDeletable } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { isVisible } from \"sap/fe/core/templating/UIFormatters\";\nimport Library from \"sap/ui/core/Lib\";\nimport { Draft, UI, singletonPathVisitor } from \"../../helpers/BindingHelper\";\nimport type ConverterContext from \"../ConverterContext\";\nimport { ActionType } from \"../ManifestSettings\";\n\n/**\n * Retrieves all the DataFieldForActions from the Identification annotation\n * They must be\n * - Either linked to an unbound action or to an action which has an OperationAvailable that is not set to false statically.\n * @param entityType The current entity type\n * @param isDeterminingAction The flag which denotes whether or not the action is a determining action\n * @returns An array of DataFieldForAction respecting the input parameter 'isDeterminingAction'\n */\nexport function getIdentificationDataFieldForActions(entityType: EntityType, isDeterminingAction: boolean): DataFieldForActionTypes[] {\n\treturn (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn identificationDataField.$Type === UIAnnotationTypes.DataFieldForAction &&\n\t\t\tBoolean(identificationDataField.Determining?.valueOf()) === isDeterminingAction &&\n\t\t\t(identificationDataField.ActionTarget?.isBound?.valueOf() !== true ||\n\t\t\t\tidentificationDataField?.ActionTarget?.annotations?.Core?.OperationAvailable?.valueOf() !== false)\n\t\t\t? true\n\t\t\t: false;\n\t}) || []) as DataFieldForActionTypes[];\n}\n\n/**\n * Retrieves all the data field for actions for the identification annotation\n * They must be\n * - Either linked to an Unbound action or to an action which has an OperationAvailable that is not set to false statically.\n * @param entityType The current entity type\n * @param isDeterminingAction The flag which denotes whether or not the action is a determining action\n * @returns An array of DataField for action respecting the input parameter 'isDeterminingAction'\n */\nexport function getIdentificationDataFieldForActionsOrGroups(\n\tentityType: EntityType,\n\tisDeterminingAction: boolean\n): DataFieldForActionOrActionGroup[] {\n\treturn (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn (identificationDataField.$Type === UIAnnotationTypes.DataFieldForAction &&\n\t\t\tBoolean(identificationDataField.Determining?.valueOf()) === isDeterminingAction &&\n\t\t\t(identificationDataField.ActionTarget?.isBound?.valueOf() !== true ||\n\t\t\t\tidentificationDataField?.ActionTarget?.annotations?.Core?.OperationAvailable?.valueOf() !== false)) ||\n\t\t\tidentificationDataField.$Type === UIAnnotationTypes.DataFieldForActionGroup\n\t\t\t? true\n\t\t\t: false;\n\t}) || []) as DataFieldForActionOrActionGroup[];\n}\n\n/**\n * Retrieve all the IBN actions for the identification annotation.\n * @param entityType The current entitytype\n * @param isDeterminingAction Whether or not the action should be determining\n * @returns An array of data field for action respecting the isDeterminingAction property.\n */\nfunction getIdentificationDataFieldForIBNActions(\n\tentityType: EntityType,\n\tisDeterminingAction: boolean\n): DataFieldForIntentBasedNavigationTypes[] {\n\treturn (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn identificationDataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\tBoolean(identificationDataField.Determining?.valueOf()) === isDeterminingAction\n\t\t\t? true\n\t\t\t: false;\n\t}) || []) as DataFieldForIntentBasedNavigationTypes[];\n}\n\nexport const IMPORTANT_CRITICALITIES = [\n\t\"UI.CriticalityType/VeryPositive\",\n\t\"UI.CriticalityType/Positive\",\n\t\"UI.CriticalityType/Negative\",\n\t\"UI.CriticalityType/VeryNegative\"\n];\n\n/**\n * Method to determine the 'visible' property binding for the Delete button on an object page.\n * @param converterContext Instance of the converter context.\n * @param deleteHidden The value of the UI.DeleteHidden annotation on the entity set / type.\n * @returns The binding expression for the 'visible' property of the Delete button.\n */\nexport function getDeleteButtonVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tdeleteHidden: DeleteHidden | undefined\n): BindingToolkitExpression<boolean> {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath(),\n\t\tvisitedNavigationPaths = dataModelObjectPath.navigationProperties.map((navProp) => navProp.name),\n\t\t// Set absolute binding path for Singleton references, otherwise the configured annotation path itself.\n\t\t// For e.g. /com.sap.namespace.EntityContainer/Singleton/Property to /Singleton/Property\n\t\tdeleteHiddenExpression = getExpressionFromAnnotation(deleteHidden, visitedNavigationPaths, false, (path: string) =>\n\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), [])\n\t\t), // default to false\n\t\tmanifestWrapper = converterContext.getManifestWrapper(),\n\t\tviewLevel = manifestWrapper.getViewLevel(),\n\t\t// Delete button is visible\n\t\t// In OP \t\t-->  when not in edit mode\n\t\t// In sub-OP \t-->  when in edit mode\n\t\teditableExpression: BindingToolkitExpression<boolean> = viewLevel > 1 ? UI.IsEditable : not(UI.IsEditable);\n\n\t// If UI.DeleteHidden annotation on entity set or type is either not defined or explicitly set to false,\n\t// Delete button is visible based on editableExpression.\n\t// else,\n\t// Delete button is visible based on both annotation path and editableExpression.\n\treturn ifElse(\n\t\tdeleteHidden === undefined || deleteHidden.valueOf() === false,\n\t\teditableExpression,\n\t\tand(editableExpression, equal(deleteHiddenExpression, false))\n\t);\n}\n\n/**\n * Method to determine the 'enabled' property binding for the Delete button on an object page.\n * @param isDeletable The delete restriction configured\n * @param isParentDeletable The delete restriction configured on the parent entity\n * @param converterContext\n * @returns The binding expression for the 'enabled' property of the Delete button\n */\nexport function getDeleteButtonEnabled(\n\tisDeletable: PropertyAnnotationValue<Boolean> | undefined,\n\tisParentDeletable: BindingToolkitExpression<boolean>,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): BindingToolkitExpression<boolean> {\n\tconst entitySet = converterContext.getEntitySet(),\n\t\tisDraftRoot = ModelHelper.isDraftRoot(entitySet);\n\n\tlet ret = ifElse(\n\t\tisParentDeletable !== undefined,\n\t\tisParentDeletable,\n\t\tifElse(isDeletable !== undefined, equal(getExpressionFromAnnotation(isDeletable), true), constant(true))\n\t);\n\n\t// delete should be disabled for Locked objects\n\tret = isDraftRoot ? and(ret, not(pathInModel(\"DraftAdministrativeData/InProcessByUser\"))) : ret;\n\n\treturn ret;\n}\n\n/**\n * Method to determine the 'visible' property binding for the Edit button on an object page.\n * @param converterContext Instance of the converter context.\n * @param rootUpdateHidden The value of the UI.UpdateHidden annotation on the entity set / type.\n * @param rootConverterContext\n * @param updateHidden\n * @param viewLevel\n * @returns The binding expression for the 'visible' property of the Edit button.\n */\nexport function getEditButtonVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\trootUpdateHidden: UpdateHidden | undefined,\n\trootConverterContext: ConverterContext<PageContextPathTarget>,\n\tupdateHidden?: UpdateHidden | undefined,\n\tviewLevel?: number | undefined\n): BindingToolkitExpression<boolean> {\n\tconst rootEntitySet = rootConverterContext?.getEntitySet(),\n\t\tentitySet = converterContext.getEntitySet(),\n\t\tisFCLEnabled = converterContext.getManifestWrapper().isFclEnabled();\n\tlet isDraftEnabled;\n\tconst rootUpdateHiddenExpression = getHiddenExpression(rootConverterContext, rootUpdateHidden);\n\tif (viewLevel && viewLevel > 1) {\n\t\t// if viewlevel > 1 check if node is draft enabled\n\t\tisDraftEnabled = ModelHelper.isDraftNode(entitySet);\n\t} else {\n\t\tisDraftEnabled = ModelHelper.isDraftRoot(rootEntitySet);\n\t}\n\tconst updateHiddenExpression = getHiddenExpression(rootConverterContext, updateHidden);\n\n\tconst notEditableExpression: BindingToolkitExpression<boolean> = not(UI.IsEditable);\n\n\t// If UI.UpdateHidden annotation on entity set or type is either not defined or explicitly set to false,\n\t// Edit button is visible in display mode.\n\t// else,\n\t// Edit button is visible based on both annotation path and in display mode.\n\tconst resultantExpression: BindingToolkitExpression<boolean> = ifElse(\n\t\t(viewLevel as number) > 1,\n\t\tifElse(\n\t\t\tupdateHidden === undefined || updateHidden.valueOf() === false,\n\t\t\tand(\n\t\t\t\tnotEditableExpression,\n\t\t\t\tequal(pathInModel(\"rootEditVisible\", \"internal\"), true),\n\t\t\t\tifElse(isFCLEnabled, equal(pathInModel(\"/showEditButton\", \"fclhelper\"), true), true)\n\t\t\t),\n\t\t\tand(\n\t\t\t\tnotEditableExpression,\n\t\t\t\tequal(updateHiddenExpression, false),\n\t\t\t\tequal(pathInModel(\"rootEditVisible\", \"internal\"), true),\n\t\t\t\tifElse(isFCLEnabled, equal(pathInModel(\"/showEditButton\", \"fclhelper\"), true), true)\n\t\t\t)\n\t\t),\n\t\tifElse(\n\t\t\trootUpdateHidden === undefined || rootUpdateHidden.valueOf() === false,\n\t\t\tnotEditableExpression,\n\t\t\tand(notEditableExpression, equal(rootUpdateHiddenExpression, false))\n\t\t)\n\t);\n\treturn ifElse(isDraftEnabled, and(resultantExpression, Draft.HasNoDraftForCurrentUser), resultantExpression);\n}\n\nexport function getHiddenExpression(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tupdateHidden: UpdateHidden | undefined\n): BindingToolkitExpression<boolean> {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath(),\n\t\tvisitedNavigationPaths = dataModelObjectPath.navigationProperties.map((navProp) => navProp.name),\n\t\t// Set absolute binding path for Singleton references, otherwise the configured annotation path itself.\n\t\t// For e.g. /com.sap.namespace.EntityContainer/Singleton/Property to /Singleton/Property\n\t\tupdateHiddenExpression = getExpressionFromAnnotation(updateHidden, visitedNavigationPaths, false, (path: string) =>\n\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), visitedNavigationPaths)\n\t\t);\n\treturn updateHiddenExpression;\n}\n/**\n * Method to determine the 'enabled' property binding for the Edit button on an object page.\n * @param converterContext Instance of the converter context.\n * @param updateRestrictions\n * @param viewLevel\n * @returns The binding expression for the 'enabled' property of the Edit button.\n */\nexport function getEditButtonEnabled(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tupdateRestrictions?: PropertyAnnotationValue<Boolean>,\n\tviewLevel?: number | undefined\n): CompiledBindingToolkitExpression {\n\tconst entitySet = converterContext.getEntitySet(),\n\t\tisDraftRoot = ModelHelper.isDraftRoot(entitySet),\n\t\tisSticky = ModelHelper.isSticky(entitySet);\n\tlet editActionName: string | undefined;\n\tif (isDraftRoot && isEntitySet(entitySet)) {\n\t\teditActionName = entitySet.annotations.Common?.DraftRoot?.EditAction as string;\n\t} else if (isSticky && isEntitySet(entitySet)) {\n\t\teditActionName = entitySet.annotations.Session?.StickySessionSupported?.EditAction as string;\n\t}\n\tif (editActionName) {\n\t\tconst editActionAnnotationPath = converterContext.getAbsoluteAnnotationPath(editActionName);\n\t\tconst editAction = converterContext.resolveAbsolutePath(editActionAnnotationPath).target as Action | null;\n\t\tif (editAction?.annotations?.Core?.OperationAvailable === null) {\n\t\t\t// We disabled action advertisement but kept it in the code for the time being\n\t\t\t//return \"{= ${#\" + editActionName + \"} ? true : false }\";\n\t\t} else if ((viewLevel as number) > 1) {\n\t\t\t// Edit button is enabled based on the update restrictions of the sub-OP\n\t\t\tif (updateRestrictions !== undefined) {\n\t\t\t\treturn compileExpression(\n\t\t\t\t\tand(\n\t\t\t\t\t\tequal(getExpressionFromAnnotation(updateRestrictions), true),\n\t\t\t\t\t\tequal(pathInModel(\"rootEditEnabled\", \"internal\"), true)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn compileExpression(equal(pathInModel(\"rootEditEnabled\", \"internal\"), true));\n\t\t\t}\n\t\t} else {\n\t\t\treturn getEnabledForAnnotationAction(converterContext, editAction ?? undefined);\n\t\t}\n\t}\n\treturn \"true\";\n}\n\nexport function getHeaderDefaultActions(converterContext: ConverterContext<PageContextPathTarget>): BaseAction[] {\n\tconst sContextPath = converterContext.getContextPath();\n\tconst rootEntitySetPath = ModelHelper.getRootEntitySetPath(sContextPath);\n\tconst rootConverterContext = converterContext.getConverterContextFor<PageContextPathTarget>(\"/\" + rootEntitySetPath);\n\tconst entitySet = converterContext.getEntitySet(),\n\t\tentityType = converterContext.getEntityType(),\n\t\trootEntitySet = rootConverterContext.getEntitySet(),\n\t\trootEntityType = rootConverterContext.getEntityType(),\n\t\tstickySessionSupported = ModelHelper.getStickySession(rootEntitySet), //for sticky app\n\t\tdraftRoot = ModelHelper.getDraftRoot(rootEntitySet), //entitySet && entitySet.annotations.Common?.DraftRoot,\n\t\tdraftNode = ModelHelper.getDraftNode(rootEntitySet),\n\t\tentityDeleteRestrictions = entitySet && entitySet.annotations?.Capabilities?.DeleteRestrictions,\n\t\trootUpdateHidden = ModelHelper.isUpdateHidden(rootEntitySet, rootEntityType),\n\t\tupdateHidden = rootEntitySet && isEntitySet(rootEntitySet) && rootUpdateHidden?.valueOf(),\n\t\tdataModelObjectPath = converterContext.getDataModelObjectPath(),\n\t\tisParentDeletable = isPathDeletable(dataModelObjectPath, {\n\t\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), navigationPaths)\n\t\t}),\n\t\tparentEntitySetDeletable = isParentDeletable ? compileExpression(isParentDeletable) : isParentDeletable,\n\t\tidentificationDataFieldForActions = getIdentificationDataFieldForActionsOrGroups(converterContext.getEntityType(), false);\n\n\tconst copyDataField =\n\t\tconverterContext.getManifestWrapper().getViewLevel() === 1\n\t\t\t? getCopyAction(\n\t\t\t\t\tidentificationDataFieldForActions.filter((dataField) => {\n\t\t\t\t\t\tif (dataField.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\t\t\t\t\treturn dataFieldIsCopyAction(dataField);\n\t\t\t\t\t\t}\n\t\t\t\t\t}) as DataFieldForAction[]\n\t\t\t  )\n\t\t\t: undefined;\n\n\tconst headerDataFieldForActions = identificationDataFieldForActions.filter((dataField) => {\n\t\treturn !dataFieldIsCopyAction(dataField as DataFieldForActionTypes);\n\t});\n\n\t// Initialize actions and start with draft actions if available since they should appear in the first\n\t// leftmost position in the actions area of the OP header\n\t// This is more like a placeholder than a single action, since this controls not only the templating of\n\t// the button for switching between draft and active document versions but also the controls for\n\t// the collaborative draft fragment.\n\tconst headerActions: BaseAction[] = [];\n\tif (isEntitySet(entitySet) && draftRoot?.EditAction && updateHidden !== true) {\n\t\theaderActions.push({ type: ActionType.DraftActions, key: \"DraftActions\" });\n\t}\n\n\tconst viewLevel = converterContext.getManifestWrapper().getViewLevel();\n\tconst updatablePropertyPath = viewLevel > 1 ? entitySet?.annotations.Capabilities?.UpdateRestrictions?.Updatable : undefined;\n\tif (draftRoot || draftNode) {\n\t\theaderActions.push({ type: ActionType.CollaborationAvatars, key: \"CollaborationAvatars\" });\n\t}\n\t// Then add the \"Critical\" DataFieldForActions and DataFieldForActionGroups\n\t// Prioritizes actions and action groups that have the Criticality annotation, placing them before those without the annotation\n\tcomputeActionsAndActionGroups(headerActions, true, headerDataFieldForActions, converterContext);\n\n\t// Then the edit action if it exists\n\tif ((draftRoot?.EditAction || stickySessionSupported?.EditAction) && updateHidden !== true) {\n\t\theaderActions.push({\n\t\t\ttype: ActionType.Primary,\n\t\t\tkey: \"EditAction\",\n\t\t\tvisible: compileExpression(\n\t\t\t\tgetEditButtonVisibility(\n\t\t\t\t\tconverterContext,\n\t\t\t\t\trootUpdateHidden,\n\t\t\t\t\trootConverterContext,\n\t\t\t\t\tModelHelper.isUpdateHidden(entitySet, entityType),\n\t\t\t\t\tviewLevel\n\t\t\t\t)\n\t\t\t),\n\t\t\tenabled: getEditButtonEnabled(rootConverterContext, updatablePropertyPath, viewLevel)\n\t\t});\n\t}\n\t// Then the delete action if we're not statically not deletable\n\tif (\n\t\t(parentEntitySetDeletable && parentEntitySetDeletable !== \"false\") ||\n\t\t(entityDeleteRestrictions?.Deletable?.valueOf() !== false && parentEntitySetDeletable !== \"false\")\n\t) {\n\t\tconst deleteHidden = ModelHelper.getDeleteHidden(entitySet, entityType);\n\t\theaderActions.push({\n\t\t\ttype: ActionType.Secondary,\n\t\t\tkey: \"DeleteAction\",\n\t\t\tvisible: compileExpression(getDeleteButtonVisibility(converterContext, deleteHidden)),\n\t\t\tenabled: compileExpression(getDeleteButtonEnabled(entityDeleteRestrictions?.Deletable, isParentDeletable, converterContext)),\n\t\t\tparentEntityDeleteEnabled: parentEntitySetDeletable\n\t\t});\n\t}\n\n\tif (copyDataField) {\n\t\theaderActions.push({\n\t\t\t...getDataFieldAnnotationAction(copyDataField, converterContext),\n\t\t\ttype: ActionType.Copy,\n\t\t\ttext: copyDataField.Label?.toString() ?? Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"C_COMMON_COPY\")\n\t\t});\n\t}\n\n\tconst headerDataFieldForIBNActions = getIdentificationDataFieldForIBNActions(converterContext.getEntityType(), false);\n\n\theaderDataFieldForIBNActions\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn !IMPORTANT_CRITICALITIES.includes(criticality!);\n\t\t})\n\t\t.forEach((dataField) => {\n\t\t\tif (dataField.RequiresContext?.valueOf() === true) {\n\t\t\t\tthrow new Error(`RequiresContext property should not be true for header IBN action : ${dataField.Label}`);\n\t\t\t}\n\t\t\tif (dataField.Inline?.valueOf() === true) {\n\t\t\t\tthrow new Error(`Inline property should not be true for header IBN action : ${dataField.Label}`);\n\t\t\t}\n\t\t\tconst oNavigationParams = {\n\t\t\t\tsemanticObjectMapping: getSemanticObjectMapping(dataField.Mapping)\n\t\t\t};\n\n\t\t\theaderActions.push({\n\t\t\t\ttype: ActionType.DataFieldForIntentBasedNavigation,\n\t\t\t\ttext: dataField.Label?.toString(),\n\t\t\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\t\t\tbuttonType: ButtonType.Ghost,\n\t\t\t\tvisible: compileExpression(\n\t\t\t\t\tand(\n\t\t\t\t\t\tnot(equal(getExpressionFromAnnotation(dataField.annotations?.UI?.Hidden), true)),\n\t\t\t\t\t\tnot(equal(pathInModel(\"shellNavigationNotAvailable\", \"internal\"), true))\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tenabled:\n\t\t\t\t\tdataField.NavigationAvailable !== undefined\n\t\t\t\t\t\t? compileExpression(equal(getExpressionFromAnnotation(dataField.NavigationAvailable), true))\n\t\t\t\t\t\t: true,\n\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\tisNavigable: true,\n\t\t\t\tpress: compileExpression(\n\t\t\t\t\tfn(\"._intentBasedNavigation.navigate\", [\n\t\t\t\t\t\tgetExpressionFromAnnotation(dataField.SemanticObject),\n\t\t\t\t\t\tgetExpressionFromAnnotation(dataField.Action),\n\t\t\t\t\t\toNavigationParams\n\t\t\t\t\t])\n\t\t\t\t),\n\t\t\t\tcustomData: compileExpression({\n\t\t\t\t\tsemanticObject: getExpressionFromAnnotation(dataField.SemanticObject),\n\t\t\t\t\taction: getExpressionFromAnnotation(dataField.Action)\n\t\t\t\t})\n\t\t\t} as AnnotationAction);\n\t\t});\n\t// Finally the non critical DataFieldForActions and DataFieldForActionGroups\n\tcomputeActionsAndActionGroups(headerActions, false, headerDataFieldForActions, converterContext);\n\n\treturn headerActions;\n}\n\nexport function getHiddenHeaderActions(converterContext: ConverterContext<PageContextPathTarget>): BaseAction[] {\n\tconst entityType = converterContext.getEntityType();\n\tconst hiddenActions = (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn identificationDataField?.annotations?.UI?.Hidden?.valueOf() === true;\n\t}) || []) as DataFieldForActionTypes[];\n\treturn hiddenActions.map((dataField) => {\n\t\treturn {\n\t\t\ttype: ActionType.Default,\n\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField)\n\t\t};\n\t});\n}\n\nexport function getFooterDefaultActions(viewLevel: number, converterContext: ConverterContext<PageContextPathTarget>): BaseAction[] {\n\tconst entitySet = converterContext.getEntitySet();\n\tconst entityType = converterContext.getEntityType();\n\tconst stickySessionSupported = ModelHelper.getStickySession(entitySet), //for sticky app\n\t\tentitySetDraftRoot =\n\t\t\tisEntitySet(entitySet) &&\n\t\t\t(entitySet.annotations.Common?.DraftRoot?.term ?? entitySet.annotations.Session?.StickySessionSupported?.term),\n\t\tconditionSave = Boolean(\n\t\t\tentitySetDraftRoot === CommonAnnotationTerms.DraftRoot || (stickySessionSupported && stickySessionSupported?.SaveAction)\n\t\t),\n\t\tconditionApply = viewLevel > 1,\n\t\tconditionCancel = Boolean(\n\t\t\tentitySetDraftRoot === CommonAnnotationTerms.DraftRoot || (stickySessionSupported && stickySessionSupported?.DiscardAction)\n\t\t);\n\n\t// Retrieve all determining actions\n\tconst footerDataFieldForActions = getIdentificationDataFieldForActions(converterContext.getEntityType(), true);\n\n\t// First add the \"Critical\" DataFieldForActions\n\tconst footerActions: BaseAction[] = footerDataFieldForActions\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn criticality && IMPORTANT_CRITICALITIES.includes(criticality);\n\t\t})\n\t\t.map((dataField) => {\n\t\t\treturn getDataFieldAnnotationAction(dataField, converterContext);\n\t\t});\n\n\t// Then the save action if it exists\n\tif (entitySet?.entityTypeName === entityType?.fullyQualifiedName && conditionSave) {\n\t\tfooterActions.push({ type: ActionType.Primary, key: \"SaveAction\" });\n\t}\n\n\t// Then the apply action if it exists\n\tif (conditionApply) {\n\t\tfooterActions.push({ type: ActionType.DefaultApply, key: \"ApplyAction\" });\n\t}\n\n\t// Then the non critical DataFieldForActions\n\tfooterDataFieldForActions\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn criticality && !IMPORTANT_CRITICALITIES.includes(criticality);\n\t\t})\n\t\t.forEach((dataField) => {\n\t\t\tfooterActions.push(getDataFieldAnnotationAction(dataField, converterContext));\n\t\t});\n\n\t// Then the cancel action if it exists\n\tif (conditionCancel) {\n\t\tfooterActions.push({\n\t\t\ttype: ActionType.Secondary,\n\t\t\tkey: \"CancelAction\",\n\t\t\tposition: { placement: Placement.End }\n\t\t});\n\t}\n\treturn footerActions;\n}\n\nfunction getDataFieldAnnotationAction(\n\tdataField: DataFieldForActionTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationAction {\n\tconst isVisibleExp = isVisible(dataField);\n\treturn {\n\t\ttype: ActionType.DataFieldForAction,\n\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\tvisible: compileExpression(isVisibleExp),\n\t\tenabled: getEnabledForAnnotationAction(converterContext, dataField.ActionTarget),\n\t\tisNavigable: true\n\t};\n}\n\n/**\n * Adds actions and action groups to the headerActions array, prioritizing them according to their criticality.\n * @param headerActions Array with all the current header actions in it\n * @param prioritizeCriticality Flag to determine the priority of the criticality action or actionGroups inside headerActions\n * @param headerDataFieldForActionsOrGroups All actions and action groups from the identification annotation with CopyAction filtered out\n * @param converterContext Instance of the converter context\n */\nfunction computeActionsAndActionGroups(\n\theaderActions: BaseAction[],\n\tprioritizeCriticality: boolean,\n\theaderDataFieldForActionsOrGroups: (DataFieldForActionTypes | DataFieldForActionGroupTypes)[],\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): void {\n\theaderDataFieldForActionsOrGroups\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn prioritizeCriticality ? IMPORTANT_CRITICALITIES.includes(criticality!) : !IMPORTANT_CRITICALITIES.includes(criticality!);\n\t\t})\n\t\t.forEach((dataField) => {\n\t\t\tif (dataField.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\t\theaderActions.push(getDataFieldAnnotationAction(dataField, converterContext));\n\t\t\t} else if (dataField.$Type === UIAnnotationTypes.DataFieldForActionGroup) {\n\t\t\t\theaderActions.push({\n\t\t\t\t\ttype: ActionType.Menu,\n\t\t\t\t\ttext: dataField.Label as string,\n\t\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\t\tid: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\t\tvisible: compileExpression(not(equal(getExpressionFromAnnotation(dataField.annotations?.UI?.Hidden), true))),\n\t\t\t\t\tmenu: dataField.Actions.map((action) =>\n\t\t\t\t\t\tgetDataFieldAnnotationAction(action as DataFieldForActionTypes, converterContext)\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n}\n"],"mappings":"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","ignoreList":[]}