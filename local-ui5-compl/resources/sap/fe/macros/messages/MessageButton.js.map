{"version":3,"file":"MessageButton.js","names":["MessageButton","_dec","defineUI5Class","_dec2","aggregation","type","multiple","singularName","_dec3","event","_class","_class2","_Button","id","settings","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","sGeneralGroupText","sViewId","sLastActionText","_inheritsLoose","_proto","prototype","init","Button","apply","attachPress","handleMessagePopoverPress","oMessagePopover","MessagePopover","oItemBinding","getBinding","attachChange","_setMessageData","messageButtonId","getId","addCustomData","CustomData","key","value","attachModelContextChange","_applyFiltersAndSort","bind","attachActiveTitlePress","_activeTitlePress","oEvent","toggle","getSource","_applyGroupingAsync","async","oView","aWaitForData","oViewBindingContext","getBindingContext","_findTablesRelatedToMessages","view","oRes","aMessages","getContexts","map","oContext","getObject","oViewContext","oObjectPage","getContent","messageHandling","getVisibleSectionsFromObjectPageLayout","forEach","oSection","getSubSections","oSubSection","findElements","oElem","isA","i","length","oRowBinding","getRowBinding","sElemeBindingPath","getPath","target","indexOf","push","table","subsection","oTables","_oTable","oMDCTable","oSubsection","setBindingContext","isLengthFinal","Promise","resolve","attachEventOnce","waitForGroupingApplied","setTimeout","_applyGrouping","all","getModel","checkMessages","err","Log","error","oObjectPageLayout","_getObjectPageLayout","messages","getItems","section","enableBinding","_checkControlIdInSections","_fnEnableBindings","viewId","_getViewId","UI5Element","getElementById","uIModel","setProperty","undefined","_getTableRefErrorContext","oTable","oModel","getProperty","sRefErrorContextPath","replace","getContext","_updateInternalModel","tableRowContext","rowIndex","tableTargetColProperty","messageObject","isCreationRow","temp","targetColProperty","model","context","aValidMessageIds","Messaging","getMessageModel","getData","message","aObsoleteMessagelIds","Object","keys","filter","internalMessageId","obsoleteId","assign","_setGroupLabelForTransientMsg","sActionName","Library","getResourceBundleFor","getText","setGroupName","_computeMessageGroupAndSubTitle","subSection","elements","hasMultipleSubSections","actionName","resourceModel","getResourceModel","detachChange","setSectionNameInGroup","element","targetTableInfo","l","targetedControl","isBackEndMessage","RegExp","test","getTargets","getParent","rowBinding","fnCallbackSetGroupName","obj","getTableColumnDataAndSetSubtile","oTargetTableInfo","subTitle","setSubtitle","setActiveTitle","oTableRowContext","isInactive","_formatMessageDescription","sTableTargetColName","getIndex","sTableTargetColProperty","isTargetedControlOrphan","bIsOrphanElement","_getMdcTable","tableHeader","getHeader","targetColumnIndex","_getTableColumnIndex","getColumns","getPropertyKey","_getTableRow","_getTableRowIndex","oTableRowBindingContexts","getCurrentContexts","messageSubtitle","getMessageSubtitle","getValueState","includeTableGroupName","_checkMergeLogicForMessageGrouping","sectionBasedGroupName","createSectionGroupName","messageTargetProperty","split","pop","fireActiveTitlePress","item","bIncludeTableGroupName","singleSubsectionInPageLayout","getViewData","sectionLayout","multiSubsectionInTabLayout","block","getBlocks","content","getAggregation","blocks","getMainContent","Function","aSubSections","j","k","aVisibleSections","bIsGeneralGroupName","shouldBreak","oMessageObject","aControls","getControlFromMessageRelatingToSubSection","oTargetedControl","persistent","getGroupName","_findTargetForMessage","oMetaModel","getMetaModel","contextPath","getMetaPath","oContextPathMetadata","$kind","_fnEnableSubSectionBinding","getMoreBlocks","subBlock","getActions","actions","aSections","iSection","iSubSection","oAllBlocks","_findMessageGroupAfterRebinding","attachDataReceived","sControlId","oControl","View","_setLongtextUrlDescription","sMessageDescriptionContent","oDiagnosisTitle","setAsyncDescriptionHandler","config","sOldDescription","sLongTextUrl","getLongtextUrl","jQuery","ajax","url","success","data","sDiagnosisText","getHtmlText","setDescription","promise","sError","reject","processTableColumnProperties","tableColProperty","rowInformation","tableColBindingContextTextAnnotation","getTableColBindingContextForTextAnnotation","tableColTextAnnotationPath","tableColTextArrangement","labelWithValue","getTableColValue","computeColumnInfo","tableTargetColName","msgObj","colFromTableSettings","fetchColumnInfo","columnInfo","availability","getType","join","_navigationConfigured","label","getTableColumnVisibilityInfo","_ref","visibility","fieldsAffectedTitle","FormattedText","htmlText","fieldAffectedText","Array","isArray","diagnosisTitle","uIMessageDescription","description","diagnosisText","messageDescriptionContent","handleNoMessages","setVisible","fireEvent","iMessageLength","clearTimeout","_setMessageDataTimeout","sIcon","oMessages","oMessageCount","Error","Warning","Success","Information","oResourceBundle","sButtonType","ButtonType","Default","sMessageKey","sTooltipText","sMessageText","toString","MessageType","Negative","Critical","Neutral","totalNumberOfMessages","setText","setTooltip","setIcon","setType","oPageReady","getController","pageReady","waitPageReady","navigateBack","oInternalModelContext","oItem","getParameter","oMessage","bIsBackendMessage","sSectionTitle","_defaultFocus","mdcTable","focusInfo","preventScroll","targetInfo","focus","oTargetMdcTable","controlIds","controlId","control","parentControl","includes","reduce","acc","val","_navigateFromMessageToSectionTableInIconTabBarMode","oRefErrorContext","oRefError","_setFocusOnTargetField","targetMdcTable","iRowIndex","aTargetMdcTableRow","_getMdcTableRows","iFirstVisibleRow","_getGridTable","getFirstVisibleRow","oTargetRow","oTargetCell","getTargetCell","setFocusToControl","errorProperty","_routing","navigateForwardToContext","scrollToIndex","iNewFirstVisibleRow","bScrollNeeded","oWaitControlIdAdded","Core","attachEvent","focusOnTargetField","focusOnMessageTargetControl","sections","getSections","sectionWithTheControl","find","_navigateFromMessageToSectionInIconTabBarMode","targetRow","getControlIds","hasNonEditableField","some","getEditable","isControlInTable","elem","aAllViewElements","aErroneousControls","getDomRef","aNotTableErroneousControls","ColumnListItem","getMetadata","getName","oTargetField","getContentEdit","_getMessageRank","aElements","aAllElements","sectionRank","_fnFilterUponId","getControlId","getVisible","hasOwnProperty","sectionName","getTitle","subSectionName","getPersistent","_filterOutMessagesInDialog","fnTest","aControlIds","isMessageOutOfParameterDialog","Filter","path","caseSensitive","_getFilterToHideBackendMessageOnErrorValidation","getIdsOfFielsdWithErrorValidation","validation","match","filters","operator","FilterOperator","EQ","value1","and","oValidationFilters","oValidationAndContextFilter","oFilters","sPath","oSorter","oDialogFilter","objectPageLayoutSections","aUserDefinedFilter","aCustomFilters","value2","oBindingContext","messageButtonHelper","getCheckControlInViewFilter","StartsWith","oValidationContextDialogFilters","Sorter","obj1","obj2","rankA","rankB","sort","_getSectionBySectionTitle","bUseIconTabBar","getUseIconTabBar","sSelectedSectionId","getSelectedSection","setSelectedSection","oTableContext","oOPContext","bShouldWaitForTableRefresh","oElement","oParentElement","oMdcTable","oTableRow","getTable","findIndex","getTargetCellIndex","elt","getCells","cell","getTargetColumnIndex","targetElement","targetCellIndex","targetCellId","tableColumns","column","getCreationTemplate","search","component","sap","ui","require","navObject","getOwnerComponentFor","getNavigation","subOPConfigured","navConfigured","detail","route","getRowSettings","getRowActions","messagePopover","fnFocus","isOpen","fnOnClose","detachEvent","close","warning","escape","String","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./MessageButton.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineUI5Class, event } from \"sap/fe/base/ClassSupport\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type { TargetTableInfoType } from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type FieldWrapper from \"sap/fe/macros/controls/FieldWrapper\";\nimport type FieldAPI from \"sap/fe/macros/field/FieldAPI\";\nimport type MessageFilter from \"sap/fe/macros/messages/MessageFilter\";\nimport MessagePopover from \"sap/fe/macros/messages/MessagePopover\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type { TableColumnProperties } from \"sap/fe/macros/table/TableAPI\";\nimport type { $ButtonSettings } from \"sap/m/Button\";\nimport { default as Button } from \"sap/m/Button\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport type HBox from \"sap/m/HBox\";\nimport type MessageItem from \"sap/m/MessageItem\";\nimport type { MessagePopover$ActiveTitlePressEvent } from \"sap/m/MessagePopover\";\nimport type ResponsiveTable from \"sap/m/Table\";\nimport { ButtonType } from \"sap/m/library\";\nimport type CoreEvent from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport Core from \"sap/ui/core/Core\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport View from \"sap/ui/core/mvc/View\";\nimport type Field from \"sap/ui/mdc/Field\";\nimport type { default as MDCTable, default as Table } from \"sap/ui/mdc/Table\";\nimport type BaseContext from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type Column from \"sap/ui/table/Column\";\nimport type CreationRow from \"sap/ui/table/CreationRow\";\nimport type Row from \"sap/ui/table/Row\";\nimport type UITable from \"sap/ui/table/Table\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport type ObjectPageLayout from \"sap/uxap/ObjectPageLayout\";\nimport type ObjectPageSection from \"sap/uxap/ObjectPageSection\";\nimport type ObjectPageSubSection from \"sap/uxap/ObjectPageSubSection\";\nimport messageButtonHelper from \"./MessageButtonHelper\";\nimport { type ObjectPageManifestSettings }  from \"sap/fe/core/converters/ManifestSettings\";\nimport type SubSectionBlock from \"sap/fe/templates/ObjectPage/controls/SubSectionBlock\";\nimport type DynamicSideContent from \"sap/ui/layout/DynamicSideContent\";\n\ntype MessageCount = {\n\tError: number;\n\tWarning: number;\n\tSuccess: number;\n\tInformation: number;\n};\n\ntype $MessageButtonSettings = $ButtonSettings & {\n\tmessageChange: Function;\n};\n\n@defineUI5Class(\"sap.fe.macros.messages.MessageButton\")\nclass MessageButton extends Button {\n\tconstructor(id?: string | $MessageButtonSettings, settings?: $MessageButtonSettings) {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tsuper(id, settings);\n\t}\n\n\t@aggregation({ type: \"sap.fe.macros.messages.MessageFilter\", multiple: true, singularName: \"customFilter\" })\n\tcustomFilters!: MessageFilter;\n\n\t@event()\n\tmessageChange!: Function;\n\n\tpublic oMessagePopover!: MessagePopover;\n\n\tpublic oItemBinding!: ODataListBinding;\n\n\tprivate oObjectPageLayout: ObjectPageLayout | undefined;\n\n\tprivate sGeneralGroupText = \"\";\n\n\tprivate _setMessageDataTimeout: number | undefined;\n\n\tprivate sViewId = \"\";\n\n\tprivate sLastActionText = \"\";\n\n\tinit(): void {\n\t\tButton.prototype.init.apply(this);\n\t\t//press event handler attached to open the message popover\n\t\tthis.attachPress(this.handleMessagePopoverPress, this);\n\t\tthis.oMessagePopover = new MessagePopover();\n\t\tthis.oItemBinding = this.oMessagePopover.getBinding(\"items\") as ODataListBinding;\n\t\tthis.oItemBinding.attachChange(this._setMessageData, this);\n\t\tconst messageButtonId = this.getId();\n\t\tif (messageButtonId) {\n\t\t\tthis.oMessagePopover.addCustomData(new CustomData({ key: \"messageButtonId\", value: messageButtonId })); // TODO check for custom data type\n\t\t}\n\t\tthis.attachModelContextChange(this._applyFiltersAndSort.bind(this));\n\t\tthis.oMessagePopover.attachActiveTitlePress(this._activeTitlePress.bind(this));\n\t}\n\n\t/**\n\t * The method that is called when a user clicks on the MessageButton control.\n\t * @param oEvent Event object\n\t */\n\thandleMessagePopoverPress(oEvent: CoreEvent): void {\n\t\tthis.oMessagePopover.toggle(oEvent.getSource());\n\t}\n\n\t/**\n\t * The method that groups the messages based on the section or subsection they belong to.\n\t * This method force the loading of contexts for all tables before to apply the grouping.\n\t * @param oView Current view.\n\t * @returns Return promise.\n\t * @private\n\t */\n\tasync _applyGroupingAsync(oView: FEView): Promise<void> {\n\t\tconst aWaitForData: Promise<void>[] = [];\n\t\tconst oViewBindingContext = oView.getBindingContext();\n\t\tconst _findTablesRelatedToMessages = (view: View): { table: MDCTable; subsection: ObjectPageSubSection }[] => {\n\t\t\tconst oRes: { table: MDCTable; subsection: ObjectPageSubSection }[] = [];\n\t\t\tconst aMessages = this.oItemBinding.getContexts().map(function (oContext: ODataV4Context) {\n\t\t\t\treturn oContext.getObject();\n\t\t\t});\n\t\t\tconst oViewContext = view.getBindingContext();\n\t\t\tif (oViewContext) {\n\t\t\t\tconst oObjectPage: Control = view.getContent()[0];\n\t\t\t\tmessageHandling.getVisibleSectionsFromObjectPageLayout(oObjectPage).forEach(function (oSection: ObjectPageSection) {\n\t\t\t\t\toSection.getSubSections().forEach(function (oSubSection: ObjectPageSubSection) {\n\t\t\t\t\t\toSubSection.findElements(true).forEach(function (oElem: UI5Element) {\n\t\t\t\t\t\t\tif (oElem.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < aMessages.length; i++) {\n\t\t\t\t\t\t\t\t\tconst oRowBinding = oElem.getRowBinding();\n\t\t\t\t\t\t\t\t\tif (oRowBinding) {\n\t\t\t\t\t\t\t\t\t\tconst sElemeBindingPath = `${oViewContext.getPath()}/${oElem.getRowBinding().getPath()}`;\n\t\t\t\t\t\t\t\t\t\tif (aMessages[i].target.indexOf(sElemeBindingPath) === 0) {\n\t\t\t\t\t\t\t\t\t\t\toRes.push({ table: oElem, subsection: oSubSection });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn oRes;\n\t\t};\n\t\t// Search for table related to Messages and initialize the binding context of the parent subsection to retrieve the data\n\t\tconst oTables = _findTablesRelatedToMessages.bind(this)(oView);\n\t\toTables.forEach(function (_oTable) {\n\t\t\tconst oMDCTable = _oTable.table,\n\t\t\t\toSubsection = _oTable.subsection;\n\t\t\tif (!oMDCTable.getBindingContext() || oMDCTable.getBindingContext()?.getPath() !== oViewBindingContext?.getPath()) {\n\t\t\t\toSubsection.setBindingContext(oViewBindingContext);\n\t\t\t\tif (!oMDCTable.getRowBinding().isLengthFinal()) {\n\t\t\t\t\taWaitForData.push(\n\t\t\t\t\t\tnew Promise(function (resolve: Function) {\n\t\t\t\t\t\t\toMDCTable.getRowBinding().attachEventOnce(\"dataReceived\", function () {\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst waitForGroupingApplied = new Promise((resolve: Function) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._applyGrouping();\n\t\t\t\tresolve();\n\t\t\t}, 0);\n\t\t});\n\t\ttry {\n\t\t\tawait Promise.all(aWaitForData);\n\t\t\toView.getModel().checkMessages();\n\t\t\tawait waitForGroupingApplied;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Error while grouping the messages in the messagePopOver\");\n\t\t}\n\t}\n\n\t/**\n\t * The method that groups the messages based on the section or subsection they belong to.\n\t * @private\n\t */\n\t_applyGrouping(): void {\n\t\tthis.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);\n\t\tif (!this.oObjectPageLayout) {\n\t\t\treturn;\n\t\t}\n\t\tconst messages: MessageItem[] = this.oMessagePopover.getItems();\n\t\tconst section = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout);\n\t\tconst enableBinding = this._checkControlIdInSections(messages, false);\n\t\tif (enableBinding) {\n\t\t\tthis._fnEnableBindings(section);\n\t\t}\n\t\t//Clear messageTargetProperty\n\t\tconst viewId = this._getViewId(this.getId());\n\t\tconst view = UI5Element.getElementById(viewId as string);\n\t\tconst uIModel = view?.getModel(\"internal\") as JSONModel;\n\t\tuIModel?.setProperty(\"/messageTargetProperty\", undefined);\n\t}\n\n\t/**\n\t * The method retrieves the binding context for the refError object.\n\t * The refError contains a map to store the indexes of the rows with errors.\n\t * @param oTable The table for which we want to get the refError Object.\n\t * @returns Context of the refError.\n\t * @private\n\t */\n\t_getTableRefErrorContext(oTable: MDCTable): BaseContext | undefined {\n\t\tconst oModel = oTable.getModel(\"internal\") as JSONModel;\n\t\t//initialize the refError property if it doesn't exist\n\t\tif (!oTable.getBindingContext(\"internal\")?.getProperty(\"refError\")) {\n\t\t\toModel.setProperty(\"refError\", {}, oTable.getBindingContext(\"internal\")!);\n\t\t}\n\t\tconst sRefErrorContextPath =\n\t\t\toTable.getBindingContext(\"internal\")?.getPath() +\n\t\t\t\"/refError/\" +\n\t\t\toTable.getBindingContext()?.getPath().replace(\"/\", \"$\") +\n\t\t\t\"$\" +\n\t\t\toTable.getRowBinding().getPath().replace(\"/\", \"$\");\n\t\tconst oContext = oModel.getContext(sRefErrorContextPath);\n\t\tif (!oContext.getProperty(\"\")) {\n\t\t\toModel.setProperty(\"\", {}, oContext);\n\t\t}\n\t\treturn oContext;\n\t}\n\n\t_updateInternalModel(\n\t\ttableRowContext: ODataV4Context | undefined,\n\t\trowIndex: number | undefined,\n\t\ttableTargetColProperty: string | undefined,\n\t\ttable: MDCTable,\n\t\tmessageObject: Message,\n\t\tisCreationRow?: boolean\n\t): void {\n\t\tlet temp;\n\t\tif (isCreationRow) {\n\t\t\ttemp = {\n\t\t\t\trowIndex: \"CreationRow\",\n\t\t\t\ttargetColProperty: tableTargetColProperty ? tableTargetColProperty : \"\"\n\t\t\t};\n\t\t} else {\n\t\t\ttemp = {\n\t\t\t\trowIndex: tableRowContext ? rowIndex : \"\",\n\t\t\t\ttargetColProperty: tableTargetColProperty ? tableTargetColProperty : \"\"\n\t\t\t};\n\t\t}\n\t\tconst model = table.getModel(\"internal\") as JSONModel,\n\t\t\tcontext = this._getTableRefErrorContext(table);\n\t\t//we first remove the entries with obsolete message ids from the internal model before inserting the new error info :\n\t\tconst aValidMessageIds = Messaging.getMessageModel()\n\t\t\t.getData()\n\t\t\t.map(function (message: Message) {\n\t\t\t\treturn message.getId();\n\t\t\t});\n\t\tlet aObsoleteMessagelIds;\n\t\tif (context?.getProperty(\"\")) {\n\t\t\taObsoleteMessagelIds = Object.keys(context?.getProperty(\"\")).filter(function (internalMessageId) {\n\t\t\t\treturn aValidMessageIds.indexOf(internalMessageId) === -1;\n\t\t\t});\n\t\t\taObsoleteMessagelIds.forEach(function (obsoleteId) {\n\t\t\t\tdelete context?.getProperty(\"\")[obsoleteId];\n\t\t\t});\n\t\t}\n\t\tmodel?.setProperty(\n\t\t\tmessageObject.getId(),\n\t\t\tObject.assign({}, context?.getProperty(messageObject.getId()) ? context.getProperty(messageObject.getId()) : {}, temp),\n\t\t\tcontext\n\t\t);\n\t}\n\n\t/**\n\t * The method that sets groups for transient messages.\n\t * @param message The transient message for which we want to compute and set group.\n\t * @param sActionName The action name.\n\t * @private\n\t */\n\t_setGroupLabelForTransientMsg(message: MessageItem, sActionName: string | undefined): void {\n\t\tthis.sLastActionText = this.sLastActionText\n\t\t\t? this.sLastActionText\n\t\t\t: Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_LAST_ACTION\");\n\n\t\tmessage.setGroupName(`${this.sLastActionText}: ${sActionName}`);\n\t}\n\n\t/**\n\t * The method that groups messages and adds the subtitle.\n\t * @param message The message we use to compute the group and subtitle.\n\t * @param section The section containing the controls.\n\t * @param subSection The subsection containing the controls.\n\t * @param elements List of controls from a subsection related to a message.\n\t * @param hasMultipleSubSections True if there is more than 1 subsection in the section.\n\t * @param actionName The action name, if any.\n\t * @returns Return the control targeted by the message.\n\t * @private\n\t */\n\t_computeMessageGroupAndSubTitle(\n\t\tmessage: MessageItem,\n\t\tsection: ObjectPageSection,\n\t\tsubSection: ObjectPageSubSection,\n\t\telements: UI5Element[],\n\t\thasMultipleSubSections: boolean,\n\t\tactionName: string | undefined\n\t): UI5Element | undefined {\n\t\tconst resourceModel = getResourceModel(section);\n\t\tthis.oItemBinding.detachChange(this._setMessageData, this);\n\t\tconst messageObject = message.getBindingContext(\"message\")?.getObject() as Message;\n\t\tconst setSectionNameInGroup = true;\n\t\tlet element: UI5Element,\n\t\t\ttable: MDCTable | undefined,\n\t\t\ttargetTableInfo = {} as TargetTableInfoType,\n\t\t\tl,\n\t\t\trowIndex: number | undefined,\n\t\t\ttargetedControl: UI5Element | undefined,\n\t\t\tisCreationRow: boolean;\n\t\tconst isBackEndMessage = new RegExp(\"^/\").test(messageObject?.getTargets()[0]);\n\t\tif (isBackEndMessage) {\n\t\t\tfor (l = 0; l < elements.length; l++) {\n\t\t\t\telement = elements[l];\n\t\t\t\ttargetedControl = element;\n\t\t\t\tif (element.isA(\"sap.m.Table\") || (element as UI5Element).isA(\"sap.ui.table.Table\")) {\n\t\t\t\t\ttable = element.getParent() as MDCTable;\n\t\t\t\t\tconst rowBinding = table.getRowBinding();\n\t\t\t\t\tconst fnCallbackSetGroupName = (): void => {\n\t\t\t\t\t\tthis._setGroupLabelForTransientMsg(message, actionName);\n\t\t\t\t\t};\n\t\t\t\t\tif (rowBinding && rowBinding.isLengthFinal() && table.getBindingContext()) {\n\t\t\t\t\t\tconst obj = messageHandling.getTableColumnDataAndSetSubtile(\n\t\t\t\t\t\t\tmessageObject,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\trowBinding,\n\t\t\t\t\t\t\tactionName,\n\t\t\t\t\t\t\tsetSectionNameInGroup,\n\t\t\t\t\t\t\tfnCallbackSetGroupName\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttargetTableInfo = obj.oTargetTableInfo;\n\t\t\t\t\t\tif (obj.subTitle) {\n\t\t\t\t\t\t\tmessage.setSubtitle(obj.subTitle);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmessage.setActiveTitle(\n\t\t\t\t\t\t\t!!targetTableInfo.oTableRowContext &&\n\t\t\t\t\t\t\t\t!targetTableInfo.oTableRowContext?.isInactive() && // check if the rowcontext is active\n\t\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext.getPath() !==\n\t\t\t\t\t\t\t\t\tmessage.getBindingContext(\"message\")?.getProperty(\"target\").replace(/\\/$/, \"\") // check if the target of the message is not the row itself (remove the last / if presents)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (targetTableInfo.oTableRowContext && !targetTableInfo.oTableRowContext.isInactive()) {\n\t\t\t\t\t\t\tthis._formatMessageDescription(\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\t\t\t\ttargetTableInfo.sTableTargetColName,\n\t\t\t\t\t\t\t\ttable\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trowIndex = targetTableInfo.oTableRowContext && targetTableInfo.oTableRowContext.getIndex();\n\t\t\t\t\t\tthis._updateInternalModel(\n\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\ttargetTableInfo.sTableTargetColProperty,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\tmessageObject\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmessage.setActiveTitle(true);\n\t\t\t\t\t//check if the targeted control is a child of one of the other controls\n\t\t\t\t\tconst isTargetedControlOrphan = messageHandling.bIsOrphanElement(targetedControl, elements);\n\t\t\t\t\tif (isTargetedControlOrphan) {\n\t\t\t\t\t\t//set the subtitle\n\t\t\t\t\t\tmessage.setSubtitle(\"\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//There is only one elt as this is a frontEnd message\n\t\t\ttargetedControl = elements[0];\n\t\t\ttable = this._getMdcTable(targetedControl);\n\t\t\ttargetTableInfo = {} as TargetTableInfoType;\n\t\t\tif (table) {\n\t\t\t\ttargetTableInfo.tableHeader = table.getHeader();\n\t\t\t\tconst targetColumnIndex = this._getTableColumnIndex(targetedControl);\n\t\t\t\ttargetTableInfo.sTableTargetColProperty =\n\t\t\t\t\ttargetColumnIndex !== undefined && targetColumnIndex > -1\n\t\t\t\t\t\t? table.getColumns()[targetColumnIndex].getPropertyKey()\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\ttargetTableInfo.sTableTargetColName =\n\t\t\t\t\ttargetTableInfo.sTableTargetColProperty && targetColumnIndex !== undefined && targetColumnIndex > -1\n\t\t\t\t\t\t? table.getColumns()[targetColumnIndex].getHeader()\n\t\t\t\t\t\t: undefined;\n\t\t\t\tisCreationRow = this._getTableRow(targetedControl)?.isA<CreationRow>(\"sap.ui.table.CreationRow\") ?? false;\n\t\t\t\tif (!isCreationRow) {\n\t\t\t\t\trowIndex = this._getTableRowIndex(targetedControl);\n\t\t\t\t\ttargetTableInfo.oTableRowBindingContexts = table.getRowBinding().getCurrentContexts();\n\t\t\t\t\ttargetTableInfo.oTableRowContext =\n\t\t\t\t\t\trowIndex !== undefined ? targetTableInfo.oTableRowBindingContexts[rowIndex] : undefined;\n\t\t\t\t}\n\t\t\t\tconst messageSubtitle = messageHandling.getMessageSubtitle(\n\t\t\t\t\tmessageObject,\n\t\t\t\t\ttargetTableInfo.oTableRowBindingContexts,\n\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\ttargetTableInfo.sTableTargetColName,\n\t\t\t\t\ttable,\n\t\t\t\t\tisCreationRow,\n\t\t\t\t\ttargetColumnIndex === 0 && (targetedControl as Field).getValueState() === \"Error\"\n\t\t\t\t\t\t? (targetedControl as Control)\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t\t//set the subtitle\n\t\t\t\tif (messageSubtitle) {\n\t\t\t\t\tmessage.setSubtitle(messageSubtitle);\n\t\t\t\t}\n\t\t\t\tmessage.setActiveTitle(!!targetTableInfo.oTableRowContext);\n\t\t\t\tif (targetTableInfo.oTableRowContext) {\n\t\t\t\t\tthis._formatMessageDescription(message, targetTableInfo.oTableRowContext, targetTableInfo.sTableTargetColName, table);\n\t\t\t\t}\n\t\t\t\tthis._updateInternalModel(\n\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\trowIndex,\n\t\t\t\t\ttargetTableInfo.sTableTargetColProperty,\n\t\t\t\t\ttable,\n\t\t\t\t\tmessageObject,\n\t\t\t\t\tisCreationRow\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (setSectionNameInGroup) {\n\t\t\tconst includeTableGroupName = this._checkMergeLogicForMessageGrouping(section, subSection, hasMultipleSubSections);\n\t\t\tconst sectionBasedGroupName = messageHandling.createSectionGroupName(\n\t\t\t\tsection,\n\t\t\t\tsubSection,\n\t\t\t\thasMultipleSubSections,\n\t\t\t\ttargetTableInfo,\n\t\t\t\tresourceModel,\n\t\t\t\tincludeTableGroupName\n\t\t\t);\n\n\t\t\tmessage.setGroupName(sectionBasedGroupName);\n\t\t\tconst viewId = this._getViewId(this.getId());\n\t\t\tconst view = UI5Element.getElementById(viewId as string);\n\t\t\tconst messageTargetProperty = messageObject.getTargets()[0] && messageObject.getTargets()[0].split(\"/\").pop();\n\t\t\tconst uIModel = view?.getModel(\"internal\") as JSONModel;\n\t\t\tif (\n\t\t\t\tuIModel &&\n\t\t\t\tuIModel.getProperty(\"/messageTargetProperty\") &&\n\t\t\t\tmessageTargetProperty &&\n\t\t\t\tmessageTargetProperty === uIModel.getProperty(\"/messageTargetProperty\")\n\t\t\t) {\n\t\t\t\tthis.oMessagePopover.fireActiveTitlePress({ item: message });\n\t\t\t\tuIModel.setProperty(\"/messageTargetProperty\", false);\n\t\t\t}\n\t\t}\n\t\tthis.oItemBinding.attachChange(this._setMessageData, this);\n\t\treturn targetedControl;\n\t}\n\t\n\t/**\n\t * The method to check if the section and subsection has single table control.\n\t * @param section ObjectPage section.\n\t * @param subSection ObjectPage sub section.\n\t * @param hasMultipleSubSections True if there is more than 1 subsection in the section.\n\t * @returns Returns boolean value for the single control inside the section, by default it is true.\n\t * @private\n\t */\n\t_checkMergeLogicForMessageGrouping(section: ObjectPageSection, subSection: ObjectPageSubSection, hasMultipleSubSections: boolean): boolean {\n\t\tconst viewId = this._getViewId(this.getId());\n\t\tconst view = viewId ? (UI5Element.getElementById(viewId) as View) : undefined;\n\t\tlet bIncludeTableGroupName = true;\n\t\tconst singleSubsectionInPageLayout = !hasMultipleSubSections && (view?.getViewData() as ObjectPageManifestSettings)?.sectionLayout === \"Page\";\n\t\tconst multiSubsectionInTabLayout = hasMultipleSubSections && (view?.getViewData() as ObjectPageManifestSettings)?.sectionLayout === \"Tabs\";\n\t\tif (singleSubsectionInPageLayout) {\n\t\t\tconst block = subSection.getBlocks();\n\t\t\tconst content = block.length === 1 ? block[0].getAggregation(\"content\") as ManagedObject : undefined;\n\t\t\tif (content?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t}\n\t\t} else if (multiSubsectionInTabLayout) {\n\t\t\tlet content;\n\t\t\tconst blocks = subSection.getBlocks();\n\t\t\t// In case of Reference Facet, the first block will be SubSectionBlock\n\t\t\tif (blocks.length === 1 && blocks[0]?.isA<SubSectionBlock>(\"sap.fe.templates.ObjectPage.controls.SubSectionBlock\")) {\n\t\t\t\tcontent = blocks[0].getAggregation(\"content\") as ManagedObject;\n\t\t\t\tif (content?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t\t} else if ((content as DynamicSideContent)?.isA(\"sap.ui.layout.DynamicSideContent\")) {\n\t\t\t\t\tcontent =\n\t\t\t\t\t\t(content as DynamicSideContent).getMainContent instanceof Function &&\n\t\t\t\t\t\t(content as DynamicSideContent)?.getMainContent();\n\t\t\t\t\tif (content && content.length === 1 && content[0]?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn bIncludeTableGroupName;\n\t}\n\n\t_checkControlIdInSections(messages: MessageItem[], enableBinding?: boolean): boolean | void {\n\t\tlet section, aSubSections, message, i, j, k;\n\n\t\tthis.sGeneralGroupText = this.sGeneralGroupText\n\t\t\t? this.sGeneralGroupText\n\t\t\t: Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t\t//Get all sections from the object page layout\n\t\tconst aVisibleSections = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout!);\n\t\tif (aVisibleSections) {\n\t\t\tconst viewId = this._getViewId(this.getId());\n\t\t\tconst oView = viewId ? (UI5Element.getElementById(viewId) as View) : undefined;\n\t\t\tconst sActionName = oView?.getBindingContext(\"internal\")?.getProperty(\"sActionName\");\n\t\t\tif (sActionName) {\n\t\t\t\t(oView?.getBindingContext(\"internal\") as InternalModelContext).setProperty(\"sActionName\", null);\n\t\t\t}\n\t\t\tfor (i = messages.length - 1; i >= 0; --i) {\n\t\t\t\t// Loop over all messages\n\t\t\t\tmessage = messages[i];\n\t\t\t\tlet bIsGeneralGroupName = true;\n\t\t\t\tfor (j = aVisibleSections.length - 1; j >= 0; --j) {\n\t\t\t\t\tlet shouldBreak = false;\n\t\t\t\t\t// Loop over all visible sections\n\t\t\t\t\tsection = aVisibleSections[j];\n\t\t\t\t\taSubSections = section.getSubSections();\n\t\t\t\t\tfor (k = aSubSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\t\tconst subSection = aSubSections[k];\n\t\t\t\t\t\tconst oMessageObject = message?.getBindingContext(\"message\")?.getObject();\n\n\t\t\t\t\t\tconst aControls = messageHandling.getControlFromMessageRelatingToSubSection(subSection, oMessageObject);\n\t\t\t\t\t\tif (aControls.length > 0) {\n\t\t\t\t\t\t\tconst oTargetedControl = this._computeMessageGroupAndSubTitle(\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\tsection,\n\t\t\t\t\t\t\t\tsubSection,\n\t\t\t\t\t\t\t\taControls,\n\t\t\t\t\t\t\t\taSubSections.length > 1,\n\t\t\t\t\t\t\t\tsActionName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbIsGeneralGroupName = false;\n\t\t\t\t\t\t\t// if we found table that matches with the message, we don't stop the loop\n\t\t\t\t\t\t\t// in case we find an additional control (eg mdc field) that also match with the message\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\toTargetedControl &&\n\t\t\t\t\t\t\t\t!oTargetedControl.isA(\"sap.m.Table\") &&\n\t\t\t\t\t\t\t\t!(oTargetedControl as UI5Element).isA(\"sap.ui.table.Table\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshouldBreak = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (shouldBreak) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (bIsGeneralGroupName) {\n\t\t\t\t\tconst oMessageObject = message.getBindingContext(\"message\")?.getObject();\n\t\t\t\t\tmessage.setActiveTitle(false);\n\t\t\t\t\tif (oMessageObject.persistent && sActionName) {\n\t\t\t\t\t\tthis._setGroupLabelForTransientMsg(message, sActionName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.setGroupName(this.sGeneralGroupText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!enableBinding && message.getGroupName() === this.sGeneralGroupText && this._findTargetForMessage(message)) {\n\t\t\t\t\t// when the section is not available in the view port\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_findTargetForMessage(message: MessageItem): boolean {\n\t\tconst messageObject = message.getBindingContext(\"message\") && message.getBindingContext(\"message\")?.getObject();\n\t\tif (messageObject && messageObject.target) {\n\t\t\tconst oMetaModel = this.oObjectPageLayout?.getModel()?.getMetaModel() as ODataMetaModel,\n\t\t\t\tcontextPath = oMetaModel && oMetaModel.getMetaPath(messageObject.target),\n\t\t\t\toContextPathMetadata = oMetaModel && oMetaModel.getObject(contextPath);\n\t\t\tif (oContextPathMetadata && oContextPathMetadata.$kind === \"Property\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Enable bindings of sub section content (blocks, more blocks, and actions).\n\t * @param subSection Object page sub section\n\t */\n\t_fnEnableSubSectionBinding(subSection: ObjectPageSubSection): void {\n\t\tsubSection.getBlocks().forEach((block) => block.setBindingContext(undefined));\n\t\tsubSection.getMoreBlocks().forEach((subBlock) => subBlock.setBindingContext(undefined));\n\t\tsubSection.getActions().forEach((actions) => actions.setBindingContext(undefined));\n\t}\n\n\t_fnEnableBindings(aSections: ObjectPageSection[]): void {\n\t\tfor (let iSection = 0; iSection < aSections.length; iSection++) {\n\t\t\tconst oSection = aSections[iSection];\n\t\t\tconst aSubSections = oSection.getSubSections();\n\t\t\tfor (let iSubSection = 0; iSubSection < aSubSections.length; iSubSection++) {\n\t\t\t\tconst oSubSection = aSubSections[iSubSection];\n\t\t\t\tconst oAllBlocks = oSubSection.getBlocks();\n\t\t\t\tif (oAllBlocks) {\n\t\t\t\t\tthis._fnEnableSubSectionBinding(oSubSection);\n\t\t\t\t}\n\t\t\t\tif (oSubSection.getBindingContext()) {\n\t\t\t\t\tthis._findMessageGroupAfterRebinding();\n\t\t\t\t\t(oSubSection.getBindingContext() as ODataV4Context)\n\t\t\t\t\t\t.getBinding()\n\t\t\t\t\t\t.attachDataReceived(this._findMessageGroupAfterRebinding.bind(this));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_findMessageGroupAfterRebinding(): void {\n\t\tconst aMessages = this.oMessagePopover.getItems();\n\t\tthis._checkControlIdInSections(aMessages, true);\n\t}\n\n\t/**\n\t * The method that retrieves the view ID (HTMLView/XMLView/JSONview/JSView/Templateview) of any control.\n\t * @param sControlId ID of the control needed to retrieve the view ID\n\t * @returns The view ID of the control\n\t */\n\t_getViewId(sControlId: string): string | undefined {\n\t\tlet sViewId,\n\t\t\toControl: ManagedObject | undefined | null = UI5Element.getElementById(sControlId);\n\t\twhile (oControl) {\n\t\t\tif (oControl instanceof View) {\n\t\t\t\tsViewId = oControl.getId();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\toControl = oControl.getParent();\n\t\t}\n\t\treturn sViewId;\n\t}\n\n\t_setLongtextUrlDescription(sMessageDescriptionContent: string, oDiagnosisTitle: FormattedText): void {\n\t\tthis.oMessagePopover.setAsyncDescriptionHandler(function (config: {\n\t\t\titem: MessageItem;\n\t\t\tpromise: {\n\t\t\t\tresolve: Function;\n\t\t\t\treject: Function;\n\t\t\t};\n\t\t}) {\n\t\t\t// This stores the old description\n\t\t\tconst sOldDescription = sMessageDescriptionContent;\n\t\t\t// Here we can fetch the data and concatenate it to the old one\n\t\t\t// By default, the longtextUrl fetching will overwrite the description (with the default behaviour)\n\t\t\t// Here as we have overwritten the default async handler, which fetches and replaces the description of the item\n\t\t\t// we can manually modify it to include whatever needed.\n\t\t\tconst sLongTextUrl = config.item.getLongtextUrl();\n\t\t\tif (sLongTextUrl) {\n\t\t\t\tjQuery.ajax({\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\turl: sLongTextUrl,\n\t\t\t\t\tsuccess: function (data: string) {\n\t\t\t\t\t\tconst sDiagnosisText = oDiagnosisTitle.getHtmlText() + data;\n\t\t\t\t\t\tconfig.item.setDescription(`${sOldDescription}${sDiagnosisText}`);\n\t\t\t\t\t\tconfig.promise.resolve();\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\tconfig.item.setDescription(sMessageDescriptionContent);\n\t\t\t\t\t\tconst sError = `A request has failed for long text data. URL: ${sLongTextUrl}`;\n\t\t\t\t\t\tLog.error(sError);\n\t\t\t\t\t\tconfig.promise.reject(sError);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * It displays the row information of the error existing in the table.\n\t * @param table\n\t * @param tableRowContext\n\t * @param tableColProperty\n\t * @returns rowInformation\n\t */\n\n\tprocessTableColumnProperties(table: Table, tableRowContext: ODataV4Context, tableColProperty: TableColumnProperties): string {\n\t\tlet rowInformation = \"\";\n\n\t\tconst tableColBindingContextTextAnnotation = messageHandling.getTableColBindingContextForTextAnnotation(\n\t\t\ttable,\n\t\t\ttableRowContext,\n\t\t\ttableColProperty\n\t\t);\n\t\tconst tableColTextAnnotationPath = tableColBindingContextTextAnnotation\n\t\t\t? tableColBindingContextTextAnnotation.getObject(\"$Path\")\n\t\t\t: undefined;\n\t\tconst tableColTextArrangement =\n\t\t\ttableColTextAnnotationPath && tableColBindingContextTextAnnotation\n\t\t\t\t? tableColBindingContextTextAnnotation.getObject(\"@com.sap.vocabularies.UI.v1.TextArrangement/$EnumMember\")\n\t\t\t\t: undefined;\n\t\tconst labelWithValue = (table.getParent() as TableAPI)?.getTableColValue(\n\t\t\ttableRowContext,\n\t\t\ttableColTextAnnotationPath,\n\t\t\ttableColTextArrangement,\n\t\t\ttableColProperty\n\t\t);\n\t\trowInformation += `${labelWithValue}`;\n\n\t\treturn rowInformation;\n\t}\n\n\t/**\n\t * It computes the column information.\n\t * @param message\n\t * @param tableTargetColName\n\t * @param rowInformation\n\t * @param table\n\t * @returns columnInfo\n\t */\n\n\tcomputeColumnInfo(message: MessageItem, tableTargetColName: string | undefined, rowInformation: string[], table: Table): string {\n\t\tconst resourceModel = getResourceModel(table);\n\t\tconst msgObj = message.getBindingContext(\"message\")?.getObject();\n\t\tconst colFromTableSettings = messageHandling.fetchColumnInfo(msgObj, table);\n\t\tlet columnInfo = \"\";\n\n\t\tif (tableTargetColName) {\n\t\t\t// if column in present in table definition\n\t\t\tcolumnInfo = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\")}: ${tableTargetColName}`;\n\t\t} else if (colFromTableSettings) {\n\t\t\tif (colFromTableSettings.availability === \"Hidden\") {\n\t\t\t\t// if column in neither in table definition nor personalization\n\t\t\t\tif (message.getType() === \"Error\") {\n\t\t\t\t\tcolumnInfo =\n\t\t\t\t\t\trowInformation.length > 0\n\t\t\t\t\t\t\t? `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR\")} ${rowInformation.join(\", \")}` + \".\"\n\t\t\t\t\t\t\t: `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR\")}` + \".\";\n\t\t\t\t} else {\n\t\t\t\t\tcolumnInfo =\n\t\t\t\t\t\trowInformation.length > 0\n\t\t\t\t\t\t\t? `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC\")} ${rowInformation.join(\", \")}` + \".\"\n\t\t\t\t\t\t\t: `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC\")}` + \".\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if column is not in table definition but in personalization\n\t\t\t\t//if no navigation to sub op then remove link to error field BCP : 2280168899\n\t\t\t\tif (!this._navigationConfigured(table)) {\n\t\t\t\t\tmessage.setActiveTitle(false);\n\t\t\t\t}\n\t\t\t\tcolumnInfo = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\")}: ${\n\t\t\t\t\tcolFromTableSettings.label\n\t\t\t\t} (${resourceModel.getText(\"T_COLUMN_INDICATOR_IN_TABLE_DEFINITION\")})`;\n\t\t\t}\n\t\t}\n\n\t\treturn columnInfo;\n\t}\n\n\t/**\n\t * It displays the row information of the error existing in the table.\n\t * @param message\n\t * @param tableRowContext\n\t * @param tableTargetColName\n\t * @param table\n\t */\n\n\t_formatMessageDescription(\n\t\tmessage: MessageItem,\n\t\ttableRowContext: ODataV4Context,\n\t\ttableTargetColName: string | undefined,\n\t\ttable: MDCTable\n\t): void {\n\t\tconst resourceModel = getResourceModel(table);\n\t\tconst tableColProperty = (table.getParent() as TableAPI)?.getTableColumnVisibilityInfo(tableRowContext);\n\n\t\tconst rowInformation: string[] = [];\n\t\ttableColProperty?.forEach(({ key, visibility }) => {\n\t\t\trowInformation.push(this.processTableColumnProperties(table, tableRowContext, [{ key, visibility }]));\n\t\t});\n\n\t\tconst columnInfo = this.computeColumnInfo(message, tableTargetColName, rowInformation, table);\n\n\t\tconst fieldsAffectedTitle = new FormattedText({\n\t\t\thtmlText: `<html><body><strong>${resourceModel.getText(\"T_FIELDS_AFFECTED_TITLE\")}</strong></body></html><br>`\n\t\t});\n\t\tlet fieldAffectedText: string;\n\t\tif (Array.isArray(rowInformation) && rowInformation.length > 0) {\n\t\t\tif (rowInformation.length === 1) {\n\t\t\t\t// If there’s only one column in the table, display it in a single line.\n\t\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t\t)}: ${table.getHeader()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW\"\n\t\t\t\t)}: ${rowInformation}<br>${columnInfo}<br>`;\n\t\t\t} else {\n\t\t\t\t// If there are multiple columns in the table, display them in multiple lines.\n\t\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t\t)}: ${table.getHeader()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW\"\n\t\t\t\t)}:<br>&emsp; ${rowInformation.join(\"<br>&emsp; \")}<br>${columnInfo}<br>`;\n\t\t\t}\n\t\t} else if (columnInfo == \"\" || !columnInfo) {\n\t\t\tfieldAffectedText = \"\";\n\t\t} else {\n\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t)}: ${table.getHeader()}<br>${columnInfo}<br>`;\n\t\t}\n\n\t\tconst diagnosisTitle = new FormattedText({\n\t\t\thtmlText: `<html><body><strong>${resourceModel.getText(\"T_DIAGNOSIS_TITLE\")}</strong></body></html><br>`\n\t\t});\n\t\t// get the UI messages from the message context to set it to Diagnosis section\n\t\tconst uIMessageDescription = message.getBindingContext(\"message\")?.getObject().description;\n\t\t//set the description to undefined to reset it below\n\t\tmessage.setDescription(undefined);\n\t\tlet diagnosisText = \"\";\n\t\tlet messageDescriptionContent = \"\";\n\t\tif (message.getLongtextUrl()) {\n\t\t\tmessageDescriptionContent = `${fieldAffectedText}<br>`;\n\t\t\tthis._setLongtextUrlDescription(messageDescriptionContent, diagnosisTitle);\n\t\t} else if (uIMessageDescription) {\n\t\t\tdiagnosisText = `${diagnosisTitle.getHtmlText()}<br>${uIMessageDescription}`;\n\t\t\tmessageDescriptionContent = `${fieldAffectedText}<br>${diagnosisText}`;\n\t\t\tmessage.setDescription(messageDescriptionContent);\n\t\t} else {\n\t\t\tmessage.setDescription(fieldAffectedText);\n\t\t}\n\t}\n\n\t/**\n\t * When there are no messages to show in the Message Box.\n\t */\n\thandleNoMessages(): void {\n\t\tthis.setVisible(false);\n\t\tthis.fireEvent(\"messageChange\", {\n\t\t\tiMessageLength: 0\n\t\t});\n\n\t\tconst view = UI5Element.getElementById(this.sViewId) as FEView | undefined;\n\t\tif (view) {\n\t\t\t// If there are no messages to show, we reset 'messageTargetProperty'.\n\t\t\tview.getModel(\"internal\").setProperty(\"/messageTargetProperty\", undefined);\n\t\t}\n\t}\n\n\t/**\n\t * Method to set the button text, count and icon property based upon the message items\n\t * ButtonType:  Possible settings for warning and error messages are 'critical' and 'negative'.\n\t * @private\n\t */\n\t_setMessageData(): void {\n\t\tclearTimeout(this._setMessageDataTimeout);\n\n\t\tthis._setMessageDataTimeout = setTimeout(async () => {\n\t\t\tconst sIcon = \"\",\n\t\t\t\toMessages = this.oMessagePopover.getItems(),\n\t\t\t\toMessageCount: MessageCount = { Error: 0, Warning: 0, Success: 0, Information: 0 },\n\t\t\t\toResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!,\n\t\t\t\tiMessageLength = oMessages.length;\n\t\t\tlet sButtonType = ButtonType.Default,\n\t\t\t\tsMessageKey = \"\",\n\t\t\t\tsTooltipText = \"\",\n\t\t\t\tsMessageText = \"\";\n\t\t\tif (iMessageLength > 0) {\n\t\t\t\tfor (let i = 0; i < iMessageLength; i++) {\n\t\t\t\t\tif (!oMessages[i].getType() || oMessages[i].getType().toString() === \"\") {\n\t\t\t\t\t\t++oMessageCount[\"Information\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++oMessageCount[oMessages[i].getType() as keyof MessageCount];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oMessageCount[MessageType.Error] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Negative;\n\t\t\t\t} else if (oMessageCount[MessageType.Warning] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Critical;\n\t\t\t\t} else if (oMessageCount[MessageType.Success] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Success;\n\t\t\t\t} else if (oMessageCount[MessageType.Information] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Neutral;\n\t\t\t\t}\n\n\t\t\t\tconst totalNumberOfMessages =\n\t\t\t\t\toMessageCount[MessageType.Error] +\n\t\t\t\t\toMessageCount[MessageType.Warning] +\n\t\t\t\t\toMessageCount[MessageType.Success] +\n\t\t\t\t\toMessageCount[MessageType.Information];\n\n\t\t\t\tthis.setText(totalNumberOfMessages.toString());\n\n\t\t\t\tif (oMessageCount.Error === 1) {\n\t\t\t\t\tsMessageKey = \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TITLE_ERROR\";\n\t\t\t\t} else if (oMessageCount.Error > 1) {\n\t\t\t\t\tsMessageKey = \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_MULTIPLE_ERROR_TOOLTIP\";\n\t\t\t\t} else if (!oMessageCount.Error && oMessageCount.Warning) {\n\t\t\t\t\tsMessageKey = \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_WARNING_TOOLTIP\";\n\t\t\t\t} else if (!oMessageCount.Error && !oMessageCount.Warning && oMessageCount.Information) {\n\t\t\t\t\tsMessageKey = \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO\";\n\t\t\t\t} else if (!oMessageCount.Error && !oMessageCount.Warning && !oMessageCount.Information && oMessageCount.Success) {\n\t\t\t\t\tsMessageKey = \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_SUCCESS\";\n\t\t\t\t}\n\t\t\t\tif (sMessageKey) {\n\t\t\t\t\tsMessageText = oResourceBundle.getText(sMessageKey);\n\t\t\t\t\tsTooltipText = oMessageCount.Error ? `${oMessageCount.Error} ${sMessageText}` : sMessageText;\n\t\t\t\t\tthis.setTooltip(sTooltipText);\n\t\t\t\t}\n\t\t\t\tthis.setIcon(sIcon);\n\t\t\t\tthis.setType(sButtonType);\n\t\t\t\tthis.setVisible(true);\n\t\t\t\tconst oView = UI5Element.getElementById(this.sViewId) as FEView;\n\t\t\t\tif (oView) {\n\t\t\t\t\tconst oPageReady = oView.getController().pageReady;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait oPageReady.waitPageReady();\n\t\t\t\t\t\tawait this._applyGroupingAsync(oView);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tLog.error(\"fail grouping messages\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.fireEvent(\"messageChange\", {\n\t\t\t\t\t\tiMessageLength: iMessageLength\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (iMessageLength > 1) {\n\t\t\t\t\tthis.oMessagePopover.navigateBack();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.handleNoMessages();\n\t\t\t}\n\t\t}, 100) as unknown as number;\n\t}\n\n\t/**\n\t * The method that is called when a user clicks on the title of the message.\n\t * @private\n\t * @param oEvent Event object passed from the handler\n\t */\n\tasync _activeTitlePress(oEvent: MessagePopover$ActiveTitlePressEvent): Promise<void> {\n\t\tconst oInternalModelContext = this.getBindingContext(\"pageInternal\") as InternalModelContext;\n\t\toInternalModelContext.setProperty(\"errorNavigationSectionFlag\", true);\n\t\tconst oItem = oEvent.getParameter(\"item\"),\n\t\t\toMessage = oItem?.getBindingContext(\"message\")?.getObject(),\n\t\t\tbIsBackendMessage = new RegExp(\"^/\").test(oMessage.getTargets()[0]),\n\t\t\toView = UI5Element.getElementById(this.sViewId) as View;\n\t\tif (!oItem) {\n\t\t\treturn;\n\t\t}\n\t\tlet oControl: UI5Element | undefined, sSectionTitle;\n\t\tconst _defaultFocus = function (message: Message, mdcTable: MDCTable): void {\n\t\t\tconst focusInfo = { preventScroll: true, targetInfo: message };\n\t\t\tmdcTable.focus(focusInfo);\n\t\t};\n\n\t\tconst oTargetMdcTable = oMessage.controlIds\n\t\t\t.map(function (controlId: string) {\n\t\t\t\tconst control = UI5Element.getElementById(controlId);\n\t\t\t\tconst parentControl = control && control.getParent();\n\t\t\t\treturn parentControl &&\n\t\t\t\t\tparentControl.isA(\"sap.ui.mdc.Table\") &&\n\t\t\t\t\toItem.getGroupName().includes((parentControl as Table).getHeader())\n\t\t\t\t\t? parentControl\n\t\t\t\t\t: null;\n\t\t\t})\n\t\t\t.reduce(function (acc: Control, val: Control) {\n\t\t\t\treturn val ? val : acc;\n\t\t\t});\n\n\t\t//check if the pressed item is related to a table control\n\t\tif (oTargetMdcTable) {\n\t\t\tif (bIsBackendMessage) {\n\t\t\t\tsSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\t\t\ttry {\n\t\t\t\t\tawait this._navigateFromMessageToSectionTableInIconTabBarMode(oTargetMdcTable, this.oObjectPageLayout!, sSectionTitle);\n\t\t\t\t\tconst oRefErrorContext = this._getTableRefErrorContext(oTargetMdcTable);\n\t\t\t\t\tconst oRefError = oRefErrorContext?.getProperty(oItem.getBindingContext(\"message\")?.getObject().getId());\n\t\t\t\t\tconst _setFocusOnTargetField = async (targetMdcTable: MDCTable, iRowIndex: number): Promise<boolean | undefined> => {\n\t\t\t\t\t\tconst aTargetMdcTableRow = this._getMdcTableRows(targetMdcTable),\n\t\t\t\t\t\t\tiFirstVisibleRow = this._getGridTable(targetMdcTable)?.getFirstVisibleRow() ?? 0;\n\t\t\t\t\t\tif (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {\n\t\t\t\t\t\t\tconst oTargetRow = aTargetMdcTableRow[iRowIndex - iFirstVisibleRow],\n\t\t\t\t\t\t\t\toTargetCell = this.getTargetCell(oTargetRow, oMessage);\n\t\t\t\t\t\t\tif (oTargetCell) {\n\t\t\t\t\t\t\t\tthis.setFocusToControl(oTargetCell);\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// control not found on table\n\t\t\t\t\t\t\t\tconst errorProperty = oMessage.getTargets()[0].split(\"/\").pop();\n\t\t\t\t\t\t\t\tif (errorProperty) {\n\t\t\t\t\t\t\t\t\t(oView.getModel(\"internal\") as JSONModel).setProperty(\"/messageTargetProperty\", errorProperty);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (this._navigationConfigured(targetMdcTable)) {\n\t\t\t\t\t\t\t\t\treturn (oView.getController() as PageController)._routing.navigateForwardToContext(\n\t\t\t\t\t\t\t\t\t\toTargetRow.getBindingContext() as ODataV4Context\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t};\n\t\t\t\t\tif (oTargetMdcTable.data(\"tableType\") === \"GridTable\" && oRefError.rowIndex !== \"\") {\n\t\t\t\t\t\tconst iFirstVisibleRow = this._getGridTable(oTargetMdcTable)?.getFirstVisibleRow() ?? 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait oTargetMdcTable.scrollToIndex(oRefError.rowIndex);\n\t\t\t\t\t\t\tconst aTargetMdcTableRow = this._getMdcTableRows(oTargetMdcTable);\n\t\t\t\t\t\t\tlet iNewFirstVisibleRow, bScrollNeeded;\n\t\t\t\t\t\t\tif (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {\n\t\t\t\t\t\t\t\tiNewFirstVisibleRow = (aTargetMdcTableRow[0].getParent() as UITable).getFirstVisibleRow() ?? 0;\n\t\t\t\t\t\t\t\tbScrollNeeded = iFirstVisibleRow - iNewFirstVisibleRow !== 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet oWaitControlIdAdded: Promise<void>;\n\t\t\t\t\t\t\tif (bScrollNeeded) {\n\t\t\t\t\t\t\t\t//The scrollToIndex function does not wait for the UI update. As a workaround, pending a fix from MDC (BCP: 2170251631) we use the event \"UIUpdated\".\n\t\t\t\t\t\t\t\toWaitControlIdAdded = new Promise(function (resolve) {\n\t\t\t\t\t\t\t\t\tCore.attachEvent(\"UIUpdated\", resolve);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\toWaitControlIdAdded = Promise.resolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tawait oWaitControlIdAdded;\n\t\t\t\t\t\t\tsetTimeout(async function () {\n\t\t\t\t\t\t\t\tconst focusOnTargetField = await _setFocusOnTargetField(oTargetMdcTable, oRefError.rowIndex);\n\t\t\t\t\t\t\t\tif (focusOnTargetField === false) {\n\t\t\t\t\t\t\t\t\t_defaultFocus(oMessage, oTargetMdcTable);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tLog.error(\"Error while focusing on error\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (oTargetMdcTable.data(\"tableType\") === \"ResponsiveTable\" && oRefError) {\n\t\t\t\t\t\tconst focusOnMessageTargetControl = await this.focusOnMessageTargetControl(\n\t\t\t\t\t\t\toView,\n\t\t\t\t\t\t\toMessage,\n\t\t\t\t\t\t\toTargetMdcTable,\n\t\t\t\t\t\t\toRefError.rowIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (focusOnMessageTargetControl === false) {\n\t\t\t\t\t\t\t_defaultFocus(oMessage, oTargetMdcTable);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.focusOnMessageTargetControl(oView, oMessage);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tLog.error(\"Fail to navigate to Error control\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toControl = UI5Element.getElementById(oMessage.controlIds[0]);\n\t\t\t\tif (oControl) {\n\t\t\t\t\t//If the control underlying the frontEnd message is not within the current section, we first go into the target section:\n\t\t\t\t\tconst sections = (this.oObjectPageLayout as ObjectPageLayout).getSections();\n\t\t\t\t\tconst sectionWithTheControl = sections.find((section) => section.findElements(true).includes(oControl as UI5Element));\n\t\t\t\t\tif (sectionWithTheControl) {\n\t\t\t\t\t\tsSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\t\t\t\t\tthis._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout!, sSectionTitle);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setFocusToControl(oControl);\n\t\t\t}\n\t\t} else {\n\t\t\t// focus on control\n\t\t\tsSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\t\tthis._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout!, sSectionTitle);\n\t\t\tthis.focusOnMessageTargetControl(oView, oMessage);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a table cell targeted by a message, ensuring the cell is editable.\n\t * @param targetRow A table row\n\t * @param message Message targeting a cell\n\t * @returns Returns the editable cell or null/undefined if none is found\n\t * @private\n\t */\n\tgetTargetCell(targetRow: UI5Element, message: Message): UI5Element | null | undefined {\n\t\tconst controlIds = message.getControlIds();\n\t\tconst hasNonEditableField = controlIds.some((id) => {\n\t\t\tconst control = UI5Element.getElementById(id) as EnhanceWithUI5<FieldAPI>;\n\t\t\treturn control?.isA(\"sap.ui.mdc.Field\") && control.getEditable && !control.getEditable();\n\t\t});\n\n\t\treturn controlIds.length > 0\n\t\t\t? controlIds\n\t\t\t\t\t.map(function (controlId) {\n\t\t\t\t\t\tconst isControlInTable = targetRow.findElements(true, function (elem) {\n\t\t\t\t\t\t\treturn elem.getId() === controlId;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isControlInTable.length > 0) {\n\t\t\t\t\t\t\tconst element = UI5Element.getElementById(controlId) as EnhanceWithUI5<FieldAPI>;\n\t\t\t\t\t\t\tif (hasNonEditableField) {\n\t\t\t\t\t\t\t\tif (element?.isA(\"sap.ui.mdc.Field\")) {\n\t\t\t\t\t\t\t\t\tif (element.getEditable && !element.getEditable()) {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t\t.reduce(function (acc, val) {\n\t\t\t\t\t\treturn val ? val : acc;\n\t\t\t\t\t}, null)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Focus on the control targeted by a message.\n\t * @param view The current view\n\t * @param message The message targeting the control on which we want to set the focus\n\t * @param targetMdcTable The table targeted by the message (optional)\n\t * @param rowIndex The row index of the table targeted by the message (optional)\n\t * @returns Promise\n\t * @private\n\t */\n\tasync focusOnMessageTargetControl(\n\t\tview: View,\n\t\tmessage: Message,\n\t\ttargetMdcTable?: MDCTable,\n\t\trowIndex?: number\n\t): Promise<boolean | undefined> {\n\t\tconst aAllViewElements = view.findElements(true);\n\t\tconst aErroneousControls = message\n\t\t\t.getControlIds()\n\t\t\t.filter(function (sControlId: string) {\n\t\t\t\treturn aAllViewElements.some(function (oElem) {\n\t\t\t\t\treturn oElem.getId() === sControlId && oElem.getDomRef();\n\t\t\t\t});\n\t\t\t})\n\t\t\t.map(function (sControlId: string) {\n\t\t\t\treturn UI5Element.getElementById(sControlId);\n\t\t\t});\n\t\tconst aNotTableErroneousControls = aErroneousControls.filter(function (oElem: UI5Element | undefined) {\n\t\t\treturn !oElem?.isA<Table>(\"sap.m.Table\") && !oElem?.isA<UITable>(\"sap.ui.table.Table\");\n\t\t});\n\t\t//The focus is set on Not Table control in priority\n\t\tif (aNotTableErroneousControls.length > 0) {\n\t\t\tthis.setFocusToControl(aNotTableErroneousControls[0]);\n\t\t\treturn undefined;\n\t\t} else if (aErroneousControls.length > 0) {\n\t\t\tconst aTargetMdcTableRow = targetMdcTable\n\t\t\t\t? targetMdcTable.findElements(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t(elem: Control) =>\n\t\t\t\t\t\t\telem.isA(ColumnListItem.getMetadata().getName()) && elem.getParent()?.getParent() === targetMdcTable\n\t\t\t\t  )\n\t\t\t\t: [];\n\t\t\tif (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {\n\t\t\t\tconst oTargetRow = aTargetMdcTableRow[rowIndex as number];\n\t\t\t\tconst oTargetCell = this.getTargetCell(oTargetRow, message);\n\t\t\t\tif (oTargetCell) {\n\t\t\t\t\tconst oTargetField = oTargetCell.isA<FieldAPI>(\"sap.fe.macros.field.FieldAPI\")\n\t\t\t\t\t\t? (oTargetCell.getContent() as EnhanceWithUI5<FieldWrapper>).getContentEdit()[0]\n\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t((oTargetCell as HBox).getItems()[0] as FieldAPI).getContent() as EnhanceWithUI5<FieldWrapper>\n\t\t\t\t\t\t  ).getContentEdit()[0];\n\t\t\t\t\tthis.setFocusToControl(oTargetField);\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\tconst errorProperty = message.getTargets()[0].split(\"/\").pop();\n\t\t\t\t\tif (errorProperty) {\n\t\t\t\t\t\t(view.getModel(\"internal\") as JSONModel).setProperty(\"/messageTargetProperty\", errorProperty);\n\t\t\t\t\t}\n\t\t\t\t\tif (targetMdcTable && this._navigationConfigured(targetMdcTable)) {\n\t\t\t\t\t\treturn (view.getController() as PageController)._routing.navigateForwardToContext(\n\t\t\t\t\t\t\toTargetRow.getBindingContext() as ODataV4Context\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t *\n\t * @param obj The message object\n\t * @param aSections The array of sections in the object page\n\t * @returns The rank of the message\n\t */\n\t_getMessageRank(obj: Message & { sectionName: string; subSectionName: string }, aSections: ObjectPageSection[] | undefined): number {\n\t\tif (aSections) {\n\t\t\tlet section, aSubSections, subSection, j, k, aElements, aAllElements, sectionRank;\n\t\t\tfor (j = aSections.length - 1; j >= 0; --j) {\n\t\t\t\t// Loop over all sections\n\t\t\t\tsection = aSections[j];\n\t\t\t\taSubSections = section.getSubSections();\n\t\t\t\tfor (k = aSubSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\tsubSection = aSubSections[k];\n\t\t\t\t\taAllElements = subSection.findElements(true); // Get all elements inside a sub-section\n\t\t\t\t\t//Try to find the control 1 inside the sub section\n\t\t\t\t\taElements = aAllElements.filter(this._fnFilterUponId.bind(this, obj.getControlId()));\n\t\t\t\t\tsectionRank = j + 1;\n\t\t\t\t\tif (aElements.length > 0) {\n\t\t\t\t\t\tif (section.getVisible() && subSection.getVisible()) {\n\t\t\t\t\t\t\tif (!obj.hasOwnProperty(\"sectionName\")) {\n\t\t\t\t\t\t\t\tobj.sectionName = section.getTitle();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!obj.hasOwnProperty(\"subSectionName\")) {\n\t\t\t\t\t\t\t\tobj.subSectionName = subSection.getTitle();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn sectionRank * 10 + (k + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// if section or subsection is invisible then group name would be Last Action\n\t\t\t\t\t\t\t// so ranking should be lower\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if sub section title is Other messages, we return a high number(rank), which ensures\n\t\t\t//that messages belonging to this sub section always come later in messagePopover\n\t\t\tif (!obj.sectionName && !obj.subSectionName && obj.getPersistent()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 999;\n\t\t}\n\t\treturn 999;\n\t}\n\n\t/**\n\t * Get Filter to hide messages from the dialog.\n\t * @returns Filter\n\t */\n\t_filterOutMessagesInDialog(): Filter {\n\t\tconst fnTest = (aControlIds: string[]): boolean => {\n\t\t\treturn messageHandling.isMessageOutOfParameterDialog(aControlIds);\n\t\t};\n\t\treturn new Filter({\n\t\t\tpath: \"controlIds\",\n\t\t\ttest: fnTest,\n\t\t\tcaseSensitive: true\n\t\t});\n\t}\n\n\t/**\n\t * Filter function to hide back-end messages if the control has error validation.\n\t * @returns Filter\n\t */\n\t_getFilterToHideBackendMessageOnErrorValidation(): Filter {\n\t\tconst getIdsOfFielsdWithErrorValidation = function (): string[] {\n\t\t\treturn (\n\t\t\t\tMessaging.getMessageModel()\n\t\t\t\t\t.getData()\n\t\t\t\t\t.filter((message: Message) => message.validation === true && message.getControlId()?.match(/field.*-inner$/i))\n\t\t\t\t\t//the error point to the inner control, so we need to remove the -inner to get the field id\n\t\t\t\t\t.map((message: Message) => message.getControlId()?.replace(\"-inner\", \"\"))\n\t\t\t);\n\t\t};\n\n\t\tconst fnTest = function (aControlIds: string[]): boolean {\n\t\t\t// filtering out the backend messages if the control has error validation\n\t\t\treturn !aControlIds.some((controlId: string) => getIdsOfFielsdWithErrorValidation().includes(controlId));\n\t\t};\n\t\treturn new Filter({\n\t\t\tfilters: [\n\t\t\t\tnew Filter({\n\t\t\t\t\tfilters: [\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\tvalue1: false\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"controlIds\",\n\t\t\t\t\t\t\ttest: fnTest,\n\t\t\t\t\t\t\tcaseSensitive: true\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tand: true\n\t\t\t\t}),\n\t\t\t\tnew Filter({\n\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\tvalue1: true\n\t\t\t\t})\n\t\t\t],\n\t\t\tand: false\n\t\t});\n\t}\n\n\t/**\n\t * Method to set the filters based upon the message items\n\t * The desired filter operation is:\n\t * ( filters provided by user && ( validation = true && Control should be present in view ) || messages for the current matching context ).\n\t * @private\n\t */\n\t_applyFiltersAndSort(): void {\n\t\tlet oValidationFilters,\n\t\t\toValidationAndContextFilter,\n\t\t\toFilters,\n\t\t\tsPath,\n\t\t\toSorter,\n\t\t\toDialogFilter,\n\t\t\tobjectPageLayoutSections: ObjectPageSection[] | undefined;\n\t\tconst aUserDefinedFilter: Filter[] = [];\n\n\t\tthis.sViewId = this.sViewId ? this.sViewId : (this._getViewId(this.getId()) as string);\n\t\t//Add the filters provided by the user\n\t\tconst aCustomFilters = this.getAggregation(\"customFilters\") as Control[] | undefined;\n\t\tif (aCustomFilters) {\n\t\t\taCustomFilters.forEach(function (filter: Control) {\n\t\t\t\taUserDefinedFilter.push(\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: filter.getProperty(\"path\"),\n\t\t\t\t\t\toperator: filter.getProperty(\"operator\"),\n\t\t\t\t\t\tvalue1: filter.getProperty(\"value1\"),\n\t\t\t\t\t\tvalue2: filter.getProperty(\"value2\")\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\tconst oBindingContext = this.getBindingContext();\n\t\tif (!oBindingContext) {\n\t\t\tthis.setVisible(false);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsPath = oBindingContext.getPath();\n\t\t\t//Filter for filtering out only validation messages which are currently present in the view\n\t\t\toValidationFilters = new Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\tvalue1: true\n\t\t\t\t\t}),\n\t\t\t\t\tmessageButtonHelper.getCheckControlInViewFilter(this.sViewId)\n\t\t\t\t],\n\t\t\t\tand: true\n\t\t\t});\n\t\t\t//Filter for filtering out the bound messages i.e target starts with the context path\n\t\t\toValidationAndContextFilter = new Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\toValidationFilters,\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: \"target\",\n\t\t\t\t\t\toperator: FilterOperator.StartsWith,\n\t\t\t\t\t\tvalue1: sPath\n\t\t\t\t\t})\n\t\t\t\t],\n\t\t\t\tand: false\n\t\t\t});\n\t\t\toDialogFilter = new Filter({\n\t\t\t\tfilters: [this._filterOutMessagesInDialog()]\n\t\t\t});\n\t\t}\n\t\tconst oValidationContextDialogFilters = new Filter({\n\t\t\tfilters: [oValidationAndContextFilter, oDialogFilter, this._getFilterToHideBackendMessageOnErrorValidation()],\n\t\t\tand: true\n\t\t});\n\t\t// and finally - if there any - add custom filter (via OR)\n\t\tif (aUserDefinedFilter.length > 0) {\n\t\t\toFilters = new Filter({\n\t\t\t\tfilters: [aUserDefinedFilter, oValidationContextDialogFilters] as unknown as Filter[], // TODO incorrect,\n\t\t\t\tand: false\n\t\t\t});\n\t\t} else {\n\t\t\toFilters = oValidationContextDialogFilters;\n\t\t}\n\t\tthis.oItemBinding.filter(oFilters);\n\t\tthis.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);\n\t\t// We support sorting only for ObjectPageLayout use-case.\n\t\tif (this.oObjectPageLayout) {\n\t\t\toSorter = new Sorter(\n\t\t\t\t\"\",\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\t(\n\t\t\t\t\tobj1: Message & { sectionName: string; subSectionName: string },\n\t\t\t\t\tobj2: Message & { sectionName: string; subSectionName: string }\n\t\t\t\t) => {\n\t\t\t\t\tif (!objectPageLayoutSections) {\n\t\t\t\t\t\tobjectPageLayoutSections = this.oObjectPageLayout && this.oObjectPageLayout.getSections();\n\t\t\t\t\t}\n\t\t\t\t\tconst rankA = this._getMessageRank(obj1, objectPageLayoutSections);\n\t\t\t\t\tconst rankB = this._getMessageRank(obj2, objectPageLayoutSections);\n\t\t\t\t\tif (rankA < rankB) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (rankA > rankB) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis.oItemBinding.sort(oSorter);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sControlId\n\t * @param oItem\n\t * @returns True if the control ID matches the item ID\n\t */\n\t_fnFilterUponId(sControlId: string, oItem: UI5Element): boolean {\n\t\treturn sControlId === oItem.getId();\n\t}\n\n\t/**\n\t * Retrieves the section based on section title and visibility.\n\t * @param oObjectPage Object page.\n\t * @param sSectionTitle Section title.\n\t * @returns The section\n\t * @private\n\t */\n\t_getSectionBySectionTitle(oObjectPage: ObjectPageLayout, sSectionTitle: string): ObjectPageSection | undefined {\n\t\tlet oSection: ObjectPageSection | undefined;\n\t\tif (sSectionTitle) {\n\t\t\tconst aSections = oObjectPage.getSections();\n\t\t\tfor (let i = 0; i < aSections.length; i++) {\n\t\t\t\tif (aSections[i].getVisible() && aSections[i].getTitle() === sSectionTitle) {\n\t\t\t\t\toSection = aSections[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oSection;\n\t}\n\n\t/**\n\t * Navigates to the section if the object page uses an IconTabBar and if the current section is not the target of the navigation.\n\t * @param oObjectPage Object page.\n\t * @param sSectionTitle Section title.\n\t * @private\n\t */\n\t_navigateFromMessageToSectionInIconTabBarMode(oObjectPage: ObjectPageLayout, sSectionTitle: string): void {\n\t\tconst bUseIconTabBar = oObjectPage.getUseIconTabBar();\n\t\tif (bUseIconTabBar) {\n\t\t\tconst oSection = this._getSectionBySectionTitle(oObjectPage, sSectionTitle);\n\t\t\tconst sSelectedSectionId = oObjectPage.getSelectedSection();\n\t\t\tif (oSection && sSelectedSectionId !== oSection.getId()) {\n\t\t\t\toObjectPage.setSelectedSection(oSection.getId());\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _navigateFromMessageToSectionTableInIconTabBarMode(\n\t\toTable: Table,\n\t\toObjectPage: ObjectPageLayout,\n\t\tsSectionTitle: string\n\t): Promise<void> {\n\t\tconst oRowBinding = oTable.getRowBinding();\n\t\tconst oTableContext = oTable.getBindingContext();\n\t\tconst oOPContext = oObjectPage.getBindingContext();\n\t\tconst bShouldWaitForTableRefresh = !(oTableContext === oOPContext);\n\t\tthis._navigateFromMessageToSectionInIconTabBarMode(oObjectPage, sSectionTitle);\n\t\treturn new Promise(function (resolve: Function) {\n\t\t\tif (bShouldWaitForTableRefresh) {\n\t\t\t\toRowBinding.attachEventOnce(\"change\", function () {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the MdcTable if it is found among any of the parent elements.\n\t * @param oElement Control\n\t * @returns MDC table || undefined\n\t * @private\n\t */\n\t_getMdcTable(oElement: UI5Element): MDCTable | undefined {\n\t\t//check if the element has a table within any of its parents\n\t\tlet oParentElement = oElement.getParent();\n\t\twhile (oParentElement && !oParentElement.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\toParentElement = oParentElement.getParent();\n\t\t}\n\t\treturn oParentElement && oParentElement.isA<MDCTable>(\"sap.ui.mdc.Table\") ? oParentElement : undefined;\n\t}\n\n\t_getGridTable(oMdcTable: MDCTable): UITable | undefined {\n\t\treturn oMdcTable.findElements(true, function (oElem: Control) {\n\t\t\treturn (\n\t\t\t\toElem.isA<UITable>(\"sap.ui.table.Table\") &&\n\t\t\t\t/** We check the element belongs to the MdcTable :*/\n\t\t\t\toElem.getParent() === oMdcTable\n\t\t\t);\n\t\t})[0] as UITable | undefined;\n\t}\n\n\t/**\n\t * Retrieves the table row (if available) containing the element.\n\t * @param oElement Control\n\t * @returns Table row || undefined\n\t * @private\n\t */\n\t_getTableRow(oElement: UI5Element): UI5Element | undefined {\n\t\tlet oParentElement = oElement.getParent();\n\t\twhile (\n\t\t\toParentElement &&\n\t\t\t!oParentElement.isA<Row>(\"sap.ui.table.Row\") &&\n\t\t\t!oParentElement.isA<CreationRow>(\"sap.ui.table.CreationRow\") &&\n\t\t\t!oParentElement.isA<ColumnListItem>(ColumnListItem.getMetadata().getName())\n\t\t) {\n\t\t\toParentElement = oParentElement.getParent();\n\t\t}\n\t\treturn oParentElement &&\n\t\t\t(oParentElement.isA<Row>(\"sap.ui.table.Row\") ||\n\t\t\t\toParentElement.isA<CreationRow>(\"sap.ui.table.CreationRow\") ||\n\t\t\t\toParentElement.isA<ColumnListItem>(ColumnListItem.getMetadata().getName()))\n\t\t\t? (oParentElement as UI5Element)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * Retrieves the index of the table row containing the element.\n\t * @param oElement Control\n\t * @returns Row index || undefined\n\t * @private\n\t */\n\t_getTableRowIndex(oElement: UI5Element): number {\n\t\tconst oTableRow = this._getTableRow(oElement);\n\t\tlet iRowIndex;\n\t\tif (oTableRow?.isA<Row>(\"sap.ui.table.Row\")) {\n\t\t\tiRowIndex = oTableRow.getIndex();\n\t\t} else {\n\t\t\tiRowIndex = (oTableRow as { getTable?: () => ResponsiveTable })\n\t\t\t\t?.getTable?.()\n\t\t\t\t.getItems()\n\t\t\t\t.findIndex(function (element: UI5Element) {\n\t\t\t\t\treturn element.getId() === oTableRow?.getId();\n\t\t\t\t});\n\t\t}\n\t\treturn iRowIndex ?? -1;\n\t}\n\n\t/**\n\t * Retrieves the index of the table column containing the element.\n\t * @param element Control\n\t * @returns Column index || undefined\n\t * @private\n\t */\n\t_getTableColumnIndex(element: UI5Element): number | undefined {\n\t\tconst getTargetCellIndex = function (elt: UI5Element, targetRow: Row | undefined): number | undefined {\n\t\t\treturn targetRow?.getCells().findIndex(function (cell: Control) {\n\t\t\t\treturn cell.getId() === elt.getId();\n\t\t\t});\n\t\t};\n\t\tconst getTargetColumnIndex = function (elt: UI5Element, targetRow: Row | undefined): number | undefined {\n\t\t\tlet targetElement = elt.getParent() as UI5Element,\n\t\t\t\ttargetCellIndex = getTargetCellIndex(targetElement, targetRow);\n\t\t\twhile (targetElement && targetCellIndex && targetCellIndex < 0) {\n\t\t\t\ttargetElement = targetElement.getParent() as UI5Element;\n\t\t\t\ttargetCellIndex = getTargetCellIndex(targetElement, targetRow);\n\t\t\t}\n\t\t\treturn targetCellIndex;\n\t\t};\n\t\tconst targetRow = this._getTableRow(element) as Row | undefined;\n\n\t\tlet targetColumnIndex = getTargetColumnIndex(element, targetRow);\n\t\tif (targetRow?.isA<CreationRow>(\"sap.ui.table.CreationRow\")) {\n\t\t\tconst targetCellId = targetColumnIndex ? targetRow.getCells()[targetColumnIndex].getId() : undefined,\n\t\t\t\ttableColumns = targetRow.getTable()?.getColumns();\n\t\t\ttargetColumnIndex = tableColumns?.findIndex(function (column: Column) {\n\t\t\t\tif (column.getCreationTemplate() && targetCellId) {\n\t\t\t\t\treturn targetCellId.search(column.getCreationTemplate().getId()) > -1 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn targetColumnIndex;\n\t}\n\n\t_getMdcTableRows(oMdcTable: MDCTable): Row[] {\n\t\treturn oMdcTable.findElements(true, function (oElem: Control) {\n\t\t\treturn (\n\t\t\t\toElem.isA<Row>(\"sap.ui.table.Row\") &&\n\t\t\t\t/** We check the element belongs to the Mdc Table :*/\n\t\t\t\t(oElem as { getTable?: () => UI5Element }).getTable?.().getParent() === oMdcTable\n\t\t\t);\n\t\t}) as Row[];\n\t}\n\n\t_getObjectPageLayout(oElement: ManagedObject | undefined, oObjectPageLayout?: ObjectPageLayout): ObjectPageLayout | undefined {\n\t\tif (oObjectPageLayout) {\n\t\t\treturn oObjectPageLayout;\n\t\t}\n\t\tlet targetElement = oElement;\n\t\t//Iterate over parent till you have not reached the object page layout\n\t\twhile (targetElement && !targetElement.isA<ObjectPageLayout>(\"sap.uxap.ObjectPageLayout\")) {\n\t\t\ttargetElement = targetElement.getParent() ?? undefined;\n\t\t}\n\t\treturn targetElement;\n\t}\n\n\t/**\n\t * The method that is called to check if a navigation is configured from the table to a sub object page.\n\t * @private\n\t * @param table MdcTable\n\t * @returns Either true or false\n\t */\n\t_navigationConfigured(table: Table): boolean {\n\t\t// TODO: this logic would be moved to check the same at the template time to avoid the same check happening multiple times.\n\t\tconst component = sap.ui.require(\"sap/ui/core/Component\"),\n\t\t\tnavObject = table && component.getOwnerComponentFor(table) && component.getOwnerComponentFor(table).getNavigation();\n\t\tlet subOPConfigured = false,\n\t\t\tnavConfigured = false;\n\t\tif (navObject && Object.keys(navObject).includes(table.getRowBinding().getPath())) {\n\t\t\tsubOPConfigured =\n\t\t\t\tnavObject[table?.getRowBinding().getPath()] &&\n\t\t\t\tnavObject[table?.getRowBinding().getPath()].detail &&\n\t\t\t\tnavObject[table?.getRowBinding().getPath()].detail.route\n\t\t\t\t\t? true\n\t\t\t\t\t: false;\n\t\t}\n\t\tnavConfigured =\n\t\t\tsubOPConfigured &&\n\t\t\ttable?.getRowSettings().getRowActions() &&\n\t\t\ttable?.getRowSettings().getRowActions()[0].getType().includes(\"Navigation\");\n\t\treturn navConfigured;\n\t}\n\n\tsetFocusToControl(control?: UI5Element): void {\n\t\tconst messagePopover = this.oMessagePopover;\n\t\tif (messagePopover && control && control.focus) {\n\t\t\tconst fnFocus = (): void => {\n\t\t\t\tcontrol.focus();\n\t\t\t};\n\t\t\tif (!messagePopover.isOpen()) {\n\t\t\t\t// when navigating to parent page to child page (on click of message), the child page might have a focus logic that might use a timeout.\n\t\t\t\t// we use the below timeouts to override this focus so that we focus on the target control of the message in the child page.\n\t\t\t\tsetTimeout(fnFocus, 0);\n\t\t\t} else {\n\t\t\t\tconst fnOnClose = (): void => {\n\t\t\t\t\tsetTimeout(fnFocus, 0);\n\t\t\t\t\tmessagePopover.detachEvent(\"afterClose\", fnOnClose);\n\t\t\t\t};\n\t\t\t\tmessagePopover.attachEvent(\"afterClose\", fnOnClose);\n\t\t\t\tmessagePopover.close();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.warning(\"FE V4 : MessageButton : element doesn't have focus method for focusing.\");\n\t\t}\n\t}\n\n\tescape(value: string): string {\n\t\treturn String(value)\n\t\t\t.replace(/&/g, \"&amp;\")\n\t\t\t.replace(/\"/g, \"&quot;\")\n\t\t\t.replace(/'/g, \"&#39;\")\n\t\t\t.replace(/</g, \"&lt;\")\n\t\t\t.replace(/>/g, \"&gt;\");\n\t}\n}\n\nexport default MessageButton;\n"],"mappings":"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","ignoreList":[]}