{"version":3,"names":["DefaultActionHandler","getDefaultActionHandler","oCtx","oAction","oDataFieldForDefaultAction","defaultActionContextOrEntitySet","mode","collectionContext","defaultAction","type","actionObject","metaPath","getModel","createBindingContext","getObject","Table","pressEventDataFieldForActionButton","tableDefinition","operationAvailableMap","isNavigable","enableAutoScroll","defaultValuesExtensionFunction","undefined","CommonHelper","getPressHandlerForDataFieldForIBN","enableAnalytics","command","noWrap","press","buildActionWrapper","id","ioEx","getUseDefaultActionOnly","getButtonMode","MenuButtonMode","Split","Regular"],"sourceRoot":".","sources":["DefaultActionHandler.ts"],"sourcesContent":["import type { DataFieldForAction, DataFieldForIntentBasedNavigation } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { type CustomAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type { CustomAndAction } from \"sap/fe/macros/chart/MdcChartTemplate\";\nimport type { TableBlockProperties } from \"sap/fe/macros/table/MdcTableTemplate\";\nimport Table from \"sap/fe/macros/table/TableHelper\";\nimport { MenuButtonMode } from \"sap/m/library\";\nimport type Context from \"sap/ui/model/Context\";\n\nconst DefaultActionHandler = {\n\t/**\n\t * The default action group handler that is invoked when adding the menu button handling appropriately.\n\t * @param oCtx The current context in which the handler is called\n\t * @param oAction The current action context\n\t * @param oDataFieldForDefaultAction The current dataField for the default action\n\t * @param defaultActionContextOrEntitySet The current context for the default action\n\t * @param mode The optional parameter for the handler mode; default setting is Table\n\t * @param collectionContext\n\t * @returns The appropriate expression string\n\t */\n\tgetDefaultActionHandler: function (\n\t\toCtx: TableBlockProperties | undefined,\n\t\toAction: Omit<CustomAction, \"defaultAction\"> & { defaultAction?: CustomAction },\n\t\toDataFieldForDefaultAction: DataFieldForIntentBasedNavigation | DataFieldForAction | undefined,\n\t\tdefaultActionContextOrEntitySet: string | object | undefined,\n\t\tmode: \"Table\" | \"Form\",\n\t\tcollectionContext: Context\n\t): CompiledBindingToolkitExpression | undefined {\n\t\tif (oAction.defaultAction) {\n\t\t\ttry {\n\t\t\t\tswitch (oAction.defaultAction.type) {\n\t\t\t\t\tcase \"ForAction\": {\n\t\t\t\t\t\tif (mode === \"Table\" && oCtx) {\n\t\t\t\t\t\t\tconst actionObject =\n\t\t\t\t\t\t\t\ttypeof defaultActionContextOrEntitySet === \"string\"\n\t\t\t\t\t\t\t\t\t? oCtx.metaPath.getModel().createBindingContext(defaultActionContextOrEntitySet)?.getObject()\n\t\t\t\t\t\t\t\t\t: defaultActionContextOrEntitySet;\n\n\t\t\t\t\t\t\treturn Table.pressEventDataFieldForActionButton(\n\t\t\t\t\t\t\t\toCtx,\n\t\t\t\t\t\t\t\toDataFieldForDefaultAction as DataFieldForAction,\n\t\t\t\t\t\t\t\tcollectionContext.getObject(\"@sapui.name\"),\n\t\t\t\t\t\t\t\toCtx.tableDefinition.operationAvailableMap,\n\t\t\t\t\t\t\t\tactionObject,\n\t\t\t\t\t\t\t\toAction.isNavigable,\n\t\t\t\t\t\t\t\toAction.enableAutoScroll,\n\t\t\t\t\t\t\t\toAction.defaultValuesExtensionFunction\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"ForNavigation\": {\n\t\t\t\t\t\tif (mode === \"Table\" && oCtx) {\n\t\t\t\t\t\t\treturn CommonHelper.getPressHandlerForDataFieldForIBN(\n\t\t\t\t\t\t\t\toDataFieldForDefaultAction as DataFieldForIntentBasedNavigation,\n\t\t\t\t\t\t\t\t\"${internal>selectedContexts}\",\n\t\t\t\t\t\t\t\t!oCtx.tableDefinition.enableAnalytics\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (oAction.defaultAction.command) {\n\t\t\t\t\t\t\treturn \"cmd:\" + oAction.defaultAction.command;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oAction.defaultAction.noWrap) {\n\t\t\t\t\t\t\treturn oAction.defaultAction.press;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (mode) {\n\t\t\t\t\t\t\t\tcase \"Table\": {\n\t\t\t\t\t\t\t\t\treturn CommonHelper.buildActionWrapper(oAction.defaultAction, oCtx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase \"Form\": {\n\t\t\t\t\t\t\t\t\treturn CommonHelper.buildActionWrapper(oAction.defaultAction, { id: \"forTheForm\" });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (ioEx) {\n\t\t\t\treturn \"binding for the default action is not working as expected\";\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * The function determines during templating whether to use the defaultActionOnly\n\t * setting for the sap.m.MenuButton control in case a defaultAction is provided.\n\t * @param oAction The current action context\n\t * @returns A Boolean value\n\t */\n\tgetUseDefaultActionOnly: function (oAction: CustomAndAction): boolean {\n\t\tif (oAction.defaultAction) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t/**\n\t * The function determines during templating whether to use the 'Split'\n\t * or 'Regular' MenuButtonMode for the sap.m.MenuButton control\n\t * in case a defaultAction is available.\n\t * @param oAction The current action context\n\t * @returns The MenuButtonMode\n\t */\n\tgetButtonMode: function (oAction: CustomAndAction): MenuButtonMode {\n\t\tif (oAction.defaultAction) {\n\t\t\treturn MenuButtonMode.Split;\n\t\t} else {\n\t\t\treturn MenuButtonMode.Regular;\n\t\t}\n\t}\n};\n\nexport default DefaultActionHandler;\n"],"mappings":";;;;;;;;EAUA,MAAMA,oBAAoB,GAAG;IAC5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCC,uBAAuB,EAAE,SAAAA,CACxBC,IAAsC,EACtCC,OAA+E,EAC/EC,0BAA8F,EAC9FC,+BAA4D,EAC5DC,IAAsB,EACtBC,iBAA0B,EACqB;MAC/C,IAAIJ,OAAO,CAACK,aAAa,EAAE;QAC1B,IAAI;UACH,QAAQL,OAAO,CAACK,aAAa,CAACC,IAAI;YACjC,KAAK,WAAW;cAAE;gBACjB,IAAIH,IAAI,KAAK,OAAO,IAAIJ,IAAI,EAAE;kBAC7B,MAAMQ,YAAY,GACjB,OAAOL,+BAA+B,KAAK,QAAQ,GAChDH,IAAI,CAACS,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAACC,oBAAoB,CAACR,+BAA+B,CAAC,EAAES,SAAS,CAAC,CAAC,GAC3FT,+BAA+B;kBAEnC,OAAOU,KAAK,CAACC,kCAAkC,CAC9Cd,IAAI,EACJE,0BAA0B,EAC1BG,iBAAiB,CAACO,SAAS,CAAC,aAAa,CAAC,EAC1CZ,IAAI,CAACe,eAAe,CAACC,qBAAqB,EAC1CR,YAAY,EACZP,OAAO,CAACgB,WAAW,EACnBhB,OAAO,CAACiB,gBAAgB,EACxBjB,OAAO,CAACkB,8BACT,CAAC;gBACF;gBACA,OAAOC,SAAS;cACjB;YACA,KAAK,eAAe;cAAE;gBACrB,IAAIhB,IAAI,KAAK,OAAO,IAAIJ,IAAI,EAAE;kBAC7B,OAAOqB,YAAY,CAACC,iCAAiC,CACpDpB,0BAA0B,EAC1B,8BAA8B,EAC9B,CAACF,IAAI,CAACe,eAAe,CAACQ,eACvB,CAAC;gBACF;gBACA,OAAOH,SAAS;cACjB;YACA;cAAS;gBACR,IAAInB,OAAO,CAACK,aAAa,CAACkB,OAAO,EAAE;kBAClC,OAAO,MAAM,GAAGvB,OAAO,CAACK,aAAa,CAACkB,OAAO;gBAC9C;gBACA,IAAIvB,OAAO,CAACK,aAAa,CAACmB,MAAM,EAAE;kBACjC,OAAOxB,OAAO,CAACK,aAAa,CAACoB,KAAK;gBACnC,CAAC,MAAM;kBACN,QAAQtB,IAAI;oBACX,KAAK,OAAO;sBAAE;wBACb,OAAOiB,YAAY,CAACM,kBAAkB,CAAC1B,OAAO,CAACK,aAAa,EAAEN,IAAI,CAAC;sBACpE;oBACA,KAAK,MAAM;sBAAE;wBACZ,OAAOqB,YAAY,CAACM,kBAAkB,CAAC1B,OAAO,CAACK,aAAa,EAAE;0BAAEsB,EAAE,EAAE;wBAAa,CAAC,CAAC;sBACpF;kBACD;gBACD;cACD;UACD;QACD,CAAC,CAAC,OAAOC,IAAI,EAAE;UACd,OAAO,2DAA2D;QACnE;MACD;MACA,OAAOT,SAAS;IACjB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACCU,uBAAuB,EAAE,SAAAA,CAAU7B,OAAwB,EAAW;MACrE,IAAIA,OAAO,CAACK,aAAa,EAAE;QAC1B,OAAO,IAAI;MACZ,CAAC,MAAM;QACN,OAAO,KAAK;MACb;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACCyB,aAAa,EAAE,SAAAA,CAAU9B,OAAwB,EAAkB;MAClE,IAAIA,OAAO,CAACK,aAAa,EAAE;QAC1B,OAAO0B,cAAc,CAACC,KAAK;MAC5B,CAAC,MAAM;QACN,OAAOD,cAAc,CAACE,OAAO;MAC9B;IACD;EACD,CAAC;EAAC,OAEapC,oBAAoB;AAAA","ignoreList":[],"file":"DefaultActionHandler-dbg.js"}