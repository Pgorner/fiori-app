{"version":3,"names":["setUpField","internalField","controlConfiguration","settings","metaPath","contextPath","resultField","change","visible","liveChangeEnabled","onLiveChange","hasListeners","semanticObject","value","mainPropertyRelativePath","vhIdPrefix","_flexId","id","idPrefix","showValueHelpTemplate","formatOptions","getFormatOptions","valueHelpMetaPath","computeCommonProperties","convertedMetaPath","setUpDataPointType","setUpVisibleProperties","computeIDs","dataSourcePath","getTargetObjectPath","dataModelPath","computeExternalID","entityType","odataMetaModel","createBindingContext","targetEntityType","fullyQualifiedName","forInlineCreationRows","hasPropertyInsertRestrictions","computeEditMode","computeCollaborationProperties","computeEditableExpressions","setUpFormatOptions","dataModelPathExternalID","setUpDisplayStyle","setUpEditStyle","appComponent","valueState","setUpValueState","editStyle","editStylePlaceholder","setInputWithValuehelpPlaceholder","aDisplayStylesWithoutPropText","displayStyle","includes","targetObject","text","FieldTemplating","getTextBinding","showEmptyIndicator","emptyIndicatorMode","String","undefined","isProperty","annotations","UI","DataFieldDefault","readOnly","editMode","compileExpression","ifElse","equal","resolveBindingString","eventHandlers","liveChange","validateFieldGroup","_exports","computedEditableExpression","UIFormatters","getEditableExpressionAsObject","propertyForFieldControl","ModelHelper","isCollaborationDraftSupported","FieldEditMode","Display","collaborationEnabled","collaborationExpression","getCollaborationExpression","CollaborationFormatters","hasCollaborationActivity","editableExpression","and","not","constant","IsInactive","editModeAsObject","MetaModelConverter","convertMetaModelContext","metaPathContext","getInvolvedDataModelObjects","getDataModelObjectPathForValue","property","models","metaModel","Value","requiredPropertiesFromInsertRestrictions","getRequiredPropertiesFromInsertRestrictions","contextPathContext","getPath","replaceAll","requiredPropertiesFromUpdateRestrictions","getRequiredPropertiesFromUpdateRestrictions","oRequiredProperties","enabledExpression","getEnabledExpression","requiredExpression","getRequiredExpression","measureReadOnly","measureDisplayMode","getEditMode","externalIDProperty","getAssociatedExternalIdProperty","type","isDataField","$target","externalIdPropertyPath","getAssociatedExternalIdPropertyPath","externalIdContext","getModel","convertedMetaPathExternalID","computeFieldGroupIds","field","typesForCollaborationFocusManagement","sideEffectService","getSideEffectsService","fieldGroupIds","collaborationFieldGroup","CollaborationFieldGroupPrefix","push","getContextRelativeTargetObjectPath","length","join","_apiId","getContentId","_vhFlexId","editStyleId","generate","fieldMode","displayStyleId","textAlignMode","displayMode","textLinesEdit","textMaxLines","textMaxCharactersDisplay","textExpandBehaviorDisplay","textMaxLength","fieldEditStyle","radioButtonsHorizontalLayout","showTime","showTimezone","showDate","getObjectIdentifierText","fieldFormatOptions","propertyDataModelObjectPath","propertyBindingExpression","pathInModel","targetDisplayMode","propertyDefinition","isPropertyPathExpression","commonText","Common","Text","formatWithTypeInformation","relativeLocation","getRelativePaths","getExpressionFromAnnotation","formatResult","valueFormatters","formatToKeepWhitespace","getOverrides","props","controlConfig","Object","keys","forEach","configKey","manageQuickViewForDisplayStyle","hasSemanticObjects","hasQuickView","quickViewType","foundSemanticObjects","manageSemanticObjectsForCurrentUser","hasReachableStaticSemanticObject","dynamicSemanticObjects","propertyOrNavigationPropertyHasSemanticObject","getPropertyWithSemanticObject","fieldContainerType","propertyPath","name","recommendationValue","recommendationDescription","placeholderExp","additionalValueFormatter","formatPlaceholder","dataField","dataPointType","term","$Type","hasUnitOrCurrency","Measures","Unit","ISOCurrency","hasValidAnalyticalCurrencyOrUnit","textFromValueList","wrapBindingExpression","fn","IsImage","IsImageURL","InputMask","setUpDraftIndicator","Target","isUsedInNavigationWithQuickViewFacets","isSemanticKey","semanticKeyStyle","setUpObjectIdentifierTitleAndText","showErrorIndicator","contextLocation","_type","fieldGroupDraftIndicatorPropertyPath","situationsIndicatorPropertyPath","Criticality","isCurrencyAligned","valueAsStringBindingExpression","getValueBinding","unitBindingExpression","getBindingForUnitOrCurrency","Communication","IsEmailAddress","IsPhoneNumber","MultiLineText","hasSituationsIndicator","SituationsIndicator","getSituationsNavigationProperty","targetEntitySet","DraftRoot","hasDraftIndicator","draftIndicatorVisible","getDraftIndicatorVisibleBinding","addDraftIndicator","setEditStyleProperties","semanticStyle","identifierTitle","getTitleBindingExpression","getTextBindingExpression","splitTitleOnTwoLines","identifierText","overrideProps","getDisplayMode","viewData","getProperty","retrieveTextFromValueList","isRetrieveTextFromValueListEnabled","hasEntityTextArrangement","TextArrangement","valueStateExp","propertyPathInModel","textPath","formatValueState","getVisibleExpression","displayVisible","macroId"],"sourceRoot":".","sources":["FieldStructureHelper.ts"],"sourcesContent":["import type { EntitySet, Property, PropertyPath, ServiceObject } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataFieldAbstractTypes,\n\tDataFieldForAnnotation,\n\tDataFieldTypes,\n\tDataPoint,\n\tDataPointTypeTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type {\n\tBindingToolkitExpression,\n\tCompiledBindingToolkitExpression,\n\tExpressionOrPrimitive,\n\tPathInModelExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tfn,\n\tformatResult,\n\tformatWithTypeInformation,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tnot,\n\tpathInModel,\n\tresolveBindingString,\n\twrapBindingExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { XMLPreprocessorContext } from \"sap/fe/core/TemplateComponent\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport { CollaborationFieldGroupPrefix } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { isDataField } from \"sap/fe/core/converters/annotations/DataField\";\nimport * as CollaborationFormatters from \"sap/fe/core/formatters/CollaborationFormatter\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport {\n\tgetRequiredPropertiesFromInsertRestrictions,\n\tgetRequiredPropertiesFromUpdateRestrictions\n} from \"sap/fe/core/helpers/MetaModelFunction\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { getTitleBindingExpression } from \"sap/fe/core/helpers/TitleHelper\";\nimport { isProperty, isPropertyPathExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getContextRelativeTargetObjectPath, getRelativePaths, getTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getAssociatedExternalIdProperty, getAssociatedExternalIdPropertyPath, isSemanticKey } from \"sap/fe/core/templating/PropertyHelper\";\nimport { getPropertyWithSemanticObject, manageSemanticObjectsForCurrentUser } from \"sap/fe/core/templating/SemanticObjectHelper\";\nimport type { DisplayMode } from \"sap/fe/core/templating/UIFormatters\";\nimport * as UIFormatters from \"sap/fe/core/templating/UIFormatters\";\nimport type { InputMaskFormatOptions } from \"sap/fe/core/type/InputMask\";\nimport * as FieldTemplating from \"sap/fe/macros/field/FieldTemplating\";\nimport {\n\tgetDataModelObjectPathForValue,\n\tgetDraftIndicatorVisibleBinding,\n\tgetTextBindingExpression,\n\tgetValueBinding,\n\tgetVisibleExpression,\n\thasPropertyInsertRestrictions,\n\tisRetrieveTextFromValueListEnabled,\n\tisUsedInNavigationWithQuickViewFacets,\n\tsetEditStyleProperties\n} from \"sap/fe/macros/field/FieldTemplating\";\nimport additionalValueFormatter from \"sap/fe/macros/internal/valuehelp/AdditionalValueFormatter\";\nimport SituationsIndicator from \"sap/fe/macros/situations/SituationsIndicator\";\nimport type Control from \"sap/ui/core/Control\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { EventHandler } from \"types/extension_types\";\nimport type FieldAPI from \"../../field/FieldAPI\";\nimport type FieldFormatOptions from \"../../field/FieldFormatOptions\";\nimport type { DisplayStyle as DisplayStyleType, EditStyle as EditStyleType, FieldProperties } from \"../InternalField.block\";\n\nexport type InputFieldBlockProperties = PropertiesOf<FieldAPI> & {\n\tisPublicField?: boolean; //\n\t//add events from FieldAPI - 'PropertiesOf' does not include them\n\tchange?: EventHandler;\n\tliveChange?: EventHandler;\n\tonLiveChange?: string;\n};\nexport type FieldBlockProperties = Omit<FieldAPI, \"metaPath\" | \"contextPath\" | \"change\" | \"visible\"> & {\n\tchange: string | undefined | EventHandler;\n\tmetaPath: Context;\n\tcontextPath: Context;\n\tisPublicField: boolean;\n\tvisible?: boolean | CompiledBindingToolkitExpression;\n\tliveChange: EventHandler;\n\tonLiveChange?: string | EventHandler;\n\tsemanticObject: string;\n\tvalue?: string;\n\tmainPropertyRelativePath?: string;\n\t//-----\n\tformatOptions: FieldFormatOptions;\n\tproperty: Property;\n\tdataModelPath: DataModelObjectPath<Property>;\n\tvalueAsStringBindingExpression?: CompiledBindingToolkitExpression;\n\tunitBindingExpression?: string;\n\tdisplayVisible?: string | boolean;\n\thasValidAnalyticalCurrencyOrUnit?: CompiledBindingToolkitExpression;\n\t_flexId?: string;\n\tidPrefix?: string;\n\tconvertedMetaPath: DataFieldAbstractTypes | DataPointTypeTypes;\n\tclass?: string;\n\tariaLabelledBy?: string[];\n\thasUnitOrCurrency?: boolean;\n\ttext?: BindingToolkitExpression<string> | CompiledBindingToolkitExpression;\n\temptyIndicatorMode?: string;\n\teditableExpression: string | CompiledBindingToolkitExpression;\n\tfieldGroupIds?: string;\n\tdisplayStyleId?: string;\n\twrap?: boolean;\n\ttextFromValueList?: CompiledBindingToolkitExpression;\n\thasQuickView: boolean;\n\tidentifierTitle?: CompiledBindingToolkitExpression;\n\tidentifierText?: CompiledBindingToolkitExpression;\n\thasSituationsIndicator?: boolean;\n\tsituationsIndicatorPropertyPath: string;\n\tshowErrorIndicator: boolean;\n\tshowErrorObjectStatus?: boolean | CompiledBindingToolkitExpression;\n\tdynamicSemanticObjects?: BindingToolkitExpression<string>[];\n\tcollaborationExpression: BindingToolkitExpression<boolean>;\n\tcollaborationEnabled?: boolean;\n\tdataSourcePath?: string;\n\teditStyleId?: string;\n\tenabledExpression: string | CompiledBindingToolkitExpression;\n\trequiredExpression?: string;\n\teditModeAsObject: CompiledBindingToolkitExpression | BindingToolkitExpression<string>;\n\tvalueBindingExpression?: CompiledBindingToolkitExpression;\n\tshowTimezone?: boolean;\n\tminDateExpression: BindingToolkitExpression<unknown> | undefined | CompiledBindingToolkitExpression;\n\tmaxDateExpression: BindingToolkitExpression<unknown> | undefined | CompiledBindingToolkitExpression;\n\tliveChangeEnabled?: boolean;\n\teditStylePlaceholder?: string;\n\tstaticDescription?: string;\n\t_vhFlexId?: string;\n\tvhIdPrefix: string;\n\tvalueState?: CompiledBindingToolkitExpression;\n\teditMode?: FieldEditMode | CompiledBindingToolkitExpression;\n\ttextBindingExpression?: CompiledBindingToolkitExpression;\n\tratingIndicatorTooltip?: CompiledBindingToolkitExpression;\n\tratingIndicatorTargetValue?: CompiledBindingToolkitExpression;\n\tmask?: InputMaskFormatOptions | null;\n\teditStyle?: EditStyleType | null;\n\t_apiId?: string;\n\tnavigateAfterAction: boolean | undefined;\n\ttextAlign?: string;\n\tentityType?: Context;\n\todataMetaModel: ODataMetaModel;\n\tpropertyForFieldControl: UIFormatters.PropertyOrPath<Property>;\n\tdescriptionBindingExpression?: string;\n\tquickViewType?: \"SemanticLinks\" | \"Facets\" | \"FacetsAndSemanticLinks\";\n\tdisplayStyle?: DisplayStyleType;\n\tunitEditable?: string;\n\tstaticUnit?: string;\n\tvalueInputWidth?: string;\n\tvalueInputFieldWidth?: string;\n\tunitInputVisible?: CompiledBindingToolkitExpression;\n\tdraftIndicatorVisible?: string;\n\thasPropertyInsertRestrictions?: boolean | ExpressionOrPrimitive<boolean>;\n\taddDraftIndicator: boolean | undefined;\n\tconvertedMetaPathExternalID?: Property;\n\tdataModelPathExternalID?: DataModelObjectPath<Property | PropertyPath>;\n\tvalueHelpMetaPath?: Context;\n\tshowValueHelpTemplate: boolean;\n\tid: string;\n\treadOnly?: boolean;\n\tmetaPathContext: Context | undefined;\n\tcontextPathContext: Context | undefined;\n\teventHandlers: {\n\t\tchange: EventHandler;\n\t\tliveChange: EventHandler;\n\t\tvalidateFieldGroup: EventHandler;\n\t};\n};\n\nexport function setUpField(\n\tinternalField: InputFieldBlockProperties,\n\tcontrolConfiguration: TemplateProcessorSettings,\n\tsettings: TemplateProcessorSettings | XMLPreprocessorContext,\n\tmetaPath?: Context | undefined,\n\tcontextPath?: Context | undefined\n): FieldBlockProperties {\n\tconst resultField = { ...internalField } as unknown as FieldBlockProperties;\n\n\tresultField.change = internalField.change;\n\tresultField.metaPath = (metaPath ? metaPath : internalField.metaPath) as Context;\n\tresultField.contextPath = (contextPath ? contextPath : internalField.contextPath) as Context;\n\tresultField.visible = internalField.visible;\n\tresultField.liveChangeEnabled = !!internalField.onLiveChange || (internalField as unknown as Control).hasListeners?.(\"liveChange\");\n\tresultField.semanticObject = internalField.semanticObject as string;\n\tresultField.value = internalField.value;\n\tresultField.mainPropertyRelativePath = internalField.mainPropertyRelativePath;\n\n\t//this currently works only for the internal field\n\tif (!resultField.vhIdPrefix) {\n\t\tresultField.vhIdPrefix = \"FieldValueHelp\";\n\t\tresultField._flexId = internalField.id;\n\t\tif (!resultField.idPrefix) {\n\t\t\tresultField.idPrefix = internalField.id;\n\t\t}\n\t\tresultField.showValueHelpTemplate = true;\n\t}\n\n\tresultField.formatOptions ??= {} as FieldFormatOptions;\n\tresultField.formatOptions = getFormatOptions(resultField);\n\n\tresultField.valueHelpMetaPath = metaPath ? metaPath : resultField.metaPath;\n\tcomputeCommonProperties(resultField, settings as unknown as TemplateProcessorSettings);\n\tresultField.convertedMetaPath = setUpDataPointType(resultField.convertedMetaPath);\n\tsetUpVisibleProperties(resultField);\n\tcomputeIDs(resultField);\n\tresultField.dataSourcePath = getTargetObjectPath(resultField.dataModelPath);\n\n\t/* EXTERNALID */\n\tcomputeExternalID(resultField);\n\tresultField.entityType = resultField.odataMetaModel.createBindingContext(\n\t\t`/${resultField.dataModelPath.targetEntityType.fullyQualifiedName}`\n\t);\n\tif (resultField.formatOptions?.forInlineCreationRows === true) {\n\t\tresultField.hasPropertyInsertRestrictions = hasPropertyInsertRestrictions(resultField.dataModelPath);\n\t}\n\tcomputeEditMode(resultField);\n\tcomputeCollaborationProperties(resultField);\n\tcomputeEditableExpressions(resultField);\n\tresultField.formatOptions = resultField.formatOptions ? resultField.formatOptions : ({} as FieldFormatOptions);\n\tsetUpFormatOptions(\n\t\tresultField,\n\t\t(resultField.dataModelPathExternalID as DataModelObjectPath<Property>) || resultField.dataModelPath,\n\t\tcontrolConfiguration,\n\t\tsettings as unknown as TemplateProcessorSettings\n\t);\n\tsetUpDisplayStyle(\n\t\tresultField,\n\t\tresultField.convertedMetaPath,\n\t\tresultField.dataModelPath,\n\t\tsettings as unknown as TemplateProcessorSettings\n\t);\n\tsetUpEditStyle(resultField, settings?.appComponent);\n\n\tresultField.valueState = setUpValueState(resultField);\n\tif (resultField.editStyle === \"InputWithValueHelp\") {\n\t\tresultField.editStylePlaceholder = setInputWithValuehelpPlaceholder(resultField);\n\t}\n\n\t// ---------------------------------------- compute bindings----------------------------------------------------\n\tconst aDisplayStylesWithoutPropText = [\"Avatar\", \"AmountWithCurrency\"];\n\tif (\n\t\tresultField.displayStyle &&\n\t\t!aDisplayStylesWithoutPropText.includes(resultField.displayStyle) &&\n\t\tresultField.dataModelPath.targetObject\n\t) {\n\t\tresultField.text =\n\t\t\tresultField.text ??\n\t\t\tresultField.value ??\n\t\t\tFieldTemplating.getTextBinding(\n\t\t\t\t(resultField.dataModelPathExternalID as DataModelObjectPath<Property>) || resultField.dataModelPath,\n\t\t\t\tresultField.formatOptions\n\t\t\t);\n\t} else {\n\t\tresultField.text = \"\";\n\t}\n\n\tif (resultField.formatOptions.showEmptyIndicator) {\n\t\tresultField.emptyIndicatorMode = String(resultField.formatOptions.showEmptyIndicator) === \"true\" ? \"On\" : undefined;\n\t} else {\n\t\tresultField.emptyIndicatorMode = undefined;\n\t}\n\n\t// If the target is a property with a DataFieldDefault, use this as data field\n\tif (isProperty(resultField.convertedMetaPath) && resultField.convertedMetaPath.annotations?.UI?.DataFieldDefault !== undefined) {\n\t\tresultField.metaPath = resultField.odataMetaModel.createBindingContext(\n\t\t\t`@${UIAnnotationTerms.DataFieldDefault}`,\n\t\t\tmetaPath ? metaPath : resultField.metaPath\n\t\t);\n\t}\n\n\tif (resultField.readOnly !== undefined) {\n\t\tresultField.editMode = compileExpression(\n\t\t\tifElse(equal(resolveBindingString(resultField.readOnly, \"boolean\"), true), \"Display\", \"Editable\")\n\t\t);\n\t}\n\n\tresultField.eventHandlers = {\n\t\tchange: (): void => {},\n\t\tliveChange: (): void => {},\n\t\tvalidateFieldGroup: (): void => {}\n\t};\n\n\treturn resultField;\n}\n\n/**\n * This helper computes the properties that are needed for the collaboration avatar.\n * @param internalField Reference to the current internal field instance\n */\nexport function computeCollaborationProperties(internalField: FieldBlockProperties): void {\n\tconst computedEditableExpression = UIFormatters.getEditableExpressionAsObject(\n\t\tinternalField.propertyForFieldControl,\n\t\tinternalField.convertedMetaPath,\n\t\tinternalField.dataModelPath\n\t);\n\tif (ModelHelper.isCollaborationDraftSupported(internalField.odataMetaModel) && internalField.editMode !== FieldEditMode.Display) {\n\t\tconst collaborationEnabled = true;\n\t\t// Expressions needed for Collaboration Visualization\n\t\tconst collaborationExpression = UIFormatters.getCollaborationExpression(\n\t\t\tinternalField.dataModelPath,\n\t\t\tCollaborationFormatters.hasCollaborationActivity\n\t\t);\n\t\tconst editableExpression = compileExpression(and(computedEditableExpression, not(collaborationExpression)));\n\n\t\tconst editMode = compileExpression(\n\t\t\tifElse(\n\t\t\t\tcollaborationExpression,\n\t\t\t\tconstant(\"ReadOnly\"),\n\t\t\t\tifElse(and(UI.IsInactive, !!internalField.hasPropertyInsertRestrictions), \"Display\", internalField.editModeAsObject)\n\t\t\t)\n\t\t);\n\t\tinternalField.collaborationEnabled = collaborationEnabled;\n\t\tinternalField.collaborationExpression = collaborationExpression;\n\t\tinternalField.editableExpression = editableExpression;\n\t\tinternalField.editMode = editMode;\n\t} else {\n\t\tinternalField.editableExpression = compileExpression(computedEditableExpression);\n\t}\n}\n\n/**\n * This helper sets the common properties convertedMetaPath, dataModelPath\n * and property that can be reused in the individual templates if required.\n * @param internalField Reference to the current internal field instance\n * @param settings\n */\nexport function computeCommonProperties(internalField: FieldBlockProperties, settings: TemplateProcessorSettings): void {\n\tinternalField.convertedMetaPath = MetaModelConverter.convertMetaModelContext(\n\t\tinternalField.metaPathContext ? internalField.metaPathContext : internalField.metaPath\n\t) as DataFieldAbstractTypes | DataPointTypeTypes;\n\n\tlet dataModelPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldAbstractTypes | DataPointTypeTypes | Property>(\n\t\tinternalField.metaPathContext ? internalField.metaPathContext : internalField.metaPath,\n\t\tinternalField.contextPath\n\t);\n\tdataModelPath =\n\t\tgetDataModelObjectPathForValue(dataModelPath as DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes>) || dataModelPath;\n\tinternalField.dataModelPath = dataModelPath as DataModelObjectPath<Property>;\n\tinternalField.property = dataModelPath.targetObject as Property;\n\tinternalField.odataMetaModel = settings.models.metaModel || settings.models.contextPath;\n\tinternalField.propertyForFieldControl = (dataModelPath?.targetObject as unknown as DataFieldTypes)?.Value\n\t\t? (dataModelPath?.targetObject as unknown as DataFieldTypes).Value\n\t\t: dataModelPath?.targetObject;\n}\n\n/**\n * Helper to computes some of the expression for further processing.\n * @param internalField Reference to the current internal field instance\n */\nexport function computeEditableExpressions(internalField: FieldBlockProperties): void {\n\tconst requiredPropertiesFromInsertRestrictions = getRequiredPropertiesFromInsertRestrictions(\n\t\t(internalField.contextPathContext ? internalField.contextPathContext : internalField.contextPath)\n\t\t\t?.getPath()\n\t\t\t.replaceAll(\"/$NavigationPropertyBinding/\", \"/\"),\n\t\tinternalField.odataMetaModel\n\t);\n\tconst requiredPropertiesFromUpdateRestrictions = getRequiredPropertiesFromUpdateRestrictions(\n\t\t(internalField.contextPathContext ? internalField.contextPathContext : internalField.contextPath)\n\t\t\t?.getPath()\n\t\t\t.replaceAll(\"/$NavigationPropertyBinding/\", \"/\"),\n\t\tinternalField.odataMetaModel\n\t);\n\tconst oRequiredProperties = {\n\t\trequiredPropertiesFromInsertRestrictions: requiredPropertiesFromInsertRestrictions,\n\t\trequiredPropertiesFromUpdateRestrictions: requiredPropertiesFromUpdateRestrictions\n\t};\n\n\tconst liveChangeEnabled = internalField.liveChangeEnabled;\n\tconst enabledExpression = UIFormatters.getEnabledExpression(\n\t\tinternalField.propertyForFieldControl,\n\t\tinternalField.convertedMetaPath,\n\t\tfalse,\n\t\tinternalField.dataModelPath\n\t) as CompiledBindingToolkitExpression;\n\tconst requiredExpression = UIFormatters.getRequiredExpression(\n\t\tinternalField.propertyForFieldControl,\n\t\tinternalField.convertedMetaPath,\n\t\tfalse,\n\t\tfalse,\n\t\toRequiredProperties,\n\t\tinternalField.dataModelPath\n\t) as CompiledBindingToolkitExpression;\n\n\tinternalField.liveChangeEnabled = liveChangeEnabled;\n\tinternalField.enabledExpression = enabledExpression;\n\tinternalField.requiredExpression = requiredExpression;\n}\n\nexport function computeEditMode(internalField: FieldBlockProperties): void {\n\tif (internalField.editMode !== undefined && internalField.editMode !== null) {\n\t\t// Even if it provided as a string it's a valid part of a binding expression that can be later combined into something else.\n\t\tinternalField.editModeAsObject = internalField.editMode;\n\t} else {\n\t\tconst measureReadOnly = internalField.formatOptions?.measureDisplayMode\n\t\t\t? internalField.formatOptions.measureDisplayMode === \"ReadOnly\"\n\t\t\t: false;\n\n\t\tinternalField.editModeAsObject = UIFormatters.getEditMode(\n\t\t\tinternalField.propertyForFieldControl,\n\t\t\tinternalField.dataModelPath,\n\t\t\tmeasureReadOnly,\n\t\t\ttrue,\n\t\t\tinternalField.convertedMetaPath\n\t\t);\n\t\tinternalField.editMode = compileExpression(\n\t\t\tifElse(and(UI.IsInactive, !!internalField.hasPropertyInsertRestrictions), \"Display\", internalField.editModeAsObject)\n\t\t);\n\t}\n}\n\nexport function computeExternalID(internalField: FieldBlockProperties): void {\n\tconst externalIDProperty = getAssociatedExternalIdProperty(internalField.property);\n\n\tif (externalIDProperty) {\n\t\tif (internalField.property) internalField.property.type = externalIDProperty.type;\n\t\tif (isDataField(internalField.convertedMetaPath)) {\n\t\t\tinternalField.convertedMetaPath.Value.$target.type = externalIDProperty.type;\n\t\t}\n\t\tconst externalIdPropertyPath = getAssociatedExternalIdPropertyPath(internalField.property);\n\t\tconst externalIdContext = internalField.metaPath\n\t\t\t.getModel()\n\t\t\t.createBindingContext(internalField.contextPath?.getPath() + \"/\" + externalIdPropertyPath, internalField.metaPath);\n\n\t\tinternalField.convertedMetaPathExternalID = MetaModelConverter.convertMetaModelContext(externalIdContext) as Property;\n\n\t\tlet dataModelPath: DataModelObjectPath<Property> = MetaModelConverter.getInvolvedDataModelObjects(\n\t\t\texternalIdContext as Context,\n\t\t\tinternalField.contextPath\n\t\t);\n\t\tdataModelPath = getDataModelObjectPathForValue(dataModelPath as DataModelObjectPath<DataFieldAbstractTypes>) || dataModelPath;\n\t\tinternalField.dataModelPathExternalID = dataModelPath;\n\t}\n}\n\n/**\n * Calculate the fieldGroupIds for an Input or other edit control.\n * @param field\n * @param appComponent\n * @returns The fieldGroupIds\n */\nfunction computeFieldGroupIds(field: FieldBlockProperties, appComponent?: AppComponent): string | undefined {\n\tconst typesForCollaborationFocusManagement = [\n\t\t\"InputWithValueHelp\",\n\t\t\"TextArea\",\n\t\t\"DatePicker\",\n\t\t\"TimePicker\",\n\t\t\"DateTimePicker\",\n\t\t\"InputWithUnit\",\n\t\t\"Input\",\n\t\t\"InputMask\"\n\t];\n\n\tif (!appComponent) {\n\t\t//for ValueHelp / Mass edit Templating the appComponent is not passed to the templating\n\t\treturn;\n\t}\n\tconst sideEffectService = appComponent.getSideEffectsService();\n\tconst fieldGroupIds = sideEffectService.computeFieldGroupIds(\n\t\tfield.dataModelPath.targetEntityType?.fullyQualifiedName ?? \"\",\n\t\tfield.dataModelPath.targetObject?.fullyQualifiedName ?? \"\"\n\t);\n\n\tif (field.collaborationEnabled && typesForCollaborationFocusManagement.includes(field.editStyle || \"\")) {\n\t\tconst collaborationFieldGroup = `${CollaborationFieldGroupPrefix}${field.dataSourcePath}`;\n\t\tfieldGroupIds.push(collaborationFieldGroup);\n\t\tfield.mainPropertyRelativePath = isProperty(field.dataModelPath.targetObject)\n\t\t\t? getContextRelativeTargetObjectPath(field.dataModelPath)\n\t\t\t: undefined;\n\t}\n\n\treturn fieldGroupIds.length ? fieldGroupIds.join(\",\") : undefined;\n}\n\n/**\n * This helper is for the ID of the InternalField according to several different scenarios.\n *\n * displayStyleId is used for all controls inside the field wrapper in display mode. A <sap.m.text> control would get this ID. An example is: ApplicationContext::Field-display.\n * editStyleId is used for all controls inside the field wrapper in edit mode. A <sap.ui.mdc.field> control would get this ID. An example is: ApplicationContext::Field-edit.\n *\n * If no wrapper exists the wrappers ID will be propagated to the first control displayed, A <sap.m.text> control would get this ID. An example is: ApplicationContext::Field-content.\n * @param internalField Reference to the current internal field instance\n */\nexport function computeIDs(internalField: Partial<FieldBlockProperties>): void {\n\tif (internalField._flexId) {\n\t\tinternalField._apiId = internalField._flexId;\n\t\tinternalField._flexId = getContentId(internalField._flexId);\n\t\tinternalField._vhFlexId = `${internalField._flexId}_${internalField.vhIdPrefix}`;\n\t}\n\n\tif (internalField.idPrefix) {\n\t\tinternalField.editStyleId = generate([internalField.idPrefix, \"Field-edit\"]);\n\t}\n\t//NoWrapperId scenario is for the LR table.\n\tif (internalField.formatOptions?.fieldMode === \"nowrapper\" && internalField.editMode === \"Display\") {\n\t\tif (internalField._flexId) {\n\t\t\tinternalField.displayStyleId = internalField._flexId;\n\t\t} else {\n\t\t\tinternalField.displayStyleId = internalField.idPrefix ? generate([internalField.idPrefix, \"Field-content\"]) : undefined;\n\t\t}\n\t} else if (internalField.idPrefix) {\n\t\tinternalField.displayStyleId = generate([internalField.idPrefix, \"Field-display\"]);\n\t}\n}\n\n/**\n * Sets the internal formatOptions for the building block.\n * @param field\n * @returns A string with the internal formatOptions for the building block\n */\nexport function getFormatOptions(field: FieldBlockProperties): FieldFormatOptions {\n\treturn {\n\t\t...field.formatOptions,\n\t\ttextAlignMode: field.formatOptions.textAlignMode ?? \"Form\",\n\t\tshowEmptyIndicator: field.formatOptions.showEmptyIndicator ?? true,\n\t\tdisplayMode: field.formatOptions.displayMode as DisplayMode,\n\t\tmeasureDisplayMode: field.formatOptions.measureDisplayMode,\n\t\ttextLinesEdit: field.formatOptions.textLinesEdit,\n\t\ttextMaxLines: field.formatOptions.textMaxLines,\n\t\ttextMaxCharactersDisplay: field.formatOptions.textMaxCharactersDisplay,\n\t\ttextExpandBehaviorDisplay: field.formatOptions.textExpandBehaviorDisplay,\n\t\ttextMaxLength: field.formatOptions.textMaxLength,\n\t\tfieldEditStyle: field.formatOptions.fieldEditStyle,\n\t\tradioButtonsHorizontalLayout: field.formatOptions.radioButtonsHorizontalLayout,\n\t\tshowTime: field.formatOptions.showTime,\n\t\tshowTimezone: field.formatOptions.showTimezone,\n\t\tshowDate: field.formatOptions.showDate\n\t} as FieldFormatOptions;\n}\n\nfunction getObjectIdentifierText(\n\tfieldFormatOptions: FieldFormatOptions,\n\tpropertyDataModelObjectPath: DataModelObjectPath<Property | PropertyPath>\n): CompiledBindingToolkitExpression {\n\tlet propertyBindingExpression: BindingToolkitExpression<string> = pathInModel(\n\t\tgetContextRelativeTargetObjectPath(propertyDataModelObjectPath)\n\t);\n\tconst targetDisplayMode = fieldFormatOptions?.displayMode;\n\tconst propertyDefinition = isPropertyPathExpression(propertyDataModelObjectPath.targetObject)\n\t\t? (propertyDataModelObjectPath.targetObject.$target as Property)\n\t\t: (propertyDataModelObjectPath.targetObject as Property);\n\n\tconst commonText = propertyDefinition.annotations?.Common?.Text;\n\tif (commonText === undefined) {\n\t\treturn undefined;\n\t}\n\tpropertyBindingExpression = formatWithTypeInformation(propertyDefinition, propertyBindingExpression);\n\n\tswitch (targetDisplayMode) {\n\t\tcase \"ValueDescription\":\n\t\t\tconst relativeLocation = getRelativePaths(propertyDataModelObjectPath);\n\t\t\treturn compileExpression(getExpressionFromAnnotation(commonText, relativeLocation));\n\t\tcase \"DescriptionValue\":\n\t\t\treturn compileExpression(formatResult([propertyBindingExpression], valueFormatters.formatToKeepWhitespace));\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n}\n\nfunction getOverrides(controlConfiguration: TemplateProcessorSettings, id: string): FieldProperties {\n\t/*\n\t\tQualms: We need to use this TemplateProcessorSettings type to be able to iterate\n\t\tover the properties later on and cast it afterwards as a field property type\n\t*/\n\tconst props = {} as TemplateProcessorSettings;\n\n\tif (controlConfiguration) {\n\t\tconst controlConfig = controlConfiguration[id] as TemplateProcessorSettings;\n\t\tif (controlConfig) {\n\t\t\tObject.keys(controlConfig).forEach(function (configKey) {\n\t\t\t\tprops[configKey] = controlConfig[configKey];\n\t\t\t});\n\t\t}\n\t}\n\treturn props as unknown as FieldProperties;\n}\n\n/**\n * Prepare the display style of the field in case of semantic objects or quickview facets.\n * @param internalField The field\n * @param settings\n * @param dataModelPath The DataModelObjectPath of the property\n * @param hasSemanticObjects\n * @param hasQuickView\n */\nfunction manageQuickViewForDisplayStyle(\n\tinternalField: FieldBlockProperties,\n\tsettings: TemplateProcessorSettings,\n\tdataModelPath: DataModelObjectPath<Property>,\n\thasSemanticObjects: boolean,\n\thasQuickView: boolean\n): void {\n\tif (hasQuickView) {\n\t\tinternalField.hasQuickView = true;\n\t\tinternalField.quickViewType = \"Facets\";\n\t}\n\tif (hasSemanticObjects) {\n\t\tconst foundSemanticObjects = manageSemanticObjectsForCurrentUser(internalField.semanticObject, dataModelPath, settings);\n\t\tif (foundSemanticObjects.hasReachableStaticSemanticObject || foundSemanticObjects.dynamicSemanticObjects.length) {\n\t\t\tinternalField.hasQuickView = true;\n\t\t\tinternalField.quickViewType = hasQuickView ? \"FacetsAndSemanticLinks\" : \"SemanticLinks\";\n\t\t\tinternalField.dynamicSemanticObjects =\n\t\t\t\tfoundSemanticObjects.hasReachableStaticSemanticObject !== true ? foundSemanticObjects.dynamicSemanticObjects : undefined;\n\t\t}\n\t}\n}\n\n/**\n * Check field to know if it has semantic object.\n * @param internalField The field\n * @param dataModelPath The DataModelObjectPath of the property\n * @returns True if field has a semantic object\n */\nfunction propertyOrNavigationPropertyHasSemanticObject(\n\tinternalField: FieldBlockProperties,\n\tdataModelPath: DataModelObjectPath<Property>\n): boolean {\n\treturn (\n\t\t!!getPropertyWithSemanticObject(dataModelPath) ||\n\t\t(internalField.semanticObject !== undefined && internalField.semanticObject !== \"\")\n\t);\n}\n\nexport function setInputWithValuehelpPlaceholder(internalField: FieldBlockProperties): CompiledBindingToolkitExpression {\n\tlet targetEntityType;\n\tconst editStylePlaceholder = internalField.editStylePlaceholder;\n\tconst fieldContainerType = internalField.formatOptions.textAlignMode;\n\tif (fieldContainerType === \"Table\") {\n\t\ttargetEntityType = internalField.dataModelPath.targetEntityType;\n\t}\n\tconst propertyPath = internalField.dataModelPath.targetObject?.name;\n\tconst recommendationValue = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderValue`);\n\tconst recommendationDescription = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderDescription`);\n\tconst placeholderExp = formatResult(\n\t\t[\n\t\t\trecommendationValue,\n\t\t\trecommendationDescription,\n\t\t\tpathInModel(`/recommendationsData`, \"internal\"),\n\t\t\tpathInModel(`/currentCtxt`, \"internal\"),\n\t\t\tpathInModel(`${propertyPath}@$ui5.fe.messageType`),\n\t\t\teditStylePlaceholder,\n\t\t\tinternalField.formatOptions.displayMode\n\t\t],\n\t\tadditionalValueFormatter.formatPlaceholder,\n\t\ttargetEntityType\n\t);\n\n\treturn compileExpression(placeholderExp);\n}\n\nexport function setUpDataPointType(dataField: DataFieldAbstractTypes | DataPointTypeTypes): DataFieldAbstractTypes | DataPointTypeTypes {\n\t// data point annotations need not have $Type defined, so add it if missing\n\tconst dataPointType = { ...dataField };\n\tif ((dataField as unknown as DataPoint)?.term === \"com.sap.vocabularies.UI.v1.DataPoint\") {\n\t\tdataPointType.$Type = dataField.$Type || UIAnnotationTypes.DataPointType;\n\t}\n\treturn dataPointType;\n}\n\nexport function setUpDisplayStyle(\n\tinternalField: FieldBlockProperties,\n\tdataField: DataFieldAbstractTypes | DataPointTypeTypes,\n\tdataModelPath: DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes | Property>,\n\tsettings: TemplateProcessorSettings\n): FieldBlockProperties {\n\tconst resultField: FieldBlockProperties = internalField;\n\tconst property: Property = dataModelPath.targetObject as Property;\n\tif (!dataModelPath.targetObject) {\n\t\tresultField.displayStyle = \"Text\";\n\t\treturn resultField;\n\t}\n\n\tresultField.hasUnitOrCurrency =\n\t\tproperty.annotations?.Measures?.Unit !== undefined || property.annotations?.Measures?.ISOCurrency !== undefined;\n\tresultField.hasValidAnalyticalCurrencyOrUnit = UIFormatters.hasValidAnalyticalCurrencyOrUnit(\n\t\tdataModelPath as DataModelObjectPath<Property>\n\t);\n\tresultField.textFromValueList = wrapBindingExpression(\n\t\tcompileExpression(\n\t\t\tfn(\"FieldRuntime.retrieveTextFromValueList\", [\n\t\t\t\tpathInModel(getContextRelativeTargetObjectPath(dataModelPath)),\n\t\t\t\t`/${property.fullyQualifiedName}`,\n\t\t\t\tresultField.formatOptions.displayMode\n\t\t\t])\n\t\t) as string,\n\t\tfalse\n\t);\n\n\tif (property.annotations?.UI?.IsImage) {\n\t\tresultField.displayStyle = \"File\";\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.UI?.IsImageURL) {\n\t\tresultField.displayStyle = \"Avatar\";\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.UI?.InputMask) {\n\t\tresultField.displayStyle = \"Text\";\n\t\treturn resultField;\n\t}\n\t// For compatibility reasons, Stream will be shown within an entity instance as circle if the entity is annotated as IsNaturalPerson\n\t// and neither IsImage nor IsImageURL annotation has been used.\n\tif (property.type === \"Edm.Stream\") {\n\t\tresultField.displayStyle = \"File\";\n\t\treturn resultField;\n\t}\n\tsetUpDraftIndicator(dataModelPath as DataModelObjectPath<Property>, resultField);\n\tswitch (dataField.$Type as string) {\n\t\tcase UIAnnotationTypes.DataPointType:\n\t\t\tresultField.displayStyle = \"DataPoint\";\n\t\t\treturn resultField;\n\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\tif ((dataField as unknown as DataFieldForAnnotation).Target?.$target?.$Type === UIAnnotationTypes.DataPointType) {\n\t\t\t\tresultField.displayStyle = \"DataPoint\";\n\t\t\t\treturn resultField;\n\t\t\t} else if (\n\t\t\t\t(dataField as unknown as DataFieldForAnnotation).Target?.$target?.$Type ===\n\t\t\t\t\"com.sap.vocabularies.Communication.v1.ContactType\"\n\t\t\t) {\n\t\t\t\tresultField.displayStyle = \"Contact\";\n\t\t\t\treturn resultField;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UIAnnotationTypes.DataFieldForAction:\n\t\tcase UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n\t\t\tresultField.displayStyle = \"Button\";\n\t\t\treturn resultField;\n\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\tresultField.displayStyle = \"Link\";\n\t\t\treturn resultField;\n\t}\n\tconst hasQuickView = isUsedInNavigationWithQuickViewFacets(dataModelPath, property);\n\tconst hasSemanticObjects = propertyOrNavigationPropertyHasSemanticObject(resultField, dataModelPath as DataModelObjectPath<Property>);\n\n\tif (isSemanticKey(property, dataModelPath) && resultField.formatOptions.semanticKeyStyle) {\n\t\tmanageQuickViewForDisplayStyle(\n\t\t\tresultField,\n\t\t\tsettings,\n\t\t\tdataModelPath as DataModelObjectPath<Property>,\n\t\t\thasSemanticObjects,\n\t\t\thasQuickView\n\t\t);\n\t\tsetUpObjectIdentifierTitleAndText(resultField, dataModelPath as DataModelObjectPath<Property>);\n\t\tresultField.showErrorIndicator =\n\t\t\t(dataModelPath.contextLocation as unknown as DataModelObjectPath<ServiceObject>)?.targetObject?._type ===\n\t\t\t\t\"NavigationProperty\" && !resultField.formatOptions.fieldGroupDraftIndicatorPropertyPath;\n\t\tresultField.situationsIndicatorPropertyPath = (dataModelPath.targetObject as Property).name;\n\t\tresultField.displayStyle =\n\t\t\tresultField.formatOptions.semanticKeyStyle === \"ObjectIdentifier\" ? \"ObjectIdentifier\" : \"LabelSemanticKey\";\n\t\treturn resultField;\n\t}\n\tif (dataField.Criticality) {\n\t\tmanageQuickViewForDisplayStyle(\n\t\t\tresultField,\n\t\t\tsettings,\n\t\t\tdataModelPath as DataModelObjectPath<Property>,\n\t\t\thasSemanticObjects,\n\t\t\thasQuickView\n\t\t);\n\t\tresultField.displayStyle = \"ObjectStatus\";\n\t\treturn resultField;\n\t}\n\tif (\n\t\tproperty.annotations?.Measures?.ISOCurrency &&\n\t\tString(resultField.formatOptions.isCurrencyAligned) === \"true\" &&\n\t\tresultField.formatOptions.measureDisplayMode !== \"Hidden\"\n\t) {\n\t\tresultField.valueAsStringBindingExpression = resultField.value\n\t\t\t? resultField.value\n\t\t\t: getValueBinding(dataModelPath as DataModelObjectPath<Property>, resultField.formatOptions, true, true, undefined, true);\n\t\tresultField.unitBindingExpression = compileExpression(\n\t\t\tUIFormatters.getBindingForUnitOrCurrency(dataModelPath as DataModelObjectPath<Property>)\n\t\t);\n\t\tresultField.displayStyle = \"AmountWithCurrency\";\n\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.Communication?.IsEmailAddress || property.annotations?.Communication?.IsPhoneNumber) {\n\t\tresultField.displayStyle = \"Link\";\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.UI?.MultiLineText) {\n\t\tresultField.displayStyle = \"ExpandableText\";\n\t\treturn resultField;\n\t}\n\n\tif (dataField.$Type === UIAnnotationTypes.DataFieldWithUrl) {\n\t\tresultField.displayStyle = \"Link\";\n\t\treturn resultField;\n\t}\n\n\tresultField.displayStyle = \"Text\";\n\tmanageQuickViewForDisplayStyle(resultField, settings, dataModelPath as DataModelObjectPath<Property>, hasSemanticObjects, hasQuickView);\n\tif (resultField.hasQuickView) {\n\t\tresultField.displayStyle = \"LinkWithQuickView\";\n\t}\n\treturn resultField;\n}\n\n/**\n * This determines whether we should add a draft indicator within the field template.\n * @param dataModelPath DataModelObjectPath pointing to the main property for the field\n * @param internalField\n */\nfunction setUpDraftIndicator(dataModelPath: DataModelObjectPath<Property>, internalField: FieldBlockProperties): void {\n\tif (isSemanticKey(dataModelPath.targetObject as Property, dataModelPath)) {\n\t\tinternalField.hasSituationsIndicator =\n\t\t\tSituationsIndicator.getSituationsNavigationProperty(dataModelPath.targetEntityType) !== undefined;\n\t\tif (\n\t\t\t(dataModelPath.contextLocation?.targetEntitySet as EntitySet | undefined)?.annotations?.Common?.DraftRoot &&\n\t\t\t(dataModelPath.targetEntitySet as EntitySet | undefined)?.annotations?.Common?.DraftRoot &&\n\t\t\tinternalField.formatOptions?.hasDraftIndicator === true\n\t\t) {\n\t\t\t// In case of a grid table or tree table hasDraftIndicator will be false since the draft\n\t\t\t// indicator needs to be rendered into a separate column\n\t\t\t// Hence we then fall back to display styles ObjectIdentifier or LabelSemanticKey instead\n\t\t\t// of the combined ID and draft indicator style\n\t\t\tinternalField.draftIndicatorVisible = getDraftIndicatorVisibleBinding(dataModelPath.targetObject?.name) as string;\n\t\t\tinternalField.addDraftIndicator = true;\n\t\t}\n\t}\n}\n\nexport function setUpEditStyle(field: FieldBlockProperties, appComponent?: AppComponent): FieldBlockProperties {\n\tconst resultField = field;\n\tsetEditStyleProperties(resultField, resultField.convertedMetaPath, resultField.dataModelPath);\n\tresultField.fieldGroupIds = computeFieldGroupIds(resultField, appComponent);\n\treturn resultField;\n}\n\nexport function setUpObjectIdentifierTitleAndText(\n\tinternalField: FieldBlockProperties,\n\tpropertyDataModelObjectPath: DataModelObjectPath<Property>\n): void {\n\tconst semanticStyle = internalField.formatOptions?.semanticKeyStyle;\n\tconst displayMode = internalField.formatOptions.displayMode;\n\tinternalField.identifierTitle = getTitleBindingExpression(\n\t\tpropertyDataModelObjectPath,\n\t\tgetTextBindingExpression,\n\t\t{ displayMode, splitTitleOnTwoLines: internalField.formatOptions.semanticKeyStyle === \"ObjectIdentifier\" },\n\t\tundefined,\n\t\tundefined\n\t);\n\tinternalField.identifierText =\n\t\tsemanticStyle === \"ObjectIdentifier\"\n\t\t\t? getObjectIdentifierText(internalField.formatOptions, propertyDataModelObjectPath)\n\t\t\t: undefined;\n}\n\nexport function setUpFormatOptions(\n\tinternalField: FieldBlockProperties,\n\tdataModelPath: DataModelObjectPath<Property>,\n\tcontrolConfiguration: TemplateProcessorSettings,\n\tsettings: TemplateProcessorSettings\n): void {\n\tconst overrideProps = getOverrides(\n\t\tcontrolConfiguration,\n\t\t(internalField.metaPathContext ? internalField.metaPathContext : internalField.metaPath).getPath()\n\t);\n\n\tif (!internalField.formatOptions.displayMode) {\n\t\tinternalField.formatOptions.displayMode = UIFormatters.getDisplayMode(dataModelPath);\n\t}\n\tif (internalField.formatOptions.displayMode === \"Description\") {\n\t\tinternalField.valueAsStringBindingExpression = internalField.value\n\t\t\t? internalField.value\n\t\t\t: getValueBinding(dataModelPath, internalField.formatOptions, true, true, undefined, true);\n\t}\n\tinternalField.formatOptions.textLinesEdit =\n\t\t(overrideProps as unknown as FieldFormatOptions).textLinesEdit ||\n\t\t(overrideProps.formatOptions && overrideProps.formatOptions.textLinesEdit) ||\n\t\tinternalField.formatOptions.textLinesEdit ||\n\t\t4;\n\tinternalField.formatOptions.textMaxLines =\n\t\t(overrideProps as unknown as FieldFormatOptions).textMaxLines ||\n\t\t(overrideProps.formatOptions && overrideProps.formatOptions.textMaxLines) ||\n\t\tinternalField.formatOptions.textMaxLines;\n\n\t// Retrieve text from value list as fallback feature for missing text annotation on the property\n\tif (settings.models.viewData?.getProperty(\"/retrieveTextFromValueList\")) {\n\t\tinternalField.formatOptions.retrieveTextFromValueList = isRetrieveTextFromValueListEnabled(\n\t\t\tdataModelPath.targetObject!,\n\t\t\tinternalField.formatOptions\n\t\t);\n\t\tif (internalField.formatOptions.retrieveTextFromValueList) {\n\t\t\t// Consider TextArrangement at EntityType otherwise set default display format 'DescriptionValue'\n\t\t\tconst hasEntityTextArrangement = !!dataModelPath?.targetEntityType?.annotations?.UI?.TextArrangement;\n\t\t\tinternalField.formatOptions.displayMode = hasEntityTextArrangement\n\t\t\t\t? internalField.formatOptions.displayMode\n\t\t\t\t: \"DescriptionValue\";\n\t\t}\n\t}\n}\n\nexport function setUpValueState(internalField: FieldBlockProperties): CompiledBindingToolkitExpression {\n\tlet valueStateExp;\n\tconst fieldContainerType = internalField.formatOptions?.textAlignMode ? internalField.formatOptions?.textAlignMode : \"Form\";\n\tconst propertyPathInModel = pathInModel(\n\t\tgetContextRelativeTargetObjectPath(internalField.dataModelPath)\n\t) as PathInModelExpression<Property>;\n\tconst relativeLocation = getRelativePaths(internalField.dataModelPath);\n\tconst textPath = getExpressionFromAnnotation(internalField.dataModelPath?.targetObject?.annotations?.Common?.Text, relativeLocation);\n\tconst propertyPath = internalField.dataModelPath.targetObject?.name;\n\tconst recommendationValue = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderValue`);\n\tconst recommendationDescription = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderDescription`);\n\tif (fieldContainerType === \"Table\") {\n\t\tvalueStateExp = formatResult(\n\t\t\t[\n\t\t\t\trecommendationValue,\n\t\t\t\trecommendationDescription,\n\t\t\t\tpathInModel(`/recommendationsData`, \"internal\"),\n\t\t\t\tpathInModel(`/isEditable`, \"ui\"),\n\t\t\t\tinternalField.dataSourcePath,\n\t\t\t\tpropertyPathInModel,\n\t\t\t\ttextPath\n\t\t\t],\n\t\t\tadditionalValueFormatter.formatValueState,\n\t\t\tinternalField.dataModelPath.targetEntityType\n\t\t);\n\t} else {\n\t\tvalueStateExp = formatResult(\n\t\t\t[\n\t\t\t\trecommendationValue,\n\t\t\t\trecommendationDescription,\n\t\t\t\tpathInModel(`/recommendationsData`, \"internal\"),\n\t\t\t\tpathInModel(`/isEditable`, \"ui\"),\n\t\t\t\tinternalField.dataSourcePath,\n\t\t\t\tpropertyPathInModel,\n\t\t\t\ttextPath\n\t\t\t],\n\t\t\tadditionalValueFormatter.formatValueState\n\t\t);\n\t}\n\n\tinternalField.valueState = compileExpression(valueStateExp);\n\treturn internalField.valueState;\n}\n\nexport function setUpVisibleProperties(internalField: FieldBlockProperties): void {\n\t// we do this before enhancing the dataModelPath so that it still points at the DataField\n\t// const visibleProperties: Partial<InternalFieldBlock> = {};\n\tconst propertyDataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldAbstractTypes>(\n\t\tinternalField.metaPathContext ? internalField.metaPathContext : internalField.metaPath,\n\t\tinternalField.contextPath\n\t);\n\n\tinternalField.visible = internalField.visible ??= getVisibleExpression(propertyDataModelObjectPath, internalField.formatOptions);\n\tinternalField.displayVisible = internalField.formatOptions?.fieldMode === \"nowrapper\" ? internalField.visible : undefined;\n}\n\nfunction getContentId(macroId: string): string {\n\treturn `${macroId}-content`;\n}\n"],"mappings":"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","ignoreList":[],"file":"FieldStructureHelper-dbg.js"}