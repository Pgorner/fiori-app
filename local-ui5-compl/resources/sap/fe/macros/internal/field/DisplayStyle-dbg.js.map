{"version":3,"names":["DisplayStyle","getPrecisionForCurrency","internalField","scale","property","precision","Math","min","getCurrencyOrUnitControl","currencyOrUnit","visibleExpression","_jsx","Link","text","press","getContextRelativeTargetObjectPath","dataModelPath","visible","children","dependents","getAmountWithCurrencyTemplate","maxPrecision","relativePropertyPath","overallVisible","not","equal","pathInModel","undefined","formatOptions","isAnalytics","currency","Currency","stringValue","valueAsStringBindingExpression","unitBindingExpression","useSymbol","ConditionalWrapper","displayVisible","condition","hasValidAnalyticalCurrencyOrUnit","contentTrue","contentFalse","FormElementWrapper","formDoNotAdjustWidth","width","textAlignMode","getAvatarTemplate","avatarId","_flexId","idPrefix","generate","avatarVisible","FieldTemplating","getVisibleExpression","avatarSrc","getValueBinding","avatarDisplayShape","getAvatarShape","Avatar","id","src","displaySize","class","imageFitType","displayShape","getButtonTemplate","icon","showIconUrl","convertedMetaPath","IconUrl","Label","tooltip","buttonPress","buttonIsBound","buttonOperationAvailable","buttonOperationAvailableFormatted","navigationAvailable","$Type","dataFieldObject","metaPath","getObject","FieldHelper","getPressEventForDataFieldActionButton","ActionTarget","isBound","annotations","Core","OperationAvailable","actionTarget","bindingParamName","parameters","name","compileExpression","getExpressionFromAnnotation","path","startsWith","replace","CommonHelper","getPressHandlerForDataFieldForIBN","NavigationAvailable","String","ignoreNavigationAvailable","button","Button","enabled","isDataFieldActionButtonVisible","isDataFieldActionButtonEnabled","type","buildExpressionForCriticalityButtonType","getContactTemplate","contactMetaPath","getModel","createBindingContext","contactVisible","Contact","ariaLabelledBy","getPath","contextPath","showEmptyIndicator","getDataPointInnerPart","withConditionalWrapper","convertedDataField","MetaModelConverter","convertMetaModelContext","measureDisplayMode","DataPoint","value","getDataPointTemplate","hasUnitOrCurrency","getExpandableText","ExpandableText","displayStyleId","overflowMode","textExpandBehaviorDisplay","maxCharacters","textMaxCharactersDisplay","emptyIndicatorMode","getFileTemplate","innerFilePart","fileRelativePropertyPath","fileNameAnnotation","ContentDisposition","Filename","fileFilenameExpression","isPathAnnotationExpression","fileNameDataModelPath","enhanceDataModelPath","fileStreamNotEmpty","fileUploadUrl","fileFilenamePath","fileMediaType","MediaType","fileIsImage","UI","IsImageURL","IsImage","test","toString","fileAvatarSrc","fileAvatarDisplayShape","fileIconSrc","getPathForIconSource","fileLinkText","getFilenameExpr","fileLinkHref","getDownloadUrl","fileTextVisible","fileAcceptableMediaTypes","AcceptableMediaTypes","acceptedTypes","Array","from","map","join","fileMaximumSize","calculateMBfromByte","maxLength","avatar","customData","ImageCustomData","paramName","Icon","link","target","href","wrapping","Text","editMode","FieldEditMode","Display","beforeDialogOpen","collaborationEnabled","afterDialogOpen","fileUploader","FileUploader","editableExpression","buttonOnly","iconOnly","multiple","style","sendXHR","useMultipart","sameFilenameAllowed","mimeType","typeMissmatch","maximumFileSize","fileSizeExceed","uploadOnChange","uploadComplete","httpRequestMethod","change","afterDialogClose","uploadStart","deleteButton","FileWrapper","uploadUrl","propertyPath","filename","mediaType","fieldGroupIds","validateFieldGroup","dataSourcePath","getLinkTemplate","linkUrl","linkPress","iconUrl","linkActived","linkTarget","computeTextWithWhiteSpace","accessibleRole","LinkAccessibleRole","Target","html5LinkTarget","HTML5","LinkTarget","linkBinding","Url","Communication","IsEmailAddress","IsPhoneNumber","linkIsEmailAddress","linkIsPhoneNumber","propertyValueBinding","mailBlockId","uid","Email","mail","ObjectStatus","active","CustomData","wrap","getForeignKeyForCustomData","relativePathToQuickViewEntity","QuickView","getRelativePathToQuickViewEntity","targetNavigationProperties","targetEntityType","navigationProperties","targetNavProp","find","navProp","refConstraint","referentialConstraint","key","length","targetProperty","keyToFetch","getForeignKeyValueExpression","foreignKeyRelativePath","expression","_type","ifElse","constant","getStandardLinkWithQuickViewTemplate","getMdcLinkForQuickView","getConditionalLinkWithQuickViewTemplate","TextLink","showAsLink","semanticObject","getConditionalWrapperForQuickViewTemplate","getLinkWithQuickViewTemplate","retrieveTextFromValueList","textFromValueList","getQuickViewCondition","getTextTemplate","content","textAlign","renderWhitespace","customdata","displayMode","getObjectIdentifier","titleActive","hasQuickView","identifier","ObjectIdentifier","title","identifierTitle","identifierText","titlePress","hasSituationsIndicator","_jsxs","HBox","alignItems","justifyContent","SituationsIndicator","situationsIndicatorPropertyPath","showErrorIndicator","showErrorObjectStatus","VBox","state","getObjectStatus","objectStatus","requiredHelper","dataModelObjectPath","getInvolvedDataModelObjects","enhancedValueDataModelPath","targetObject","Value","criticalityIcon","buildExpressionForCriticalityIcon","buildExpressionForCriticalityColor","isActive","pressAction","createContent","getLabelSemanticKey","design","hasQuickview","addDraftIndicator","semanticKeyTemplate","fieldGroupDraftIndicatorPropertyPath","getMarginClass","compactSemanticKey","DraftIndicator","draftIndicatorType","ObjectMarkerVisibility","IconAndText","draftIndicatorVisible","getTextBinding","isPathInModelExpression","formatResult","quickViewType","dynamicSemanticObjects","listOfDynamicSemanticObjects","semanticObjectExpression","push","semanticObjectsPath","concat","valueFormatters","hasSemanticObjects","getTemplate","innerFieldContent","displayStyle"],"sourceRoot":".","sources":["DisplayStyle.tsx"],"sourcesContent":["import type { Action, PathAnnotationExpression, Property, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataFieldTypes,\n\tDataFieldWithNavigationPath,\n\tDataFieldWithUrl,\n\tDataPointType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport uid from \"sap/base/util/uid\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tformatResult,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tisPathInModelExpression,\n\tnot,\n\tpathInModel\n} from \"sap/fe/base/BindingToolkit\";\nimport FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport {\n\tbuildExpressionForCriticalityButtonType,\n\tbuildExpressionForCriticalityColor,\n\tbuildExpressionForCriticalityIcon\n} from \"sap/fe/core/templating/CriticalityFormatters\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getContextRelativeTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { hasValidAnalyticalCurrencyOrUnit } from \"sap/fe/core/templating/UIFormatters\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\nimport * as FieldTemplating from \"sap/fe/macros/field/FieldTemplating\";\nimport type { FieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport QuickView from \"sap/fe/macros/quickView/QuickView\";\nimport Avatar from \"sap/m/Avatar\";\nimport Button from \"sap/m/Button\";\nimport ExpandableText from \"sap/m/ExpandableText\";\nimport HBox from \"sap/m/HBox\";\nimport ImageCustomData from \"sap/m/ImageCustomData\";\nimport Label from \"sap/m/Label\";\nimport type { Link$PressEvent } from \"sap/m/Link\";\nimport Link from \"sap/m/Link\";\nimport type { ObjectIdentifier$TitlePressEvent } from \"sap/m/ObjectIdentifier\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport { LinkAccessibleRole, ObjectMarkerVisibility } from \"sap/m/library\";\nimport type Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Icon from \"sap/ui/core/Icon\";\nimport type MdcLink from \"sap/ui/mdc/Link\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport Currency from \"sap/ui/unified/Currency\";\nimport type {\n\tFileUploader$ChangeEvent,\n\tFileUploader$FileSizeExceedEvent,\n\tFileUploader$TypeMissmatchEvent,\n\tFileUploader$UploadCompleteEvent,\n\tFileUploader$UploadStartEvent\n} from \"sap/ui/unified/FileUploader\";\nimport FileUploader from \"sap/ui/unified/FileUploader\";\nimport Contact from \"../../contact/Contact\";\nimport Email from \"../../contact/Email\";\nimport ConditionalWrapper from \"../../controls/ConditionalWrapper\";\nimport FileWrapper from \"../../controls/FileWrapper\";\nimport TextLink from \"../../controls/TextLink\";\nimport DraftIndicator from \"../../draftIndicator/DraftIndicator\";\nimport SituationsIndicator from \"../../situations/SituationsIndicator\";\nimport DataPoint from \"../DataPoint\";\nimport type { DisplayStyle as DisplayStyleType } from \"../InternalField.block\";\n\nconst DisplayStyle = {\n\tgetPrecisionForCurrency(internalField: FieldBlockProperties): number {\n\t\tlet scale = internalField.property.scale ?? 5;\n\t\tif (typeof scale !== \"number\") {\n\t\t\t// Scale can be \"variable\" but it's not typed as such. In this case, Scale equals the precision\n\t\t\tscale = internalField.property.precision ?? 5;\n\t\t}\n\t\treturn Math.min(scale, 5);\n\t},\n\n\tgetCurrencyOrUnitControl(\n\t\tinternalField: FieldBlockProperties,\n\t\tcurrencyOrUnit: string,\n\t\tvisibleExpression?: BindingToolkitExpression<boolean>\n\t): Control {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tcore:require=\"{FIELDRUNTIME: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\ttext=\"{sap.fe.i18n>M_TABLE_SHOW_DETAILS}\"\n\t\t\t\tpress={\n\t\t\t\t\t`FIELDRUNTIME.displayAggregateDetails($event, '${getContextRelativeTargetObjectPath(\n\t\t\t\t\t\tinternalField.dataModelPath\n\t\t\t\t\t)}')` as unknown as (evt: Link$PressEvent) => void\n\t\t\t\t}\n\t\t\t\tvisible={visibleExpression}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdependents: currencyOrUnit\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the AmountWithCurrency template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetAmountWithCurrencyTemplate(internalField: FieldBlockProperties): string {\n\t\tconst maxPrecision = DisplayStyle.getPrecisionForCurrency(internalField);\n\n\t\t// We don't display anything if the value is undefined\n\t\tconst relativePropertyPath = getContextRelativeTargetObjectPath(internalField.dataModelPath);\n\t\tconst overallVisible = not(equal(pathInModel(relativePropertyPath), undefined));\n\n\t\tif (internalField.formatOptions.isAnalytics) {\n\t\t\tconst currency = (\n\t\t\t\t<Currency\n\t\t\t\t\tstringValue={internalField.valueAsStringBindingExpression}\n\t\t\t\t\tcurrency={internalField.unitBindingExpression}\n\t\t\t\t\tuseSymbol=\"false\"\n\t\t\t\t\tmaxPrecision={maxPrecision}\n\t\t\t\t\tvisible={overallVisible}\n\t\t\t\t/>\n\t\t\t);\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\tcondition={internalField.hasValidAnalyticalCurrencyOrUnit as unknown as boolean}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: currency,\n\t\t\t\t\t\tcontentFalse: this.getCurrencyOrUnitControl(internalField, currency, overallVisible)\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<FormElementWrapper\n\t\t\t\t\tformDoNotAdjustWidth={true}\n\t\t\t\t\twidth={internalField.formatOptions.textAlignMode === \"Table\" ? \"100%\" : undefined}\n\t\t\t\t\tvisible={overallVisible}\n\t\t\t\t>\n\t\t\t\t\t<Currency\n\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\tstringValue={internalField.valueAsStringBindingExpression}\n\t\t\t\t\t\tcurrency={internalField.unitBindingExpression}\n\t\t\t\t\t\tuseSymbol=\"false\"\n\t\t\t\t\t\tmaxPrecision={maxPrecision}\n\t\t\t\t\t/>\n\t\t\t\t</FormElementWrapper>\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Generates the Avatar template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetAvatarTemplate(internalField: FieldBlockProperties): string {\n\t\tlet avatarId;\n\t\tif (internalField._flexId) {\n\t\t\tavatarId = internalField._flexId;\n\t\t} else if (internalField.idPrefix) {\n\t\t\tavatarId = generate([internalField.idPrefix, \"Field-content\"]);\n\t\t}\n\n\t\tconst avatarVisible = FieldTemplating.getVisibleExpression(internalField.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\tconst avatarSrc = FieldTemplating.getValueBinding(internalField.dataModelPath, {});\n\t\tconst avatarDisplayShape = FieldTemplating.getAvatarShape(internalField.dataModelPath);\n\n\t\treturn (\n\t\t\t<FormElementWrapper visible={avatarVisible}>\n\t\t\t\t<Avatar\n\t\t\t\t\tid={avatarId}\n\t\t\t\t\tsrc={avatarSrc}\n\t\t\t\t\tdisplaySize=\"S\"\n\t\t\t\t\tclass=\"sapUiSmallMarginEnd\"\n\t\t\t\t\timageFitType=\"Cover\"\n\t\t\t\t\tdisplayShape={avatarDisplayShape}\n\t\t\t\t/>\n\t\t\t</FormElementWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the button template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetButtonTemplate: (internalField: FieldBlockProperties): string => {\n\t\tconst icon =\n\t\t\tinternalField.formatOptions?.showIconUrl ?? false ? (internalField.convertedMetaPath as DataFieldTypes).IconUrl : undefined;\n\t\tconst text = !(internalField.formatOptions?.showIconUrl ?? false)\n\t\t\t? (internalField.convertedMetaPath as DataFieldTypes).Label\n\t\t\t: undefined;\n\t\tconst tooltip =\n\t\t\tinternalField.formatOptions?.showIconUrl ?? false ? (internalField.convertedMetaPath as DataFieldTypes).Label : undefined;\n\n\t\tlet buttonPress;\n\t\tlet buttonIsBound;\n\t\tlet buttonOperationAvailable;\n\t\tlet buttonOperationAvailableFormatted;\n\t\tlet navigationAvailable;\n\n\t\tif (internalField.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\t//Qualms: the getObject is a bad practice, but for now it´s fine as an intermediate step to avoid refactoring of the helper in addition\n\t\t\tconst dataFieldObject = internalField.metaPath.getObject();\n\t\t\tbuttonPress = FieldHelper.getPressEventForDataFieldActionButton(internalField, dataFieldObject);\n\n\t\t\tbuttonIsBound = internalField.convertedMetaPath.ActionTarget ? internalField.convertedMetaPath.ActionTarget.isBound : true;\n\t\t\tbuttonOperationAvailable = internalField.convertedMetaPath.ActionTarget\n\t\t\t\t? internalField.convertedMetaPath.ActionTarget.annotations?.Core?.OperationAvailable\n\t\t\t\t: \"false\";\n\t\t\tbuttonOperationAvailableFormatted = internalField.convertedMetaPath.ActionTarget ? undefined : \"false\";\n\n\t\t\tif (buttonOperationAvailable && buttonOperationAvailable !== \"false\") {\n\t\t\t\tconst actionTarget = internalField.convertedMetaPath.ActionTarget as Action;\n\t\t\t\tconst bindingParamName = actionTarget.parameters[0].name;\n\t\t\t\t//QUALMS, needs to be checked whether this makes sense at that place, might be good in a dedicated helper function\n\t\t\t\tbuttonOperationAvailableFormatted = compileExpression(\n\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\tbuttonOperationAvailable as PropertyAnnotationValue<boolean>,\n\t\t\t\t\t\t[],\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t(path: string) => {\n\t\t\t\t\t\t\tif (path.startsWith(bindingParamName)) {\n\t\t\t\t\t\t\t\treturn path.replace(bindingParamName + \"/\", \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (internalField.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n\t\t\tbuttonPress = CommonHelper.getPressHandlerForDataFieldForIBN(internalField.metaPath.getObject(), undefined, undefined);\n\t\t\tnavigationAvailable = true;\n\t\t\tif (\n\t\t\t\tinternalField.convertedMetaPath?.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\t\tinternalField.convertedMetaPath.NavigationAvailable !== undefined &&\n\t\t\t\tString(internalField.formatOptions.ignoreNavigationAvailable) !== \"true\"\n\t\t\t) {\n\t\t\t\tnavigationAvailable = compileExpression(getExpressionFromAnnotation(internalField.convertedMetaPath.NavigationAvailable));\n\t\t\t}\n\t\t}\n\n\t\tlet button = \"\";\n\t\tif (internalField.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tvisible={internalField.visible}\n\t\t\t\t\ttext={text}\n\t\t\t\t\ticon={icon}\n\t\t\t\t\tenabled={navigationAvailable}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t\tpress={buttonPress as unknown as ((oEvent: Event<object, EventProvider>) => void) | undefined}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (\n\t\t\tFieldHelper.isDataFieldActionButtonVisible(\n\t\t\t\tinternalField.convertedMetaPath,\n\t\t\t\tbuttonIsBound,\n\t\t\t\tbuttonOperationAvailable as boolean | undefined\n\t\t\t)\n\t\t) {\n\t\t\tconst enabled = FieldHelper.isDataFieldActionButtonEnabled(\n\t\t\t\tinternalField.convertedMetaPath as DataFieldForAction,\n\t\t\t\tbuttonIsBound as unknown as boolean,\n\t\t\t\tbuttonOperationAvailable,\n\t\t\t\tbuttonOperationAvailableFormatted as string\n\t\t\t);\n\t\t\tconst type = buildExpressionForCriticalityButtonType(internalField.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tclass={internalField.class}\n\t\t\t\t\ttext={text}\n\t\t\t\t\ticon={icon}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t\tpress={buttonPress as unknown as ((oEvent: Event<object, EventProvider>) => void) | undefined}\n\t\t\t\t\tenabled={enabled}\n\t\t\t\t\tvisible={internalField.visible}\n\t\t\t\t\ttype={type}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn button;\n\t},\n\n\t/**\n\t * Generates the Contact template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetContactTemplate(internalField: FieldBlockProperties): string {\n\t\tconst contactMetaPath = internalField.metaPath.getModel().createBindingContext(\"Target/$AnnotationPath\", internalField.metaPath);\n\t\tconst contactVisible = FieldTemplating.getVisibleExpression(internalField.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\treturn (\n\t\t\t<Contact\n\t\t\t\tidPrefix={internalField.idPrefix}\n\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy}\n\t\t\t\tmetaPath={contactMetaPath.getPath()}\n\t\t\t\tcontextPath={internalField.contextPath.getPath()}\n\t\t\t\t_flexId={internalField._flexId}\n\t\t\t\tvisible={contactVisible}\n\t\t\t\tshowEmptyIndicator={internalField.formatOptions.showEmptyIndicator}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the innerpart of the data point to be used in getDataPointTemplate.\n\t * @param internalField Reference to the current internal field instance\n\t * @param withConditionalWrapper Boolean value to determine whether the DataPoint\n\t * \t\t\t\t\t  \t\t\tshall be generated for the conditional wrapper case\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDataPointInnerPart(internalField: FieldBlockProperties, withConditionalWrapper: boolean): string {\n\t\tconst convertedDataField = MetaModelConverter.convertMetaModelContext(internalField.metaPath) as DataFieldAbstractTypes;\n\n\t\tconst metaPath =\n\t\t\tconvertedDataField.$Type === UIAnnotationTypes.DataFieldForAnnotation\n\t\t\t\t? internalField.metaPath.getModel().createBindingContext(\"Target/$AnnotationPath\", internalField.metaPath)\n\t\t\t\t: internalField.metaPath;\n\n\t\tconst formatOptions = {\n\t\t\tmeasureDisplayMode: internalField.formatOptions.measureDisplayMode,\n\t\t\tshowEmptyIndicator: internalField.formatOptions.showEmptyIndicator,\n\t\t\tisAnalytics: internalField.formatOptions.isAnalytics\n\t\t};\n\n\t\treturn (\n\t\t\t<DataPoint\n\t\t\t\tidPrefix={internalField.idPrefix}\n\t\t\t\tvisible={(!withConditionalWrapper ? internalField.displayVisible : \"\") as unknown as string | undefined}\n\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy ? internalField.ariaLabelledBy : undefined}\n\t\t\t\tmetaPath={metaPath.getPath()}\n\t\t\t\tcontextPath={internalField.contextPath?.getPath()}\n\t\t\t\tvalue={internalField.value}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tformatOptions: { formatOptions }\n\t\t\t\t}}\n\t\t\t</DataPoint>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the DataPoint template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDataPointTemplate(internalField: FieldBlockProperties): string {\n\t\tif ((internalField.formatOptions.isAnalytics ?? false) && (internalField.hasUnitOrCurrency ?? false)) {\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\tcondition={internalField.hasValidAnalyticalCurrencyOrUnit as unknown as boolean}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: this.getDataPointInnerPart(internalField, true),\n\t\t\t\t\t\tcontentFalse: this.getCurrencyOrUnitControl(internalField, this.getDataPointInnerPart(internalField, false))\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.getDataPointInnerPart(internalField, false);\n\t\t}\n\t},\n\n\t/**\n\t * Generates the ExpandableText template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetExpandableText(internalField: FieldBlockProperties): string {\n\t\treturn (\n\t\t\t<ExpandableText\n\t\t\t\tid={internalField?.displayStyleId}\n\t\t\t\tvisible={internalField?.displayVisible}\n\t\t\t\ttext={internalField.text}\n\t\t\t\toverflowMode={internalField?.formatOptions?.textExpandBehaviorDisplay}\n\t\t\t\tmaxCharacters={internalField?.formatOptions?.textMaxCharactersDisplay}\n\t\t\t\temptyIndicatorMode={internalField?.emptyIndicatorMode}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the File template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetFileTemplate(internalField: FieldBlockProperties): string {\n\t\tlet innerFilePart;\n\n\t\tconst fileRelativePropertyPath = getContextRelativeTargetObjectPath(internalField.dataModelPath);\n\t\tconst fileNameAnnotation = internalField.property.annotations.Core?.ContentDisposition?.Filename;\n\t\tlet fileFilenameExpression;\n\t\tif (isPathAnnotationExpression(fileNameAnnotation)) {\n\t\t\tconst fileNameDataModelPath = enhanceDataModelPath(internalField.dataModelPath, fileNameAnnotation.path);\n\t\t\t// This causes an expression parsing error: compileExpression(pathInModel(getContextRelativeTargetObjectPath(fileNameDataModelPath)));\n\t\t\tfileFilenameExpression = \"{ path: '\" + getContextRelativeTargetObjectPath(fileNameDataModelPath) + \"' }\";\n\t\t}\n\t\tconst fileStreamNotEmpty = compileExpression(not(equal(pathInModel(`${fileRelativePropertyPath}@odata.mediaContentType`), null)));\n\n\t\t// FileWrapper\n\t\tconst fileUploadUrl = FieldTemplating.getValueBinding(internalField.dataModelPath, {});\n\t\tconst fileFilenamePath = (internalField.property.annotations.Core?.ContentDisposition?.Filename as PathAnnotationExpression<string>)\n\t\t\t?.path;\n\t\tconst fileMediaType =\n\t\t\tinternalField.property.annotations.Core?.MediaType &&\n\t\t\tcompileExpression(getExpressionFromAnnotation(internalField.property.annotations.Core?.MediaType));\n\n\t\t// template:if\n\t\tconst fileIsImage =\n\t\t\t!!internalField.property.annotations.UI?.IsImageURL ||\n\t\t\t!!internalField.property.annotations.UI?.IsImage ||\n\t\t\t/image\\//i.test(internalField.property.annotations.Core?.MediaType?.toString() ?? \"\");\n\n\t\t// Avatar\n\t\tconst fileAvatarSrc = FieldTemplating.getValueBinding(internalField.dataModelPath, {});\n\t\tconst fileAvatarDisplayShape = FieldTemplating.getAvatarShape(internalField.dataModelPath);\n\n\t\t// Icon\n\t\tconst fileIconSrc = FieldHelper.getPathForIconSource(fileRelativePropertyPath);\n\n\t\t// Link\n\t\tconst fileLinkText = FieldHelper.getFilenameExpr(fileFilenameExpression, \"{sap.fe.i18n>M_FIELD_FILEUPLOADER_NOFILENAME_TEXT}\");\n\t\tconst fileLinkHref = FieldHelper.getDownloadUrl(fileUploadUrl ?? \"\");\n\n\t\t// Text\n\t\tconst fileTextVisible = compileExpression(equal(pathInModel(`${fileRelativePropertyPath}@odata.mediaContentType`), null));\n\n\t\tlet fileAcceptableMediaTypes;\n\t\t// FileUploader\n\t\tif (internalField.property.annotations.Core?.AcceptableMediaTypes) {\n\t\t\tconst acceptedTypes = Array.from(internalField.property.annotations.Core.AcceptableMediaTypes as unknown as string[]).map(\n\t\t\t\t(type) => `'${type}'`\n\t\t\t);\n\t\t\tfileAcceptableMediaTypes = `{=odata.collection([${acceptedTypes.join(\",\")}])}`; // This does not feel right, but follows the logic of AnnotationHelper#value\n\t\t}\n\t\tconst fileMaximumSize = FieldHelper.calculateMBfromByte(internalField.property.maxLength);\n\n\t\tif (fileIsImage) {\n\t\t\tinnerFilePart = {\n\t\t\t\tavatar: (\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\tsrc={fileAvatarSrc}\n\t\t\t\t\t\tdisplaySize=\"S\"\n\t\t\t\t\t\tclass=\"sapUiSmallMarginEnd\"\n\t\t\t\t\t\timageFitType=\"Cover\"\n\t\t\t\t\t\tdisplayShape={fileAvatarDisplayShape}\n\t\t\t\t\t>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\tcustomData: <ImageCustomData paramName=\"xcache\" />\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Avatar>\n\t\t\t\t)\n\t\t\t};\n\t\t} else {\n\t\t\tinnerFilePart = {\n\t\t\t\ticon: <Icon src={fileIconSrc} class=\"sapUiSmallMarginEnd\" visible={fileStreamNotEmpty} />,\n\t\t\t\tlink: <Link text={fileLinkText} target=\"_blank\" href={fileLinkHref} visible={fileStreamNotEmpty} wrapping=\"true\" />,\n\t\t\t\ttext: <Text emptyIndicatorMode={internalField.emptyIndicatorMode} text=\"\" visible={fileTextVisible} />\n\t\t\t};\n\t\t}\n\n\t\tif (internalField.editMode !== FieldEditMode.Display) {\n\t\t\tconst beforeDialogOpen = internalField.collaborationEnabled ? \"FIELDRUNTIME.handleOpenUploader\" : undefined;\n\t\t\tconst afterDialogOpen = internalField.collaborationEnabled ? \"FIELDRUNTIME.handleCloseUploader\" : undefined;\n\n\t\t\tinnerFilePart = {\n\t\t\t\t...innerFilePart,\n\t\t\t\tfileUploader: (\n\t\t\t\t\t<FileUploader\n\t\t\t\t\t\tname=\"FEV4FileUpload\"\n\t\t\t\t\t\tvisible={internalField.editableExpression}\n\t\t\t\t\t\tbuttonOnly=\"true\"\n\t\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\t\tmultiple=\"false\"\n\t\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_FIELD_FILEUPLOADER_UPLOAD_BUTTON_TOOLTIP}\"\n\t\t\t\t\t\ticon=\"sap-icon://upload\"\n\t\t\t\t\t\tstyle=\"Transparent\"\n\t\t\t\t\t\tsendXHR=\"true\"\n\t\t\t\t\t\tuseMultipart=\"false\"\n\t\t\t\t\t\tsameFilenameAllowed=\"true\"\n\t\t\t\t\t\tmimeType={fileAcceptableMediaTypes}\n\t\t\t\t\t\ttypeMissmatch={\"FIELDRUNTIME.handleTypeMissmatch\" as unknown as (oEvent: FileUploader$TypeMissmatchEvent) => void}\n\t\t\t\t\t\tmaximumFileSize={fileMaximumSize}\n\t\t\t\t\t\tfileSizeExceed={\n\t\t\t\t\t\t\t\"FIELDRUNTIME.handleFileSizeExceed\" as unknown as (oEvent: FileUploader$FileSizeExceedEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuploadOnChange=\"false\"\n\t\t\t\t\t\tuploadComplete={\n\t\t\t\t\t\t\t`FIELDRUNTIME.handleUploadComplete($event, ${\n\t\t\t\t\t\t\t\tfileFilenameExpression || \"undefined\"\n\t\t\t\t\t\t\t}, '${fileRelativePropertyPath}', $controller)` as unknown as (oEvent: FileUploader$UploadCompleteEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\thttpRequestMethod=\"Put\"\n\t\t\t\t\t\tchange={\"FIELDRUNTIME.uploadStream($controller, $event)\" as unknown as (oEvent: FileUploader$ChangeEvent) => void}\n\t\t\t\t\t\tbeforeDialogOpen={beforeDialogOpen as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\tafterDialogClose={afterDialogOpen as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\tuploadStart={\"FIELDRUNTIME.handleOpenUploader\" as unknown as (oEvent: FileUploader$UploadStartEvent) => void}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tdeleteButton: (\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon=\"sap-icon://sys-cancel\"\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\tpress={\n\t\t\t\t\t\t\t`FIELDRUNTIME.removeStream($event, ${\n\t\t\t\t\t\t\t\tfileFilenameExpression || \"undefined\"\n\t\t\t\t\t\t\t}, '${fileRelativePropertyPath}', $controller)` as unknown as (oEvent: Event) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_FIELD_FILEUPLOADER_DELETE_BUTTON_TOOLTIP}\"\n\t\t\t\t\t\tvisible={internalField.editableExpression}\n\t\t\t\t\t\tenabled={fileStreamNotEmpty}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\treturn (\n\t\t\t<FileWrapper\n\t\t\t\tcore:require=\"{FIELDRUNTIME: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\tvisible={internalField.visible}\n\t\t\t\tuploadUrl={fileUploadUrl}\n\t\t\t\tpropertyPath={fileRelativePropertyPath}\n\t\t\t\tfilename={fileFilenamePath}\n\t\t\t\tmediaType={fileMediaType}\n\t\t\t\tfieldGroupIds={internalField.fieldGroupIds}\n\t\t\t\tvalidateFieldGroup={\n\t\t\t\t\t\"FIELDRUNTIME.onValidateFieldGroup($event)\" as unknown as (oEvent: Control$ValidateFieldGroupEvent) => void\n\t\t\t\t}\n\t\t\t\tlog:sourcePath={internalField.dataSourcePath}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tinnerFilePart\n\t\t\t\t}}\n\t\t\t</FileWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the Link template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLinkTemplate(internalField: FieldBlockProperties): string {\n\t\tlet linkUrl;\n\t\tlet linkPress;\n\t\tlet iconUrl;\n\t\tlet linkActived;\n\t\ttype LinkTarget = \"_blank\" | \"_self\" | \"_top\" | \"_parent\";\n\t\tlet linkTarget: LinkTarget | undefined;\n\n\t\tswitch (internalField.convertedMetaPath.$Type as string) {\n\t\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\t\t\tlinkPress = CommonHelper.getPressHandlerForDataFieldForIBN(internalField.metaPath.getObject());\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\t\tcore:require=\"{WSR: 'sap/base/strings/whitespaceReplacer'}\"\n\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\ttext={DisplayStyle.computeTextWithWhiteSpace(internalField)}\n\t\t\t\t\t\tpress={linkPress as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\t\t\tlinkPress = `FieldRuntime.onDataFieldWithNavigationPath(\\${$source>/}, $controller, '${\n\t\t\t\t\t(internalField.convertedMetaPath as DataFieldWithNavigationPath).Target.value\n\t\t\t\t}')`;\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\t\tcore:require=\"{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\t\tpress={linkPress as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\t\tlinkPress = FieldHelper.getPressEventForDataFieldActionButton(internalField, internalField.metaPath.getObject());\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\t\tpress={linkPress as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\t\t\tconst html5LinkTarget = internalField.property.annotations.HTML5?.LinkTarget;\n\t\t\t\tinternalField.text = DisplayStyle.computeTextWithWhiteSpace(internalField);\n\t\t\t\ticonUrl = (internalField.convertedMetaPath as DataFieldTypes).IconUrl\n\t\t\t\t\t? compileExpression(\n\t\t\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\t\t\t(internalField.convertedMetaPath as DataFieldTypes).IconUrl as unknown as PropertyAnnotationValue<String>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined;\n\t\t\t\tconst linkBinding = getExpressionFromAnnotation(\n\t\t\t\t\t(internalField.convertedMetaPath as DataFieldWithUrl).Url as unknown as PropertyAnnotationValue<String>\n\t\t\t\t);\n\t\t\t\tlinkUrl = compileExpression(linkBinding);\n\t\t\t\tlinkActived = compileExpression(not(equal(linkBinding, \"\")));\n\t\t\t\tlinkTarget = html5LinkTarget && (html5LinkTarget.toString() as LinkTarget);\n\t\t}\n\n\t\tif (\n\t\t\tinternalField.property.annotations?.Communication?.IsEmailAddress ||\n\t\t\tinternalField.property.annotations?.Communication?.IsPhoneNumber\n\t\t) {\n\t\t\tconst linkIsEmailAddress = internalField.property.annotations.Communication?.IsEmailAddress !== undefined;\n\t\t\tconst linkIsPhoneNumber = internalField.property.annotations.Communication?.IsPhoneNumber !== undefined;\n\t\t\tconst propertyValueBinding = FieldTemplating.getValueBinding(internalField.dataModelPath, {});\n\t\t\tconst mailBlockId = internalField.displayStyleId ? internalField.displayStyleId : `mailBlock${uid()}`;\n\t\t\tif (linkIsEmailAddress) {\n\t\t\t\tlinkUrl = `mailto:${propertyValueBinding}`;\n\t\t\t\treturn (\n\t\t\t\t\t<Email\n\t\t\t\t\t\tid={mailBlockId}\n\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\t\tmail={propertyValueBinding}\n\t\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy ? internalField.ariaLabelledBy : undefined}\n\t\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (linkIsPhoneNumber) {\n\t\t\t\tlinkUrl = `tel:${propertyValueBinding}`;\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\t\tcore:require=\"{WSR: 'sap/base/strings/whitespaceReplacer'}\"\n\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\ttext={DisplayStyle.computeTextWithWhiteSpace(internalField)}\n\t\t\t\t\t\thref={linkUrl}\n\t\t\t\t\t\tenabled={linkActived}\n\t\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (iconUrl) {\n\t\t\treturn (\n\t\t\t\t<ObjectStatus\n\t\t\t\t\tcore:require=\"{WSR: 'sap/base/strings/whitespaceReplacer', FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\ticon={iconUrl}\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\tpress={\"FieldRuntime.openExternalLink\" as unknown as (oEvent: Event) => void}\n\t\t\t\t\tactive={linkActived}\n\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: <CustomData key={\"url\"} value={linkUrl} />\n\t\t\t\t\t}}\n\t\t\t\t</ObjectStatus>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Link\n\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\tcore:require=\"{WSR: 'sap/base/strings/whitespaceReplacer'}\"\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\thref={linkUrl}\n\t\t\t\t\tenabled={linkActived}\n\t\t\t\t\ttarget={linkTarget === undefined ? \"_top\" : linkTarget}\n\t\t\t\t\twrapping={internalField.wrap === undefined ? true : internalField.wrap}\n\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Find the foreign key of target entity which quick view Facets we want to display.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns The key of the target entity\n\t */\n\tgetForeignKeyForCustomData(internalField: FieldBlockProperties): string | undefined {\n\t\tconst relativePathToQuickViewEntity = QuickView.getRelativePathToQuickViewEntity(internalField.dataModelPath);\n\t\tif (relativePathToQuickViewEntity) {\n\t\t\tconst targetNavigationProperties = internalField.dataModelPath.targetEntityType.navigationProperties;\n\t\t\tconst targetNavProp = targetNavigationProperties.find((navProp) => navProp.name === relativePathToQuickViewEntity);\n\t\t\tconst refConstraint = targetNavProp?.referentialConstraint;\n\t\t\tconst key = refConstraint?.length && typeof refConstraint[0] === \"object\" && refConstraint[0].targetProperty;\n\t\t\tconst keyToFetch = key ? `${relativePathToQuickViewEntity}/${key}` : undefined;\n\t\t\tif (keyToFetch !== undefined) {\n\t\t\t\treturn keyToFetch;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * Generates the check expression for displaying or not a quickview.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns The key of the target entity\n\t */\n\tgetForeignKeyValueExpression(internalField: FieldBlockProperties): string {\n\t\tconst foreignKeyRelativePath = QuickView.getRelativePathToQuickViewEntity(internalField.dataModelPath)\n\t\t\t? this.getForeignKeyForCustomData(internalField)\n\t\t\t: undefined;\n\t\tconst expression: BindingToolkitExpression<string> = {\n\t\t\tpath: `${foreignKeyRelativePath}`,\n\t\t\t_type: \"PathInModel\"\n\t\t};\n\t\treturn `${compileExpression(ifElse(equal(foreignKeyRelativePath, undefined), constant(true), not(equal(null, expression))))}`;\n\t},\n\n\t/**\n\t * Generates the StandardLinkWithQuickView template.\n\t * @param internalField Reference to the current internal field instance\n\t * @param text The text to display\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetStandardLinkWithQuickViewTemplate(internalField: FieldBlockProperties, text: CompiledBindingToolkitExpression): string {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper', WSR: 'sap/base/strings/whitespaceReplacer'}\"\n\t\t\t\ttext={text}\n\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\twrapping={internalField.wrap === undefined ? true : internalField.wrap}\n\t\t\t\tpress={\"FieldRuntimeHelper.pressLink\" as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={internalField.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(internalField)\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ConditionalLinkTemplate template.\n\t * @param internalField Reference to the current internal field instance\n\t * @param condition Condition to display a Link or a Text\n\t * @param text The text to display\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetConditionalLinkWithQuickViewTemplate(\n\t\tinternalField: FieldBlockProperties,\n\t\tcondition: CompiledBindingToolkitExpression,\n\t\ttext: CompiledBindingToolkitExpression\n\t): string {\n\t\treturn (\n\t\t\t<TextLink\n\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper', ValueFormatter: 'sap/fe/core/formatters/ValueFormatter', WSR: 'sap/base/strings/whitespaceReplacer'}\"\n\t\t\t\tshowAsLink={condition as unknown as boolean}\n\t\t\t\tsemanticObject={internalField.semanticObject}\n\t\t\t\ttext={text}\n\t\t\t\twrapping={internalField.wrap === undefined ? true : internalField.wrap}\n\t\t\t\tpress={\"FieldRuntimeHelper.pressLink\" as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy}\n\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={internalField.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(internalField)\n\t\t\t\t}}\n\t\t\t</TextLink>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ConditionalLinkTemplate template.\n\t * @param internalField Reference to the current internal field instance\n\t * @param condition Condition to display a Link or a Text\n\t * @param contentTrue The Control to display in case condition is true\n\t * @param contentFalse The Control to display in case condition is false\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetConditionalWrapperForQuickViewTemplate(\n\t\tinternalField: FieldBlockProperties,\n\t\tcondition: string,\n\t\tcontentTrue: string,\n\t\tcontentFalse: string\n\t): string {\n\t\treturn (\n\t\t\t<ConditionalWrapper visible={internalField.displayVisible} condition={condition as unknown as boolean}>\n\t\t\t\t{{\n\t\t\t\t\tcontentTrue: contentTrue,\n\t\t\t\t\tcontentFalse: contentFalse\n\t\t\t\t}}\n\t\t\t</ConditionalWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the LinkWithQuickView template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLinkWithQuickViewTemplate(internalField: FieldBlockProperties): string {\n\t\tconst text = internalField.formatOptions.retrieveTextFromValueList\n\t\t\t? internalField.textFromValueList\n\t\t\t: DisplayStyle.computeTextWithWhiteSpace(internalField);\n\t\tconst condition = this.getQuickViewCondition(internalField);\n\t\tif (condition === \"true\") {\n\t\t\treturn this.getStandardLinkWithQuickViewTemplate(internalField, text);\n\t\t}\n\t\treturn this.getConditionalLinkWithQuickViewTemplate(internalField, condition, text);\n\t},\n\n\t/**\n\t * Generates the Text template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTextTemplate(internalField: FieldBlockProperties): string {\n\t\tif (internalField.formatOptions.isAnalytics && internalField.hasUnitOrCurrency) {\n\t\t\tconst content = DisplayStyle.getCurrencyOrUnitControl(internalField, <Text text={internalField.text} textAlign=\"End\"></Text>);\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\tcondition={internalField.hasValidAnalyticalCurrencyOrUnit as unknown as boolean}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: (\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t\t\t\trenderWhitespace=\"true\"\n\t\t\t\t\t\t\t\twrapping={internalField.wrap}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcontentFalse: content\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else if (internalField.formatOptions.retrieveTextFromValueList) {\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\ttext={internalField.textFromValueList}\n\t\t\t\t\tcore:require=\"{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\trenderWhitespace=\"true\"\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\t// When having a TextArrangement with TextOnly, RTA can only find the binding for the text, but not for the field.\n\t\t\t// To prevent that such a field can be added twice via RTA, we need to provide the field binding as a dummy custom binding.\n\t\t\tlet customdata;\n\t\t\tif (internalField.formatOptions.displayMode === \"Description\" && internalField.valueAsStringBindingExpression) {\n\t\t\t\tcustomdata = <CustomData key=\"fieldBinding\" value={internalField.valueAsStringBindingExpression} />;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\twrapping={internalField.wrap}\n\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\trenderWhitespace=\"true\"\n\t\t\t\t>\n\t\t\t\t\t{customdata}\n\t\t\t\t</Text>\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Generates the ObjectIdentifier template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetObjectIdentifier(internalField: FieldBlockProperties): string {\n\t\tlet dependents: MdcLink | undefined;\n\t\tlet titleActive;\n\t\tif (internalField.hasQuickView) {\n\t\t\ttitleActive = this.getQuickViewCondition(internalField);\n\t\t\tdependents = DisplayStyle.getMdcLinkForQuickView(internalField);\n\t\t} else {\n\t\t\ttitleActive = false;\n\t\t}\n\n\t\tlet identifier = (\n\t\t\t<ObjectIdentifier\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\ttitle={internalField.identifierTitle}\n\t\t\t\ttext={internalField.identifierText}\n\t\t\t\ttitleActive={titleActive}\n\t\t\t\ttitlePress={\"FieldRuntimeHelper.pressLink\" as unknown as (oEvent: ObjectIdentifier$TitlePressEvent) => void}\n\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={internalField.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: dependents\n\t\t\t\t}}\n\t\t\t</ObjectIdentifier>\n\t\t);\n\t\tif (internalField.hasSituationsIndicator) {\n\t\t\tidentifier = (\n\t\t\t\t<HBox alignItems=\"Center\" justifyContent=\"SpaceBetween\" width=\"100%\">\n\t\t\t\t\t{identifier}\n\t\t\t\t\t<SituationsIndicator\n\t\t\t\t\t\tcontextPath={internalField.contextPath.getPath()}\n\t\t\t\t\t\tpropertyPath={internalField.situationsIndicatorPropertyPath}\n\t\t\t\t\t/>\n\t\t\t\t</HBox>\n\t\t\t);\n\t\t}\n\t\tif (internalField.showErrorIndicator && internalField.showErrorObjectStatus) {\n\t\t\tidentifier = (\n\t\t\t\t<VBox>\n\t\t\t\t\t{identifier}\n\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\tvisible={internalField.showErrorObjectStatus}\n\t\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\n\t\t\t\t\t\ttext=\"{sap.fe.i18n>Contains_Errors}\"\n\t\t\t\t\t\tstate=\"Error\"\n\t\t\t\t\t/>\n\t\t\t\t</VBox>\n\t\t\t);\n\t\t}\n\n\t\treturn identifier;\n\t},\n\n\t/**\n\t * Generates the ObjectStatus template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetObjectStatus(internalField: FieldBlockProperties): string {\n\t\tlet objectStatus;\n\t\tlet requiredHelper = {\n\t\t\t\"core:require\": \"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t};\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataField>(\n\t\t\tinternalField.metaPath,\n\t\t\tinternalField.contextPath\n\t\t);\n\t\tconst enhancedValueDataModelPath = enhanceDataModelPath<Property>(\n\t\t\tdataModelObjectPath,\n\t\t\tdataModelObjectPath.targetObject?.Value.path\n\t\t);\n\t\tconst condition = hasValidAnalyticalCurrencyOrUnit(enhancedValueDataModelPath);\n\t\tconst convertedDataField = MetaModelConverter.getInvolvedDataModelObjects<DataPointType>(internalField.metaPath);\n\t\tconst criticalityIcon = buildExpressionForCriticalityIcon(convertedDataField);\n\t\tconst state = buildExpressionForCriticalityColor(convertedDataField);\n\n\t\tconst linkUrl = (internalField.convertedMetaPath as DataFieldWithUrl).Url\n\t\t\t? compileExpression(\n\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\t(internalField.convertedMetaPath as DataFieldWithUrl).Url as unknown as PropertyAnnotationValue<String>\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: undefined;\n\n\t\tif (internalField.formatOptions.isAnalytics && internalField.hasUnitOrCurrency) {\n\t\t\tconst content = DisplayStyle.getCurrencyOrUnitControl(internalField, <Text text={internalField.text} textAlign=\"End\"></Text>);\n\t\t\tobjectStatus = (\n\t\t\t\t<ConditionalWrapper id={internalField.displayStyleId} condition={condition as unknown as boolean}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: (\n\t\t\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\t\t\ticon={criticalityIcon}\n\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcontentFalse: content\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\tlet dependents: MdcLink | undefined;\n\t\t\tlet active = false;\n\t\t\tlet isActive;\n\t\t\tlet pressAction;\n\t\t\tif (internalField.hasQuickView) {\n\t\t\t\tdependents = DisplayStyle.getMdcLinkForQuickView(internalField);\n\t\t\t\tisActive = this.getQuickViewCondition(internalField);\n\t\t\t\tpressAction = \"FieldRuntimeHelper.pressLink\";\n\t\t\t}\n\t\t\tif (linkUrl) {\n\t\t\t\tactive = true;\n\t\t\t\trequiredHelper = {\n\t\t\t\t\t\"core:require\": \"{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\t};\n\t\t\t\tpressAction = \"FieldRuntime.openExternalLink\";\n\t\t\t}\n\n\t\t\tobjectStatus = (\n\t\t\t\t<ObjectStatus\n\t\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\t\ticon={criticalityIcon}\n\t\t\t\t\tstate={state}\n\t\t\t\t\ttext={internalField.text}\n\t\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t\t\t{...requiredHelper}\n\t\t\t\t\tactive={isActive ? isActive : active}\n\t\t\t\t\tpress={pressAction as unknown as (oEvent: Event) => void}\n\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: [\n\t\t\t\t\t\t\t<CustomData key={\"loadValue\"} value={internalField.valueAsStringBindingExpression} />,\n\t\t\t\t\t\t\t<CustomData key={\"url\"} value={linkUrl} />\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdependents: dependents\n\t\t\t\t\t}}\n\t\t\t\t</ObjectStatus>\n\t\t\t);\n\t\t}\n\n\t\treturn objectStatus;\n\t},\n\n\tgetMdcLinkForQuickView(internalField: FieldBlockProperties): MdcLink {\n\t\treturn new QuickView(\n\t\t\tinternalField.dataModelPath,\n\t\t\tinternalField.metaPath.getPath(),\n\t\t\tinternalField.contextPath.getPath(),\n\t\t\tinternalField.semanticObject\n\t\t).createContent() as MdcLink;\n\t},\n\n\t/**\n\t * Generates the LabelSemantickey template.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLabelSemanticKey(internalField: FieldBlockProperties): string {\n\t\tconst contentTrue = (\n\t\t\t<Link\n\t\t\t\ttext={internalField.text}\n\t\t\t\twrapping=\"true\"\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tpress={\"FieldRuntimeHelper.pressLink\" as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={internalField.emptyIndicatorMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={internalField.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(internalField)\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t\tconst contentFalse = (\n\t\t\t<Label\n\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\ttext={internalField.identifierTitle}\n\t\t\t\tdesign=\"Bold\"\n\t\t\t/>\n\t\t);\n\t\tif (internalField.hasQuickView) {\n\t\t\tconst hasQuickview = this.getQuickViewCondition(internalField);\n\t\t\tif (hasQuickview === \"true\") {\n\t\t\t\treturn contentTrue;\n\t\t\t} else {\n\t\t\t\treturn this.getConditionalWrapperForQuickViewTemplate(internalField, hasQuickview as string, contentTrue, contentFalse);\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<Label\n\t\t\t\tid={internalField.displayStyleId}\n\t\t\t\tvisible={internalField.displayVisible}\n\t\t\t\ttext={internalField.identifierTitle}\n\t\t\t\tdesign=\"Bold\"\n\t\t\t/>\n\t\t);\n\t},\n\t/**\n\t * Gets the template for the semantic key with draft indicator.\n\t * @param semanticKeyTemplate The template result without draft indicator\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\taddDraftIndicator(semanticKeyTemplate: string, internalField: FieldBlockProperties): string {\n\t\tif (!internalField.formatOptions.fieldGroupDraftIndicatorPropertyPath) {\n\t\t\t// if the draftIndicator is not handled at the fieldGroup level\n\t\t\t//TODO could this be a boolean no draftIndicator\n\t\t\tsemanticKeyTemplate = (\n\t\t\t\t<FormElementWrapper visible={internalField.displayVisible}>\n\t\t\t\t\t<VBox class={FieldHelper.getMarginClass(internalField.formatOptions.compactSemanticKey)}>\n\t\t\t\t\t\t{semanticKeyTemplate}\n\t\t\t\t\t\t<DraftIndicator\n\t\t\t\t\t\t\tdraftIndicatorType={ObjectMarkerVisibility.IconAndText}\n\t\t\t\t\t\t\tcontextPath={internalField.contextPath.getPath()}\n\t\t\t\t\t\t\tvisible={internalField.draftIndicatorVisible}\n\t\t\t\t\t\t\tariaLabelledBy={internalField.ariaLabelledBy ? internalField.ariaLabelledBy : []}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VBox>\n\t\t\t\t</FormElementWrapper>\n\t\t\t);\n\t\t}\n\t\treturn semanticKeyTemplate;\n\t},\n\n\t/**\n\t * Computes the text property with the appropriate white space handling.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tcomputeTextWithWhiteSpace(internalField: FieldBlockProperties): CompiledBindingToolkitExpression {\n\t\tconst text = FieldTemplating.getTextBinding(internalField.dataModelPath, internalField.formatOptions, true);\n\t\treturn isPathInModelExpression(text) || typeof text === \"string\"\n\t\t\t? compileExpression(formatResult([text], \"WSR\"))\n\t\t\t: compileExpression(text);\n\t},\n\t/**\n\t * Gets the condition for having an active link that opens the quick view.\n\t * @param internalField\n\t * @returns A compile binding expression for the condition.\n\t */\n\tgetQuickViewCondition(internalField: FieldBlockProperties): CompiledBindingToolkitExpression {\n\t\tswitch (internalField.quickViewType) {\n\t\t\tcase \"Facets\":\n\t\t\t\t//there is quick viewFacets annotation only then we check if the navigation is reachable\n\t\t\t\treturn this.getForeignKeyValueExpression(internalField);\n\n\t\t\tcase \"SemanticLinks\":\n\t\t\t\tif (internalField.dynamicSemanticObjects) {\n\t\t\t\t\tconst listOfDynamicSemanticObjects: BindingToolkitExpression<string>[] = [];\n\t\t\t\t\tif (internalField.semanticObject) {\n\t\t\t\t\t\t// If we see a dynamic expression with a formatter, we return false. The condition will be resolved later in TextLink control.\n\t\t\t\t\t\treturn compileExpression(constant(false));\n\t\t\t\t\t}\n\t\t\t\t\tfor (const semanticObjectExpression of internalField.dynamicSemanticObjects) {\n\t\t\t\t\t\tif (semanticObjectExpression._type === \"PathInModel\" || semanticObjectExpression._type === \"Constant\") {\n\t\t\t\t\t\t\tlistOfDynamicSemanticObjects.push(semanticObjectExpression);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If we see a dynamic expression ($edmJson), we return true.\n\t\t\t\t\t\t\treturn compileExpression(constant(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst semanticObjectsPath = [\n\t\t\t\t\t\tpathInModel<Context[]>(\"/semanticObjects\", \"internal\") as BindingToolkitExpression<string>\n\t\t\t\t\t].concat(listOfDynamicSemanticObjects);\n\t\t\t\t\treturn compileExpression(formatResult(semanticObjectsPath, valueFormatters.hasSemanticObjects));\n\t\t\t\t}\n\t\t\t\treturn \"true\";\n\t\t\tdefault:\n\t\t\t\t// \"facetsAndSemanticLinks\"\n\t\t\t\t// if there is both facets and semantic links, we do not check if the navigation is reachable\n\t\t\t\treturn \"true\";\n\t\t}\n\t},\n\n\t/**\n\t * Entry point for further templating processings.\n\t * @param internalField Reference to the current internal field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTemplate: (internalField: FieldBlockProperties): string => {\n\t\tlet innerFieldContent;\n\t\tswitch (internalField.displayStyle as DisplayStyleType) {\n\t\t\tcase \"AmountWithCurrency\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getAmountWithCurrencyTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"Avatar\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getAvatarTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"Button\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getButtonTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"Contact\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getContactTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"DataPoint\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getDataPointTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"ExpandableText\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getExpandableText(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"File\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getFileTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"Link\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLinkTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"LinkWithQuickView\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLinkWithQuickViewTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectIdentifier\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getObjectIdentifier(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectStatus\": {\n\t\t\t\tinnerFieldContent = DisplayStyle.getObjectStatus(internalField);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"LabelSemanticKey\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLabelSemanticKey(internalField);\n\t\t\t\tbreak;\n\t\t\tcase \"Text\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getTextTemplate(internalField);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tinnerFieldContent = \"\";\n\t\t}\n\t\tif (internalField.addDraftIndicator && innerFieldContent) {\n\t\t\tinnerFieldContent = DisplayStyle.addDraftIndicator(innerFieldContent, internalField);\n\t\t}\n\n\t\treturn innerFieldContent;\n\t}\n};\n\nexport default DisplayStyle;\n"],"mappings":"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","ignoreList":[],"file":"DisplayStyle-dbg.js"}