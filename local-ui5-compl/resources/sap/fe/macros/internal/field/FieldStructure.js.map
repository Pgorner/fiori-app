{"version":3,"file":"FieldStructure.js","names":["getPossibleValueHelpTemplate","internalField","vhp","FieldHelper","valueHelpProperty","valueHelpMetaPath","vhpCtx","getModel","createBindingContext","hasValueHelpAnnotations","hasValueHelpAnnotation","getObject","showValueHelpTemplate","_jsx","ValueHelp","_flexId","id","metaPath","getPath","contextPath","_exports","createFieldWrapper","fieldWrapperID","idPrefix","generate","undefined","contentDisplay","DisplayStyle","getTemplate","contentEdit","EditStyle","getTemplateWithWrapper","FieldWrapper","editMode","visible","width","textAlign","class","validateFieldGroup","children","getFieldStructureTemplate","displayStyle","collaborationEnabled","FieldEditMode","Display","_jsxs","HBox","alignItems","VBox","getFileTemplate","getCollaborationAvatar","formatOptions","fieldMode"],"sources":["./FieldStructure.tsx"],"sourcesContent":["import { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport ValueHelp from \"sap/fe/macros/ValueHelp\";\nimport HBox from \"sap/m/HBox\";\nimport VBox from \"sap/m/VBox\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport type { TextAlign } from \"sap/ui/core/library\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/Context\";\nimport FieldWrapper from \"../../controls/FieldWrapper\";\nimport FieldHelper from \"../../field/FieldHelper\";\nimport DisplayStyle from \"./DisplayStyle\";\nimport EditStyle from \"./EditStyle\";\nimport type { FieldBlockProperties } from \"./FieldStructureHelper\";\n\n/**\n * The function calculates the corresponding ValueHelp field in case it´s\n * defined for the specific control.\n * @param internalField\n * @returns An XML-based string with a possible ValueHelp control.\n */\nexport function getPossibleValueHelpTemplate(internalField: FieldBlockProperties): string {\n\tconst vhp = FieldHelper.valueHelpProperty(internalField.valueHelpMetaPath as unknown as Context);\n\tconst vhpCtx = (internalField.valueHelpMetaPath as unknown as Context)\n\t\t.getModel()\n\t\t.createBindingContext(vhp, internalField.valueHelpMetaPath as unknown as Context);\n\tconst hasValueHelpAnnotations = FieldHelper.hasValueHelpAnnotation(vhpCtx.getObject(\"@\"));\n\tif (hasValueHelpAnnotations && internalField.showValueHelpTemplate == true) {\n\t\t// depending on whether this one has a value help annotation included, add the dependent\n\t\treturn (\n\t\t\t<ValueHelp\n\t\t\t\t_flexId={`${internalField.id}-content_FieldValueHelp`}\n\t\t\t\tmetaPath={vhpCtx.getPath()}\n\t\t\t\tcontextPath={internalField.contextPath?.getPath()}\n\t\t\t/>\n\t\t);\n\t}\n\treturn \"\";\n}\n\n/**\n * Create the fieldWrapper control for use cases with display and edit styles.\n * @param internalField Reference to the current internal field instance\n * @returns An XML-based string with the definition of the field control\n */\nexport function createFieldWrapper(internalField: FieldBlockProperties): string {\n\tlet fieldWrapperID;\n\tif (internalField._flexId) {\n\t\tfieldWrapperID = internalField._flexId;\n\t} else if (internalField.idPrefix) {\n\t\tfieldWrapperID = generate([internalField.idPrefix, \"Field-content\"]);\n\t} else {\n\t\tfieldWrapperID = undefined;\n\t}\n\n\t// compute the display part and the edit part for the fieldwrapper control\n\tconst contentDisplay = DisplayStyle.getTemplate(internalField);\n\t// content edit part needs to be wrapped further with an hbox in case of collaboration mode\n\t// that´s why we need to call this special helper here which finally calls internally EditStyle.getTemplate\n\t// const contentEdit = EditStyle.getTemplateWithWrapper(internalField, controller, handleChange, fieldAPI);\n\tconst contentEdit = EditStyle.getTemplateWithWrapper(internalField);\n\n\treturn (\n\t\t<FieldWrapper\n\t\t\tid={fieldWrapperID}\n\t\t\teditMode={internalField.editMode}\n\t\t\tvisible={internalField.visible}\n\t\t\twidth=\"100%\"\n\t\t\ttextAlign={internalField.textAlign as TextAlign}\n\t\t\tclass={internalField.class}\n\t\t\t// TODO Field needs to be migrated\n\t\t\tvalidateFieldGroup={\".collaborativeDraft.handleContentFocusOut\" as unknown as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t>\n\t\t\t{{\n\t\t\t\tcontentDisplay: contentDisplay,\n\t\t\t\tcontentEdit: contentEdit\n\t\t\t}}\n\t\t</FieldWrapper>\n\t);\n}\n\n/**\n * Helps to calculate the field structure wrapper.\n * @param internalField Reference to the current internal field instance\n * @returns An XML-based string with the definition of the field control\n */\nexport function getFieldStructureTemplate(internalField: FieldBlockProperties): string {\n\t//compute the field in case of mentioned display styles\n\tif (\n\t\tinternalField.displayStyle === \"Avatar\" ||\n\t\tinternalField.displayStyle === \"Contact\" ||\n\t\tinternalField.displayStyle === \"Button\" ||\n\t\tinternalField.displayStyle === \"File\"\n\t) {\n\t\t// check for special handling in case a file type is used with the collaboration mode\n\t\t// (renders an avatar directly)\n\t\tif (\n\t\t\tinternalField.displayStyle === \"File\" &&\n\t\t\t(internalField.collaborationEnabled ?? false) &&\n\t\t\tinternalField.editMode !== FieldEditMode.Display\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<HBox width=\"100%\" alignItems=\"End\">\n\t\t\t\t\t<VBox width=\"100%\">{DisplayStyle.getFileTemplate(internalField)}</VBox>\n\t\t\t\t\t{EditStyle.getCollaborationAvatar(internalField)}\n\t\t\t\t</HBox>\n\t\t\t);\n\t\t} else {\n\t\t\t//for all other cases render the displayStyles with a field api wrapper\n\t\t\treturn DisplayStyle.getTemplate(internalField);\n\t\t}\n\t} else if (internalField.formatOptions.fieldMode === \"nowrapper\" && internalField.editMode === FieldEditMode.Display) {\n\t\t//renders a display based building block (e.g. a button) that has no field api wrapper around it.\n\t\treturn DisplayStyle.getTemplate(internalField);\n\t} else {\n\t\t//for all other cases create a field wrapper\n\t\treturn createFieldWrapper(internalField);\n\t}\n}\n"],"mappings":";;;;qWAoBO,SAASA,EAA6BC,GAC5C,MAAMC,EAAMC,EAAYC,kBAAkBH,EAAcI,mBACxD,MAAMC,EAAUL,EAAcI,kBAC5BE,WACAC,qBAAqBN,EAAKD,EAAcI,mBAC1C,MAAMI,EAA0BN,EAAYO,uBAAuBJ,EAAOK,UAAU,MACpF,GAAIF,GAA2BR,EAAcW,uBAAyB,KAAM,CAE3E,OACCC,EAACC,EAAS,CACTC,QAAS,GAAGd,EAAce,4BAC1BC,SAAUX,EAAOY,UACjBC,YAAalB,EAAckB,aAAaD,WAG3C,CACA,MAAO,EACR,CAEAE,EAAApB,+BAKO,SAASqB,EAAmBpB,GAClC,IAAIqB,EACJ,GAAIrB,EAAcc,QAAS,CAC1BO,EAAiBrB,EAAcc,OAChC,MAAO,GAAId,EAAcsB,SAAU,CAClCD,EAAiBE,EAAS,CAACvB,EAAcsB,SAAU,iBACpD,KAAO,CACND,EAAiBG,SAClB,CAGA,MAAMC,EAAiBC,EAAaC,YAAY3B,GAIhD,MAAM4B,EAAcC,EAAUC,uBAAuB9B,GAErD,OACCY,EAACmB,EAAY,CACZhB,GAAIM,EACJW,SAAUhC,EAAcgC,SACxBC,QAASjC,EAAciC,QACvBC,MAAM,OACNC,UAAWnC,EAAcmC,UACzBC,MAAOpC,EAAcoC,MAErBC,mBAAoB,4CAA4GC,SAE/H,CACAb,eAAgBA,EAChBG,YAAaA,IAIjB,CAEAT,EAAAC,qBAKO,SAASmB,EAA0BvC,GAEzC,GACCA,EAAcwC,eAAiB,UAC/BxC,EAAcwC,eAAiB,WAC/BxC,EAAcwC,eAAiB,UAC/BxC,EAAcwC,eAAiB,OAC9B,CAGD,GACCxC,EAAcwC,eAAiB,SAC9BxC,EAAcyC,sBAAwB,QACvCzC,EAAcgC,WAAaU,EAAcC,QACxC,CACD,OACCC,EAACC,EAAI,CAACX,MAAM,OAAOY,WAAW,MAAKR,SAAA,CAClC1B,EAACmC,EAAI,CAACb,MAAM,OAAMI,SAAEZ,EAAasB,gBAAgBhD,KAChD6B,EAAUoB,uBAAuBjD,KAGrC,KAAO,CAEN,OAAO0B,EAAaC,YAAY3B,EACjC,CACD,MAAO,GAAIA,EAAckD,cAAcC,YAAc,aAAenD,EAAcgC,WAAaU,EAAcC,QAAS,CAErH,OAAOjB,EAAaC,YAAY3B,EACjC,KAAO,CAEN,OAAOoB,EAAmBpB,EAC3B,CACD,CAACmB,EAAAoB,4BAAA,OAAApB,CAAA","ignoreList":[]}