{"version":3,"file":"TextLink.js","names":["TextLink","_dec","defineUI5Class","_dec2","property","type","defaultValue","_dec3","required","_dec4","_dec5","_dec6","_dec7","event","_class","_class2","_BuildingBlock","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","content","createContent","_exports","_inheritsLoose","_proto","prototype","setSemanticObject","semanticObject","semanticObjectsList","availableSemanticObjectsToUser","getModel","getObject","startsWith","JSON","parse","setShowAsLink","SemanticObjectHelper","getReachableSemanticObjectsSettings","semanticObjectsExpressionList","qualifierMap","hasReachableStaticSemanticObject","showAsLink","setProperty","setText","text","_jsx","Link","wrapping","emptyIndicatorMode","press","pressEvent","fireEvent","Text","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./TextLink.tsx"],"sourcesContent":["import type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, event, property } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport * as SemanticObjectHelper from \"sap/fe/core/templating/SemanticObjectHelper\";\nimport Link, { type Link$PressEvent } from \"sap/m/Link\";\nimport Text from \"sap/m/Text\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\n\n@defineUI5Class(\"sap.fe.macros.controls.TextLink\")\nexport default class TextLink extends BuildingBlock<Text | Link> {\n\t@property({ type: \"boolean\", defaultValue: false })\n\tshowAsLink?: boolean;\n\n\t@property({ type: \"string\", required: false })\n\tsemanticObject!: string;\n\n\t@property({ type: \"boolean\", defaultValue: false })\n\twrapping!: boolean;\n\n\t@property({ type: \"string\", required: false })\n\ttext!: string;\n\n\t@property({ type: \"string\", required: false })\n\temptyIndicatorMode!: string;\n\n\t@event()\n\tpress?: (event: Link$PressEvent) => void;\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<TextLink>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t\tthis.content = this.createContent();\n\t}\n\n\t/**\n\t * Setter for the semanticObject property.\n\t * @param semanticObject\n\t */\n\tsetSemanticObject(semanticObject: string | undefined): void {\n\t\tif (semanticObject) {\n\t\t\tlet semanticObjectsList: string[] = [];\n\t\t\tthis.semanticObject = semanticObject;\n\t\t\tconst availableSemanticObjectsToUser: string[] = this.getModel(\"internal\")?.getObject(\"/semanticObjects\") ?? [];\n\t\t\tsemanticObjectsList = semanticObject.startsWith(\"[\") ? JSON.parse(semanticObject) : [semanticObject];\n\t\t\tthis.setShowAsLink(\n\t\t\t\tSemanticObjectHelper.getReachableSemanticObjectsSettings(availableSemanticObjectsToUser, {\n\t\t\t\t\tsemanticObjectsList: semanticObjectsList,\n\t\t\t\t\tsemanticObjectsExpressionList: [],\n\t\t\t\t\tqualifierMap: {}\n\t\t\t\t}).hasReachableStaticSemanticObject\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Setter for the showAsLink property.\n\t * @param showAsLink\n\t */\n\tsetShowAsLink(showAsLink: boolean): void {\n\t\tif (showAsLink !== this.showAsLink) {\n\t\t\tthis.setProperty(\"showAsLink\", showAsLink);\n\t\t\tthis.content = this.createContent();\n\t\t}\n\t}\n\n\t/**\n\t * Setter for the text property.\n\t * @param text\n\t */\n\tsetText(text: string): void {\n\t\t// in case the text is set after the inner control creation we need to forward it\n\t\tthis.setProperty(\"text\", text);\n\t\tthis.content?.setText(text);\n\t}\n\n\tcreateContent(): Text | Link {\n\t\tif (this.showAsLink === true) {\n\t\t\treturn (\n\t\t\t\t<Link\n\t\t\t\t\ttext={this.text}\n\t\t\t\t\twrapping={this.wrapping}\n\t\t\t\t\temptyIndicatorMode={this.emptyIndicatorMode}\n\t\t\t\t\tpress={(pressEvent): void => {\n\t\t\t\t\t\tthis.fireEvent(\"press\", pressEvent);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <Text text={this.text} wrapping={this.wrapping} emptyIndicatorMode={this.emptyIndicatorMode} />;\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}