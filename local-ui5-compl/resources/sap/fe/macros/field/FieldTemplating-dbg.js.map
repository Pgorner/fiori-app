{"version":3,"names":["addTextArrangementToBindingExpression","bindingExpressionToEnhance","fullContextPath","transformRecursively","expression","outExpression","modelName","undefined","oPropertyDataModelPath","enhanceDataModelPath","path","CommonFormatters","getBindingWithTextArrangement","_exports","formatValueRecursively","targetObject","formatWithTypeInformation","getTextBindingExpression","oPropertyDataModelObjectPath","fieldFormatOptions","getTextBinding","inputDataModelPath","asObject","arguments","length","customFormatter","isAnnotationOfType","fieldValue","getExpressionFromAnnotation","Value","compileExpression","isPathAnnotationExpression","$target","oPropertyBindingExpression","pathInModel","getContextRelativeTargetObjectPath","oTargetBinding","propertyDataModelObjectPath","oTargetProperty","annotations","UI","InputMask","type","formatOptions","mask","Mask","toString","placeholderSymbol","PlaceholderSymbol","maskRule","_getMaskingRules","Rules","Measures","Unit","ISOCurrency","UIFormatters","getBindingWithUnitOrCurrency","measureDisplayMode","isComplexTypeExpression","showMeasure","Common","Timezone","getBindingWithTimezone","IsTimezone","getBindingForTimezone","DateTimeStyle","dateTimePattern","dateTimeStyle","getBindingForDateFormat","getValueBinding","ignoreUnit","ignoreFormatting","bindingParameters","targetTypeAny","keepUnit","oNavPath","targetEntityType","resolvePath","target","visitedObjects","forEach","oNavObj","isNavigationProperty","navigationProperties","push","isProperty","oBindingExpression","isPathInModelExpression","Communication","IsEmailAddress","ExternalID","constraints","parameters","targetType","$Type","getAssociatedTextBinding","textPropertyPath","PropertyHelper","getAssociatedTextPropertyPath","oTextPropertyPath","allowPatch","valueListOutParameters","ValueList","Parameters","map","parameter","LocalDataProperty","fullyQualifiedName","includes","$$noPatch","isUsedInNavigationWithQuickViewFacets","oDataModelPath","oProperty","aNavigationProperties","aSemanticObjects","SemanticKey","bIsUsedInNavigationWithQuickViewFacets","oNavProp","referentialConstraint","oRefConstraint","sourceProperty","name","QuickViewFacets","contextLocation","targetEntitySet","aIsTargetSemanticKey","some","oSemantic","isKey","isRetrieveTextFromValueListEnabled","oPropertyPath","Text","hasValueHelp","textAlignMode","getTextAlignment","dataFieldModelPath","computedEditMode","considerTextAnnotation","typeForAlignment","Target","displayMode","textAnnotation","textArrangementAnnotation","TextArrangement","valueOf","FieldHelper","getPropertyAlignment","getVisibleExpression","generateVisibleExpression","visibleExpressionsForConnectedFieldsFormElement","dataFieldForAnnotation","visibleExpression","dataFieldsBindingExpressions","connectedFields","Object","values","Data","filter","connectedField","hasOwnProperty","dataField","bindingExpressionObject","or","getQuickViewBinding","getQuickViewType","dataFieldDataModelObjectPath","Url","IsPhoneNumber","getSemanticObjects","aSemObjExprToResolve","sCustomDataKey","sCustomDataValue","aSemObjCustomData","item","key","value","oSemanticObjectsModel","JSONModel","$$valueAsPromise","createBindingContext","getMultipleLinesForDataField","oThis","isMultiLineText","wrap","_hasValueHelpToShow","oPropertyUnit","getAssociatedUnitProperty","oPropertyCurrency","getAssociatedCurrencyProperty","getMinMaxDateExpression","dateAnnotation","relativeLocation","fixedDate","Validation","$Date","dateProperty","formatResult","constant","valueFormatters","provideDateInstance","BindingToolkit","setEditStyleProperties","oProps","oDataField","onlyEditStyle","editStyle","Maximum","Minimum","propertyBindingExpression","valueBindingExpression","getBindingForDatePicker","editStylePlaceholder","Placeholder","dataPointAnnotation","isDataFieldForAnnotation","Visualization","QuickInfo","ratingIndicatorTooltip","ratingIndicatorTargetValue","TargetValue","hasStaticPercentUnit","textBindingExpression","dataModelPathExternalID","isJSONModelUsedForValue","test","description","getRelativePaths","maxDateExpression","minDateExpression","showTimezone","MultiLineText","staticDescription","maskingRules","symbol","regex","maskingRule","MaskSymbol","RegExp","hasSemanticObjectInNavigationOrProperty","property","SemanticObjectHelper","hasSemanticObject","lastNavProp","find","contextNavProp","getDataModelObjectPathForValue","initialDataModelObjectPath","valuePath","isAnnotationOfTerm","indexOf","replace","hasPropertyInsertRestrictions","nonInsertableProperties","getContextPropertyRestriction","capabilities","InsertRestrictions","NonInsertableProperties","nonInsertableProperty","getDraftIndicatorVisibleBinding","draftIndicatorKey","getAvatarShape","IsImageURL","IsNaturalPerson","IsImage","entityAnnotationTarget","avatarShapeExpression","ifElse","AvatarShape","Circle","Square"],"sourceRoot":".","sources":["FieldTemplating.ts"],"sourcesContent":["import type {\n\tNavigationProperty,\n\tPathAnnotationExpression,\n\tProperty,\n\tPropertyAnnotationValue,\n\tServiceObjectAndAnnotation\n} from \"@sap-ux/vocabularies-types\";\nimport type { EntitySetAnnotations_Capabilities } from \"@sap-ux/vocabularies-types/vocabularies/Capabilities_Edm\";\nimport type {\n\tValueListParameterInOut,\n\tValueListParameterOutTypes,\n\tValueListParameterTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { PropertyAnnotations } from \"@sap-ux/vocabularies-types/vocabularies/Edm_Types\";\nimport type {\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldTypes,\n\tDataFieldWithAction,\n\tDataFieldWithIntentBasedNavigation,\n\tDataFieldWithNavigationPath,\n\tDataFieldWithUrl,\n\tDataPointType,\n\tDataPointTypeTypes,\n\tInputMaskRuleTypeTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes, type DataFieldForAnnotation } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type {\n\tBindingToolkitExpression,\n\tCompiledBindingToolkitExpression,\n\tExpressionOrPrimitive,\n\tFormatOptions,\n\tPathInModelExpression,\n\tPrimitiveType\n} from \"sap/fe/base/BindingToolkit\";\nimport * as BindingToolkit from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileExpression,\n\tconstant,\n\tformatResult,\n\tformatWithTypeInformation,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tisComplexTypeExpression,\n\tisPathInModelExpression,\n\tor,\n\tpathInModel,\n\ttransformRecursively\n} from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { isDataFieldForAnnotation } from \"sap/fe/core/converters/annotations/DataField\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport {\n\tisAnnotationOfTerm,\n\tisAnnotationOfType,\n\tisNavigationProperty,\n\tisPathAnnotationExpression,\n\tisProperty\n} from \"sap/fe/core/helpers/TypeGuards\";\nimport * as CommonFormatters from \"sap/fe/core/templating/CommonFormatters\";\nimport { generateVisibleExpression } from \"sap/fe/core/templating/DataFieldFormatters\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tenhanceDataModelPath,\n\tgetContextPropertyRestriction,\n\tgetContextRelativeTargetObjectPath,\n\tgetRelativePaths\n} from \"sap/fe/core/templating/DataModelPathHelper\";\nimport * as PropertyHelper from \"sap/fe/core/templating/PropertyHelper\";\nimport { hasStaticPercentUnit } from \"sap/fe/core/templating/PropertyHelper\";\nimport * as SemanticObjectHelper from \"sap/fe/core/templating/SemanticObjectHelper\";\nimport type { DisplayMode, PropertyOrPath } from \"sap/fe/core/templating/UIFormatters\";\nimport * as UIFormatters from \"sap/fe/core/templating/UIFormatters\";\nimport type { InputMaskRule } from \"sap/fe/core/type/InputMask\";\nimport type { FieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport AvatarShape from \"sap/m/AvatarShape\";\nimport type Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type FieldFormatOptions from \"./FieldFormatOptions\";\nimport FieldHelper from \"./FieldHelper\";\n\n/**\n * Recursively add the text arrangement to a binding expression.\n * @param bindingExpressionToEnhance The binding expression to be enhanced\n * @param fullContextPath The current context path we're on (to properly resolve the text arrangement properties)\n * @returns An updated expression containing the text arrangement binding.\n */\nexport const addTextArrangementToBindingExpression = function (\n\tbindingExpressionToEnhance: BindingToolkitExpression<PrimitiveType>,\n\tfullContextPath: DataModelObjectPath<PageContextPathTarget>\n): BindingToolkitExpression<PrimitiveType> {\n\treturn transformRecursively(bindingExpressionToEnhance, \"PathInModel\", (expression: PathInModelExpression<PrimitiveType>) => {\n\t\tlet outExpression: BindingToolkitExpression<PrimitiveType> = expression;\n\t\tif (expression.modelName === undefined) {\n\t\t\t// In case of default model we then need to resolve the text arrangement property\n\t\t\tconst oPropertyDataModelPath = enhanceDataModelPath<Property>(fullContextPath, expression.path);\n\t\t\toutExpression = CommonFormatters.getBindingWithTextArrangement(oPropertyDataModelPath, expression);\n\t\t}\n\t\treturn outExpression;\n\t});\n};\n\nexport const formatValueRecursively = function (\n\tbindingExpressionToEnhance: BindingToolkitExpression<unknown>,\n\tfullContextPath: DataModelObjectPath<unknown>\n): BindingToolkitExpression<unknown> {\n\treturn transformRecursively(bindingExpressionToEnhance, \"PathInModel\", (expression: PathInModelExpression<unknown>) => {\n\t\tlet outExpression: BindingToolkitExpression<unknown> = expression;\n\t\tif (expression.modelName === undefined) {\n\t\t\t// In case of default model we then need to resolve the text arrangement property\n\t\t\tconst oPropertyDataModelPath = enhanceDataModelPath<Property>(fullContextPath, expression.path);\n\t\t\tif (oPropertyDataModelPath.targetObject) {\n\t\t\t\toutExpression = formatWithTypeInformation(oPropertyDataModelPath.targetObject, expression);\n\t\t\t}\n\t\t}\n\t\treturn outExpression;\n\t});\n};\n\nexport const getTextBindingExpression = function (\n\toPropertyDataModelObjectPath: DataModelObjectPath<Property>,\n\tfieldFormatOptions: Partial<FieldFormatOptions>\n): BindingToolkitExpression<string> {\n\treturn getTextBinding(oPropertyDataModelObjectPath, fieldFormatOptions, true) as BindingToolkitExpression<string>;\n};\n\nexport const getTextBinding = function (\n\tinputDataModelPath: DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes | Property>,\n\tfieldFormatOptions: Partial<FieldFormatOptions>,\n\tasObject = false,\n\tcustomFormatter?: string\n): BindingToolkitExpression<string> | CompiledBindingToolkitExpression {\n\tif (\n\t\tisAnnotationOfType<\n\t\t\t| DataField\n\t\t\t| DataPointType\n\t\t\t| DataFieldWithNavigationPath\n\t\t\t| DataFieldWithUrl\n\t\t\t| DataFieldWithIntentBasedNavigation\n\t\t\t| DataFieldWithAction\n\t\t>(inputDataModelPath.targetObject, [\n\t\t\tUIAnnotationTypes.DataField,\n\t\t\tUIAnnotationTypes.DataPointType,\n\t\t\tUIAnnotationTypes.DataFieldWithNavigationPath,\n\t\t\tUIAnnotationTypes.DataFieldWithUrl,\n\t\t\tUIAnnotationTypes.DataFieldWithIntentBasedNavigation,\n\t\t\tUIAnnotationTypes.DataFieldWithAction\n\t\t])\n\t) {\n\t\t// If there is no resolved property, the value is returned as a constant\n\t\tconst fieldValue = getExpressionFromAnnotation(inputDataModelPath.targetObject.Value) ?? \"\";\n\t\treturn compileExpression(fieldValue);\n\t}\n\tif (isPathAnnotationExpression(inputDataModelPath.targetObject) && inputDataModelPath.targetObject.$target) {\n\t\tinputDataModelPath = enhanceDataModelPath<Property>(inputDataModelPath, inputDataModelPath.targetObject.path);\n\t}\n\t// When targetObject is a constant value\n\tif (typeof inputDataModelPath.targetObject === \"string\") {\n\t\treturn inputDataModelPath.targetObject;\n\t}\n\tconst oPropertyBindingExpression = pathInModel(getContextRelativeTargetObjectPath(inputDataModelPath));\n\tlet oTargetBinding;\n\tconst propertyDataModelObjectPath = inputDataModelPath as DataModelObjectPath<Property>; // At this point we should only have a property\n\tconst oTargetProperty = propertyDataModelObjectPath.targetObject;\n\t// formatting\n\n\tif (oTargetProperty?.annotations?.UI?.InputMask) {\n\t\toTargetBinding = formatWithTypeInformation(oTargetProperty, oPropertyBindingExpression);\n\t\toTargetBinding.type = \"sap.fe.core.type.InputMask\";\n\t\toTargetBinding.formatOptions = {\n\t\t\tmask: oTargetProperty.annotations?.UI?.InputMask?.Mask.toString(),\n\t\t\tplaceholderSymbol: oTargetProperty.annotations?.UI?.InputMask?.PlaceholderSymbol.toString(),\n\t\t\tmaskRule: _getMaskingRules(oTargetProperty.annotations?.UI?.InputMask?.Rules)\n\t\t} as unknown as FormatOptions;\n\t} else if (oTargetProperty?.annotations?.Measures?.Unit || oTargetProperty?.annotations?.Measures?.ISOCurrency) {\n\t\toTargetBinding = UIFormatters.getBindingWithUnitOrCurrency(propertyDataModelObjectPath, oPropertyBindingExpression);\n\t\tif (fieldFormatOptions?.measureDisplayMode === \"Hidden\" && isComplexTypeExpression(oTargetBinding)) {\n\t\t\t// TODO: Refactor once types are less generic here\n\t\t\toTargetBinding.formatOptions = {\n\t\t\t\t...oTargetBinding.formatOptions,\n\t\t\t\tshowMeasure: false\n\t\t\t};\n\t\t}\n\t} else if (oTargetProperty?.annotations?.Common?.Timezone && oTargetProperty.type == \"Edm.DateTimeOffset\") {\n\t\toTargetBinding = UIFormatters.getBindingWithTimezone(\n\t\t\tpropertyDataModelObjectPath,\n\t\t\toPropertyBindingExpression,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tfieldFormatOptions as FieldFormatOptions\n\t\t);\n\t} else if (oTargetProperty?.annotations?.Common?.IsTimezone) {\n\t\toTargetBinding = UIFormatters.getBindingForTimezone(propertyDataModelObjectPath, oPropertyBindingExpression);\n\t} else if (\n\t\toTargetProperty?.annotations?.UI?.DateTimeStyle ||\n\t\tfieldFormatOptions?.dateTimePattern ||\n\t\tfieldFormatOptions?.dateTimeStyle\n\t) {\n\t\toTargetBinding = UIFormatters.getBindingForDateFormat(propertyDataModelObjectPath, oPropertyBindingExpression, fieldFormatOptions);\n\t} else {\n\t\toTargetBinding = CommonFormatters.getBindingWithTextArrangement(\n\t\t\tpropertyDataModelObjectPath,\n\t\t\toPropertyBindingExpression,\n\t\t\tfieldFormatOptions,\n\t\t\tcustomFormatter\n\t\t);\n\t}\n\n\tif (asObject) {\n\t\treturn oTargetBinding;\n\t}\n\t// We don't include $$nopatch and parseKeepEmptyString as they make no sense in the text binding case\n\treturn compileExpression(oTargetBinding);\n};\n\nexport const getValueBinding = function (\n\toPropertyDataModelObjectPath: DataModelObjectPath<Property | DataFieldTypes>,\n\tfieldFormatOptions: Partial<FieldFormatOptions>,\n\tignoreUnit = false,\n\tignoreFormatting = false,\n\tbindingParameters?: object,\n\ttargetTypeAny = false,\n\tkeepUnit = false\n): CompiledBindingToolkitExpression {\n\tif (isPathAnnotationExpression(oPropertyDataModelObjectPath.targetObject) && oPropertyDataModelObjectPath.targetObject.$target) {\n\t\tconst oNavPath = oPropertyDataModelObjectPath.targetEntityType.resolvePath(oPropertyDataModelObjectPath.targetObject.path, true);\n\t\toPropertyDataModelObjectPath.targetObject = oNavPath.target;\n\t\toNavPath.visitedObjects.forEach((oNavObj: ServiceObjectAndAnnotation) => {\n\t\t\tif (isNavigationProperty(oNavObj)) {\n\t\t\t\toPropertyDataModelObjectPath.navigationProperties.push(oNavObj);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst targetObject = oPropertyDataModelObjectPath.targetObject;\n\tif (isProperty(targetObject)) {\n\t\tlet oBindingExpression: BindingToolkitExpression<unknown> = pathInModel(\n\t\t\tgetContextRelativeTargetObjectPath(oPropertyDataModelObjectPath)\n\t\t);\n\t\tif (isPathInModelExpression(oBindingExpression)) {\n\t\t\tif (targetObject.annotations?.Communication?.IsEmailAddress) {\n\t\t\t\toBindingExpression = formatWithTypeInformation(targetObject, oBindingExpression);\n\t\t\t\toBindingExpression.type = \"sap.fe.core.type.Email\";\n\t\t\t} else if (targetObject.annotations?.UI?.InputMask) {\n\t\t\t\toBindingExpression = formatWithTypeInformation(targetObject, oBindingExpression);\n\t\t\t\toBindingExpression.type = \"sap.fe.core.type.InputMask\";\n\t\t\t\toBindingExpression.formatOptions = {\n\t\t\t\t\t...oBindingExpression.formatOptions,\n\t\t\t\t\tmask: targetObject.annotations.UI.InputMask.Mask,\n\t\t\t\t\tplaceholderSymbol: targetObject.annotations.UI.InputMask.PlaceholderSymbol,\n\t\t\t\t\tmaskRule: _getMaskingRules(targetObject.annotations.UI.InputMask.Rules)\n\t\t\t\t} as FormatOptions;\n\t\t\t} else if (!ignoreUnit && (targetObject.annotations?.Measures?.ISOCurrency || targetObject.annotations?.Measures?.Unit)) {\n\t\t\t\toBindingExpression = UIFormatters.getBindingWithUnitOrCurrency(\n\t\t\t\t\toPropertyDataModelObjectPath as DataModelObjectPath<Property>,\n\t\t\t\t\toBindingExpression,\n\t\t\t\t\ttrue,\n\t\t\t\t\tkeepUnit ? undefined : { showMeasure: false }\n\t\t\t\t);\n\t\t\t} else if (targetObject?.annotations?.Common?.IsTimezone) {\n\t\t\t\toBindingExpression = UIFormatters.getBindingForTimezone(\n\t\t\t\t\toPropertyDataModelObjectPath as DataModelObjectPath<Property>,\n\t\t\t\t\toBindingExpression\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\ttargetObject?.annotations?.UI?.DateTimeStyle ||\n\t\t\t\tfieldFormatOptions?.dateTimePattern ||\n\t\t\t\tfieldFormatOptions?.dateTimeStyle\n\t\t\t) {\n\t\t\t\toBindingExpression = UIFormatters.getBindingForDateFormat(\n\t\t\t\t\toPropertyDataModelObjectPath as DataModelObjectPath<Property>,\n\t\t\t\t\toBindingExpression,\n\t\t\t\t\tfieldFormatOptions\n\t\t\t\t);\n\t\t\t} else if (targetObject?.annotations?.Common?.Timezone && targetObject.type === \"Edm.DateTimeOffset\") {\n\t\t\t\toBindingExpression = UIFormatters.getBindingWithTimezone(\n\t\t\t\t\toPropertyDataModelObjectPath as DataModelObjectPath<Property>,\n\t\t\t\t\toBindingExpression,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toBindingExpression = formatWithTypeInformation(targetObject, oBindingExpression);\n\t\t\t\tif (targetObject.annotations.Common?.ExternalID) {\n\t\t\t\t\t(oBindingExpression as { path: string }).path += \"@$ui5.fe.@Common/ExternalID\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isPathInModelExpression(oBindingExpression)) {\n\t\t\t\tif (ignoreFormatting) {\n\t\t\t\t\tdelete oBindingExpression.formatOptions;\n\t\t\t\t\tdelete oBindingExpression.constraints;\n\t\t\t\t\tdelete oBindingExpression.type;\n\t\t\t\t}\n\t\t\t\tif (bindingParameters) {\n\t\t\t\t\toBindingExpression.parameters = bindingParameters;\n\t\t\t\t}\n\t\t\t\tif (targetTypeAny) {\n\t\t\t\t\toBindingExpression.targetType = \"any\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn compileExpression(oBindingExpression);\n\t\t} else {\n\t\t\t// if somehow we could not compile the binding -> return empty string\n\t\t\treturn \"\";\n\t\t}\n\t} else if (\n\t\ttargetObject?.$Type === UIAnnotationTypes.DataFieldWithUrl ||\n\t\ttargetObject?.$Type === UIAnnotationTypes.DataFieldWithNavigationPath\n\t) {\n\t\treturn compileExpression(getExpressionFromAnnotation((targetObject as DataFieldWithUrl).Value));\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nexport const getAssociatedTextBinding = function (\n\toPropertyDataModelObjectPath: DataModelObjectPath<Property>,\n\tfieldFormatOptions: Partial<FieldFormatOptions>\n): CompiledBindingToolkitExpression {\n\tconst textPropertyPath = PropertyHelper.getAssociatedTextPropertyPath(oPropertyDataModelObjectPath.targetObject);\n\tif (textPropertyPath) {\n\t\tconst oTextPropertyPath = enhanceDataModelPath<Property>(oPropertyDataModelObjectPath, textPropertyPath);\n\t\t//BCP 2380120806: getValueBinding needs to be able to set formatOptions.parseKeepsEmptyString.\n\t\t//Otherwise emptying an input field that has a text annotation to a not nullable string would result in\n\t\t//an error message. Therefore import param 'ignoreFormatting' is now set to false.\n\t\tlet allowPatch = false;\n\t\tconst valueListOutParameters: string[] =\n\t\t\toPropertyDataModelObjectPath.targetObject?.annotations?.Common?.ValueList?.Parameters.map(\n\t\t\t\t(parameter: ValueListParameterTypes) => {\n\t\t\t\t\tif (!parameter) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(parameter as ValueListParameterInOut | ValueListParameterOutTypes)?.LocalDataProperty?.$target\n\t\t\t\t\t\t\t?.fullyQualifiedName ?? \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t) || [];\n\t\tif (\n\t\t\toTextPropertyPath?.targetObject?.fullyQualifiedName &&\n\t\t\tvalueListOutParameters.includes(oTextPropertyPath.targetObject.fullyQualifiedName)\n\t\t) {\n\t\t\tallowPatch = true;\n\t\t}\n\t\tconst bindingParameters = allowPatch ? undefined : { $$noPatch: true };\n\t\treturn getValueBinding(oTextPropertyPath, fieldFormatOptions, true, false, bindingParameters);\n\t}\n\treturn undefined;\n};\n\nexport const isUsedInNavigationWithQuickViewFacets = function (oDataModelPath: DataModelObjectPath<unknown>, oProperty: Property): boolean {\n\tconst aNavigationProperties = oDataModelPath?.targetEntityType?.navigationProperties || [];\n\tconst aSemanticObjects = oDataModelPath?.targetEntityType?.annotations?.Common?.SemanticKey || [];\n\tlet bIsUsedInNavigationWithQuickViewFacets = false;\n\taNavigationProperties.forEach((oNavProp: NavigationProperty) => {\n\t\tif (oNavProp.referentialConstraint && oNavProp.referentialConstraint.length) {\n\t\t\toNavProp.referentialConstraint.forEach((oRefConstraint) => {\n\t\t\t\tif (oRefConstraint?.sourceProperty === oProperty.name) {\n\t\t\t\t\tif (oNavProp?.targetType?.annotations?.UI?.QuickViewFacets) {\n\t\t\t\t\t\tbIsUsedInNavigationWithQuickViewFacets = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\tif (oDataModelPath.contextLocation?.targetEntitySet !== oDataModelPath.targetEntitySet) {\n\t\tconst aIsTargetSemanticKey = aSemanticObjects.some(function (oSemantic) {\n\t\t\treturn oSemantic?.$target?.name === oProperty.name;\n\t\t});\n\t\tif ((aIsTargetSemanticKey || oProperty.isKey) && oDataModelPath?.targetEntityType?.annotations?.UI?.QuickViewFacets) {\n\t\t\tbIsUsedInNavigationWithQuickViewFacets = true;\n\t\t}\n\t}\n\treturn bIsUsedInNavigationWithQuickViewFacets;\n};\n\nexport const isRetrieveTextFromValueListEnabled = function (\n\toPropertyPath: PropertyOrPath<Property>,\n\tfieldFormatOptions: { displayMode?: DisplayMode; textAlignMode?: string }\n): boolean {\n\tconst oProperty: Property = (isPathAnnotationExpression(oPropertyPath) && oPropertyPath.$target) || (oPropertyPath as Property);\n\tif (\n\t\t!oProperty.annotations?.Common?.Text &&\n\t\t!oProperty.annotations?.Measures &&\n\t\tPropertyHelper.hasValueHelp(oProperty) &&\n\t\tfieldFormatOptions.textAlignMode === \"Form\"\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n/**\n * Calculates text alignment based on the dataModelObjectPath.\n * @param dataFieldModelPath The property's type\n * @param formatOptions The field format options\n * @param formatOptions.displayMode Display format\n * @param formatOptions.textAlignMode Text alignment of the field\n * @param computedEditMode The editMode used in this case\n * @param considerTextAnnotation Whether to consider the text annotation when computing the alignment\n * @returns The property alignment\n */\nexport const getTextAlignment = function (\n\tdataFieldModelPath: DataModelObjectPath<DataFieldAbstractTypes>,\n\tformatOptions: { displayMode?: string; textAlignMode?: string },\n\tcomputedEditMode: BindingToolkitExpression<string>,\n\tconsiderTextAnnotation = false\n): CompiledBindingToolkitExpression {\n\t// check for the target value type directly, or in case it is pointing to a DataPoint we look at the dataPoint's value\n\tlet typeForAlignment =\n\t\t(dataFieldModelPath.targetObject as DataFieldTypes)?.Value?.$target.type ||\n\t\t((dataFieldModelPath.targetObject as DataFieldForAnnotation)?.Target?.$target as DataPointType)?.Value.$target.type;\n\n\tif (\n\t\tPropertyHelper.isKey(\n\t\t\t(dataFieldModelPath.targetObject as DataFieldTypes)?.Value?.$target ||\n\t\t\t\t((dataFieldModelPath.targetObject as DataFieldForAnnotation)?.Target?.$target as DataPointType)?.Value?.$target\n\t\t)\n\t) {\n\t\treturn \"Begin\";\n\t}\n\tif (\n\t\tconsiderTextAnnotation &&\n\t\tformatOptions.displayMode &&\n\t\t[\"Description\", \"DescriptionValue\", \"ValueDescription\"].includes(formatOptions.displayMode)\n\t) {\n\t\tconst textAnnotation = (dataFieldModelPath.targetObject as DataFieldTypes)?.Value?.$target.annotations?.Common?.Text;\n\t\tconst textArrangementAnnotation = textAnnotation?.annotations?.UI?.TextArrangement.valueOf();\n\t\tif (textAnnotation && textArrangementAnnotation !== \"UI.TextArrangementType/TextSeparate\") {\n\t\t\ttypeForAlignment = textAnnotation.$target.type;\n\t\t}\n\t}\n\n\treturn FieldHelper.getPropertyAlignment(typeForAlignment, formatOptions, computedEditMode);\n};\n\n/**\n * Returns the binding expression to evaluate the visibility of a DataField or DataPoint annotation.\n *\n * SAP Fiori elements will evaluate either the UI.Hidden annotation defined on the annotation itself or on the target property.\n * @param dataFieldModelPath The metapath referring to the annotation we are evaluating.\n * @param [formatOptions] FormatOptions optional.\n * @param formatOptions.isAnalytics This flag is set when using an analytical table.\n * @returns An expression that you can bind to the UI.\n */\nexport const getVisibleExpression = function (\n\tdataFieldModelPath: DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes | Property>,\n\tformatOptions?: { isAnalytics?: boolean }\n): CompiledBindingToolkitExpression {\n\treturn compileExpression(generateVisibleExpression(dataFieldModelPath, formatOptions));\n};\n\n/**\n * Returns the Boolean or other expression for the visibility of a FormElement.\n * The FormElement is visible if at least one content is visible, otherwise invisible.\n * @param dataFieldModelPath The metapath referring to the annotation we are evaluating.\n * @returns A Boolean or other expression that can be bound to the UI.\n */\nexport const visibleExpressionsForConnectedFieldsFormElement = function (\n\tdataFieldModelPath: DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes | Property>\n): CompiledBindingToolkitExpression {\n\tconst dataFieldForAnnotation = dataFieldModelPath.targetObject as DataFieldAbstractTypes;\n\tconst visibleExpression = compileExpression(generateVisibleExpression(dataFieldModelPath));\n\n\tconst dataFieldsBindingExpressions: (boolean | BindingToolkitExpression<boolean>)[] = [];\n\tif (typeof visibleExpression === \"string\" && visibleExpression.includes(\"{=\")) {\n\t\treturn visibleExpression;\n\t}\n\tif (\n\t\tdataFieldForAnnotation.$Type === UIAnnotationTypes.DataFieldForAnnotation &&\n\t\tdataFieldForAnnotation.Target.$target?.$Type === UIAnnotationTypes.ConnectedFieldsType\n\t) {\n\t\tconst connectedFields = Object.values(dataFieldForAnnotation.Target.$target.Data).filter(\n\t\t\t(connectedField) => connectedField?.hasOwnProperty(\"Value\")\n\t\t) as DataFieldAbstractTypes[];\n\t\tconnectedFields.forEach((dataField) => {\n\t\t\tdataFieldModelPath.targetObject = dataField;\n\t\t\tconst bindingExpressionObject = generateVisibleExpression(dataFieldModelPath);\n\t\t\tif (bindingExpressionObject !== undefined) {\n\t\t\t\tdataFieldsBindingExpressions.push(bindingExpressionObject);\n\t\t\t}\n\t\t});\n\t\t/* Combine the expressions with or */\n\t\treturn dataFieldsBindingExpressions.length ? compileExpression(or(...dataFieldsBindingExpressions)) : visibleExpression;\n\t}\n\treturn visibleExpression;\n};\n\n/**\n * Returns the binding for a property in a QuickViewFacets.\n * @param propertyDataModelObjectPath The DataModelObjectPath of the property\n * @returns A string of the value, or a BindingExpression\n */\nexport const getQuickViewBinding = function (\n\tpropertyDataModelObjectPath: DataModelObjectPath<Property>\n): BindingToolkitExpression<string> | CompiledBindingToolkitExpression | string {\n\tif (!propertyDataModelObjectPath.targetObject) {\n\t\treturn \"\";\n\t}\n\tif (typeof propertyDataModelObjectPath.targetObject === \"string\") {\n\t\treturn propertyDataModelObjectPath.targetObject;\n\t}\n\n\treturn getTextBinding(propertyDataModelObjectPath, {} as FieldFormatOptions);\n};\n\n/**\n * Return the type of the QuickViewGroupElement.\n * @param dataFieldDataModelObjectPath The DataModelObjectPath of the DataField\n * @returns The type of the QuickViewGroupElement\n */\nexport const getQuickViewType = function (dataFieldDataModelObjectPath: DataModelObjectPath<DataFieldTypes | Property>): string {\n\tconst targetObject = dataFieldDataModelObjectPath.targetObject;\n\tif (isAnnotationOfType<DataFieldWithUrl>(targetObject, UIAnnotationTypes.DataFieldWithUrl) && targetObject?.Url) {\n\t\treturn \"link\";\n\t}\n\tif (\n\t\t(!isProperty(targetObject) && targetObject?.Value.$target?.annotations?.Communication?.IsEmailAddress) ||\n\t\t(isProperty(targetObject) && targetObject?.annotations?.Communication?.IsEmailAddress)\n\t) {\n\t\treturn \"email\";\n\t}\n\tif (\n\t\t(!isProperty(targetObject) && targetObject?.Value.$target?.annotations?.Communication?.IsPhoneNumber) ||\n\t\t(isProperty(targetObject) && targetObject?.annotations?.Communication?.IsPhoneNumber)\n\t) {\n\t\treturn \"phone\";\n\t}\n\treturn \"text\";\n};\n\nexport type SemanticObjectCustomData = {\n\tkey: string;\n\tvalue: string;\n};\n\nexport const getSemanticObjects = function (\n\taSemObjExprToResolve: { key: string; value: PropertyAnnotationValue<PrimitiveType> }[]\n): Context {\n\tif (aSemObjExprToResolve.length > 0) {\n\t\tlet sCustomDataKey = \"\";\n\t\tlet sCustomDataValue: CompiledBindingToolkitExpression = \"\";\n\t\tconst aSemObjCustomData: { key: string; value: CompiledBindingToolkitExpression }[] = [];\n\t\tfor (const item of aSemObjExprToResolve) {\n\t\t\tsCustomDataKey = item.key;\n\t\t\tsCustomDataValue = compileExpression(getExpressionFromAnnotation(item.value));\n\t\t\taSemObjCustomData.push({\n\t\t\t\tkey: sCustomDataKey,\n\t\t\t\tvalue: sCustomDataValue\n\t\t\t});\n\t\t}\n\t\tconst oSemanticObjectsModel = new JSONModel(aSemObjCustomData);\n\t\t(oSemanticObjectsModel as { $$valueAsPromise?: boolean }).$$valueAsPromise = true;\n\t\treturn oSemanticObjectsModel.createBindingContext(\"/\");\n\t} else {\n\t\treturn new JSONModel([]).createBindingContext(\"/\");\n\t}\n};\n\n/**\n * Method to get MultipleLines for a DataField.\n * @param {any} oThis The current object\n * @param {boolean} isMultiLineText The property isMultiLineText\n * @returns {CompiledBindingToolkitExpression<string>} The binding expression to determine if a data field should be a MultiLineText or not\n * @public\n */\n\nexport const getMultipleLinesForDataField = function (oThis: Partial<{ wrap?: boolean }>, isMultiLineText: boolean): boolean {\n\tif (oThis.wrap === false) {\n\t\treturn false;\n\t}\n\treturn isMultiLineText;\n};\n\nconst _hasValueHelpToShow = function (oProperty: Property, measureDisplayMode: string | undefined): boolean | undefined {\n\t// we show a value help if teh property has one or if its visible unit has one\n\tconst oPropertyUnit = PropertyHelper.getAssociatedUnitProperty(oProperty);\n\tconst oPropertyCurrency = PropertyHelper.getAssociatedCurrencyProperty(oProperty);\n\treturn (\n\t\t(PropertyHelper.hasValueHelp(oProperty) && oProperty.type !== \"Edm.Boolean\") ||\n\t\t(measureDisplayMode !== \"Hidden\" &&\n\t\t\t((oPropertyUnit && PropertyHelper.hasValueHelp(oPropertyUnit)) ||\n\t\t\t\t(oPropertyCurrency && PropertyHelper.hasValueHelp(oPropertyCurrency))))\n\t);\n};\n\n/**\n * Sets the minimum and maximum date for the date field.\n * @param dateAnnotation Property Annotations for the date field.\n * @param type Either 'Maximum' or 'Minimum'.\n * @param relativeLocation\n * @returns Mininum or Maximum date expression.\n */\nexport const getMinMaxDateExpression = function (\n\tdateAnnotation: PropertyAnnotations | undefined,\n\ttype: \"Maximum\" | \"Minimum\",\n\trelativeLocation: string[]\n): BindingToolkitExpression<unknown> | undefined {\n\tconst fixedDate = dateAnnotation?.Validation?.[type]?.$Date;\n\tconst dateProperty = dateAnnotation?.Validation?.[type];\n\tif (fixedDate) {\n\t\treturn formatResult([constant(fixedDate)], valueFormatters.provideDateInstance);\n\t} else if (dateProperty) {\n\t\treturn BindingToolkit.getExpressionFromAnnotation(dateAnnotation?.Validation?.[type], relativeLocation);\n\t}\n\treturn undefined;\n};\n\n/**\n * Sets Edit Style properties for Field in case of Macro Field and MassEditDialog fields.\n * @param oProps Field Properties for the Macro Field.\n * @param oDataField DataField Object.\n * @param oDataModelPath DataModel Object Path to the property.\n * @param onlyEditStyle To add only editStyle.\n */\nexport const setEditStyleProperties = function (\n\toProps: FieldBlockProperties,\n\toDataField: DataFieldAbstractTypes | DataPointTypeTypes,\n\toDataModelPath: DataModelObjectPath<Property | DataFieldTypes>,\n\tonlyEditStyle?: boolean\n): void {\n\tconst oProperty = oDataModelPath.targetObject;\n\tif (\n\t\t!isProperty(oProperty) ||\n\t\t[\n\t\t\tUIAnnotationTypes.DataFieldForAction,\n\t\t\tUIAnnotationTypes.DataFieldWithNavigationPath,\n\t\t\tUIAnnotationTypes.DataFieldForActionGroup,\n\t\t\tUIAnnotationTypes.DataFieldForIntentBasedNavigation\n\t\t].includes(oDataField.$Type)\n\t) {\n\t\toProps.editStyle = null;\n\t\treturn;\n\t}\n\tif (!onlyEditStyle) {\n\t\tif (oProperty?.annotations?.Validation?.Maximum?.$Date || oProperty?.annotations?.Validation?.Minimum?.$Date) {\n\t\t\tconst propertyBindingExpression = pathInModel(getContextRelativeTargetObjectPath(oDataModelPath));\n\t\t\toProps.valueBindingExpression = UIFormatters.getBindingForDatePicker(\n\t\t\t\toDataModelPath,\n\t\t\t\tpropertyBindingExpression\n\t\t\t) as CompiledBindingToolkitExpression;\n\t\t} else {\n\t\t\toProps.valueBindingExpression = oProps.value ? oProps.value : getValueBinding(oDataModelPath, oProps.formatOptions);\n\t\t}\n\n\t\tconst editStylePlaceholder =\n\t\t\t(oDataField as unknown as Property).annotations?.UI?.Placeholder ||\n\t\t\t(oDataField as DataField)?.Value?.$target?.annotations?.UI?.Placeholder;\n\n\t\tif (editStylePlaceholder) {\n\t\t\toProps.editStylePlaceholder = compileExpression(getExpressionFromAnnotation(editStylePlaceholder));\n\t\t}\n\t}\n\n\t// Setup RatingIndicator\n\tconst dataPointAnnotation = (isDataFieldForAnnotation(oDataField) ? oDataField.Target?.$target : oDataField) as DataPointType;\n\tif (dataPointAnnotation?.Visualization === \"UI.VisualizationType/Rating\") {\n\t\toProps.editStyle = \"RatingIndicator\";\n\n\t\tif (dataPointAnnotation.annotations?.Common?.QuickInfo) {\n\t\t\toProps.ratingIndicatorTooltip = compileExpression(\n\t\t\t\tgetExpressionFromAnnotation(dataPointAnnotation.annotations?.Common?.QuickInfo)\n\t\t\t);\n\t\t}\n\n\t\toProps.ratingIndicatorTargetValue = compileExpression(getExpressionFromAnnotation(dataPointAnnotation.TargetValue));\n\t\treturn;\n\t}\n\n\tif (\n\t\t_hasValueHelpToShow(oProperty, oProps.formatOptions?.measureDisplayMode) ||\n\t\t(oProps.formatOptions?.measureDisplayMode !== \"Hidden\" &&\n\t\t\t(oProperty.annotations?.Measures?.ISOCurrency || (oProperty.annotations?.Measures?.Unit && !hasStaticPercentUnit(oProperty))))\n\t) {\n\t\tif (!onlyEditStyle) {\n\t\t\t/* The textBindingExpression is used for mdcField-attribute 'additionalValue' and means the description of the value */\n\t\t\tconst textBindingExpression = oProperty.annotations?.Common?.ExternalID\n\t\t\t\t? getAssociatedTextBinding(oProps.dataModelPathExternalID as DataModelObjectPath<Property>, oProps.formatOptions)\n\t\t\t\t: getAssociatedTextBinding(oDataModelPath as DataModelObjectPath<Property>, oProps.formatOptions);\n\n\t\t\tconst isJSONModelUsedForValue = !!oProps.value && /{\\w+>.+}/.test(oProps.value);\n\n\t\t\tif (isJSONModelUsedForValue) {\n\t\t\t\tif (oProps.description) {\n\t\t\t\t\toProps.textBindingExpression = oProps.description;\n\t\t\t\t} else {\n\t\t\t\t\toProps.textBindingExpression = undefined;\n\t\t\t\t\toProps.formatOptions.displayMode = \"Value\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toProps.textBindingExpression = textBindingExpression;\n\t\t\t}\n\n\t\t\tif (oProps.formatOptions?.measureDisplayMode !== \"Hidden\") {\n\t\t\t\t// for the MDC Field we need to keep the unit inside the valueBindingExpression\n\t\t\t\toProps.valueBindingExpression = oProps.value\n\t\t\t\t\t? oProps.value\n\t\t\t\t\t: getValueBinding(oDataModelPath, oProps.formatOptions, false, false, undefined, false, true);\n\t\t\t}\n\t\t}\n\t\toProps.editStyle = \"InputWithValueHelp\";\n\t\treturn;\n\t}\n\n\tswitch (oProperty.type) {\n\t\tcase \"Edm.Date\":\n\t\t\toProps.editStyle = \"DatePicker\";\n\t\t\tconst relativeLocation = getRelativePaths(oDataModelPath);\n\t\t\tif (oProperty?.annotations?.Validation?.Maximum) {\n\t\t\t\toProps.maxDateExpression = getMinMaxDateExpression(oProperty?.annotations, \"Maximum\", relativeLocation);\n\t\t\t}\n\t\t\tif (oProperty?.annotations?.Validation?.Minimum) {\n\t\t\t\toProps.minDateExpression = getMinMaxDateExpression(oProperty?.annotations, \"Minimum\", relativeLocation);\n\t\t\t}\n\t\t\treturn;\n\t\tcase \"Edm.Time\":\n\t\tcase \"Edm.TimeOfDay\":\n\t\t\toProps.editStyle = \"TimePicker\";\n\t\t\treturn;\n\t\tcase \"Edm.DateTime\":\n\t\tcase \"Edm.DateTimeOffset\":\n\t\t\toProps.editStyle = \"DateTimePicker\";\n\t\t\t// No timezone defined. Also for compatibility reasons.\n\t\t\tif (!oProperty.annotations?.Common?.Timezone) {\n\t\t\t\toProps.showTimezone = undefined;\n\t\t\t} else {\n\t\t\t\toProps.showTimezone = true;\n\t\t\t}\n\t\t\treturn;\n\t\tcase \"Edm.Boolean\":\n\t\t\toProps.editStyle = \"CheckBox\";\n\t\t\treturn;\n\t\tcase \"Edm.Stream\":\n\t\t\toProps.editStyle = \"File\";\n\t\t\treturn;\n\t\tcase \"Edm.String\":\n\t\t\tif (oProperty.annotations?.UI?.MultiLineText?.valueOf()) {\n\t\t\t\toProps.editStyle = \"TextArea\";\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (oProperty.annotations?.UI?.InputMask?.valueOf()) {\n\t\t\t\toProps.editStyle = \"InputMask\";\n\t\t\t\toProps.mask = {\n\t\t\t\t\tmask: oProperty.annotations?.UI?.InputMask?.Mask.toString(),\n\t\t\t\t\tplaceholderSymbol: oProperty.annotations?.UI?.InputMask?.PlaceholderSymbol.toString(),\n\t\t\t\t\tmaskRule: _getMaskingRules(oProperty.annotations?.UI?.InputMask?.Rules)\n\t\t\t\t};\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (hasStaticPercentUnit(oProperty)) {\n\t\t\t\toProps.staticDescription = \"%\";\n\t\t\t}\n\t\t\toProps.editStyle = \"Input\";\n\t}\n\n\toProps.editStyle = \"Input\";\n};\n\nconst _getMaskingRules = (maskingRules: InputMaskRuleTypeTypes[] | undefined): InputMaskRule[] => {\n\tif (!maskingRules || maskingRules.length === 0) {\n\t\treturn [{ symbol: \"*\", regex: \"[a-zA-Z0-9]\" }];\n\t}\n\n\treturn maskingRules.map((maskingRule) => ({\n\t\tsymbol: maskingRule.MaskSymbol.toString(),\n\t\tregex: maskingRule.RegExp.toString()\n\t}));\n};\n\nexport const hasSemanticObjectInNavigationOrProperty = (propertyDataModelObjectPath: DataModelObjectPath<Property>): boolean => {\n\tconst property = propertyDataModelObjectPath.targetObject as Property;\n\tif (SemanticObjectHelper.hasSemanticObject(property)) {\n\t\treturn true;\n\t}\n\tconst lastNavProp = propertyDataModelObjectPath?.navigationProperties?.length\n\t\t? propertyDataModelObjectPath?.navigationProperties[propertyDataModelObjectPath?.navigationProperties?.length - 1]\n\t\t: null;\n\tif (\n\t\t!lastNavProp ||\n\t\tpropertyDataModelObjectPath.contextLocation?.navigationProperties?.find(\n\t\t\t(contextNavProp) => contextNavProp.name === lastNavProp.name\n\t\t)\n\t) {\n\t\treturn false;\n\t}\n\treturn SemanticObjectHelper.hasSemanticObject(lastNavProp);\n};\n\n/**\n * Get the dataModelObjectPath with the value property as targetObject if it exists\n * for a dataModelObjectPath targeting a DataField or a DataPoint annotation.\n * @param initialDataModelObjectPath\n * @returns The dataModelObjectPath targetiing the value property or undefined\n */\nexport const getDataModelObjectPathForValue = (\n\tinitialDataModelObjectPath: DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes>\n): DataModelObjectPath<Property> | undefined => {\n\tif (!initialDataModelObjectPath.targetObject) {\n\t\treturn undefined;\n\t}\n\tlet valuePath = \"\";\n\t// data point annotations need not have $Type defined, so add it if missing\n\tif (isAnnotationOfTerm(initialDataModelObjectPath, UIAnnotationTerms.DataPoint)) {\n\t\tinitialDataModelObjectPath.targetObject.$Type = initialDataModelObjectPath.targetObject.$Type || UIAnnotationTypes.DataPointType;\n\t}\n\tswitch (initialDataModelObjectPath.targetObject.$Type) {\n\t\tcase UIAnnotationTypes.DataField:\n\t\tcase UIAnnotationTypes.DataPointType:\n\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\tif (typeof initialDataModelObjectPath.targetObject.Value === \"object\") {\n\t\t\t\tvaluePath = initialDataModelObjectPath.targetObject.Value.path;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\tif (initialDataModelObjectPath.targetObject.Target.$target) {\n\t\t\t\tif (\n\t\t\t\t\tisAnnotationOfType<DataField | DataPointType>(initialDataModelObjectPath.targetObject.Target.$target, [\n\t\t\t\t\t\tUIAnnotationTypes.DataPointType,\n\t\t\t\t\t\tUIAnnotationTypes.DataField\n\t\t\t\t\t])\n\t\t\t\t) {\n\t\t\t\t\tif (initialDataModelObjectPath.targetObject.Target.value.indexOf(\"/\") > 0) {\n\t\t\t\t\t\tvaluePath = initialDataModelObjectPath.targetObject.Target.value.replace(\n\t\t\t\t\t\t\t/\\/@.*/,\n\t\t\t\t\t\t\t`/${initialDataModelObjectPath.targetObject.Target.$target.Value?.path}`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvaluePath = initialDataModelObjectPath.targetObject.Target.$target.Value?.path;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvaluePath = (initialDataModelObjectPath.targetObject.Target as unknown as PathAnnotationExpression<unknown>)?.path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UIAnnotationTypes.DataFieldForAction:\n\t\tcase UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n\t\tcase UIAnnotationTypes.DataFieldForActionGroup:\n\t\tcase UIAnnotationTypes.DataFieldWithActionGroup:\n\t\t\tbreak;\n\t}\n\n\tif (valuePath && valuePath.length > 0) {\n\t\treturn enhanceDataModelPath(initialDataModelObjectPath, valuePath);\n\t} else {\n\t\treturn undefined;\n\t}\n};\n\n/**\n * Check if the considered property is a non-insertable property\n * A first check is done on the last navigation from the contextLocation:\n * - If the annotation 'nonInsertableProperty' is found and the property is listed, then the property is non-insertable,\n * - Else the same check is done on the target entity.\n * @param propertyDataModelObjectPath\n * @returns True if the property is not insertable\n */\nexport const hasPropertyInsertRestrictions = (propertyDataModelObjectPath: DataModelObjectPath<Property>): boolean => {\n\tconst nonInsertableProperties = getContextPropertyRestriction(propertyDataModelObjectPath, (capabilities) => {\n\t\treturn (capabilities as EntitySetAnnotations_Capabilities | undefined)?.InsertRestrictions?.NonInsertableProperties;\n\t});\n\n\treturn nonInsertableProperties.some((nonInsertableProperty) => {\n\t\treturn nonInsertableProperty?.$target?.fullyQualifiedName === propertyDataModelObjectPath.targetObject?.fullyQualifiedName;\n\t});\n};\n\n/**\n * Get the binding for the draft indicator visibility.\n * @param draftIndicatorKey\n * @returns  The visibility binding expression.\n */\nexport const getDraftIndicatorVisibleBinding = (draftIndicatorKey: string | undefined): string | undefined => {\n\treturn draftIndicatorKey\n\t\t? compileExpression(\n\t\t\t\tformatResult(\n\t\t\t\t\t[\n\t\t\t\t\t\tconstant(draftIndicatorKey),\n\t\t\t\t\t\tpathInModel(\"semanticKeyHasDraftIndicator\", \"internal\"),\n\t\t\t\t\t\tpathInModel(\"HasDraftEntity\"),\n\t\t\t\t\t\tpathInModel(\"IsActiveEntity\"),\n\t\t\t\t\t\tpathInModel(\"hideDraftInfo\", \"pageInternal\")\n\t\t\t\t\t],\n\t\t\t\t\t\"sap.fe.macros.field.FieldRuntime.isDraftIndicatorVisible\"\n\t\t\t\t)\n\t\t  )\n\t\t: \"false\";\n};\n/**\n * Returns the DisplayShape for the Avatar depending on the annotation IsNaturalPerson.\n *\n * If the entity type is annotated with \"IsNaturalPerson\", then all Streams and ImageURls\n * in this entity are considered to be person therefore have shape circle by default.\n *\n * If a property within such an entity is annotated with UI.IsImage or UI.IsImageURL, both\n * of these annotations can be annotated with Common.IsNaturalPerson.\n *\n * The annotation at the property level overrides the annotation at the entity type.\n * @param dataModelPath\n * @param property\n * @returns The shape of the Avatar as string or as an expression\n */\n\nexport const getAvatarShape = (dataFieldModelPath: DataModelObjectPath<Property>): CompiledBindingToolkitExpression => {\n\tconst targetObject =\n\t\tdataFieldModelPath.targetObject?.annotations?.UI?.IsImageURL?.annotations?.Common?.IsNaturalPerson ||\n\t\tdataFieldModelPath.targetObject?.annotations?.UI?.IsImage?.annotations?.Common?.IsNaturalPerson;\n\tconst entityAnnotationTarget = dataFieldModelPath.targetEntityType.annotations?.Common?.IsNaturalPerson;\n\tlet avatarShapeExpression: ExpressionOrPrimitive<boolean>;\n\n\tif (targetObject) {\n\t\tavatarShapeExpression = getExpressionFromAnnotation(targetObject);\n\t} else if (entityAnnotationTarget) {\n\t\tavatarShapeExpression = getExpressionFromAnnotation(entityAnnotationTarget);\n\t} else avatarShapeExpression = false;\n\n\treturn compileExpression(ifElse(avatarShapeExpression, AvatarShape.Circle, AvatarShape.Square));\n};\n"],"mappings":"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","ignoreList":[],"file":"FieldTemplating-dbg.js"}