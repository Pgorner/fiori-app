{"version":3,"names":["Object","assign","FieldBaseDelegate","apiVersion","initializeTypeFromBinding","field","type","value","result","isA","Array","isArray","length","undefined","formatValue","bTypeInitialized","mCustomUnits","initializeInternalUnitType","typeInitialization","enhanceValueForUnit","values","push","getDefaultValueHelpDelegate","_field","name","payload","getTypeMap","TypeMap","_getValueListParameter","valueListInfo","propertyName","Parameters","filter","entry","LocalDataProperty","$PropertyPath","_getFilter","valueList","valueHelpProperty","keyValue","valuehelpPayload","valuehelpConditionPayload","bindingContext","filters","parameters","parameter","$Type","ValueListProperty","filterValue","isActionParameterDialog","apdFieldPath","apdField","Element","getElementById","getValue","sourcePath","conditionPayload","getObject","Filter","path","operator","value1","getItemForValue","valueHelp","config","checkDescription","getPayload","descriptionPath","valueHelpDescriptionPath","maxLength","valueLength","toString","getDescription","key","_conditionIn","_conditionOut","_ConditionModel","_conditionModelName","control","_type","getDisplay","includes","retrieveTextFromValueList","isFilterField","dataModel","getModel","metaModel","getMetaModel","CommonUtils","getAppComponent","valueHelpQualifier","propertyPath","propertyDescriptionPath","textProperty","requestValueListInfo","keys","valueHelpParameters","Error","valueListModel","$model","textAnnotation","CollectionPath","$Path","listBinding","bindList","$select","contexts","requestContexts","lastIndex","lastIndexOf","sideEffectPath","substring","sideEffectsService","getSideEffectsService","requestSideEffects","Log","warning","externalIdPath","externalIdFullPath","replace","externalIdName","externalIdDescriptionPath","error","status","message","String","msg"],"sourceRoot":".","sources":["FieldBaseDelegate.ts"],"sourcesContent":["import { CommonAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport Log from \"sap/base/Log\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { AnnotationValueListType, ValueHelpPayload } from \"sap/fe/macros/internal/valuehelp/ValueListHelper\";\nimport type Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport type Field from \"sap/ui/mdc/Field\";\nimport type ValueHelp from \"sap/ui/mdc/ValueHelp\";\nimport type { ItemForValueConfiguration } from \"sap/ui/mdc/ValueHelp\";\nimport type ConditionModel from \"sap/ui/mdc/condition/ConditionModel\";\nimport type FieldBase from \"sap/ui/mdc/field/FieldBase\";\nimport FieldBaseDelegate from \"sap/ui/mdc/field/FieldBaseDelegate\";\nimport TypeMap from \"sap/ui/mdc/odata/v4/TypeMap\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type SimpleType from \"sap/ui/model/SimpleType\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { ConditionPayloadMap, ConditionPayloadType } from \"../valuehelp/ValueHelpDelegate\";\nexport type FieldPayload = {\n\tretrieveTextFromValueList?: boolean;\n\tisFilterField?: boolean;\n};\n\nexport type Value = string | Date | number | boolean | undefined | null;\n\nexport type TypeInitialization = {\n\tbTypeInitialized?: boolean;\n\tmCustomUnits?: string;\n};\n\nexport type Config = {\n\tvalue: Value;\n\tparsedValue: Value;\n\tbindingContext: Context;\n\tcheckKey: boolean;\n\tcheckDescription: boolean;\n\tconditionModel?: ConditionModel;\n\tconditionModelName?: string;\n\tcontrol?: object;\n};\n\nexport default Object.assign({}, FieldBaseDelegate, {\n\tapiVersion: 2,\n\n\t/**\n\t * If the <code>Field</code> control is used, the used data type might come from the binding.\n\t * In V4-unit or currency case it might need to be formatted once.\n\t * To initialize the internal type later on, the currencies must be returned.\n\t * @param field The <code>Field</code> instance\n\t * @param type Type from binding\n\t * @param value Given value\n\t * @returns Information needed to initialize internal type (needs to set bTypeInitialized to true if initialized)\n\t */\n\tinitializeTypeFromBinding: function (field: Field, type: SimpleType | undefined, value: Value | Value[]) {\n\t\t// V4 Unit and Currency types have a map with valid units and create an internal customizing for it.\n\t\t// The Field needs to keep this customizing logic when creating the internal type.\n\t\t// (As external RAW binding is used there is no formatting on parsing.)\n\n\t\tconst result: TypeInitialization = {};\n\t\tif (\n\t\t\ttype &&\n\t\t\ttype.isA([\"sap.ui.model.odata.type.Unit\", \"sap.ui.model.odata.type.Currency\"]) &&\n\t\t\tArray.isArray(value) &&\n\t\t\tvalue.length > 2 &&\n\t\t\tvalue[2] !== undefined\n\t\t) {\n\t\t\t// format once to set internal customizing. Allow null as valid values for custom units\n\t\t\ttype.formatValue(value, \"string\");\n\t\t\tresult.bTypeInitialized = true;\n\t\t\tresult.mCustomUnits = value[2] as string; // TODO: find a better way to provide custom units to internal type\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * This function initializes the unit type.\n\t * If the <code>Field</code> control is used, the used data type might come from the binding.\n\t * If the type is a V4 unit or currency, it might need to be formatted once.\n\t * @param field The <code>Field</code> instance\n\t * @param type Type from binding\n\t * @param typeInitialization Information needed to initialize internal type\n\t */\n\tinitializeInternalUnitType: function (field: Field, type: SimpleType, typeInitialization?: TypeInitialization) {\n\t\tif (typeInitialization?.mCustomUnits !== undefined) {\n\t\t\t// if already initialized initialize new type too.\n\t\t\ttype.formatValue([null, null, typeInitialization.mCustomUnits], \"string\");\n\t\t}\n\t},\n\n\t/**\n\t * This function enhances the value with unit or currency information if needed by the data type.\n\t * @param field The <code>Field</code> instance\n\t * @param  values Values\n\t * @param  typeInitialization Information needed to initialize internal type\n\t * @returns Values\n\t */\n\tenhanceValueForUnit: function (field: Field, values: Value[], typeInitialization?: TypeInitialization) {\n\t\tif (typeInitialization?.bTypeInitialized === true && values.length === 2) {\n\t\t\tvalues.push(typeInitialization.mCustomUnits);\n\t\t\treturn values;\n\t\t}\n\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * This function returns which <code>ValueHelpDelegate</code> is used\n\t * if a default field help (for example, for defining conditions in </code>FilterField</code>)\n\t * is created.\n\t * @param _field The <code>Field</code> instance\n\t * @returns Delegate object with name and payload\n\t */\n\tgetDefaultValueHelpDelegate: function (_field: Field) {\n\t\treturn { name: \"sap/ui/mdc/odata/v4/ValueHelpDelegate\", payload: {} };\n\t},\n\n\tgetTypeMap: function (_field: Field) {\n\t\treturn TypeMap;\n\t},\n\n\t/**\n\t * Determine all parameters in a value help that use a specific property.\n\t * @param valueListInfo Value list info\n\t * @param propertyName Name of the property\n\t * @returns List of all found parameters\n\t */\n\t_getValueListParameter: function (valueListInfo: AnnotationValueListType, propertyName: string) {\n\t\t//determine path to value list property\n\t\treturn valueListInfo.Parameters.filter(function (entry) {\n\t\t\tif (entry.LocalDataProperty) {\n\t\t\t\treturn entry.LocalDataProperty.$PropertyPath === propertyName;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Build filters for each relevant parameter.\n\t * @param valueList Value list info\n\t * @param propertyName Name of the property\n\t * @param valueHelpProperty Name of the value help property\n\t * @param keyValue Value of the property\n\t * @param valuehelpPayload Payload of the value help\n\t * @param valuehelpConditionPayload Additional condition information for this key\n\t * @param bindingContext BindingContext of the field\n\t * @returns List of filters\n\t */\n\t_getFilter: function (\n\t\tvalueList: AnnotationValueListType,\n\t\tpropertyName: string,\n\t\tvalueHelpProperty: string,\n\t\tkeyValue: string,\n\t\tvaluehelpPayload: ValueHelpPayload,\n\t\tvaluehelpConditionPayload: ConditionPayloadType[] | undefined,\n\t\tbindingContext?: Context\n\t) {\n\t\tconst filters = [];\n\t\tconst parameters = valueList.Parameters.filter(function (parameter) {\n\t\t\treturn (\n\t\t\t\tparameter.$Type === CommonAnnotationTypes.ValueListParameterIn ||\n\t\t\t\tparameter.$Type === CommonAnnotationTypes.ValueListParameterInOut ||\n\t\t\t\t(parameter.LocalDataProperty?.$PropertyPath === propertyName && parameter.ValueListProperty === valueHelpProperty)\n\t\t\t);\n\t\t});\n\t\tfor (const parameter of parameters) {\n\t\t\tlet filterValue;\n\t\t\tif (parameter.LocalDataProperty?.$PropertyPath === propertyName) {\n\t\t\t\tfilterValue = keyValue;\n\t\t\t} else if (valuehelpPayload?.isActionParameterDialog === true) {\n\t\t\t\tconst apdFieldPath = `APD_::${parameter.LocalDataProperty?.$PropertyPath}`;\n\t\t\t\tconst apdField = Element.getElementById(apdFieldPath) as Field;\n\t\t\t\tfilterValue = apdField?.getValue();\n\t\t\t} else if (valuehelpConditionPayload !== undefined) {\n\t\t\t\tconst sourcePath = parameter.LocalDataProperty?.$PropertyPath;\n\t\t\t\tconst conditionPayload = valuehelpConditionPayload?.[0];\n\t\t\t\tfilterValue = sourcePath && conditionPayload?.[sourcePath];\n\t\t\t} else if (bindingContext) {\n\t\t\t\t// if the value help is not used try getting the filter value from the binding context\n\t\t\t\tconst sourcePath = parameter.LocalDataProperty?.$PropertyPath;\n\t\t\t\tfilterValue = bindingContext.getObject(sourcePath);\n\t\t\t}\n\t\t\t/* Add value to the filter for the text determination */\n\t\t\tif (filterValue !== null && filterValue !== undefined) {\n\t\t\t\tfilters.push(new Filter({ path: parameter.ValueListProperty, operator: \"EQ\", value1: filterValue }));\n\t\t\t}\n\t\t}\n\t\treturn filters;\n\t},\n\n\t/**\n\t * Determines the key, description, and payload of a user input.\n\t * @param field The <code>Field</code> instance\n\t * @param valueHelp Value help instance\n\t * @param config Configuration Object\n\t * @returns Object containing description, key, and payload. If it is not available right now (must be requested), a <code>Promise</code> is returned\n\t */\n\tgetItemForValue: function (field: Field, valueHelp: ValueHelp, config: ItemForValueConfiguration) {\n\t\t//BCP: 2270162887 . The MDC field should not try to get the item when the field is emptied\n\t\t// JIRA: FIORITECHP1-25361 - Improve the type-ahead behavior for missinng text annotation or constraints violations of the existing text annotation\n\t\tif (config.value === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\tif (config.checkDescription) {\n\t\t\tconst valuehelpPayload = valueHelp.getPayload() as ValueHelpPayload;\n\t\t\tconst descriptionPath = valuehelpPayload.valueHelpDescriptionPath;\n\t\t\tconst maxLength = valuehelpPayload?.maxLength;\n\t\t\tconst valueLength = config.value !== null && config.value !== undefined ? config.value.toString().length : 0;\n\t\t\tif (descriptionPath === \"\") {\n\t\t\t\t// In case the property value help collection has no text annotation (descriptionPath is empty) the description check shouldn´t occur.\n\t\t\t\t// In such a case the method getDescription will be called by MDC and within this method a SideEffect is requested to retrieve the text from the text property of the main entity\n\t\t\t\tconfig.checkDescription = false;\n\t\t\t} else if (maxLength !== undefined && valueLength > maxLength) {\n\t\t\t\t//value length is > text proeperty length constraint\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn FieldBaseDelegate.getItemForValue(field, valueHelp, config);\n\t},\n\n\t/**\n\t * Determines the description for a given key.\n\t * @param field The <code>Field</code> instance\n\t * @param valueHelp Field help assigned to the <code>Field</code> or <code>FilterField</code> control\n\t * @param key Key value of the description\n\t * @param _conditionIn In parameters for the key (no longer supported)\n\t * @param _conditionOut Out parameters for the key (no longer supported)\n\t * @param bindingContext BindingContext <code>BindingContext</code> of the checked field. Inside a table, the <code>ValueHelp</code> element can be connected to a different row\n\t * @param _ConditionModel ConditionModel</code>, if bound to one\n\t * @param _conditionModelName Name of the <code>ConditionModel</code>, if bound to one\n\t * @param conditionPayload Additional context information for this key\n\t * @param control Instance of the calling control\n\t * @param _type Type of the value\n\t * @returns Description for the key or object containing a description, key and payload. If the description is not available right away (it must be requested), a <code>Promise</code> is returned\n\t */\n\tgetDescription: async function (\n\t\tfield: Field | null,\n\t\tvalueHelp: ValueHelp,\n\t\tkey: string,\n\t\t_conditionIn: object,\n\t\t_conditionOut: object,\n\t\tbindingContext: Context | undefined,\n\t\t_ConditionModel: ConditionModel,\n\t\t_conditionModelName: string,\n\t\tconditionPayload: ConditionPayloadMap,\n\t\tcontrol: Control,\n\t\t_type: unknown\n\t) {\n\t\t//JIRA: FIORITECHP1-22022 . The MDC field should not  tries to determine description with the initial GET of the data.\n\t\t// it should rely on the data we already received from the backend\n\t\t// But The getDescription function is also called in the FilterField case if a variant is loaded.\n\t\t// As the description text could be language dependent it is not stored in the variant, so it needs to be read on rendering.\n\n\t\tlet payload = field?.getPayload() as FieldPayload;\n\n\t\t/* Retrieve text from value help, if value was set by out-parameter (BCP 2270160633) */\n\t\tif (!payload && (control as FieldBase)?.getDisplay().includes(\"Description\")) {\n\t\t\tpayload = {\n\t\t\t\tretrieveTextFromValueList: true\n\t\t\t};\n\t\t}\n\n\t\tif (payload?.retrieveTextFromValueList === true || payload?.isFilterField === true) {\n\t\t\tconst dataModel = valueHelp.getModel() as ODataModel | undefined;\n\t\t\tconst metaModel = dataModel\n\t\t\t\t? dataModel.getMetaModel()\n\t\t\t\t: CommonUtils.getAppComponent(valueHelp as unknown as Control)\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.getMetaModel();\n\t\t\tconst valuehelpPayload = valueHelp.getPayload() as ValueHelpPayload;\n\t\t\tconst valuehelpConditionPayload = conditionPayload?.[valuehelpPayload.valueHelpQualifier];\n\t\t\tconst propertyPath = valuehelpPayload.propertyPath;\n\t\t\tconst propertyDescriptionPath = valuehelpPayload?.propertyDescriptionPath;\n\t\t\tlet textProperty: string;\n\n\t\t\ttry {\n\t\t\t\t/* Request value help metadata */\n\t\t\t\tconst valueListInfo = await metaModel.requestValueListInfo(propertyPath, true, bindingContext);\n\n\t\t\t\tconst propertyName = metaModel.getObject(`${propertyPath}@sapui.name`) as string;\n\t\t\t\t// take the first value list annotation - alternatively take the one without qualifier or the first one\n\t\t\t\tconst valueList = valueListInfo[Object.keys(valueListInfo)[0]];\n\t\t\t\tconst valueHelpParameters = this._getValueListParameter(valueList, propertyName);\n\t\t\t\tconst valueHelpProperty = valueHelpParameters?.[0]?.ValueListProperty;\n\t\t\t\tif (!valueHelpProperty) {\n\t\t\t\t\tthrow Error(`Inconsistent value help annotation for ${propertyName}`);\n\t\t\t\t}\n\t\t\t\t// get text annotation for this value list property\n\t\t\t\tconst valueListModel = valueList.$model;\n\t\t\t\tconst textAnnotation = valueListModel\n\t\t\t\t\t.getMetaModel()\n\t\t\t\t\t.getObject(`/${valueList.CollectionPath}/${valueHelpProperty}@com.sap.vocabularies.Common.v1.Text`);\n\t\t\t\tif (textAnnotation && textAnnotation.$Path) {\n\t\t\t\t\ttextProperty = textAnnotation.$Path;\n\t\t\t\t\t/* Build the filter for the relevant parameters */\n\t\t\t\t\tconst filters = this._getFilter(\n\t\t\t\t\t\tvalueList,\n\t\t\t\t\t\tpropertyName,\n\t\t\t\t\t\tvalueHelpProperty,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvaluehelpPayload,\n\t\t\t\t\t\tvaluehelpConditionPayload,\n\t\t\t\t\t\tbindingContext\n\t\t\t\t\t);\n\t\t\t\t\tconst listBinding = valueListModel.bindList(`/${valueList.CollectionPath}`, undefined, undefined, filters, {\n\t\t\t\t\t\t$select: textProperty\n\t\t\t\t\t});\n\t\t\t\t\t/* Request description for given key from value list entity */\n\t\t\t\t\tconst contexts = await listBinding.requestContexts(0, 2);\n\t\t\t\t\treturn contexts.length ? contexts[0].getObject(textProperty) : undefined;\n\t\t\t\t} else if (bindingContext !== undefined && propertyDescriptionPath) {\n\t\t\t\t\tconst lastIndex = propertyDescriptionPath.lastIndexOf(\"/\");\n\t\t\t\t\tconst sideEffectPath = lastIndex > 0 ? propertyDescriptionPath.substring(0, lastIndex) : propertyDescriptionPath;\n\t\t\t\t\tconst sideEffectsService = CommonUtils.getAppComponent(valueHelp as unknown as Control).getSideEffectsService();\n\t\t\t\t\tawait sideEffectsService.requestSideEffects([sideEffectPath], bindingContext);\n\t\t\t\t\tLog.warning(\n\t\t\t\t\t\t`RequestSideEffects is triggered because the text annotation for ${valueHelpProperty} is not defined at the CollectionPath of the value help`\n\t\t\t\t\t);\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\t/* EXTERNAlID */\n\t\t\t\t\tconst externalIdPath = metaModel?.getObject(\n\t\t\t\t\t\t`${valuehelpPayload.propertyPath}@com.sap.vocabularies.Common.v1.ExternalID`\n\t\t\t\t\t)?.$Path;\n\t\t\t\t\tif (externalIdPath) {\n\t\t\t\t\t\tconst externalIdFullPath = valuehelpPayload.propertyPath.replace(propertyName, externalIdPath);\n\t\t\t\t\t\tconst externalIdName = metaModel.getObject(`${externalIdFullPath}@sapui.name`);\n\t\t\t\t\t\tconst externalIdDescriptionPath = metaModel?.getObject(`${externalIdFullPath}@com.sap.vocabularies.Common.v1.Text`)\n\t\t\t\t\t\t\t?.$Path;\n\t\t\t\t\t\tconst filters = [];\n\t\t\t\t\t\tfilters.push(new Filter({ path: externalIdName, operator: \"EQ\", value1: key }));\n\t\t\t\t\t\tconst listBinding = valueListModel.bindList(`/${valueList.CollectionPath}`, undefined, undefined, filters, {\n\t\t\t\t\t\t\t$select: `${externalIdName},${externalIdDescriptionPath}`\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst contexts = await listBinding.requestContexts(0, 2);\n\t\t\t\t\t\tif (contexts.length) {\n\t\t\t\t\t\t\treturn contexts[0].getObject(externalIdDescriptionPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tLog.error(`Text Annotation for ${valueHelpProperty} is not defined`);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconst status = error ? (error as XMLHttpRequest).status : undefined;\n\t\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\t\tconst msg = status === 404 ? `Metadata not found (${status}) for value help of property ${propertyPath}` : message;\n\t\t\t\tLog.error(msg);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n});\n"],"mappings":"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","ignoreList":[],"file":"FieldBaseDelegate-dbg.js"}