{"version":3,"file":"FieldRuntimeHelper.js","names":["FieldRuntimeHelper","fetchRecommendations","field","controller","view","CommonUtils","getTargetView","fieldBindingContext","getBindingContext","recommendationsContext","fieldBinding","getBinding","isA","feController","getExtensionController","valueHelpId","getValueHelp","metaPath","ModelHelper","getMetaPathForContext","propertyPath","data","replace","fieldPath","getPath","selectedValue","getValue","recommendations","updateTelemetryDataBasedOnUserSelection","includes","tableId","substring","indexOf","table","byId","contextIdentifier","getParent","getIdentifierColumn","fetchAndApplyRecommendationsOnFieldChange","context","oController","_controller","getFieldStateOnChange","oEvent","oSourceField","getSource","mFieldState","_isBindingStateMessages","oBinding","getDataState","getInvalidValue","undefined","getContent","FieldWrapper","getMetadata","getName","getEditMode","getContentEdit","bIsValid","getParameter","getMaxConditions","oValueBindingInfo","getBindingInfo","binding","getProperty","fieldValue","validity","state","pressLink","async","oSource","sapmLink","findElements","elem","getDependents","length","oFieldInfo","openLink","mdcLink","hRef","getTriggerHref","_useDelegateItems","linkItems","retrieveLinkItems","getPayload","hasQuickViewFacets","popover","createPopoverWithNoTargets","addDependent","openBy","open","error","Log","appComponent","getAppComponent","shellService","getShellServices","shellHash","parseShellHash","navArgs","target","semanticObject","action","params","KeepAliveHelper","storeControlRefreshStrategyForHash","isStickyEditMode","navigate","newHref","hrefForExternal","openWindow","mdcLinkId","getId","illustratedMessageSettings","title","getResourceModel","getText","description","enableFormattedText","illustrationSize","illustrationType","IllustratedMessageType","Tent","illustratedMessage","IllustratedMessage","popoverSettings","horizontalScrolling","showHeader","Device","system","phone","placement","mobilelibrary","PlacementType","Auto","content","afterClose","event","destroy","ResponsivePopover"],"sources":["./FieldRuntimeHelper.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ExtensionAPI from \"sap/fe/core/ExtensionAPI\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport KeepAliveHelper from \"sap/fe/core/helpers/KeepAliveHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type TextLink from \"sap/fe/macros/controls/TextLink\";\nimport type { LinkDelegatePayload } from \"sap/fe/macros/quickView/QuickViewDelegate\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport type { $IllustratedMessageSettings } from \"sap/m/IllustratedMessage\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport type Link from \"sap/m/Link\";\nimport type ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport type { $ResponsivePopoverSettings } from \"sap/m/ResponsivePopover\";\nimport ResponsivePopover from \"sap/m/ResponsivePopover\";\nimport mobilelibrary from \"sap/m/library\";\nimport Device from \"sap/ui/Device\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport type Element from \"sap/ui/core/Element\";\nimport type { default as Field, Field$ChangeEvent, default as MDCField } from \"sap/ui/mdc/Field\";\nimport type MdcLink from \"sap/ui/mdc/Link\";\nimport type DataState from \"sap/ui/model/DataState\";\nimport type PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport openWindow from \"sap/ui/util/openWindow\";\nimport FieldWrapper from \"../controls/FieldWrapper\";\nimport type TableAPI from \"../table/TableAPI\";\nimport type FieldAPI from \"./FieldAPI\";\n\nconst FieldRuntimeHelper = {\n\tfetchRecommendations: function (field: Field, controller: PageController | ExtensionAPI): void {\n\t\tconst view = CommonUtils.getTargetView(field);\n\t\tconst fieldBindingContext = field.getBindingContext();\n\t\tlet recommendationsContext: Context;\n\n\t\t// determine recommendation context to use\n\t\tconst fieldBinding = (fieldBindingContext as Context)?.getBinding();\n\n\t\tif (fieldBinding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t// inside a table, use the row\n\t\t\trecommendationsContext = fieldBindingContext as Context;\n\t\t} else {\n\t\t\t// inside a form now\n\t\t\t// can have 1-1 navigation property/direct property - use view context\n\t\t\trecommendationsContext = view.getBindingContext();\n\t\t}\n\t\tconst feController = FieldRuntimeHelper.getExtensionController(controller);\n\t\tconst valueHelpId = field.getValueHelp();\n\t\t// update telemetry data as per user selection\n\t\tconst metaPath = ModelHelper.getMetaPathForContext(field.getBindingContext() as Context);\n\t\tconst propertyPath = field.data(\"sourcePath\").replace(metaPath, \"\");\n\t\tconst fieldPath = `${field.getBindingContext()?.getPath()}${propertyPath}`;\n\t\tconst selectedValue = field.getValue();\n\t\tfeController.recommendations.updateTelemetryDataBasedOnUserSelection(fieldPath, selectedValue);\n\n\t\tif (valueHelpId && valueHelpId.includes(\"::TableValueHelp::\")) {\n\t\t\tconst tableId = valueHelpId.substring(0, valueHelpId.indexOf(\"::TableValueHelp::\"));\n\t\t\tconst table = view.byId(tableId);\n\t\t\tconst contextIdentifier = (table?.getParent() as TableAPI)?.getIdentifierColumn() as string[];\n\t\t\tfeController.recommendations.fetchAndApplyRecommendationsOnFieldChange(field, {\n\t\t\t\tcontext: recommendationsContext,\n\t\t\t\tcontextIdentifier\n\t\t\t});\n\t\t} else {\n\t\t\tfeController.recommendations.fetchAndApplyRecommendationsOnFieldChange(field, { context: recommendationsContext });\n\t\t}\n\t},\n\n\tgetExtensionController: function (oController: PageController | ExtensionAPI): PageController {\n\t\treturn oController.isA<ExtensionAPI>(\"sap.fe.core.ExtensionAPI\") ? oController._controller : oController;\n\t},\n\n\t/**\n\t * Gets the field value and validity on a change event.\n\t * @param oEvent The event object passed by the change event\n\t * @returns Field value and validity\n\t */\n\tgetFieldStateOnChange: function (oEvent: Field$ChangeEvent & Event<{ isValid: boolean }, Control>): {\n\t\tfield: Field;\n\t\tstate: {\n\t\t\tfieldValue?: unknown;\n\t\t\tvalidity: boolean;\n\t\t};\n\t} {\n\t\tlet oSourceField = oEvent.getSource(),\n\t\t\tmFieldState: {\n\t\t\t\tfieldValue?: unknown;\n\t\t\t\tvalidity: boolean;\n\t\t\t};\n\t\tconst _isBindingStateMessages = function (oBinding: PropertyBinding & { getDataState: () => DataState }): boolean {\n\t\t\treturn oBinding && oBinding.getDataState() ? oBinding.getDataState().getInvalidValue() === undefined : true;\n\t\t};\n\t\tif (oSourceField.isA<Field>(\"sap.fe.macros.field.Field\")) {\n\t\t\toSourceField = oSourceField.getContent() as MDCField;\n\t\t}\n\t\tif (oSourceField.isA<EnhanceWithUI5<FieldAPI>>(\"sap.fe.macros.field.FieldAPI\")) {\n\t\t\toSourceField = oSourceField.getContent() as MDCField;\n\t\t}\n\n\t\tif (\n\t\t\toSourceField.isA<EnhanceWithUI5<FieldWrapper>>(FieldWrapper.getMetadata().getName()) &&\n\t\t\toSourceField.getEditMode() === \"Editable\"\n\t\t) {\n\t\t\toSourceField = (oSourceField as EnhanceWithUI5<FieldWrapper>).getContentEdit()[0] as MDCField;\n\t\t}\n\n\t\tif (oSourceField.isA<MDCField>(\"sap.ui.mdc.Field\")) {\n\t\t\tlet bIsValid = oEvent.getParameter(\"valid\") || oEvent.getParameter(\"isValid\");\n\t\t\tif (bIsValid === undefined) {\n\t\t\t\tif (oSourceField.getMaxConditions() === 1) {\n\t\t\t\t\tconst oValueBindingInfo = oSourceField.getBindingInfo(\"value\");\n\t\t\t\t\tbIsValid = _isBindingStateMessages(oValueBindingInfo && oValueBindingInfo.binding);\n\t\t\t\t}\n\t\t\t\tif (oSourceField.getValue() === \"\" && !oSourceField.getProperty(\"required\")) {\n\t\t\t\t\tbIsValid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmFieldState = {\n\t\t\t\tfieldValue: oSourceField.getValue(),\n\t\t\t\tvalidity: !!bIsValid\n\t\t\t};\n\t\t} else {\n\t\t\t// oSourceField extends from a FileUploader || Input || is a CheckBox\n\t\t\tconst oBinding =\n\t\t\t\t(oSourceField as Control).getBinding(\"uploadUrl\") ||\n\t\t\t\t(oSourceField as Control).getBinding(\"value\") ||\n\t\t\t\t(oSourceField as Control).getBinding(\"selected\");\n\t\t\tmFieldState = {\n\t\t\t\tfieldValue: oBinding && (oBinding as PropertyBinding).getValue(),\n\t\t\t\tvalidity: _isBindingStateMessages(oBinding as PropertyBinding & { getDataState: () => DataState })\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tfield: oSourceField,\n\t\t\tstate: mFieldState\n\t\t};\n\t},\n\t/**\n\t * Handles the press event for a link.\n\t * @param oEvent The press event\n\t * @returns The pressed link\n\t */\n\tpressLink: async function (oEvent: Button$PressEvent): Promise<Link> {\n\t\tconst oSource = oEvent.getSource();\n\t\tlet sapmLink = oSource.isA<ObjectIdentifier>(\"sap.m.ObjectIdentifier\")\n\t\t\t? oSource.findElements(false, (elem: Element) => {\n\t\t\t\t\treturn elem.isA<Link>(\"sap.m.Link\");\n\t\t\t  })[0]\n\t\t\t: oSource;\n\t\tif (oSource?.isA<TextLink>(\"sap.fe.macros.controls.TextLink\")) {\n\t\t\t//when the link is inside a TextLink control, the dependent will be on the TextLink\n\t\t\tsapmLink = oSource.getContent() as Link;\n\t\t}\n\n\t\tif (oSource.getDependents() && oSource.getDependents().length > 0 && sapmLink.getProperty(\"text\") !== \"\") {\n\t\t\tconst oFieldInfo = oSource.getDependents()[0];\n\t\t\tif (oFieldInfo && oFieldInfo.isA<MdcLink>(\"sap.ui.mdc.Link\")) {\n\t\t\t\tawait FieldRuntimeHelper.openLink(oFieldInfo, sapmLink as Link);\n\t\t\t}\n\t\t}\n\t\treturn sapmLink as Link;\n\t},\n\n\topenLink: async function (mdcLink: MdcLink, sapmLink: Link): Promise<void> {\n\t\ttry {\n\t\t\tconst hRef = await mdcLink.getTriggerHref();\n\t\t\tif (!hRef) {\n\t\t\t\ttry {\n\t\t\t\t\tawait (mdcLink as unknown as { _useDelegateItems: Function })._useDelegateItems();\n\t\t\t\t\tconst linkItems = await mdcLink.retrieveLinkItems();\n\t\t\t\t\tif (linkItems?.length === 0 && (mdcLink.getPayload() as LinkDelegatePayload).hasQuickViewFacets === \"false\") {\n\t\t\t\t\t\tconst popover: ResponsivePopover = FieldRuntimeHelper.createPopoverWithNoTargets(mdcLink);\n\t\t\t\t\t\tmdcLink.addDependent(popover);\n\t\t\t\t\t\tpopover.openBy(sapmLink as unknown as Control);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tawait mdcLink.open(sapmLink as unknown as Control);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.error(`Cannot retrieve the QuickView Popover dialog: ${error}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst view = CommonUtils.getTargetView(sapmLink);\n\t\t\t\tconst appComponent = CommonUtils.getAppComponent(view);\n\t\t\t\tconst shellService = appComponent.getShellServices();\n\t\t\t\tconst shellHash = shellService.parseShellHash(hRef);\n\t\t\t\tconst navArgs = {\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tsemanticObject: shellHash.semanticObject,\n\t\t\t\t\t\taction: shellHash.action\n\t\t\t\t\t},\n\t\t\t\t\tparams: shellHash.params\n\t\t\t\t};\n\t\t\t\tKeepAliveHelper.storeControlRefreshStrategyForHash(view, shellHash);\n\t\t\t\tif (CommonUtils.isStickyEditMode(sapmLink as unknown as Control) !== true) {\n\t\t\t\t\t//URL params and xappState has been generated earlier hence using navigate\n\t\t\t\t\tawait shellService.navigate(navArgs, appComponent);\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst newHref = await shellService.hrefForExternal(navArgs, appComponent);\n\t\t\t\t\t\topenWindow(newHref);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tLog.error(`Error while retireving hrefForExternal : ${error}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error(`Error triggering link Href: ${error}`);\n\t\t}\n\t},\n\n\tcreatePopoverWithNoTargets: function (mdcLink: MdcLink): ResponsivePopover {\n\t\tconst mdcLinkId = mdcLink.getId();\n\t\tconst illustratedMessageSettings: $IllustratedMessageSettings = {\n\t\t\ttitle: getResourceModel(mdcLink as unknown as Control).getText(\"M_ILLUSTRATEDMESSAGE_TITLE\"),\n\t\t\tdescription: getResourceModel(mdcLink as unknown as Control).getText(\"M_ILLUSTRATEDMESSAGE_DESCRIPTION\"),\n\t\t\tenableFormattedText: true,\n\t\t\tillustrationSize: \"Dot\", // IllustratedMessageSize.Dot not available in \"@types/openui5\": \"1.107.0\"\n\t\t\tillustrationType: IllustratedMessageType.Tent\n\t\t};\n\t\tconst illustratedMessage = new IllustratedMessage(`${mdcLinkId}-illustratedmessage`, illustratedMessageSettings);\n\t\tconst popoverSettings: $ResponsivePopoverSettings = {\n\t\t\thorizontalScrolling: false,\n\t\t\tshowHeader: Device.system.phone,\n\t\t\tplacement: mobilelibrary.PlacementType.Auto,\n\t\t\tcontent: [illustratedMessage],\n\t\t\tafterClose: function (event) {\n\t\t\t\tif (event.getSource()) {\n\t\t\t\t\tevent.getSource().destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn new ResponsivePopover(`${mdcLinkId}-popover`, popoverSettings);\n\t}\n};\n\nexport default FieldRuntimeHelper;\n"],"mappings":"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","ignoreList":[]}