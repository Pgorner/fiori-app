{"version":3,"file":"FieldAPI.js","names":["FieldAPI","_dec","defineUI5Class","returnTypes","_dec2","property","type","_dec3","_dec4","_dec5","expectedAnnotations","expectedTypes","_dec6","_dec7","_dec8","event","_dec9","_dec10","_dec11","_dec12","association","_dec13","_dec14","_dec15","aggregation","_dec16","_dec17","_dec18","_dec19","bindable","isBindingInfo","required","_dec20","_dec21","_dec22","_dec23","_dec24","_dec25","_dec26","xmlEventHandler","_dec27","_dec28","_class","_class2","_MacroAPI","props","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","focusHandlersAttached","_inheritsLoose","_proto","prototype","getCollaborationBinding","field","binding","getBindingContext","getBinding","isA","oView","CommonUtils","getTargetView","extractChangeEventDetails","changeEvent","source","getSource","controller","getController","bindingContext","isTransient","valueResolved","getParameter","Promise","resolve","valid","fieldValidity","FieldRuntimeHelper","getFieldStateOnChange","state","customValueBinding","handleChange","newValue","valueModel","getModel","model","setProperty","path","updateBindings","feController","getExtensionController","undefined","then","oSource","mParameters","fireEvent","value","getValue","isValid","_sideEffects","handleFieldChange","fetchRecommendations","catch","Log","debug","valueResolvedAndPatchSent","async","setTimeout","editFlow","syncTask","prepareDeferredSideEffectsForField","bCollaborationEnabled","collaborativeDraft","isConnected","data","getBindingInfo","parts","filter","part","indexOf","map","getPath","retainAsyncMessages","updateCollaboration","hasPendingChanges","attachEventOnce","send","action","Activity","Change","content","releaseAsyncMessages","handleLiveChange","_event","onValidateFieldGroup","sourceField","view","handleFieldGroupChange","onBeforeRendering","isArialLabelledByCompliant","control","oContent","addAriaLabelledBy","aAriaLabelledBy","getAriaLabelledBy","sId","aAriaLabelledBys","onAfterRendering","collaborationEnabled","addEventDelegate","onfocusin","evt","relatedTarget","getControlInFieldWrapper","fieldWrapper","controls","getEditMode","getContentDisplay","getContentEdit","length","oControl","getItems","getSelected","getText","getTitle","Error","getMainPropertyRelativePath","mainPropertyRelativePath","setValue","setSelected","setText","getEnabled","getProperty","editMode","FieldEditMode","Disabled","link","setEnabled","enabled","editModeType","Editable","setEditMode","setLinkEnabled","addMessage","parameters","msgManager","getMessageManager","getResolvedPath","oMessage","Message","target","message","processor","description","persistent","addMessages","getId","removeMessage","id","arr","getMessageModel","getData","result","find","e","removeMessages","Messaging","onMetadataAvailable","createContent","metaContextPath","getMetaPathObject","metaPath","contextPath","owner","_getOwner","odataMetaModel","getMetaModel","getMetaContext","getOwnerContextPath","createBindingContext","inputFieldProperties","getPropertyBag","onLiveChange","hasListeners","preparedProperties","setUpField","preprocessorContext","eventHandlers","change","bind","liveChange","validateFieldGroup","FieldStructure","getFieldStructureTemplate","MessageToast","show","settings","properties","getMetadata","getAllProperties","aggregations","getAllAggregations","propertyName","currentPropertyValue","aggregationName","aggregationContent","getAggregation","Array","isArray","childrenArray","managedObject","push","MacroAPI","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor"],"sources":["./FieldAPI.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport type { EnhanceWithUI5, PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, association, defineUI5Class, event, property, xmlEventHandler } from \"sap/fe/base/ClassSupport\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type { XMLPreprocessorContext } from \"sap/fe/core/TemplateComponent\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport { Activity } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport type FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport type Contact from \"sap/fe/macros/contact/Contact\";\nimport type BuildingBlockObjectProperty from \"sap/fe/macros/controls/BuildingBlockObjectProperty\";\nimport type FieldWrapper from \"sap/fe/macros/controls/FieldWrapper\";\nimport type TextLink from \"sap/fe/macros/controls/TextLink\";\nimport type DataPoint from \"sap/fe/macros/internal/DataPoint\";\nimport * as FieldStructure from \"sap/fe/macros/internal/field/FieldStructure\";\nimport type { InputFieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport { setUpField } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport type Button from \"sap/m/Button\";\nimport type CheckBox from \"sap/m/CheckBox\";\nimport type { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport type ExpandableText from \"sap/m/ExpandableText\";\nimport type HBox from \"sap/m/HBox\";\nimport type InputBase from \"sap/m/InputBase\";\nimport type { InputBase$ChangeEvent } from \"sap/m/InputBase\";\nimport type Label from \"sap/m/Label\";\nimport type Link from \"sap/m/Link\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport type ObjectStatus from \"sap/m/ObjectStatus\";\nimport type Text from \"sap/m/Text\";\nimport type VBox from \"sap/m/VBox\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport Message from \"sap/ui/core/message/Message\";\nimport type MessageType from \"sap/ui/core/message/MessageType\";\nimport type { default as Field, Field$ChangeEvent, default as MDCField } from \"sap/ui/mdc/Field\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/Context\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type V4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type { EventHandler } from \"types/extension_types\";\nimport MacroAPI from \"../MacroAPI\";\nimport type Email from \"../contact/Email\";\nimport type FileWrapper from \"../controls/FileWrapper\";\nimport type FieldFormatOptions from \"./FieldFormatOptions\";\nimport FieldRuntimeHelper from \"./FieldRuntimeHelper\";\n\n/**\n * Building block for creating a field based on the metadata provided by OData V4.\n * <br>\n * Usually, a DataField or DataPoint annotation is expected, but the field can also be used to display a property from the entity type.\n * When creating a Field building block, you must provide an ID to ensure everything works correctly.\n *\n *\n * Usage example:\n * <pre>\n * &lt;macros:Field id=\"MyField\" metaPath=\"MyProperty\" /&gt;\n * </pre>\n * <a href=\"/sapui5-sdk-internal/test-resources/sap/fe/core/fpmExplorer/index.html#/buildingBlocks/buildingBlockOverview\" target=\"_blank\" >Overview of Building Blocks</a>\n * @alias sap.fe.macros.Field\n * @public\n */\n@defineUI5Class(\"sap.fe.macros.field.FieldAPI\", {\n\treturnTypes: [\n\t\t\"sap.fe.core.controls.FormElementWrapper\" /*, not sure i want to add those yet \"sap.fe.macros.field.FieldAPI\", \"sap.m.HBox\", \"sap.fe.macros.controls.ConditionalWrapper\", \"sap.m.Button\"*/\n\t]\n})\nclass FieldAPI extends MacroAPI {\n\t/**\n\t * An expression that allows you to control the editable state of the field.\n\t *\n\t * If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine if the page is currently editable.\n\t * Please note that you cannot set a field to editable if it has been defined in the annotation as not editable.\n\t * @private\n\t * @deprecated\n\t */\n\t@property({ type: \"boolean\" })\n\tpublic readonly editable!: boolean;\n\n\t/**\n\t * An expression that allows you to control the read-only state of the field.\n\t *\n\t * If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine the current state.\n\t * @public\n\t */\n\t@property({ type: \"boolean\" })\n\tpublic readonly readOnly!: boolean;\n\n\t/**\n\t * The identifier of the Field control.\n\t */\n\t@property({ type: \"string\" })\n\tpublic readonly id!: string;\n\n\t/**\n\t * Defines the relative path of the property in the metamodel, based on the current contextPath.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\texpectedAnnotations: [],\n\t\texpectedTypes: [\"EntitySet\", \"EntityType\", \"Singleton\", \"NavigationProperty\", \"Property\"]\n\t})\n\tpublic readonly metaPath!: string;\n\n\t/**\n\t * Wrap field\n\t */\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic readonly wrap?: boolean;\n\n\t/**\n\t * Defines the path of the context used in the current page or block.\n\t * This setting is defined by the framework.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\texpectedTypes: [\"EntitySet\", \"EntityType\", \"Singleton\", \"NavigationProperty\"]\n\t})\n\tpublic readonly contextPath!: string;\n\n\t/**\n\t * An event containing details is triggered when the value of the field is changed.\n\t * @public\n\t */\n\t@event()\n\tchange!: EventHandler;\n\n\t/**\n\t * An event containing details is triggered when the field get the focus.\n\t *\n\t */\n\t@event()\n\tfocusin!: EventHandler;\n\n\t/**\n\t * An event containing details is triggered when the value of the field is live changed.\n\t * @public\n\t */\n\t@event()\n\tliveChange!: EventHandler;\n\n\t@property({ type: \"boolean\" })\n\tpublic readonly required!: boolean;\n\n\t@association({\n\t\ttype: \"string\"\n\t})\n\tpublic readonly idPrefix?: string;\n\n\t/**\n\t * Prefix added to the generated ID of the value help used for the field\n\t */\n\t@association({\n\t\ttype: \"string\"\n\t})\n\tpublic readonly vhIdPrefix!: string;\n\n\t/**\n\t * Flag indicating whether action will navigate after execution\n\t */\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic readonly navigateAfterAction: boolean = true;\n\n\t/**\n\t * A set of options that can be configured.\n\t * @public\n\t */\n\t@aggregation({ type: \"sap.fe.macros.field.FieldFormatOptions\" })\n\tpublic readonly formatOptions?: FieldFormatOptions;\n\n\t@association({ type: \"string\" })\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tpublic readonly _flexId?: string;\n\n\t/**\n\t * Edit Mode of the field.\n\t *\n\t * If the editMode is undefined then we compute it based on the metadata\n\t * Otherwise we use the value provided here.\n\t */\n\t@property({\n\t\ttype: \"sap.ui.mdc.enums.FieldEditMode\"\n\t})\n\tpublic readonly editMode?: FieldEditMode | CompiledBindingToolkitExpression;\n\n\t/**\n\t * Option to add semantic objects for a field.\n\t * This parameter overwrites the semantic objects defined through annotations.\n\t * Valid options are either a single semantic object, a stringified array of semantic objects,\n\t * a formatter or a single binding expression returning either a single semantic object or an array of semantic objects.\n\t * @public\n\t */\n\t@property({ type: \"string\" })\n\tpublic readonly semanticObject!: string;\n\n\t/**\n\t * This is used to optionally provide an external value that comes from a different model than the oData model.\n\t * It is designed to work with a field with value help, and without support for complex value help (currency / unit).\n\t * @experimental\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\tbindable: true,\n\t\tisBindingInfo: true,\n\t\trequired: false\n\t})\n\tpublic readonly value?: string;\n\n\t/**\n\t * This is used to optionally provide an external description that comes from a different model than the oData model.\n\t * This should be used in conjunction with the value property.\n\t * @experimental\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\tbindable: true,\n\t\tisBindingInfo: true,\n\t\trequired: false\n\t})\n\tpublic readonly description?: string;\n\n\t@property({\n\t\ttype: \"sap.ui.core.TextAlign\"\n\t})\n\tpublic readonly textAlign?: string;\n\n\t@property({ type: \"boolean\" })\n\tpublic readonly showErrorObjectStatus?: boolean;\n\n\t@property({ type: \"string\" })\n\tpublic readonly collaborationEnabled?: boolean; // Need to be computed on demand\n\n\t@property({ type: \"string\" })\n\tpublic readonly mainPropertyRelativePath?: string; // Need to be computed on demand\n\n\t@property({ type: \"object\", isBindingInfo: true })\n\tcustomValueBinding?: boolean | string | number | PropertyBindingInfo;\n\n\tprivate focusHandlersAttached = false;\n\n\t/**\n\t * Gets the binding used for collaboration notifications.\n\t * @param field\n\t * @returns The binding\n\t */\n\tgetCollaborationBinding(field: Control): ODataListBinding | ODataContextBinding {\n\t\tlet binding = (field.getBindingContext() as V4Context).getBinding();\n\n\t\tif (!binding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\tconst oView = CommonUtils.getTargetView(field);\n\t\t\tbinding = oView.getBindingContext().getBinding();\n\t\t}\n\n\t\treturn binding;\n\t}\n\n\t/**\n\t * Extracts data from a change event for usage in the handleChange method.\n\t * @param changeEvent The change event object.\n\t * @returns An object containing the extracted details\n\t */\n\tprivate extractChangeEventDetails(changeEvent: Field$ChangeEvent & UI5Event<{ isValid: boolean }>): {\n\t\tsource: Field;\n\t\tcontroller: PageController;\n\t\tisTransient: boolean;\n\t\tvalueResolved: Promise<void>;\n\t\tvalid: boolean | undefined;\n\t\tfieldValidity: boolean;\n\t\tcustomValueBinding: boolean | string | number | PropertyBindingInfo | undefined;\n\t} {\n\t\tconst source = changeEvent.getSource();\n\t\tconst controller = this.getController();\n\t\t// If the field is bound to a JSON model, source.getBindingContext() returns undefined.\n\t\t// In such cases, we cannot call isTransient on it. Defaulting to false.\n\t\tconst bindingContext = source && source.getBindingContext();\n\t\tconst isTransient = bindingContext ? (bindingContext as unknown as { isTransient: Function }).isTransient() : false;\n\t\tconst valueResolved = changeEvent.getParameter(\"promise\") || Promise.resolve();\n\t\tconst valid = changeEvent.getParameter(\"valid\");\n\t\tconst fieldValidity = FieldRuntimeHelper.getFieldStateOnChange(changeEvent).state[\"validity\"];\n\t\tconst customValueBinding = this?.customValueBinding;\n\n\t\treturn { source, controller, isTransient, valueResolved, valid, fieldValidity, customValueBinding };\n\t}\n\n\t@xmlEventHandler()\n\thandleChange(changeEvent: Field$ChangeEvent & UI5Event<{ isValid: boolean }>): void {\n\t\tconst { source, controller, isTransient, valueResolved, valid, fieldValidity, customValueBinding } =\n\t\t\tthis.extractChangeEventDetails(changeEvent);\n\n\t\tif (customValueBinding) {\n\t\t\tlet newValue;\n\t\t\tconst valueModel = source?.getModel(customValueBinding.model) as JSONModel | undefined;\n\t\t\tif (source.isA(\"sap.m.CheckBox\")) {\n\t\t\t\tnewValue = (changeEvent as CheckBox$SelectEvent).getParameter(\"selected\");\n\t\t\t} else {\n\t\t\t\tnewValue = (changeEvent as InputBase$ChangeEvent).getParameter(\"value\");\n\t\t\t}\n\t\t\tvalueModel?.setProperty(customValueBinding.path, newValue);\n\t\t\tvalueModel?.updateBindings(true);\n\t\t}\n\n\t\t// Use the FE Controller instead of the extensionAPI to access internal FE controllers\n\t\tconst feController = controller ? FieldRuntimeHelper.getExtensionController(controller) : undefined;\n\n\t\t// Currently we have undefined and true... and our creation row implementation relies on this.\n\t\t// I would move this logic to this place as it's hard to understand for field consumer\n\t\tvalueResolved\n\t\t\t.then(() => {\n\t\t\t\t// The event is gone. For now we'll just recreate it again\n\t\t\t\t(changeEvent as { oSource?: Field }).oSource = source;\n\t\t\t\t(changeEvent as { mParameters?: { valid?: boolean } }).mParameters = {\n\t\t\t\t\tvalid: valid ?? true\n\t\t\t\t};\n\t\t\t\tthis?.fireEvent(\"change\", { value: this.getValue(), isValid: valid ?? true });\n\t\t\t\tif (!isTransient) {\n\t\t\t\t\t// trigger side effects without registering deferred side effects\n\t\t\t\t\t// deferred side effects are already registered by prepareDeferredSideEffectsForField before valueResolved is resolved.\n\t\t\t\t\tfeController?._sideEffects.handleFieldChange(changeEvent, !!fieldValidity, valueResolved, true);\n\t\t\t\t}\n\t\t\t\t// Recommendations\n\t\t\t\tif (controller) {\n\t\t\t\t\tFieldRuntimeHelper.fetchRecommendations(source, controller);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\t// The event is gone. For now we'll just recreate it again\n\t\t\t\t(changeEvent as { oSource?: Field }).oSource = source;\n\t\t\t\t(changeEvent as { mParameters?: { valid?: boolean } }).mParameters = {\n\t\t\t\t\tvalid: false\n\t\t\t\t};\n\t\t\t\tLog.debug(\"Prerequisites on Field for the SideEffects and Recommendations have been rejected\");\n\t\t\t\t// as the UI might need to react on. We could provide a parameter to inform if validation\n\t\t\t\t// was successful?\n\t\t\t\tthis.fireEvent(\"change\", { value: this.getValue(), isValid: valid ?? false });\n\t\t\t});\n\n\t\t// For the EditFlow synchronization, we need to wait for the corresponding PATCH request to be sent, otherwise there could be e.g. action invoked in parallel with the PATCH request.\n\t\t// This is done with a 0-timeout, to allow for the 'patchSent' event to be sent by the binding (then the internal edit flow synchronization kicks in with EditFlow.handlePatchSent).\n\t\tconst valueResolvedAndPatchSent = valueResolved\n\t\t\t.then(async () => {\n\t\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\t\tsetTimeout(resolve, 0);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {});\n\t\tfeController?.editFlow.syncTask(valueResolvedAndPatchSent);\n\n\t\t// if the context is transient, it means the request would fail anyway as the record does not exist in reality\n\t\t// Should the request be made in future if the context is transient?\n\t\tif (isTransient) {\n\t\t\treturn;\n\t\t}\n\n\t\tfeController?._sideEffects.prepareDeferredSideEffectsForField(changeEvent, !!fieldValidity, valueResolved);\n\t\t// Collaboration Draft Activity Sync\n\t\tconst bCollaborationEnabled = controller?.collaborativeDraft.isConnected();\n\n\t\tif (bCollaborationEnabled && fieldValidity) {\n\t\t\tconst binding = this.getCollaborationBinding(source);\n\n\t\t\tconst data = [\n\t\t\t\t...((source.getBindingInfo(\"value\") || source.getBindingInfo(\"selected\"))?.parts || []),\n\t\t\t\t...(source.getBindingInfo(\"additionalValue\")?.parts || [])\n\t\t\t]\n\t\t\t\t.filter((part) => {\n\t\t\t\t\treturn part?.path !== undefined && part.path.indexOf(\"@@\") < 0; // Remove binding parts with @@ that make no sense for collaboration messages\n\t\t\t\t})\n\t\t\t\t.map(function (part: { path: string }) {\n\t\t\t\t\treturn `${source.getBindingContext()?.getPath()}/${part.path}`;\n\t\t\t\t});\n\n\t\t\t// From this point, we will always send a collaboration message (UNLOCK or CHANGE), so we retain\n\t\t\t// a potential UNLOCK that would be sent in handleFocusOut, to make sure it's sent after the CHANGE message\n\t\t\tcontroller?.collaborativeDraft.retainAsyncMessages(data);\n\n\t\t\tconst updateCollaboration = (): void => {\n\t\t\t\tif (binding.hasPendingChanges()) {\n\t\t\t\t\t// The value has been changed by the user --> wait until it's sent to the server before sending a notification to other users\n\t\t\t\t\tbinding.attachEventOnce(\"patchCompleted\", function () {\n\t\t\t\t\t\tcontroller?.collaborativeDraft.send({ action: Activity.Change, content: data });\n\t\t\t\t\t\tcontroller?.collaborativeDraft.releaseAsyncMessages(data);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcontroller?.collaborativeDraft.releaseAsyncMessages(data);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (source.isA(\"sap.ui.mdc.Field\") || (source as Control).isA(\"sap.ui.mdc.MultiValueField\")) {\n\t\t\t\tvalueResolved\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tupdateCollaboration();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tupdateCollaboration();\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdateCollaboration();\n\t\t\t}\n\t\t}\n\t}\n\n\t@xmlEventHandler()\n\thandleLiveChange(_event: UI5Event): void {\n\t\tthis.fireEvent(\"liveChange\");\n\t}\n\n\t@xmlEventHandler()\n\tonValidateFieldGroup(_event: Control$ValidateFieldGroupEvent): void {\n\t\tconst sourceField = _event.getSource(),\n\t\t\tview = CommonUtils.getTargetView(sourceField),\n\t\t\tcontroller = view.getController();\n\n\t\tconst feController = FieldRuntimeHelper.getExtensionController(controller);\n\t\tfeController._sideEffects.handleFieldGroupChange(_event);\n\t}\n\n\tconstructor(props?: PropertiesOf<FieldAPI, \"change\" | \"liveChange\" | \"focusin\">, others?: PropertiesOf<FieldAPI>) {\n\t\tsuper(props, others);\n\t}\n\n\tonBeforeRendering(): void {\n\t\tconst isArialLabelledByCompliant = function (\n\t\t\tcontrol: Control\n\t\t): control is Control & { addAriaLabelledBy: Function; getAriaLabelledBy: Function } {\n\t\t\treturn control.isA<Button | FieldWrapper | MDCField | FileWrapper>([\n\t\t\t\t\"sap.m.Button\",\n\t\t\t\t\"sap.fe.macros.controls.FieldWrapper\",\n\t\t\t\t\"sap.ui.mdc.Field\",\n\t\t\t\t\"sap.fe.macros.controls.FileWrapper\"\n\t\t\t]);\n\t\t};\n\t\tconst oContent = this.content;\n\t\tif (oContent && isArialLabelledByCompliant(oContent) && oContent.addAriaLabelledBy) {\n\t\t\tconst aAriaLabelledBy = (this as unknown as EnhanceWithUI5<FieldAPI>).getAriaLabelledBy();\n\n\t\t\tfor (const sId of aAriaLabelledBy) {\n\t\t\t\tconst aAriaLabelledBys = oContent.getAriaLabelledBy() || [];\n\t\t\t\tif (aAriaLabelledBys.indexOf(sId) === -1) {\n\t\t\t\t\toContent.addAriaLabelledBy(sId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonAfterRendering(): void {\n\t\tif (this.collaborationEnabled && !this.focusHandlersAttached) {\n\t\t\t// The event delegate doesn't work on the FieldAPI, we need to put it on its content (FieldWrapper)\n\t\t\tthis.content?.addEventDelegate(\n\t\t\t\t{\n\t\t\t\t\tonfocusin: (evt: FocusEvent) => {\n\t\t\t\t\t\t(this as unknown as FieldAPI & { fireFocusin: Function }).fireEvent(\"focusin\", {\n\t\t\t\t\t\t\trelatedTarget: evt.relatedTarget\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tthis\n\t\t\t);\n\n\t\t\tthis.focusHandlersAttached = true; // To avoid attaching events twice\n\t\t}\n\t}\n\n\t/**\n\t * Returns the first visible control in the FieldWrapper.\n\t * @param control FieldWrapper\n\t * @returns The first visible control\n\t */\n\tstatic getControlInFieldWrapper(control: Control): Control | undefined {\n\t\tif (control.isA(\"sap.fe.macros.controls.FieldWrapper\") && !control.isA(\"sap.fe.macros.controls.FileWrapper\")) {\n\t\t\tconst fieldWrapper = control as EnhanceWithUI5<FieldWrapper>;\n\t\t\tconst controls = fieldWrapper.getEditMode() === \"Display\" ? [fieldWrapper.getContentDisplay()] : fieldWrapper.getContentEdit();\n\t\t\tif (controls.length >= 1) {\n\t\t\t\treturn controls[0];\n\t\t\t}\n\t\t} else {\n\t\t\treturn control;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the current value of the field.\n\t * @public\n\t * @returns The current value of the field\n\t */\n\tgetValue(): boolean | string | undefined {\n\t\tlet oControl = FieldAPI.getControlInFieldWrapper(this.content);\n\t\tif (this.collaborationEnabled && oControl?.isA(\"sap.m.HBox\")) {\n\t\t\toControl = (oControl as HBox).getItems()[0];\n\t\t}\n\t\tif (oControl?.isA(\"sap.m.CheckBox\")) {\n\t\t\treturn (oControl as CheckBox).getSelected();\n\t\t} else if (oControl?.isA(\"sap.m.InputBase\")) {\n\t\t\treturn (oControl as InputBase).getValue();\n\t\t} else if (oControl?.isA(\"sap.m.Link\")) {\n\t\t\treturn (oControl as Link).getText();\n\t\t} else if (oControl?.isA(\"sap.m.Label\")) {\n\t\t\treturn (oControl as Label).getText();\n\t\t} else if (oControl?.isA(\"sap.m.Text\")) {\n\t\t\treturn (oControl as Text).getText(false);\n\t\t} else if (oControl?.isA(\"sap.m.ObjectStatus\")) {\n\t\t\treturn (oControl as ObjectStatus).getText();\n\t\t} else if (oControl?.isA(\"sap.m.ObjectIdentifier\")) {\n\t\t\treturn (oControl as ObjectIdentifier).getTitle();\n\t\t} else if (oControl?.isA<Field>(\"sap.ui.mdc.Field\")) {\n\t\t\treturn oControl.getValue(); // FieldWrapper\n\t\t} else if (\n\t\t\toControl?.isA<DataPoint>(\"sap.fe.macros.internal.DataPoint\") ||\n\t\t\toControl?.isA<Email>(\"sap.fe.macros.contact.Email\") ||\n\t\t\toControl?.isA<Contact>(\"sap.fe.macros.contact.Contact\")\n\t\t) {\n\t\t\t// this is a BBv4 underneath, call the method on the BBV4\n\t\t\treturn oControl.getValue();\n\t\t} else {\n\t\t\tthrow new Error(\"getting value not yet implemented for this field type\");\n\t\t}\n\t}\n\n\tgetMainPropertyRelativePath(): string | undefined {\n\t\treturn this.mainPropertyRelativePath;\n\t}\n\n\t/**\n\t * Sets the current value of the field.\n\t * @param value\n\t * @public\n\t * @returns The current field reference\n\t */\n\tsetValue(value: boolean | string): Control {\n\t\tif (!this.content) {\n\t\t\treturn this;\n\t\t}\n\t\tlet control = FieldAPI.getControlInFieldWrapper(this.content);\n\t\tif (this.collaborationEnabled && control?.isA(\"sap.m.HBox\")) {\n\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\tcontrol = (control as HBox).getItems()[0];\n\t\t}\n\t\tif (control?.isA<CheckBox>(\"sap.m.CheckBox\")) {\n\t\t\tcontrol.setSelected(value as boolean);\n\t\t} else if (control?.isA<InputBase>(\"sap.m.InputBase\")) {\n\t\t\tcontrol.setValue(value as string);\n\t\t} else if (control?.isA<Text>(\"sap.m.Text\")) {\n\t\t\tcontrol.setText(value as string);\n\t\t} else if (control?.isA<MDCField>(\"sap.ui.mdc.Field\")) {\n\t\t\tcontrol.setValue(value);\n\t\t} else {\n\t\t\tthrow \"setting value not yet implemented for this field type\";\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the current enablement state of the field.\n\t * @public\n\t * @returns Boolean value with the enablement state\n\t */\n\tgetEnabled(): boolean {\n\t\tlet control = FieldAPI.getControlInFieldWrapper(this.content);\n\t\tif (control !== null && control !== undefined && !control?.isA(\"sap.m.Text\")) {\n\t\t\t//check needed for file wrapper which does not have a content\n\t\t\tif (this.collaborationEnabled && control.isA<HBox>(\"sap.m.HBox\")) {\n\t\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\t\tcontrol = control.getItems()[0];\n\t\t\t}\n\t\t\tif (control.isA<VBox>(\"sap.m.VBox\")) {\n\t\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\t\tcontrol = control.getItems()[0];\n\t\t\t}\n\n\t\t\t// we need to call the getProperty in the following examples\n\t\t\t// otherwise we end up in a max call stack size\n\t\t\tif (control.isA<CheckBox>(\"sap.m.CheckBox\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<InputBase>(\"sap.m.InputBase\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<Link>(\"sap.m.Link\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<Button>(\"sap.m.Button\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\t\treturn control.getProperty(\"active\");\n\t\t\t} else if (control.isA<ObjectIdentifier>(\"sap.m.ObjectIdentifier\")) {\n\t\t\t\treturn control.getProperty(\"titleActive\");\n\t\t\t} else if (control.isA<FormElementWrapper>(\"sap.fe.core.controls.FormElementWrapper\")) {\n\t\t\t\t// It is for a Draft Indicator\n\t\t\t\treturn true;\n\t\t\t} else if (control.isA<DataPoint>(\"sap.fe.macros.internal.DataPoint\")) {\n\t\t\t\treturn control.getEnabled();\n\t\t\t} else if (control.isA<Email>(\"sap.fe.macros.contact.Email\")) {\n\t\t\t\treturn control.getProperty(\"linkEnabled\");\n\t\t\t} else if (control.isA<Contact>(\"sap.fe.macros.contact.Contact\")) {\n\t\t\t\treturn control.getEnabled();\n\t\t\t} else if (control.isA<ExpandableText>(\"sap.m.ExpandableText\")) {\n\t\t\t\t// otherwise show more would be inactive\n\t\t\t\treturn true;\n\t\t\t} else if (control.isA<MDCField>(\"sap.ui.mdc.Field\")) {\n\t\t\t\tconst editMode = control.getEditMode();\n\t\t\t\t// The mdc field does not have a direct property \"enabled\", therefore we map\n\t\t\t\t// the internal disabled setting of the edit mode in this graceful pattern\n\t\t\t\treturn editMode !== FieldEditMode.Disabled;\n\t\t\t} else if (control.isA<FileWrapper>(\"sap.fe.macros.controls.FileWrapper\")) {\n\t\t\t\t// The file wrapper could contain a link or an avatar with a delete button,\n\t\t\t\t// we must ensure the enablement in both cases\n\t\t\t\treturn control.link ? control.link.getProperty(\"enabled\") : true;\n\t\t\t} else if (\n\t\t\t\tcontrol.isA(\"sap.fe.macros.controls.ConditionalWrapper\") ||\n\t\t\t\t(control as Control).isA<TextLink>(\"sap.fe.macros.controls.TextLink\")\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the current enablement state of the field.\n\t * @param enabled\n\t * @public\n\t * @returns The current field reference\n\t */\n\tsetEnabled(enabled: boolean): Control {\n\t\tlet control = FieldAPI.getControlInFieldWrapper(this.content);\n\t\tif (this.collaborationEnabled && control?.isA<HBox>(\"sap.m.HBox\")) {\n\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\tcontrol = control.getItems()[0];\n\t\t}\n\n\t\t// we need to call the setProperty in the following examples\n\t\t// otherwise we end up in a max call stack size\n\t\tif (control?.isA<CheckBox>(\"sap.m.CheckBox\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<InputBase>(\"sap.m.InputBase\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<Link>(\"sap.m.Link\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<Button>(\"sap.m.Button\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\treturn control.setProperty(\"active\", enabled);\n\t\t} else if (control?.isA<ObjectIdentifier>(\"sap.m.ObjectIdentifier\")) {\n\t\t\treturn control.setProperty(\"titleActive\", enabled);\n\t\t} else if (control?.isA<MDCField>(\"sap.ui.mdc.Field\")) {\n\t\t\t// The mdc field does not have a direct property \"enabled\", therefore we map\n\t\t\t// the enabled property to the respective disabled setting of the edit mode\n\t\t\t// with this graceful pattern\n\t\t\tlet editModeType;\n\t\t\tif (enabled) {\n\t\t\t\teditModeType = FieldEditMode.Editable;\n\t\t\t} else {\n\t\t\t\teditModeType = FieldEditMode.Disabled;\n\t\t\t}\n\t\t\tcontrol.setEditMode(editModeType);\n\t\t} else if (control?.isA<Email>(\"sap.fe.macros.contact.Email\")) {\n\t\t\tcontrol.setLinkEnabled(enabled);\n\t\t\treturn control;\n\t\t} else if (control?.isA<DataPoint>(\"sap.fe.macros.internal.DataPoint\")) {\n\t\t\tcontrol.setEnabled(enabled);\n\t\t} else {\n\t\t\tthrow \"setEnabled isn't implemented for this field type\";\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a message to the field.\n\t * @param [parameters] The parameters to create message\n\t * @param parameters.type Type of the message\n\t * @param parameters.message Message text\n\t * @param parameters.description Message description\n\t * @param parameters.persistent True if the message is persistent\n\t * @returns The id of the message\n\t * @public\n\t */\n\taddMessage(parameters: { type?: MessageType; message?: string; description?: string; persistent?: boolean }): string {\n\t\tconst msgManager = this.getMessageManager();\n\t\tconst oControl = FieldAPI.getControlInFieldWrapper(this.content);\n\n\t\tlet path; //target for oMessage\n\t\tif (oControl?.isA(\"sap.m.CheckBox\")) {\n\t\t\tpath = (oControl as CheckBox).getBinding(\"selected\")?.getResolvedPath();\n\t\t} else if (oControl?.isA(\"sap.m.InputBase\")) {\n\t\t\tpath = (oControl as InputBase).getBinding(\"value\")?.getResolvedPath();\n\t\t} else if (oControl?.isA<Field>(\"sap.ui.mdc.Field\")) {\n\t\t\tpath = oControl.getBinding(\"value\")!.getResolvedPath();\n\t\t}\n\n\t\tconst oMessage = new Message({\n\t\t\ttarget: path,\n\t\t\ttype: parameters.type,\n\t\t\tmessage: parameters.message,\n\t\t\tprocessor: oControl?.getModel(),\n\t\t\tdescription: parameters.description,\n\t\t\tpersistent: parameters.persistent\n\t\t});\n\n\t\tmsgManager.addMessages(oMessage);\n\t\treturn oMessage.getId();\n\t}\n\n\t/**\n\t * Removes a message from the field.\n\t * @param id The id of the message\n\t * @public\n\t */\n\tremoveMessage(id: string): void {\n\t\tconst msgManager = this.getMessageManager();\n\t\tconst arr = msgManager.getMessageModel().getData();\n\t\tconst result = arr.find((e: Message) => e?.getId?.() === id);\n\t\tif (result) {\n\t\t\tmsgManager.removeMessages(result);\n\t\t}\n\t}\n\n\tgetMessageManager(): Messaging {\n\t\treturn Messaging;\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tif (!this.content) {\n\t\t\tthis.content = this.createContent();\n\t\t}\n\t}\n\n\tcreateContent(): Control {\n\t\tconst metaContextPath = this.getMetaPathObject(this.metaPath, this.contextPath);\n\t\tconst owner = this._getOwner();\n\t\tconst odataMetaModel = owner?.getMetaModel();\n\t\tconst contextPath = odataMetaModel?.getMetaContext(this.contextPath ?? (this.getOwnerContextPath() as string));\n\t\tlet metaPath;\n\t\tif (metaContextPath) {\n\t\t\tmetaPath = odataMetaModel?.createBindingContext(metaContextPath.getPath()) as Context | undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst inputFieldProperties = this.getPropertyBag() as InputFieldBlockProperties;\n\t\t\tinputFieldProperties.onLiveChange = this.hasListeners(\"liveChange\") ? \"Something\" : undefined;\n\t\t\tconst preparedProperties = setUpField(\n\t\t\t\tinputFieldProperties,\n\t\t\t\t{} as TemplateProcessorSettings,\n\t\t\t\towner?.preprocessorContext as XMLPreprocessorContext,\n\t\t\t\tmetaPath,\n\t\t\t\tcontextPath\n\t\t\t);\n\t\t\tpreparedProperties.eventHandlers.change = this.handleChange.bind(this) as unknown as EventHandler;\n\t\t\tpreparedProperties.eventHandlers.liveChange = this.handleLiveChange.bind(this);\n\t\t\tpreparedProperties.eventHandlers.validateFieldGroup = this.onValidateFieldGroup.bind(this);\n\t\t\tthis.content = FieldStructure.getFieldStructureTemplate(preparedProperties) as unknown as Control;\n\t\t} catch (e) {\n\t\t\tif (e instanceof Error) {\n\t\t\t\tMessageToast.show(e.message + \" in createContent of FieldAPI\");\n\t\t\t} else {\n\t\t\t\tMessageToast.show(\"An unknown error occurred\");\n\t\t\t}\n\t\t}\n\t\treturn this.content;\n\t}\n\n\tgetPropertyBag(): PropertiesOf<this> {\n\t\tconst settings: PropertiesOf<this> = {} as PropertiesOf<this>;\n\t\tconst properties = this.getMetadata().getAllProperties();\n\t\tconst aggregations = this.getMetadata().getAllAggregations();\n\t\tfor (const propertyName in properties) {\n\t\t\tconst currentPropertyValue = this.getProperty(propertyName);\n\t\t\tsettings[propertyName as keyof PropertiesOf<this>] = currentPropertyValue;\n\t\t}\n\t\tfor (const aggregationName in aggregations) {\n\t\t\tconst aggregationContent = this.getAggregation(aggregationName);\n\t\t\tif (Array.isArray(aggregationContent)) {\n\t\t\t\tconst childrenArray = [];\n\t\t\t\tfor (const managedObject of aggregationContent) {\n\t\t\t\t\tif (managedObject.isA<BuildingBlockObjectProperty>(\"sap.fe.macros.controls.BuildingBlockObjectProperty\")) {\n\t\t\t\t\t\tchildrenArray.push(managedObject.getPropertyBag());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsettings[aggregationName as keyof PropertiesOf<this>] = childrenArray;\n\t\t\t} else if (aggregationContent) {\n\t\t\t\tif (aggregationContent.isA<BuildingBlockObjectProperty>(\"sap.fe.macros.controls.BuildingBlockObjectProperty\")) {\n\t\t\t\t\tsettings[aggregationName as keyof PropertiesOf<this>] = aggregationContent.getPropertyBag();\n\t\t\t\t} else {\n\t\t\t\t\tsettings[aggregationName as keyof PropertiesOf<this>] = aggregationContent.getId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n}\n\nexport default FieldAPI;\n"],"mappings":"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","ignoreList":[]}