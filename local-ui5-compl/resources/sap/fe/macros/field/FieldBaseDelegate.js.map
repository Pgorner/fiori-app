{"version":3,"file":"FieldBaseDelegate.js","names":["Object","assign","FieldBaseDelegate","apiVersion","initializeTypeFromBinding","field","type","value","result","isA","Array","isArray","length","undefined","formatValue","bTypeInitialized","mCustomUnits","initializeInternalUnitType","typeInitialization","enhanceValueForUnit","values","push","getDefaultValueHelpDelegate","_field","name","payload","getTypeMap","TypeMap","_getValueListParameter","valueListInfo","propertyName","Parameters","filter","entry","LocalDataProperty","$PropertyPath","_getFilter","valueList","valueHelpProperty","keyValue","valuehelpPayload","valuehelpConditionPayload","bindingContext","filters","parameters","parameter","$Type","ValueListProperty","filterValue","isActionParameterDialog","apdFieldPath","apdField","Element","getElementById","getValue","sourcePath","conditionPayload","getObject","Filter","path","operator","value1","getItemForValue","valueHelp","config","checkDescription","getPayload","descriptionPath","valueHelpDescriptionPath","maxLength","valueLength","toString","getDescription","async","key","_conditionIn","_conditionOut","_ConditionModel","_conditionModelName","control","_type","getDisplay","includes","retrieveTextFromValueList","isFilterField","dataModel","getModel","metaModel","getMetaModel","CommonUtils","getAppComponent","valueHelpQualifier","propertyPath","propertyDescriptionPath","textProperty","requestValueListInfo","keys","valueHelpParameters","this","Error","valueListModel","$model","textAnnotation","CollectionPath","$Path","listBinding","bindList","$select","contexts","requestContexts","lastIndex","lastIndexOf","sideEffectPath","substring","sideEffectsService","getSideEffectsService","requestSideEffects","Log","warning","externalIdPath","externalIdFullPath","replace","externalIdName","externalIdDescriptionPath","error","status","message","String","msg"],"sources":["./FieldBaseDelegate.ts"],"sourcesContent":["import { CommonAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport Log from \"sap/base/Log\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { AnnotationValueListType, ValueHelpPayload } from \"sap/fe/macros/internal/valuehelp/ValueListHelper\";\nimport type Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport type Field from \"sap/ui/mdc/Field\";\nimport type ValueHelp from \"sap/ui/mdc/ValueHelp\";\nimport type { ItemForValueConfiguration } from \"sap/ui/mdc/ValueHelp\";\nimport type ConditionModel from \"sap/ui/mdc/condition/ConditionModel\";\nimport type FieldBase from \"sap/ui/mdc/field/FieldBase\";\nimport FieldBaseDelegate from \"sap/ui/mdc/field/FieldBaseDelegate\";\nimport TypeMap from \"sap/ui/mdc/odata/v4/TypeMap\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type SimpleType from \"sap/ui/model/SimpleType\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { ConditionPayloadMap, ConditionPayloadType } from \"../valuehelp/ValueHelpDelegate\";\nexport type FieldPayload = {\n\tretrieveTextFromValueList?: boolean;\n\tisFilterField?: boolean;\n};\n\nexport type Value = string | Date | number | boolean | undefined | null;\n\nexport type TypeInitialization = {\n\tbTypeInitialized?: boolean;\n\tmCustomUnits?: string;\n};\n\nexport type Config = {\n\tvalue: Value;\n\tparsedValue: Value;\n\tbindingContext: Context;\n\tcheckKey: boolean;\n\tcheckDescription: boolean;\n\tconditionModel?: ConditionModel;\n\tconditionModelName?: string;\n\tcontrol?: object;\n};\n\nexport default Object.assign({}, FieldBaseDelegate, {\n\tapiVersion: 2,\n\n\t/**\n\t * If the <code>Field</code> control is used, the used data type might come from the binding.\n\t * In V4-unit or currency case it might need to be formatted once.\n\t * To initialize the internal type later on, the currencies must be returned.\n\t * @param field The <code>Field</code> instance\n\t * @param type Type from binding\n\t * @param value Given value\n\t * @returns Information needed to initialize internal type (needs to set bTypeInitialized to true if initialized)\n\t */\n\tinitializeTypeFromBinding: function (field: Field, type: SimpleType | undefined, value: Value | Value[]) {\n\t\t// V4 Unit and Currency types have a map with valid units and create an internal customizing for it.\n\t\t// The Field needs to keep this customizing logic when creating the internal type.\n\t\t// (As external RAW binding is used there is no formatting on parsing.)\n\n\t\tconst result: TypeInitialization = {};\n\t\tif (\n\t\t\ttype &&\n\t\t\ttype.isA([\"sap.ui.model.odata.type.Unit\", \"sap.ui.model.odata.type.Currency\"]) &&\n\t\t\tArray.isArray(value) &&\n\t\t\tvalue.length > 2 &&\n\t\t\tvalue[2] !== undefined\n\t\t) {\n\t\t\t// format once to set internal customizing. Allow null as valid values for custom units\n\t\t\ttype.formatValue(value, \"string\");\n\t\t\tresult.bTypeInitialized = true;\n\t\t\tresult.mCustomUnits = value[2] as string; // TODO: find a better way to provide custom units to internal type\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * This function initializes the unit type.\n\t * If the <code>Field</code> control is used, the used data type might come from the binding.\n\t * If the type is a V4 unit or currency, it might need to be formatted once.\n\t * @param field The <code>Field</code> instance\n\t * @param type Type from binding\n\t * @param typeInitialization Information needed to initialize internal type\n\t */\n\tinitializeInternalUnitType: function (field: Field, type: SimpleType, typeInitialization?: TypeInitialization) {\n\t\tif (typeInitialization?.mCustomUnits !== undefined) {\n\t\t\t// if already initialized initialize new type too.\n\t\t\ttype.formatValue([null, null, typeInitialization.mCustomUnits], \"string\");\n\t\t}\n\t},\n\n\t/**\n\t * This function enhances the value with unit or currency information if needed by the data type.\n\t * @param field The <code>Field</code> instance\n\t * @param  values Values\n\t * @param  typeInitialization Information needed to initialize internal type\n\t * @returns Values\n\t */\n\tenhanceValueForUnit: function (field: Field, values: Value[], typeInitialization?: TypeInitialization) {\n\t\tif (typeInitialization?.bTypeInitialized === true && values.length === 2) {\n\t\t\tvalues.push(typeInitialization.mCustomUnits);\n\t\t\treturn values;\n\t\t}\n\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * This function returns which <code>ValueHelpDelegate</code> is used\n\t * if a default field help (for example, for defining conditions in </code>FilterField</code>)\n\t * is created.\n\t * @param _field The <code>Field</code> instance\n\t * @returns Delegate object with name and payload\n\t */\n\tgetDefaultValueHelpDelegate: function (_field: Field) {\n\t\treturn { name: \"sap/ui/mdc/odata/v4/ValueHelpDelegate\", payload: {} };\n\t},\n\n\tgetTypeMap: function (_field: Field) {\n\t\treturn TypeMap;\n\t},\n\n\t/**\n\t * Determine all parameters in a value help that use a specific property.\n\t * @param valueListInfo Value list info\n\t * @param propertyName Name of the property\n\t * @returns List of all found parameters\n\t */\n\t_getValueListParameter: function (valueListInfo: AnnotationValueListType, propertyName: string) {\n\t\t//determine path to value list property\n\t\treturn valueListInfo.Parameters.filter(function (entry) {\n\t\t\tif (entry.LocalDataProperty) {\n\t\t\t\treturn entry.LocalDataProperty.$PropertyPath === propertyName;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * Build filters for each relevant parameter.\n\t * @param valueList Value list info\n\t * @param propertyName Name of the property\n\t * @param valueHelpProperty Name of the value help property\n\t * @param keyValue Value of the property\n\t * @param valuehelpPayload Payload of the value help\n\t * @param valuehelpConditionPayload Additional condition information for this key\n\t * @param bindingContext BindingContext of the field\n\t * @returns List of filters\n\t */\n\t_getFilter: function (\n\t\tvalueList: AnnotationValueListType,\n\t\tpropertyName: string,\n\t\tvalueHelpProperty: string,\n\t\tkeyValue: string,\n\t\tvaluehelpPayload: ValueHelpPayload,\n\t\tvaluehelpConditionPayload: ConditionPayloadType[] | undefined,\n\t\tbindingContext?: Context\n\t) {\n\t\tconst filters = [];\n\t\tconst parameters = valueList.Parameters.filter(function (parameter) {\n\t\t\treturn (\n\t\t\t\tparameter.$Type === CommonAnnotationTypes.ValueListParameterIn ||\n\t\t\t\tparameter.$Type === CommonAnnotationTypes.ValueListParameterInOut ||\n\t\t\t\t(parameter.LocalDataProperty?.$PropertyPath === propertyName && parameter.ValueListProperty === valueHelpProperty)\n\t\t\t);\n\t\t});\n\t\tfor (const parameter of parameters) {\n\t\t\tlet filterValue;\n\t\t\tif (parameter.LocalDataProperty?.$PropertyPath === propertyName) {\n\t\t\t\tfilterValue = keyValue;\n\t\t\t} else if (valuehelpPayload?.isActionParameterDialog === true) {\n\t\t\t\tconst apdFieldPath = `APD_::${parameter.LocalDataProperty?.$PropertyPath}`;\n\t\t\t\tconst apdField = Element.getElementById(apdFieldPath) as Field;\n\t\t\t\tfilterValue = apdField?.getValue();\n\t\t\t} else if (valuehelpConditionPayload !== undefined) {\n\t\t\t\tconst sourcePath = parameter.LocalDataProperty?.$PropertyPath;\n\t\t\t\tconst conditionPayload = valuehelpConditionPayload?.[0];\n\t\t\t\tfilterValue = sourcePath && conditionPayload?.[sourcePath];\n\t\t\t} else if (bindingContext) {\n\t\t\t\t// if the value help is not used try getting the filter value from the binding context\n\t\t\t\tconst sourcePath = parameter.LocalDataProperty?.$PropertyPath;\n\t\t\t\tfilterValue = bindingContext.getObject(sourcePath);\n\t\t\t}\n\t\t\t/* Add value to the filter for the text determination */\n\t\t\tif (filterValue !== null && filterValue !== undefined) {\n\t\t\t\tfilters.push(new Filter({ path: parameter.ValueListProperty, operator: \"EQ\", value1: filterValue }));\n\t\t\t}\n\t\t}\n\t\treturn filters;\n\t},\n\n\t/**\n\t * Determines the key, description, and payload of a user input.\n\t * @param field The <code>Field</code> instance\n\t * @param valueHelp Value help instance\n\t * @param config Configuration Object\n\t * @returns Object containing description, key, and payload. If it is not available right now (must be requested), a <code>Promise</code> is returned\n\t */\n\tgetItemForValue: function (field: Field, valueHelp: ValueHelp, config: ItemForValueConfiguration) {\n\t\t//BCP: 2270162887 . The MDC field should not try to get the item when the field is emptied\n\t\t// JIRA: FIORITECHP1-25361 - Improve the type-ahead behavior for missinng text annotation or constraints violations of the existing text annotation\n\t\tif (config.value === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\tif (config.checkDescription) {\n\t\t\tconst valuehelpPayload = valueHelp.getPayload() as ValueHelpPayload;\n\t\t\tconst descriptionPath = valuehelpPayload.valueHelpDescriptionPath;\n\t\t\tconst maxLength = valuehelpPayload?.maxLength;\n\t\t\tconst valueLength = config.value !== null && config.value !== undefined ? config.value.toString().length : 0;\n\t\t\tif (descriptionPath === \"\") {\n\t\t\t\t// In case the property value help collection has no text annotation (descriptionPath is empty) the description check shouldn´t occur.\n\t\t\t\t// In such a case the method getDescription will be called by MDC and within this method a SideEffect is requested to retrieve the text from the text property of the main entity\n\t\t\t\tconfig.checkDescription = false;\n\t\t\t} else if (maxLength !== undefined && valueLength > maxLength) {\n\t\t\t\t//value length is > text proeperty length constraint\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn FieldBaseDelegate.getItemForValue(field, valueHelp, config);\n\t},\n\n\t/**\n\t * Determines the description for a given key.\n\t * @param field The <code>Field</code> instance\n\t * @param valueHelp Field help assigned to the <code>Field</code> or <code>FilterField</code> control\n\t * @param key Key value of the description\n\t * @param _conditionIn In parameters for the key (no longer supported)\n\t * @param _conditionOut Out parameters for the key (no longer supported)\n\t * @param bindingContext BindingContext <code>BindingContext</code> of the checked field. Inside a table, the <code>ValueHelp</code> element can be connected to a different row\n\t * @param _ConditionModel ConditionModel</code>, if bound to one\n\t * @param _conditionModelName Name of the <code>ConditionModel</code>, if bound to one\n\t * @param conditionPayload Additional context information for this key\n\t * @param control Instance of the calling control\n\t * @param _type Type of the value\n\t * @returns Description for the key or object containing a description, key and payload. If the description is not available right away (it must be requested), a <code>Promise</code> is returned\n\t */\n\tgetDescription: async function (\n\t\tfield: Field | null,\n\t\tvalueHelp: ValueHelp,\n\t\tkey: string,\n\t\t_conditionIn: object,\n\t\t_conditionOut: object,\n\t\tbindingContext: Context | undefined,\n\t\t_ConditionModel: ConditionModel,\n\t\t_conditionModelName: string,\n\t\tconditionPayload: ConditionPayloadMap,\n\t\tcontrol: Control,\n\t\t_type: unknown\n\t) {\n\t\t//JIRA: FIORITECHP1-22022 . The MDC field should not  tries to determine description with the initial GET of the data.\n\t\t// it should rely on the data we already received from the backend\n\t\t// But The getDescription function is also called in the FilterField case if a variant is loaded.\n\t\t// As the description text could be language dependent it is not stored in the variant, so it needs to be read on rendering.\n\n\t\tlet payload = field?.getPayload() as FieldPayload;\n\n\t\t/* Retrieve text from value help, if value was set by out-parameter (BCP 2270160633) */\n\t\tif (!payload && (control as FieldBase)?.getDisplay().includes(\"Description\")) {\n\t\t\tpayload = {\n\t\t\t\tretrieveTextFromValueList: true\n\t\t\t};\n\t\t}\n\n\t\tif (payload?.retrieveTextFromValueList === true || payload?.isFilterField === true) {\n\t\t\tconst dataModel = valueHelp.getModel() as ODataModel | undefined;\n\t\t\tconst metaModel = dataModel\n\t\t\t\t? dataModel.getMetaModel()\n\t\t\t\t: CommonUtils.getAppComponent(valueHelp as unknown as Control)\n\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t.getMetaModel();\n\t\t\tconst valuehelpPayload = valueHelp.getPayload() as ValueHelpPayload;\n\t\t\tconst valuehelpConditionPayload = conditionPayload?.[valuehelpPayload.valueHelpQualifier];\n\t\t\tconst propertyPath = valuehelpPayload.propertyPath;\n\t\t\tconst propertyDescriptionPath = valuehelpPayload?.propertyDescriptionPath;\n\t\t\tlet textProperty: string;\n\n\t\t\ttry {\n\t\t\t\t/* Request value help metadata */\n\t\t\t\tconst valueListInfo = await metaModel.requestValueListInfo(propertyPath, true, bindingContext);\n\n\t\t\t\tconst propertyName = metaModel.getObject(`${propertyPath}@sapui.name`) as string;\n\t\t\t\t// take the first value list annotation - alternatively take the one without qualifier or the first one\n\t\t\t\tconst valueList = valueListInfo[Object.keys(valueListInfo)[0]];\n\t\t\t\tconst valueHelpParameters = this._getValueListParameter(valueList, propertyName);\n\t\t\t\tconst valueHelpProperty = valueHelpParameters?.[0]?.ValueListProperty;\n\t\t\t\tif (!valueHelpProperty) {\n\t\t\t\t\tthrow Error(`Inconsistent value help annotation for ${propertyName}`);\n\t\t\t\t}\n\t\t\t\t// get text annotation for this value list property\n\t\t\t\tconst valueListModel = valueList.$model;\n\t\t\t\tconst textAnnotation = valueListModel\n\t\t\t\t\t.getMetaModel()\n\t\t\t\t\t.getObject(`/${valueList.CollectionPath}/${valueHelpProperty}@com.sap.vocabularies.Common.v1.Text`);\n\t\t\t\tif (textAnnotation && textAnnotation.$Path) {\n\t\t\t\t\ttextProperty = textAnnotation.$Path;\n\t\t\t\t\t/* Build the filter for the relevant parameters */\n\t\t\t\t\tconst filters = this._getFilter(\n\t\t\t\t\t\tvalueList,\n\t\t\t\t\t\tpropertyName,\n\t\t\t\t\t\tvalueHelpProperty,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvaluehelpPayload,\n\t\t\t\t\t\tvaluehelpConditionPayload,\n\t\t\t\t\t\tbindingContext\n\t\t\t\t\t);\n\t\t\t\t\tconst listBinding = valueListModel.bindList(`/${valueList.CollectionPath}`, undefined, undefined, filters, {\n\t\t\t\t\t\t$select: textProperty\n\t\t\t\t\t});\n\t\t\t\t\t/* Request description for given key from value list entity */\n\t\t\t\t\tconst contexts = await listBinding.requestContexts(0, 2);\n\t\t\t\t\treturn contexts.length ? contexts[0].getObject(textProperty) : undefined;\n\t\t\t\t} else if (bindingContext !== undefined && propertyDescriptionPath) {\n\t\t\t\t\tconst lastIndex = propertyDescriptionPath.lastIndexOf(\"/\");\n\t\t\t\t\tconst sideEffectPath = lastIndex > 0 ? propertyDescriptionPath.substring(0, lastIndex) : propertyDescriptionPath;\n\t\t\t\t\tconst sideEffectsService = CommonUtils.getAppComponent(valueHelp as unknown as Control).getSideEffectsService();\n\t\t\t\t\tawait sideEffectsService.requestSideEffects([sideEffectPath], bindingContext);\n\t\t\t\t\tLog.warning(\n\t\t\t\t\t\t`RequestSideEffects is triggered because the text annotation for ${valueHelpProperty} is not defined at the CollectionPath of the value help`\n\t\t\t\t\t);\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\t/* EXTERNAlID */\n\t\t\t\t\tconst externalIdPath = metaModel?.getObject(\n\t\t\t\t\t\t`${valuehelpPayload.propertyPath}@com.sap.vocabularies.Common.v1.ExternalID`\n\t\t\t\t\t)?.$Path;\n\t\t\t\t\tif (externalIdPath) {\n\t\t\t\t\t\tconst externalIdFullPath = valuehelpPayload.propertyPath.replace(propertyName, externalIdPath);\n\t\t\t\t\t\tconst externalIdName = metaModel.getObject(`${externalIdFullPath}@sapui.name`);\n\t\t\t\t\t\tconst externalIdDescriptionPath = metaModel?.getObject(`${externalIdFullPath}@com.sap.vocabularies.Common.v1.Text`)\n\t\t\t\t\t\t\t?.$Path;\n\t\t\t\t\t\tconst filters = [];\n\t\t\t\t\t\tfilters.push(new Filter({ path: externalIdName, operator: \"EQ\", value1: key }));\n\t\t\t\t\t\tconst listBinding = valueListModel.bindList(`/${valueList.CollectionPath}`, undefined, undefined, filters, {\n\t\t\t\t\t\t\t$select: `${externalIdName},${externalIdDescriptionPath}`\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst contexts = await listBinding.requestContexts(0, 2);\n\t\t\t\t\t\tif (contexts.length) {\n\t\t\t\t\t\t\treturn contexts[0].getObject(externalIdDescriptionPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tLog.error(`Text Annotation for ${valueHelpProperty} is not defined`);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconst status = error ? (error as XMLHttpRequest).status : undefined;\n\t\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\t\tconst msg = status === 404 ? `Metadata not found (${status}) for value help of property ${propertyPath}` : message;\n\t\t\t\tLog.error(msg);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n});\n"],"mappings":"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","ignoreList":[]}