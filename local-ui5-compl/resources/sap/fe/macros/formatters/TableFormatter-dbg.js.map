{"version":3,"names":["getMessagetypeOrder","messageType","validateCreationRowFields","fieldValidityObject","fieldKeys","Object","keys","length","every","key","__functionName","getErrorStatusTextVisibilityFormatter","semanticKeyHasDraftIndicator","aFilteredMessages","columnName","isSemanticKeyInFieldGroup","statusVisibility","sCurrentContextPath","getBindingContext","getPath","undefined","forEach","oMessage","getType","getTargets","indexOf","rowHighlighting","criticalityValue","hasActiveEntity","isActiveEntity","isDraftMode","contextPath","isInactive","iHighestCriticalityValue","message","MessageType","Error","Warning","Success","Information","None","values","includes","Log","error","isNewObject","navigatedRow","deepestPath","sPath","getColumnWidth","editMode","isPropertiesCacheAvailable","propertyName","useRemUnit","arguments","widthIncludingColumnHeader","isSortableColumn","isColumnRequired","table","getParent","properties","DelegateUtil","getCachedProperties","property","find","prop","name","columnWidth","TableSizeHelper","getMDCColumnWidthFromProperty","unitOrTimezone","exportSettings","unit","timezone","SizeHelper","getButtonWidth","FieldEditMode","Editable","typeConfig","baseType","getColumnWidthForValueHelpTable","isTargetSmallDevice","isSmallDevice","CommonUtils","withUnit","tableFormatter","call","Display","isRatingIndicator","oControl","isA","vContentDisplay","Array","isArray","getContentDisplay","_updateStyleClassForRatingIndicator","fieldWrapper","last","vContentEdit","getContentEdit","addStyleClass","removeStyleClass","getVBoxVisibility","aItems","getItems","bLastElementFound","_len","args","_key","index","sName","hasOwnProperty","_len2","oArgs","_key2","apply","ObjectPath","set"],"sourceRoot":".","sources":["TableFormatter.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport SizeHelper from \"sap/fe/core/helpers/SizeHelper\";\nimport DelegateUtil from \"sap/fe/macros/DelegateUtil\";\nimport TableSizeHelper from \"sap/fe/macros/table/TableSizeHelper\";\nimport type Table from \"sap/m/Table\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type MDCTable from \"sap/ui/mdc/Table\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Column from \"sap/ui/mdc/table/Column\";\nimport type FieldWrapper from \"../controls/FieldWrapper\";\n\nconst getMessagetypeOrder = function (messageType: string): number {\n\tswitch (messageType) {\n\t\tcase \"Error\":\n\t\t\treturn 4;\n\t\tcase \"Warning\":\n\t\t\treturn 3;\n\t\tcase \"Information\":\n\t\t\treturn 2;\n\t\tcase \"None\":\n\t\t\treturn 1;\n\t\tdefault:\n\t\t\treturn -1;\n\t}\n};\n\n/**\n * Gets the validity of creation row fields.\n * @param fieldValidityObject Object holding the fields\n * @returns `true` if all the fields in the creation row are valid, `false` otherwise\n */\nconst validateCreationRowFields = function (fieldValidityObject?: Record<string, { validity: boolean }>): boolean {\n\tif (!fieldValidityObject) {\n\t\treturn false;\n\t}\n\tconst fieldKeys = Object.keys(fieldValidityObject);\n\treturn (\n\t\tfieldKeys.length > 0 &&\n\t\tfieldKeys.every(function (key) {\n\t\t\treturn fieldValidityObject[key][\"validity\"];\n\t\t})\n\t);\n};\nvalidateCreationRowFields.__functionName = \"sap.fe.macros.formatters.TableFormatter#validateCreationRowFields\";\n\n/**\n * @param this The object status control.\n * @param semanticKeyHasDraftIndicator The property name of the draft indicator.\n * @param aFilteredMessages Array of messages.\n * @param columnName\n * @param isSemanticKeyInFieldGroup Flag which says if semantic key is a part of field group.\n * @returns The value for the visibility property of the object status\n */\nconst getErrorStatusTextVisibilityFormatter = function (\n\tthis: ManagedObject,\n\tsemanticKeyHasDraftIndicator: string,\n\taFilteredMessages: Message[],\n\tcolumnName: string,\n\tisSemanticKeyInFieldGroup?: boolean\n): boolean {\n\tlet statusVisibility = false;\n\tif (aFilteredMessages && aFilteredMessages.length > 0 && (isSemanticKeyInFieldGroup || columnName === semanticKeyHasDraftIndicator)) {\n\t\tconst sCurrentContextPath = this.getBindingContext() ? this.getBindingContext()?.getPath() : undefined;\n\t\taFilteredMessages.forEach((oMessage) => {\n\t\t\tif (oMessage.getType() === \"Error\" && sCurrentContextPath && oMessage.getTargets()[0].indexOf(sCurrentContextPath) === 0) {\n\t\t\t\tstatusVisibility = true;\n\t\t\t\treturn statusVisibility;\n\t\t\t}\n\t\t});\n\t}\n\treturn statusVisibility;\n};\ngetErrorStatusTextVisibilityFormatter.__functionName = \"sap.fe.macros.formatters.TableFormatter#getErrorStatusTextVisibilityFormatter\";\n\n/**\n * Method to calculate the row highlighting based on the criticality value and the messages.\n * @param criticalityValue\n * @param aFilteredMessages\n * @param hasActiveEntity\n * @param isActiveEntity\n * @param isDraftMode\n * @param contextPath\n * @param isInactive\n */\nconst rowHighlighting = function (\n\tthis: ManagedObject,\n\tcriticalityValue: string | number,\n\taFilteredMessages: Message[],\n\thasActiveEntity: boolean,\n\tisActiveEntity: boolean,\n\tisDraftMode: string,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tcontextPath: string,\n\tisInactive: boolean | undefined\n): MessageType {\n\tlet iHighestCriticalityValue = -1;\n\tif (aFilteredMessages && aFilteredMessages.length > 0) {\n\t\tconst sCurrentContextPath = this.getBindingContext()?.getPath();\n\t\taFilteredMessages.forEach((message) => {\n\t\t\tif (\n\t\t\t\tsCurrentContextPath &&\n\t\t\t\tmessage.getTargets()[0].indexOf(sCurrentContextPath) === 0 &&\n\t\t\t\tiHighestCriticalityValue < getMessagetypeOrder(message.getType())\n\t\t\t) {\n\t\t\t\tiHighestCriticalityValue = getMessagetypeOrder(message.getType());\n\t\t\t\tcriticalityValue = message.getType();\n\t\t\t}\n\t\t});\n\t}\n\tif (typeof criticalityValue !== \"string\") {\n\t\tswitch (criticalityValue) {\n\t\t\tcase 1:\n\t\t\t\tcriticalityValue = MessageType.Error;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcriticalityValue = MessageType.Warning;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcriticalityValue = MessageType.Success;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tcriticalityValue = MessageType.Information;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcriticalityValue = MessageType.None;\n\t\t}\n\t}\n\n\tif (!(Object.values(MessageType) as string[]).includes(criticalityValue)) {\n\t\tLog.error(`'${criticalityValue}' isn't a valid value for a row highlight.`);\n\t\treturn MessageType.None;\n\t}\n\n\t// If we have calculated a criticality <> None, return it\n\tif (criticalityValue !== MessageType.None) {\n\t\treturn criticalityValue as MessageType;\n\t}\n\n\t// If not, we set criticality to 'Information' for newly created rows in Draft mode, and keep 'None' otherwise\n\tconst isNewObject = !hasActiveEntity && !isActiveEntity && !isInactive;\n\treturn isDraftMode === \"true\" && isNewObject ? MessageType.Information : MessageType.None;\n};\nrowHighlighting.__functionName = \"sap.fe.macros.formatters.TableFormatter#rowHighlighting\";\n\nconst navigatedRow = function (this: ManagedObject, deepestPath: string): boolean {\n\tconst sPath = this.getBindingContext()?.getPath();\n\tif (sPath && deepestPath) {\n\t\treturn deepestPath.indexOf(sPath) === 0;\n\t} else {\n\t\treturn false;\n\t}\n};\nnavigatedRow.__functionName = \"sap.fe.macros.formatters.TableFormatter#navigatedRow\";\n\n/**\n * Method to calculate the width of an MDCColumn based on the property definition.\n * @param this The MDCColumn object\n * @param editMode The EditMode of the table\n * @param isPropertiesCacheAvailable Indicates if the properties cache is available\n * @param propertyName The name of the property we want to calculate the width\n * @param useRemUnit Indicates if the rem unit must be concatenated with the column width result\n * @param widthIncludingColumnHeader Indicates if the column header should be a part of the width calculation.\n * @param isSortableColumn Indicates if the column is sortable\n * @param isColumnRequired\n * @returns The width of the column\n */\nconst getColumnWidth = function (\n\tthis: Column,\n\teditMode: FieldEditMode,\n\tisPropertiesCacheAvailable: boolean,\n\tpropertyName: string,\n\tuseRemUnit = true,\n\twidthIncludingColumnHeader = false,\n\tisSortableColumn = false,\n\tisColumnRequired = false\n): string | null | number {\n\tif (!isPropertiesCacheAvailable) {\n\t\treturn null;\n\t}\n\tconst table = this.getParent() as MDCTable;\n\tconst properties = DelegateUtil.getCachedProperties(table);\n\tif (!properties) return null;\n\tconst property = properties.find((prop) => prop.name === propertyName);\n\tif (!property) return null;\n\n\tlet columnWidth = TableSizeHelper.getMDCColumnWidthFromProperty(\n\t\tproperty,\n\t\tproperties,\n\t\twidthIncludingColumnHeader,\n\t\tisSortableColumn,\n\t\tisColumnRequired\n\t);\n\tconst unitOrTimezone = property.exportSettings?.unit || property.exportSettings?.timezone;\n\tcolumnWidth += unitOrTimezone ? SizeHelper.getButtonWidth(unitOrTimezone) : 0;\n\n\tif (editMode === FieldEditMode.Editable) {\n\t\tswitch (property.typeConfig?.baseType) {\n\t\t\tcase \"Date\":\n\t\t\tcase \"Time\":\n\t\t\tcase \"DateTime\":\n\t\t\t\tcolumnWidth += 2.8;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\tif (useRemUnit) {\n\t\treturn columnWidth + \"rem\";\n\t}\n\treturn columnWidth;\n};\ngetColumnWidth.__functionName = \"sap.fe.macros.formatters.TableFormatter#getColumnWidth\";\n\n/**\n * Method to calculate the width of an MDCColumn for valueHelp the table.\n * @param this The MDCColumn object\n * @param isPropertiesCacheAvailable Indicates if the properties cache is available\n * @param propertyName The name of the property we want to calculate the width\n * @param isTargetSmallDevice Indicates the current device has a small device\n * @param widthIncludingColumnHeader\n * @returns The width of the column\n */\nconst getColumnWidthForValueHelpTable = function (\n\tthis: Column,\n\tisPropertiesCacheAvailable: boolean,\n\tpropertyName: string,\n\tisTargetSmallDevice: boolean,\n\twidthIncludingColumnHeader = false\n): null | number {\n\tconst isSmallDevice = CommonUtils.isSmallDevice();\n\tconst withUnit = !isSmallDevice;\n\n\treturn (isSmallDevice && isTargetSmallDevice) || (!isSmallDevice && !isTargetSmallDevice)\n\t\t? (tableFormatter.getColumnWidth.call(\n\t\t\t\tthis,\n\t\t\t\tFieldEditMode.Display,\n\t\t\t\tisPropertiesCacheAvailable,\n\t\t\t\tpropertyName,\n\t\t\t\twithUnit,\n\t\t\t\twidthIncludingColumnHeader\n\t\t  ) as null | number)\n\t\t: null;\n};\ngetColumnWidthForValueHelpTable.__functionName = \"sap.fe.macros.formatters.TableFormatter#getColumnWidthForValueHelpTable\";\n\ntype FieldWrapperFixed = FieldWrapper & { getContentDisplay: Function; getContentEdit: Function };\nfunction isRatingIndicator(oControl: FieldWrapperFixed): boolean {\n\tif (oControl.isA(\"sap.fe.macros.controls.FieldWrapper\")) {\n\t\tconst vContentDisplay = Array.isArray(oControl.getContentDisplay())\n\t\t\t? oControl.getContentDisplay()[0]\n\t\t\t: oControl.getContentDisplay();\n\t\tif (vContentDisplay && vContentDisplay.isA(\"sap.m.RatingIndicator\")) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction _updateStyleClassForRatingIndicator(fieldWrapper: FieldWrapperFixed, last: boolean): void {\n\tconst vContentDisplay = Array.isArray(fieldWrapper.getContentDisplay())\n\t\t? fieldWrapper.getContentDisplay()[0]\n\t\t: fieldWrapper.getContentDisplay();\n\tconst vContentEdit = Array.isArray(fieldWrapper.getContentEdit()) ? fieldWrapper.getContentEdit()[0] : fieldWrapper.getContentEdit();\n\n\tif (last) {\n\t\tvContentDisplay.addStyleClass(\"sapUiNoMarginBottom\");\n\t\tvContentDisplay.addStyleClass(\"sapUiNoMarginTop\");\n\t\tvContentEdit.removeStyleClass(\"sapUiTinyMarginBottom\");\n\t} else {\n\t\tvContentDisplay.addStyleClass(\"sapUiNoMarginBottom\");\n\t\tvContentDisplay.removeStyleClass(\"sapUiNoMarginTop\");\n\t\tvContentEdit.addStyleClass(\"sapUiTinyMarginBottom\");\n\t}\n}\nfunction getVBoxVisibility(this: Table, ...args: unknown[]): boolean {\n\tconst aItems = this.getItems() as unknown as FieldWrapperFixed[];\n\tlet bLastElementFound = false;\n\tfor (let index = aItems.length - 1; index >= 0; index--) {\n\t\tif (!bLastElementFound) {\n\t\t\tif (args[index] !== true) {\n\t\t\t\tbLastElementFound = true;\n\t\t\t\tif (isRatingIndicator(aItems[index])) {\n\t\t\t\t\t_updateStyleClassForRatingIndicator(aItems[index], true);\n\t\t\t\t} else {\n\t\t\t\t\taItems[index].removeStyleClass(\"sapUiTinyMarginBottom\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isRatingIndicator(aItems[index])) {\n\t\t\t_updateStyleClassForRatingIndicator(aItems[index], false);\n\t\t} else {\n\t\t\taItems[index].addStyleClass(\"sapUiTinyMarginBottom\");\n\t\t}\n\t}\n\treturn true;\n}\ngetVBoxVisibility.__functionName = \"sap.fe.macros.formatters.TableFormatter#getVBoxVisibility\";\n\n// See https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters for more detail on this weird syntax\n/**\n * Collection of table formatters.\n * @param this The context\n * @param sName The inner function name\n * @param oArgs The inner function parameters\n * @returns The value from the inner function\n */\nconst tableFormatter = function (this: object, sName: string, ...oArgs: unknown[]): unknown {\n\tif (tableFormatter.hasOwnProperty(sName)) {\n\t\treturn (tableFormatter as unknown as Record<string, Function>)[sName].apply(this, oArgs);\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\ntableFormatter.validateCreationRowFields = validateCreationRowFields;\ntableFormatter.rowHighlighting = rowHighlighting;\ntableFormatter.navigatedRow = navigatedRow;\ntableFormatter.getErrorStatusTextVisibilityFormatter = getErrorStatusTextVisibilityFormatter;\ntableFormatter.getVBoxVisibility = getVBoxVisibility;\ntableFormatter.isRatingIndicator = isRatingIndicator; // for unit tests\ntableFormatter.getColumnWidth = getColumnWidth;\ntableFormatter.getColumnWidthForValueHelpTable = getColumnWidthForValueHelpTable;\n\nObjectPath.set(\"sap.fe.macros.formatters.TableFormatter\", tableFormatter);\n\nexport default tableFormatter;\n"],"mappings":"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","ignoreList":[],"file":"TableFormatter-dbg.js"}