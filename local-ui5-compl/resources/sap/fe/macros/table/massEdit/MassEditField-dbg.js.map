{"version":3,"names":["MassEditField","properties","context","isValid","select","createSelect","field","createField","postConfiguration","_exports","_proto","prototype","getControls","controls","push","getFieldValues","selectedKey","getSelectedKey","selectedItem","selectItems","find","item","key","values","propertyValue","propertyUnitValue","bindingValue","getBindingContext","getProperty","propertyInfo","relativePath","getParent","getVisible","SpecificSelectKeys","ClearFieldValueKey","getFormattedValue","ReplaceKey","unitValue","unitPropertyPath","undefined","selectOptions","text","newValue","newPropertyValue","KeepKey","inputType","contentCreated","setVisible","attachEvent","handleFieldChange","bind","isReadOnlyOnContext","readOnlyInfo","readOnlyExpression","isReadOnly","isConstant","compileConstant","anyObject","Any","anyBoolean","compileExpression","setModel","getModel","setBindingContext","getBinding","getExternalValue","destroy","value","nullable","setValue","getValue","_jsx","Field","contextPath","metaPath","id","ID","generate","editMode","FieldEditMode","Editable","vhIdPrefix","event","FieldRuntimeHelper","getFieldStateOnChange","state","isFieldValid","Select","items","map","selectItem","Item","required","isFieldRequired","change","handleSelectionChange","width","ariaLabelledBy","getSelectedItem","bindingContext","getKey","selectedValue","includes","setSelectedKey","uniPropertyPath","setProperty","descriptionPath"],"sourceRoot":".","sources":["MassEditField.tsx"],"sourcesContent":["import type { PrimitiveType } from \"sap/fe/base/BindingToolkit\";\nimport { compileConstant, compileExpression, isConstant } from \"sap/fe/base/BindingToolkit\";\nimport Any from \"sap/fe/core/controls/Any\";\nimport * as ID from \"sap/fe/core/helpers/StableIdHelper\";\nimport Field from \"sap/fe/macros/field/Field\";\nimport type FieldAPI from \"sap/fe/macros/field/FieldAPI\";\nimport type { MassFieldProperties } from \"sap/fe/macros/table/massEdit/library\";\nimport { SpecificSelectKeys } from \"sap/fe/macros/table/massEdit/library\";\nimport Select from \"sap/m/Select\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport Item from \"sap/ui/core/Item\";\nimport type FormElement from \"sap/ui/layout/form/FormElement\";\nimport type { Field$ChangeEvent } from \"sap/ui/mdc/Field\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type BaseContext from \"sap/ui/model/Context\";\nimport type PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport FieldRuntimeHelper from \"../../field/FieldRuntimeHelper\";\n\nexport default class MassEditField {\n\tprivate readonly select: Select;\n\n\tprivate readonly field: Field | undefined;\n\n\tprivate isValid = true;\n\n\t/**\n\t * Constructor of the MassEdit field.\n\t * @param properties The field properties\n\t * @param context Defines the Odata metamodel context used in the current MassEdit dialog\n\t */\n\tconstructor(\n\t\tpublic readonly properties: MassFieldProperties,\n\t\tprivate readonly context: BaseContext\n\t) {\n\t\tthis.context = context;\n\t\tthis.select = this.createSelect();\n\t\tthis.field = this.createField();\n\t\tthis.postConfiguration();\n\t}\n\n\t/**\n\t * Gets the inner controls.\n\t * @returns The controls\n\t */\n\tgetControls(): Control[] {\n\t\tconst controls: Control[] = [this.select];\n\t\tif (this.field) {\n\t\t\tcontrols.push(this.field);\n\t\t}\n\t\treturn controls;\n\t}\n\n\t/**\n\t * Gets the property and unit values of the mass edit field.\n\t * @returns The values\n\t */\n\tgetFieldValues(): Record<string, PrimitiveType> {\n\t\tconst selectedKey = this.select.getSelectedKey();\n\t\tconst selectedItem = this.properties.selectItems.find((item) => selectedKey === item.key);\n\t\tconst values: Record<string, PrimitiveType> = {};\n\t\tlet propertyValue: PrimitiveType = \"\";\n\t\tlet propertyUnitValue = \"\";\n\t\tconst bindingValue = this.field?.getBindingContext()?.getProperty(this.properties.propertyInfo.relativePath);\n\n\t\tif (!(this.select.getParent() as FormElement | undefined)?.getVisible() || !selectedItem) {\n\t\t\treturn {};\n\t\t}\n\t\tswitch (selectedItem.key) {\n\t\t\tcase SpecificSelectKeys.ClearFieldValueKey:\n\t\t\t\tpropertyValue = this.getFormattedValue(bindingValue);\n\t\t\t\tbreak;\n\t\t\tcase SpecificSelectKeys.ReplaceKey:\n\t\t\t\tif (this.field) {\n\t\t\t\t\t/**\n\t\t\t\t\t * If the value on the field comes from an existing entry into the select\n\t\t\t\t\t * the value to use is not the one into the bindingContext since it could contain the description\n\t\t\t\t\t * so FE has to retrieve the value from the select option.\n\t\t\t\t\t */\n\t\t\t\t\tconst unitValue = this.properties.propertyInfo.unitPropertyPath\n\t\t\t\t\t\t? this.field.getBindingContext()?.getProperty(this.properties.propertyInfo.unitPropertyPath)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst selectOptions = this.properties.selectItems.find(\n\t\t\t\t\t\t(item) =>\n\t\t\t\t\t\t\t(this.properties.propertyInfo.unitPropertyPath &&\n\t\t\t\t\t\t\t\titem.propertyValue === bindingValue &&\n\t\t\t\t\t\t\t\titem.unitValue === unitValue) ||\n\t\t\t\t\t\t\t(!this.properties.propertyInfo.unitPropertyPath && item.text === bindingValue)\n\t\t\t\t\t);\n\t\t\t\t\tconst newValue = selectOptions?.propertyValue ?? bindingValue;\n\t\t\t\t\tconst newPropertyValue = selectOptions?.unitValue ?? unitValue;\n\t\t\t\t\tif (newValue === null && newPropertyValue === null) {\n\t\t\t\t\t\treturn {}; // If the Field is empty we don't want to update the value\n\t\t\t\t\t}\n\t\t\t\t\tpropertyValue = this.getFormattedValue(newValue);\n\t\t\t\t\tpropertyUnitValue = newPropertyValue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SpecificSelectKeys.KeepKey:\n\t\t\t\treturn {};\n\t\t\tdefault:\n\t\t\t\tif (this.properties.inputType === \"CheckBox\") {\n\t\t\t\t\tpropertyValue = this.getFormattedValue(selectedItem.key);\n\t\t\t\t} else {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tvalues[this.properties.propertyInfo.relativePath] = propertyValue;\n\t\tif (this.properties.propertyInfo.unitPropertyPath) {\n\t\t\tvalues[this.properties.propertyInfo.unitPropertyPath] = propertyUnitValue;\n\t\t}\n\t\treturn values;\n\t}\n\n\t/**\n\t * Manages the configuration of the inner field after its templating.\n\t */\n\tprivate async postConfiguration(): Promise<void> {\n\t\tif (this.field) {\n\t\t\tawait this.field.contentCreated;\n\t\t\tthis.field.setVisible(false);\n\t\t\tthis.field.attachEvent(\"onChange\", this.handleFieldChange.bind(this));\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the targeted property is read only on the specified context.\n\t * @param context The row context\n\t * @returns True if the field is readonly on this context, false otherwise.\n\t */\n\tpublic isReadOnlyOnContext(context: Context): boolean {\n\t\tconst readOnlyInfo = this.properties.readOnlyExpression;\n\t\tlet isReadOnly = false;\n\t\tif (isConstant(readOnlyInfo)) {\n\t\t\tisReadOnly = compileConstant(readOnlyInfo, false, undefined, true) as boolean;\n\t\t} else {\n\t\t\t// We evaluate the value of the expression via a UI5 managed object instance.\n\t\t\tconst anyObject = new Any({ anyBoolean: compileExpression(readOnlyInfo) });\n\t\t\tanyObject.setModel(context.getModel());\n\t\t\tanyObject.setBindingContext(context);\n\t\t\tisReadOnly = (anyObject.getBinding(\"anyBoolean\") as PropertyBinding)?.getExternalValue();\n\t\t\tanyObject.destroy();\n\t\t}\n\t\treturn isReadOnly;\n\t}\n\n\t/**\n\t * Gets the formatted value.\n\t * @param value The raw value\n\t * @returns The formatted value.\n\t */\n\tprivate getFormattedValue(value?: PrimitiveType): PrimitiveType {\n\t\tif (this.properties.inputType === \"CheckBox\") {\n\t\t\treturn value === \"true\";\n\t\t}\n\t\tif (!value && this.field?.getBindingContext()) {\n\t\t\t// \"Clear Values\" or \"Replace Values\" but nothing has been entered\n\t\t\t// for the property with unit we set 0 as default\n\t\t\tif (this.properties.propertyInfo.unitPropertyPath) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t// If the property is nullable we keep the value as is\n\t\t\tif (this.properties.propertyInfo.nullable) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t// If the property is not nullable we return the default value for the type\n\t\t\t(this.field as unknown as FieldAPI).setValue(\"\");\n\t\t\treturn (this.field as unknown as FieldAPI).getValue();\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Create the inner field.\n\t * @returns The field if needed, undefined otherwise.\n\t */\n\tprivate createField(): Field | undefined {\n\t\tif (this.properties.inputType !== \"CheckBox\")\n\t\t\treturn (\n\t\t\t\t<Field\n\t\t\t\t\tcontextPath={this.context as unknown as Context}\n\t\t\t\t\tmetaPath={this.properties.propertyInfo.relativePath as unknown as Context}\n\t\t\t\t\tid={ID.generate([\"MED_\", this.properties.propertyInfo.key, \"_Field\"])}\n\t\t\t\t\teditMode={FieldEditMode.Editable}\n\t\t\t\t\tvhIdPrefix={\"FieldValueHelp\"}\n\t\t\t\t/>\n\t\t\t);\n\t}\n\n\tprivate handleFieldChange(event: Field$ChangeEvent & Event<{ isValid: boolean }>): void {\n\t\tthis.isValid = !!FieldRuntimeHelper.getFieldStateOnChange(event).state[\"validity\"];\n\t}\n\n\tpublic isFieldValid(): boolean {\n\t\treturn this.isValid;\n\t}\n\n\t/**\n\t * Create the inner select.\n\t * @returns The select.\n\t */\n\tprivate createSelect(): Select {\n\t\treturn (\n\t\t\t<Select\n\t\t\t\tid={ID.generate([\"MED_\", this.properties.propertyInfo.key])}\n\t\t\t\titems={this.properties.selectItems.map((selectItem) => (\n\t\t\t\t\t<Item key={selectItem.key} text={selectItem.text} />\n\t\t\t\t))}\n\t\t\t\trequired={this.properties.isFieldRequired}\n\t\t\t\tchange={this.handleSelectionChange.bind(this)}\n\t\t\t\twidth=\"100%\"\n\t\t\t\tariaLabelledBy={[ID.generate([\"MED_\", this.properties.propertyInfo.key, \"Label\"])]}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Manages the selection change through the drop down.\n\t */\n\tprivate handleSelectionChange(): void {\n\t\tconst selectedItem = this.select.getSelectedItem();\n\t\tif (this.field && selectedItem) {\n\t\t\tthis.isValid = true;\n\t\t\tconst bindingContext = this.field.getBindingContext();\n\t\t\tconst key = selectedItem.getKey();\n\t\t\tlet selectedValue;\n\t\t\tthis.field.setVisible(\n\t\t\t\t![SpecificSelectKeys.KeepKey, SpecificSelectKeys.ClearFieldValueKey].includes(selectedItem.getKey() as SpecificSelectKeys)\n\t\t\t);\n\n\t\t\tif (!(key in SpecificSelectKeys)) {\n\t\t\t\tselectedValue = this.properties.selectItems.find((item) => item.key === key);\n\t\t\t\tthis.select.setSelectedKey(SpecificSelectKeys.ReplaceKey);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Sets the value on the field.\n\t\t\t * This value has to include the description if needed.\n\t\t\t */\n\t\t\tif (bindingContext) {\n\t\t\t\tconst uniPropertyPath = this.properties.propertyInfo.unitPropertyPath;\n\t\t\t\tbindingContext.setProperty(\n\t\t\t\t\tthis.properties.propertyInfo.relativePath,\n\t\t\t\t\tthis.properties.descriptionPath ? selectedValue?.text : selectedValue?.propertyValue\n\t\t\t\t);\n\t\t\t\tif (uniPropertyPath) {\n\t\t\t\t\tbindingContext.setProperty(uniPropertyPath, selectedValue?.unitValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"MassEditField-dbg.js"}