{"version":3,"file":"MassEditField.js","names":["MassEditField","properties","context","this","isValid","select","createSelect","field","createField","postConfiguration","_exports","_proto","prototype","getControls","controls","push","getFieldValues","selectedKey","getSelectedKey","selectedItem","selectItems","find","item","key","values","propertyValue","propertyUnitValue","bindingValue","getBindingContext","getProperty","propertyInfo","relativePath","getParent","getVisible","SpecificSelectKeys","ClearFieldValueKey","getFormattedValue","ReplaceKey","unitValue","unitPropertyPath","undefined","selectOptions","text","newValue","newPropertyValue","KeepKey","inputType","async","contentCreated","setVisible","attachEvent","handleFieldChange","bind","isReadOnlyOnContext","readOnlyInfo","readOnlyExpression","isReadOnly","isConstant","compileConstant","anyObject","Any","anyBoolean","compileExpression","setModel","getModel","setBindingContext","getBinding","getExternalValue","destroy","value","nullable","setValue","getValue","_jsx","Field","contextPath","metaPath","id","ID","generate","editMode","FieldEditMode","Editable","vhIdPrefix","event","FieldRuntimeHelper","getFieldStateOnChange","state","isFieldValid","Select","items","map","selectItem","Item","required","isFieldRequired","change","handleSelectionChange","width","ariaLabelledBy","getSelectedItem","bindingContext","getKey","selectedValue","includes","setSelectedKey","uniPropertyPath","setProperty","descriptionPath"],"sources":["./MassEditField.tsx"],"sourcesContent":["import type { PrimitiveType } from \"sap/fe/base/BindingToolkit\";\nimport { compileConstant, compileExpression, isConstant } from \"sap/fe/base/BindingToolkit\";\nimport Any from \"sap/fe/core/controls/Any\";\nimport * as ID from \"sap/fe/core/helpers/StableIdHelper\";\nimport Field from \"sap/fe/macros/field/Field\";\nimport type FieldAPI from \"sap/fe/macros/field/FieldAPI\";\nimport type { MassFieldProperties } from \"sap/fe/macros/table/massEdit/library\";\nimport { SpecificSelectKeys } from \"sap/fe/macros/table/massEdit/library\";\nimport Select from \"sap/m/Select\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport Item from \"sap/ui/core/Item\";\nimport type FormElement from \"sap/ui/layout/form/FormElement\";\nimport type { Field$ChangeEvent } from \"sap/ui/mdc/Field\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type BaseContext from \"sap/ui/model/Context\";\nimport type PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport FieldRuntimeHelper from \"../../field/FieldRuntimeHelper\";\n\nexport default class MassEditField {\n\tprivate readonly select: Select;\n\n\tprivate readonly field: Field | undefined;\n\n\tprivate isValid = true;\n\n\t/**\n\t * Constructor of the MassEdit field.\n\t * @param properties The field properties\n\t * @param context Defines the Odata metamodel context used in the current MassEdit dialog\n\t */\n\tconstructor(\n\t\tpublic readonly properties: MassFieldProperties,\n\t\tprivate readonly context: BaseContext\n\t) {\n\t\tthis.context = context;\n\t\tthis.select = this.createSelect();\n\t\tthis.field = this.createField();\n\t\tthis.postConfiguration();\n\t}\n\n\t/**\n\t * Gets the inner controls.\n\t * @returns The controls\n\t */\n\tgetControls(): Control[] {\n\t\tconst controls: Control[] = [this.select];\n\t\tif (this.field) {\n\t\t\tcontrols.push(this.field);\n\t\t}\n\t\treturn controls;\n\t}\n\n\t/**\n\t * Gets the property and unit values of the mass edit field.\n\t * @returns The values\n\t */\n\tgetFieldValues(): Record<string, PrimitiveType> {\n\t\tconst selectedKey = this.select.getSelectedKey();\n\t\tconst selectedItem = this.properties.selectItems.find((item) => selectedKey === item.key);\n\t\tconst values: Record<string, PrimitiveType> = {};\n\t\tlet propertyValue: PrimitiveType = \"\";\n\t\tlet propertyUnitValue = \"\";\n\t\tconst bindingValue = this.field?.getBindingContext()?.getProperty(this.properties.propertyInfo.relativePath);\n\n\t\tif (!(this.select.getParent() as FormElement | undefined)?.getVisible() || !selectedItem) {\n\t\t\treturn {};\n\t\t}\n\t\tswitch (selectedItem.key) {\n\t\t\tcase SpecificSelectKeys.ClearFieldValueKey:\n\t\t\t\tpropertyValue = this.getFormattedValue(bindingValue);\n\t\t\t\tbreak;\n\t\t\tcase SpecificSelectKeys.ReplaceKey:\n\t\t\t\tif (this.field) {\n\t\t\t\t\t/**\n\t\t\t\t\t * If the value on the field comes from an existing entry into the select\n\t\t\t\t\t * the value to use is not the one into the bindingContext since it could contain the description\n\t\t\t\t\t * so FE has to retrieve the value from the select option.\n\t\t\t\t\t */\n\t\t\t\t\tconst unitValue = this.properties.propertyInfo.unitPropertyPath\n\t\t\t\t\t\t? this.field.getBindingContext()?.getProperty(this.properties.propertyInfo.unitPropertyPath)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst selectOptions = this.properties.selectItems.find(\n\t\t\t\t\t\t(item) =>\n\t\t\t\t\t\t\t(this.properties.propertyInfo.unitPropertyPath &&\n\t\t\t\t\t\t\t\titem.propertyValue === bindingValue &&\n\t\t\t\t\t\t\t\titem.unitValue === unitValue) ||\n\t\t\t\t\t\t\t(!this.properties.propertyInfo.unitPropertyPath && item.text === bindingValue)\n\t\t\t\t\t);\n\t\t\t\t\tconst newValue = selectOptions?.propertyValue ?? bindingValue;\n\t\t\t\t\tconst newPropertyValue = selectOptions?.unitValue ?? unitValue;\n\t\t\t\t\tif (newValue === null && newPropertyValue === null) {\n\t\t\t\t\t\treturn {}; // If the Field is empty we don't want to update the value\n\t\t\t\t\t}\n\t\t\t\t\tpropertyValue = this.getFormattedValue(newValue);\n\t\t\t\t\tpropertyUnitValue = newPropertyValue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SpecificSelectKeys.KeepKey:\n\t\t\t\treturn {};\n\t\t\tdefault:\n\t\t\t\tif (this.properties.inputType === \"CheckBox\") {\n\t\t\t\t\tpropertyValue = this.getFormattedValue(selectedItem.key);\n\t\t\t\t} else {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tvalues[this.properties.propertyInfo.relativePath] = propertyValue;\n\t\tif (this.properties.propertyInfo.unitPropertyPath) {\n\t\t\tvalues[this.properties.propertyInfo.unitPropertyPath] = propertyUnitValue;\n\t\t}\n\t\treturn values;\n\t}\n\n\t/**\n\t * Manages the configuration of the inner field after its templating.\n\t */\n\tprivate async postConfiguration(): Promise<void> {\n\t\tif (this.field) {\n\t\t\tawait this.field.contentCreated;\n\t\t\tthis.field.setVisible(false);\n\t\t\tthis.field.attachEvent(\"onChange\", this.handleFieldChange.bind(this));\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the targeted property is read only on the specified context.\n\t * @param context The row context\n\t * @returns True if the field is readonly on this context, false otherwise.\n\t */\n\tpublic isReadOnlyOnContext(context: Context): boolean {\n\t\tconst readOnlyInfo = this.properties.readOnlyExpression;\n\t\tlet isReadOnly = false;\n\t\tif (isConstant(readOnlyInfo)) {\n\t\t\tisReadOnly = compileConstant(readOnlyInfo, false, undefined, true) as boolean;\n\t\t} else {\n\t\t\t// We evaluate the value of the expression via a UI5 managed object instance.\n\t\t\tconst anyObject = new Any({ anyBoolean: compileExpression(readOnlyInfo) });\n\t\t\tanyObject.setModel(context.getModel());\n\t\t\tanyObject.setBindingContext(context);\n\t\t\tisReadOnly = (anyObject.getBinding(\"anyBoolean\") as PropertyBinding)?.getExternalValue();\n\t\t\tanyObject.destroy();\n\t\t}\n\t\treturn isReadOnly;\n\t}\n\n\t/**\n\t * Gets the formatted value.\n\t * @param value The raw value\n\t * @returns The formatted value.\n\t */\n\tprivate getFormattedValue(value?: PrimitiveType): PrimitiveType {\n\t\tif (this.properties.inputType === \"CheckBox\") {\n\t\t\treturn value === \"true\";\n\t\t}\n\t\tif (!value && this.field?.getBindingContext()) {\n\t\t\t// \"Clear Values\" or \"Replace Values\" but nothing has been entered\n\t\t\t// for the property with unit we set 0 as default\n\t\t\tif (this.properties.propertyInfo.unitPropertyPath) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t// If the property is nullable we keep the value as is\n\t\t\tif (this.properties.propertyInfo.nullable) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t// If the property is not nullable we return the default value for the type\n\t\t\t(this.field as unknown as FieldAPI).setValue(\"\");\n\t\t\treturn (this.field as unknown as FieldAPI).getValue();\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Create the inner field.\n\t * @returns The field if needed, undefined otherwise.\n\t */\n\tprivate createField(): Field | undefined {\n\t\tif (this.properties.inputType !== \"CheckBox\")\n\t\t\treturn (\n\t\t\t\t<Field\n\t\t\t\t\tcontextPath={this.context as unknown as Context}\n\t\t\t\t\tmetaPath={this.properties.propertyInfo.relativePath as unknown as Context}\n\t\t\t\t\tid={ID.generate([\"MED_\", this.properties.propertyInfo.key, \"_Field\"])}\n\t\t\t\t\teditMode={FieldEditMode.Editable}\n\t\t\t\t\tvhIdPrefix={\"FieldValueHelp\"}\n\t\t\t\t/>\n\t\t\t);\n\t}\n\n\tprivate handleFieldChange(event: Field$ChangeEvent & Event<{ isValid: boolean }>): void {\n\t\tthis.isValid = !!FieldRuntimeHelper.getFieldStateOnChange(event).state[\"validity\"];\n\t}\n\n\tpublic isFieldValid(): boolean {\n\t\treturn this.isValid;\n\t}\n\n\t/**\n\t * Create the inner select.\n\t * @returns The select.\n\t */\n\tprivate createSelect(): Select {\n\t\treturn (\n\t\t\t<Select\n\t\t\t\tid={ID.generate([\"MED_\", this.properties.propertyInfo.key])}\n\t\t\t\titems={this.properties.selectItems.map((selectItem) => (\n\t\t\t\t\t<Item key={selectItem.key} text={selectItem.text} />\n\t\t\t\t))}\n\t\t\t\trequired={this.properties.isFieldRequired}\n\t\t\t\tchange={this.handleSelectionChange.bind(this)}\n\t\t\t\twidth=\"100%\"\n\t\t\t\tariaLabelledBy={[ID.generate([\"MED_\", this.properties.propertyInfo.key, \"Label\"])]}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Manages the selection change through the drop down.\n\t */\n\tprivate handleSelectionChange(): void {\n\t\tconst selectedItem = this.select.getSelectedItem();\n\t\tif (this.field && selectedItem) {\n\t\t\tthis.isValid = true;\n\t\t\tconst bindingContext = this.field.getBindingContext();\n\t\t\tconst key = selectedItem.getKey();\n\t\t\tlet selectedValue;\n\t\t\tthis.field.setVisible(\n\t\t\t\t![SpecificSelectKeys.KeepKey, SpecificSelectKeys.ClearFieldValueKey].includes(selectedItem.getKey() as SpecificSelectKeys)\n\t\t\t);\n\n\t\t\tif (!(key in SpecificSelectKeys)) {\n\t\t\t\tselectedValue = this.properties.selectItems.find((item) => item.key === key);\n\t\t\t\tthis.select.setSelectedKey(SpecificSelectKeys.ReplaceKey);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Sets the value on the field.\n\t\t\t * This value has to include the description if needed.\n\t\t\t */\n\t\t\tif (bindingContext) {\n\t\t\t\tconst uniPropertyPath = this.properties.propertyInfo.unitPropertyPath;\n\t\t\t\tbindingContext.setProperty(\n\t\t\t\t\tthis.properties.propertyInfo.relativePath,\n\t\t\t\t\tthis.properties.descriptionPath ? selectedValue?.text : selectedValue?.propertyValue\n\t\t\t\t);\n\t\t\t\tif (uniPropertyPath) {\n\t\t\t\t\tbindingContext.setProperty(uniPropertyPath, selectedValue?.unitValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}