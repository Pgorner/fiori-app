{"version":3,"names":["MassEditDialog","props","updatedProperties","Set","dialog","undefined","table","contexts","isAdaptation","CommonUtils","getAppComponent","isAdaptationMode","fieldProperties","view","getTargetView","transientListBinding","generateListBinding","bindingContext","create","resourceBundle","Library","getResourceBundleFor","contextsOnError","fieldControls","_exports","_proto","prototype","listBinding","getRowBinding","getModel","bindList","getPath","getContext","$$updateGroupId","refreshInternal","tableTitle","getHeader","coreResourceBundle","applyButtonText","getViewData","converterType","getText","dialogContent","createContent","_jsx","Dialog","id","ID","generate","getId","contentWidth","class","horizontalScrolling","title","length","toString","content","escapeHandler","onClose","bind","beforeOpen","beginButton","Button","text","type","press","onApply","endButton","setModel","JSONModel","isEditable","bindElement","path","model","event","getSource","setBindingContext","addDependent","destroy","close","manageMessage","controller","getController","DraftStatus","FELibrary","internalModelContext","getBindingContext","setProperty","messageHandler","showMessages","onBeforeShowMessage","messages","showMessageParameters","fnGetMessageSubtitle","messageHandling","setMessageSubtitle","size","editFlow","setDraftStatus","Saved","MessageToast","show","Clear","getIsEditable","some","message","getTargets","showMessageBox","showMessageDialog","confirmButtonTxt","MessageBox","success","actions","emphasizedAction","saveChanges","fieldValuesInfo","massEditSideEffects","MassEditSideEffects","fieldPromises","manifestSettings","getParent","getTableDefinition","control","massEdit","forEach","selectedContext","idx","values","fieldControlReference","valueHasChanged","isReadOnlyOnContext","groupId","operationGroupingMode","OperationGroupingMode","ChangeSet","propertyPath","getProperty","push","then","add","catch","error","Log","executeImmediateSideEffects","refreshDescription","Promise","allSettled","executeDeferredSideEffects","Array","from","getFieldValuesInfos","result","fieldControl","fieldValues","getFieldValues","applyChanges","fieldsValuesInfo","customSave","customMassEditSave","aContexts","oUpdateData","isFieldValid","removeBoundTransitionMessages","removeUnboundTransitionMessages","isCustomSave","customFormContainer","createCustomContainer","_jsxs","_Fragment","children","getAdaptationMessage","Form","layout","ResponsiveGridLayout","labelSpanM","labelSpanL","labelSpanXL","formContainers","FormContainer","formElements","createFormElements","MessageStrip","customFragment","getExtensionAPI","loadFragment","name","contextPath","getMetaModel","getMetaPath","getResolvedPath","map","createFormElement","fieldInfo","FormElement","visible","label","Label","propertyInfo","key","fields","createFields","metaModel","context","createBindingContext","massEditField","MassEditField","getControls"],"sourceRoot":".","sources":["MassEditDialog.tsx"],"sourcesContent":["import type { PrimitiveType } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport { OperationGroupingMode } from \"sap/fe/core/converters/ManifestSettings\";\nimport * as ID from \"sap/fe/core/helpers/StableIdHelper\";\nimport FELibrary from \"sap/fe/core/library\";\nimport type { SideEffectsEntityType, SideEffectsTarget, SideEffectsType } from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport Label from \"sap/m/Label\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport Form from \"sap/ui/layout/form/Form\";\nimport FormContainer from \"sap/ui/layout/form/FormContainer\";\nimport FormElement from \"sap/ui/layout/form/FormElement\";\nimport ResponsiveGridLayout from \"sap/ui/layout/form/ResponsiveGridLayout\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport MassEditField from \"./MassEditField\";\nimport MassEditSideEffects from \"./MassEditSideEffects\";\nimport type { MassFieldProperties } from \"./library\";\n\ntype MassEditSideEffectsProperties = {\n\tsideEffects: SideEffectsType;\n\ttableRefresh: {\n\t\tisRequested: boolean;\n\t\ttargetEntity?: SideEffectsEntityType;\n\t};\n\timmediate: { targets: SideEffectsTarget[]; triggerAction: string | undefined };\n\tdeferred: { targets: SideEffectsTarget[]; triggerAction: string | undefined };\n};\n\ntype FieldValuesInfo = {\n\tvalues: Record<string, PrimitiveType>;\n\tfieldControlReference: { control: MassEditField; values: Record<string, PrimitiveType> }[];\n};\n\nexport type MassEditSideEffectsExecutionProperties = MassEditSideEffectsProperties & { onRowContext: boolean };\n\nexport default class MassEditDialog {\n\tprivate dialog: Dialog | undefined;\n\n\tpublic readonly table: Table;\n\n\tpublic readonly fieldProperties: MassFieldProperties[];\n\n\tprivate readonly view: FEView;\n\n\tpublic readonly contexts: ODataV4Context[];\n\n\tprivate readonly contextsOnError: ODataV4Context[];\n\n\tprivate readonly updatedProperties: Set<string> = new Set();\n\n\tprivate readonly resourceBundle: ResourceBundle;\n\n\tpublic readonly bindingContext: ODataV4Context;\n\n\tpublic readonly transientListBinding: ODataListBinding;\n\n\tprivate readonly fieldControls: MassEditField[];\n\n\tprivate readonly isAdaptation: boolean;\n\n\t/**\n\t * Constructor of the MassEdit dialog.\n\t * @param props Contains the following attributes\n\t * @param props.table The table where the changes need to be applied\n\t * @param props.contexts The row contexts where the changes need to be applied\n\t * @param props.fieldProperties The properties ot the fields\n\t */\n\tconstructor(props: { table: Table; contexts: ODataV4Context[]; fieldProperties: MassFieldProperties[] }) {\n\t\tthis.dialog = undefined;\n\t\tthis.table = props.table;\n\t\tthis.contexts = props.contexts;\n\t\tthis.isAdaptation = CommonUtils.getAppComponent(this.table).isAdaptationMode();\n\t\tthis.fieldProperties = props.fieldProperties;\n\t\tthis.view = CommonUtils.getTargetView(this.table);\n\t\tthis.transientListBinding = this.generateListBinding();\n\t\tthis.bindingContext = this.transientListBinding.create({}, true);\n\n\t\tthis.resourceBundle = Library.getResourceBundleFor(\"sap.fe.macros\") as ResourceBundle;\n\t\tthis.contextsOnError = [];\n\t\tthis.fieldControls = [];\n\t}\n\n\t/**\n\t * Creates the context for the dialog.\n\t * @returns The context.\n\t */\n\tprivate generateListBinding(): ODataListBinding {\n\t\tconst listBinding = this.table.getRowBinding();\n\t\tconst transientListBinding = (this.table.getModel() as ODataModel).bindList(\n\t\t\tlistBinding.getPath(),\n\t\t\tlistBinding.getContext(),\n\t\t\t[],\n\t\t\t[],\n\t\t\t{\n\t\t\t\t$$updateGroupId: \"submitLater\"\n\t\t\t}\n\t\t);\n\t\ttransientListBinding.refreshInternal = (): void => {\n\t\t\t/* */\n\t\t};\n\t\treturn transientListBinding;\n\t}\n\n\t/**\n\t * Creates the dialog.\n\t * @returns The instance of dialog.\n\t */\n\tasync create(): Promise<Dialog> {\n\t\tif (!this.dialog) {\n\t\t\tconst tableTitle = this.table.getHeader();\n\t\t\tconst coreResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\") as ResourceBundle;\n\t\t\tconst applyButtonText =\n\t\t\t\tthis.view.getViewData().converterType === \"ListReport\"\n\t\t\t\t\t? this.resourceBundle.getText(\"C_MASS_EDIT_SAVE_BUTTON_TEXT\")\n\t\t\t\t\t: coreResourceBundle.getText(\"C_COMMON_DIALOG_OK\");\n\t\t\tconst dialogContent = await this.createContent();\n\t\t\tconst dialog = (\n\t\t\t\t<Dialog\n\t\t\t\t\tdt:designtime=\"sap/fe/macros/table/massEdit/designtime/MassEdit.designtime\"\n\t\t\t\t\tid={ID.generate([this.table.getId(), \"MED_\", \"Dialog\"])}\n\t\t\t\t\tcontentWidth=\"27rem\"\n\t\t\t\t\tclass=\"sapUiContentPadding\"\n\t\t\t\t\thorizontalScrolling=\"false\"\n\t\t\t\t\ttitle={\n\t\t\t\t\t\ttableTitle\n\t\t\t\t\t\t\t? this.resourceBundle.getText(\"C_MASS_EDIT_DIALOG_TITLE_TYPENAME_PLURAL\", [\n\t\t\t\t\t\t\t\t\ttableTitle,\n\t\t\t\t\t\t\t\t\tthis.contexts.length.toString()\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t: this.resourceBundle.getText(\"C_MASS_EDIT_DIALOG_TITLE_WITHOUT_TYPENAME_PLURAL\", [\n\t\t\t\t\t\t\t\t\tthis.contexts.length.toString()\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t}\n\t\t\t\t\tcontent={dialogContent}\n\t\t\t\t\tescapeHandler={this.onClose.bind(this)}\n\t\t\t\t\tbeforeOpen={this.beforeOpen.bind(this)}\n\t\t\t\t\tbeginButton={<Button text={applyButtonText} type=\"Emphasized\" press={this.onApply.bind(this)} />}\n\t\t\t\t\tendButton={<Button text={coreResourceBundle.getText(\"C_COMMON_OBJECT_PAGE_CANCEL\")} press={this.onClose.bind(this)} />}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tthis.dialog = dialog;\n\t\t\t// We don't want to inherit from the PageComponent for the ui model -> into this dialog, fields are editable\n\t\t\tdialog.setModel(new JSONModel({ isEditable: true }), \"ui\");\n\t\t\tdialog.bindElement({\n\t\t\t\tpath: \"/\",\n\t\t\t\tmodel: \"ui\"\n\t\t\t});\n\t\t\treturn dialog;\n\t\t}\n\t\treturn this.dialog;\n\t}\n\n\t/**\n\t * Sets the last configuration before opening the dialog:\n\t *  - set the runtime model\n\t *  - set the OdataModel\n\t *  - add the dialog as dependent of the table.\n\t * @param event The ui5 event\n\t */\n\tprivate beforeOpen(event: UI5Event<{}, Dialog>): void {\n\t\tconst dialog = event.getSource();\n\t\tdialog.setModel(this.table.getModel());\n\t\tdialog.setBindingContext(this.bindingContext);\n\t\tthis.table.addDependent(dialog);\n\t}\n\n\t/**\n\t * Closes and destroys the dialog.\n\t */\n\tprivate onClose(): void {\n\t\tthis.transientListBinding.destroy();\n\t\tif (this.dialog) {\n\t\t\tthis.dialog.close();\n\t\t\tthis.dialog.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Manages the messages according to the contexts on error.\n\t */\n\tasync manageMessage(): Promise<void> {\n\t\tconst coreResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\") as ResourceBundle;\n\t\tconst controller = this.view.getController();\n\t\tconst DraftStatus = FELibrary.DraftStatus;\n\t\tconst internalModelContext = this.view.getBindingContext(\"internal\");\n\t\tinternalModelContext?.setProperty(\"getBoundMessagesForMassEdit\", true);\n\t\tawait controller.messageHandler.showMessages({\n\t\t\tonBeforeShowMessage: (\n\t\t\t\tmessages: Message[],\n\t\t\t\tshowMessageParameters: {\n\t\t\t\t\tfnGetMessageSubtitle?: Function;\n\t\t\t\t\tshowMessageBox?: boolean;\n\t\t\t\t\tshowMessageDialog?: boolean;\n\t\t\t\t\tfilteredMessages?: Message[];\n\t\t\t\t\tshowChangeSetErrorDialog?: boolean;\n\t\t\t\t}\n\t\t\t) => {\n\t\t\t\tshowMessageParameters.fnGetMessageSubtitle = messageHandling.setMessageSubtitle.bind({}, this.table, this.contexts);\n\n\t\t\t\tif (!this.contextsOnError.length) {\n\t\t\t\t\tif (this.updatedProperties.size > 0) {\n\t\t\t\t\t\t//There is at least one new value set\n\t\t\t\t\t\tcontroller.editFlow.setDraftStatus(DraftStatus.Saved);\n\t\t\t\t\t\tif (this.view.getViewData().converterType === \"ListReport\") {\n\t\t\t\t\t\t\tMessageToast.show(this.resourceBundle.getText(\"C_MASS_EDIT_SUCCESS_TOAST\"));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMessageToast.show(this.resourceBundle.getText(\"C_OBJECT_PAGE_MASS_EDIT_SUCCESS_TOAST\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tMessageToast.show(this.resourceBundle.getText(\"C_MASS_EDIT_NO_CHANGE\"));\n\t\t\t\t\t}\n\t\t\t\t} else if (this.contextsOnError.length < this.contexts.length) {\n\t\t\t\t\tcontroller.editFlow.setDraftStatus(DraftStatus.Saved);\n\t\t\t\t} else if (this.contextsOnError.length === this.contexts.length) {\n\t\t\t\t\tcontroller.editFlow.setDraftStatus(DraftStatus.Clear);\n\t\t\t\t}\n\n\t\t\t\tif (CommonUtils.getIsEditable(controller) && !messages.some((message) => !message.getTargets())) {\n\t\t\t\t\tshowMessageParameters.showMessageBox = false;\n\t\t\t\t\tshowMessageParameters.showMessageDialog = false;\n\t\t\t\t}\n\t\t\t\treturn showMessageParameters;\n\t\t\t}\n\t\t});\n\n\t\tif (!!this.contextsOnError.length && this.contextsOnError.length < this.contexts.length) {\n\t\t\tconst confirmButtonTxt = coreResourceBundle.getText(\"C_COMMON_DIALOG_OK\");\n\t\t\tMessageBox.success(\n\t\t\t\tthis.resourceBundle.getText(\"C_MASS_EDIT_CHANGES_WITH_ERROR\", [\n\t\t\t\t\tthis.contexts.length - this.contextsOnError.length,\n\t\t\t\t\tthis.contexts.length\n\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\tactions: [confirmButtonTxt],\n\t\t\t\t\temphasizedAction: confirmButtonTxt\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tinternalModelContext?.setProperty(\"getBoundMessagesForMassEdit\", false);\n\t}\n\n\t/**\n\t * Saves the relevant contexts and refreshes the associated properties.\n\t * @param fieldValuesInfo The information of the values for all mass edit fields.\n\t * @returns A Promise.\n\t */\n\tprivate async saveChanges(fieldValuesInfo: FieldValuesInfo): Promise<void> {\n\t\tconst massEditSideEffects = new MassEditSideEffects(this); // Use the first line as reference context to calculate the map of side effects\n\t\tconst fieldPromises: Promise<unknown>[] = [];\n\t\tconst manifestSettings = (this.table.getParent() as TableAPI).getTableDefinition().control.massEdit;\n\n\t\tthis.contexts.forEach((selectedContext: ODataV4Context, idx: number) => {\n\t\t\tfor (const { control, values } of fieldValuesInfo.fieldControlReference) {\n\t\t\t\tlet valueHasChanged = false;\n\t\t\t\tif (!control.isReadOnlyOnContext(selectedContext)) {\n\t\t\t\t\tconst groupId = manifestSettings.operationGroupingMode === OperationGroupingMode.ChangeSet ? \"$auto\" : `$auto.${idx}`;\n\t\t\t\t\tfor (const propertyPath in values) {\n\t\t\t\t\t\tif (selectedContext.getProperty(propertyPath) !== values[propertyPath]) {\n\t\t\t\t\t\t\tvalueHasChanged = true;\n\t\t\t\t\t\t\tfieldPromises.push(\n\t\t\t\t\t\t\t\tselectedContext\n\t\t\t\t\t\t\t\t\t.setProperty(propertyPath, values[propertyPath], groupId)\n\t\t\t\t\t\t\t\t\t.then(() => this.updatedProperties.add(propertyPath))\n\t\t\t\t\t\t\t\t\t.catch((error: unknown) => {\n\t\t\t\t\t\t\t\t\t\tthis.contextsOnError.push(selectedContext);\n\t\t\t\t\t\t\t\t\t\tLog.error(\"Mass Edit: Something went wrong in updating entries.\", error as string);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfieldPromises.push(massEditSideEffects.executeImmediateSideEffects(selectedContext, propertyPath, groupId));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (valueHasChanged) {\n\t\t\t\t\t\tfieldPromises.push(massEditSideEffects.refreshDescription(control, selectedContext, groupId));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.allSettled(fieldPromises);\n\t\tif (this.updatedProperties.size) {\n\t\t\tmassEditSideEffects.executeDeferredSideEffects(new Set([\"genericField\", ...Array.from(this.updatedProperties)]));\n\t\t}\n\t}\n\n\t/**\n\t * Gets the information of the values for all mass edit fields.\n\t * @returns The information.\n\t */\n\tprivate getFieldValuesInfos(): FieldValuesInfo {\n\t\tconst result = {\n\t\t\tvalues: {},\n\t\t\tfieldControlReference: []\n\t\t} as FieldValuesInfo;\n\t\tfor (const fieldControl of this.fieldControls) {\n\t\t\tconst fieldValues = fieldControl.getFieldValues();\n\t\t\tresult.values = { ...result.values, ...fieldValues };\n\t\t\tresult.fieldControlReference.push({ control: fieldControl, values: fieldValues });\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Updates the table fields according to the dialog entries.\n\t * @returns `true` if the custom save is executed, `false` otherwise.\n\t */\n\tasync applyChanges(): Promise<boolean> {\n\t\t//We want to skip the patch handler(specific workflow done into the EditFlow) since the patch is managed here\n\t\tthis.view.getBindingContext(\"internal\")?.setProperty(\"skipPatchHandlers\", true);\n\n\t\tconst fieldsValuesInfo = this.getFieldValuesInfos();\n\t\tlet customSave = false;\n\t\ttry {\n\t\t\tcustomSave = await this.view\n\t\t\t\t.getController()\n\t\t\t\t.editFlow.customMassEditSave({ aContexts: this.contexts, oUpdateData: fieldsValuesInfo.values });\n\t\t} catch (error) {\n\t\t\tLog.error(\"Mass Edit: Something went wrong in updating entries.\", error as string);\n\t\t}\n\t\tif (!customSave) {\n\t\t\tawait this.saveChanges(fieldsValuesInfo);\n\t\t}\n\t\tthis.view.getBindingContext(\"internal\")?.setProperty(\"skipPatchHandlers\", false);\n\t\treturn customSave;\n\t}\n\n\t/**\n\t * Manages the press on the Apply Button.\n\t * @returns A promise.\n\t */\n\tprivate async onApply(): Promise<void> {\n\t\tif (this.fieldControls.some((fieldControl) => !fieldControl.isFieldValid())) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.isAdaptation) {\n\t\t\tmessageHandling.removeBoundTransitionMessages();\n\t\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\t\tconst isCustomSave = await this.applyChanges();\n\t\t\tif (!isCustomSave) {\n\t\t\t\tthis.manageMessage();\n\t\t\t}\n\t\t}\n\t\tthis.onClose();\n\t}\n\n\t/**\n\t * Creates the dialog content.\n\t * @returns Promise returning instance of fragment.\n\t */\n\n\tprivate async createContent(): Promise<Form> {\n\t\tconst customFormContainer = await this.createCustomContainer();\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.getAdaptationMessage()}\n\t\t\t\t<Form>\n\t\t\t\t\t{{\n\t\t\t\t\t\tlayout: <ResponsiveGridLayout labelSpanM=\"12\" labelSpanL=\"12\" labelSpanXL=\"12\" />,\n\t\t\t\t\t\tformContainers: (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{customFormContainer}\n\t\t\t\t\t\t\t\t<FormContainer>\n\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\tformElements: this.createFormElements()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</FormContainer>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</Form>\n\t\t\t</>\n\t\t);\n\t}\n\n\t/**\n\t * Gets the adaptation message.\n\t * @returns The message strip if the dialog is displayed in adaptation mode.\n\t */\n\tprivate getAdaptationMessage(): MessageStrip | undefined {\n\t\tif (this.isAdaptation) {\n\t\t\treturn <MessageStrip text={this.resourceBundle.getText(\"C_MASS_EDIT_ADAPTATION_MODE\")} />;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Creates the custom form container according to the manifest settings.\n\t * @returns The custom form container.\n\t */\n\tprivate async createCustomContainer(): Promise<FormContainer | undefined> {\n\t\tconst manifestSettings = (this.table.getParent() as TableAPI).getTableDefinition().control.massEdit;\n\n\t\treturn manifestSettings.customFragment\n\t\t\t? ((await this.view\n\t\t\t\t\t.getController()\n\t\t\t\t\t.getExtensionAPI()\n\t\t\t\t\t.loadFragment({\n\t\t\t\t\t\tid: \"customMassEdit\",\n\t\t\t\t\t\tname: manifestSettings.customFragment,\n\t\t\t\t\t\tcontextPath: this.transientListBinding\n\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t.getMetaModel()\n\t\t\t\t\t\t\t.getMetaPath(this.transientListBinding.getResolvedPath())\n\t\t\t\t\t})) as FormContainer)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * Creates the form elements of the dialog.\n\t * @returns The form elements.\n\t */\n\tprivate createFormElements(): FormElement[] {\n\t\treturn this.fieldProperties.map(this.createFormElement.bind(this));\n\t}\n\n\t/**\n\t * Creates the form elements of a Field.\n\t * @param fieldInfo The field properties\n\t * @returns The form element.\n\t */\n\tprivate createFormElement(fieldInfo: MassFieldProperties): FormElement {\n\t\treturn (\n\t\t\t<FormElement visible={fieldInfo.visible}>\n\t\t\t\t{{\n\t\t\t\t\tlabel: <Label text={fieldInfo.label} id={ID.generate([\"MED_\", fieldInfo.propertyInfo.key, \"Label\"])} />,\n\t\t\t\t\tfields: this.createFields(fieldInfo)\n\t\t\t\t}}\n\t\t\t</FormElement>\n\t\t);\n\t}\n\n\t/**\n\t * Creates the fields of the dialog.\n\t * @param fieldInfo The field properties\n\t * @returns The fields.\n\t */\n\tprivate createFields(fieldInfo: MassFieldProperties): Control[] {\n\t\tconst metaModel = (this.table.getModel() as ODataModel).getMetaModel();\n\t\tconst context = metaModel.createBindingContext(metaModel.getMetaPath(this.bindingContext.getPath())) as Context;\n\t\tconst massEditField = new MassEditField(fieldInfo, context);\n\t\tthis.fieldControls.push(massEditField);\n\t\treturn massEditField.getControls();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"MassEditDialog-dbg.js"}