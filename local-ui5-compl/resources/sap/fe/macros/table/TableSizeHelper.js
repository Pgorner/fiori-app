/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2024 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/Log","sap/fe/core/helpers/SizeHelper","sap/fe/core/helpers/TypeGuards","sap/fe/core/templating/DisplayModeFormatter","sap/m/table/Util"],function(e,t,a,n,i){"use strict";var o=n.getDisplayMode;var l=a.isPathAnnotationExpression;var r=a.isAnnotationOfType;const s={getMDCColumnWidthFromDataField:function(e,t,a){let n=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;const i=t.find(t=>t.metadataPath&&a.resolvePath(t.metadataPath)?.target?.fullyQualifiedName===e?.fullyQualifiedName);return i?this.getMDCColumnWidthFromProperty(i,t,n):0},getMDCColumnWidthFromProperty:function(t,a){let n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;let l=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;const r=Object.assign({headerGap:n&&o,gap:0,truncateLabel:!n,excludeProperties:[],required:l},t.visualSettings?.widthCalculation);let s;if(t.propertyInfos?.length){s=t.propertyInfos.map(e=>{const t=a.find(t=>t.name===e);return t?.typeConfig?.typeInstance}).filter(e=>e)}else if(t?.typeConfig?.typeInstance){s=[t?.typeConfig.typeInstance]}const u=s?i.calcColumnWidth(s,t.label,r):null;if(!u){e.error(`Cannot compute the column width for property: ${t.name}`)}return u?parseFloat(u.replace("Rem","")):0},getWidthForDataFieldForAnnotation:function(e,a,n,i){let o=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;const s=r(e,"com.sap.vocabularies.UI.v1.DataFieldForAnnotation")?e?.Target?.$target:undefined;let u=0,p=0;if(r(s,"com.sap.vocabularies.UI.v1.DataPointType")&&s?.Visualization){switch(s.Visualization){case"UI.VisualizationType/Rating":const e=s.TargetValue;u=parseInt(e,10)*1.375;break;case"UI.VisualizationType/Progress":default:u=5}const a=s?s.label:e?.Label?.toString()||"";p=o&&a?t.getButtonWidth(a):0}else if(i&&n&&r(s,"com.sap.vocabularies.Communication.v1.ContactType")&&l(s.fn)){u=this.getMDCColumnWidthFromDataField(s.fn.$target,n,i,a)}return{labelWidth:p,propertyWidth:u}},getWidthForDataField:function(a,n,i,l,r){const s=a.Value?.$target,u=s?.annotations?.Common?.Text,p=o(a.Value?.$target);let c=0,d=0;if(s){switch(p){case"Description":c=this.getMDCColumnWidthFromDataField(u.$target,i,l,r)-1;break;case"DescriptionValue":case"ValueDescription":case"Value":default:c=this.getMDCColumnWidthFromDataField(s,i,l,r)-1}const e=a.Label?a.Label:s.label;d=n&&e?t.getButtonWidth(e):0}else{e.error(`Cannot compute width for type object: ${a.$Type}`)}return{labelWidth:d,propertyWidth:c}}};return s},false);
//# sourceMappingURL=TableSizeHelper.js.map