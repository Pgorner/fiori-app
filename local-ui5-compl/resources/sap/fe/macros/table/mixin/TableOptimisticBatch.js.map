{"version":3,"file":"TableOptimisticBatch.js","names":["TableOptimisticBatch","_exports","_proto","prototype","setupMixin","_baseClass","this","optimisticBatchEnablerPromise","undefined","setupOptimisticBatch","async","table","getContent","tableDelegate","awaitControlDelegate","filterBar","UI5Element","getElementById","getFilter","getParent","attachEvent","searchEvent","tableAPI","controller","getPageController","controllerExtension","extension","isA","includes","getParameter","setOptimisticBatchPromiseForModel","enableOptimisticBatchMode","e","internalBindingContext","getBindingContext","setProperty","setOptimisticBatchEnablerPromise","optimisticBatchEnablerPromiseObject","getOptimisticBatchEnablerPromise","isOptimisticBatchDisabled","getTableDefinition","control","disableRequestCache"],"sources":["./TableOptimisticBatch.ts"],"sourcesContent":["import { type IInterfaceWithMixin } from \"sap/fe/base/ClassSupport\";\nimport type PromiseKeeper from \"sap/fe/core/helpers/PromiseKeeper\";\nimport type FETableDelegate from \"sap/fe/macros/table/delegates/TableDelegate\";\nimport type ListReportController from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport { type ITableBlock } from \"../TableAPI\";\n\nexport default class TableOptimisticBatch implements IInterfaceWithMixin {\n\tprivate optimisticBatchEnablerPromise?: PromiseKeeper<boolean>;\n\n\tsetupMixin(_baseClass: Function): void {\n\t\tthis.optimisticBatchEnablerPromise = undefined;\n\t}\n\n\tasync setupOptimisticBatch(this: ITableBlock): Promise<void> {\n\t\tconst table = this.getContent();\n\t\tif (!table) {\n\t\t\treturn;\n\t\t}\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\t\tconst tableDelegate = (await table?.awaitControlDelegate()) as typeof FETableDelegate;\n\t\tconst filterBar = UI5Element.getElementById(table?.getFilter()) as Control | undefined;\n\t\tif (filterBar && filterBar.getParent) {\n\t\t\tfilterBar.getParent()?.attachEvent(\"search\", (searchEvent: UI5Event<{ reason: string }>) => {\n\t\t\t\tconst tableAPI = table.getParent() as ITableBlock;\n\t\t\t\tconst controller = tableAPI.getPageController()!;\n\t\t\t\tconst controllerExtension = controller.extension;\n\t\t\t\tif (\n\t\t\t\t\tcontroller &&\n\t\t\t\t\tcontroller.isA(\"sap.fe.templates.ListReport.ListReportController\") &&\n\t\t\t\t\tcontrollerExtension === undefined &&\n\t\t\t\t\t![\"Go\", \"Enter\"].includes(searchEvent.getParameter(\"reason\"))\n\t\t\t\t) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttableDelegate?.setOptimisticBatchPromiseForModel(controller as ListReportController, tableAPI);\n\t\t\t\t\t\ttableDelegate?.enableOptimisticBatchMode(controller as ListReportController, table);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// An exception will be thrown when the user clicks go and the table data has already been loaded\n\t\t\t\t\t\t// (setOptimisticBatchPromiseForModel is not supposed to be called once a batch has already been sent)\n\t\t\t\t\t\t// We just ignore this exception\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst internalBindingContext = table.getBindingContext(\"internal\");\n\t\t\t\tinternalBindingContext?.setProperty(\"searchFired\", true);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Setter for the optimisticBatchEnablerPromise property.\n\t * @param optimisticBatchEnablerPromiseObject The Promise that is to be resolved by the V4 model\n\t */\n\tsetOptimisticBatchEnablerPromise(optimisticBatchEnablerPromiseObject: PromiseKeeper<boolean>): void {\n\t\tthis.optimisticBatchEnablerPromise = optimisticBatchEnablerPromiseObject;\n\t}\n\n\t/**\n\t * Getter for the optimisticBatchEnablerPromise property.\n\t * @returns The optimisticBatchEnablerPromise property.\n\t */\n\tgetOptimisticBatchEnablerPromise(): PromiseKeeper<boolean> | undefined {\n\t\treturn this.optimisticBatchEnablerPromise;\n\t}\n\n\t/**\n\t * Method to know if ListReport is configured with Optimistic batch mode disabled.\n\t * @returns Is Optimistic batch mode disabled\n\t */\n\tisOptimisticBatchDisabled(this: ITableBlock): boolean {\n\t\treturn this.getTableDefinition().control.disableRequestCache || false;\n\t}\n}\n"],"mappings":";;;;4EASqBA,EAAoB,oBAAAA,IAAA,CAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAAG,UAAAD,EAGxCE,WAAA,SAAAA,EAAWC,GACVC,KAAKC,8BAAgCC,SACtC,EAACN,EAEKO,qBAANC,eAAMD,IACL,MAAME,EAAQL,KAAKM,aACnB,IAAKD,EAAO,CACX,MACD,CAGA,MAAME,QAAuBF,GAAOG,wBACpC,MAAMC,EAAYC,EAAWC,eAAeN,GAAOO,aACnD,GAAIH,GAAaA,EAAUI,UAAW,CACrCJ,EAAUI,aAAaC,YAAY,SAAWC,IAC7C,MAAMC,EAAWX,EAAMQ,YACvB,MAAMI,EAAaD,EAASE,oBAC5B,MAAMC,EAAsBF,EAAWG,UACvC,GACCH,GACAA,EAAWI,IAAI,qDACfF,IAAwBjB,YACvB,CAAC,KAAM,SAASoB,SAASP,EAAYQ,aAAa,WAClD,CACD,IACChB,GAAeiB,kCAAkCP,EAAoCD,GACrFT,GAAekB,0BAA0BR,EAAoCZ,EAC9E,CAAE,MAAOqB,GAGR,CAEF,CACA,MAAMC,EAAyBtB,EAAMuB,kBAAkB,YACvDD,GAAwBE,YAAY,cAAe,KAAK,EAE1D,CACD,EAEAjC,EAIAkC,iCAAA,SAAAA,EAAiCC,GAChC/B,KAAKC,8BAAgC8B,CACtC,EAEAnC,EAIAoC,iCAAA,SAAAA,IACC,OAAOhC,KAAKC,6BACb,EAEAL,EAIAqC,0BAAA,SAAAA,IACC,OAAOjC,KAAKkC,qBAAqBC,QAAQC,qBAAuB,KACjE,EAAC,OAAA1C,CAAA,CAhEuC,GAgEvCC,EAAAD,EAAA,OAAAC,CAAA","ignoreList":[]}