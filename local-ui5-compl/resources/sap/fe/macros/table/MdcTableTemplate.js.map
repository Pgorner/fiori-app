{"version":3,"file":"MdcTableTemplate.js","names":["getTableType","tableDefinition","_collection","tableType","selectionLimit","collection","getObject","_jsx","GridTableType","rowCountMode","control","rowCount","fixedColumnCount","frozenColumnCount","scrollThreshold","TreeTableType","ResponsiveTableType","showDetailsButton","detailsButtonSetting","growingMode","$kind","undefined","getDataStateIndicator","handlerProvider","DataStateIndicator","filter","dataStateIndicatorFilter","enableFiltering","dataStateChange","getValueHelpTemplateFromPath","id","dataFieldPath","forMultiValueField","ValueHelp","idPrefix","generate","metaPath","useMultiValueField","getValueHelps","column","convertedMetaData","contextObjectPath","dataFieldObject","resolvePath","annotationPath","target","isDataFieldForAnnotation","Target","$target","term","allVH","index","Data","vh","push","isDataFieldTypes","propertyDataModelObject","enhanceDataModelPath","Value","path","relativeNavigationProperties","getPathRelativeLocation","navigationProperties","isMultipleNavigationProperty","length","getDragAndDropEnabled","isPathUpdatableOnNavigation","isPathUpdatable","ignoreTargetCollection","authorizeUnresolvable","pathVisitor","navigationPaths","singletonPathVisitor","convertedTypes","isPathUpdatableOnTarget","startingEntitySet","targetEntitySet","annotations","Common","DraftRoot","and","_type","ifElse","isConstant","constant","isHierarchyParentNodeUpdatable","UI","IsEditable","getDependents","readOnly","variantManagement","dependents","cutAction","actions","find","a","key","StandardActionKeys","Cut","isTemplated","CommandExecution","execute","getCutHandler","command","enabled","pasteAction","Paste","visible","getPasteHandler","columns","availability","createAction","Create","deleteAction","Delete","annotation","isInsertUpdateActionsTemplated","nodeType","enableUploadPlugin","getCreateButtonPressHandler","getDeleteButtonPressHandler","moveUpAction","MoveUp","moveDownAction","MoveDown","getMoveUpDownHandler","actionName","commandActions","action","actionCommand","getActionCommand","displayTableSettings","PersistenceProvider","for","ContextMenuSetting","scope","getUploadPlugin","_exports","getActions","table","collectionContext","collectionEntity","segmentedButtonPress","alpButtonItems","CommonHelper","isDesktop","SegmentedButtonItem","tooltip","icon","ActionToolbarAction","layoutInformation","children","SegmentedButton","select","selectedKey","items","getTableActionsTemplate","getRowSettings","rowAction","rowActionItem","RowActionItem","type","press","rowPress","row","RowSettings","navigated","rowNavigated","highlight","rowHighlighting","rowActions","getContextMenu","tableProperties","navigationInEditMode","menuItems","getTableContextMenuTemplate","getOpenInNewTabTemplate","Menu","itemSelected","contextMenuItemSelected","getDependentsForContextMenu","not","pathInModel","MenuItem","startsSection","text","contextMenuOpenInNewTab","enabledForContextMenu","getVariantManagement","headerLevel","VariantManagement","showSetAsDefault","variantSelected","save","variantSaved","getQuickFilter","filters","quickFilters","QuickFilterSelector","filterConfiguration","selectionChange","quickFilterSelectionChange","getCopyProvider","disableCopyToClipboard","visibleExpression","CopyProvider","getCellSelector","includes","CellSelector","or","rangeLimit","getCreationRow","creationMode","disableAddRowButtonForEmptyData","customValidationFunction","name","CreationMode","CreationRow","creationRowAction","customData","createCustomDatas","value","apply","applyEnabled","getDragAndDropConfig","DragDropConfig","compileExpression","dropPosition","allowDropBetweenNodes","draggable","droppable","dragStart","dragStartDocument","dragEnter","dragEnterDocument","drop","dropDocument","forContextMenu","dataField","actionContextPath","getActionContext","getModel","createBindingContext","actionContext","dataFieldDataModelObjectPath","getInvolvedDataModelObjects","isBound","ActionTarget","isOperationAvailable","Core","OperationAvailable","valueOf","displayCommandAction","TableHelper","isActionShownInContextMenu","parameters","onExecuteAction","getDataFieldForActionButtonPressHandler","onExecuteIBN","getDataFieldForIBNPressHandler","onExecuteManifest","getManifestActionPressHandler","isIBNEnabled","isDataFieldForIBNEnabled","RequiresContext","NavigationAvailable","isActionEnabled","isDataFieldForActionEnabled","Action","enableOnSelect","targetEntityType","isEnabled","getCommandExecutionForAction","getCoreRequire","customModules","additionalRequiredModules","map","module","join","getCustomColumnTemplate","tableId","Column","propertyKey","width","header","hAlign","horizontalAlign","required","extendedSettings","ResponsiveColumnSettings","importance","template","CustomFragmentBlock","fragmentName","contextPath","childCustomData","CustomData","createBindingToLoadProperties","properties","getComputedColumn","enableAnalytics","isDraftIndicator","headerVisible","label","DraftIndicator","draftIndicatorType","ObjectMarkerVisibility","IconOnly","getPath","usedInTable","usedInAnalyticalTable","isSituationsIndicator","SituationsIndicator","getSlotColumn","isReadOnly","SlotColumn","templateId","startsWith","content","getDraftIndicator","formatOptions","fieldGroupDraftIndicatorPropertyPath","FormElementWrapper","IconAndText","getDraftIndicatorVisibleBinding","fieldGroupName","ariaLabelledBy","getSituationIndicator","ObjectStatus","showErrorObjectStatus","class","state","getDefaultDateTimeStyle","dataFieldContext","targetObject","isDataField","hasDataPointTarget","getCreationTemplate","isTableReadOnly","fieldMode","columnEditMode","InternalFieldBlock","vhIdPrefix","editMode","wrap","change","textLinesEdit","textMaxLines","textMaxLength","textMaxCharactersDisplay","textExpandBehaviorDisplay","textAlignMode","semanticKeyStyle","hasDraftIndicator","showIconUrl","Inline","IconUrl","ignoreNavigationAvailable","isCurrencyAligned","dateTimeStyle","getMacroFieldTemplate","onChangeFunction","isCompactType","textAlign","showEmptyIndicator","className","typeConfig","onLiveChange","navigateAfterAction","isNavigable","isAnalytics","forInlineCreationRows","compactSemanticKey","getColumnContentTemplate","dataFieldOP","creationTemplate","isAnnotationOfType","isAnnotationOfTerm","showOnlyChart","settings","showMicroChartLabel","microChartSize","microChartCollection","getNavigationContext","MicroChartBlock","size","hideOnNoData","isMultiValueField","isTruthy","IsInactive","equal","MultiValueFieldBlock","useParentBindingCache","fieldGroup","dataFieldCollectionContext","fieldGroupColectionLength","fieldGroupDataField","fieldGroupDataFieldIdx","fieldGroupDataFieldContext","fieldGroupDataFieldOP","fieldGroupLabel","FieldHelper","computeLabelText","context","showDataFieldsLabel","resourceBundle","Library","getResourceBundleFor","_jsxs","HBox","getVisibleExpression","alignItems","buildExpressionForAlignItems","Label","getFieldGroupLabelStableId","getText","VBox","layoutData","FlexItemData","growFactor","getColumnStableId","getMarginClass","draftIndicator","situationIndicator","getVBoxVisibility","FieldGroupHiddenExpressions","getColumnTemplate","enableAutoColumnWidth","widthIncludingColumnHeader","getDataFieldDefault","dataFieldObjectModelPath","templates","CommonUtils","isSmallDevice","getColumnWidth","getTextOnActionField","title","description","minWidth","getColumnAlignment","setHeaderLabelVisibility","createCustomData","getColumns","getDesigntime","getMDCP13nMode","stringMode","TableP13nMode","Aggregate","Sort","Filter","Group","Log","error","getMDCTableTemplate","convertedMetadata","odataMetaModel","appComponent","navigationInfo","routePath","targetInformation","getRoutingService","_getTargetInformation","options","openInEditMode","filterOnActiveEntities","ModelHelper","isObjectPathDraftSupported","delegate","getDelegate","isAlp","entityName","currentHeader","headerBindingExpression","buildExpressionForHeaderVisible","tabTitle","modelContextChange","tableContextChange","lineItem","getUiLineItemObject","navigationPath","isSingleton","draft","isPublic","designtime","rowPressHandlerPath","showCreate","updatablePropertyPath","currentPersonalization","personalization","p13nMode","mode","split","trim","multiSelectDisabledActions","ActionHelper","getMultiSelectDisabledActions","inlineCreationRowCount","createAtEnd","hiddenFilters","stringifyCustomData","operationAvailableMap","getNavigationAvailableMap","exportRequestSize","MDCTable","sortConditions","groupConditions","aggregateConditions","busy","busyIndicatorDelay","enableExport","beforeOpenContextMenu","autoBindOnInit","useBasicSearch","filterBar","selectionMode","showRowCount","headerStyle","threshold","paste","beforeExport","useCondensedTableLayout","multiSelectMode","showPasteButton","enablePaste","dataStateIndicator","rowSettings","contextMenu","dragDropConfig","creationRow","variant","quickFilter","copyProvider","cellSelector"],"sources":["./MdcTableTemplate.tsx"],"sourcesContent":["import type { ConvertedMetadata, EntitySet, NavigationProperty } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tChart,\n\tDataField,\n\tDataFieldForAction,\n\tDataFieldForAnnotation,\n\tDataPoint,\n\tFieldGroup,\n\tLineItem,\n\tPresentationVariant,\n\tSelectionPresentationVariant\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport {\n\tUIAnnotationTerms,\n\tUIAnnotationTypes,\n\ttype DataFieldAbstractTypes,\n\ttype DataFieldForIntentBasedNavigation\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, equal, ifElse, isConstant, isTruthy, not, or, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf, StrictPropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport { CreationMode } from \"sap/fe/core/converters/ManifestSettings\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { hasDataPointTarget, isDataField, isDataFieldForAnnotation, isDataFieldTypes } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { CustomAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport type {\n\tAnnotationTableColumn,\n\tComputedTableColumn,\n\tCustomBasedTableColumn,\n\tTableColumn,\n\tTableType,\n\tTableVisualization\n} from \"sap/fe/core/converters/controls/Common/Table\";\nimport { StandardActionKeys, type StandardAction } from \"sap/fe/core/converters/controls/Common/table/StandardActions\";\nimport { UI, singletonPathVisitor } from \"sap/fe/core/helpers/BindingHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isAnnotationOfTerm, isAnnotationOfType, isMultipleNavigationProperty, isSingleton } from \"sap/fe/core/helpers/TypeGuards\";\nimport {\n\tenhanceDataModelPath,\n\tgetPathRelativeLocation,\n\tisPathUpdatable,\n\ttype DataModelObjectPath\n} from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type { DateTimeStyle } from \"sap/fe/core/templating/UIFormatters\";\nimport { isMultiValueField } from \"sap/fe/core/templating/UIFormatters\";\nimport { getCommandExecutionForAction } from \"sap/fe/macros/ActionCommand\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport MultiValueFieldBlock from \"sap/fe/macros/MultiValueField\";\nimport { createCustomData, createCustomDatas } from \"sap/fe/macros/TSXUtils\";\nimport ValueHelp from \"sap/fe/macros/ValueHelp\";\nimport DraftIndicator from \"sap/fe/macros/draftIndicator/DraftIndicator\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\nimport { getDraftIndicatorVisibleBinding, getVisibleExpression } from \"sap/fe/macros/field/FieldTemplating\";\nimport CustomFragmentBlock from \"sap/fe/macros/fpm/CustomFragment.block\";\nimport InternalFieldBlock from \"sap/fe/macros/internal/InternalField.block\";\nimport ActionHelper from \"sap/fe/macros/internal/helpers/ActionHelper\";\nimport { buildExpressionForHeaderVisible } from \"sap/fe/macros/internal/helpers/TableTemplating\";\nimport MicroChartBlock from \"sap/fe/macros/microchart/MicroChart.block\";\nimport SituationsIndicator from \"sap/fe/macros/situations/SituationsIndicator\";\nimport { getTableActionsTemplate, getTableContextMenuTemplate } from \"sap/fe/macros/table/ActionsTemplating\";\nimport QuickFilterSelector from \"sap/fe/macros/table/QuickFilterSelector\";\nimport SlotColumn from \"sap/fe/macros/table/SlotColumn\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type TableCreationOptions from \"sap/fe/macros/table/TableCreationOptions\";\nimport TableHelper from \"sap/fe/macros/table/TableHelper\";\nimport { getUploadPlugin } from \"sap/fe/macros/table/uploadTable/UploadTableTemplate\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport Menu from \"sap/m/Menu\";\nimport MenuItem from \"sap/m/MenuItem\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport SegmentedButton from \"sap/m/SegmentedButton\";\nimport SegmentedButtonItem from \"sap/m/SegmentedButtonItem\";\nimport VBox from \"sap/m/VBox\";\nimport { ObjectMarkerVisibility } from \"sap/m/library\";\nimport CellSelector from \"sap/m/plugins/CellSelector\";\nimport ContextMenuSetting from \"sap/m/plugins/ContextMenuSetting\";\nimport CopyProvider from \"sap/m/plugins/CopyProvider\";\nimport DataStateIndicator from \"sap/m/plugins/DataStateIndicator\";\nimport type Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { TitleLevel } from \"sap/ui/core/library\";\nimport VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport MDCTable from \"sap/ui/mdc/Table\";\nimport ActionToolbarAction from \"sap/ui/mdc/actiontoolbar/ActionToolbarAction\";\nimport TableP13nMode from \"sap/ui/mdc/enums/TableP13nMode\";\nimport PersistenceProvider from \"sap/ui/mdc/p13n/PersistenceProvider\";\nimport Column from \"sap/ui/mdc/table/Column\";\nimport CreationRow from \"sap/ui/mdc/table/CreationRow\";\nimport DragDropConfig from \"sap/ui/mdc/table/DragDropConfig\";\nimport GridTableType from \"sap/ui/mdc/table/GridTableType\";\nimport ResponsiveColumnSettings from \"sap/ui/mdc/table/ResponsiveColumnSettings\";\nimport ResponsiveTableType from \"sap/ui/mdc/table/ResponsiveTableType\";\nimport RowActionItem from \"sap/ui/mdc/table/RowActionItem\";\nimport RowSettings from \"sap/ui/mdc/table/RowSettings\";\nimport TreeTableType from \"sap/ui/mdc/table/TreeTableType\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type FieldFormatOptions from \"../field/FieldFormatOptions\";\nimport type TableEventHandlerProvider from \"./TableEventHandlerProvider\";\n\n/**\n * Generates the table type for the table.\n * @param tableDefinition\n * @param _collection\n * @param tableType\n * @param selectionLimit\n * @returns The table type\n */\nfunction getTableType(\n\ttableDefinition: TableVisualization,\n\t_collection: Context,\n\ttableType: TableType,\n\tselectionLimit: number\n): ResponsiveTableType | GridTableType | TreeTableType {\n\tconst collection = _collection.getObject();\n\tswitch (tableType) {\n\t\tcase \"GridTable\":\n\t\t\treturn (\n\t\t\t\t<GridTableType\n\t\t\t\t\trowCountMode={tableDefinition.control.rowCountMode}\n\t\t\t\t\trowCount={tableDefinition.control.rowCount}\n\t\t\t\t\tselectionLimit={selectionLimit}\n\t\t\t\t\tfixedColumnCount={tableDefinition.control.frozenColumnCount}\n\t\t\t\t\tscrollThreshold={tableDefinition.control.scrollThreshold}\n\t\t\t\t/>\n\t\t\t);\n\n\t\tcase \"TreeTable\":\n\t\t\treturn (\n\t\t\t\t<TreeTableType\n\t\t\t\t\trowCountMode={tableDefinition.control.rowCountMode}\n\t\t\t\t\trowCount={tableDefinition.control.rowCount}\n\t\t\t\t\tfixedColumnCount={tableDefinition.control.frozenColumnCount}\n\t\t\t\t\tscrollThreshold={tableDefinition.control.scrollThreshold}\n\t\t\t\t/>\n\t\t\t);\n\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t<ResponsiveTableType\n\t\t\t\t\tshowDetailsButton={true}\n\t\t\t\t\tdetailsButtonSetting={\"{=['Low', 'Medium', 'None']}\"}\n\t\t\t\t\tgrowingMode={collection.$kind === \"EntitySet\" ? \"Scroll\" : undefined}\n\t\t\t\t/>\n\t\t\t);\n\t}\n}\n\n/**\n * Generates the DataSateIndicator for the table.\n * @param handlerProvider\n * @returns The datastate indicator\n */\nfunction getDataStateIndicator(handlerProvider: TableEventHandlerProvider): DataStateIndicator {\n\treturn (\n\t\t<DataStateIndicator\n\t\t\tfilter={handlerProvider.dataStateIndicatorFilter}\n\t\t\tenableFiltering={true}\n\t\t\tdataStateChange={handlerProvider.dataStateChange}\n\t\t/>\n\t);\n}\n\n/**\n * Generates the valueHelp based on the dataField path.\n * @param id\n * @param dataFieldPath DataFieldPath to be evaluated\n * @param forMultiValueField\n * @returns The valueHelp\n */\nfunction getValueHelpTemplateFromPath(id: string, dataFieldPath?: string, forMultiValueField?: boolean): ValueHelp | undefined {\n\tif (dataFieldPath) {\n\t\treturn (\n\t\t\t<ValueHelp\n\t\t\t\tidPrefix={generate([id, \"TableValueHelp\"])}\n\t\t\t\tmetaPath={dataFieldPath + \"/Value\"}\n\t\t\t\tuseMultiValueField={forMultiValueField === true ? true : undefined}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Generates the valueHelps based on a column.\n * @param id\n * @param column Column to be evaluated\n * @param convertedMetaData\n * @param contextObjectPath\n * @returns The valueHelps\n */\nfunction getValueHelps(\n\tid: string,\n\tcolumn: AnnotationTableColumn,\n\tconvertedMetaData: ConvertedMetadata,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>\n): ValueHelp[] {\n\tconst dataFieldObject = convertedMetaData.resolvePath(column.annotationPath).target as DataFieldAbstractTypes;\n\tif (isDataFieldForAnnotation(dataFieldObject) && dataFieldObject.Target.$target?.term === UIAnnotationTerms.Chart) {\n\t\treturn [];\n\t} else if (isDataFieldForAnnotation(dataFieldObject) && dataFieldObject.Target.$target?.term === UIAnnotationTerms.FieldGroup) {\n\t\tconst allVH: ValueHelp[] = [];\n\t\tfor (const index in dataFieldObject.Target.$target.Data) {\n\t\t\tconst vh = getValueHelpTemplateFromPath(id, column.annotationPath + \"/Target/$AnnotationPath/Data/\" + index);\n\t\t\tif (vh) {\n\t\t\t\tallVH.push(vh);\n\t\t\t}\n\t\t}\n\t\treturn allVH;\n\t} else {\n\t\tif (isDataFieldTypes(dataFieldObject)) {\n\t\t\tconst propertyDataModelObject = enhanceDataModelPath(contextObjectPath, dataFieldObject.Value.path);\n\t\t\tconst relativeNavigationProperties = getPathRelativeLocation(contextObjectPath, propertyDataModelObject.navigationProperties);\n\t\t\tif (isMultipleNavigationProperty(relativeNavigationProperties[relativeNavigationProperties.length - 1])) {\n\t\t\t\tconst vh = getValueHelpTemplateFromPath(id, column.annotationPath, true);\n\t\t\t\treturn vh ? [vh] : [];\n\t\t\t}\n\t\t}\n\t\tconst vh = getValueHelpTemplateFromPath(id, column.annotationPath);\n\t\treturn vh ? [vh] : [];\n\t}\n}\n\n/**\n * Generates the binding expression for the drag and drop enablement.\n * @param contextObjectPath\n * @param tableDefinition\n * @returns The binding expression\n */\nfunction getDragAndDropEnabled(\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\ttableDefinition: TableVisualization\n): BindingToolkitExpression<boolean> {\n\tconst isPathUpdatableOnNavigation = isPathUpdatable(contextObjectPath, {\n\t\tignoreTargetCollection: true,\n\t\tauthorizeUnresolvable: true,\n\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\tsingletonPathVisitor(path, contextObjectPath.convertedTypes, navigationPaths)\n\t});\n\tconst isPathUpdatableOnTarget = isPathUpdatable(contextObjectPath, {\n\t\tauthorizeUnresolvable: true,\n\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\tsingletonPathVisitor(path, contextObjectPath.convertedTypes, navigationPaths)\n\t});\n\n\tif (contextObjectPath.startingEntitySet === contextObjectPath.targetEntitySet) {\n\t\t// ListReport case: we allow drag and drop on draft-enabled entities\n\t\tif ((contextObjectPath.startingEntitySet as EntitySet).annotations.Common?.DraftRoot !== undefined) {\n\t\t\treturn and(\n\t\t\t\tisPathUpdatableOnNavigation._type === \"Unresolvable\"\n\t\t\t\t\t? ifElse(isConstant(isPathUpdatableOnTarget), isPathUpdatableOnTarget, constant(true))\n\t\t\t\t\t: isPathUpdatableOnNavigation,\n\t\t\t\ttableDefinition.control.isHierarchyParentNodeUpdatable!\n\t\t\t);\n\t\t} else {\n\t\t\treturn constant(false);\n\t\t}\n\t} else {\n\t\t// ObjectPage case: we allow drag and drop in edit mode\n\t\treturn and(\n\t\t\tisPathUpdatableOnNavigation._type === \"Unresolvable\"\n\t\t\t\t? ifElse(isConstant(isPathUpdatableOnTarget), isPathUpdatableOnTarget, constant(true))\n\t\t\t\t: isPathUpdatableOnNavigation,\n\t\t\tUI.IsEditable,\n\t\t\ttableDefinition.control.isHierarchyParentNodeUpdatable!\n\t\t);\n\t}\n}\n\nexport function getDependents(\n\tid: string,\n\ttableDefinition: TableVisualization,\n\ttableType: TableType | undefined,\n\treadOnly: boolean | undefined,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\tvariantManagement: string | undefined,\n\thandlerProvider: TableEventHandlerProvider,\n\tmetaPath: Context,\n\tcollection: Context\n): UI5Element[] {\n\tconst dependents: UI5Element[] = [];\n\tconst cutAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Cut) as StandardAction | undefined;\n\tif (cutAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getCutHandler(false)}\n\t\t\t\tcommand=\"Cut\"\n\t\t\t\tenabled={cutAction.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\tconst pasteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Paste) as StandardAction | undefined;\n\tif (pasteAction?.visible !== \"false\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getPasteHandler(false)}\n\t\t\t\tcommand=\"Paste\"\n\t\t\t\tenabled={pasteAction?.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tif (!readOnly && tableDefinition?.columns) {\n\t\tfor (const column of tableDefinition.columns) {\n\t\t\tif (column.availability === \"Default\" && \"annotationPath\" in column) {\n\t\t\t\tdependents.push(...getValueHelps(id, column, contextObjectPath.convertedTypes, contextObjectPath));\n\t\t\t}\n\t\t}\n\t}\n\tconst createAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Create) as StandardAction | undefined;\n\tconst deleteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Delete) as StandardAction | undefined;\n\n\tif (\n\t\ttableDefinition.annotation.isInsertUpdateActionsTemplated &&\n\t\tcreateAction?.isTemplated === \"true\" &&\n\t\ttableDefinition.control.nodeType === undefined &&\n\t\ttableDefinition.control.enableUploadPlugin === false\n\t) {\n\t\t// The shortcut is not enabled in case of a create menu (i.e. when nodeType is defined)\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getCreateButtonPressHandler(false, false)}\n\t\t\t\tvisible={createAction.visible as unknown as boolean}\n\t\t\t\tenabled={createAction.enabled as unknown as boolean}\n\t\t\t\tcommand=\"Create\"\n\t\t\t/>\n\t\t);\n\t}\n\tif (deleteAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getDeleteButtonPressHandler(false)}\n\t\t\t\tvisible={deleteAction.visible as unknown as boolean}\n\t\t\t\tenabled={deleteAction.enabled as unknown as boolean}\n\t\t\t\tcommand=\"DeleteEntry\"\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Move up and down actions\n\tconst moveUpAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveUp) as StandardAction | undefined;\n\tconst moveDownAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveDown) as StandardAction | undefined;\n\tif (\n\t\tmoveUpAction &&\n\t\tmoveDownAction &&\n\t\tmoveUpAction.visible !== \"false\" &&\n\t\tmoveDownAction.visible !== \"false\" &&\n\t\ttableType === \"TreeTable\"\n\t) {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getMoveUpDownHandler(true, false)}\n\t\t\t\tcommand=\"TableMoveElementUp\"\n\t\t\t\tenabled={moveUpAction.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getMoveUpDownHandler(false, false)}\n\t\t\t\tcommand=\"TableMoveElementDown\"\n\t\t\t\tenabled={moveDownAction.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfor (const actionName in tableDefinition.commandActions) {\n\t\tconst action = tableDefinition.commandActions[actionName];\n\t\tconst actionCommand = getActionCommand(\n\t\t\tactionName,\n\t\t\taction,\n\t\t\tfalse,\n\t\t\tcontextObjectPath.convertedTypes,\n\t\t\tmetaPath,\n\t\t\tcollection,\n\t\t\ttableDefinition,\n\t\t\tcontextObjectPath,\n\t\t\thandlerProvider\n\t\t);\n\t\tif (actionCommand) {\n\t\t\tdependents.push(actionCommand);\n\t\t}\n\t}\n\n\tdependents.push(<CommandExecution execute={handlerProvider.displayTableSettings} command=\"TableSettings\" />);\n\tif (variantManagement === \"None\") {\n\t\t// Persistence provider offers persisting personalization changes without variant management\n\t\tdependents.push(<PersistenceProvider id={generate([id, \"PersistenceProvider\"])} for={id} />);\n\t}\n\n\tdependents.push(<ContextMenuSetting scope=\"Selection\" />);\n\n\tif (tableDefinition.control.enableUploadPlugin) {\n\t\tdependents.push(getUploadPlugin(tableDefinition, id));\n\t}\n\n\treturn dependents;\n}\n\nfunction getActions(\n\ttable: TableBlockProperties,\n\thandlerProvider: TableEventHandlerProvider,\n\tcollectionContext: Context,\n\tcollectionEntity: EntitySet | NavigationProperty\n): Control[] | undefined {\n\tconst actions: Control[] = [];\n\tif (handlerProvider.segmentedButtonPress) {\n\t\tconst alpButtonItems: SegmentedButtonItem[] = [];\n\t\tif (CommonHelper.isDesktop()) {\n\t\t\talpButtonItems.push(\n\t\t\t\t<SegmentedButtonItem\n\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_COMMON_HYBRID_SEGMENTED_BUTTON_ITEM_TOOLTIP}\"\n\t\t\t\t\tkey=\"Hybrid\"\n\t\t\t\t\ticon=\"sap-icon://chart-table-view\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\talpButtonItems.push(\n\t\t\t<SegmentedButtonItem\n\t\t\t\ttooltip=\"{sap.fe.i18n>M_COMMON_CHART_SEGMENTED_BUTTON_ITEM_TOOLTIP}\"\n\t\t\t\tkey=\"Chart\"\n\t\t\t\ticon=\"sap-icon://bar-chart\"\n\t\t\t/>\n\t\t);\n\t\talpButtonItems.push(\n\t\t\t<SegmentedButtonItem\n\t\t\t\ttooltip=\"{sap.fe.i18n>M_COMMON_TABLE_SEGMENTED_BUTTON_ITEM_TOOLTIP}\"\n\t\t\t\tkey=\"Table\"\n\t\t\t\ticon=\"sap-icon://table-view\"\n\t\t\t/>\n\t\t);\n\n\t\tactions.push(\n\t\t\t<ActionToolbarAction\n\t\t\t\tlayoutInformation={'{ aggregationName: \"end\", alignment: \"End\" }'}\n\t\t\t\tvisible={\"{= ${pageInternal>alpContentView} === 'Table' }\"}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\taction: (\n\t\t\t\t\t\t<SegmentedButton\n\t\t\t\t\t\t\tid={generate([table.id, \"SegmentedButton\", \"TemplateContentView\"])}\n\t\t\t\t\t\t\tselect={handlerProvider.segmentedButtonPress}\n\t\t\t\t\t\t\tselectedKey=\"{pageInternal>alpContentView}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\titems: alpButtonItems\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</SegmentedButton>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</ActionToolbarAction>\n\t\t);\n\t}\n\n\tactions.push(...getTableActionsTemplate(table, handlerProvider, collectionContext, collectionEntity));\n\n\treturn actions.length > 0 ? actions : undefined;\n}\n\nfunction getRowSettings(\n\ttableDefinition: TableVisualization,\n\trowAction: string | undefined,\n\ttableType: TableType,\n\thandlerProvider: TableEventHandlerProvider\n): RowSettings {\n\tconst rowActionItem = (\n\t\t<RowActionItem\n\t\t\ttype={rowAction}\n\t\t\tpress={tableType === \"ResponsiveTable\" ? undefined : handlerProvider.rowPress}\n\t\t\tvisible={tableDefinition.annotation.row?.visible}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<RowSettings navigated={tableDefinition.annotation.row?.rowNavigated} highlight={tableDefinition.annotation.row?.rowHighlighting}>\n\t\t\t{{\n\t\t\t\trowActions: rowAction === \"Navigation\" ? rowActionItem : undefined\n\t\t\t}}\n\t\t</RowSettings>\n\t);\n}\n\n/**\n * Generates the context menu for the table.\n * @param tableProperties\n * @param tableType\n * @param tableDefinition\n * @param collectionEntity\n * @param rowAction\n * @param handlerProvider\n * @param id\n * @param contextObjectPath\n * @param metaPath\n * @param collection\n * @returns The context menu\n */\nfunction getContextMenu(\n\ttableProperties: TableBlockProperties,\n\ttableType: TableType,\n\ttableDefinition: TableVisualization,\n\tcollectionEntity: EntitySet | NavigationProperty,\n\trowAction: string | undefined,\n\thandlerProvider: TableEventHandlerProvider,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\tmetaPath: Context,\n\tcollection: Context,\n\tnavigationInEditMode: boolean\n): Menu | undefined {\n\tconst menuItems = getTableContextMenuTemplate(tableProperties, handlerProvider, collection, collectionEntity);\n\tif (rowAction === \"Navigation\" && !navigationInEditMode) {\n\t\tmenuItems.push(getOpenInNewTabTemplate(handlerProvider));\n\t}\n\tif (menuItems.length > 0) {\n\t\treturn (\n\t\t\t<Menu itemSelected={handlerProvider.contextMenuItemSelected}>\n\t\t\t\t{{\n\t\t\t\t\tdependents: getDependentsForContextMenu(\n\t\t\t\t\t\ttableDefinition,\n\t\t\t\t\t\ttableType,\n\t\t\t\t\t\tcontextObjectPath,\n\t\t\t\t\t\thandlerProvider,\n\t\t\t\t\t\tmetaPath,\n\t\t\t\t\t\tcollection\n\t\t\t\t\t),\n\t\t\t\t\titems: menuItems\n\t\t\t\t}}\n\t\t\t</Menu>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the template string for the MenuItem.\n * @param handlerProvider\n * @returns The xml string representation for the MenuItem\n */\nfunction getOpenInNewTabTemplate(handlerProvider: TableEventHandlerProvider): MenuItem {\n\t// The 'Open in New Tab' action should not be visible for sticky sessions in edit mode\n\t// For the context menu, the visibility should also consider the 'inactiveContext' property:\n\t// only when at least one selected context is active (i.e. \"contextmenu/inactiveContext\" is false), the action should be visible in the context menu\n\t// The second is only relevant when the table manifest setting \"creationMode\" is \"InlineCreationRows\"\n\tconst visible = and(\n\t\tnot(and(pathInModel(\"/sessionOn\", \"internal\"), UI.IsEditable)),\n\t\tnot(pathInModel(\"contextmenu/inactiveContext\", \"internal\"))\n\t);\n\n\treturn (\n\t\t<MenuItem\n\t\t\tcore:require=\"{API: 'sap/fe/macros/table/TableAPI'}\"\n\t\t\tstartsSection={true}\n\t\t\ttext=\"{sap.fe.i18n>M_COMMON_TABLE_CONTEXT_MENU_OPEN_IN_NEW_TAB}\"\n\t\t\tpress={handlerProvider.contextMenuOpenInNewTab}\n\t\t\tenabled=\"{= ${internal>contextmenu/numberOfSelectedContexts} > 0}\"\n\t\t\tvisible={visible}\n\t\t/>\n\t);\n}\n\n/**\n * Generates the template string for the Menu dependents.\n * @param tableDefinition\n * @param tableType\n * @param contextObjectPath\n * @param handlerProvider\n * @param metaPath\n * @param collection\n * @returns The xml string representation  the Menu dependents\n */\nfunction getDependentsForContextMenu(\n\ttableDefinition: TableVisualization,\n\ttableType: TableType,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\thandlerProvider: TableEventHandlerProvider,\n\tmetaPath: Context,\n\tcollection: Context\n): UI5Element[] | undefined {\n\tconst dependents: UI5Element[] = [];\n\n\tconst createAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Create) as StandardAction | undefined;\n\tif (createAction?.isTemplated === \"true\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getCreateButtonPressHandler(true, false)}\n\t\t\t\tcommand=\"Create::ContextMenu\"\n\t\t\t\tvisible={createAction.visible as unknown as boolean}\n\t\t\t\tenabled={createAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst cutAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Cut) as StandardAction | undefined;\n\tif (cutAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getCutHandler(true)}\n\t\t\t\tcommand=\"Cut::ContextMenu\"\n\t\t\t\tenabled={cutAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\tconst pasteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Paste) as StandardAction | undefined;\n\tif (pasteAction?.visible !== \"false\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getPasteHandler(true)}\n\t\t\t\tcommand=\"Paste::ContextMenu\"\n\t\t\t\tenabled={pasteAction?.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst deleteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Delete) as StandardAction | undefined;\n\n\tif (deleteAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getDeleteButtonPressHandler(true)}\n\t\t\t\tvisible={deleteAction.visible as unknown as boolean}\n\t\t\t\tenabled={deleteAction.enabledForContextMenu as unknown as boolean}\n\t\t\t\tcommand=\"DeleteEntry::ContextMenu\"\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Move up and down actions\n\tconst moveUpAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveUp) as StandardAction | undefined;\n\tconst moveDownAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveDown) as StandardAction | undefined;\n\tif (\n\t\tmoveUpAction &&\n\t\tmoveDownAction &&\n\t\tmoveUpAction.visible !== \"false\" &&\n\t\tmoveDownAction.visible !== \"false\" &&\n\t\ttableType === \"TreeTable\"\n\t) {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getMoveUpDownHandler(true, true)}\n\t\t\t\tcommand=\"TableMoveElementUp::ContextMenu\"\n\t\t\t\tenabled={moveUpAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getMoveUpDownHandler(false, true)}\n\t\t\t\tcommand=\"TableMoveElementDown::ContextMenu\"\n\t\t\t\tenabled={moveDownAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfor (const actionName in tableDefinition.commandActions) {\n\t\tconst action = tableDefinition.commandActions[actionName];\n\t\tconst actionCommand = getActionCommand(\n\t\t\tactionName,\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tcontextObjectPath.convertedTypes,\n\t\t\tmetaPath,\n\t\t\tcollection,\n\t\t\ttableDefinition,\n\t\t\tcontextObjectPath,\n\t\t\thandlerProvider\n\t\t);\n\t\tif (actionCommand) {\n\t\t\tdependents.push(actionCommand);\n\t\t}\n\t}\n\treturn dependents.length > 0 ? dependents : undefined;\n}\n\n/**\n * Generates the VariantManagement for the table.\n * @param variantManagement\n * @param id\n * @param headerLevel\n * @param handlerProvider\n * @returns The VariantManagement control\n */\nfunction getVariantManagement(\n\tvariantManagement: string,\n\tid: string,\n\theaderLevel: TitleLevel,\n\thandlerProvider: TableEventHandlerProvider\n): VariantManagement | undefined {\n\tif (variantManagement === \"Control\") {\n\t\treturn (\n\t\t\t<VariantManagement\n\t\t\t\tid={generate([id, \"VM\"])}\n\t\t\t\tshowSetAsDefault={true}\n\t\t\t\tselect={handlerProvider.variantSelected}\n\t\t\t\theaderLevel={headerLevel}\n\t\t\t\tsave={handlerProvider.variantSaved}\n\t\t\t\tfor={[id]}\n\t\t\t></VariantManagement>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the QuickFilterSelector control for the table.\n * @param tableDefinition\n * @param id\n * @param handlerProvider\n * @param metaPath\n * @returns The QuickFilterSelector control\n */\nfunction getQuickFilter(\n\ttableDefinition: TableVisualization,\n\tid: string,\n\thandlerProvider: TableEventHandlerProvider,\n\tmetaPath: string\n): QuickFilterSelector | undefined {\n\tif (tableDefinition.control.filters?.quickFilters) {\n\t\tconst quickFilters = tableDefinition.control.filters.quickFilters;\n\n\t\treturn (\n\t\t\t<QuickFilterSelector\n\t\t\t\tid={generate([id, \"QuickFilterContainer\"])}\n\t\t\t\tmetaPath={metaPath}\n\t\t\t\tfilterConfiguration={quickFilters}\n\t\t\t\tselectionChange={handlerProvider.quickFilterSelectionChange}\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates CopyProvider for the table.\n * @param tableType\n * @param contextObjectPath\n * @param disableCopyToClipboard\n * @returns The CopyProvider\n */\nfunction getCopyProvider(\n\ttableType: TableType,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\tdisableCopyToClipboard: boolean | undefined\n): CopyProvider {\n\tlet visibleExpression: BindingToolkitExpression<boolean>;\n\tif (disableCopyToClipboard) {\n\t\tvisibleExpression = constant(false);\n\t} else if (tableType === \"TreeTable\") {\n\t\t// For a TreeTable, the copy button shall be visible only when drag and drop is disabled\n\t\tif (contextObjectPath.startingEntitySet === contextObjectPath.targetEntitySet) {\n\t\t\t// ListReport: enable copy if the entity is not draft-enabled\n\t\t\tvisibleExpression = constant((contextObjectPath.startingEntitySet as EntitySet).annotations.Common?.DraftRoot === undefined);\n\t\t} else {\n\t\t\t// ObjectPage: enable copy in read-only\n\t\t\tvisibleExpression = not(UI.IsEditable);\n\t\t}\n\t} else {\n\t\tvisibleExpression = constant(true);\n\t}\n\n\treturn <CopyProvider visible={visibleExpression} />;\n}\n\n/**\n * Generates the CellSelector for the table.\n * @param tableType\n * @param tableDefinition\n * @param contextObjectPath\n * @param disableCopyToClipboard\n * @returns The CellSelector\n */\nfunction getCellSelector(\n\ttableType: TableType,\n\ttableDefinition: TableVisualization,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\tdisableCopyToClipboard: boolean | undefined\n): CellSelector | undefined {\n\tif (!disableCopyToClipboard && tableType && [\"ResponsiveTable\", \"GridTable\", \"TreeTable\"].includes(tableType)) {\n\t\treturn (\n\t\t\t<CellSelector\n\t\t\t\tenabled={or(tableType !== \"TreeTable\", not(getDragAndDropEnabled(contextObjectPath, tableDefinition)))}\n\t\t\t\trangeLimit={200}\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the CreationRow for the table.\n * @param creationMode\n * @param tableDefinition\n * @param id\n * @param disableAddRowButtonForEmptyData\n * @param handlerProvider\n * @param customValidationFunction\n * @returns The CreationRow\n */\nfunction getCreationRow(\n\tcreationMode: TableCreationOptions,\n\ttableDefinition: TableVisualization,\n\tid: string,\n\tdisableAddRowButtonForEmptyData: boolean,\n\thandlerProvider: TableEventHandlerProvider,\n\tcustomValidationFunction?: string\n): CreationRow | undefined {\n\tif ((creationMode.name as string) === CreationMode.CreationRow) {\n\t\tconst creationRowAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.CreationRow) as\n\t\t\t| StandardAction\n\t\t\t| undefined;\n\t\tif (creationRowAction?.isTemplated) {\n\t\t\tconst customData = createCustomDatas([\n\t\t\t\t{ key: \"disableAddRowButtonForEmptyData\", value: disableAddRowButtonForEmptyData },\n\t\t\t\t{ key: \"customValidationFunction\", value: customValidationFunction }\n\t\t\t]);\n\n\t\t\treturn (\n\t\t\t\t<CreationRow\n\t\t\t\t\tid={generate([id, CreationMode.CreationRow])}\n\t\t\t\t\tvisible={creationRowAction.visible as unknown as boolean}\n\t\t\t\t\tapply={handlerProvider.getCreateButtonPressHandler(false, true)}\n\t\t\t\t\tapplyEnabled={creationRowAction.enabled as unknown as boolean}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: customData\n\t\t\t\t\t}}\n\t\t\t\t</CreationRow>\n\t\t\t);\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the drag and drop config for the table.\n * @param tableType\n * @param contextObjectPath\n * @param tableDefinition\n * @param handlerProvider\n * @returns The drag and drop config\n */\nfunction getDragAndDropConfig(\n\ttableType: TableType,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\ttableDefinition: TableVisualization,\n\thandlerProvider: TableEventHandlerProvider\n): DragDropConfig | undefined {\n\tif (tableType === \"TreeTable\") {\n\t\treturn (\n\t\t\t<DragDropConfig\n\t\t\t\tenabled={compileExpression(getDragAndDropEnabled(contextObjectPath, tableDefinition))}\n\t\t\t\tdropPosition={tableDefinition.annotation.allowDropBetweenNodes === true ? \"OnOrBetween\" : \"On\"}\n\t\t\t\tdraggable={true}\n\t\t\t\tdroppable={true}\n\t\t\t\tdragStart={handlerProvider.dragStartDocument}\n\t\t\t\tdragEnter={handlerProvider.dragEnterDocument}\n\t\t\t\tdrop={handlerProvider.dropDocument}\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates an actionCommand for the table.\n * @param actionName The name of the action\n * @param action Action to be evaluated\n * @param forContextMenu Indicates if the action appears in the context menu. If false, the action appears in the table toolbar\n * @param convertedMetaData\n * @param metaPath\n * @param collection\n * @param tableDefinition\n * @param contextObjectPath\n * @param handlerProvider\n * @returns The actionCommand\n */\nfunction getActionCommand(\n\tactionName: string,\n\taction: CustomAction,\n\tforContextMenu: boolean,\n\tconvertedMetaData: ConvertedMetadata,\n\tmetaPath: Context,\n\tcollection: Context,\n\ttableDefinition: TableVisualization,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\thandlerProvider: TableEventHandlerProvider\n): CommandExecution | undefined {\n\tconst dataField = action.annotationPath\n\t\t? (convertedMetaData.resolvePath(action.annotationPath).target as DataFieldForAction | DataFieldForIntentBasedNavigation)\n\t\t: undefined;\n\tconst actionContextPath = action.annotationPath\n\t\t? CommonHelper.getActionContext(metaPath.getModel().createBindingContext(action.annotationPath + \"/Action\")!)\n\t\t: undefined;\n\tconst actionContext = metaPath.getModel().createBindingContext(actionContextPath);\n\tconst dataFieldDataModelObjectPath = actionContext ? getInvolvedDataModelObjects(actionContext, collection) : undefined;\n\tconst isBound = (dataField as DataFieldForAction)?.ActionTarget?.isBound;\n\tconst isOperationAvailable =\n\t\t(dataField as DataFieldForAction)?.ActionTarget?.annotations?.Core?.OperationAvailable?.valueOf() !== false;\n\tconst displayCommandAction = action.type === \"ForAction\" ? isBound !== true || isOperationAvailable : true;\n\tconst enabled = !forContextMenu ? action.enabled : action.enabledForContextMenu;\n\tif (displayCommandAction && (!forContextMenu || TableHelper.isActionShownInContextMenu(action, contextObjectPath))) {\n\t\tconst command = !forContextMenu ? action.command : action.command + \"::ContextMenu\";\n\n\t\tconst parameters = {\n\t\t\tonExecuteAction: handlerProvider.getDataFieldForActionButtonPressHandler(\n\t\t\t\tdataField as DataFieldForAction,\n\t\t\t\taction,\n\t\t\t\tundefined,\n\t\t\t\tforContextMenu\n\t\t\t),\n\t\t\tonExecuteIBN: handlerProvider.getDataFieldForIBNPressHandler(action, false),\n\t\t\tonExecuteManifest: handlerProvider.getManifestActionPressHandler(action, forContextMenu),\n\t\t\tisIBNEnabled:\n\t\t\t\tenabled ??\n\t\t\t\tTableHelper.isDataFieldForIBNEnabled(\n\t\t\t\t\t{ collection: collection, tableDefinition: tableDefinition },\n\t\t\t\t\tdataField! as DataFieldForIntentBasedNavigation,\n\t\t\t\t\t!!(dataField as DataFieldForIntentBasedNavigation).RequiresContext,\n\t\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).NavigationAvailable,\n\t\t\t\t\tforContextMenu\n\t\t\t\t),\n\t\t\tisActionEnabled:\n\t\t\t\tenabled ??\n\t\t\t\tTableHelper.isDataFieldForActionEnabled(\n\t\t\t\t\ttableDefinition,\n\t\t\t\t\t(dataField! as DataFieldForAction).Action,\n\t\t\t\t\t!!isBound,\n\t\t\t\t\tactionContextPath,\n\t\t\t\t\taction.enableOnSelect,\n\t\t\t\t\tdataFieldDataModelObjectPath?.targetEntityType,\n\t\t\t\t\tforContextMenu\n\t\t\t\t),\n\t\t\tisEnabled: enabled\n\t\t};\n\t\treturn getCommandExecutionForAction(command, tableDefinition.commandActions![actionName], parameters);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the template string for the required modules.\n * @param tableDefinition\n * @returns The list of required modules\n */\nfunction getCoreRequire(tableDefinition: TableVisualization): string {\n\tconst customModules = tableDefinition.control.additionalRequiredModules ?? [];\n\n\treturn `{TableRuntime: 'sap/fe/macros/table/TableRuntime', API: 'sap/fe/macros/table/TableAPI'${customModules\n\t\t.map((module: string, index: number) => `, customModule${index + 1}: '${module}'`)\n\t\t.join(\"\")}}`;\n}\n\n/**\n * Create the template for a custom column that will load a CustomFragment.\n * @param tableId The TableID\n * @param column The custom column definition\n * @param collection The collection context used for context path\n * @returns The the custom column.\n */\nexport function getCustomColumnTemplate(tableId: string, column: CustomBasedTableColumn, collection: Context): Column {\n\treturn (\n\t\t<Column\n\t\t\tid={generate([tableId, \"C\", column.id])}\n\t\t\tpropertyKey={column.name}\n\t\t\twidth={column.width}\n\t\t\theader={column.header}\n\t\t\thAlign={column.horizontalAlign}\n\t\t\ttooltip={column.tooltip}\n\t\t\trequired={column.required}\n\t\t>\n\t\t\t{{\n\t\t\t\textendedSettings: <ResponsiveColumnSettings importance={column.importance} />,\n\t\t\t\ttemplate: (\n\t\t\t\t\t<CustomFragmentBlock id={column.key} fragmentName={column.template} contextPath={collection}>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\tchildCustomData: (\n\t\t\t\t\t\t\t\t<CustomData\n\t\t\t\t\t\t\t\t\tkey=\"AssociatedProperties\"\n\t\t\t\t\t\t\t\t\tvalue={TableHelper.createBindingToLoadProperties(column.properties)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t</CustomFragmentBlock>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Column>\n\t);\n}\n\n/**\n * Create the template for a computed column.\n * Currently, this represents only the DraftIndicator and the SituationsIndicator.\n * @param tableId The table ID\n * @param column The computed column definition\n * @param collection The collection context used for context path\n * @param enableAnalytics Whether analytics are enabled\n * @returns The computed column.\n */\nexport function getComputedColumn(\n\ttableId: string,\n\tcolumn: ComputedTableColumn,\n\tcollection: Context,\n\tenableAnalytics: boolean | undefined\n): Column | undefined {\n\tif (column.isDraftIndicator) {\n\t\treturn (\n\t\t\t<Column\n\t\t\t\tid={generate([tableId, \"C\", \"computedColumns\", \"draftStatus\"])}\n\t\t\t\theaderVisible={false}\n\t\t\t\tpropertyKey={column.name}\n\t\t\t\theader={column.label}\n\t\t\t\ttooltip={column.tooltip}\n\t\t\t\twidth=\"3em\"\n\t\t\t>\n\t\t\t\t<DraftIndicator\n\t\t\t\t\tdraftIndicatorType={ObjectMarkerVisibility.IconOnly}\n\t\t\t\t\tcontextPath={collection.getPath()}\n\t\t\t\t\tusedInTable={true}\n\t\t\t\t\tusedInAnalyticalTable={enableAnalytics}\n\t\t\t\t/>\n\t\t\t</Column>\n\t\t);\n\t} else if (column.isSituationsIndicator) {\n\t\treturn (\n\t\t\t<Column\n\t\t\t\tid={generate([tableId, \"C\", \"computedColumns\", \"situationsIndicator\"])}\n\t\t\t\tpropertyKey={column.name}\n\t\t\t\theader={column.label}\n\t\t\t\ttooltip={column.tooltip}\n\t\t\t\theaderVisible={false}\n\t\t\t\twidth=\"4em\"\n\t\t\t>\n\t\t\t\t<SituationsIndicator contextPath={collection.getPath()} />\n\t\t\t</Column>\n\t\t);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\n/**\n * Create the template for a slot column.\n * This column will either reuse a template control that is defined at runtime (templateId case), or define a slot where the XML content is copied.\n * @param tableId The table ID\n * @param column The slot column definition\n * @param isReadOnly Whether the table is read only\n * @returns The slot column.\n */\nexport function getSlotColumn(tableId: string, column: CustomBasedTableColumn, isReadOnly: boolean | undefined): Column {\n\treturn (\n\t\t<Column\n\t\t\tid={generate([tableId, \"C\", column.id])}\n\t\t\tpropertyKey={column.name}\n\t\t\twidth={column.width}\n\t\t\thAlign={column.horizontalAlign}\n\t\t\theader={column.header}\n\t\t\ttooltip={column.tooltip}\n\t\t\trequired={isReadOnly ? undefined : column.required}\n\t\t>\n\t\t\t{{\n\t\t\t\textendedSettings: <ResponsiveColumnSettings importance={column.importance} />,\n\t\t\t\ttemplate: (\n\t\t\t\t\t<SlotColumn templateId={column.template?.startsWith(\"<\") ? undefined : column.template}>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\tcontent: column.template?.startsWith(\"<\") ? column.template : undefined\n\t\t\t\t\t\t}}\n\t\t\t\t\t</SlotColumn>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Column>\n\t);\n}\n\n/**\n * Create the template for the DraftIndicator.\n * @param collection The context of the collection\n * @param column The column definition\n * @returns The XML string representing the DraftIndicator.\n */\nfunction getDraftIndicator(collection: Context, column: AnnotationTableColumn): FormElementWrapper | undefined {\n\tif (\n\t\tcollection.getObject(\"./@com.sap.vocabularies.Common.v1.DraftRoot\") &&\n\t\tcollection.getObject(\"./@com.sap.vocabularies.Common.v1.SemanticKey\") &&\n\t\tcolumn.formatOptions?.fieldGroupDraftIndicatorPropertyPath\n\t) {\n\t\treturn (\n\t\t\t<FormElementWrapper>\n\t\t\t\t<DraftIndicator\n\t\t\t\t\tdraftIndicatorType={ObjectMarkerVisibility.IconAndText}\n\t\t\t\t\tcontextPath={collection.getPath()}\n\t\t\t\t\tvisible={getDraftIndicatorVisibleBinding(column.formatOptions?.fieldGroupName)}\n\t\t\t\t\tariaLabelledBy={[\"this>ariaLabelledBy\"]}\n\t\t\t\t/>\n\t\t\t</FormElementWrapper>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Create the SituationIndicator ObjectStatus.\n * @param collection The context of the collection\n * @param column The column definition\n * @returns The ObjectStatus.\n */\nfunction getSituationIndicator(collection: Context, column: AnnotationTableColumn): ObjectStatus | undefined {\n\tif (\n\t\tcollection.getObject(\"./@com.sap.vocabularies.Common.v1.SemanticKey\") &&\n\t\tcolumn.formatOptions?.fieldGroupDraftIndicatorPropertyPath\n\t) {\n\t\treturn (\n\t\t\t<ObjectStatus\n\t\t\t\tvisible={column.formatOptions?.showErrorObjectStatus}\n\t\t\t\tclass=\"sapUiSmallMarginBottom\"\n\t\t\t\ttext=\"{sap.fe.i18n>Contains_Errors}\"\n\t\t\t\tstate=\"Error\"\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Determines the default date-time format style based on the given data field context.\n * @param dataFieldContext The context of the data field\n * @returns Returns 'short' if the underlying data field is of the type 'Edm.TimeOfDay', otherwise undefined.\n */\nfunction getDefaultDateTimeStyle(dataFieldContext: Context): DateTimeStyle | undefined {\n\tconst targetObject = getInvolvedDataModelObjects<DataFieldAbstractTypes>(dataFieldContext).targetObject;\n\tif (isDataField(targetObject) && targetObject.Value?.$target?.type === \"Edm.TimeOfDay\") {\n\t\treturn \"short\";\n\t}\n\tif (\n\t\tisDataFieldForAnnotation(targetObject) &&\n\t\thasDataPointTarget(targetObject) &&\n\t\t(targetObject.Target.$target as DataPoint)?.Value.$target.type === \"Edm.TimeOfDay\"\n\t) {\n\t\treturn \"short\";\n\t}\n}\n\n/**\n * Create the template for the creation row.\n * @param tableId The table ID\n * @param column The column definition\n * @param tableType The type of the table\n * @param creationMode The creation mode\n * @param isTableReadOnly Whether the table is read only\n * @param collection The collection context\n * @param dataField The data field context\n * @param fieldMode The field mode\n * @param enableAnalytics Whether analytics are enabled\n * @param customValidationFunction The custom validation function\n * @returns The XML string representing the creation row.\n */\nfunction getCreationTemplate(\n\ttableId: string,\n\tcolumn: AnnotationTableColumn,\n\ttableType: TableType,\n\tcreationMode: PropertiesOf<TableCreationOptions>,\n\tisTableReadOnly: boolean | undefined,\n\tcollection: Context,\n\tdataField: Context,\n\tfieldMode: string | undefined,\n\tenableAnalytics: boolean | undefined,\n\tcustomValidationFunction: string | undefined\n): string | undefined {\n\tif ((creationMode.name as string) === \"CreationRow\") {\n\t\tlet columnEditMode: string | undefined;\n\t\tswitch (isTableReadOnly) {\n\t\t\tcase true:\n\t\t\t\tcolumnEditMode = \"Display\";\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\tcolumnEditMode = \"Editable\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcolumnEditMode = undefined;\n\t\t\t\tbreak;\n\t\t}\n\t\tconst dataFieldObject = dataField.getObject();\n\n\t\treturn (\n\t\t\t<InternalFieldBlock\n\t\t\t\tcore:require=\"{TableRuntime: 'sap/fe/macros/table/TableRuntime'}\"\n\t\t\t\tvhIdPrefix={generate([tableId, \"TableValueHelp\"])}\n\t\t\t\teditMode={columnEditMode}\n\t\t\t\tcontextPath={collection}\n\t\t\t\tmetaPath={dataField}\n\t\t\t\twrap={tableType === \"ResponsiveTable\"}\n\t\t\t\tchange={`TableRuntime.onFieldChangeInCreationRow($event, '${customValidationFunction ?? \"\"}')`}\n\t\t\t\tshowErrorObjectStatus={column.formatOptions?.showErrorObjectStatus}\n\t\t\t\tformatOptions={\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldMode: fieldMode,\n\t\t\t\t\t\ttextLinesEdit: column.formatOptions?.textLinesEdit,\n\t\t\t\t\t\ttextMaxLines: column.formatOptions?.textMaxLines === undefined ? undefined : column.formatOptions?.textMaxLines,\n\t\t\t\t\t\ttextMaxLength: column.formatOptions?.textMaxLength,\n\t\t\t\t\t\ttextMaxCharactersDisplay: column.formatOptions?.textMaxCharactersDisplay,\n\t\t\t\t\t\ttextExpandBehaviorDisplay: column.formatOptions?.textExpandBehaviorDisplay,\n\t\t\t\t\t\ttextAlignMode: \"Table\",\n\t\t\t\t\t\tsemanticKeyStyle: tableType === \"ResponsiveTable\" ? \"ObjectIdentifier\" : \"Label\",\n\t\t\t\t\t\thasDraftIndicator: column.formatOptions?.hasDraftIndicator,\n\t\t\t\t\t\tfieldGroupDraftIndicatorPropertyPath: column.formatOptions?.fieldGroupDraftIndicatorPropertyPath,\n\t\t\t\t\t\tfieldGroupName: column.formatOptions?.fieldGroupName,\n\t\t\t\t\t\tshowIconUrl: dataFieldObject?.Inline && dataFieldObject?.IconUrl,\n\t\t\t\t\t\tignoreNavigationAvailable: enableAnalytics ?? false,\n\t\t\t\t\t\tisCurrencyAligned: true,\n\t\t\t\t\t\tdateTimeStyle: getDefaultDateTimeStyle(dataField)\n\t\t\t\t\t} as FieldFormatOptions\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Retrieves the template for the macros:Field inside the column.\n * @param tableId The table ID\n * @param tableDefinition The table definition\n * @param column The column definition\n * @param dataFieldContext The data field context\n * @param collection The collection context\n * @param enableAnalytics Whether analytics are enabled\n * @param tableType The type of the table\n * @param isTableReadOnly Whether the table is read only\n * @param creationMode The creation mode\n * @param fieldMode The field mode\n * @param onChangeFunction The on change function\n * @param isCompactType Whether the table is compact\n * @param textAlign The text alignment\n * @param ariaLabelledBy The aria labelled by\n * @param showEmptyIndicator Whether to show the empty indicator\n * @param className\n * @returns The XML string representing the field.\n */\nexport function getMacroFieldTemplate(\n\ttableId: string,\n\ttableDefinition: TableVisualization,\n\tcolumn: AnnotationTableColumn,\n\tdataFieldContext: Context,\n\tcollection: Context,\n\tenableAnalytics: boolean | undefined,\n\ttableType: TableType,\n\tisTableReadOnly: boolean | undefined,\n\tcreationMode: PropertiesOf<TableCreationOptions>,\n\tfieldMode: string | undefined,\n\tonChangeFunction: string | undefined,\n\tisCompactType: boolean | undefined,\n\ttextAlign: string | undefined,\n\tariaLabelledBy: string | undefined,\n\tshowEmptyIndicator: boolean | undefined,\n\tclassName: string | undefined\n): string {\n\tconst dataFieldObject = dataFieldContext.getObject();\n\tlet columnEditMode: string | undefined;\n\tswitch (isTableReadOnly) {\n\t\tcase true:\n\t\t\tcolumnEditMode = \"Display\";\n\t\t\tbreak;\n\t\tcase false:\n\t\t\tcolumnEditMode = \"Editable\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcolumnEditMode = undefined;\n\t}\n\tif (tableDefinition.control.enableUploadPlugin && column.typeConfig?.className === \"Edm.Stream\") {\n\t\tcolumnEditMode = \"Display\";\n\t}\n\treturn (\n\t\t<InternalFieldBlock\n\t\t\tvhIdPrefix={generate([tableId, \"TableValueHelp\"])}\n\t\t\teditMode={columnEditMode}\n\t\t\tcontextPath={collection}\n\t\t\tmetaPath={dataFieldContext}\n\t\t\ttextAlign={textAlign}\n\t\t\twrap={tableType === \"ResponsiveTable\"}\n\t\t\tclass={className}\n\t\t\tonLiveChange={creationMode.name === \"InlineCreationRows\" ? \"TableAPI.onFieldLiveChange($event)\" : undefined}\n\t\t\tchange={onChangeFunction}\n\t\t\tariaLabelledBy={ariaLabelledBy ? [ariaLabelledBy] : undefined}\n\t\t\tnavigateAfterAction={column.isNavigable}\n\t\t\tshowErrorObjectStatus={column.formatOptions?.showErrorObjectStatus}\n\t\t\tformatOptions={\n\t\t\t\t{\n\t\t\t\t\tfieldMode: fieldMode,\n\t\t\t\t\ttextLinesEdit: column.formatOptions?.textLinesEdit,\n\t\t\t\t\ttextMaxLines: column.formatOptions?.textMaxLines === undefined ? undefined : column.formatOptions?.textMaxLines,\n\t\t\t\t\ttextMaxCharactersDisplay: column.formatOptions?.textMaxCharactersDisplay,\n\t\t\t\t\ttextMaxLength: column.formatOptions?.textMaxLength,\n\t\t\t\t\ttextExpandBehaviorDisplay: column.formatOptions?.textExpandBehaviorDisplay,\n\t\t\t\t\ttextAlignMode: \"Table\",\n\t\t\t\t\tshowEmptyIndicator: showEmptyIndicator,\n\t\t\t\t\tsemanticKeyStyle: tableType === \"ResponsiveTable\" ? \"ObjectIdentifier\" : \"Label\",\n\t\t\t\t\thasDraftIndicator: column.formatOptions?.hasDraftIndicator,\n\t\t\t\t\tfieldGroupDraftIndicatorPropertyPath: column.formatOptions?.fieldGroupDraftIndicatorPropertyPath,\n\t\t\t\t\tfieldGroupName: column.formatOptions?.fieldGroupName,\n\t\t\t\t\tshowIconUrl: dataFieldObject?.Inline && dataFieldObject?.IconUrl,\n\t\t\t\t\tignoreNavigationAvailable: enableAnalytics ?? false,\n\t\t\t\t\tisAnalytics: enableAnalytics,\n\t\t\t\t\tforInlineCreationRows: creationMode.name === \"InlineCreationRows\",\n\t\t\t\t\tisCurrencyAligned: true,\n\t\t\t\t\tcompactSemanticKey: isCompactType === undefined ? undefined : `${isCompactType}`,\n\t\t\t\t\tdateTimeStyle: getDefaultDateTimeStyle(dataFieldContext)\n\t\t\t\t} as FieldFormatOptions\n\t\t\t}\n\t\t/>\n\t);\n}\n\n/**\n * Create the template for the column.\n * @param tableId The table ID\n * @param tableDefinition The table definition\n * @param column The column definition\n * @param dataFieldOP The data field object path\n * @param dataFieldContext The data field context\n * @param collection The collection context\n * @param enableAnalytics Whether analytics are enabled\n * @param tableType The type of the table\n * @param isTableReadOnly Whether the table is read only\n * @param creationMode The creation mode\n * @param fieldMode The field mode\n * @param onChangeFunction The on change function\n * @param isCompactType Whether the table is compact\n * @param customValidationFunction The custom validation function\n * @returns The XML string representing the column.\n */\nfunction getColumnContentTemplate(\n\ttableId: string,\n\ttableDefinition: TableVisualization,\n\tcolumn: AnnotationTableColumn,\n\tdataFieldOP: DataModelObjectPath<DataFieldAbstractTypes>,\n\tdataFieldContext: Context,\n\tcollection: Context,\n\tenableAnalytics: boolean | undefined,\n\ttableType: TableType,\n\tisTableReadOnly: boolean | undefined,\n\tcreationMode: PropertiesOf<TableCreationOptions>,\n\tfieldMode: string | undefined,\n\tonChangeFunction: string | undefined,\n\tisCompactType: boolean | undefined,\n\tcustomValidationFunction: string | undefined\n): { template: string; creationTemplate?: string } {\n\tlet template: string;\n\tlet creationTemplate: string | undefined;\n\n\tconst dataField = dataFieldOP.targetObject as DataFieldAbstractTypes;\n\tif (\n\t\tisAnnotationOfType<DataFieldForAnnotation>(dataField, UIAnnotationTypes.DataFieldForAnnotation) &&\n\t\t(isAnnotationOfTerm<Chart>(dataField.Target.$target, UIAnnotationTerms.Chart) ||\n\t\t\tisAnnotationOfTerm<PresentationVariant>(dataField.Target.$target, UIAnnotationTerms.PresentationVariant))\n\t) {\n\t\tconst showOnlyChart = (tableType === \"ResponsiveTable\" ? !column.settings?.showMicroChartLabel : undefined) ?? true;\n\t\tconst microChartSize = tableType === \"ResponsiveTable\" ? column.settings?.microChartSize ?? \"XS\" : \"XS\";\n\t\tlet microChartCollection = collection\n\t\t\t.getModel()\n\t\t\t.createBindingContext(collection.getPath(dataFieldContext.getObject(\"Target/$AnnotationPath\")));\n\t\tmicroChartCollection = collection.getModel().createBindingContext(CommonHelper.getNavigationContext(microChartCollection));\n\t\t//We only consider the first visualization of the PV in PV case and expect it to be a chart (similar to VisualFilters)\n\t\ttemplate = (\n\t\t\t<MicroChartBlock\n\t\t\t\tid={generate([tableId, dataField])}\n\t\t\t\tcontextPath={microChartCollection}\n\t\t\t\tmetaPath={\n\t\t\t\t\tisAnnotationOfTerm<PresentationVariant>(dataField.Target.$target, UIAnnotationTerms.PresentationVariant)\n\t\t\t\t\t\t? dataFieldContext\n\t\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t\t.createBindingContext(\n\t\t\t\t\t\t\t\t\tdataFieldContext.getPath() + \"/Target/$AnnotationPath/Visualizations/0/$AnnotationPath\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: dataFieldContext.getModel().createBindingContext(dataFieldContext.getPath() + \"/Target/$AnnotationPath\")\n\t\t\t\t}\n\t\t\t\tshowOnlyChart={showOnlyChart}\n\t\t\t\tsize={microChartSize ?? \"XS\"}\n\t\t\t\thideOnNoData={true}\n\t\t\t\tisAnalytics={enableAnalytics}\n\t\t\t/>\n\t\t);\n\t} else if (\n\t\tisAnnotationOfType<DataField>(dataField, UIAnnotationTypes.DataField) &&\n\t\tisMultiValueField(enhanceDataModelPath(dataFieldOP, dataField.Value.path))\n\t) {\n\t\t// when evaluating \"@$ui5.context.isInactive\" we are forced to add isTruthy to force the binding evaluation\n\t\tconst isReadOnly = compileExpression(\n\t\t\tifElse(\n\t\t\t\tor(isTableReadOnly === true, and(isTruthy(UI.IsInactive), creationMode.name === \"InlineCreationRows\")),\n\t\t\t\tconstant(true),\n\t\t\t\tifElse(equal(fieldMode, \"nowrapper\"), constant(true), constant(undefined))\n\t\t\t)\n\t\t);\n\n\t\ttemplate = (\n\t\t\t<MultiValueFieldBlock\n\t\t\t\tcontextPath={collection.getPath()}\n\t\t\t\tmetaPath={dataFieldContext.getPath()}\n\t\t\t\treadOnly={isReadOnly}\n\t\t\t\tvhIdPrefix={generate([tableId, \"TableValueHelp\"])}\n\t\t\t\tuseParentBindingCache={true}\n\t\t\t/>\n\t\t);\n\t} else if (\n\t\tisAnnotationOfType<DataFieldForAnnotation>(dataField, UIAnnotationTypes.DataFieldForAnnotation) &&\n\t\tisAnnotationOfTerm<FieldGroup>(dataField.Target.$target, UIAnnotationTerms.FieldGroup)\n\t) {\n\t\tconst fieldGroup: FieldGroup = dataField.Target.$target;\n\t\tconst dataFieldCollectionContext = dataFieldContext\n\t\t\t.getModel()\n\t\t\t.createBindingContext(dataFieldContext.getPath() + \"/Target/$AnnotationPath/Data\");\n\t\tconst fieldGroupColectionLength = fieldGroup.Data.length - 1;\n\n\t\tconst items = fieldGroup.Data.map((fieldGroupDataField: DataFieldAbstractTypes, fieldGroupDataFieldIdx: number) => {\n\t\t\tconst fieldGroupDataFieldContext = dataFieldCollectionContext\n\t\t\t\t.getModel()\n\t\t\t\t.createBindingContext(dataFieldCollectionContext.getPath() + \"/\" + fieldGroupDataFieldIdx);\n\t\t\tconst fieldGroupDataFieldOP = getInvolvedDataModelObjects<DataFieldAbstractTypes>(fieldGroupDataFieldContext);\n\t\t\tconst fieldGroupLabel = FieldHelper.computeLabelText(fieldGroupDataFieldContext.getObject(), {\n\t\t\t\tcontext: fieldGroupDataFieldContext\n\t\t\t});\n\t\t\tif (column.showDataFieldsLabel && !!fieldGroupLabel) {\n\t\t\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.macros\")!;\n\t\t\t\treturn (\n\t\t\t\t\t<HBox\n\t\t\t\t\t\tvisible={getVisibleExpression(fieldGroupDataFieldOP)}\n\t\t\t\t\t\talignItems={FieldHelper.buildExpressionForAlignItems(\n\t\t\t\t\t\t\tfieldGroupDataFieldContext.getObject(\"Target/$AnnotationPath/Visualization/$EnumMember\")\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tid={TableHelper.getFieldGroupLabelStableId(tableId, fieldGroupDataFieldOP)}\n\t\t\t\t\t\t\ttext={resourceBundle.getText(\"HEADER_FORM_LABEL\", [fieldGroupLabel])}\n\t\t\t\t\t\t\tclass=\"sapUiTinyMarginEnd\"\n\t\t\t\t\t\t\tvisible={getVisibleExpression(fieldGroupDataFieldOP)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\tlayoutData: <FlexItemData growFactor=\"1\" />,\n\t\t\t\t\t\t\t\titems: getMacroFieldTemplate(\n\t\t\t\t\t\t\t\t\ttableId,\n\t\t\t\t\t\t\t\t\ttableDefinition,\n\t\t\t\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\t\t\t\tfieldGroupDataFieldContext,\n\t\t\t\t\t\t\t\t\tcollection,\n\t\t\t\t\t\t\t\t\tenableAnalytics,\n\t\t\t\t\t\t\t\t\ttableType,\n\t\t\t\t\t\t\t\t\tisTableReadOnly,\n\t\t\t\t\t\t\t\t\tcreationMode,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tonChangeFunction,\n\t\t\t\t\t\t\t\t\tisCompactType,\n\t\t\t\t\t\t\t\t\t\"Left\",\n\t\t\t\t\t\t\t\t\t`${TableHelper.getColumnStableId(tableId, dataFieldOP)} ${TableHelper.getFieldGroupLabelStableId(\n\t\t\t\t\t\t\t\t\t\ttableId,\n\t\t\t\t\t\t\t\t\t\tfieldGroupDataFieldOP\n\t\t\t\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\tTableHelper.getMarginClass(\n\t\t\t\t\t\t\t\t\t\tfieldGroupDataFieldContext.getObject(\"Target/$AnnotationPath/Visualization/$EnumMember\"),\n\t\t\t\t\t\t\t\t\t\tfieldGroupDataFieldIdx === fieldGroupColectionLength\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t</HBox>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn getMacroFieldTemplate(\n\t\t\t\t\ttableId,\n\t\t\t\t\ttableDefinition,\n\t\t\t\t\tcolumn,\n\t\t\t\t\tfieldGroupDataFieldContext,\n\t\t\t\t\tcollection,\n\t\t\t\t\tenableAnalytics,\n\t\t\t\t\ttableType,\n\t\t\t\t\tisTableReadOnly,\n\t\t\t\t\tcreationMode,\n\t\t\t\t\tfieldMode,\n\t\t\t\t\tonChangeFunction,\n\t\t\t\t\tisCompactType,\n\t\t\t\t\tundefined,\n\t\t\t\t\tTableHelper.getColumnStableId(tableId, dataFieldOP),\n\t\t\t\t\tundefined,\n\t\t\t\t\tTableHelper.getMarginClass(\n\t\t\t\t\t\tfieldGroupDataFieldContext.getObject(\"Target/$AnnotationPath/Visualization/$EnumMember\"),\n\t\t\t\t\t\tfieldGroupDataFieldIdx === fieldGroupColectionLength\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tconst draftIndicator = getDraftIndicator(collection, column);\n\t\tif (draftIndicator) {\n\t\t\titems.push(draftIndicator);\n\t\t}\n\t\tconst situationIndicator = getSituationIndicator(collection, column);\n\t\tif (situationIndicator) {\n\t\t\titems.push(situationIndicator);\n\t\t}\n\n\t\ttemplate = (\n\t\t\t<VBox\n\t\t\t\tvisible={TableHelper.getVBoxVisibility(\n\t\t\t\t\tdataFieldCollectionContext.getObject(),\n\t\t\t\t\tcolumn.FieldGroupHiddenExpressions,\n\t\t\t\t\tdataFieldContext.getObject()\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\titems: items\n\t\t\t\t}}\n\t\t\t</VBox>\n\t\t);\n\t} else {\n\t\ttemplate = getMacroFieldTemplate(\n\t\t\ttableId,\n\t\t\ttableDefinition,\n\t\t\tcolumn,\n\t\t\tdataFieldContext,\n\t\t\tcollection,\n\t\t\tenableAnalytics,\n\t\t\ttableType,\n\t\t\tisTableReadOnly,\n\t\t\tcreationMode,\n\t\t\tfieldMode,\n\t\t\tonChangeFunction,\n\t\t\tisCompactType,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t\tundefined\n\t\t);\n\t\tcreationTemplate = getCreationTemplate(\n\t\t\ttableId,\n\t\t\tcolumn,\n\t\t\ttableType,\n\t\t\tcreationMode,\n\t\t\tisTableReadOnly,\n\t\t\tcollection,\n\t\t\tdataFieldContext,\n\t\t\tfieldMode,\n\t\t\tenableAnalytics,\n\t\t\tcustomValidationFunction\n\t\t);\n\t}\n\n\treturn { template, creationTemplate };\n}\n\n/**\n * Create the template for a column.\n * @param tableId The table ID\n * @param tableDefinition The table definition\n * @param column The column definition\n * @param collection The collection context used for context path\n * @param isReadOnly Whether the table is read only\n * @param enableAutoColumnWidth Whether the column width is automatically calculated\n * @param widthIncludingColumnHeader Whether the column width includes the column header\n * @param enableAnalytics Whether analytics are enabled\n * @param tableType The type of the table\n * @param creationMode The creation mode\n * @param fieldMode The field mode\n * @param onChangeFunction The on change function\n * @param isCompactType Whether the table is compact\n * @param customValidationFunction The custom validation function\n * @returns The XML string representing the column.\n */\nexport function getColumnTemplate(\n\ttableId: string,\n\ttableDefinition: TableVisualization,\n\tcolumn: AnnotationTableColumn,\n\tcollection: Context,\n\tisReadOnly: boolean | undefined,\n\tenableAutoColumnWidth: boolean,\n\twidthIncludingColumnHeader: boolean | undefined,\n\tenableAnalytics: boolean | undefined,\n\ttableType: TableType,\n\tcreationMode: PropertiesOf<TableCreationOptions>,\n\tfieldMode: string | undefined,\n\tonChangeFunction: string | undefined,\n\tisCompactType: boolean | undefined,\n\tcustomValidationFunction: string | undefined\n): Column | undefined {\n\tlet dataFieldContext = collection.getModel().createBindingContext(column.annotationPath);\n\tif (!dataFieldContext) {\n\t\treturn undefined;\n\t}\n\tdataFieldContext = collection.getModel().createBindingContext(FieldHelper.getDataFieldDefault(dataFieldContext));\n\tconst dataFieldObjectModelPath = getInvolvedDataModelObjects<DataFieldAbstractTypes>(dataFieldContext, collection);\n\tconst dataFieldObject = dataFieldContext?.getObject?.() ?? {};\n\n\tconst templates = getColumnContentTemplate(\n\t\ttableId,\n\t\ttableDefinition,\n\t\tcolumn,\n\t\tdataFieldObjectModelPath,\n\t\tdataFieldContext,\n\t\tcollection,\n\t\tenableAnalytics,\n\t\ttableType,\n\t\tisReadOnly,\n\t\tcreationMode,\n\t\tfieldMode,\n\t\tonChangeFunction,\n\t\tisCompactType,\n\t\tcustomValidationFunction\n\t);\n\n\treturn (\n\t\t<Column\n\t\t\tid={TableHelper.getColumnStableId(tableId, dataFieldObjectModelPath)}\n\t\t\twidth={\n\t\t\t\t!CommonUtils.isSmallDevice() || column.width\n\t\t\t\t\t? TableHelper.getColumnWidth(\n\t\t\t\t\t\t\t{ enableAutoColumnWidth, widthIncludingColumnHeader, tableType },\n\t\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\t\tdataFieldObject,\n\t\t\t\t\t\t\tTableHelper.getTextOnActionField(dataFieldObject, { context: dataFieldContext }),\n\t\t\t\t\t\t\tdataFieldObjectModelPath,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: dataFieldContext.getObject(\"Target/$AnnotationPath/Title\") || \"\",\n\t\t\t\t\t\t\t\tdescription: dataFieldContext.getObject(\"Target/$AnnotationPath/Title\") || \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t\tminWidth={\n\t\t\t\tCommonUtils.isSmallDevice()\n\t\t\t\t\t? TableHelper.getColumnWidth(\n\t\t\t\t\t\t\t{ enableAutoColumnWidth, widthIncludingColumnHeader, tableType },\n\t\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\t\tdataFieldObject,\n\t\t\t\t\t\t\tTableHelper.getTextOnActionField(dataFieldObject, { context: dataFieldContext }),\n\t\t\t\t\t\t\tdataFieldObjectModelPath,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: dataFieldContext.getObject(\"Target/$AnnotationPath/Title\") || \"\",\n\t\t\t\t\t\t\t\tdescription: dataFieldContext.getObject(\"Target/$AnnotationPath/Description\") || \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t\theader={column.label || column.name}\n\t\t\tpropertyKey={column.name}\n\t\t\thAlign={column.horizontalAlign || FieldHelper.getColumnAlignment(dataFieldObject, { collection: collection })}\n\t\t\theaderVisible={TableHelper.setHeaderLabelVisibility(dataFieldObject, dataFieldContext.getObject(\"Target/$AnnotationPath/Data\"))}\n\t\t\ttooltip={column.tooltip}\n\t\t\trequired={isReadOnly ? undefined : column.required}\n\t\t>\n\t\t\t{{\n\t\t\t\tcustomData: createCustomData(\"showDataFieldsLabel\", column.showDataFieldsLabel),\n\t\t\t\textendedSettings: <ResponsiveColumnSettings importance={column.importance} />,\n\t\t\t\ttemplate: templates.template,\n\t\t\t\tcreationTemplate: templates.creationTemplate\n\t\t\t}}\n\t\t</Column>\n\t);\n}\n\n/**\n * Create the template for all the columns in the table.\n * @param tableId The table ID\n * @param tableDefinition The table definition\n * @param columns The list of columns\n * @param collection The collection context used for context path\n * @param isReadOnly Whether the table is read only\n * @param enableAutoColumnWidth Whether the column width is automatically calculated\n * @param widthIncludingColumnHeader Whether the column width includes the column header\n * @param enableAnalytics Whether analytics are enabled\n * @param tableType The type of the table\n * @param creationMode The creation mode\n * @param fieldMode The field mode\n * @param onChangeFunction The on change function\n * @param isCompactType Whether the table is compact\n * @param customValidationFunction The custom validation function\n * @returns The XML string representing the columns.\n */\nfunction getColumns(\n\ttableId: string,\n\ttableDefinition: TableVisualization,\n\tcolumns: TableColumn[],\n\tcollection: Context,\n\tisReadOnly: boolean | undefined,\n\tenableAutoColumnWidth: boolean,\n\twidthIncludingColumnHeader: boolean | undefined,\n\tenableAnalytics: boolean | undefined,\n\ttableType: TableType,\n\tcreationMode: TableCreationOptions,\n\tfieldMode: string | undefined,\n\tonChangeFunction: undefined,\n\tisCompactType: boolean | undefined,\n\tcustomValidationFunction?: string\n): Column[] {\n\treturn columns\n\t\t.map((column) => {\n\t\t\tif (column.availability === \"Default\" && column.type === \"Default\") {\n\t\t\t\treturn getCustomColumnTemplate(tableId, column as CustomBasedTableColumn, collection);\n\t\t\t} else if (column.availability === \"Default\" && column.type === \"Annotation\") {\n\t\t\t\treturn getColumnTemplate(\n\t\t\t\t\ttableId,\n\t\t\t\t\ttableDefinition,\n\t\t\t\t\tcolumn as AnnotationTableColumn,\n\t\t\t\t\tcollection,\n\t\t\t\t\tisReadOnly,\n\t\t\t\t\tenableAutoColumnWidth,\n\t\t\t\t\twidthIncludingColumnHeader,\n\t\t\t\t\tenableAnalytics,\n\t\t\t\t\ttableType,\n\t\t\t\t\tcreationMode,\n\t\t\t\t\tfieldMode,\n\t\t\t\t\tonChangeFunction,\n\t\t\t\t\tisCompactType,\n\t\t\t\t\tcustomValidationFunction\n\t\t\t\t);\n\t\t\t} else if (column.availability === \"Default\" && column.type === \"Slot\") {\n\t\t\t\treturn getSlotColumn(tableId, column as CustomBasedTableColumn, isReadOnly);\n\t\t\t} else if (column.availability === \"Default\" && column.type === \"Computed\") {\n\t\t\t\treturn getComputedColumn(tableId, column as ComputedTableColumn, collection, enableAnalytics);\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t})\n\t\t.filter((column) => column !== undefined) as Column[];\n}\n\nexport type TableBlockProperties = Omit<StrictPropertiesOf<TableAPI>, \"metaPath\" | \"contextPath\"> & {\n\tgetTranslatedText(text: string, parameters?: unknown[], metaPath?: string): string;\n\t[\"fl:flexibility\"]?: string;\n\tmetaPath: Context;\n\tcontextPath: Context;\n\tconvertedMetadata: ConvertedMetadata;\n\tcontextObjectPath: DataModelObjectPath<LineItem | PresentationVariant | SelectionPresentationVariant>;\n\tisPublic: boolean;\n};\n/**\n * Determines the designtime for the MDC table.\n * @returns The value to be assigned to dt:designtime\n */\nfunction getDesigntime(): string | undefined {\n\treturn \"sap/fe/macros/table/designtime/Table.designtime\";\n}\n\n/**\n * Maps an internal P13n talbr mode (string) to the MDC enum.\n * @param stringMode\n * @returns The MDC enum value\n */\nfunction getMDCP13nMode(stringMode: string): TableP13nMode {\n\tswitch (stringMode) {\n\t\tcase \"Aggregate\":\n\t\t\treturn TableP13nMode.Aggregate;\n\t\tcase \"Sort\":\n\t\t\treturn TableP13nMode.Sort;\n\t\tcase \"Column\":\n\t\t\treturn TableP13nMode.Column;\n\t\tcase \"Filter\":\n\t\t\treturn TableP13nMode.Filter;\n\t\tcase \"Group\":\n\t\t\treturn TableP13nMode.Group;\n\t\tdefault:\n\t\t\tLog.error(\"Unknown P13n mode: \" + stringMode);\n\t\t\treturn TableP13nMode.Column;\n\t}\n}\n\nexport function getMDCTableTemplate(\n\ttableProperties: TableBlockProperties,\n\tconvertedMetadata: ConvertedMetadata,\n\todataMetaModel: ODataMetaModel,\n\thandlerProvider: TableEventHandlerProvider,\n\tappComponent: AppComponent\n): MDCTable {\n\ttableProperties.convertedMetadata = convertedMetadata;\n\t// For a TreeTable in a ListReport displaying a draft-enabled entity, we only display active instances\n\tconst contextObjectPath = getInvolvedDataModelObjects<LineItem | PresentationVariant | SelectionPresentationVariant>(\n\t\ttableProperties.metaPath,\n\t\ttableProperties.contextPath\n\t);\n\tconst navigationInfo = tableProperties.tableDefinition.annotation?.row?.navigationInfo as {\n\t\troutePath?: string;\n\t\tnavigationInEditMode?: boolean;\n\t};\n\tconst target = navigationInfo?.routePath;\n\tlet navigationInEditMode = false;\n\tif (target) {\n\t\tconst targetInformation = appComponent.getRoutingService()._getTargetInformation(target);\n\t\tnavigationInEditMode = (targetInformation?.options?.settings?.openInEditMode as boolean | undefined) ?? false;\n\t}\n\n\ttableProperties.contextObjectPath = contextObjectPath;\n\tconst tableType = tableProperties.tableDefinition.control.type;\n\tconst filterOnActiveEntities =\n\t\t(tableType === \"TreeTable\" || tableProperties.tableDefinition.enableAnalytics === true) &&\n\t\tcontextObjectPath.startingEntitySet === contextObjectPath.targetEntitySet &&\n\t\tModelHelper.isObjectPathDraftSupported(contextObjectPath);\n\tconst delegate = TableHelper.getDelegate(\n\t\ttableProperties.tableDefinition,\n\t\ttableProperties.isAlp === true,\n\t\ttableProperties.tableDefinition.annotation.entityName,\n\t\tfilterOnActiveEntities\n\t);\n\tconst headerVisible = tableProperties.headerVisible ?? tableProperties.tableDefinition.control.headerVisible;\n\tconst currentHeader = tableProperties.header ?? tableProperties.tableDefinition.annotation.title;\n\tconst headerBindingExpression = buildExpressionForHeaderVisible(currentHeader ?? \"\", tableProperties.tabTitle ?? \"\", !!headerVisible);\n\tconst pasteAction = tableProperties.tableDefinition.actions.find((a) => a.key === StandardActionKeys.Paste);\n\tconst collectionEntity = convertedMetadata.resolvePath(tableProperties.tableDefinition.annotation.collection).target as\n\t\t| EntitySet\n\t\t| NavigationProperty;\n\tconst modelContextChange = tableType === \"TreeTable\" ? handlerProvider.tableContextChange : undefined;\n\tconst lineItem = TableHelper.getUiLineItemObject(tableProperties.metaPath, convertedMetadata) as\n\t\t| DataFieldForIntentBasedNavigation[]\n\t\t| undefined;\n\tconst navigationPath = tableProperties.tableDefinition.annotation.navigationPath;\n\tif (tableProperties.tableDefinition.annotation.collection.startsWith(\"/\") && isSingleton(contextObjectPath.startingEntitySet)) {\n\t\ttableProperties.tableDefinition.annotation.collection = navigationPath;\n\t}\n\n\tconst collectionContext = odataMetaModel.createBindingContext(tableProperties.tableDefinition.annotation.collection)!;\n\tconst draft = (collectionEntity as EntitySet).annotations.Common?.DraftRoot;\n\t// Add the definition of the designtime file if designtime is enabled from core or locally via url parameters\n\tconst variantManagement = tableProperties.isPublic\n\t\t? tableProperties.variantManagement ?? \"None\"\n\t\t: tableProperties.tableDefinition.annotation.variantManagement;\n\tconst designtime = getDesigntime();\n\tlet rowAction: string | undefined;\n\tif (tableProperties.rowPressHandlerPath) {\n\t\trowAction = \"Navigation\";\n\t}\n\trowAction ??= tableProperties.tableDefinition.annotation.row?.action;\n\n\tconst showCreate = tableProperties.tableDefinition.actions.find((a) => a.key === StandardActionKeys.Create)?.visible || true;\n\tconst disableCopyToClipboard = tableProperties.tableDefinition.control.disableCopyToClipboard;\n\t/**\n\t * Specifies whether the button is hidden when no data has been entered yet in the row (true/false). The default setting is `false`.\n\t */\n\tconst disableAddRowButtonForEmptyData = tableProperties.tableDefinition.control.disableAddRowButtonForEmptyData;\n\tconst updatablePropertyPath = tableProperties.tableDefinition.annotation.updatablePropertyPath;\n\n\tlet currentPersonalization: TableP13nMode[] | undefined;\n\tswitch (tableProperties.personalization) {\n\t\tcase \"false\":\n\t\t\tcurrentPersonalization = undefined;\n\t\t\tbreak;\n\t\tcase \"true\":\n\t\t\tcurrentPersonalization = [TableP13nMode.Sort, TableP13nMode.Column, TableP13nMode.Filter];\n\t\t\tbreak;\n\t\tcase undefined:\n\t\t\tcurrentPersonalization = tableProperties.tableDefinition.annotation.p13nMode?.map((mode) => getMDCP13nMode(mode));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcurrentPersonalization = tableProperties.personalization.split(\",\").map((mode) => getMDCP13nMode(mode.trim()));\n\t}\n\n\tconst multiSelectDisabledActions = ActionHelper.getMultiSelectDisabledActions(lineItem);\n\n\tconst customData = [\n\t\t{ key: \"kind\", value: collectionEntity._type },\n\t\t{ key: \"navigationPath\", value: navigationPath },\n\t\t{ key: \"enableAnalytics\", value: tableProperties.tableDefinition.enableAnalytics },\n\t\t{ key: \"creationMode\", value: tableProperties.creationMode.name },\n\t\t{ key: \"inlineCreationRowCount\", value: tableProperties.tableDefinition.control.inlineCreationRowCount },\n\t\t{ key: \"showCreate\", value: showCreate },\n\t\t{ key: \"createAtEnd\", value: tableProperties.creationMode.createAtEnd },\n\t\t{ key: \"displayModePropertyBinding\", value: tableProperties.readOnly },\n\t\t{ key: \"tableType\", value: tableType },\n\t\t{ key: \"targetCollectionPath\", value: collectionContext.getPath() },\n\t\t{ key: \"entityType\", value: collectionContext.getPath() + \"/\" },\n\t\t{ key: \"metaPath\", value: collectionContext.getPath() },\n\t\t{ key: \"onChange\", value: \"\" },\n\t\t{ key: \"hiddenFilters\", value: tableProperties.tableDefinition.control.filters?.hiddenFilters },\n\t\t{ key: \"requestGroupId\", value: \"$auto.Workers\" },\n\t\t{ key: \"segmentedButtonId\", value: generate([tableProperties.id, \"SegmentedButton\", \"TemplateContentView\"]) },\n\t\t{ key: \"enablePaste\", value: tableType === \"TreeTable\" ? false : pasteAction?.enabled },\n\t\t{ key: \"disableCopyToClipboard\", value: disableCopyToClipboard },\n\t\t{ key: \"operationAvailableMap\", value: CommonHelper.stringifyCustomData(tableProperties.tableDefinition.operationAvailableMap) },\n\t\t{ key: \"draft\", value: draft },\n\t\t{ key: \"navigationAvailableMap\", value: TableHelper.getNavigationAvailableMap(lineItem) },\n\t\t{\n\t\t\tkey: \"actionsMultiselectDisabled\",\n\t\t\tvalue: multiSelectDisabledActions.length > 0 ? multiSelectDisabledActions.join(\",\") : undefined\n\t\t},\n\t\t{ key: \"updatablePropertyPath\", value: updatablePropertyPath || \"\" },\n\t\t{ key: \"exportRequestSize\", value: tableProperties.tableDefinition.control.exportRequestSize }\n\t];\n\n\treturn (\n\t\t<MDCTable\n\t\t\tcore:require={getCoreRequire(tableProperties.tableDefinition)}\n\t\t\tfl:flexibility={tableProperties[\"fl:flexibility\"]}\n\t\t\tsortConditions={tableProperties.tableDefinition.annotation.sortConditions}\n\t\t\tgroupConditions={tableProperties.tableDefinition.annotation.groupConditions}\n\t\t\taggregateConditions={tableProperties.tableDefinition.annotation.aggregateConditions}\n\t\t\tdt:designtime={designtime}\n\t\t\tid={tableProperties.id}\n\t\t\tbusy={tableProperties.busy}\n\t\t\tbusyIndicatorDelay={0}\n\t\t\tenableExport={tableProperties.tableDefinition.control.enableExport}\n\t\t\tdelegate={delegate}\n\t\t\trowPress={tableType === \"ResponsiveTable\" ? handlerProvider.rowPress : undefined}\n\t\t\tbeforeOpenContextMenu={handlerProvider.beforeOpenContextMenu}\n\t\t\tautoBindOnInit={tableProperties.useBasicSearch || !tableProperties.filterBar}\n\t\t\tselectionMode={tableProperties.tableDefinition.annotation.selectionMode || \"None\"}\n\t\t\tselectionChange={handlerProvider.selectionChange}\n\t\t\tshowRowCount={tableProperties.tableDefinition.control.showRowCount}\n\t\t\theader={currentHeader}\n\t\t\theaderVisible={headerBindingExpression}\n\t\t\theaderLevel={tableProperties.headerLevel}\n\t\t\theaderStyle={tableProperties.headerStyle}\n\t\t\tthreshold={tableProperties.tableDefinition.annotation.threshold}\n\t\t\tp13nMode={currentPersonalization}\n\t\t\tpaste={handlerProvider.getPasteHandler(false)}\n\t\t\tbeforeExport={handlerProvider.beforeExport}\n\t\t\tclass={tableProperties.tableDefinition.control.useCondensedTableLayout === true ? \"sapUiSizeCondensed\" : undefined}\n\t\t\tmultiSelectMode={tableProperties.tableDefinition.control.multiSelectMode}\n\t\t\tshowPasteButton={tableType === \"TreeTable\" ? false : pasteAction?.visible}\n\t\t\tenablePaste={tableType === \"TreeTable\" ? false : pasteAction?.enabled}\n\t\t\tvisible={tableProperties.visible}\n\t\t\tmodelContextChange={modelContextChange}\n\t\t>\n\t\t\t{{\n\t\t\t\tcustomData: createCustomDatas(customData),\n\t\t\t\tdataStateIndicator: getDataStateIndicator(handlerProvider),\n\t\t\t\ttype: getTableType(\n\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\tcollectionContext,\n\t\t\t\t\ttableType,\n\t\t\t\t\ttableProperties.tableDefinition.control.selectionLimit\n\t\t\t\t),\n\t\t\t\tdependents: getDependents(\n\t\t\t\t\ttableProperties.id,\n\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\ttableType,\n\t\t\t\t\ttableProperties.readOnly,\n\t\t\t\t\tcontextObjectPath,\n\t\t\t\t\tvariantManagement,\n\t\t\t\t\thandlerProvider,\n\t\t\t\t\ttableProperties.metaPath,\n\t\t\t\t\tcollectionContext\n\t\t\t\t),\n\t\t\t\tactions: getActions(tableProperties, handlerProvider, collectionContext, collectionEntity),\n\t\t\t\trowSettings: getRowSettings(tableProperties.tableDefinition, rowAction, tableType, handlerProvider),\n\t\t\t\tcontextMenu: getContextMenu(\n\t\t\t\t\ttableProperties,\n\t\t\t\t\ttableType,\n\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\tcollectionEntity,\n\t\t\t\t\trowAction,\n\t\t\t\t\thandlerProvider,\n\t\t\t\t\tcontextObjectPath,\n\t\t\t\t\ttableProperties.metaPath,\n\t\t\t\t\tcollectionContext,\n\t\t\t\t\tnavigationInEditMode\n\t\t\t\t),\n\t\t\t\tcolumns: getColumns(\n\t\t\t\t\ttableProperties.id,\n\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\ttableProperties.tableDefinition.columns,\n\t\t\t\t\tcollectionContext,\n\t\t\t\t\ttableProperties.readOnly,\n\t\t\t\t\ttableProperties.enableAutoColumnWidth,\n\t\t\t\t\ttableProperties.tableDefinition.control.widthIncludingColumnHeader,\n\t\t\t\t\ttableProperties.tableDefinition.enableAnalytics,\n\t\t\t\t\ttableType,\n\t\t\t\t\ttableProperties.creationMode,\n\t\t\t\t\ttableProperties.fieldMode,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttableProperties.tableDefinition.control.isCompactType,\n\t\t\t\t\ttableProperties.tableDefinition.control.customValidationFunction\n\t\t\t\t),\n\t\t\t\tdragDropConfig: getDragAndDropConfig(tableType, contextObjectPath, tableProperties.tableDefinition, handlerProvider),\n\t\t\t\tcreationRow: getCreationRow(\n\t\t\t\t\ttableProperties.creationMode,\n\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\ttableProperties.id,\n\t\t\t\t\tdisableAddRowButtonForEmptyData,\n\t\t\t\t\thandlerProvider,\n\t\t\t\t\ttableProperties.tableDefinition.control.customValidationFunction\n\t\t\t\t),\n\t\t\t\tvariant: getVariantManagement(variantManagement, tableProperties.id, tableProperties.headerLevel, handlerProvider),\n\t\t\t\tquickFilter: getQuickFilter(\n\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\ttableProperties.id,\n\t\t\t\t\thandlerProvider,\n\t\t\t\t\ttableProperties.metaPath.getPath()\n\t\t\t\t),\n\t\t\t\tcopyProvider: getCopyProvider(tableType, contextObjectPath, disableCopyToClipboard),\n\t\t\t\tcellSelector: getCellSelector(tableType, tableProperties.tableDefinition, contextObjectPath, disableCopyToClipboard)\n\t\t\t}}\n\t\t</MDCTable>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}