{"version":3,"names":["getHiddenFilters","oTable","aFilters","hiddenFilters","data","Array","isArray","paths","forEach","mPath","oSvFilters","CommonUtils","getFiltersFromAnnotation","annotationPath","concat","getExternalFilters","table","filters","quickFilter","getQuickFilter","getSelectedKey","getListBindingForCount","pageBindingContext","params","oDataModel","getModel","tableAPI","getParent","filterInfo","tableUtils","getFilterInfo","additionalFilters","getP13nFilters","bindingInfo","path","bindingPath","getRowCollectionPath","Filter","and","fireEvent","collectionBindingInfo","CollectionBindingInfoAPI","listBindingPath","startsWith","getPath","listBinding","bindList","getBindingContext","stringFilters","fetchFilter","getContext","countBinding","bindProperty","$$groupId","batchGroupId","$filter","$search","search","normalizeSearchTerm","undefined","value","requestValue","destroy","getCountFormatted","iCount","oCountFormatter","NumberFormat","getIntegerInstance","groupingEnabled","format","ignoreProperties","oTableDefinition","getTableDefinition","aIgnoreProperties","enableAnalytics","enableBasicSearch","control","type","FilterUtils","getFilter","ignoredProperties","targetControl","oControl","aP13nMode","getP13nMode","includes","aP13nProperties","DelegateUtil","getCustomData","filter","oControlProperty","filterable","oFilterInfo","propertiesMetadata","getAllFilterInfo","oIFilterInfo","findValuesForKeyRecursively","obj","key","list","push","children","Object","keys","child","findValues","isFilterEligibleForOptimisticBatch","mdcTable","filterBar","filtersFromTable","filtersConditions","getConditions","filtersConditionsPaths","tableRowBindingsInfoPath","metaModel","getMetaModel","filterPropertiesAsPotentiallySensitiveDataOrDateType","filtersPathsFromTable","getFiltersPathsFromTable","filtersPathsFromFilterBar","getFiltersPathsFromFilterBar","edmDateTypes","allFiltersPaths","potentiallySensitiveAnnotation","getObject","filtersAnnotationsPaths","filterPath","getReferencePathsForFilters","getFilters","filterResult","length","i","left","right","whenBound","_getOrCreateBoundPromiseInfo","promise","onTableBound","oBoundPromiseInfo","resolve","fnResolve","Promise","isBound","updateFiltersForExternalID","entityTypePath","condition","nestedFilters","externalIdPropPath","sPath","$Path"],"sourceRoot":".","sources":["Utils.ts"],"sourcesContent":["import CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { PropertyInfo } from \"sap/fe/core/converters/controls/ListReport/FilterBar\";\nimport DelegateUtil from \"sap/fe/macros/DelegateUtil\";\nimport type { IFilterControl } from \"sap/fe/macros/filter/FilterUtils\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\n\nimport type QuickFilterSelector from \"sap/fe/macros/table/QuickFilterSelector\";\nimport type Control from \"sap/ui/core/Control\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport type MDCChart from \"sap/ui/mdc/Chart\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport CollectionBindingInfoAPI from \"../CollectionBindingInfo\";\n\ntype FilterInfo = {\n\tfilters: Filter[];\n\tsearch: string;\n\tbindingPath: string;\n};\n\nexport type InternalBindingInfo = {\n\tparameters?: Record<string, string>;\n\tfilters: Filter[];\n\tsearch?: string | null;\n\tbindingPath?: string;\n};\n\nfunction getHiddenFilters(oTable: Control): Filter[] {\n\tlet aFilters: Filter[] = [];\n\tconst hiddenFilters = oTable.data(\"hiddenFilters\");\n\tif (hiddenFilters && Array.isArray(hiddenFilters.paths)) {\n\t\thiddenFilters.paths.forEach(function (mPath: { annotationPath: string }) {\n\t\t\tconst oSvFilters = CommonUtils.getFiltersFromAnnotation(oTable, mPath.annotationPath);\n\t\t\taFilters = aFilters.concat(oSvFilters);\n\t\t});\n\t}\n\treturn aFilters;\n}\n\n/**\n * Retrieves the external filters configured on the table.\n * @param table The table\n * @returns  The filters\n */\nfunction getExternalFilters(table: Table): Filter[] {\n\tlet filters: Filter[] = getHiddenFilters(table);\n\tconst quickFilter = table.getQuickFilter() as QuickFilterSelector;\n\tif (quickFilter) {\n\t\tfilters = filters.concat(CommonUtils.getFiltersFromAnnotation(table, quickFilter.getSelectedKey()));\n\t}\n\treturn filters;\n}\n\n/**\n * Retrieves the count of the OData list binding.\n * @param table The table used to get the initial OData list binding\n * @param pageBindingContext The binding context of the page\n * @param params Contains the following attributes\n * @param params.batchGroupId The groupId of the batch request\n * @param params.additionalFilters The additional filters to apply to the original OData list binding\n * @returns The count\n */\nasync function getListBindingForCount(\n\ttable: Table,\n\tpageBindingContext: Context | null | undefined,\n\tparams: { batchGroupId?: string; additionalFilters?: Filter[] }\n): Promise<number> {\n\tconst oDataModel = table.getModel() as ODataModel;\n\tconst tableAPI = table.getParent() as TableAPI;\n\tconst filterInfo = tableUtils.getFilterInfo(table);\n\tconst filters = (Array.isArray(params.additionalFilters) ? params.additionalFilters : [])\n\t\t.concat(filterInfo.filters)\n\t\t.concat(tableUtils.getP13nFilters(table));\n\tconst bindingInfo = {\n\t\tpath: filterInfo.bindingPath ? filterInfo.bindingPath : tableAPI.getRowCollectionPath(),\n\t\tfilters: new Filter({\n\t\t\tfilters: filters,\n\t\t\tand: true\n\t\t})\n\t};\n\ttable.getParent()?.fireEvent(\"beforeRebindTable\", { collectionBindingInfo: new CollectionBindingInfoAPI(bindingInfo) });\n\n\t// Need to pass by a temporary ListBinding in order to get $filter query option (as string) thanks to fetchFilter of OdataListBinding\n\tconst listBindingPath =\n\t\tpageBindingContext && !bindingInfo.path.startsWith(\"/\") ? `${pageBindingContext.getPath()}/${bindingInfo.path}` : bindingInfo.path;\n\tconst listBinding = oDataModel.bindList(listBindingPath, table.getBindingContext() as Context, [], bindingInfo.filters);\n\tconst stringFilters: string[] = await (listBinding as ODataListBinding & { fetchFilter: Function }).fetchFilter(\n\t\tlistBinding.getContext()\n\t);\n\tconst countBinding = oDataModel.bindProperty(`${listBinding.getPath()}/$count`, listBinding.getContext(), {\n\t\t$$groupId: params.batchGroupId ?? \"$auto\",\n\t\t$filter: stringFilters[0],\n\t\t$search: filterInfo.search ? CommonUtils.normalizeSearchTerm(filterInfo.search) : undefined\n\t});\n\tconst value = await countBinding.requestValue();\n\tcountBinding.destroy();\n\tlistBinding.destroy();\n\treturn value;\n}\nfunction getCountFormatted(iCount: number | string): string {\n\tconst oCountFormatter = NumberFormat.getIntegerInstance({ groupingEnabled: true });\n\treturn oCountFormatter.format(iCount);\n}\nfunction getFilterInfo(oTable: Table, ignoreProperties?: string[]): InternalBindingInfo {\n\tconst oTableDefinition = (oTable.getParent() as TableAPI).getTableDefinition();\n\tlet aIgnoreProperties: string[] = ignoreProperties || [];\n\n\tif (oTableDefinition.enableAnalytics) {\n\t\tif (!oTableDefinition.enableBasicSearch) {\n\t\t\t// Search isn't allow as a $apply transformation for this table\n\t\t\taIgnoreProperties = aIgnoreProperties.concat([\"search\"]);\n\t\t}\n\t\taIgnoreProperties = aIgnoreProperties.concat([\"$editState\"]);\n\t} else if (oTableDefinition.control.type === \"TreeTable\") {\n\t\taIgnoreProperties = aIgnoreProperties.concat([\"$editState\"]);\n\t}\n\treturn FilterUtils.getFilterInfo(oTable.getFilter(), {\n\t\tignoredProperties: aIgnoreProperties,\n\t\ttargetControl: oTable\n\t});\n}\n\n/**\n * Retrieves all filters configured in the personalization dialog of the table or chart.\n * @param oControl Table or Chart instance\n * @returns Filters configured in the personalization dialog of the table or chart\n * @private\n */\nfunction getP13nFilters(oControl: Table | MDCChart): Filter[] {\n\tconst aP13nMode = oControl.getP13nMode();\n\tif (aP13nMode && aP13nMode.includes(\"Filter\")) {\n\t\tconst aP13nProperties = (\n\t\t\t\tDelegateUtil.getCustomData<PropertyInfo[]>(oControl, \"sap_fe_ControlDelegate_propertyInfoMap\") || []\n\t\t\t).filter(function (oControlProperty: PropertyInfo) {\n\t\t\t\treturn oControlProperty && !(oControlProperty.filterable === false);\n\t\t\t}),\n\t\t\toFilterInfo = FilterUtils.getFilterInfo(oControl as unknown as IFilterControl, { propertiesMetadata: aP13nProperties });\n\t\tif (oFilterInfo && oFilterInfo.filters) {\n\t\t\treturn oFilterInfo.filters;\n\t\t}\n\t}\n\treturn [];\n}\n\nfunction getAllFilterInfo(oTable: Table, ignoreProperties?: string[]): InternalBindingInfo {\n\tconst oIFilterInfo = tableUtils.getFilterInfo(oTable, ignoreProperties);\n\treturn {\n\t\tfilters: oIFilterInfo.filters.concat(getExternalFilters(oTable), tableUtils.getP13nFilters(oTable)),\n\t\tsearch: oIFilterInfo.search,\n\t\tbindingPath: oIFilterInfo.bindingPath\n\t};\n}\n\n/**\n * Find a value in an object.\n * @param obj The object to look into\n * @param key The key to search\n * @param list An array to return if obj is undefined\n * @returns Return an array of all keys content\n */\nfunction findValuesForKeyRecursively(obj: Record<string, unknown>, key: string, list: string[]): string[] {\n\tif (obj[key]) {\n\t\tlist.push(obj[key] as string);\n\t}\n\tconst children = Object.keys(obj);\n\tfor (const child of children) {\n\t\tif (typeof obj[child] === \"object\") {\n\t\t\tlist = list.concat(findValuesForKeyRecursively(obj[child] as Record<string, unknown>, key, []));\n\t\t}\n\t}\n\treturn list;\n}\n\n/**\n * Find a value into an object.\n * @param obj The object to look into\n * @param key The key to search\n * @returns Return an array of all keys content\n */\nfunction findValues(obj: Record<string, unknown>, key: string): string[] {\n\treturn findValuesForKeyRecursively(obj, key, []);\n}\n\n/**\n * Check all filter conditions for date types or sensitive data.\n * @param mdcTable Table or Chart instance\n * @param filterBar FilterBar\n * @returns True if one filter has a date type or a sensitive data\n */\nfunction isFilterEligibleForOptimisticBatch(mdcTable: Table, filterBar: FilterBar): boolean {\n\tconst filtersFromTable = tableUtils.getAllFilterInfo(mdcTable) as unknown as FilterInfo;\n\tconst filtersConditions = filterBar.getConditions();\n\tconst filtersConditionsPaths = Object.keys(filtersConditions);\n\tconst tableRowBindingsInfoPath = mdcTable.data(\"metaPath\");\n\tconst metaModel = mdcTable.getModel()?.getMetaModel();\n\tlet filterPropertiesAsPotentiallySensitiveDataOrDateType = false;\n\tconst filtersPathsFromTable = getFiltersPathsFromTable(tableRowBindingsInfoPath, filtersFromTable);\n\tconst filtersPathsFromFilterBar = getFiltersPathsFromFilterBar(tableRowBindingsInfoPath, filtersConditionsPaths);\n\tconst edmDateTypes = [\"Edm.Date\", \"Edm.DateTimeOffset\", \"Edm.TimeOfDay\"];\n\tconst allFiltersPaths = filtersPathsFromFilterBar.concat(filtersPathsFromTable);\n\tfor (const potentiallySensitiveAnnotation of allFiltersPaths) {\n\t\tif (\n\t\t\tmetaModel?.getObject(`${potentiallySensitiveAnnotation}@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive`) ||\n\t\t\tmetaModel?.getObject(`${potentiallySensitiveAnnotation}@com.sap.vocabularies.PersonalData.v1.IsPotentiallyPersonal`)\n\t\t) {\n\t\t\tfilterPropertiesAsPotentiallySensitiveDataOrDateType = true;\n\t\t\tbreak;\n\t\t}\n\t\tif (edmDateTypes.includes(metaModel?.getObject(`${potentiallySensitiveAnnotation}/$Type`))) {\n\t\t\tfilterPropertiesAsPotentiallySensitiveDataOrDateType = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn filterPropertiesAsPotentiallySensitiveDataOrDateType;\n}\n\n/**\n * Returns the annotation paths of all filters of the Filter Bar.\n * @param tableRowBindingsInfoPath The table metaPath\n * @param filtersConditionsPaths The paths of all filters conditions\n * @returns An array of paths of all filters\n */\nfunction getFiltersPathsFromFilterBar(tableRowBindingsInfoPath: string, filtersConditionsPaths: string[]): string[] {\n\tconst filtersAnnotationsPaths: string[] = [];\n\tfor (const filterPath of filtersConditionsPaths) {\n\t\tfiltersAnnotationsPaths.push(`${tableRowBindingsInfoPath}/${filterPath}`);\n\t}\n\treturn filtersAnnotationsPaths;\n}\n\n/**\n * Returns the paths of all filters conditions.\n * @param filter The filter to get the paths\n * @returns An object containing paths conditions\n */\nfunction getReferencePathsForFilters(filter: Filter): Record<string, unknown> {\n\tconst filters = filter.getFilters();\n\tlet filterResult = {};\n\t// find all filters in multi filters\n\tif (filters) {\n\t\tfilterResult = getReferencePathsForFilters(filters[filters.length - 1]);\n\t\tfor (let i = filters.length - 2; i >= 0; i--) {\n\t\t\tfilterResult = {\n\t\t\t\tleft: getReferencePathsForFilters(filters[i]),\n\t\t\t\tright: filterResult\n\t\t\t};\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\tpath: filter.getPath()\n\t\t};\n\t}\n\treturn filterResult;\n}\n\n/**\n * Returns the annotation paths of all table filters.\n * @param tableRowBindingsInfoPath The table metaPath\n * @param filters The filters to check for paths\n * @returns An array of paths of all filters\n */\nfunction getFiltersPathsFromTable(tableRowBindingsInfoPath: string, filters: FilterInfo): string[] {\n\tlet paths: string[];\n\tconst filtersAnnotationsPaths: string[] = [];\n\tfor (const filter of filters.filters) {\n\t\tpaths = findValues(getReferencePathsForFilters(filter), \"path\");\n\t\tfor (const filterPath of paths) {\n\t\t\tfiltersAnnotationsPaths.push(`${tableRowBindingsInfoPath}/${filterPath}`);\n\t\t}\n\t}\n\treturn filtersAnnotationsPaths;\n}\n\n/**\n * Returns a promise that is resolved with the table itself when the table was bound.\n * @param oTable The table to check for binding\n * @returns A Promise that will be resolved when table is bound\n */\nasync function whenBound(oTable: Table): Promise<Table> {\n\treturn _getOrCreateBoundPromiseInfo(oTable).promise;\n}\n\n/**\n * If not yet happened, it resolves the table bound promise.\n * @param oTable The table that was bound\n */\nfunction onTableBound(oTable: Table): void {\n\tconst oBoundPromiseInfo = _getOrCreateBoundPromiseInfo(oTable);\n\tif (oBoundPromiseInfo.resolve) {\n\t\toBoundPromiseInfo.resolve(oTable);\n\t\toTable.data(\"boundPromiseResolve\", null);\n\t}\n}\n\nfunction _getOrCreateBoundPromiseInfo(oTable: Table): { promise: Promise<Table>; resolve: Function } {\n\tif (!oTable.data(\"boundPromise\")) {\n\t\tlet fnResolve!: Function;\n\t\toTable.data(\n\t\t\t\"boundPromise\",\n\t\t\tnew Promise(function (resolve) {\n\t\t\t\tfnResolve = resolve;\n\t\t\t})\n\t\t);\n\t\tif ((oTable as unknown as { isBound?: () => boolean }).isBound?.()) {\n\t\t\tfnResolve(oTable);\n\t\t} else {\n\t\t\toTable.data(\"boundPromiseResolve\", fnResolve);\n\t\t}\n\t}\n\treturn { promise: oTable.data(\"boundPromise\"), resolve: oTable.data(\"boundPromiseResolve\") };\n}\n\nfunction updateFiltersForExternalID(metaModel: ODataMetaModel, filters: ConditionObject[], entityTypePath: string): void {\n\tfilters?.forEach((condition) => {\n\t\tconst nestedFilters = condition.getFilters();\n\n\t\tif (nestedFilters) {\n\t\t\tupdateFiltersForExternalID(metaModel, nestedFilters, entityTypePath);\n\t\t} else {\n\t\t\tconst externalIdPropPath = metaModel.getObject(entityTypePath + condition.sPath + \"@com.sap.vocabularies.Common.v1.ExternalID\")\n\t\t\t\t?.$Path;\n\t\t\tif (externalIdPropPath) {\n\t\t\t\tcondition.sPath = externalIdPropPath;\n\t\t\t}\n\t\t}\n\t});\n}\n\nconst tableUtils = {\n\tgetCountFormatted: getCountFormatted,\n\tgetHiddenFilters: getHiddenFilters,\n\tgetListBindingForCount: getListBindingForCount,\n\tgetFilterInfo: getFilterInfo,\n\tgetP13nFilters: getP13nFilters,\n\tgetAllFilterInfo: getAllFilterInfo,\n\tisFilterEligibleForOptimisticBatch: isFilterEligibleForOptimisticBatch,\n\twhenBound: whenBound,\n\tonTableBound: onTableBound,\n\tupdateFiltersForExternalID: updateFiltersForExternalID\n};\n\nexport default tableUtils;\n"],"mappings":"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","ignoreList":[],"file":"Utils-dbg.js"}