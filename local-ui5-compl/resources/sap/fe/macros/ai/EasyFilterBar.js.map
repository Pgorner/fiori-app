{"version":3,"file":"EasyFilterBar.js","names":["EasyFilterBar","_dec","defineUI5Class","_dec2","implementInterface","_dec3","association","type","_dec4","_dec5","property","_dec6","_dec7","aggregation","_class","_class2","_BuildingBlock","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","getAppComponent","getEnvironmentCapabilities","prepareFeature","then","easyFilterPath","content","setEasyFilterLib","catch","error","Log","debug","undefined","_exports","_inheritsLoose","_proto","prototype","applyLegacyState","async","getContrilState","oNavParameters","_shouldApplyDiffState","_skipMerge","selectionVariant","selectOptionsNames","getSelectOptionsPropertyNames","filterBarMetadata","forEach","field","includes","name","defaultValue","getSelectOption","map","option","Sign","Option","operator","FilterOperator","BT","selectedValues","value1","Low","value2","High","NE","resetState","Promise","resolve","applyState","_state","_oNavParameters","retrieveState","getApplicationId","getManifestEntry","id","onMetadataAvailable","_fetchedCodeList","prepareFilterBarMetadata","recommendedQueries","macros","easyFilter","createContent","owner","_getOwner","definitionForPage","preprocessorContext","getDefinitionForPage","filterBarDef","getFilterBarDefinition","metaModel","models","getType","edmType","codeList","startupParameters","getComponentData","filterFields","getFilterFields","result","propertyObject","getTarget","hasCodeList","hasValueHelpWithFixedValues","getCodeListForProperty","annotationPath","unitAnnotation","annotations","Measures","ISOCurrency","Unit","unitProperty","isPathAnnotationExpression","$target","unit","find","f","hasOwnProperty","EQ","isParameter","substring","label","dataType","required","filterable","sortable","ModelHelper","isMetaPathDraftSupported","getMetaPath","props","JSONModel","isDraftCollaborative","isCollaborationDraftSupported","createBindingContext","editingStatusCodeList","DraftEditState","getEditStatesContext","getObject","state","value","description","display","push","getTranslatedText","key","propertyPath","odataModel","getModel","valueList","getMetaModel","requestValueListInfo","defaultValueList","select","Parameters","param","ValueListProperty","join","listBinding","$model","bindList","CollectionPath","$select","data","requestContexts","valueProperty","descriptionProperty","parameter","LocalDataProperty","$PropertyPath","filterGroupValues","datum","dataobj","codeListProperty","onTokensChanged","e","filterBar","UI5Element","getElementById","filterBarAPI","getParent","tokens","getParameter","clearEditFilter","some","tokenDefinition","_clearFilterValuesWithOptions","formateDataTypes","token","tokenKeySpecification","keySpecificSelectedValues","FilterUtils","addFilterValues","triggerSearch","dateType","Date1","dateTimeOffsetType","DateTimeOffset","V4","timeOfDayType","TimeOfDay","keySpecificSelectedValue","requiredConverter","idx","parseValue","showValueHelpForKey","_currentValue","fnCallback","showFilterField","openValueHelpForFilterField","onBeforeQueryProcessing","uiModel","BusyLocker","lock","onAfterQueryProcessing","unlock","onClearFilters","onQueryChanged","fireFiltersChanged","conditionsBased","_jsx","EasyFilterBarContainer","contextPath","getOwnerContextPath","appId","easyFilterLib","showValueHelp","selectedConditions","tokenSelectedValues","condition","NB","values","recommendedValues","queryChanged","bind","tokensChanged","beforeQueryProcessing","afterQueryProcessing","clearFilters","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./EasyFilterBar.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, association, defineUI5Class, implementInterface, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport type {\n\tBetweenSelectedValues,\n\tEasyFilterPropertyMetadata,\n\tTokenDefinition,\n\tTokenSelectedValuesDefinition,\n\tTokenType\n} from \"sap/fe/controls/easyFilter/EasyFilterBarContainer\";\nimport EasyFilterBarContainer from \"sap/fe/controls/easyFilter/EasyFilterBarContainer\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport type { ControlState, NavigationParameter } from \"sap/fe/core/controllerextensions/ViewState\";\nimport type IViewStateContributor from \"sap/fe/core/controllerextensions/viewState/IViewStateContributor\";\nimport type { FilterField } from \"sap/fe/core/definition/FEDefinition\";\nimport type MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport { hasValueHelpWithFixedValues } from \"sap/fe/core/templating/PropertyHelper\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport DraftEditState from \"sap/fe/macros/filterBar/DraftEditState\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Date1 from \"sap/ui/model/odata/type/Date\";\nimport DateTimeOffset from \"sap/ui/model/odata/type/DateTimeOffset\";\nimport type ODataType from \"sap/ui/model/odata/type/ODataType\";\nimport TimeOfDay from \"sap/ui/model/odata/type/TimeOfDay\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\ntype EasyFilterBarState = {};\n/**\n * Delivery for beta release for the easy filter feature.\n * @experimental\n */\n@defineUI5Class(\"sap.fe.macros.EasyFilterBar\")\nexport default class EasyFilterBar extends BuildingBlock implements IViewStateContributor<EasyFilterBarState> {\n\t@implementInterface(\"sap.fe.core.controllerextensions.viewState.IViewStateContributor\")\n\t__implements__sap_fe_core_controllerextensions_viewState_IViewStateContributor!: boolean;\n\n\t@association({ type: \"sap.fe.macros.filterBar.FilterBarAPI\" })\n\tfilterBar!: string;\n\n\t@association({ type: \"sap.fe.macros.contentSwitcher.ContentSwitcher\" })\n\tcontentSwitcher!: string;\n\n\t@property({ type: \"string\" })\n\tcontentSwitcherKey?: string;\n\n\t@property({ type: \"string\" })\n\tcontextPath?: string;\n\n\t@aggregation({ type: \"sap.fe.controls.easyFilter.EasyFilterBarContainer\" })\n\tcontent?: EnhanceWithUI5<EasyFilterBarContainer>;\n\n\t_fetchedCodeList!: Record<string, unknown>;\n\n\tprivate filterBarMetadata!: EasyFilterPropertyMetadata[];\n\n\tprivate easyFilterPath?: string;\n\n\tprivate recommendedQueries?: string[];\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<EasyFilterBar>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t\tthis.getAppComponent()\n\t\t\t?.getEnvironmentCapabilities()\n\t\t\t.prepareFeature(\"MagicFiltering\")\n\t\t\t.then(() => {\n\t\t\t\tthis.easyFilterPath = \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\n\t\t\t\tthis.content?.setEasyFilterLib(this.easyFilterPath);\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tLog.debug(\"Error while loading EasyFilter\", error);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t}\n\n\tasync applyLegacyState(\n\t\tgetContrilState?: (control: ManagedObject) => ControlState,\n\t\toNavParameters?: NavigationParameter,\n\t\t_shouldApplyDiffState?: boolean,\n\t\t_skipMerge?: boolean\n\t): Promise<void> {\n\t\tif (oNavParameters?.selectionVariant) {\n\t\t\tconst selectOptionsNames = oNavParameters.selectionVariant.getSelectOptionsPropertyNames();\n\t\t\tthis.filterBarMetadata.forEach((field) => {\n\t\t\t\tif (selectOptionsNames.includes(field.name)) {\n\t\t\t\t\tfield.defaultValue = oNavParameters.selectionVariant!.getSelectOption(field.name)?.map((option) => {\n\t\t\t\t\t\tif (option.Sign === \"I\") {\n\t\t\t\t\t\t\tif (option.Option === \"BT\") {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: FilterOperator.BT,\n\t\t\t\t\t\t\t\t\tselectedValues: [{ value1: option.Low, value2: option.High }]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: option.Option,\n\t\t\t\t\t\t\t\t\tselectedValues: [option.Low]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\toperator: FilterOperator.NE,\n\t\t\t\t\t\t\t\tselectedValues: [option.Low]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}) as TokenSelectedValuesDefinition[];\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.content?.resetState();\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tapplyState(_state: EasyFilterBarState, _oNavParameters?: NavigationParameter): Promise<void> | void {\n\t\treturn undefined;\n\t}\n\n\tretrieveState(): EasyFilterBarState | null {\n\t\treturn {};\n\t}\n\n\tgetApplicationId(): string {\n\t\treturn this.getAppComponent()?.getManifestEntry(\"sap.app\").id ?? \"<unknownID>\";\n\t}\n\n\tonMetadataAvailable(): void {\n\t\tthis._fetchedCodeList ??= {};\n\t\tthis.filterBarMetadata = this.prepareFilterBarMetadata();\n\t\tthis.recommendedQueries = this.getAppComponent()?.getManifestEntry(\"sap.fe\")?.macros?.easyFilter?.recommendedQueries ?? [];\n\t\tthis.content = this.createContent() as EnhanceWithUI5<EasyFilterBarContainer>;\n\t\tthis.content.filterBarMetadata = this.filterBarMetadata;\n\t}\n\n\tprepareFilterBarMetadata(): EasyFilterPropertyMetadata[] {\n\t\tconst owner = this._getOwner()!;\n\t\tconst definitionForPage = owner.preprocessorContext?.getDefinitionForPage();\n\t\tlet filterBarDef;\n\t\tif (definitionForPage) {\n\t\t\tfilterBarDef = definitionForPage.getFilterBarDefinition({});\n\n\t\t\tconst metaModel = owner.preprocessorContext?.models.metaModel as ODataMetaModel;\n\n\t\t\tconst getType = (edmType: string, codeList: unknown): TokenType => {\n\t\t\t\tif (codeList) {\n\t\t\t\t\treturn \"MenuWithCheckBox\";\n\t\t\t\t}\n\t\t\t\tswitch (edmType) {\n\t\t\t\t\tcase \"Edm.Date\":\n\t\t\t\t\t\treturn \"Calendar\";\n\t\t\t\t\tcase \"Edm.TimeOfDay\":\n\t\t\t\t\t\treturn \"Time\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"ValueHelp\";\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst startupParameters = owner.getAppComponent().getComponentData()?.startupParameters ?? {};\n\n\t\t\tconst filterFields = filterBarDef.getFilterFields();\n\t\t\tconst result = filterFields.map((field: FilterField): EasyFilterPropertyMetadata => {\n\t\t\t\t// Exclude hidden filter fields. It is not possible to set a value for hidden filters, and users would not understand anyway as they cannot see these values.\n\t\t\t\tconst propertyObject = field.getTarget();\n\t\t\t\tlet codeList;\n\t\t\t\tconst hasCodeList = hasValueHelpWithFixedValues(propertyObject);\n\t\t\t\tif (hasCodeList) {\n\t\t\t\t\tcodeList = this._fetchedCodeList[field.name];\n\t\t\t\t\tif (!codeList) {\n\t\t\t\t\t\tcodeList = async (): Promise<unknown> => this.getCodeListForProperty(field.name, field.annotationPath!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if the filter field's target property has a currency or a unit. If so, look for the corresponding filter field (the\n\t\t\t\t// annotation has to be a path for that) and set the 'unit' property.\n\t\t\t\tconst unitAnnotation = propertyObject.annotations.Measures?.ISOCurrency ?? propertyObject.annotations.Measures?.Unit;\n\t\t\t\tconst unitProperty = isPathAnnotationExpression(unitAnnotation) ? unitAnnotation.$target : undefined;\n\t\t\t\tconst unit = unitProperty ? filterFields.find((f) => f.getTarget() === unitProperty)?.name : undefined;\n\t\t\t\tlet defaultValue;\n\t\t\t\tif (startupParameters.hasOwnProperty(field.name)) {\n\t\t\t\t\tdefaultValue = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\tselectedValues: startupParameters[field.name]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t} else if (field.isParameter && startupParameters.hasOwnProperty(field.name.substring(2))) {\n\t\t\t\t\tdefaultValue = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\tselectedValues: startupParameters[field.name.substring(2)]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tname: field.name,\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tdataType: propertyObject.type,\n\t\t\t\t\trequired: field.required ?? false,\n\t\t\t\t\tdefaultValue: defaultValue,\n\t\t\t\t\tfilterable: true,\n\t\t\t\t\tsortable: !field.isParameter,\n\t\t\t\t\tcodeList: codeList,\n\t\t\t\t\ttype: getType(propertyObject.type, codeList),\n\t\t\t\t\tunit: unit\n\t\t\t\t} as EasyFilterPropertyMetadata;\n\t\t\t});\n\n\t\t\t// [Editing Status]\n\n\t\t\tif (ModelHelper.isMetaPathDraftSupported(definitionForPage.getMetaPath() as unknown as MetaPath<unknown>)) {\n\t\t\t\t// Assemble the code list for the editing status filter values:\n\t\t\t\tconst props = new JSONModel({\n\t\t\t\t\tisDraftCollaborative: ModelHelper.isCollaborationDraftSupported(metaModel)\n\t\t\t\t}).createBindingContext(\"/\");\n\n\t\t\t\tconst editingStatusCodeList = DraftEditState.getEditStatesContext(props)\n\t\t\t\t\t.getObject(\"/\")\n\t\t\t\t\t.map((state: { id: string; display: string }) => ({ value: state.id, description: state.display }));\n\n\t\t\t\tresult.push({\n\t\t\t\t\tname: \"$editState\",\n\t\t\t\t\tlabel: this.getTranslatedText(\"FILTERBAR_EDITING_STATUS\"),\n\t\t\t\t\tdataType: \"Edm.String\",\n\t\t\t\t\trequired: false,\n\t\t\t\t\tfilterable: true,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\tcodeList: editingStatusCodeList,\n\t\t\t\t\ttype: \"MenuWithCheckBox\"\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getCodeListForProperty(key: string, propertyPath: string): Promise<unknown> {\n\t\t// Fetch and cache the codeList for valueListWithFixedValues\n\t\tconst odataModel = this.getModel() as ODataModel;\n\t\tconst valueList = await odataModel.getMetaModel().requestValueListInfo(propertyPath);\n\t\tconst defaultValueList = valueList[\"\"];\n\t\tconst select = defaultValueList.Parameters.map((param: { ValueListProperty: string }) => param.ValueListProperty).join(\",\");\n\t\tconst listBinding = defaultValueList.$model.bindList(\"/\" + defaultValueList.CollectionPath, undefined, undefined, undefined, {\n\t\t\t$select: select\n\t\t});\n\t\tconst data = await listBinding.requestContexts();\n\t\tlet valueProperty: string;\n\t\tlet descriptionProperty: string | undefined;\n\t\tfor (const parameter of defaultValueList.Parameters) {\n\t\t\tif (parameter.LocalDataProperty?.$PropertyPath === key) {\n\t\t\t\tvalueProperty = parameter.ValueListProperty;\n\t\t\t} else {\n\t\t\t\tdescriptionProperty = parameter.ValueListProperty;\n\t\t\t}\n\t\t}\n\n\t\tconst filterGroupValues = [];\n\t\tfor (const datum of data) {\n\t\t\tconst dataobj = datum.getObject();\n\t\t\tfilterGroupValues.push({\n\t\t\t\tvalue: dataobj[valueProperty!],\n\t\t\t\tdescription: descriptionProperty ? dataobj[descriptionProperty] : undefined\n\t\t\t});\n\t\t}\n\t\tthis._fetchedCodeList[key] = filterGroupValues;\n\t\tconst codeListProperty = this.filterBarMetadata.find((field) => field.name === key);\n\t\tif (codeListProperty) {\n\t\t\tcodeListProperty.codeList = filterGroupValues;\n\t\t}\n\t\treturn filterGroupValues;\n\t}\n\n\tasync onTokensChanged(e: UI5Event<{ tokens: TokenDefinition[] }, EasyFilterBarContainer>): Promise<void> {\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\tconst tokens = e.getParameter(\"tokens\");\n\t\tconst clearEditFilter = tokens.some((tokenDefinition) => tokenDefinition.key === \"$editState\");\n\t\tawait filterBarAPI._clearFilterValuesWithOptions(filterBar, { clearEditFilter });\n\t\tthis.formateDataTypes(tokens);\n\n\t\tfor (const token of tokens) {\n\t\t\tif (token.key === \"$editState\") {\n\t\t\t\t// convert the $editState filter condition\n\t\t\t\tfor (const tokenKeySpecification of token.keySpecificSelectedValues) {\n\t\t\t\t\tawait FilterUtils.addFilterValues(\n\t\t\t\t\t\tfilterBarAPI.content,\n\t\t\t\t\t\ttoken.key,\n\t\t\t\t\t\t\"DRAFT_EDIT_STATE\",\n\t\t\t\t\t\ttokenKeySpecification.selectedValues\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//BT and NB case to be handled in future, currently its crashing\n\t\t\t\tfor (const tokenKeySpecification of token.keySpecificSelectedValues) {\n\t\t\t\t\tconst { operator, selectedValues } = tokenKeySpecification;\n\t\t\t\t\tawait FilterUtils.addFilterValues(filterBarAPI.content, token.key, operator, selectedValues);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tawait filterBarAPI.triggerSearch();\n\t}\n\n\t//We need the below function so that the date objects and dateTimeOffsets would be converted to string type as the date object is not a valid type in V4 world\n\tformateDataTypes(tokens: TokenDefinition[]): void {\n\t\tconst dateType = new Date1(),\n\t\t\tdateTimeOffsetType = new DateTimeOffset(undefined, { V4: true }),\n\t\t\ttimeOfDayType = new TimeOfDay();\n\t\ttokens.forEach((token) => {\n\t\t\tconst edmType = this.filterBarMetadata.find((data) => data.name === token.key)?.dataType;\n\t\t\ttoken.keySpecificSelectedValues.forEach((keySpecificSelectedValue) => {\n\t\t\t\tlet requiredConverter: ODataType;\n\t\t\t\tswitch (edmType) {\n\t\t\t\t\tcase \"Edm.Date\":\n\t\t\t\t\t\trequiredConverter = dateType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Edm.TimeOfDay\":\n\t\t\t\t\t\trequiredConverter = timeOfDayType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Edm.DateTimeOffset\":\n\t\t\t\t\t\trequiredConverter = dateTimeOffsetType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tkeySpecificSelectedValue.selectedValues.forEach((value, idx) => {\n\t\t\t\t\tkeySpecificSelectedValue.selectedValues[idx] = requiredConverter.parseValue(value, \"object\");\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync showValueHelpForKey(key: string, _currentValue: unknown, fnCallback: Function): Promise<void> {\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\tawait filterBarAPI.showFilterField(key);\n\t\tfilterBarAPI.openValueHelpForFilterField(key, undefined, fnCallback);\n\t}\n\n\tonBeforeQueryProcessing(): void {\n\t\tconst uiModel = this.getModel(\"ui\") as JSONModel;\n\t\tBusyLocker.lock(uiModel);\n\t}\n\n\tonAfterQueryProcessing(): void {\n\t\tconst uiModel = this.getModel(\"ui\") as JSONModel;\n\t\tBusyLocker.unlock(uiModel);\n\t}\n\n\tasync onClearFilters(): Promise<void> {\n\t\t// Empty input: clear the filters and refresh the list\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\tawait filterBarAPI._clearFilterValuesWithOptions(filterBar);\n\t\tawait filterBarAPI.triggerSearch();\n\t}\n\n\tonQueryChanged(): void {\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tfilterBar.fireFiltersChanged({ conditionsBased: true });\n\t}\n\n\tcreateContent(): EasyFilterBarContainer {\n\t\treturn (\n\t\t\t<EasyFilterBarContainer\n\t\t\t\tcontextPath={this.getOwnerContextPath()}\n\t\t\t\tappId={this.getApplicationId()}\n\t\t\t\tfilterBarMetadata={this.filterBarMetadata}\n\t\t\t\teasyFilterLib={this.easyFilterPath}\n\t\t\t\tshowValueHelp={(e): void => {\n\t\t\t\t\tthis.showValueHelpForKey(e.getParameter(\"key\"), e.getParameter(\"values\"), (selectedConditions: ConditionObject[]) => {\n\t\t\t\t\t\tconst tokenSelectedValues: TokenSelectedValuesDefinition[] = selectedConditions.map((condition) => {\n\t\t\t\t\t\t\tif (condition.operator === FilterOperator.BT || condition.operator === FilterOperator.NB) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: condition.operator,\n\t\t\t\t\t\t\t\t\tselectedValues: condition.values as BetweenSelectedValues\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: condition.operator as Exclude<FilterOperator, FilterOperator.BT | FilterOperator.NB>,\n\t\t\t\t\t\t\t\t\tselectedValues: condition.values as string[] | boolean[] | number[] | Date[]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\te.getParameter(\"resolve\")(tokenSelectedValues);\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\trecommendedValues={this.recommendedQueries}\n\t\t\t\tqueryChanged={this.onQueryChanged.bind(this)}\n\t\t\t\ttokensChanged={this.onTokensChanged.bind(this)}\n\t\t\t\tbeforeQueryProcessing={this.onBeforeQueryProcessing.bind(this)}\n\t\t\t\tafterQueryProcessing={this.onAfterQueryProcessing.bind(this)}\n\t\t\t\tclearFilters={this.onClearFilters.bind(this)}\n\t\t\t/>\n\t\t) as EasyFilterBarContainer;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}