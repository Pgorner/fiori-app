{"version":3,"file":"MicroChart.block.js","names":["MicroChartBlock","_dec","defineBuildingBlock","name","namespace","publicNamespace","returnTypes","_dec2","blockAttribute","type","isPublic","required","_dec3","expectedTypes","_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_class","_class2","_BuildingBlockTemplat","props","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","metaPath","getModel","createBindingContext","AnnotationHelper","resolve$Path","contextObject","getInvolvedDataModelObjects","contextPath","targetObject","term","SortOrder","length","sortOrder","getSortOrder","measureAttributePath","CommonHelper","getMeasureAttributeForMeasure","DataPoint","contextObjectPath","targetNavigationPath","getTargetNavigationPath","_exports","_inheritsLoose","_proto","prototype","sortingProps","map","sortingProp","Property","value","Descending","fullyQualifiedName","$Type","getMicroChartContent","convertedChart","convertMetaModelContext","ChartType","getTemplate","dataPointValueObjects","wrapperConditionBinding","hasValidAnalyticalCurrencyOrUnit","wrapperVisibleBinding","or","not","pathInModel","equal","isAnalytics","xml","BuildingBlockTemplatingBase","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./MicroChart.block.ts"],"sourcesContent":["import type { Property, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport { CommonAnnotationTypes, type SortOrderType } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { UIAnnotationTerms, type Chart, type PresentationVariant } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { equal, not, or, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport { type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { blockAttribute, defineBuildingBlock } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockSupport\";\nimport { xml } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport BuildingBlockTemplatingBase from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplatingBase\";\nimport { convertMetaModelContext, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getTargetNavigationPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { hasValidAnalyticalCurrencyOrUnit } from \"sap/fe/core/templating/UIFormatters\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport AnnotationHelper from \"sap/ui/model/odata/v4/AnnotationHelper\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\n\n/**\n * Building block used to create a MicroChart based on the metadata provided by OData V4.\n * {@link demo:sap/fe/core/fpmExplorer/index.html#/buildingBlocks/microchart/microChartDefault Overview of Building Blocks}\n * @hideconstructor\n * @public\n * @since 1.93.0\n */\n@defineBuildingBlock({\n\tname: \"MicroChart\",\n\tnamespace: \"sap.fe.macros.internal\",\n\tpublicNamespace: \"sap.fe.macros\",\n\treturnTypes: [\"sap.fe.macros.controls.ConditionalWrapper\", \"sap.fe.macros.microchart.MicroChartContainer\"]\n})\nexport default class MicroChartBlock extends BuildingBlockTemplatingBase {\n\t/**\n\t * ID of the MicroChart.\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true, required: true })\n\tid!: string;\n\n\t/**\n\t * Metadata path to the entitySet or navigationProperty.\n\t */\n\t@blockAttribute({ type: \"sap.ui.model.Context\", expectedTypes: [\"EntitySet\", \"EntityType\", \"NavigationProperty\"], isPublic: true })\n\tcontextPath?: Context;\n\n\t/**\n\t * Metadata path to the Chart annotations.\n\t */\n\t@blockAttribute({ type: \"sap.ui.model.Context\", isPublic: true, required: true })\n\tmetaPath!: Context;\n\n\t/**\n\t * To control the rendering of Title, Subtitle and Currency Labels. When the size is xs then we do\n\t * not see the inner labels of the MicroChart as well.\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tshowOnlyChart: string | boolean = false;\n\n\t/**\n\t * Batch group ID along with which this call should be grouped.\n\t */\n\t@blockAttribute({ type: \"string\" })\n\tbatchGroupId = \"\";\n\n\t/**\n\t * Title for the MicroChart. If no title is provided, the title from the Chart annotation is used.\n\t */\n\t@blockAttribute({ type: \"string\" })\n\ttitle = \"\";\n\n\t/**\n\t * Show blank space in case there is no data in the chart\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\thideOnNoData: string | boolean = false;\n\n\t/**\n\t * Description for the MicroChart. If no description is provided, the description from the Chart annotation is used.\n\t */\n\t@blockAttribute({ type: \"string\" })\n\tdescription = \"\";\n\n\t/**\n\t * Type of navigation, that is, External or InPage\n\t */\n\t@blockAttribute({ type: \"sap.fe.macros.NavigationType\" })\n\tnavigationType = \"None\";\n\n\t/**\n\t * Event handler for onTitlePressed event\n\t */\n\t@blockAttribute({ type: \"function\" })\n\tonTitlePressed?: string;\n\n\t/**\n\t * Size of the MicroChart\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tsize?: string;\n\n\t/**\n\t * Defines whether the MicroChart is part of an analytical table\n\t */\n\t@blockAttribute({ type: \"boolean\" })\n\tisAnalytics = false;\n\n\t/*\n\t * This is used in inner fragments, so we need to declare it as block attribute context.\n\t */\n\t@blockAttribute({ type: \"sap.ui.model.Context\" })\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tprivate readonly DataPoint?: Context;\n\n\t/*\n\t * This is sort order for the microcharts.\n\t */\n\t@blockAttribute({ type: \"array\" })\n\tsortOrder?: SortOrderType[];\n\n\t/*\n\t * Target Navigation Path of the Microchart which would help create the binding for MicroChartContainer\n\t */\n\t@blockAttribute({ type: \"sap.ui.model.Context\" })\n\tprivate readonly targetNavigationPath?: Context;\n\n\tprivate readonly contextObjectPath?: DataModelObjectPath<Chart>;\n\n\tconstructor(props: PropertiesOf<MicroChartBlock>) {\n\t\tsuper(props);\n\n\t\tthis.metaPath = this.metaPath.getModel().createBindingContext(AnnotationHelper.resolve$Path(this.metaPath)) as Context;\n\t\tconst contextObject = getInvolvedDataModelObjects<Property>(this.metaPath, this.contextPath) as DataModelObjectPath<\n\t\t\tChart | PresentationVariant\n\t\t>;\n\t\tif (contextObject.targetObject?.term === UIAnnotationTerms.PresentationVariant) {\n\t\t\tif ((contextObject.targetObject.SortOrder as unknown as SortOrderType[] | undefined)?.length != null) {\n\t\t\t\tthis.sortOrder = this.getSortOrder(contextObject.targetObject.SortOrder);\n\t\t\t}\n\t\t\t//We only consider the first visualization of the PV and expect it to be a chart (similar to VisualFilters)\n\t\t\tthis.metaPath = this.metaPath.getModel().createBindingContext(\"Visualizations/0/$AnnotationPath\", this.metaPath) as Context;\n\t\t}\n\t\tconst measureAttributePath = CommonHelper.getMeasureAttributeForMeasure(\n\t\t\tthis.metaPath.getModel().createBindingContext(\"Measures/0\", this.metaPath)\n\t\t);\n\t\tif (measureAttributePath) {\n\t\t\tthis.DataPoint = this.metaPath.getModel().createBindingContext(measureAttributePath) as Context;\n\t\t}\n\t\tthis.contextObjectPath = getInvolvedDataModelObjects(this.metaPath, this.contextPath);\n\t\tthis.targetNavigationPath = this.metaPath\n\t\t\t.getModel()\n\t\t\t.createBindingContext(getTargetNavigationPath(this.contextObjectPath)) as Context;\n\t}\n\n\t/**\n\t * Gets the sortOrder for the microChart as mentioned in the PresentationVariant.\n\t * @param sortingProps Sorters from PresentationVariant\n\t * @returns SortOrder\n\t */\n\tgetSortOrder(sortingProps: SortOrderType[]): SortOrderType[] {\n\t\treturn sortingProps.map((sortingProp: SortOrderType) => {\n\t\t\treturn {\n\t\t\t\tProperty: sortingProp.Property?.value as unknown as PropertyPath,\n\t\t\t\tDescending: sortingProp.Descending as boolean | undefined,\n\t\t\t\tfullyQualifiedName: \"\",\n\t\t\t\t$Type: CommonAnnotationTypes.SortOrderType\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Gets the content of the micro chart, such as a reference to the fragment for the given chart type.\n\t * @returns XML string\n\t */\n\tgetMicroChartContent(): string {\n\t\tconst convertedChart = convertMetaModelContext(this.metaPath) as Chart;\n\n\t\tswitch (convertedChart.ChartType) {\n\t\t\tcase \"UI.ChartType/Bullet\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.BulletMicroChart\" type=\"XML\" />`;\n\t\t\tcase \"UI.ChartType/Donut\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.RadialMicroChart\" type=\"XML\" />`;\n\t\t\tcase \"UI.ChartType/Pie\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.HarveyBallMicroChart\" type=\"XML\" />`;\n\t\t\tcase \"UI.ChartType/BarStacked\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.StackedBarMicroChart\" type=\"XML\" />`;\n\t\t\tcase \"UI.ChartType/Area\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.AreaMicroChart\" type=\"XML\" />`;\n\t\t\tcase \"UI.ChartType/Column\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.ColumnMicroChart\" type=\"XML\" />`;\n\t\t\tcase \"UI.ChartType/Line\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.LineMicroChart\" type=\"XML\" />`;\n\t\t\tcase \"UI.ChartType/Bar\":\n\t\t\t\treturn `<core:Fragment fragmentName=\"sap.fe.macros.microchart.fragments.ComparisonMicroChart\" type=\"XML\" />`;\n\t\t\tdefault:\n\t\t\t\treturn `<m:Text text=\"This chart type is not supported. Other Types yet to be implemented..\" />`;\n\t\t}\n\t}\n\n\t/**\n\t * The building block template function.\n\t * @returns An XML-based string\n\t */\n\tgetTemplate(): string {\n\t\tconst dataPointValueObjects = getInvolvedDataModelObjects<Property>(\n\t\t\tthis.metaPath.getModel().createBindingContext(\"Value/$Path\", this.DataPoint),\n\t\t\tthis.contextPath\n\t\t);\n\t\tconst wrapperConditionBinding = hasValidAnalyticalCurrencyOrUnit(dataPointValueObjects);\n\t\tconst wrapperVisibleBinding = or(not(pathInModel(\"@$ui5.node.isExpanded\")), equal(pathInModel(\"@$ui5.node.level\"), 0));\n\n\t\tif (this.isAnalytics) {\n\t\t\treturn xml`<controls:ConditionalWrapper\n\t\t\t\txmlns:controls=\"sap.fe.macros.controls\"\n\t\t\t\tcondition=\"${wrapperConditionBinding}\"\n\t\t\t\tvisible=\"${wrapperVisibleBinding}\" >\n\t\t\t\t<controls:contentTrue>\n\t\t\t\t\t${this.getMicroChartContent()}\n\t\t\t\t</controls:contentTrue>\n\t\t\t\t<controls:contentFalse>\n\t\t\t\t\t<m:Text text=\"*\" />\n\t\t\t\t</controls:contentFalse>\n\t\t\t</controls:ConditionalWrapper>`;\n\t\t} else {\n\t\t\treturn this.getMicroChartContent();\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}