{"version":3,"names":["measureRole","personalizationValues","createChartDefinition","chartBlock","converterContext","contextObjectPath","controlPath","visualizationPath","getContextRelativeTargetObjectPath","visualizations","_metaPathContext","getObject","$Type","Visualizations","PresentationVariant","length","checkChartExists","visualizationDefinition","getDataVisualizationConfiguration","isCondensedTableLayoutCompliant","useCondensedLayout","isMacroOrMultipleView","shouldCreateTemplateChartVisualization","some","visualization","includes","$AnnotationPath","getContentId","macroId","getExtraParams","extraParams","customActions","actions","Object","values","forEach","action","isA","key","getActionProperties","text","placement","anchor","map","_","index","act","actionKey","concat","press","requiresSelection","enabled","undefined","position","menu","actionProperties","__noWrap","createBindingContext","data","contextPath","uid","actionsModel","JSONModel","setProperty","getChartMeasures","aggregationHelper","chartAnnotationPath","chartDefinition","annotationPath","split","filter","item","pos","indexOf","toString","replaceAll","oChart","getInvolvedDataModelObjects","_metaModel","_context","targetObject","aggregatedProperty","getAggregatedProperty","measures","annoPath","getPath","aggregatedProperties","getAggregatedProperties","chartMeasures","Measures","chartDynamicMeasures","DynamicMeasures","transAggInMeasures","properties","propertyMeasureType","Name","value","entitySetPath","replace","transAggregations","transAgg","customAggregations","customAgg","Log","warning","isCustomAggregateIsMeasure","oChartMeasure","oCustomAggMeasure","getCustomAggMeasure","Error","dynamicMeasure","getDynamicMeasures","chartMeasure","customAggMeasure","measureType","setCustomAggMeasure","setTransAggMeasure","setChartMeasureAttributes","_chart","MeasureAttributes","measuresModel","$$valueAsPromise","measure","error","role","label","propertyPath","push","transAggMeasure","name","aggregationMethod","chartDynamicMeasure","chart","startsWith","AggregatableProperty","AggregationMethod","resolveBindingString","annotations","Common","Label","$target","measureAttributes","measureAttribute","_setChartMeasureAttribute","path","DynamicMeasure","Measure","measureAttributeDataPoint","DataPoint","Role","dataPoint","setMeasureRole","setMeasureDataPoint","createDataPointProperty","oDataPointAnno","oDataPoint","TargetValue","targetValue","$Path","ForecastValue","foreCastValue","oCriticality","Criticality","isPathAnnotationExpression","Calculated","Static","$EnumMember","CriticalityCalculation","oThresholds","bConstant","buildThresholds","ConstantThresholds","DynamicThresholds","criticality","thresholds","criticalityCalculation","keys","ImprovementDirection","dynamicThresholds","oneSupplied","usedMeasures","constantThresholds","initialiseThresholds","processThresholds","AggregationLevels","processAggregationLevelForThresholds","oAggregationLevel","VisibleDimensions","sKey","processAggregationLevelsForConstantThresholds","aggregationLevel","aggregationLevelInfo","visibleDimensions","AggregationLevel","$PropertyPath","Value","ChartHelper","formatJSONToString","getDependents","chartContext","_commandActions","commandAction","getActionCommand","checkPersonalizationInChartProperties","personalization","_personalization","join","verifyValidPersonalization","valid","splitArray","acceptedValues","arrayElement","getVariantManagement","variantManagement","createVariantManagement","_jsx","VariantManagement","id","generate","_blockId","for","showSetAsDefault","headerLevel","select","event","fireVariantSelected","save","fireVariantSaved","getPersistenceProvider","PersistenceProvider","pushActionCommand","actionContext","dataField","chartOperationAvailableMap","onExecuteAction","getPressEventForDataFieldForActionButton","onExecuteIBN","CommonHelper","getPressHandlerForDataFieldForIBN","onExecuteManifest","buildActionWrapper","dataFieldContext","dataFieldAction","getActionContext","isBoundPath","getPathToBoundActionOverload","isBound","escapeXMLAttributeValue","getOperationAvailableMap","context","isActionEnabled","isDataFieldForActionButtonEnabled","$IsBound","Action","enableOnSelect","isIBNEnabled","RequiresContext","commandEnabled","type","actionCommand","CommandExecution","execute","commandExecute","visible","getVisible","command","IsBound","view","CommonUtils","getTargetView","getSource","controller","getController","sInvocationGrouping","InvocationGrouping","params","contexts","getBindingContext","getProperty","invocationGrouping","controlId","operationAvailableMap","model","getModel","editFlow","invokeAction","navigationParameters","navigationContexts","Mapping","semanticObjectMapping","JSON","stringify","_intentBasedNavigation","navigate","SemanticObject","FPMHelper","actionWrapper","handlerModule","handlerMethod","getItems","dimensions","Dimensions","formatDimensions","_chartContext","dimension","getItem","formatMeasures","prefix","MdcChartItem","propertyKey","getToolbarActions","getActions","onSegmentedButtonPressed","getSegmentedButton","isInsightsEnabled","getStandardActions","isInsightsVisible","ActionToolbarAction","children","Button","onAddCardToInsightsPressed","layoutData","OverflowToolbarLayoutData","priority","removeMenuItems","chartActions","getAction","hasOwnProperty","getCustomActions","idx","splice","actionEnabled","getActionToolbarAction","unittestid","ariaHasPopup","getActionToolbarMenuAction","useDefaultActionOnly","DefaultActionHandler","getUseDefaultActionOnly","buttonMode","getButtonMode","defaultAction","getMenuItemFromMenu","menuItemAction","pressHandler","noWrap","functionName","selectedContexts","MenuItem","props","aMenuItems","MenuButton","menuPosition","Dock","BeginBottom","Menu","isMenuItem","getNavigationActions","getAnnotationActions","menuItems","menuAction","actionObject","getAnnotationActionsEnabled","dataFieldModelObjectPath","isDataModelObjectPathForActionWithDialog","toolbarAction","pressEvent","buildAction","getActionPress","actionPress","getCustomActionPress","getActionPressWithAnnotationPath","getStandardActionPressWithNoCommand","layoutInformation","aggregationName","alignment","SegmentedButton","selectionChange","fireSegmentedButtonPressed","merge","getParameters","selectedKey","getSelectedKey","notEqual","pathInModel","items","getSegmentedButtonItems","segmentedButtonItems","isDesktop","getSegmentedButtonItem","tooltip","icon","SegmentedButtonItem","getVisualizationPath","metaPath","term","resolvedTarget","getEntityTypeAnnotation","getVisualizationsFromAnnotation","chartViz","find","viz","hiddenPathContext","getHiddenPathExpressionForTableActionsAndIBN","getChartConverterContext","originalViewData","diagnostics","viewData","assign","resourceModel","appComponent","deepClone","controlConfiguration","relativePath","getTargetObjectPath","contextLocation","entitySetName","targetEntitySet","entitySet","ConverterContext","createConverterContextForMacro","startingEntitySet","getConverterContext","initialConverterContext","modifyIdentifiers","_applyIdToContent","_contentId","initialise","metaContextPath","getMetaPathObject","_resolvedContextPath","_getOwner","preprocessorContext","models","metaModel","getContextPath","viewConfig","getManifestWrapper","getViewConfiguration","isMultiTabs","paths","hasMultipleVisualizations","getTemplateType","TemplateType","AnalyticalListPage","AggregationHelper","getEntityType","getUiChart","_blockActions","collection","navigationPath","autoBindOnInit","vizProperties","getFilterBar","slice","draftSupported","ModelHelper","isDraftSupported","_chartType","formatChartType","ChartType","commandActions","presentationPath","createPresentationPathContext","_sortConditions","getSortConditions","applySupported","chartActionsContext","Actions","targetCollectionPath","getTargetCollectionPath","targetCollectionPathContext","actionsObject","convertedTypes","resolvePath","target","_customData","entityType","parse","multiSelectDisabledActions","ActionHelper","getMultiSelectDisabledActions","segmentedButtonId","multiViews","selectionPresentationVariantPath","isParameterizedEntitySet","substring","filterBar","Element","getElementById","getDelegate","chartDelegate","payload","chartContextPath","parameters","$$groupId","selectionMode","toUpperCase","getCustomData","CustomData","getNoData","IllustratedMessage","illustrationSize","IllustratedMessageSize","Auto","illustrationType","IllustratedMessageType","BeforeSearch","title","getTranslatedText","description","enableDefaultTitleAndDescription","enableVerticalResponsiveness","getMdcChartTemplate","FlexItemData","growFactor","shrinkFactor","MdcChart","binding","internal","chartType","sortConditions","header","Title","headerVisible","minHeight","Device","system","phone","height","width","headerStyle","p13nMode","noDataText","delegate","customData","dependents","variant","noData","_exports"],"sourceRoot":".","sources":["MdcChartTemplate.tsx"],"sourcesContent":["import type { PrimitiveType, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type { AggregatedProperty } from \"@sap-ux/vocabularies-types/vocabularies/Analytics\";\nimport { AnalyticsAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Analytics\";\nimport { CoreAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Core\";\nimport type {\n\tChartMeasureAttributeType,\n\tChartMeasureRoleType,\n\tChart as ChartType,\n\tCriticalityCalculationType,\n\tCriticalityType,\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataFieldForIntentBasedNavigation,\n\tDataPoint,\n\tImprovementDirectionType,\n\tLevelThresholdsType,\n\tPresentationVariant,\n\tSelectionPresentationVariant\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { OperationGroupingType, UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport deepClone from \"sap/base/util/deepClone\";\nimport merge from \"sap/base/util/merge\";\nimport uid from \"sap/base/util/uid\";\nimport {\n\tnotEqual,\n\tpathInModel,\n\tresolveBindingString,\n\ttype BindingToolkitExpression,\n\ttype CompiledBindingToolkitExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport type { CommandProperties } from \"sap/fe/base/jsx-runtime/jsx\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport { escapeXMLAttributeValue } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport type { NavigationParameters } from \"sap/fe/core/controllerextensions/InternalIntentBasedNavigation\";\nimport CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { BaseManifestSettings, ControlConfiguration } from \"sap/fe/core/converters/ManifestSettings\";\nimport { TemplateType } from \"sap/fe/core/converters/ManifestSettings\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { isDataModelObjectPathForActionWithDialog } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { AnnotationAction, BaseAction, CustomAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport type { ChartVisualization } from \"sap/fe/core/converters/controls/Common/Chart\";\nimport type { VisualizationAndPath } from \"sap/fe/core/converters/controls/Common/DataVisualization\";\nimport {\n\tgetDataVisualizationConfiguration,\n\tgetVisualizationsFromAnnotation\n} from \"sap/fe/core/converters/controls/Common/DataVisualization\";\nimport { AggregationHelper } from \"sap/fe/core/converters/helpers/Aggregation\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { ViewData } from \"sap/fe/core/services/TemplatedViewServiceFactory\";\nimport type Diagnostics from \"sap/fe/core/support/Diagnostics\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getContextRelativeTargetObjectPath, getTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type Action from \"sap/fe/macros/chart/Action\";\nimport type ActionGroup from \"sap/fe/macros/chart/ActionGroup\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport Button from \"sap/m/Button\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport Menu from \"sap/m/Menu\";\nimport MenuButton from \"sap/m/MenuButton\";\nimport MenuItem from \"sap/m/MenuItem\";\nimport OverflowToolbarLayoutData from \"sap/m/OverflowToolbarLayoutData\";\nimport type { SegmentedButton$SelectionChangeEvent } from \"sap/m/SegmentedButton\";\nimport SegmentedButton from \"sap/m/SegmentedButton\";\nimport SegmentedButtonItem from \"sap/m/SegmentedButtonItem\";\nimport Device from \"sap/ui/Device\";\nimport type { CommandExecution$ExecuteEvent } from \"sap/ui/core/CommandExecution\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Element from \"sap/ui/core/Element\";\nimport { Dock } from \"sap/ui/core/Popup\";\nimport type { VariantManagement$SaveEvent, VariantManagement$SelectEvent } from \"sap/ui/fl/variants/VariantManagement\";\nimport VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport MdcChart from \"sap/ui/mdc/Chart\";\nimport type Control from \"sap/ui/mdc/Control\";\nimport ActionToolbarAction from \"sap/ui/mdc/actiontoolbar/ActionToolbarAction\";\nimport MdcChartItem from \"sap/ui/mdc/chart/Item\";\nimport PersistenceProvider from \"sap/ui/mdc/p13n/PersistenceProvider\";\nimport type Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { ExpandPathType, MetaModelEnum, MetaModelType } from \"../../../../../../../types/metamodel_types\";\nimport type ChartBlock from \"../Chart\";\nimport type MacroAPI from \"../MacroAPI\";\nimport ActionHelper from \"../internal/helpers/ActionHelper\";\nimport DefaultActionHandler from \"../internal/helpers/DefaultActionHandler\";\nimport ChartHelper from \"./ChartHelper\";\n\nconst measureRole: { [key: string]: string } = {\n\t\"com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1\": \"axis1\",\n\t\"com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis2\": \"axis2\",\n\t\"com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis3\": \"axis3\",\n\t\"com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis4\": \"axis4\"\n};\ntype ExtendedActionGroup = ActionGroup & { menuContentActions?: Record<string, Action> };\nexport type ActionOrActionGroup = Record<string, Action | ExtendedActionGroup>;\nexport type CustomAndAction = CustomAction & (Action | ActionGroup);\ntype CustomToolbarMenuAction = {\n\tid: string;\n\ttext: string | undefined;\n\tvisible: string | undefined;\n\tenabled?: string | boolean;\n\tuseDefaultActionOnly?: boolean;\n\tbuttonMode?: string;\n\tdefaultAction?: string;\n\tactions?: CustomAction;\n};\n\nenum personalizationValues {\n\tSort = \"Sort\",\n\tType = \"Type\",\n\tItem = \"Item\",\n\tFilter = \"Filter\"\n}\n\nexport type MeasureType = {\n\tid?: string;\n\tkey?: string;\n\trole?: string;\n\tpropertyPath?: string;\n\taggregationMethod?: string;\n\tlabel?: string | BindingToolkitExpression<PrimitiveType>;\n\tvalue?: string;\n\tdataPoint?: string;\n\tname?: string;\n};\n\ntype DimensionType = {\n\tid?: string;\n\tkey?: string;\n\trole?: string;\n\tpropertyPath?: string;\n\tlabel?: string | BindingToolkitExpression<PrimitiveType>;\n\tvalue?: string;\n};\n\nexport type CommandAction = {\n\tactionContext: Context;\n\tonExecuteAction: string;\n\tonExecuteIBN?: string;\n\tonExecuteManifest: CompiledBindingToolkitExpression;\n\tchartOperationAvailableMap?: string;\n};\n\ntype ToolBarAction = {\n\tunittestid: string;\n\tid?: string;\n\tlabel: string;\n\tariaHasPopup?: string;\n\tpress?: string;\n\tenabled?: string | boolean;\n\tvisible: string | boolean;\n};\n\nexport type ChartCustomData = {\n\ttargetCollectionPath: string;\n\tentitySet: string;\n\tentityType: string;\n\toperationAvailableMap: string;\n\tmultiSelectDisabledActions: string;\n\tsegmentedButtonId: string;\n\tcustomAgg: object;\n\ttransAgg: object;\n\tapplySupported: object;\n\tvizProperties: object;\n\tdraftSupported?: boolean;\n\tmultiViews?: boolean;\n\tselectionPresentationVariantPath?: object;\n};\n\nexport type ChartContextObjectPath = ChartType | SelectionPresentationVariant | PresentationVariant;\n\ntype ActionProperties = {\n\tkey: string;\n\ttext: string;\n\t__noWrap: boolean;\n\tpress: string | null;\n\trequiresSelection: boolean;\n\tenabled: boolean;\n\tposition?: object;\n\tmenu?: string[];\n};\n\ntype ToolbarAction = MenuItem | ActionToolbarAction | undefined;\n\nfunction createChartDefinition(\n\tchartBlock: ChartBlock,\n\tconverterContext: ConverterContext,\n\tcontextObjectPath: DataModelObjectPath<ChartType | SelectionPresentationVariant | PresentationVariant>,\n\tcontrolPath: string\n): ChartVisualization {\n\tlet visualizationPath = getContextRelativeTargetObjectPath(contextObjectPath);\n\tlet visualizations: Record<string, string>[] = [];\n\tif (chartBlock._metaPathContext?.getObject()?.$Type === UIAnnotationTypes.PresentationVariantType) {\n\t\tvisualizations = chartBlock._metaPathContext.getObject().Visualizations;\n\t} else if (chartBlock._metaPathContext?.getObject()?.$Type === UIAnnotationTypes.SelectionPresentationVariantType) {\n\t\tvisualizations = chartBlock._metaPathContext.getObject().PresentationVariant?.Visualizations;\n\t}\n\tif (visualizations?.length && !checkChartExists(visualizations, controlPath)) {\n\t\tvisualizationPath = \"\";\n\t}\n\n\t// fallback to default Chart if visualizationPath is missing or visualizationPath is not found in control (in case of PresentationVariant)\n\tif (!visualizationPath) {\n\t\tvisualizationPath = `@${UIAnnotationTerms.Chart}`;\n\t}\n\n\tconst visualizationDefinition = getDataVisualizationConfiguration(visualizationPath, converterContext, {\n\t\tisCondensedTableLayoutCompliant: chartBlock.useCondensedLayout,\n\t\tisMacroOrMultipleView: true,\n\t\tshouldCreateTemplateChartVisualization: false\n\t});\n\treturn visualizationDefinition.visualizations[0] as ChartVisualization;\n}\n\nfunction checkChartExists(visualizations: Record<string, string>[], visualizationPath: string | undefined): boolean {\n\treturn visualizations.some((visualization) => visualizationPath?.includes(visualization.$AnnotationPath));\n}\n\nfunction getContentId(macroId: string): string {\n\treturn `${macroId}-content`;\n}\n\n/**\n * Function used to get details WRT action(s) shown in the chart's toolbar.\n * @param chartBlock Chart block properties\n * @param visualizationPath Visualization path\n * @returns Object with all the required action(s) details\n */\nfunction getExtraParams(chartBlock: ChartBlock, visualizationPath: string | undefined): Record<string, object> {\n\tconst extraParams: Record<string, object> = {};\n\tconst customActions: Record<string, object> = {};\n\n\tif (chartBlock.actions) {\n\t\tObject.values(chartBlock.actions)?.forEach((action: Action | ActionGroup) => {\n\t\t\tif (action.isA<ActionGroup>(\"sap.fe.macros.chart.ActionGroup\")) {\n\t\t\t\tcustomActions[action.key] = getActionProperties(\n\t\t\t\t\taction.key,\n\t\t\t\t\taction.text,\n\t\t\t\t\tnull,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{\n\t\t\t\t\t\tplacement: action.placement,\n\t\t\t\t\t\tanchor: action.anchor\n\t\t\t\t\t},\n\t\t\t\t\taction.actions.map((_, index) => action.key + \"_Menu_\" + index)\n\t\t\t\t);\n\n\t\t\t\taction.actions?.forEach((act: Action, index: number) => {\n\t\t\t\t\tconst actionKey = action.key.concat(\"_Menu_\", index as unknown as string);\n\t\t\t\t\tcustomActions[actionKey] = getActionProperties(\n\t\t\t\t\t\tactionKey,\n\t\t\t\t\t\tact.text,\n\t\t\t\t\t\tact.press,\n\t\t\t\t\t\t!!act.requiresSelection,\n\t\t\t\t\t\tact.enabled === null || act.enabled === undefined ? true : act.enabled\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else if (action.isA<Action>(\"sap.fe.macros.chart.Action\")) {\n\t\t\t\tcustomActions[action.key] = getActionProperties(\n\t\t\t\t\taction.key,\n\t\t\t\t\taction.text,\n\t\t\t\t\taction.press,\n\t\t\t\t\t!!action.requiresSelection,\n\t\t\t\t\taction.enabled === null || action.enabled == undefined ? true : action.enabled,\n\t\t\t\t\t{\n\t\t\t\t\t\tplacement: action.placement,\n\t\t\t\t\t\tanchor: action.anchor\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\tif (visualizationPath && chartBlock.actions) {\n\t\textraParams[visualizationPath] = {\n\t\t\tactions: customActions\n\t\t};\n\t}\n\n\treturn extraParams;\n}\n\nfunction getActionProperties(\n\tkey: string,\n\ttext: string,\n\tpress: string | null,\n\trequiresSelection: boolean,\n\tenabled: boolean,\n\tposition?: object,\n\tmenu?: string[]\n): ActionProperties {\n\tconst actionProperties: ActionProperties = {\n\t\tkey,\n\t\ttext,\n\t\t__noWrap: true,\n\t\tpress,\n\t\trequiresSelection,\n\t\tenabled\n\t};\n\n\tif (position) {\n\t\tactionProperties.position = position;\n\t}\n\tif (menu) {\n\t\tactionProperties.menu = menu;\n\t}\n\n\treturn actionProperties;\n}\n\nfunction createBindingContext(data: object | BaseAction[] | CustomAction): Context {\n\tconst contextPath = `/${uid()}`;\n\tconst actionsModel = new JSONModel();\n\tactionsModel.setProperty(contextPath, data);\n\treturn actionsModel.createBindingContext(contextPath)!;\n}\n\nfunction getChartMeasures(chartBlock: ChartBlock, aggregationHelper: AggregationHelper): Context {\n\tconst chartAnnotationPath = chartBlock.chartDefinition.annotationPath.split(\"/\");\n\t// this is required because getAbsolutePath in converterContext returns \"/SalesOrderManage/_Item/_Item/@com.sap.vocabularies.v1.Chart\" as annotationPath\n\tconst annotationPath = chartAnnotationPath\n\t\t.filter(function (item: string, pos: number): boolean {\n\t\t\treturn chartAnnotationPath.indexOf(item) == pos;\n\t\t})\n\t\t.toString()\n\t\t.replaceAll(\",\", \"/\");\n\tconst oChart = getInvolvedDataModelObjects<ChartType>(\n\t\tchartBlock._metaModel.createBindingContext(annotationPath)!,\n\t\tchartBlock._context\n\t).targetObject;\n\tconst aggregatedProperty = aggregationHelper.getAggregatedProperty();\n\tlet measures: MeasureType[] = [];\n\tconst annoPath = chartBlock._metaPathContext.getPath();\n\tconst aggregatedProperties = aggregationHelper.getAggregatedProperties();\n\tconst chartMeasures = oChart?.Measures ? oChart.Measures : [];\n\tconst chartDynamicMeasures = oChart?.DynamicMeasures ? oChart.DynamicMeasures : [];\n\t//check if there are measures pointing to aggregated properties\n\tconst transAggInMeasures = aggregatedProperties[0]\n\t\t? aggregatedProperties[0].filter(function (properties) {\n\t\t\t\treturn chartMeasures.some(function (propertyMeasureType: MeasureType) {\n\t\t\t\t\treturn properties.Name === propertyMeasureType.value;\n\t\t\t\t});\n\t\t  })\n\t\t: undefined;\n\tconst entitySetPath = annoPath.replace(/@com.sap.vocabularies.UI.v1.(Chart|PresentationVariant|SelectionPresentationVariant).*/, \"\");\n\tconst transAggregations = chartBlock.chartDefinition.transAgg as Record<string, MeasureType>;\n\tconst customAggregations = chartBlock.chartDefinition.customAgg as Record<string, Record<string, unknown>>;\n\t// intimate the user if there is AggregateProperty configured with no DYnamicMeasures, bu there are measures with AggregatedProperties\n\tif (aggregatedProperty.length > 0 && !chartDynamicMeasures && transAggInMeasures && transAggInMeasures.length > 0) {\n\t\tLog.warning(\n\t\t\t\"The transformational aggregate measures are configured as Chart.Measures but should be configured as Chart.DynamicMeasures instead. Please check the SAP Help documentation and correct the configuration accordingly.\"\n\t\t);\n\t}\n\tconst isCustomAggregateIsMeasure = chartMeasures.some((oChartMeasure: MeasureType) => {\n\t\tconst oCustomAggMeasure = getCustomAggMeasure(customAggregations, oChartMeasure);\n\t\treturn !!oCustomAggMeasure;\n\t});\n\tif (aggregatedProperty.length > 0 && !chartDynamicMeasures?.length && !isCustomAggregateIsMeasure) {\n\t\tthrow new Error(\"Please configure DynamicMeasures for the chart\");\n\t}\n\tif (aggregatedProperty.length > 0 && oChart) {\n\t\tfor (const dynamicMeasure of chartDynamicMeasures) {\n\t\t\tmeasures = getDynamicMeasures(measures, dynamicMeasure, entitySetPath, oChart, chartBlock);\n\t\t}\n\t}\n\tfor (const chartMeasure of chartMeasures) {\n\t\tconst key = chartMeasure.value;\n\t\tconst customAggMeasure = getCustomAggMeasure(customAggregations, chartMeasure);\n\t\tconst measureType: MeasureType = {};\n\t\tif (customAggMeasure) {\n\t\t\tmeasures = setCustomAggMeasure(measures, measureType, customAggMeasure, key);\n\t\t\t//if there is neither aggregatedProperty nor measures pointing to customAggregates, but we have normal measures. Now check if these measures are part of AggregatedProperties Obj\n\t\t} else if (aggregatedProperty.length === 0 && transAggregations[key]) {\n\t\t\tmeasures = setTransAggMeasure(measures, measureType, transAggregations, key);\n\t\t}\n\t\tsetChartMeasureAttributes(chartBlock._chart.MeasureAttributes, entitySetPath, measureType, chartBlock);\n\t}\n\tconst measuresModel: JSONModel = new JSONModel(measures);\n\t(measuresModel as { $$valueAsPromise?: boolean }).$$valueAsPromise = true;\n\treturn measuresModel.createBindingContext(\"/\");\n}\n\nfunction setCustomAggMeasure(measures: MeasureType[], measure: MeasureType, customAggMeasure: MeasureType, key: string): MeasureType[] {\n\tif (key.includes(\"/\")) {\n\t\tLog.error(`$expand is not yet supported. Measure: ${key} from an association cannot be used`);\n\t}\n\tmeasure.key = customAggMeasure.value;\n\tmeasure.role = \"axis1\";\n\tmeasure.label = customAggMeasure.label;\n\tmeasure.propertyPath = customAggMeasure.value;\n\tmeasures.push(measure);\n\treturn measures;\n}\n\nfunction setTransAggMeasure(\n\tmeasures: MeasureType[],\n\tmeasure: MeasureType,\n\ttransAggregations: Record<string, MeasureType>,\n\tkey: string\n): MeasureType[] {\n\tconst transAggMeasure = transAggregations[key];\n\tmeasure.key = transAggMeasure.name;\n\tmeasure.role = \"axis1\";\n\tmeasure.propertyPath = key;\n\tmeasure.aggregationMethod = transAggMeasure.aggregationMethod;\n\tmeasure.label = transAggMeasure.label || measure.label;\n\tmeasures.push(measure);\n\treturn measures;\n}\n\nfunction getDynamicMeasures(\n\tmeasures: MeasureType[],\n\tchartDynamicMeasure: MeasureType,\n\tentitySetPath: string,\n\tchart: ChartType,\n\tchartBlock: ChartBlock\n): MeasureType[] {\n\tconst key = chartDynamicMeasure.value || \"\";\n\tconst aggregatedProperty = getInvolvedDataModelObjects<AggregatedProperty>(\n\t\tchartBlock._metaModel.createBindingContext(entitySetPath + key) as Context,\n\t\tchartBlock._context\n\t).targetObject;\n\tif (key.includes(\"/\")) {\n\t\tLog.error(`$expand is not yet supported. Measure: ${key} from an association cannot be used`);\n\t\t// check if the annotation path is wrong\n\t} else if (!aggregatedProperty) {\n\t\tthrow new Error(`Please provide the right AnnotationPath to the Dynamic Measure ${chartDynamicMeasure.value}`);\n\t\t// check if the path starts with @\n\t} else if (chartDynamicMeasure.value?.startsWith(`@${AnalyticsAnnotationTerms.AggregatedProperty}`) === null) {\n\t\tthrow new Error(`Please provide the right AnnotationPath to the Dynamic Measure ${chartDynamicMeasure.value}`);\n\t} else {\n\t\t// check if AggregatedProperty is defined in given DynamicMeasure\n\t\tconst dynamicMeasure: MeasureType = {\n\t\t\tkey: aggregatedProperty.Name.toString(),\n\t\t\trole: \"axis1\"\n\t\t};\n\t\tdynamicMeasure.propertyPath = aggregatedProperty.AggregatableProperty.value;\n\t\tdynamicMeasure.aggregationMethod = aggregatedProperty.AggregationMethod.toString();\n\t\tdynamicMeasure.label = resolveBindingString(\n\t\t\taggregatedProperty.annotations?.Common?.Label?.toString() ??\n\t\t\t\taggregatedProperty.AggregatableProperty.$target?.annotations?.Common?.Label?.toString() ??\n\t\t\t\t\"\"\n\t\t);\n\t\tsetChartMeasureAttributes(chart.MeasureAttributes, entitySetPath, dynamicMeasure, chartBlock);\n\t\tmeasures.push(dynamicMeasure);\n\t}\n\treturn measures;\n}\n\nfunction getCustomAggMeasure(customAggregations: Record<string, MeasureType | undefined>, measure: MeasureType): MeasureType | null {\n\tif (measure.value && customAggregations[measure.value]) {\n\t\tmeasure.label = customAggregations[measure.value]?.label;\n\t\treturn measure;\n\t}\n\treturn null;\n}\n\nfunction setChartMeasureAttributes(\n\tmeasureAttributes: ChartMeasureAttributeType[],\n\tentitySetPath: string,\n\tmeasure: MeasureType,\n\tchartBlock: ChartBlock\n): void {\n\tif (measureAttributes?.length) {\n\t\tfor (const measureAttribute of measureAttributes) {\n\t\t\t_setChartMeasureAttribute(measureAttribute, entitySetPath, measure, chartBlock);\n\t\t}\n\t}\n}\n\nfunction _setChartMeasureAttribute(\n\tmeasureAttribute: ChartMeasureAttributeType,\n\tentitySetPath: string,\n\tmeasure: MeasureType,\n\tchartBlock: ChartBlock\n): void {\n\tconst path = measureAttribute.DynamicMeasure ? measureAttribute?.DynamicMeasure?.value : measureAttribute?.Measure?.value;\n\tconst measureAttributeDataPoint = measureAttribute.DataPoint ? measureAttribute?.DataPoint?.value : null;\n\tconst role = measureAttribute.Role;\n\tconst dataPoint: DataPoint | undefined = measureAttributeDataPoint\n\t\t? getInvolvedDataModelObjects<DataPoint>(\n\t\t\t\tchartBlock._metaModel.createBindingContext(entitySetPath + measureAttributeDataPoint) as Context,\n\t\t\t\tchartBlock._context\n\t\t  ).targetObject\n\t\t: undefined;\n\tif (measure.key === path) {\n\t\tsetMeasureRole(measure, role as unknown as MetaModelEnum<ChartMeasureRoleType>);\n\t\t//still to add data point, but UI5 Chart API is missing\n\t\tsetMeasureDataPoint(measure, dataPoint);\n\t}\n}\n\n/**\n * Format the data point as a JSON object.\n * @param oDataPointAnno\n * @returns The formatted json object\n */\nfunction createDataPointProperty(oDataPointAnno: DataPoint): {\n\ttargetValue?: string;\n\tforeCastValue?: string;\n\tcriticality?: Record<string, unknown>;\n} {\n\tconst oDataPoint: { targetValue?: string; foreCastValue?: string; criticality?: Record<string, unknown> } = {};\n\n\tif (oDataPointAnno.TargetValue) {\n\t\toDataPoint.targetValue = oDataPointAnno.TargetValue.$Path;\n\t}\n\n\tif (oDataPointAnno.ForecastValue) {\n\t\toDataPoint.foreCastValue = oDataPointAnno.ForecastValue.$Path;\n\t}\n\n\tlet oCriticality = null;\n\tif (oDataPointAnno.Criticality) {\n\t\tif (isPathAnnotationExpression(oDataPointAnno.Criticality) && oDataPointAnno.Criticality.path) {\n\t\t\t//will be an aggregated property or custom aggregate\n\t\t\toCriticality = {\n\t\t\t\tCalculated: oDataPointAnno.Criticality.path\n\t\t\t};\n\t\t} else {\n\t\t\toCriticality = {\n\t\t\t\tStatic: (oDataPointAnno.Criticality as unknown as MetaModelEnum<CriticalityType>).$EnumMember.replace(\n\t\t\t\t\t\"com.sap.vocabularies.UI.v1.CriticalityType/\",\n\t\t\t\t\t\"\"\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\t} else if (oDataPointAnno.CriticalityCalculation) {\n\t\tconst oThresholds: Record<string, unknown> & { AggregationLevels?: unknown[] } = {};\n\t\tconst bConstant = buildThresholds(oThresholds, oDataPointAnno.CriticalityCalculation);\n\n\t\tif (bConstant) {\n\t\t\toCriticality = {\n\t\t\t\tConstantThresholds: oThresholds\n\t\t\t};\n\t\t} else {\n\t\t\toCriticality = {\n\t\t\t\tDynamicThresholds: oThresholds\n\t\t\t};\n\t\t}\n\t}\n\n\tif (oCriticality) {\n\t\toDataPoint.criticality = oCriticality;\n\t}\n\n\treturn oDataPoint;\n}\n\n/**\n * Checks whether the thresholds are dynamic or constant.\n * @param thresholds The threshold skeleton\n * @param criticalityCalculation The UI.DataPoint.CriticalityCalculation annotation\n * @returns `true` if the threshold should be supplied as ConstantThresholds, <code>false</code> if the threshold should\n * be supplied as DynamicThresholds\n * @private\n */\nfunction buildThresholds(\n\tthresholds: Record<string, unknown> & { AggregationLevels?: unknown[] },\n\tcriticalityCalculation: CriticalityCalculationType\n): boolean {\n\tconst keys = [\n\t\t\"AcceptanceRangeLowValue\",\n\t\t\"AcceptanceRangeHighValue\",\n\t\t\"ToleranceRangeLowValue\",\n\t\t\"ToleranceRangeHighValue\",\n\t\t\"DeviationRangeLowValue\",\n\t\t\"DeviationRangeHighValue\"\n\t];\n\tthresholds.ImprovementDirection = (\n\t\tcriticalityCalculation.ImprovementDirection as unknown as MetaModelEnum<ImprovementDirectionType>\n\t)?.$EnumMember.replace(\"com.sap.vocabularies.UI.v1.ImprovementDirectionType/\", \"\");\n\n\tconst dynamicThresholds: Record<string, unknown> & { usedMeasures: unknown[] } = {\n\t\toneSupplied: false,\n\t\tusedMeasures: []\n\t\t// combination to check whether at least one is supplied\n\t};\n\tconst constantThresholds: Record<string, unknown> = {\n\t\toneSupplied: false\n\t\t// combination to check whether at least one is supplied\n\t};\n\n\tinitialiseThresholds(keys, dynamicThresholds, constantThresholds, criticalityCalculation);\n\tprocessThresholds(keys, thresholds, dynamicThresholds, constantThresholds, criticalityCalculation);\n\n\treturn !dynamicThresholds.oneSupplied;\n}\n\nfunction initialiseThresholds(\n\tkeys: string[],\n\tdynamicThresholds: Record<string, unknown> & { usedMeasures: unknown[] },\n\tconstantThresholds: Record<string, unknown>,\n\tcriticalityCalculation: CriticalityCalculationType\n): void {\n\tfor (const key of keys) {\n\t\tdynamicThresholds[key] = criticalityCalculation[key as keyof CriticalityCalculationType]\n\t\t\t? criticalityCalculation[key as keyof CriticalityCalculationType].$Path\n\t\t\t: undefined;\n\t\tdynamicThresholds.oneSupplied = dynamicThresholds.oneSupplied || dynamicThresholds[key];\n\n\t\tif (!dynamicThresholds.oneSupplied) {\n\t\t\t// only consider in case no dynamic threshold is supplied\n\t\t\tconstantThresholds[key] = criticalityCalculation[key as keyof CriticalityCalculationType];\n\t\t\tconstantThresholds.oneSupplied = constantThresholds.oneSupplied || constantThresholds[key];\n\t\t} else if (dynamicThresholds[key]) {\n\t\t\tdynamicThresholds.usedMeasures.push(dynamicThresholds[key as keyof CriticalityCalculationType]);\n\t\t}\n\t}\n}\n\nfunction processThresholds(\n\tkeys: string[],\n\tthresholds: Record<string, unknown> & { AggregationLevels?: unknown[] },\n\tdynamicThresholds: Record<string, unknown> & { usedMeasures: unknown[] },\n\tconstantThresholds: Record<string, unknown>,\n\tcriticalityCalculation: CriticalityCalculationType\n): void {\n\t// dynamic definition shall overrule constant definition\n\tif (dynamicThresholds.oneSupplied) {\n\t\tfor (const key of keys) {\n\t\t\tif (dynamicThresholds[key]) {\n\t\t\t\tthresholds[key] = dynamicThresholds[key];\n\t\t\t}\n\t\t}\n\t\tthresholds.usedMeasures = dynamicThresholds.usedMeasures;\n\t} else {\n\t\tthresholds.AggregationLevels = [];\n\t\tprocessAggregationLevelForThresholds(keys, thresholds, constantThresholds, criticalityCalculation);\n\t}\n}\n\nfunction processAggregationLevelForThresholds(\n\tkeys: string[],\n\tthresholds: Record<string, unknown> & { AggregationLevels?: unknown[] },\n\tconstantThresholds: Record<string, unknown>,\n\tcriticalityCalculation: CriticalityCalculationType\n): void {\n\tlet oAggregationLevel: Record<string, unknown> = {};\n\t// check if at least one static value is supplied\n\tif (constantThresholds.oneSupplied) {\n\t\t// add one entry in the aggregation level\n\t\toAggregationLevel = {\n\t\t\tVisibleDimensions: null\n\t\t};\n\n\t\tfor (const sKey of keys) {\n\t\t\tif (constantThresholds[sKey]) {\n\t\t\t\toAggregationLevel[sKey] = constantThresholds[sKey];\n\t\t\t}\n\t\t}\n\n\t\tthresholds.AggregationLevels?.push(oAggregationLevel);\n\t}\n\n\tprocessAggregationLevelsForConstantThresholds(keys, thresholds, criticalityCalculation, oAggregationLevel);\n}\n\nfunction processAggregationLevelsForConstantThresholds(\n\tkeys: string[],\n\tthresholds: Record<string, unknown> & { AggregationLevels?: unknown[] },\n\tcriticalityCalculation: CriticalityCalculationType,\n\taggregationLevel: Record<string, unknown>\n): void {\n\tif (criticalityCalculation.ConstantThresholds && criticalityCalculation.ConstantThresholds.length > 0) {\n\t\tfor (const aggregationLevelInfo of criticalityCalculation.ConstantThresholds) {\n\t\t\tconst visibleDimensions: string[] | null = aggregationLevelInfo.AggregationLevel ? [] : null;\n\n\t\t\tif (visibleDimensions && aggregationLevelInfo.AggregationLevel && aggregationLevelInfo.AggregationLevel.length > 0) {\n\t\t\t\tfor (const propertyPath of aggregationLevelInfo.AggregationLevel) {\n\t\t\t\t\tvisibleDimensions.push((propertyPath as unknown as ExpandPathType<PropertyPath>).$PropertyPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taggregationLevel = {\n\t\t\t\tVisibleDimensions: visibleDimensions\n\t\t\t};\n\n\t\t\tfor (const key of keys) {\n\t\t\t\tconst value = aggregationLevelInfo[key as unknown as keyof LevelThresholdsType];\n\t\t\t\tif (value) {\n\t\t\t\t\taggregationLevel[key] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthresholds.AggregationLevels?.push(aggregationLevel);\n\t\t}\n\t}\n}\n\nfunction setMeasureDataPoint(measure: MeasureType, dataPoint: DataPoint | undefined): void {\n\tif (dataPoint && dataPoint.Value.$Path == measure.key) {\n\t\tmeasure.dataPoint = ChartHelper.formatJSONToString(createDataPointProperty(dataPoint)) || \"\";\n\t}\n}\n\nfunction setMeasureRole(measure: MeasureType, role: MetaModelEnum<ChartMeasureRoleType> | undefined): void {\n\tif (role != null) {\n\t\tconst index = role.$EnumMember;\n\t\tmeasure.role = measureRole[index];\n\t}\n}\n\nfunction getDependents(chartBlock: ChartBlock, chartContext: Context): string | string[] {\n\tif (chartBlock._commandActions.length > 0) {\n\t\treturn chartBlock._commandActions.map((commandAction: CommandAction) => {\n\t\t\treturn getActionCommand(commandAction, chartContext, chartBlock);\n\t\t});\n\t}\n\treturn \"\";\n}\n\n/**\n *\n * @param personalization Specifies the chart personalization\n */\n\nfunction checkPersonalizationInChartProperties(personalization: string | true | undefined, chartBlock: ChartBlock): void {\n\tif (personalization) {\n\t\tif (personalization === \"false\") {\n\t\t\tchartBlock._personalization = undefined;\n\t\t} else if (personalization === \"true\") {\n\t\t\tchartBlock._personalization = Object.values(personalizationValues).join(\",\");\n\t\t} else if (verifyValidPersonalization(personalization as string) === true) {\n\t\t\tchartBlock._personalization = personalization;\n\t\t} else {\n\t\t\tchartBlock._personalization = undefined;\n\t\t}\n\t}\n}\n\n/**\n *\n * @param personalization\n * @returns `true` or `false` if the personalization is valid or not valid\n */\nfunction verifyValidPersonalization(personalization: string): boolean {\n\tlet valid = true;\n\tconst splitArray = personalization.split(\",\");\n\tconst acceptedValues: string[] = Object.values(personalizationValues);\n\tsplitArray.forEach((arrayElement) => {\n\t\tif (!acceptedValues.includes(arrayElement)) {\n\t\t\tvalid = false;\n\t\t}\n\t});\n\treturn valid;\n}\n\nfunction getVariantManagement(chartBlock: ChartBlock): string {\n\tconst variantManagement = chartBlock.variantManagement ? chartBlock.variantManagement : chartBlock.chartDefinition.variantManagement;\n\treturn chartBlock.personalization === undefined ? \"None\" : variantManagement;\n}\n\nfunction createVariantManagement(chartBlock: ChartBlock): string {\n\tconst personalization = chartBlock.personalization;\n\tif (personalization) {\n\t\tconst variantManagement = getVariantManagement(chartBlock);\n\t\tif (variantManagement === \"Control\") {\n\t\t\treturn (\n\t\t\t\t<VariantManagement\n\t\t\t\t\tid={generate([chartBlock._blockId, \"VM\"])}\n\t\t\t\t\tfor={[chartBlock._blockId!]}\n\t\t\t\t\tshowSetAsDefault={true}\n\t\t\t\t\theaderLevel={chartBlock.headerLevel}\n\t\t\t\t\tselect={(event: VariantManagement$SelectEvent): void => {\n\t\t\t\t\t\tchartBlock.fireVariantSelected?.(event);\n\t\t\t\t\t}}\n\t\t\t\t\tsave={(event: VariantManagement$SaveEvent): void => {\n\t\t\t\t\t\tchartBlock.fireVariantSaved?.(event);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (variantManagement === \"None\" || variantManagement === \"Page\") {\n\t\t\treturn \"\";\n\t\t}\n\t} else if (!personalization) {\n\t\tLog.warning(\"Variant Management cannot be enabled when personalization is disabled\");\n\t}\n\treturn \"\";\n}\n\nfunction getPersistenceProvider(chartBlock: ChartBlock): PersistenceProvider | undefined {\n\tif (getVariantManagement(chartBlock) === \"None\") {\n\t\treturn <PersistenceProvider id={generate([chartBlock._blockId, \"PersistenceProvider\"])} for={chartBlock._blockId} />;\n\t}\n}\n\nfunction pushActionCommand(\n\tactionContext: Context,\n\tdataField: (MetaModelType<DataFieldForAction> & { InvocationGrouping: MetaModelEnum<OperationGroupingType> }) | undefined,\n\tchartOperationAvailableMap: string | undefined,\n\taction: BaseAction | CustomAction,\n\tchartBlock: ChartBlock\n): void {\n\tif (dataField) {\n\t\tconst commandAction = {\n\t\t\tactionContext: actionContext,\n\t\t\tonExecuteAction: ChartHelper.getPressEventForDataFieldForActionButton(\n\t\t\t\tchartBlock._blockId!,\n\t\t\t\tdataField,\n\t\t\t\tchartOperationAvailableMap || \"\"\n\t\t\t),\n\t\t\tonExecuteIBN: CommonHelper.getPressHandlerForDataFieldForIBN(\n\t\t\t\tdataField as unknown as DataFieldForIntentBasedNavigation,\n\t\t\t\t`\\${internal>selectedContexts}`,\n\t\t\t\tfalse\n\t\t\t),\n\t\t\tonExecuteManifest: CommonHelper.buildActionWrapper(action as CustomAction, chartBlock),\n\t\t\tchartOperationAvailableMap\n\t\t};\n\t\tchartBlock._commandActions.push(commandAction);\n\t}\n}\n\nfunction getActionCommand(commandAction: CommandAction, chartContext: Context, chartBlock: ChartBlock): string {\n\tconst action = commandAction.actionContext.getObject();\n\tconst dataFieldContext = action.annotationPath && chartBlock._metaModel.createBindingContext(action.annotationPath);\n\tconst dataField = dataFieldContext && dataFieldContext.getObject();\n\tconst dataFieldAction = chartBlock._metaModel.createBindingContext(action.annotationPath + \"/Action\")!;\n\tconst actionContext = CommonHelper.getActionContext(dataFieldAction);\n\tconst isBoundPath = CommonHelper.getPathToBoundActionOverload(dataFieldAction);\n\tconst isBound = chartBlock._metaModel.createBindingContext(isBoundPath)!.getObject();\n\tconst chartOperationAvailableMap = escapeXMLAttributeValue(\n\t\tChartHelper.getOperationAvailableMap(chartContext.getObject(), {\n\t\t\tcontext: chartContext\n\t\t})\n\t);\n\tconst isActionEnabled = action.enabled\n\t\t? action.enabled\n\t\t: ChartHelper.isDataFieldForActionButtonEnabled(\n\t\t\t\tisBound && isBound.$IsBound,\n\t\t\t\tdataField.Action,\n\t\t\t\tchartBlock._context,\n\t\t\t\tchartOperationAvailableMap || \"\",\n\t\t\t\taction.enableOnSelect || \"\"\n\t\t  );\n\tlet isIBNEnabled;\n\tif (action.enabled) {\n\t\tisIBNEnabled = action.enabled;\n\t} else if (dataField.RequiresContext) {\n\t\tisIBNEnabled = \"{= %{internal>numberOfSelectedContexts} >= 1}\";\n\t}\n\n\tlet commandEnabled: boolean;\n\tswitch (action.type) {\n\t\tcase \"ForAction\":\n\t\t\tcommandEnabled = isActionEnabled ?? action.enabled;\n\t\t\tbreak;\n\t\tcase \"ForNavigation\":\n\t\t\tcommandEnabled = isIBNEnabled ?? action.enabled;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcommandEnabled = action.enabled;\n\t\t\tbreak;\n\t}\n\n\tconst actionCommand = (\n\t\t<CommandExecution\n\t\t\texecute={(event: CommandExecution$ExecuteEvent): void =>\n\t\t\t\tcommandExecute(event, action, chartBlock._blockId!, commandAction.chartOperationAvailableMap!, dataField)\n\t\t\t}\n\t\t\tenabled={commandEnabled}\n\t\t\tvisible={(getVisible(dataFieldContext, chartBlock) as boolean) ?? action.visible}\n\t\t\tcommand={action.command}\n\t\t/>\n\t);\n\n\tif (\n\t\taction.type == \"ForAction\" &&\n\t\t(!isBound ||\n\t\t\tisBound.IsBound !== true ||\n\t\t\t(actionContext as unknown as Record<string, unknown>)[`@${CoreAnnotationTerms.OperationAvailable}`] !== false)\n\t) {\n\t\treturn actionCommand;\n\t} else if (action.type == \"ForAction\") {\n\t\treturn \"\";\n\t} else {\n\t\treturn actionCommand;\n\t}\n}\n\nfunction commandExecute(\n\tevent: CommandExecution$ExecuteEvent,\n\taction: { InvocationGrouping: { $EnumMember: string }; action: string; type: string; handlerModule: string; handlerMethod: string },\n\tid: string,\n\tchartOperationAvailableMap: string,\n\tdataField: DataFieldForAction | DataFieldForIntentBasedNavigation\n): void {\n\tconst view = CommonUtils.getTargetView(event.getSource());\n\tconst controller = view?.getController();\n\n\tswitch (action.type) {\n\t\tcase \"ForAction\":\n\t\t\tconst sInvocationGrouping =\n\t\t\t\taction.InvocationGrouping &&\n\t\t\t\taction.InvocationGrouping.$EnumMember === \"com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet\"\n\t\t\t\t\t? \"ChangeSet\"\n\t\t\t\t\t: \"Isolated\";\n\t\t\tconst params = {\n\t\t\t\tcontexts: view.getBindingContext(\"internal\")?.getProperty(\"selectedContexts\"),\n\t\t\t\tinvocationGrouping: sInvocationGrouping,\n\t\t\t\tcontrolId: id,\n\t\t\t\toperationAvailableMap: chartOperationAvailableMap,\n\t\t\t\tmodel: view.getModel(),\n\t\t\t\tlabel: dataField.Label as string\n\t\t\t};\n\t\t\tcontroller.editFlow.invokeAction(dataField.Action as string, params);\n\t\t\tbreak;\n\t\tcase \"ForNavigation\":\n\t\t\tconst navigationParameters: NavigationParameters = {\n\t\t\t\tnavigationContexts: view.getBindingContext(\"internal\")?.getProperty(\"selectedContexts\")\n\t\t\t};\n\t\t\tif ((dataField as DataFieldForIntentBasedNavigation).Mapping) {\n\t\t\t\tnavigationParameters.semanticObjectMapping = JSON.stringify((dataField as DataFieldForIntentBasedNavigation).Mapping);\n\t\t\t}\n\t\t\tcontroller._intentBasedNavigation.navigate(\n\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).SemanticObject as unknown as string,\n\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).Action as unknown as string,\n\t\t\t\tnavigationParameters\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tFPMHelper.actionWrapper(event, action.handlerModule, action.handlerMethod, {\n\t\t\t\tcontexts: view.getBindingContext(\"internal\")?.getProperty(\"selectedContexts\")\n\t\t\t});\n\t\t\tbreak;\n\t}\n}\n\nfunction getItems(chartBlock: ChartBlock): string | string[] {\n\tif (chartBlock._chart) {\n\t\tconst dimensions: string[] = [];\n\t\tconst measures: string[] = [];\n\t\tif (chartBlock._chart.Dimensions) {\n\t\t\tChartHelper.formatDimensions(chartBlock._chartContext)\n\t\t\t\t.getObject()\n\t\t\t\t.forEach((dimension: DimensionType) => {\n\t\t\t\t\tdimension.id = generate([chartBlock.id, \"dimension\", dimension.key]);\n\t\t\t\t\tdimensions.push(\n\t\t\t\t\t\tgetItem(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: dimension.id,\n\t\t\t\t\t\t\t\tkey: dimension.key,\n\t\t\t\t\t\t\t\tlabel: dimension.label,\n\t\t\t\t\t\t\t\trole: dimension.role\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"_fe_groupable_\",\n\t\t\t\t\t\t\t\"groupable\"\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\t\tif (chartBlock.measures) {\n\t\t\tChartHelper.formatMeasures(chartBlock.measures).forEach((measure: MeasureType) => {\n\t\t\t\tmeasure.id = generate([chartBlock.id, \"measure\", measure.key]);\n\t\t\t\tmeasures.push(\n\t\t\t\t\tgetItem(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: measure.id,\n\t\t\t\t\t\t\tkey: measure.key,\n\t\t\t\t\t\t\tlabel: measure.label,\n\t\t\t\t\t\t\trole: measure.role\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"_fe_aggregatable_\",\n\t\t\t\t\t\t\"aggregatable\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\tif (dimensions.length && measures.length) {\n\t\t\treturn dimensions.concat(measures);\n\t\t}\n\t}\n\treturn \"\";\n}\n\nfunction getItem(item: MeasureType | DimensionType, prefix: string, type: string): string {\n\treturn (\n\t\t<MdcChartItem\n\t\t\tid={item.id}\n\t\t\tpropertyKey={prefix + item.key}\n\t\t\ttype={type}\n\t\t\tlabel={resolveBindingString(item.label as string, \"string\")}\n\t\t\trole={item.role}\n\t\t/>\n\t);\n}\n\nfunction getToolbarActions(chartBlock: ChartBlock): ToolbarAction[] {\n\tconst actions = getActions(chartBlock);\n\tif (chartBlock.chartDefinition?.onSegmentedButtonPressed) {\n\t\tactions.push(getSegmentedButton(chartBlock));\n\t}\n\tif (chartBlock.chartDefinition.isInsightsEnabled) {\n\t\tactions.push(\n\t\t\tgetStandardActions(\n\t\t\t\tchartBlock.chartDefinition.isInsightsEnabled,\n\t\t\t\tchartBlock.chartDefinition.isInsightsVisible,\n\t\t\t\tchartBlock._blockId!,\n\t\t\t\tchartBlock\n\t\t\t)\n\t\t);\n\t}\n\tif (actions.length > 0) {\n\t\treturn actions;\n\t}\n\treturn [];\n}\n\nfunction getStandardActions(\n\tisInsightsEnabled: BindingToolkitExpression<boolean> | undefined,\n\tisInsightsVisible: BindingToolkitExpression<boolean> | undefined,\n\tid: string,\n\tchartBlock: ChartBlock\n): MenuItem | ActionToolbarAction {\n\treturn (\n\t\t<ActionToolbarAction visible={isInsightsVisible}>\n\t\t\t<Button\n\t\t\t\tid={generate([id, \"StandardAction::Insights\"])}\n\t\t\t\ttext=\"{sap.fe.i18n>M_COMMON_INSIGHTS_CARD}\"\n\t\t\t\tpress={(): void => {\n\t\t\t\t\tchartBlock.onAddCardToInsightsPressed();\n\t\t\t\t}}\n\t\t\t\tenabled={isInsightsEnabled}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: <OverflowToolbarLayoutData priority=\"AlwaysOverflow\" />\n\t\t\t\t}}\n\t\t\t</Button>\n\t\t</ActionToolbarAction>\n\t);\n}\n\nfunction getActions(chartBlock: ChartBlock): ToolbarAction[] {\n\tconst actions = removeMenuItems(chartBlock.chartActions ?? []);\n\treturn actions.map((action: BaseAction) => {\n\t\tif (action.annotationPath || (action.type === \"Menu\" && !action.id?.startsWith(\"CustomAction\"))) {\n\t\t\t// Load annotation based actions\n\t\t\treturn getAction(action, chartBlock._chartContext, false, chartBlock);\n\t\t} else if (action.hasOwnProperty(\"noWrap\")) {\n\t\t\t// Load XML or manifest based actions / action groups\n\t\t\treturn getCustomActions(action as CustomAndAction, chartBlock._chartContext, chartBlock);\n\t\t}\n\t});\n}\n\nfunction removeMenuItems(actions: BaseAction[]): BaseAction[] {\n\t// If action is already part of menu in action group, then it will\n\t// be removed from the main actions list\n\tfor (const action of actions) {\n\t\tif (action.menu) {\n\t\t\taction.menu.forEach((item) => {\n\t\t\t\tconst idx = actions.map((act) => act.key).indexOf(item.key);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tactions.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn actions;\n}\n\nfunction getCustomActions(action: CustomAndAction, chartContext: Context, chartBlock: ChartBlock): ToolbarAction {\n\tlet actionEnabled = action.enabled as string | boolean | undefined;\n\tif ((action.requiresSelection ?? false) && action.enabled === \"true\") {\n\t\tactionEnabled = \"{= %{internal>numberOfSelectedContexts} >= 1}\";\n\t}\n\tif (action.type === \"Default\") {\n\t\t// Load XML or manifest based toolbar actions\n\t\treturn getActionToolbarAction(\n\t\t\taction,\n\t\t\t{\n\t\t\t\tid: generate([chartBlock._blockId, action.id]),\n\t\t\t\tunittestid: \"DataFieldForActionButtonAction\",\n\t\t\t\tlabel: action.text ? action.text : \"\",\n\t\t\t\tariaHasPopup: undefined,\n\t\t\t\tpress: action.press ? action.press : \"\",\n\t\t\t\tenabled: actionEnabled,\n\t\t\t\tvisible: action.visible ? action.visible : false\n\t\t\t},\n\t\t\tfalse,\n\t\t\tchartBlock\n\t\t);\n\t} else if (action.type === \"Menu\") {\n\t\t// Load action groups (Menu)\n\t\treturn getActionToolbarMenuAction(\n\t\t\t{\n\t\t\t\tid: generate([chartBlock._blockId, action.id]),\n\t\t\t\ttext: action.text,\n\t\t\t\tvisible: action.visible,\n\t\t\t\tenabled: actionEnabled,\n\t\t\t\tuseDefaultActionOnly: DefaultActionHandler.getUseDefaultActionOnly(action),\n\t\t\t\tbuttonMode: DefaultActionHandler.getButtonMode(action),\n\t\t\t\tdefaultAction: undefined,\n\t\t\t\tactions: action\n\t\t\t},\n\t\t\tchartContext,\n\t\t\tchartBlock\n\t\t);\n\t}\n}\n\nfunction getMenuItemFromMenu(menuItemAction: CustomAction, chartContext: Context, chartBlock: ChartBlock): ToolbarAction {\n\tlet pressHandler: { press: (event: Button$PressEvent) => void } | { \"jsx:command\": CommandProperties };\n\tif (menuItemAction.annotationPath) {\n\t\t//Annotation based action is passed as menu item for menu button\n\t\treturn getAction(menuItemAction, chartContext, true, chartBlock);\n\t}\n\tif (menuItemAction.command) {\n\t\tpressHandler = { \"jsx:command\": `cmd:${menuItemAction.command}|press` as CommandProperties };\n\t} else if (menuItemAction.noWrap ?? false) {\n\t\tpressHandler = {\n\t\t\tpress: (event: Button$PressEvent): void => {\n\t\t\t\tconst functionName = menuItemAction.handlerMethod?.split(\".\")[1] as string;\n\t\t\t\tconst controller = { ...CommonUtils.getTargetView(event.getSource()).getController() } as unknown as {\n\t\t\t\t\t[temp: string]: (event: Button$PressEvent) => void;\n\t\t\t\t};\n\t\t\t\tif (controller[functionName]) controller[functionName](event);\n\t\t\t}\n\t\t};\n\t} else {\n\t\tpressHandler = {\n\t\t\tpress: (event: Button$PressEvent): void => {\n\t\t\t\tconst selectedContexts = CommonUtils.getTargetView(event.getSource())\n\t\t\t\t\t.getBindingContext(\"internal\")\n\t\t\t\t\t?.getProperty(\"selectedContexts\");\n\t\t\t\tFPMHelper.actionWrapper(event, menuItemAction.handlerModule, menuItemAction.handlerMethod, { contexts: selectedContexts });\n\t\t\t}\n\t\t};\n\t}\n\n\treturn <MenuItem text={menuItemAction.text} {...pressHandler} visible={menuItemAction.visible} enabled={menuItemAction.enabled} />;\n}\n\nfunction getActionToolbarMenuAction(\n\tprops: CustomToolbarMenuAction,\n\tchartContext: Context,\n\tchartBlock: ChartBlock\n): MenuItem | ActionToolbarAction {\n\tconst aMenuItems = (props.actions?.menu as CustomAction[]).map((action: CustomAction) => {\n\t\treturn getMenuItemFromMenu(action, chartContext, chartBlock);\n\t});\n\treturn (\n\t\t<ActionToolbarAction>\n\t\t\t<MenuButton\n\t\t\t\ttext={props.text}\n\t\t\t\ttype=\"Transparent\"\n\t\t\t\tid={props.id}\n\t\t\t\tvisible={props.visible}\n\t\t\t\tenabled={props.enabled}\n\t\t\t\tuseDefaultActionOnly={props.useDefaultActionOnly}\n\t\t\t\tbuttonMode={props.buttonMode}\n\t\t\t\tmenuPosition={Dock.BeginBottom}\n\t\t\t\tdefaultAction={\"props.defaultAction\" as unknown as () => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tmenu: <Menu>{aMenuItems}</Menu>\n\t\t\t\t}}\n\t\t\t</MenuButton>\n\t\t</ActionToolbarAction>\n\t);\n}\n\nfunction getAction(action: BaseAction | CustomAction, chartContext: Context, isMenuItem: boolean, chartBlock: ChartBlock): ToolbarAction {\n\tconst dataFieldContext = chartBlock._metaModel.createBindingContext(action.annotationPath ?? \"\")!;\n\tif (action.type === \"ForNavigation\") {\n\t\treturn getNavigationActions(action, dataFieldContext, isMenuItem, chartBlock);\n\t} else if (action.type === \"ForAction\") {\n\t\treturn getAnnotationActions(chartContext, action as AnnotationAction, dataFieldContext, isMenuItem, chartBlock);\n\t} else if (action.type === \"Menu\") {\n\t\tconst menuItems = action.menu?.map((menuAction: BaseAction) => {\n\t\t\treturn getAction(menuAction, chartContext, true, chartBlock);\n\t\t});\n\t\treturn (\n\t\t\t<ActionToolbarAction>\n\t\t\t\t<MenuButton\n\t\t\t\t\ttext={action.text}\n\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\tid={action.key}\n\t\t\t\t\tvisible={action.visible}\n\t\t\t\t\tenabled={action.enabled}\n\t\t\t\t\tmenuPosition={Dock.BeginBottom}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tmenu: <Menu>{menuItems}</Menu>\n\t\t\t\t\t}}\n\t\t\t\t</MenuButton>\n\t\t\t</ActionToolbarAction>\n\t\t);\n\t}\n\treturn undefined;\n}\n\nfunction getNavigationActions(\n\taction: BaseAction | CustomAction,\n\tdataFieldContext: Context,\n\tisMenuItem: boolean,\n\tchartBlock: ChartBlock\n): MenuItem | ActionToolbarAction {\n\tlet enabled = \"true\";\n\tconst dataField = dataFieldContext.getObject();\n\tif (action.enabled !== undefined) {\n\t\tenabled = action.enabled;\n\t} else if (dataField.RequiresContext) {\n\t\tenabled = \"{= %{internal>numberOfSelectedContexts} >= 1}\";\n\t}\n\treturn getActionToolbarAction(\n\t\taction,\n\t\t{\n\t\t\tid: undefined,\n\t\t\tunittestid: \"DataFieldForIntentBasedNavigationButtonAction\",\n\t\t\tlabel: dataField.Label,\n\t\t\tariaHasPopup: undefined,\n\t\t\tpress: CommonHelper.getPressHandlerForDataFieldForIBN(dataField, `\\${internal>selectedContexts}`, false)!,\n\t\t\tenabled: enabled,\n\t\t\tvisible: getVisible(dataFieldContext, chartBlock)\n\t\t},\n\t\tisMenuItem,\n\t\tchartBlock,\n\t\tdataField\n\t);\n}\n\nfunction getAnnotationActions(\n\tchartContext: Context,\n\taction: AnnotationAction,\n\tdataFieldContext: Context,\n\tisMenuItem: boolean,\n\tchartBlock: ChartBlock\n): ToolbarAction {\n\tconst dataFieldAction = chartBlock._metaModel.createBindingContext(action.annotationPath + \"/Action\")!;\n\tconst actionContext = chartBlock._metaModel.createBindingContext(CommonHelper.getActionContext(dataFieldAction));\n\tconst actionObject = actionContext?.getObject();\n\tconst isBoundPath = CommonHelper.getPathToBoundActionOverload(dataFieldAction);\n\tconst isBound = chartBlock._metaModel.createBindingContext(isBoundPath)!.getObject();\n\tconst dataField = dataFieldContext.getObject();\n\tif (!isBound || isBound.$IsBound !== true || actionObject[`@${CoreAnnotationTerms.OperationAvailable}`] !== false) {\n\t\tconst enabled = getAnnotationActionsEnabled(action, isBound, dataField, chartContext, chartBlock._context);\n\t\tconst dataFieldModelObjectPath = getInvolvedDataModelObjects<DataFieldAbstractTypes>(\n\t\t\tchartBlock._metaModel.createBindingContext(action.annotationPath) as Context\n\t\t);\n\t\tconst ariaHasPopup = isDataModelObjectPathForActionWithDialog(dataFieldModelObjectPath);\n\t\tconst chartOperationAvailableMap =\n\t\t\tescapeXMLAttributeValue(\n\t\t\t\tChartHelper.getOperationAvailableMap(chartContext.getObject(), {\n\t\t\t\t\tcontext: chartContext\n\t\t\t\t})\n\t\t\t) || \"\";\n\t\treturn getActionToolbarAction(\n\t\t\taction,\n\t\t\t{\n\t\t\t\tid: generate([chartBlock._blockId, getInvolvedDataModelObjects(dataFieldContext)]),\n\t\t\t\tunittestid: \"DataFieldForActionButtonAction\",\n\t\t\t\tlabel: dataField.Label,\n\t\t\t\tariaHasPopup: ariaHasPopup,\n\t\t\t\tenabled: enabled,\n\t\t\t\tvisible: getVisible(dataFieldContext, chartBlock)\n\t\t\t},\n\t\t\tisMenuItem,\n\t\t\tchartBlock,\n\t\t\tdataField,\n\t\t\tchartOperationAvailableMap\n\t\t);\n\t}\n\treturn undefined;\n}\n\nfunction getActionToolbarAction(\n\taction: (BaseAction | CustomAction) & { noWrap?: boolean },\n\ttoolbarAction: ToolBarAction,\n\tisMenuItem: boolean,\n\tchartBlock: ChartBlock,\n\tdataField?: DataFieldForAction | DataFieldForIntentBasedNavigation,\n\tchartOperationAvailableMap?: string\n): MenuItem | ActionToolbarAction {\n\tif (isMenuItem) {\n\t\tconst pressEvent: { press: (event: Button$PressEvent) => void } | { \"jsx:command\": CommandProperties } = action.command\n\t\t\t? { \"jsx:command\": `cmd:${action.command}|press` as CommandProperties }\n\t\t\t: {\n\t\t\t\t\tpress: (event: Button$PressEvent): void => {\n\t\t\t\t\t\tconst view = CommonUtils.getTargetView(event.getSource());\n\t\t\t\t\t\tconst controller = view.getController();\n\t\t\t\t\t\tif (action.type === \"ForAction\") {\n\t\t\t\t\t\t\tconst params = {\n\t\t\t\t\t\t\t\tcontexts: view.getBindingContext(\"internal\")?.getProperty(\"selectedContexts\"),\n\t\t\t\t\t\t\t\tinvocationGrouping:\n\t\t\t\t\t\t\t\t\t(dataField as DataFieldForAction)?.InvocationGrouping === OperationGroupingType.ChangeSet\n\t\t\t\t\t\t\t\t\t\t? \"ChangeSet\"\n\t\t\t\t\t\t\t\t\t\t: \"Isolated\",\n\t\t\t\t\t\t\t\tcontrolId: chartBlock._blockId,\n\t\t\t\t\t\t\t\toperationAvailableMap: chartOperationAvailableMap,\n\t\t\t\t\t\t\t\tmodel: view.getModel(),\n\t\t\t\t\t\t\t\tlabel: dataField?.Label as string\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcontroller.editFlow.invokeAction(dataField?.Action as string, params);\n\t\t\t\t\t\t} else if (action.type === \"ForNavigation\") {\n\t\t\t\t\t\t\tconst navigationParameters: NavigationParameters = {\n\t\t\t\t\t\t\t\tnavigationContexts: view.getBindingContext(\"internal\")?.getProperty(\"selectedContexts\")\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif ((dataField as DataFieldForIntentBasedNavigation)?.Mapping) {\n\t\t\t\t\t\t\t\tnavigationParameters.semanticObjectMapping = JSON.stringify(\n\t\t\t\t\t\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).Mapping\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontroller._intentBasedNavigation.navigate(\n\t\t\t\t\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).SemanticObject as unknown as string,\n\t\t\t\t\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).Action as unknown as string,\n\t\t\t\t\t\t\t\tnavigationParameters\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t  };\n\n\t\treturn <MenuItem text={toolbarAction.label} {...pressEvent} enabled={toolbarAction.enabled} visible={toolbarAction.visible} />;\n\t} else {\n\t\treturn buildAction(action, toolbarAction, chartBlock, dataField, chartOperationAvailableMap);\n\t}\n}\n\nfunction buildAction(\n\taction: BaseAction | CustomAction,\n\ttoolbarAction: ToolBarAction,\n\tchartBlock: ChartBlock,\n\tdataField?: DataFieldForAction | DataFieldForIntentBasedNavigation,\n\tchartOperationAvailableMap?: string\n): ActionToolbarAction {\n\treturn (\n\t\t<ActionToolbarAction>\n\t\t\t<Button\n\t\t\t\tid={toolbarAction.id}\n\t\t\t\ttext={toolbarAction.label}\n\t\t\t\tariaHasPopup={toolbarAction.ariaHasPopup}\n\t\t\t\t{...getActionPress(action, dataField, chartOperationAvailableMap, chartBlock)}\n\t\t\t\tenabled={toolbarAction.enabled}\n\t\t\t\tvisible={toolbarAction.visible}\n\t\t\t/>\n\t\t</ActionToolbarAction>\n\t);\n}\n\nfunction getActionPress(\n\taction: BaseAction | CustomAction,\n\tdataField?: DataFieldForAction | DataFieldForIntentBasedNavigation,\n\tchartOperationAvailableMap?: string,\n\tchartBlock?: ChartBlock\n): { press: (event: Button$PressEvent) => void } | { \"jsx:command\": CommandProperties } {\n\tlet actionPress: { press: (event: Button$PressEvent) => void } | { \"jsx:command\": CommandProperties } = {\n\t\tpress: \"\" as unknown as () => void\n\t};\n\n\tif (action.hasOwnProperty(\"noWrap\")) {\n\t\tif (action.command) {\n\t\t\tactionPress = { \"jsx:command\": `cmd:${action.command}|press` as CommandProperties };\n\t\t} else if ((action as CustomAction).noWrap === true) {\n\t\t\tactionPress = getCustomActionPress(action as CustomAction);\n\t\t} else if (!action.annotationPath) {\n\t\t\tactionPress = getActionPressWithAnnotationPath(action as CustomAction);\n\t\t}\n\t} else {\n\t\tactionPress = action.command\n\t\t\t? { \"jsx:command\": `cmd:${action.command}|press` as CommandProperties }\n\t\t\t: getStandardActionPressWithNoCommand(action, dataField, chartBlock, chartOperationAvailableMap);\n\t}\n\n\treturn actionPress;\n}\n\nfunction getCustomActionPress(action: CustomAction): { press: (event: Button$PressEvent) => void } {\n\treturn {\n\t\tpress: (event: Button$PressEvent): void => {\n\t\t\tconst functionName = action.handlerMethod?.split(\".\")[1] as string;\n\t\t\tconst controller = { ...CommonUtils.getTargetView(event.getSource()).getController() } as unknown as {\n\t\t\t\t[method: string]: (event: Button$PressEvent) => void;\n\t\t\t};\n\t\t\tif (controller[functionName]) controller[functionName](event);\n\t\t}\n\t};\n}\n\nfunction getActionPressWithAnnotationPath(action: CustomAction): { press: (event: Button$PressEvent) => void } {\n\treturn {\n\t\tpress: (event: Button$PressEvent): void => {\n\t\t\tconst selectedContexts = event.getSource().getBindingContext(\"internal\")?.getProperty(\"selectedContexts\");\n\t\t\tFPMHelper.actionWrapper(event, action.handlerModule, action.handlerMethod, {\n\t\t\t\tcontexts: selectedContexts\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction getStandardActionPressWithNoCommand(\n\taction: BaseAction | CustomAction,\n\tdataField?: DataFieldForAction | DataFieldForIntentBasedNavigation,\n\tchartBlock?: ChartBlock,\n\tchartOperationAvailableMap?: string\n): { press: (event: Button$PressEvent) => void } {\n\treturn {\n\t\tpress: (event: Button$PressEvent): void => {\n\t\t\tconst view = CommonUtils.getTargetView(event.getSource());\n\t\t\tconst controller = view.getController();\n\t\t\tif (action.type === \"ForAction\") {\n\t\t\t\tconst params = {\n\t\t\t\t\tcontexts: view.getBindingContext(\"internal\")?.getProperty(\"selectedContexts\"),\n\t\t\t\t\tinvocationGrouping:\n\t\t\t\t\t\t(dataField as DataFieldForAction)?.InvocationGrouping === OperationGroupingType.ChangeSet\n\t\t\t\t\t\t\t? \"ChangeSet\"\n\t\t\t\t\t\t\t: \"Isolated\",\n\t\t\t\t\tcontrolId: chartBlock?._blockId,\n\t\t\t\t\toperationAvailableMap: chartOperationAvailableMap,\n\t\t\t\t\tmodel: view.getModel(),\n\t\t\t\t\tlabel: dataField?.Label as string\n\t\t\t\t};\n\t\t\t\tcontroller.editFlow.invokeAction(dataField?.Action as string, params);\n\t\t\t} else if (action.type === \"ForNavigation\") {\n\t\t\t\tconst navigationParameters: NavigationParameters = {\n\t\t\t\t\tnavigationContexts: view.getBindingContext(\"internal\")?.getProperty(\"selectedContexts\")\n\t\t\t\t};\n\t\t\t\tif ((dataField as DataFieldForIntentBasedNavigation)?.Mapping) {\n\t\t\t\t\tnavigationParameters.semanticObjectMapping = JSON.stringify((dataField as DataFieldForIntentBasedNavigation).Mapping);\n\t\t\t\t}\n\t\t\t\tcontroller._intentBasedNavigation.navigate(\n\t\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).SemanticObject as unknown as string,\n\t\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).Action as unknown as string,\n\t\t\t\t\tnavigationParameters\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction getAnnotationActionsEnabled(\n\taction: BaseAction,\n\tisBound: Record<string, boolean>,\n\tdataField: DataFieldForAction,\n\tchartContext: Context,\n\tcontext: Context\n): string {\n\treturn action.enabled !== undefined\n\t\t? action.enabled\n\t\t: ChartHelper.isDataFieldForActionButtonEnabled(\n\t\t\t\tisBound && isBound.$IsBound,\n\t\t\t\tdataField.Action as string,\n\t\t\t\tcontext,\n\t\t\t\tChartHelper.getOperationAvailableMap(chartContext.getObject(), { context: chartContext }),\n\t\t\t\taction.enableOnSelect || \"\"\n\t\t  );\n}\n\nfunction getSegmentedButton(chartBlock: ChartBlock): ActionToolbarAction {\n\treturn (\n\t\t<ActionToolbarAction\n\t\t\tlayoutInformation={{\n\t\t\t\taggregationName: \"end\",\n\t\t\t\talignment: \"End\"\n\t\t\t}}\n\t\t>\n\t\t\t<SegmentedButton\n\t\t\t\tid={generate([chartBlock._blockId, \"SegmentedButton\", \"TemplateContentView\"])}\n\t\t\t\tselectionChange={(event: SegmentedButton$SelectionChangeEvent): void => {\n\t\t\t\t\tchartBlock.fireSegmentedButtonPressed?.(\n\t\t\t\t\t\tmerge(event.getParameters(), { selectedKey: event.getSource().getSelectedKey() })\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\tvisible={notEqual(pathInModel(\"alpContentView\", \"pageInternal\"), \"Table\")}\n\t\t\t\tselectedKey={pathInModel(\"alpContentView\", \"pageInternal\")}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\titems: getSegmentedButtonItems()\n\t\t\t\t}}\n\t\t\t</SegmentedButton>\n\t\t</ActionToolbarAction>\n\t);\n}\n\nfunction getSegmentedButtonItems(): string[] {\n\tconst segmentedButtonItems = [];\n\tif (CommonHelper.isDesktop()) {\n\t\tsegmentedButtonItems.push(\n\t\t\tgetSegmentedButtonItem(\"{sap.fe.i18n>M_COMMON_HYBRID_SEGMENTED_BUTTON_ITEM_TOOLTIP}\", \"Hybrid\", \"sap-icon://chart-table-view\")\n\t\t);\n\t}\n\tsegmentedButtonItems.push(\n\t\tgetSegmentedButtonItem(\"{sap.fe.i18n>M_COMMON_CHART_SEGMENTED_BUTTON_ITEM_TOOLTIP}\", \"Chart\", \"sap-icon://bar-chart\")\n\t);\n\tsegmentedButtonItems.push(\n\t\tgetSegmentedButtonItem(\"{sap.fe.i18n>M_COMMON_TABLE_SEGMENTED_BUTTON_ITEM_TOOLTIP}\", \"Table\", \"sap-icon://table-view\")\n\t);\n\treturn segmentedButtonItems;\n}\n\nfunction getSegmentedButtonItem(tooltip: string, key: string, icon: string): string {\n\treturn <SegmentedButtonItem tooltip={tooltip} key={key} icon={icon} />;\n}\n\n/**\n * Returns the annotation path pointing to the visualization annotation (Chart).\n * @param contextObjectPath The datamodel object path for the chart\n * @param converterContext The converter context\n * @returns The annotation path\n */\nfunction getVisualizationPath(\n\tcontextObjectPath: DataModelObjectPath<ChartType | SelectionPresentationVariant | PresentationVariant>,\n\tconverterContext: ConverterContext\n): string {\n\tconst metaPath = getContextRelativeTargetObjectPath(contextObjectPath);\n\n\t// fallback to default Chart if metaPath is not set\n\tif (!metaPath) {\n\t\tLog.error(`Missing metaPath parameter for Chart`);\n\t\treturn `@${UIAnnotationTerms.Chart}`;\n\t}\n\n\tif (contextObjectPath.targetObject?.term === UIAnnotationTerms.Chart) {\n\t\treturn metaPath; // MetaPath is already pointing to a Chart\n\t}\n\n\t//Need to switch to the context related the PV or SPV\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(metaPath);\n\n\tlet visualizations: VisualizationAndPath[] = [];\n\tswitch (contextObjectPath.targetObject?.term) {\n\t\tcase UIAnnotationTerms.SelectionPresentationVariant:\n\t\t\tif (contextObjectPath.targetObject.PresentationVariant) {\n\t\t\t\tvisualizations = getVisualizationsFromAnnotation(\n\t\t\t\t\tcontextObjectPath.targetObject,\n\t\t\t\t\tmetaPath,\n\t\t\t\t\tresolvedTarget.converterContext,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.PresentationVariant:\n\t\t\tvisualizations = getVisualizationsFromAnnotation(\n\t\t\t\tcontextObjectPath.targetObject,\n\t\t\t\tmetaPath,\n\t\t\t\tresolvedTarget.converterContext,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tconst chartViz = visualizations.find((viz) => {\n\t\treturn viz.visualization.term === UIAnnotationTerms.Chart;\n\t});\n\n\tif (chartViz) {\n\t\treturn chartViz.annotationPath;\n\t} else {\n\t\t// fallback to default Chart if annotation missing in PV\n\t\tLog.error(`Bad metaPath parameter for chart: ${contextObjectPath.targetObject?.term}`);\n\t\treturn `@${UIAnnotationTerms.Chart}`;\n\t}\n}\n\nfunction getVisible(dataFieldContext: Context, chartBlock: ChartBlock): string | boolean {\n\tconst dataField = dataFieldContext.getObject();\n\tif (dataField[`@${UIAnnotationTerms.Hidden}`] && dataField[`@${UIAnnotationTerms.Hidden}`].$Path) {\n\t\tconst hiddenPathContext = chartBlock._metaModel.createBindingContext(\n\t\t\tdataFieldContext.getPath() + `/@${UIAnnotationTerms.Hidden}/$Path`,\n\t\t\tdataField[`@${UIAnnotationTerms.Hidden}`].$Path\n\t\t);\n\t\treturn ChartHelper.getHiddenPathExpressionForTableActionsAndIBN(dataField[`@${UIAnnotationTerms.Hidden}`].$Path, {\n\t\t\tcontext: hiddenPathContext\n\t\t});\n\t} else if (dataField[`@${UIAnnotationTerms.Hidden}`]) {\n\t\treturn !dataField[`@${UIAnnotationTerms.Hidden}`];\n\t} else {\n\t\treturn true;\n\t}\n}\n\nfunction getChartConverterContext(\n\tproperties: ChartBlock,\n\toriginalViewData: Partial<ViewData>,\n\tcontextObjectPath: DataModelObjectPath<ChartContextObjectPath>,\n\tdiagnostics: Diagnostics,\n\textraParams?: Record<string, unknown>\n): ConverterContext<PageContextPathTarget> {\n\tlet viewData = Object.assign({}, originalViewData);\n\tdelete viewData.resourceModel;\n\tdelete viewData.appComponent;\n\tviewData = deepClone(viewData);\n\tlet controlConfiguration = {};\n\n\t// Only merge in page control configuration if the building block is on the same context\n\tconst relativePath = getTargetObjectPath(contextObjectPath.contextLocation ?? contextObjectPath);\n\tconst entitySetName = contextObjectPath.contextLocation?.targetEntitySet?.name ?? contextObjectPath.targetEntitySet?.name;\n\tif (\n\t\trelativePath === originalViewData?.contextPath ||\n\t\trelativePath === `/${originalViewData?.entitySet}` ||\n\t\tentitySetName === originalViewData?.entitySet\n\t) {\n\t\tcontrolConfiguration = viewData.controlConfiguration!;\n\t}\n\tviewData.controlConfiguration = merge(controlConfiguration, extraParams || {}) as ControlConfiguration;\n\n\treturn ConverterContext.createConverterContextForMacro(\n\t\tcontextObjectPath.startingEntitySet.name,\n\t\tproperties._metaModel,\n\t\tdiagnostics,\n\t\tmerge,\n\t\tcontextObjectPath.contextLocation,\n\t\tviewData as BaseManifestSettings\n\t);\n}\n\nfunction getConverterContext(\n\tchartBlock: ChartBlock,\n\tviewData: ViewData,\n\tcontextObjectPath: DataModelObjectPath<ChartContextObjectPath>,\n\tdiagnostics: Diagnostics\n): ConverterContext<PageContextPathTarget> {\n\tconst initialConverterContext = getChartConverterContext(chartBlock, viewData, contextObjectPath, diagnostics);\n\tconst visualizationPath = getVisualizationPath(contextObjectPath, initialConverterContext);\n\tconst extraParams = getExtraParams(chartBlock, visualizationPath);\n\treturn getChartConverterContext(chartBlock, viewData, contextObjectPath, diagnostics, extraParams);\n}\n\nfunction modifyIdentifiers(chartBlock: ChartBlock): void {\n\tif (chartBlock._applyIdToContent) {\n\t\tchartBlock._blockId = chartBlock.id.replace(/::Chart$/, \"\");\n\t\tchartBlock._contentId = chartBlock._blockId;\n\t} else {\n\t\tchartBlock._blockId = chartBlock.id;\n\t\tchartBlock._contentId = getContentId(chartBlock.id);\n\t}\n}\n\nfunction initialise(\n\tchartBlock: ChartBlock,\n\tviewData: ViewData,\n\tdiagnostics: Diagnostics,\n\tcontextObjectPath: DataModelObjectPath<ChartContextObjectPath>\n): void {\n\tconst metaContextPath = chartBlock.getMetaPathObject(chartBlock.metaPath, chartBlock._resolvedContextPath);\n\tchartBlock._metaModel = chartBlock._getOwner()?.preprocessorContext?.models.metaModel as ODataMetaModel;\n\tchartBlock._metaPathContext = chartBlock._metaModel.createBindingContext(metaContextPath!.getPath())!;\n\tchartBlock._context = chartBlock._metaModel.createBindingContext(chartBlock.contextPath ?? metaContextPath?.getContextPath())!;\n\n\tconst converterContext = getConverterContext(chartBlock, viewData, contextObjectPath, diagnostics);\n\tconst viewConfig = converterContext.getManifestWrapper()?.getViewConfiguration();\n\tconst isMultiTabs = (viewConfig?.paths?.length as number) > 1;\n\tconst hasMultipleVisualizations =\n\t\tconverterContext.getManifestWrapper()?.hasMultipleVisualizations() ||\n\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage;\n\tconst aggregationHelper = new AggregationHelper(converterContext.getEntityType(), converterContext, true); // passing the last parameter as true to consider the old annotations i.e. Aggregation.Aggregatable for backward compatibility in case of chart\n\n\tchartBlock._chartContext = ChartHelper.getUiChart(chartBlock._metaPathContext)!;\n\tchartBlock._chart = chartBlock._chartContext.getObject() as ChartType;\n\tchartBlock._blockActions = [];\n\tchartBlock._commandActions = [];\n\tmodifyIdentifiers(chartBlock);\n\n\tif (chartBlock._chart) {\n\t\tchartBlock.chartDefinition = createChartDefinition(\n\t\t\tchartBlock,\n\t\t\tconverterContext,\n\t\t\tcontextObjectPath,\n\t\t\tchartBlock._chartContext.getPath()\n\t\t);\n\t\tconst collection = chartBlock._metaModel.createBindingContext(chartBlock.chartDefinition.collection) as Context;\n\t\t// API Properties\n\t\tchartBlock.navigationPath = chartBlock.chartDefinition.navigationPath;\n\t\tchartBlock.autoBindOnInit = chartBlock.chartDefinition.autoBindOnInit;\n\t\tchartBlock.vizProperties = chartBlock.chartDefinition.vizProperties;\n\t\tchartBlock.chartActions = chartBlock.chartDefinition.actions;\n\t\tchartBlock.filter = getFilterBar(chartBlock);\n\t\tconst personalization = chartBlock._personalization || chartBlock.chartDefinition.personalization;\n\t\tcheckPersonalizationInChartProperties(personalization, chartBlock);\n\t\tchartBlock.visible = chartBlock.chartDefinition.visible;\n\t\tlet contextPath = chartBlock._context.getPath();\n\t\tcontextPath = contextPath[contextPath.length - 1] === \"/\" ? contextPath.slice(0, -1) : contextPath;\n\t\tchartBlock.draftSupported = ModelHelper.isDraftSupported(chartBlock._metaModel, contextPath);\n\t\tchartBlock._chartType = ChartHelper.formatChartType(chartBlock._chart.ChartType);\n\n\t\tconst operationAvailableMap = ChartHelper.getOperationAvailableMap(chartBlock._chart, {\n\t\t\tcontext: chartBlock._chartContext\n\t\t});\n\n\t\tif (Object.keys(chartBlock.chartDefinition?.commandActions as object).length > 0) {\n\t\t\tObject.keys(chartBlock.chartDefinition?.commandActions as object).forEach((key: string) => {\n\t\t\t\tconst action = chartBlock.chartDefinition?.commandActions[key];\n\t\t\t\tconst actionContext = createBindingContext(action);\n\t\t\t\tconst dataFieldContext = action.annotationPath && chartBlock._metaModel.createBindingContext(action.annotationPath);\n\t\t\t\tconst dataField = dataFieldContext && dataFieldContext.getObject();\n\t\t\t\tconst chartOperationAvailableMap = escapeXMLAttributeValue(operationAvailableMap);\n\t\t\t\tpushActionCommand(actionContext, dataField, chartOperationAvailableMap, action, chartBlock);\n\t\t\t});\n\t\t}\n\t\tchartBlock.measures = getChartMeasures(chartBlock, aggregationHelper);\n\t\tconst presentationPath = CommonHelper.createPresentationPathContext(chartBlock._metaPathContext);\n\t\tchartBlock._sortConditions = ChartHelper.getSortConditions(\n\t\t\tchartBlock._metaPathContext,\n\t\t\tchartBlock._metaPathContext.getObject(),\n\t\t\tpresentationPath.getPath(),\n\t\t\tchartBlock.chartDefinition.applySupported\n\t\t);\n\t\tconst chartActionsContext = chartBlock._metaModel.createBindingContext(\n\t\t\tchartBlock._chartContext.getPath() + \"/Actions\",\n\t\t\tchartBlock._chart.Actions as unknown as Context\n\t\t);\n\t\tconst targetCollectionPath = CommonHelper.getTargetCollectionPath(collection);\n\t\tconst targetCollectionPathContext = chartBlock._metaModel.createBindingContext(targetCollectionPath, collection)!;\n\t\tconst actionsObject = contextObjectPath.convertedTypes.resolvePath(chartActionsContext.getPath())?.target;\n\n\t\tchartBlock._customData = {\n\t\t\ttargetCollectionPath: chartBlock.chartDefinition.collection,\n\t\t\tentitySet:\n\t\t\t\ttypeof targetCollectionPathContext.getObject() === \"string\"\n\t\t\t\t\t? targetCollectionPathContext.getObject()\n\t\t\t\t\t: targetCollectionPathContext.getObject(\"@sapui.name\"),\n\t\t\tentityType: chartBlock.chartDefinition.collection + \"/\",\n\t\t\toperationAvailableMap: JSON.parse(operationAvailableMap),\n\t\t\tmultiSelectDisabledActions: ActionHelper.getMultiSelectDisabledActions(actionsObject as DataFieldAbstractTypes[]) + \"\",\n\t\t\tsegmentedButtonId: generate([chartBlock._blockId, \"SegmentedButton\", \"TemplateContentView\"]),\n\t\t\tcustomAgg: chartBlock.chartDefinition?.customAgg,\n\t\t\ttransAgg: chartBlock.chartDefinition?.transAgg,\n\t\t\tapplySupported: chartBlock.chartDefinition?.applySupported,\n\t\t\tvizProperties: JSON.parse(chartBlock.vizProperties),\n\t\t\tdraftSupported: chartBlock.draftSupported,\n\t\t\tmultiViews: chartBlock.chartDefinition?.multiViews || (!hasMultipleVisualizations && isMultiTabs),\n\t\t\tselectionPresentationVariantPath: {\n\t\t\t\tdata: chartBlock.chartDefinition?.selectionPresentationVariantPath\n\t\t\t}\n\t\t};\n\t\tif (chartBlock.chartDefinition.isParameterizedEntitySet) {\n\t\t\tchartBlock._customData.entitySet = chartBlock.chartDefinition.collection.substring(1);\n\t\t}\n\t} else {\n\t\t// fallback to display empty chart\n\t\tchartBlock.autoBindOnInit = false;\n\t\tchartBlock.visible = \"true\";\n\t\tchartBlock.navigationPath = \"\";\n\n\t\tchartBlock._customData = {\n\t\t\ttargetCollectionPath: \"\",\n\t\t\tentitySet: \"\",\n\t\t\tentityType: \"\",\n\t\t\toperationAvailableMap: \"\",\n\t\t\tmultiSelectDisabledActions: \"\",\n\t\t\tsegmentedButtonId: \"\",\n\t\t\tcustomAgg: {},\n\t\t\ttransAgg: {},\n\t\t\tapplySupported: {},\n\t\t\tvizProperties: {}\n\t\t};\n\t}\n}\n\nfunction getFilterBar(chartBlock: ChartBlock): string | undefined {\n\tconst filterBar = Element.getElementById(chartBlock.filterBar);\n\tif (chartBlock.filterBar && filterBar?.isA<MacroAPI>(\"sap.fe.macros.filterBar.FilterBarAPI\")) {\n\t\treturn getContentId(chartBlock.filterBar);\n\t} else if (filterBar?.isA<Control>(\"sap.fe.macros.controls.FilterBar\")) {\n\t\treturn chartBlock.filterBar;\n\t} else if (chartBlock.filterBar) {\n\t\treturn getContentId(chartBlock.filterBar);\n\t}\n}\n\nfunction getDelegate(chartBlock: ChartBlock): object {\n\treturn chartBlock.chartDelegate\n\t\t? chartBlock.chartDelegate\n\t\t: {\n\t\t\t\tname: \"sap/fe/macros/chart/ChartDelegate\",\n\t\t\t\tpayload: {\n\t\t\t\t\tchartContextPath: chartBlock._customData.targetCollectionPath,\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\t$$groupId: \"$auto.Workers\"\n\t\t\t\t\t},\n\t\t\t\t\tselectionMode: chartBlock.selectionMode.toUpperCase()\n\t\t\t\t}\n\t\t  };\n}\n\nfunction getCustomData(chartBlock: ChartBlock): CustomData[] {\n\treturn [\n\t\t<CustomData key={\"targetCollectionPath\"} value={chartBlock._customData.targetCollectionPath} />,\n\t\t<CustomData key={\"entitySet\"} value={chartBlock._customData.entitySet} />,\n\t\t<CustomData key={\"entityType\"} value={chartBlock._customData.entityType} />,\n\t\t<CustomData key={\"operationAvailableMap\"} value={chartBlock._customData.operationAvailableMap} />,\n\t\t<CustomData key={\"multiSelectDisabledActions\"} value={chartBlock._customData.multiSelectDisabledActions} />,\n\t\t<CustomData key={\"segmentedButtonId\"} value={chartBlock._customData.segmentedButtonId} />,\n\t\t<CustomData key={\"customAgg\"} value={chartBlock._customData.customAgg} />,\n\t\t<CustomData key={\"transAgg\"} value={chartBlock._customData.transAgg} />,\n\t\t<CustomData key={\"applySupported\"} value={chartBlock._customData.applySupported} />,\n\t\t<CustomData key={\"vizProperties\"} value={chartBlock._customData.vizProperties} />,\n\t\t<CustomData key={\"draftSupported\"} value={chartBlock._customData.draftSupported} />,\n\t\t<CustomData key={\"multiViews\"} value={chartBlock._customData.multiViews} />,\n\t\t<CustomData key={\"selectionPresentationVariantPath\"} value={chartBlock._customData.selectionPresentationVariantPath} />\n\t];\n}\n\nfunction getNoData(chartBlock: ChartBlock): IllustratedMessage | undefined {\n\tif (chartBlock._customData.targetCollectionPath === \"\") {\n\t\treturn;\n\t}\n\treturn (\n\t\t<IllustratedMessage\n\t\t\tillustrationSize={IllustratedMessageSize.Auto}\n\t\t\tillustrationType={IllustratedMessageType.BeforeSearch}\n\t\t\ttitle={chartBlock.getTranslatedText(\"T_TABLE_AND_CHART_NO_DATA_TITLE_TEXT\")}\n\t\t\tdescription={chartBlock.getTranslatedText(\"T_TABLE_AND_CHART_NO_DATA_TEXT\")}\n\t\t\tenableDefaultTitleAndDescription={false}\n\t\t\tenableVerticalResponsiveness={true}\n\t\t></IllustratedMessage>\n\t);\n}\n\nexport function getMdcChartTemplate(\n\tchartBlock: ChartBlock,\n\tviewData: ViewData,\n\tdiagnostics: Diagnostics,\n\tcontextObjectPath: DataModelObjectPath<ChartContextObjectPath>\n): MdcChart {\n\tinitialise(chartBlock, viewData, diagnostics, contextObjectPath);\n\tchartBlock.layoutData = <FlexItemData growFactor=\"1\" shrinkFactor=\"1\" />;\n\n\treturn (\n\t\t<MdcChart\n\t\t\tbinding={{ internal: \"controls/\" + chartBlock._blockId }}\n\t\t\tid={chartBlock._contentId}\n\t\t\tchartType={chartBlock._chartType}\n\t\t\tsortConditions={chartBlock._sortConditions}\n\t\t\theader={chartBlock.header ?? chartBlock._chart?.Title?.toString() ?? \"\"}\n\t\t\theaderVisible={chartBlock.headerVisible}\n\t\t\tminHeight={Device.system.phone ? \"80vh\" : \"400px\"}\n\t\t\theight=\"100%\"\n\t\t\twidth=\"100%\"\n\t\t\theaderLevel={chartBlock.headerLevel}\n\t\t\theaderStyle={chartBlock.headerStyle}\n\t\t\tp13nMode={(chartBlock._personalization! as string)?.split(\",\")}\n\t\t\tfilter={chartBlock.filter}\n\t\t\tnoDataText={\n\t\t\t\tchartBlock._customData.targetCollectionPath === \"\"\n\t\t\t\t\t? chartBlock.getTranslatedText(\"M_CHART_NO_ANNOTATION_SET_TEXT\")\n\t\t\t\t\t: chartBlock.noDataText\n\t\t\t}\n\t\t\tautoBindOnInit={chartBlock.autoBindOnInit}\n\t\t\tdelegate={getDelegate(chartBlock)}\n\t\t\tvisible={chartBlock.visible}\n\t\t>\n\t\t\t{{\n\t\t\t\tcustomData: getCustomData(chartBlock),\n\t\t\t\tdependents: [getDependents(chartBlock, chartBlock._chartContext), getPersistenceProvider(chartBlock)],\n\t\t\t\titems: getItems(chartBlock),\n\t\t\t\tactions: chartBlock.chartActions ? getToolbarActions(chartBlock) : chartBlock._blockActions,\n\t\t\t\tvariant: createVariantManagement(chartBlock),\n\t\t\t\tnoData: getNoData(chartBlock)\n\t\t\t}}\n\t\t</MdcChart>\n\t);\n}\n"],"mappings":"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","ignoreList":[],"file":"MdcChartTemplate-dbg.js"}