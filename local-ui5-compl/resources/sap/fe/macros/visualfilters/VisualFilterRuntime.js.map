{"version":3,"file":"VisualFilterRuntime.js","names":["VisualFilterRuntime","selectionChanged","oEvent","oInteractiveChart","getSource","sOutParameter","data","sValueListProperty","sDimension","sDimensionText","bMultipleSelectionAllowed","sDimensionType","oSelectedAggregation","getParameter","bIsAggregationSelected","oConditionModel","getModel","aConditions","getProperty","Log","error","sSelectionChangedValue","getBindingContext","getObject","sSelectionChangedValueText","String","undefined","VisualFilterUtils","_parseDateTime","oCondition","Condition","createItemCondition","push","filter","operator","Date","parse","values","setProperty","getAggregationSelected","aSelectableValues","this","i","length","getParent","sDimensionValue","includes","getFiltersFromConditions","_len","arguments","aArguments","Array","_key","oFilterBar","aInParameters","customData","bIsDraftSupported","aPropertyInfoSet","FilterUtils","getFilterPropertyInfo","mConditions","aValueListPropertyInfoSet","oFilters","aFilters","aParameters","oSelectionVariantAnnotation","CommonHelper","parseCustomData","oInteractiveChartListBinding","getBinding","sPath","getPath","oMetaModel","getMetaModel","sEntitySetPath","filterConditions","getFiltersConditionsFromSelectionVariant","getCustomConditions","bind","typeConfig","TypeMap","getTypeConfig","dataType","oSelectionVariantConditions","convertFilterCondions","Object","keys","forEach","sKey","inParameterForKey","find","inParameter","valueListProperty","localDataProperty","propertyInfoSet","name","baseType","condition","_formatDateTime","oInParameter","index","oInternalModelContext","sInfoPath","bEnableBinding","oResourceBundle","Library","getResourceBundleFor","aRequiredProperties","aNotMatchedConditions","requiredPropertyPath","errorMessageTitle","errorMessage","showError","getText","sLabel","sFilterEntityName","split","sChartEntityName","sBindingPath","getBindingPathForParameters","parameter","key","slice","MdcFilterUtil","getFilterInfo","filters","e","debug","getFilters","Filter","FilterOperator","EQ","isSuspended","resume","getFilterCounts","oConditions","scaleVisualFilterValue","oValue","scaleFactor","numberOfFractionalDigits","currency","oRawValue","getFormattedNumber","fireValueHelp","fireEvent","ObjectPath","set"],"sources":["./VisualFilterRuntime.ts"],"sourcesContent":["import type { SelectionVariantType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport VisualFilterUtils from \"sap/fe/macros/controls/filterbar/utils/VisualFilterUtils\";\nimport type { IFilterControl } from \"sap/fe/macros/filter/FilterUtils\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport { getFiltersConditionsFromSelectionVariant } from \"sap/fe/macros/filterBar/FilterHelper\";\nimport type InteractiveBarChart from \"sap/suite/ui/microchart/InteractiveBarChart\";\nimport type InteractiveDonutChart from \"sap/suite/ui/microchart/InteractiveDonutChart\";\nimport type InteractiveLineChartPoint from \"sap/suite/ui/microchart/InteractiveLineChartPoint\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport { type PropertyInfo } from \"sap/ui/mdc/FilterBar\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport Condition from \"sap/ui/mdc/condition/Condition\";\nimport TypeMap from \"sap/ui/mdc/odata/v4/TypeMap\";\nimport MdcFilterUtil from \"sap/ui/mdc/util/FilterUtil\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { MetaModelType } from \"../../../../../../../types/metamodel_types\";\n\n/**\n * Static class used by Visual Filter during runtime\n * @private\n * @experimental This module is only for internal/experimental use!\n */\nconst VisualFilterRuntime = {\n\tselectionChanged(\n\t\toEvent: UI5Event<\n\t\t\t{ bar: Control; point: Control; segment: Control; selected: boolean },\n\t\t\tInteractiveBarChart | InteractiveLineChartPoint | InteractiveDonutChart\n\t\t>\n\t): void {\n\t\tconst oInteractiveChart = oEvent.getSource();\n\t\tconst sOutParameter = oInteractiveChart.data(\"outParameter\");\n\t\tconst sValueListProperty = oInteractiveChart.data(\"valuelistProperty\");\n\t\tconst sDimension = oInteractiveChart.data(\"dimension\");\n\t\tconst sDimensionText = oInteractiveChart.data(\"dimensionText\");\n\t\tconst bMultipleSelectionAllowed = oInteractiveChart.data(\"multipleSelectionAllowed\");\n\t\tconst sDimensionType = oInteractiveChart.data(\"dimensionType\");\n\t\tconst oSelectedAggregation = oEvent.getParameter(\"bar\") || oEvent.getParameter(\"point\") || oEvent.getParameter(\"segment\");\n\t\tconst bIsAggregationSelected = oEvent.getParameter(\"selected\");\n\t\tconst oConditionModel = oInteractiveChart.getModel(\"$field\") as JSONModel;\n\t\tlet aConditions = oConditionModel.getProperty(\"/conditions\");\n\n\t\tif (!sOutParameter || sValueListProperty !== sDimension) {\n\t\t\tLog.error(\"VisualFilter: Cannot sync values with regular filter as out parameter is not configured properly!\");\n\t\t} else {\n\t\t\tlet sSelectionChangedValue = oSelectedAggregation.getBindingContext()?.getObject(sValueListProperty);\n\t\t\tif (sSelectionChangedValue) {\n\t\t\t\tlet sSelectionChangedValueText = oSelectedAggregation.getBindingContext()?.getObject(sDimensionText);\n\t\t\t\tif (typeof sSelectionChangedValueText !== \"string\" && !(sSelectionChangedValueText instanceof String)) {\n\t\t\t\t\tsSelectionChangedValueText = undefined;\n\t\t\t\t}\n\t\t\t\t// if selection has been done on the aggregation then add to conditions\n\t\t\t\tif (bIsAggregationSelected) {\n\t\t\t\t\tif (bMultipleSelectionAllowed === \"false\") {\n\t\t\t\t\t\taConditions = [];\n\t\t\t\t\t}\n\t\t\t\t\tif (sDimensionType === \"Edm.DateTimeOffset\") {\n\t\t\t\t\t\tsSelectionChangedValue = VisualFilterUtils._parseDateTime(sSelectionChangedValue);\n\t\t\t\t\t}\n\t\t\t\t\tconst oCondition = Condition.createItemCondition(\n\t\t\t\t\t\tsSelectionChangedValue,\n\t\t\t\t\t\tsSelectionChangedValueText || undefined,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\taConditions.push(oCondition);\n\t\t\t\t} else {\n\t\t\t\t\t// because selection was removed on the aggregation hence remove this from conditions\n\t\t\t\t\taConditions = aConditions.filter(function (oCondition: ConditionObject) {\n\t\t\t\t\t\tif (sDimensionType === \"Edm.DateTimeOffset\") {\n\t\t\t\t\t\t\treturn oCondition.operator !== \"EQ\" || Date.parse(oCondition.values[0]) !== Date.parse(sSelectionChangedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn oCondition.operator !== \"EQ\" || oCondition.values[0] !== sSelectionChangedValue;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toConditionModel.setProperty(\"/conditions\", aConditions);\n\t\t\t} else {\n\t\t\t\tLog.error(\"VisualFilter: No vaue found for the outParameter\");\n\t\t\t}\n\t\t}\n\t},\n\t// THIS IS A FORMATTER\n\tgetAggregationSelected(this: ManagedObject, aConditions: ConditionObject[]): boolean | undefined {\n\t\tlet aSelectableValues = [];\n\t\tif (!this.getBindingContext()) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0; i <= aConditions.length - 1; i++) {\n\t\t\tconst oCondition = aConditions[i];\n\t\t\t// 1. get conditions with EQ operator (since visual filter can only deal with EQ operators) and get their values\n\t\t\tif (oCondition.operator === \"EQ\") {\n\t\t\t\taSelectableValues.push(oCondition.values[0]);\n\t\t\t}\n\t\t}\n\n\t\t// access the interactive chart from the control.\n\t\tconst oInteractiveChart = this.getParent() as Control;\n\t\tconst sDimension = oInteractiveChart.data(\"dimension\");\n\t\tconst sDimensionType = oInteractiveChart.data(\"dimensionType\");\n\t\tlet sDimensionValue = this.getBindingContext()?.getObject(sDimension);\n\t\tif (sDimensionType === \"Edm.DateTimeOffset\") {\n\t\t\tsDimensionValue = VisualFilterUtils._parseDateTime(sDimensionValue) as unknown;\n\t\t}\n\t\tif (oInteractiveChart.data(\"multipleSelectionAllowed\") === \"false\" && aSelectableValues.length > 1) {\n\t\t\taSelectableValues = [aSelectableValues[0]];\n\t\t}\n\t\treturn aSelectableValues.includes(sDimensionValue);\n\t},\n\t// THIS IS A FORMATTER\n\tgetFiltersFromConditions(this: ManagedObject, ...aArguments: ConditionObject[][]): Filter[] | undefined {\n\t\tconst oInteractiveChart = this.getParent() as Control;\n\t\tconst oFilterBar = oInteractiveChart.getParent()?.getParent()?.getParent()?.getParent() as IFilterControl;\n\t\tconst aInParameters = oInteractiveChart.data(\"inParameters\").customData;\n\t\tconst bIsDraftSupported = oInteractiveChart.data(\"draftSupported\") === \"true\";\n\t\tconst aPropertyInfoSet = FilterUtils.getFilterPropertyInfo(oFilterBar) as PropertyInfo[];\n\t\tconst mConditions: Record<string, ConditionObject[]> = {};\n\t\tconst aValueListPropertyInfoSet: unknown[] = [];\n\t\tlet oFilters;\n\t\tlet aFilters: Filter[] = [];\n\t\tconst aParameters = oInteractiveChart.data(\"parameters\").customData as string[];\n\t\tconst oSelectionVariantAnnotation = CommonHelper.parseCustomData(oInteractiveChart.data(\"selectionVariantAnnotation\")) as\n\t\t\t| MetaModelType<SelectionVariantType>\n\t\t\t| SelectionVariantType;\n\t\tconst oInteractiveChartListBinding =\n\t\t\toInteractiveChart.getBinding(\"bars\") || oInteractiveChart.getBinding(\"points\") || oInteractiveChart.getBinding(\"segments\");\n\t\tconst sPath = oInteractiveChartListBinding!.getPath();\n\t\tconst oMetaModel = (oInteractiveChart.getModel() as ODataModel).getMetaModel();\n\t\tconst sEntitySetPath = oInteractiveChartListBinding!.getPath();\n\t\tconst filterConditions = getFiltersConditionsFromSelectionVariant(\n\t\t\tsEntitySetPath,\n\t\t\toMetaModel,\n\t\t\toSelectionVariantAnnotation,\n\t\t\tVisualFilterUtils.getCustomConditions.bind(VisualFilterUtils)\n\t\t);\n\t\tfor (const i in aPropertyInfoSet) {\n\t\t\taPropertyInfoSet[i].typeConfig = TypeMap.getTypeConfig(aPropertyInfoSet[i].dataType, {}, {});\n\t\t}\n\t\tconst oSelectionVariantConditions = VisualFilterUtils.convertFilterCondions(filterConditions);\n\t\t// aInParameters and the bindings to in parameters are in the same order so we can rely on it to create our conditions\n\t\tObject.keys(oSelectionVariantConditions).forEach(function (sKey: string) {\n\t\t\tmConditions[sKey] = oSelectionVariantConditions[sKey];\n\t\t\t//fetch localDataProperty if selection variant key is based on vaue list property\n\t\t\tconst inParameterForKey = aInParameters.find(function (inParameter: { valueListProperty: string }) {\n\t\t\t\treturn inParameter.valueListProperty === sKey;\n\t\t\t});\n\t\t\tconst localDataProperty = inParameterForKey ? inParameterForKey.localDataProperty : sKey;\n\t\t\tif (!aParameters || (aParameters && !aParameters.includes(sKey))) {\n\t\t\t\tfor (const i in aPropertyInfoSet) {\n\t\t\t\t\tconst propertyInfoSet = aPropertyInfoSet[i];\n\t\t\t\t\tif (localDataProperty === propertyInfoSet.name) {\n\t\t\t\t\t\tif (propertyInfoSet?.typeConfig?.baseType === \"DateTime\") {\n\t\t\t\t\t\t\tif (mConditions[sKey]) {\n\t\t\t\t\t\t\t\tmConditions[sKey].forEach(function (condition) {\n\t\t\t\t\t\t\t\t\tcondition.values[0] = VisualFilterUtils._formatDateTime(condition.values[0]);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taValueListPropertyInfoSet.push({\n\t\t\t\t\t\t\tname: sKey,\n\t\t\t\t\t\t\ttypeConfig: propertyInfoSet.typeConfig\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\taInParameters.forEach(function (oInParameter: { valueListProperty: string; localDataProperty: string }, index: number) {\n\t\t\tif (aArguments[index].length > 0) {\n\t\t\t\t// store conditions with value list property since we are filtering on the value list collection path\n\t\t\t\tmConditions[oInParameter.valueListProperty] = aArguments[index];\n\t\t\t\tif (!aParameters || (aParameters && !aParameters.includes(oInParameter.valueListProperty))) {\n\t\t\t\t\t// aPropertyInfoSet is list of properties from the filter bar but we need to create conditions for the value list\n\t\t\t\t\t// which could have a different collectionPath.\n\t\t\t\t\t// Only typeConfig from aPropertyInfoSet is required for getting the converted filters from conditions\n\t\t\t\t\t// so we update aPropertyInfoSet to have the valueListProperties only\n\t\t\t\t\t// This way conditions will be converted to sap.ui.model.Filter for the value list\n\t\t\t\t\t// This works because for in parameter mapping the property from the main entity type should be of the same type as the value list entity type\n\t\t\t\t\t// TODO: Follow up with MDC to check if they can provide a clean api to convert conditions into filters\n\t\t\t\t\tfor (const i in aPropertyInfoSet) {\n\t\t\t\t\t\t// store conditions with value list property since we are filtering on the value list collection path\n\t\t\t\t\t\tconst propertyInfoSet = aPropertyInfoSet[i];\n\t\t\t\t\t\tif (propertyInfoSet.name === oInParameter.localDataProperty) {\n\t\t\t\t\t\t\tif (propertyInfoSet?.typeConfig?.baseType === \"DateTime\") {\n\t\t\t\t\t\t\t\tif (mConditions[oInParameter.valueListProperty]) {\n\t\t\t\t\t\t\t\t\tmConditions[oInParameter.valueListProperty].forEach(function (condition) {\n\t\t\t\t\t\t\t\t\t\tcondition.values[0] = VisualFilterUtils._formatDateTime(condition.values[0]);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taValueListPropertyInfoSet.push({\n\t\t\t\t\t\t\t\tname: oInParameter.valueListProperty,\n\t\t\t\t\t\t\t\ttypeConfig: propertyInfoSet.typeConfig\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst oInternalModelContext = oInteractiveChart.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst sInfoPath = oInteractiveChart.data(\"infoPath\");\n\t\tlet bEnableBinding;\n\t\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.macros\")!;\n\t\tconst aRequiredProperties = CommonHelper.parseCustomData(oInteractiveChart.data(\"requiredProperties\")) as string[];\n\t\tif (aRequiredProperties.length) {\n\t\t\tconst aConditions = Object.keys(mConditions) || [];\n\t\t\tconst aNotMatchedConditions: string[] = [];\n\t\t\taRequiredProperties.forEach(function (requiredPropertyPath: string) {\n\t\t\t\tif (!aConditions.includes(requiredPropertyPath)) {\n\t\t\t\t\taNotMatchedConditions.push(requiredPropertyPath);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!aNotMatchedConditions.length) {\n\t\t\t\tbEnableBinding = oInternalModelContext.getProperty(`${sInfoPath}/showError`);\n\t\t\t\toInternalModelContext.setProperty(sInfoPath, {\n\t\t\t\t\terrorMessageTitle: \"\",\n\t\t\t\t\terrorMessage: \"\",\n\t\t\t\t\tshowError: false\n\t\t\t\t});\n\t\t\t} else if (aNotMatchedConditions.length > 1) {\n\t\t\t\toInternalModelContext.setProperty(sInfoPath, {\n\t\t\t\t\terrorMessageTitle: oResourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\"),\n\t\t\t\t\terrorMessage: oResourceBundle.getText(\"M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_MULTIPLEVF\"),\n\t\t\t\t\tshowError: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconst sLabel =\n\t\t\t\t\toMetaModel.getObject(`${sEntitySetPath}/${aNotMatchedConditions[0]}@com.sap.vocabularies.Common.v1.Label`) ||\n\t\t\t\t\taNotMatchedConditions[0];\n\t\t\t\toInternalModelContext.setProperty(sInfoPath, {\n\t\t\t\t\terrorMessageTitle: oResourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\"),\n\t\t\t\t\terrorMessage: oResourceBundle.getText(\"M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_SINGLEVF\", sLabel),\n\t\t\t\t\tshowError: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tbEnableBinding = oInternalModelContext.getProperty(`${sInfoPath}/showError`);\n\t\t\toInternalModelContext.setProperty(sInfoPath, { errorMessageTitle: \"\", errorMessage: \"\", showError: false });\n\t\t}\n\n\t\tconst sFilterEntityName = oFilterBar.data(\"entityType\").split(\"/\")[1];\n\t\tconst sChartEntityName = sPath.split(\"/\")[1].split(\"(\")[0];\n\t\tif (aParameters && aParameters.length && sFilterEntityName === sChartEntityName) {\n\t\t\tconst sBindingPath = bEnableBinding\n\t\t\t\t? FilterUtils.getBindingPathForParameters(oFilterBar, mConditions, aPropertyInfoSet, aParameters)\n\t\t\t\t: undefined;\n\n\t\t\tif (sBindingPath) {\n\t\t\t\t(oInteractiveChartListBinding as { sPath?: string }).sPath = sBindingPath;\n\t\t\t}\n\t\t}\n\n\t\tif (aParameters && aParameters.length) {\n\t\t\t//Remove parameters from mConditions since it should not be a part of $filter\n\t\t\taParameters.forEach(function (parameter: string) {\n\t\t\t\tif (mConditions[parameter]) {\n\t\t\t\t\tdelete mConditions[parameter];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//Only keep the actual value of filters and remove type informations\n\t\tObject.keys(mConditions).forEach(function (key: string) {\n\t\t\tmConditions[key].forEach(function (condition) {\n\t\t\t\tif (condition.values.length > 1) {\n\t\t\t\t\tcondition.values = condition.values.slice(0, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t// On InitialLoad when initiallayout is visual, aPropertyInfoSet is always empty and we cannot get filters from MDCFilterUtil.\n\t\t// Also when SVQualifier is there then we should not change the listbinding filters to empty as we are not getting filters from MDCFilterUtil but\n\t\t// instead we need to not call listbinding.filter and use the template time binding itself.\n\t\tif (Object.keys(mConditions).length > 0 && aValueListPropertyInfoSet.length) {\n\t\t\ttry {\n\t\t\t\toFilters = (MdcFilterUtil.getFilterInfo(oFilterBar, mConditions, aValueListPropertyInfoSet, []) as { filters: Filter })\n\t\t\t\t\t.filters;\n\t\t\t} catch (e) {\n\t\t\t\tLog.debug(\"VisualFilter: Error while getting filters from MDCFilterUtil\");\n\t\t\t}\n\t\t\tif (oFilters) {\n\t\t\t\tif (!oFilters.getFilters()) {\n\t\t\t\t\taFilters.push(oFilters);\n\t\t\t\t} else if (oFilters.getFilters()) {\n\t\t\t\t\taFilters = oFilters.getFilters()!;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bIsDraftSupported) {\n\t\t\taFilters.push(new Filter(\"IsActiveEntity\", FilterOperator.EQ, true));\n\t\t}\n\t\tif (aFilters && aFilters.length > 0) {\n\t\t\t(oInteractiveChartListBinding as ODataListBinding)?.filter(aFilters);\n\t\t} else if (!Object.keys(mConditions).length) {\n\t\t\t(oInteractiveChartListBinding as ODataListBinding)?.filter();\n\t\t}\n\t\t// update the interactive chart binding\n\t\tif (bEnableBinding && (oInteractiveChartListBinding as ODataListBinding)?.isSuspended()) {\n\t\t\t(oInteractiveChartListBinding as ODataListBinding)?.resume();\n\t\t}\n\t\treturn aFilters;\n\t},\n\tgetFilterCounts(this: Control, oConditions: ConditionObject[]): string | undefined {\n\t\tif (this.data(\"multipleSelectionAllowed\") === \"false\" && oConditions.length > 0) {\n\t\t\treturn `(1)`;\n\t\t}\n\t\tif (oConditions.length > 0) {\n\t\t\treturn `(${oConditions.length})`;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\n\tscaleVisualFilterValue(\n\t\toValue: string,\n\t\tscaleFactor: number,\n\t\tnumberOfFractionalDigits: number,\n\t\tcurrency: string,\n\t\toRawValue: string | number\n\t): string {\n\t\t// ScaleFactor if defined is priority for formatting\n\t\tif (scaleFactor) {\n\t\t\treturn VisualFilterUtils.getFormattedNumber(oRawValue, scaleFactor, numberOfFractionalDigits);\n\t\t\t// If Scale Factor is not defined, use currency formatting\n\t\t} else if (currency) {\n\t\t\treturn VisualFilterUtils.getFormattedNumber(oRawValue, undefined, undefined, currency);\n\t\t\t// No ScaleFactor and no Currency, use numberOfFractionalDigits defined in DataPoint\n\t\t} else if (numberOfFractionalDigits > 0) {\n\t\t\t// Number of fractional digits shall not exceed 2, unless required by currency\n\t\t\tnumberOfFractionalDigits = numberOfFractionalDigits > 2 ? 2 : numberOfFractionalDigits;\n\t\t\treturn VisualFilterUtils.getFormattedNumber(oRawValue, undefined, numberOfFractionalDigits);\n\t\t} else {\n\t\t\treturn oValue;\n\t\t}\n\t},\n\tfireValueHelp(oEvent: UI5Event<{}, Control>): void {\n\t\toEvent.getSource().getParent()?.getParent()?.getParent()?.fireEvent(\"valueHelpRequest\");\n\t}\n};\n\nObjectPath.set(\"sap.fe.macros.visualfilters.VisualFilterRuntime\", VisualFilterRuntime);\n\nexport default VisualFilterRuntime;\n"],"mappings":"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","ignoreList":[]}