{"version":3,"names":["_getRestrictions","aDefaultOps","aExpressionOps","filter","sElement","includes","_getDefaultOperators","sPropertyType","oDataClass","TypeMap","getDataTypeClassName","oBaseType","getBaseType","FilterOperatorUtil","getOperatorsForType","ValueColor","mLibrary","CommonHelper","getPathToKey","oCtx","getObject","getParameterEditMode","target","oInterface","oModel","context","getModel","sPropertyPath","getPath","oAnnotations","fieldControl","immutable","computed","sEditMode","FieldEditMode","Editable","ReadOnly","$EnumMember","Disabled","$Path","getMetaPath","undefined","getMetaModelId","convertTypes","getId","isDesktop","Device","system","desktop","getTargetCollectionPath","navCollection","sPath","model","metaModel","isA","getMetaModel","aParts","split","sPart","entitySet","length","navigationCollection","slice","join","isPropertyFilterable","oDataField","sPropertyLocationPath","getLocationForPropertyPath","sProperty","replace","$Type","iLength","sCollectionPath","lastIndexOf","indexOf","gotoActionParameter","oContext","sPropertyName","CommonUtils","getParameterPath","getEntitySetName","oMetaModel","sEntityType","oEntityContainer","key","getActionPath","oAction","bReturnOnlyPath","sActionName","bCheckStaticValue","sContextPath","sEntityTypeName","sEntityName","sBindingParameter","getNavigationContext","ODataModelAnnotationHelper","getNavigationPath","bKeepProperty","bStartsWithEntityType","startsWith","part","shift","pop","getActionContext","getPathToBoundActionOverload","addSingleQuotes","sValue","bEscape","escapeSingleQuotes","generateFunction","sFuncName","sParams","i","arguments","sFunction","getHeaderDataPointLinkVisibility","path","isClickable","compileExpression","ifElse","constant","equal","pathInModel","notEqual","objectToString","oParams","iNumberOfKeys","Object","keys","sKey","removeEscapeCharacters","sExpression","stringifyObject","sStringified","oObject","JSON","parse","Array","isArray","oUI5Object","ui5object","assign","stringify","sType","Log","error","Error","stringifyCustomData","vData","Context","parseCustomData","hasOwnProperty","getContextPath","oValue","getSortConditions","oPresentationVariant","sPresentationVariantPath","_isPresentationVariantAnnotation","SortOrder","aSortConditions","sorters","sEntityPath","forEach","oCondition","oSortProperty","oSorter","DynamicProperty","$AnnotationPath","Name","Property","$PropertyPath","name","descending","Descending","push","annotationPath","createPresentationPathContext","oPresentationContext","aPaths","createBindingContext","getPressHandlerForDataFieldForIBN","sContext","bNavigateWithConfirmationDialog","forContextMenu","mNavigationParameters","navigationContexts","RequiresContext","Inline","applicableProperty","notApplicableProperty","applicableContexts","SemanticObject","Action","notApplicableContexts","label","Label","Mapping","semanticObjectMapping","getEntitySet","ModelHelper","getEntitySetPath","getCriticalityCalculationBinding","sImprovementDirection","sDeviationLow","sToleranceLow","sAcceptanceLow","sAcceptanceHigh","sToleranceHigh","sDeviationHigh","sCriticalityExpression","Neutral","Infinity","Good","Critical","warning","getMeasureAttributeIndex","iMeasure","oChartAnnotations","aMeasures","sMeasurePropertyPath","Measures","DynamicMeasures","bMeasureAttributeExists","aMeasureAttributes","MeasureAttributes","iMeasureAttribute","fnCheckMeasure","sMeasurePath","oMeasureAttribute","index","Measure","DynamicMeasure","some","bind","getMeasureAttribute","sChartAnnotationPath","requestObject","then","sMeasureAttributePath","DataPoint","getMeasureAttributeForMeasure","substring","isDraftParentEntityForContainment","oTargetCollectionContainsTarget","oTableMetadata","parentEntitySet","sParentEntitySetPath","oDraftRoot","oDraftNode","getDataFromTemplate","dataElement","splitPath","dataKey","connectedDataPath","connectedObject","template","Template","splitTemp","tempArray","trim","Data","notLastIndex","element","isLastIndex","templateInfo","lastIndex","getDelimiter","setMetaModel","getParameters","oParameterInfo","getParameterInfo","parameterProperties","buildActionWrapper","oThis","aParams","ref","handlerModule","handlerMethod","id","internalModelPath","oAdditionalParams","contexts","fn","getHiddenPathExpression","dataFieldAnnotations","hidden","getOperatorsForProperty","sEntitySetPath","bUseSemanticDateRange","settings","oFilterRestrictions","getFilterRestrictionsByPath","aEqualsOps","aSingleRangeOps","aSingleRangeDTBasicOps","aMultiRangeOps","aSearchExpressionOps","aBasicSemanticDateOps","SemanticDateOperators","getBasicSemanticDateOperations","bSemanticDateRange","aSemanticDateOps","oSettings","customData","operatorConfiguration","getFilterOperations","DefaultSemanticDateOperators","getSemanticDateOperations","aDefaultOperators","supportedOperators","extendedSemanticDateOperators","ExtendedSemanticDateOperators","restrictions","FilterAllowedExpressions","sAllowedExpression","getSpecificAllowedExpression","singleValueDateOps","getSingleValueDateOperations","aSingleValueOps","multiValueOperators","sOperators","concat","getOperatorsForDateProperty","propertyType","requiresIContext"],"sourceRoot":".","sources":["CommonHelper.ts"],"sourcesContent":["import type {\n\tChart,\n\tChartMeasureAttributeType,\n\tDataFieldForIntentBasedNavigation,\n\tDataFieldTypes,\n\tPresentationVariant\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, constant, equal, fn, ifElse, notEqual, pathInModel, ref } from \"sap/fe/base/BindingToolkit\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { FilterSettings } from \"sap/fe/core/converters/ManifestSettings\";\n\nimport { convertTypes } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { CustomAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport { isPropertyFilterable } from \"sap/fe/core/helpers/MetaModelFunction\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type { ComputedAnnotationInterface } from \"sap/fe/core/templating/UIFormatters\";\nimport * as DefaultSemanticDateOperators from \"sap/fe/macros/filterBar/DefaultSemanticDateOperators\";\nimport ExtendedSemanticDateOperators from \"sap/fe/macros/filterBar/ExtendedSemanticDateOperators\";\nimport SemanticDateOperators from \"sap/fe/macros/filterBar/SemanticDateOperators\";\nimport mLibrary from \"sap/m/library\";\nimport Device from \"sap/ui/Device\";\nimport FilterOperatorUtil from \"sap/ui/mdc/condition/FilterOperatorUtil\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport TypeMap from \"sap/ui/mdc/odata/v4/TypeMap\";\nimport Context from \"sap/ui/model/Context\";\nimport ODataModelAnnotationHelper from \"sap/ui/model/odata/v4/AnnotationHelper\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { MetaModelType } from \"../../../../../../types/metamodel_types\";\n\nfunction _getRestrictions(aDefaultOps: string[], aExpressionOps: string[]): string[] {\n\t// From the default set of Operators for the Base Type, select those that are defined in the Allowed Value.\n\t// In case that no operators are found, return undefined so that the default set is used.\n\treturn aDefaultOps.filter(function (sElement) {\n\t\treturn aExpressionOps.includes(sElement);\n\t});\n}\n\nfunction _getDefaultOperators(sPropertyType?: string): string[] {\n\t// mdc defines the full set of operations that are meaningful for each Edm Type\n\t// TODO Replace with model / internal way of retrieving the actual model type used for the property\n\tconst oDataClass = TypeMap.getDataTypeClassName(sPropertyType);\n\t// TODO need to pass proper formatOptions, constraints here\n\tconst oBaseType = TypeMap.getBaseType(oDataClass, {}, {});\n\treturn FilterOperatorUtil.getOperatorsForType(oBaseType);\n}\n\nconst ValueColor = mLibrary.ValueColor;\nconst CommonHelper = {\n\tgetPathToKey: function (oCtx: Context): object {\n\t\treturn oCtx.getObject();\n\t},\n\n\t/**\n\t * Determine if field is editable.\n\t * @param target Target instance\n\t * @param oInterface Interface instance\n\t * @returns A Binding Expression to determine if a field should be editable or not.\n\t */\n\tgetParameterEditMode: function (target: object, oInterface: ComputedAnnotationInterface): string {\n\t\tconst oModel = oInterface.context.getModel(),\n\t\t\tsPropertyPath = oInterface.context.getPath(),\n\t\t\toAnnotations = oModel.getObject(`${sPropertyPath}@`),\n\t\t\tfieldControl = oAnnotations[\"@com.sap.vocabularies.Common.v1.FieldControl\"],\n\t\t\timmutable = oAnnotations[\"@Org.OData.Core.V1.Immutable\"],\n\t\t\tcomputed = oAnnotations[\"@Org.OData.Core.V1.Computed\"];\n\n\t\tlet sEditMode: FieldEditMode | string = FieldEditMode.Editable;\n\n\t\tif (immutable || computed) {\n\t\t\tsEditMode = FieldEditMode.ReadOnly;\n\t\t} else if (fieldControl) {\n\t\t\tif (fieldControl.$EnumMember) {\n\t\t\t\tif (fieldControl.$EnumMember === \"com.sap.vocabularies.Common.v1.FieldControlType/ReadOnly\") {\n\t\t\t\t\tsEditMode = FieldEditMode.ReadOnly;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tfieldControl.$EnumMember === \"com.sap.vocabularies.Common.v1.FieldControlType/Inapplicable\" ||\n\t\t\t\t\tfieldControl.$EnumMember === \"com.sap.vocabularies.Common.v1.FieldControlType/Hidden\"\n\t\t\t\t) {\n\t\t\t\t\tsEditMode = FieldEditMode.Disabled;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fieldControl.$Path) {\n\t\t\t\tsEditMode =\n\t\t\t\t\t\"{= %{\" +\n\t\t\t\t\tfieldControl.$Path +\n\t\t\t\t\t\"} < 3 ? (%{\" +\n\t\t\t\t\tfieldControl.$Path +\n\t\t\t\t\t\"} === 0 ? '\" +\n\t\t\t\t\tFieldEditMode.Disabled +\n\t\t\t\t\t\"' : '\" +\n\t\t\t\t\tFieldEditMode.ReadOnly +\n\t\t\t\t\t\"') : '\" +\n\t\t\t\t\tFieldEditMode.Editable +\n\t\t\t\t\t\"'}\";\n\t\t\t}\n\t\t}\n\n\t\treturn sEditMode;\n\t},\n\t/**\n\t * Get the complete metapath to the target.\n\t * @param target\n\t * @param oInterface\n\t * @returns The metapath\n\t */\n\tgetMetaPath: function (target: unknown, oInterface: ComputedAnnotationInterface): string | undefined {\n\t\treturn (oInterface && oInterface.context && oInterface.context.getPath()) || undefined;\n\t},\n\tgetMetaModelId: function (target: Context, oInterface: ComputedAnnotationInterface): string {\n\t\tconvertTypes(oInterface.context.getModel());\n\t\treturn oInterface.context.getModel().getId();\n\t},\n\tisDesktop: function (): boolean {\n\t\treturn Device.system.desktop === true;\n\t},\n\tgetTargetCollectionPath: function (context: Context, navCollection?: string): string {\n\t\tlet sPath = context.getPath();\n\t\tif (\n\t\t\t(context.getObject(\"$kind\") as unknown as string) === \"EntitySet\" ||\n\t\t\t(context.getObject(\"$ContainsTarget\") as unknown as boolean) === true\n\t\t) {\n\t\t\treturn sPath;\n\t\t}\n\n\t\tconst model = context.getModel() as ODataModel | ODataMetaModel;\n\t\tconst metaModel = model.isA<ODataMetaModel>(\"sap.ui.model.odata.v4.ODataMetaModel\") ? model : model.getMetaModel();\n\t\tsPath = metaModel.getMetaPath(sPath);\n\n\t\t//Supporting sPath of any format, either '/<entitySet>/<navigationCollection>' <OR> '/<entitySet>/$Type/<navigationCollection>'\n\t\tconst aParts = sPath.split(\"/\").filter(function (sPart: string): boolean {\n\t\t\treturn !!sPart && sPart != \"$Type\";\n\t\t}); //filter out empty strings and parts referring to '$Type'\n\t\tconst entitySet = `/${aParts[0]}`;\n\t\tif (aParts.length === 1) {\n\t\t\treturn entitySet;\n\t\t}\n\t\tconst navigationCollection = navCollection === undefined ? aParts.slice(1).join(\"/$NavigationPropertyBinding/\") : navCollection;\n\t\treturn `${entitySet}/$NavigationPropertyBinding/${navigationCollection}`; // used in gotoTargetEntitySet method in the same file\n\t},\n\n\tisPropertyFilterable: function (\n\t\tcontext: Context,\n\t\toDataField?: MetaModelType<DataFieldTypes>\n\t): boolean | CompiledBindingToolkitExpression {\n\t\tconst oModel = context.getModel() as ODataMetaModel,\n\t\t\tsPropertyPath = context.getPath(),\n\t\t\t// LoacationPath would be the prefix of sPropertyPath, example: sPropertyPath = '/Customer/Set/Name' -> sPropertyLocationPath = '/Customer/Set'\n\t\t\tsPropertyLocationPath = CommonHelper.getLocationForPropertyPath(oModel, sPropertyPath),\n\t\t\tsProperty = sPropertyPath.replace(`${sPropertyLocationPath}/`, \"\");\n\n\t\tif (\n\t\t\toDataField &&\n\t\t\t(oDataField.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAction\" ||\n\t\t\t\toDataField.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\")\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isPropertyFilterable(oModel, sPropertyLocationPath, sProperty);\n\t},\n\n\tgetLocationForPropertyPath: function (oModel: ODataMetaModel, sPropertyPath: string): string {\n\t\tlet iLength;\n\t\tlet sCollectionPath = sPropertyPath.slice(0, sPropertyPath.lastIndexOf(\"/\"));\n\t\tif (oModel.getObject(`${sCollectionPath}/$kind`) === \"EntityContainer\") {\n\t\t\tiLength = sCollectionPath.length + 1;\n\t\t\tsCollectionPath = sPropertyPath.slice(iLength, sPropertyPath.indexOf(\"/\", iLength));\n\t\t}\n\t\treturn sCollectionPath;\n\t},\n\tgotoActionParameter: function (oContext: Context): string {\n\t\tconst sPath = oContext.getPath(),\n\t\t\tsPropertyName = oContext.getObject(`${sPath}/$Name`);\n\n\t\treturn CommonUtils.getParameterPath(sPath, sPropertyName);\n\t},\n\t/**\n\t * Returns the entity set name from the entity type name.\n\t * @param oMetaModel OData v4 metamodel instance\n\t * @param sEntityType EntityType of the actiom\n\t * @returns The EntitySet of the bound action\n\t * @private\n\t */\n\tgetEntitySetName: function (oMetaModel: ODataMetaModel, sEntityType: string): string | undefined {\n\t\tconst oEntityContainer = oMetaModel.getObject(\"/\");\n\t\tfor (const key in oEntityContainer) {\n\t\t\tif (typeof oEntityContainer[key] === \"object\" && oEntityContainer[key].$Type === sEntityType) {\n\t\t\t\treturn key;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\t/**\n\t * Returns the metamodel path correctly for bound actions if used with bReturnOnlyPath as true,\n\t * else returns an object which has 3 properties related to the action. They are the entity set name,\n\t * the $Path value of the OperationAvailable annotation and the binding parameter name. If\n\t * bCheckStaticValue is true, returns the static value of OperationAvailable annotation, if present.\n\t * e.g. for bound action someNameSpace.SomeBoundAction\n\t * of entity set SomeEntitySet, the string \"/SomeEntitySet/someNameSpace.SomeBoundAction\" is returned.\n\t * @param oAction The context object of the action\n\t * @param bReturnOnlyPath If false, additional info is returned along with metamodel path to the bound action\n\t * @param sActionName The name of the bound action of the form someNameSpace.SomeBoundAction\n\t * @param bCheckStaticValue If true, the static value of OperationAvailable is returned, if present\n\t * @returns The string or object as specified by bReturnOnlyPath\n\t * @private\n\t */\n\tgetActionPath: function (\n\t\toAction: Context,\n\t\tbReturnOnlyPath: boolean,\n\t\tsActionName?: string,\n\t\tbCheckStaticValue?: boolean\n\t):\n\t\t| string\n\t\t| {\n\t\t\t\tsContextPath: string;\n\t\t\t\tsProperty: string;\n\t\t\t\tsBindingParameter: string;\n\t\t  } {\n\t\tlet sContextPath = oAction.getPath().split(\"/@\")[0];\n\n\t\tsActionName = !sActionName ? oAction.getObject(oAction.getPath()) : sActionName;\n\n\t\tif (sActionName && sActionName.includes(\"(\")) {\n\t\t\t// action bound to another entity type\n\t\t\tsActionName = sActionName.split(\"(\")[0];\n\t\t} else if (oAction.getObject(sContextPath)) {\n\t\t\t// TODO: this logic sounds wrong, to be corrected\n\t\t\tconst sEntityTypeName = oAction.getObject(sContextPath).$Type;\n\t\t\tconst sEntityName = this.getEntitySetName(oAction.getModel(), sEntityTypeName);\n\t\t\tif (sEntityName) {\n\t\t\t\tsContextPath = `/${sEntityName}`;\n\t\t\t}\n\t\t} else {\n\t\t\treturn sContextPath;\n\t\t}\n\n\t\tif (bCheckStaticValue) {\n\t\t\treturn oAction.getObject(`${sContextPath}/${sActionName}@Org.OData.Core.V1.OperationAvailable`);\n\t\t}\n\t\tif (bReturnOnlyPath) {\n\t\t\treturn `${sContextPath}/${sActionName}`;\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tsContextPath: sContextPath,\n\t\t\t\tsProperty: oAction.getObject(`${sContextPath}/${sActionName}@Org.OData.Core.V1.OperationAvailable/$Path`),\n\t\t\t\tsBindingParameter: oAction.getObject(`${sContextPath}/${sActionName}/@$ui5.overload/0/$Parameter/0/$Name`)\n\t\t\t};\n\t\t}\n\t},\n\n\tgetNavigationContext: function (oContext: Context): string {\n\t\treturn ODataModelAnnotationHelper.getNavigationPath(oContext.getPath());\n\t},\n\n\t/**\n\t * Returns the path without the entity type (potentially first) and property (last) part (optional).\n\t * The result can be an empty string if it is a simple direct property.\n\t *\n\t * If and only if the given property path starts with a slash (/), it is considered that the entity type\n\t * is part of the path and will be stripped away.\n\t * @param sPropertyPath\n\t * @param bKeepProperty\n\t * @returns The navigation path\n\t */\n\tgetNavigationPath: function (sPropertyPath: string, bKeepProperty?: boolean): string {\n\t\tconst bStartsWithEntityType = sPropertyPath.startsWith(\"/\");\n\t\tconst aParts = sPropertyPath.split(\"/\").filter(function (part: string) {\n\t\t\treturn !!part;\n\t\t});\n\t\tif (bStartsWithEntityType) {\n\t\t\taParts.shift();\n\t\t}\n\t\tif (!bKeepProperty) {\n\t\t\taParts.pop();\n\t\t}\n\t\treturn aParts.join(\"/\");\n\t},\n\n\t/**\n\t * Returns the correct metamodel path for bound actions.\n\t *\n\t * Since this method is called irrespective of the action type, this will be applied to unbound actions.\n\t * In such a case, if an incorrect path is returned, it is ignored during templating.\n\t *\n\t * Example: for the bound action someNameSpace.SomeBoundAction of entity set SomeEntitySet,\n\t * the string \"/SomeEntitySet/someNameSpace.SomeBoundAction\" is returned.\n\t * @param oAction Context object for the action\n\t * @returns Correct metamodel path for bound and incorrect path for unbound actions\n\t * @private\n\t */\n\tgetActionContext: function (oAction: Context): string {\n\t\treturn CommonHelper.getActionPath(oAction, true) as string;\n\t},\n\t/**\n\t * Returns the metamodel path correctly for overloaded bound actions. For unbound actions,\n\t * the incorrect path is returned, but ignored during templating.\n\t * e.g. for bound action someNameSpace.SomeBoundAction of entity set SomeEntitySet,\n\t * the string \"/SomeEntitySet/someNameSpace.SomeBoundAction/@$ui5.overload/0\" is returned.\n\t * @param oAction The context object for the action\n\t * @returns The correct metamodel path for bound action overload and incorrect path for unbound actions\n\t * @private\n\t */\n\tgetPathToBoundActionOverload: function (oAction: Context): string {\n\t\tconst sPath = CommonHelper.getActionPath(oAction, true);\n\t\treturn `${sPath}/@$ui5.overload/0`;\n\t},\n\n\t/**\n\t * Returns the string with single quotes.\n\t * @param sValue Some string that needs to be converted into single quotes\n\t * @param [bEscape] Should the string be escaped beforehand\n\t * @returns - String with single quotes\n\t */\n\taddSingleQuotes: function (sValue: string, bEscape?: boolean): string {\n\t\tif (bEscape && sValue) {\n\t\t\tsValue = this.escapeSingleQuotes(sValue);\n\t\t}\n\t\treturn `'${sValue}'`;\n\t},\n\n\t/**\n\t * Returns the string with escaped single quotes.\n\t * @param sValue Some string that needs escaping of single quotes\n\t * @returns - String with escaped single quotes\n\t */\n\tescapeSingleQuotes: function (sValue: string): string {\n\t\treturn sValue.replace(/[']/g, \"\\\\'\");\n\t},\n\n\t/**\n\t * Returns the function string\n\t * The first argument of generateFunction is name of the generated function string.\n\t * Remaining arguments of generateFunction are arguments of the newly generated function string.\n\t * @param sFuncName Some string for the function name\n\t * @param args The remaining arguments\n\t * @returns - Function string depends on arguments passed\n\t */\n\tgenerateFunction: function (sFuncName: string, ...args: string[]): string {\n\t\tlet sParams = \"\";\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tsParams += args[i];\n\t\t\tif (i < args.length - 1) {\n\t\t\t\tsParams += \", \";\n\t\t\t}\n\t\t}\n\n\t\tlet sFunction = `${sFuncName}()`;\n\t\tif (sParams) {\n\t\t\tsFunction = `${sFuncName}(${sParams})`;\n\t\t}\n\t\treturn sFunction;\n\t},\n\t/*\n\t * Returns the visibility expression for datapoint title/link\n\t *\n\t * @function\n\t * @param {string} [path] annotation path of data point or Microchart\n\t * @param {boolean} [isClickable] true if link is visible\n\t * @returns {CompiledBindingToolkitExpression} visibilityExp Used to get the visibility binding for DataPoints title in the Header.\n\t *\n\t */\n\n\tgetHeaderDataPointLinkVisibility: function (path: string, isClickable: boolean): CompiledBindingToolkitExpression {\n\t\treturn compileExpression(\n\t\t\tifElse(\n\t\t\t\tconstant(isClickable),\n\t\t\t\tequal(pathInModel(`isHeaderDPLinkVisible/${path}`, \"internal\"), true),\n\t\t\t\tnotEqual(pathInModel(`isHeaderDPLinkVisible/${path}`, \"internal\"), true)\n\t\t\t)\n\t\t);\n\t},\n\n\t/**\n\t * Converts object to string(different from JSON.stringify or.toString).\n\t * @param oParams Some object\n\t * @returns - Object string\n\t */\n\tobjectToString: function (oParams: Record<string, unknown>): string {\n\t\tlet iNumberOfKeys = Object.keys(oParams).length,\n\t\t\tsParams = \"\";\n\n\t\tfor (const sKey in oParams) {\n\t\t\tlet sValue = oParams[sKey];\n\t\t\tif (sValue && typeof sValue === \"object\") {\n\t\t\t\tsValue = this.objectToString(sValue as Record<string, unknown>);\n\t\t\t}\n\t\t\tsParams += `${sKey}: ${sValue}`;\n\t\t\tif (iNumberOfKeys > 1) {\n\t\t\t\t--iNumberOfKeys;\n\t\t\t\tsParams += \", \";\n\t\t\t}\n\t\t}\n\n\t\treturn `{ ${sParams}}`;\n\t},\n\n\t/**\n\t * Removes escape characters (\\) from an expression.\n\t * @param sExpression An expression with escape characters\n\t * @returns Expression string without escape characters or undefined\n\t */\n\tremoveEscapeCharacters: function (sExpression?: string): string | undefined {\n\t\treturn sExpression ? sExpression.replace(/\\\\?\\\\([{}])/g, \"$1\") : undefined;\n\t},\n\n\t/**\n\t * Makes updates to a stringified object so that it works properly in a template by adding ui5Object:true.\n\t * @param sStringified\n\t * @returns The updated string representation of the object\n\t */\n\tstringifyObject: function (sStringified: string): string | undefined {\n\t\tif (!sStringified || sStringified === \"{}\") {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst oObject = JSON.parse(sStringified);\n\t\t\tif (typeof oObject === \"object\" && !Array.isArray(oObject)) {\n\t\t\t\tconst oUI5Object = {\n\t\t\t\t\tui5object: true\n\t\t\t\t};\n\t\t\t\tObject.assign(oUI5Object, oObject);\n\t\t\t\treturn JSON.stringify(oUI5Object);\n\t\t\t} else {\n\t\t\t\tconst sType = Array.isArray(oObject) ? \"Array\" : typeof oObject;\n\t\t\t\tLog.error(`Unexpected object type in stringifyObject (${sType}) - only works with object`);\n\t\t\t\tthrow new Error(\"stringifyObject only works with objects!\");\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create a string representation of the given data, taking care that it is not treated as a binding expression.\n\t * @param vData The data to stringify\n\t * @returns The string representation of the data.\n\t */\n\tstringifyCustomData: function (vData: object | string | undefined): string {\n\t\tconst oObject: { ui5object: true; customData?: unknown } = {\n\t\t\tui5object: true\n\t\t};\n\t\toObject[\"customData\"] = vData instanceof Context ? vData.getObject() : vData;\n\t\treturn JSON.stringify(oObject);\n\t},\n\n\t/**\n\t * Parses the given data, potentially unwraps the data.\n\t * @param vData The data to parse\n\t * @param vData.ui5object\n\t * @param vData.customData\n\t * @returns The result of the data parsing\n\t */\n\tparseCustomData: function (vData?: string | { ui5object: true; customData?: unknown }): unknown {\n\t\tvData = typeof vData === \"string\" ? JSON.parse(vData) : vData;\n\t\tif (vData && vData.hasOwnProperty(\"customData\")) {\n\t\t\treturn (vData as { ui5object: true; customData?: unknown })[\"customData\"];\n\t\t}\n\t\treturn vData;\n\t},\n\tgetContextPath: function (oValue: unknown, oInterface: ComputedAnnotationInterface): string {\n\t\tconst sPath = oInterface && oInterface.context && oInterface.context.getPath();\n\t\treturn sPath[sPath.length - 1] === \"/\" ? sPath.slice(0, -1) : sPath;\n\t},\n\t/**\n\t * Returns a stringified JSON object containing  Presentation Variant sort conditions.\n\t * @param oContext\n\t * @param oContext.getPath\n\t * @param oContext.getModel\n\t * @param oPresentationVariant Presentation variant Annotation\n\t * @param sPresentationVariantPath\n\t * @returns Stringified JSON object\n\t */\n\tgetSortConditions: function (\n\t\toContext: { getPath(num: number): string; getModel(num: number): ODataMetaModel },\n\t\toPresentationVariant: MetaModelType<PresentationVariant>,\n\t\tsPresentationVariantPath: string\n\t): string | undefined {\n\t\tif (\n\t\t\toPresentationVariant &&\n\t\t\tCommonHelper._isPresentationVariantAnnotation(sPresentationVariantPath) &&\n\t\t\toPresentationVariant.SortOrder\n\t\t) {\n\t\t\tconst aSortConditions: { sorters: { name?: string; descending?: boolean }[] } = {\n\t\t\t\tsorters: []\n\t\t\t};\n\n\t\t\tconst sEntityPath = oContext.getPath(0).split(\"@\")[0];\n\t\t\toPresentationVariant.SortOrder.forEach(function (oCondition = {}) {\n\t\t\t\tlet oSortProperty: string | undefined;\n\t\t\t\tconst oSorter: { name?: string; descending?: boolean } = {};\n\t\t\t\tif (oCondition.DynamicProperty) {\n\t\t\t\t\toSortProperty = oContext.getModel(0).getObject(sEntityPath + oCondition.DynamicProperty.$AnnotationPath)?.Name;\n\t\t\t\t} else if (oCondition.Property) {\n\t\t\t\t\toSortProperty = oCondition.Property.$PropertyPath;\n\t\t\t\t}\n\t\t\t\tif (oSortProperty) {\n\t\t\t\t\toSorter.name = oSortProperty;\n\t\t\t\t\toSorter.descending = !!oCondition.Descending;\n\t\t\t\t\taSortConditions.sorters.push(oSorter);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Please define the right path to the sort property\");\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn JSON.stringify(aSortConditions);\n\t\t}\n\t\treturn undefined;\n\t},\n\t_isPresentationVariantAnnotation: function (annotationPath: string): boolean {\n\t\treturn (\n\t\t\tannotationPath.includes(`@${UIAnnotationTerms.PresentationVariant}`) ||\n\t\t\tannotationPath.includes(`@${UIAnnotationTerms.SelectionPresentationVariant}`)\n\t\t);\n\t},\n\tcreatePresentationPathContext: function (oPresentationContext: Context): Context {\n\t\tconst aPaths = oPresentationContext.getPath().split(\"@\") || [];\n\t\tconst oModel = oPresentationContext.getModel();\n\t\tif (aPaths.length && aPaths[aPaths.length - 1].includes(\"com.sap.vocabularies.UI.v1.SelectionPresentationVariant\")) {\n\t\t\tconst sPath = oPresentationContext.getPath().split(\"/PresentationVariant\")[0];\n\t\t\treturn oModel.createBindingContext(`${sPath}@sapui.name`);\n\t\t}\n\t\treturn oModel.createBindingContext(`${oPresentationContext.getPath()}@sapui.name`);\n\t},\n\tgetPressHandlerForDataFieldForIBN: function (\n\t\toDataField: DataFieldForIntentBasedNavigation,\n\t\tsContext?: string,\n\t\tbNavigateWithConfirmationDialog?: boolean,\n\t\tforContextMenu = false\n\t): string | undefined {\n\t\tif (!oDataField) return undefined;\n\t\tconst mNavigationParameters: {\n\t\t\tnavigationContexts?: string;\n\t\t\tlabel?: string;\n\t\t\tapplicableContexts?: string;\n\t\t\tnotApplicableContexts?: string;\n\t\t\tsemanticObjectMapping?: string;\n\t\t} = {\n\t\t\tnavigationContexts: sContext ? sContext : \"${$source>/}.getBindingContext()\"\n\t\t};\n\t\tif (oDataField.RequiresContext && !oDataField.Inline && bNavigateWithConfirmationDialog) {\n\t\t\tconst applicableProperty = !forContextMenu ? \"aApplicable\" : \"aApplicableForContextMenu\";\n\t\t\tconst notApplicableProperty = !forContextMenu ? \"aNotApplicable\" : \"aNotApplicableForContextMenu\";\n\t\t\tmNavigationParameters.applicableContexts = `\\${internal>ibn/${oDataField.SemanticObject}-${oDataField.Action}/${applicableProperty}/}`;\n\t\t\tmNavigationParameters.notApplicableContexts = `\\${internal>ibn/${oDataField.SemanticObject}-${oDataField.Action}/${notApplicableProperty}/}`;\n\t\t\tmNavigationParameters.label = this.addSingleQuotes(oDataField.Label as string, true);\n\t\t}\n\t\tif (oDataField.Mapping) {\n\t\t\tmNavigationParameters.semanticObjectMapping = this.addSingleQuotes(JSON.stringify(oDataField.Mapping));\n\t\t}\n\t\treturn this.generateFunction(\n\t\t\tbNavigateWithConfirmationDialog ? \"._intentBasedNavigation.navigateWithConfirmationDialog\" : \"._intentBasedNavigation.navigate\",\n\t\t\tthis.addSingleQuotes(oDataField.SemanticObject as unknown as string),\n\t\t\tthis.addSingleQuotes(oDataField.Action as unknown as string),\n\t\t\tthis.objectToString(mNavigationParameters),\n\t\t\t\"${$source>/}\"\n\t\t);\n\t},\n\tgetEntitySet: function (oContext: Context): string {\n\t\tconst sPath = oContext.getPath();\n\t\treturn ModelHelper.getEntitySetPath(sPath);\n\t},\n\n\t/**\n\t * Method to do the calculation of criticality in case CriticalityCalculation present in the annotation\n\t *\n\t * The calculation is done by comparing a value to the threshold values relevant for the specified improvement direction.\n\t * For improvement direction Target, the criticality is calculated using both low and high threshold values. It will be\n\t *\n\t * - Positive if the value is greater than or equal to AcceptanceRangeLowValue and lower than or equal to AcceptanceRangeHighValue\n\t * - Neutral if the value is greater than or equal to ToleranceRangeLowValue and lower than AcceptanceRangeLowValue OR greater than AcceptanceRangeHighValue and lower than or equal to ToleranceRangeHighValue\n\t * - Critical if the value is greater than or equal to DeviationRangeLowValue and lower than ToleranceRangeLowValue OR greater than ToleranceRangeHighValue and lower than or equal to DeviationRangeHighValue\n\t * - Negative if the value is lower than DeviationRangeLowValue or greater than DeviationRangeHighValue\n\t *\n\t * For improvement direction Minimize, the criticality is calculated using the high threshold values. It is\n\t * - Positive if the value is lower than or equal to AcceptanceRangeHighValue\n\t * - Neutral if the value is greater than AcceptanceRangeHighValue and lower than or equal to ToleranceRangeHighValue\n\t * - Critical if the value is greater than ToleranceRangeHighValue and lower than or equal to DeviationRangeHighValue\n\t * - Negative if the value is greater than DeviationRangeHighValue\n\t *\n\t * For improvement direction Maximize, the criticality is calculated using the low threshold values. It is\n\t *\n\t * - Positive if the value is greater than or equal to AcceptanceRangeLowValue\n\t * - Neutral if the value is less than AcceptanceRangeLowValue and greater than or equal to ToleranceRangeLowValue\n\t * - Critical if the value is lower than ToleranceRangeLowValue and greater than or equal to DeviationRangeLowValue\n\t * - Negative if the value is lower than DeviationRangeLowValue\n\t *\n\t * Thresholds are optional. For unassigned values, defaults are determined in this order:\n\t *\n\t * - For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)\n\t * - For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue\n\t * - For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue.\n\t * @param sImprovementDirection ImprovementDirection to be used for creating the criticality binding\n\t * @param sValue Value from Datapoint to be measured\n\t * @param sDeviationLow ExpressionBinding for Lower Deviation level\n\t * @param sToleranceLow ExpressionBinding for Lower Tolerance level\n\t * @param sAcceptanceLow ExpressionBinding for Lower Acceptance level\n\t * @param sAcceptanceHigh ExpressionBinding for Higher Acceptance level\n\t * @param sToleranceHigh ExpressionBinding for Higher Tolerance level\n\t * @param sDeviationHigh ExpressionBinding for Higher Deviation level\n\t * @returns Returns criticality calculation as expression binding\n\t */\n\tgetCriticalityCalculationBinding: function (\n\t\tsImprovementDirection: string,\n\t\tsValue: string,\n\t\tsDeviationLow: string | number,\n\t\tsToleranceLow: string | number,\n\t\tsAcceptanceLow: string | number,\n\t\tsAcceptanceHigh: string | number,\n\t\tsToleranceHigh: string | number,\n\t\tsDeviationHigh: string | number\n\t): string {\n\t\tlet sCriticalityExpression: typeof ValueColor | string = ValueColor.Neutral; // Default Criticality State\n\n\t\tsValue = `%${sValue}`;\n\n\t\t// Setting Unassigned Values\n\t\tsDeviationLow = sDeviationLow || -Infinity;\n\t\tsToleranceLow = sToleranceLow || sDeviationLow;\n\t\tsAcceptanceLow = sAcceptanceLow || sToleranceLow;\n\t\tsDeviationHigh = sDeviationHigh || Infinity;\n\t\tsToleranceHigh = sToleranceHigh || sDeviationHigh;\n\t\tsAcceptanceHigh = sAcceptanceHigh || sToleranceHigh;\n\n\t\t// Dealing with Decimal and Path based bingdings\n\t\tsDeviationLow = sDeviationLow && (+sDeviationLow ? +sDeviationLow : `%${sDeviationLow}`);\n\t\tsToleranceLow = sToleranceLow && (+sToleranceLow ? +sToleranceLow : `%${sToleranceLow}`);\n\t\tsAcceptanceLow = sAcceptanceLow && (+sAcceptanceLow ? +sAcceptanceLow : `%${sAcceptanceLow}`);\n\t\tsAcceptanceHigh = sAcceptanceHigh && (+sAcceptanceHigh ? +sAcceptanceHigh : `%${sAcceptanceHigh}`);\n\t\tsToleranceHigh = sToleranceHigh && (+sToleranceHigh ? +sToleranceHigh : `%${sToleranceHigh}`);\n\t\tsDeviationHigh = sDeviationHigh && (+sDeviationHigh ? +sDeviationHigh : `%${sDeviationHigh}`);\n\n\t\t// Creating runtime expression binding from criticality calculation for Criticality State\n\t\tif (sImprovementDirection.includes(\"Minimize\")) {\n\t\t\tsCriticalityExpression =\n\t\t\t\t\"{= \" +\n\t\t\t\tsValue +\n\t\t\t\t\" <= \" +\n\t\t\t\tsAcceptanceHigh +\n\t\t\t\t\" ? '\" +\n\t\t\t\tValueColor.Good +\n\t\t\t\t\"' : \" +\n\t\t\t\tsValue +\n\t\t\t\t\" <= \" +\n\t\t\t\tsToleranceHigh +\n\t\t\t\t\" ? '\" +\n\t\t\t\tValueColor.Neutral +\n\t\t\t\t\"' : \" +\n\t\t\t\t\"(\" +\n\t\t\t\tsDeviationHigh +\n\t\t\t\t\" && \" +\n\t\t\t\tsValue +\n\t\t\t\t\" <= \" +\n\t\t\t\tsDeviationHigh +\n\t\t\t\t\") ? '\" +\n\t\t\t\tValueColor.Critical +\n\t\t\t\t\"' : '\" +\n\t\t\t\tValueColor.Error +\n\t\t\t\t\"' }\";\n\t\t} else if (sImprovementDirection.includes(\"Maximize\")) {\n\t\t\tsCriticalityExpression =\n\t\t\t\t\"{= \" +\n\t\t\t\tsValue +\n\t\t\t\t\" >= \" +\n\t\t\t\tsAcceptanceLow +\n\t\t\t\t\" ? '\" +\n\t\t\t\tValueColor.Good +\n\t\t\t\t\"' : \" +\n\t\t\t\tsValue +\n\t\t\t\t\" >= \" +\n\t\t\t\tsToleranceLow +\n\t\t\t\t\" ? '\" +\n\t\t\t\tValueColor.Neutral +\n\t\t\t\t\"' : \" +\n\t\t\t\t\"(\" +\n\t\t\t\tsDeviationLow +\n\t\t\t\t\" && \" +\n\t\t\t\tsValue +\n\t\t\t\t\" >= \" +\n\t\t\t\tsDeviationLow +\n\t\t\t\t\") ? '\" +\n\t\t\t\tValueColor.Critical +\n\t\t\t\t\"' : '\" +\n\t\t\t\tValueColor.Error +\n\t\t\t\t\"' }\";\n\t\t} else if (sImprovementDirection.includes(\"Target\")) {\n\t\t\tsCriticalityExpression =\n\t\t\t\t\"{= (\" +\n\t\t\t\tsValue +\n\t\t\t\t\" <= \" +\n\t\t\t\tsAcceptanceHigh +\n\t\t\t\t\" && \" +\n\t\t\t\tsValue +\n\t\t\t\t\" >= \" +\n\t\t\t\tsAcceptanceLow +\n\t\t\t\t\") ? '\" +\n\t\t\t\tValueColor.Good +\n\t\t\t\t\"' : \" +\n\t\t\t\t\"((\" +\n\t\t\t\tsValue +\n\t\t\t\t\" >= \" +\n\t\t\t\tsToleranceLow +\n\t\t\t\t\" && \" +\n\t\t\t\tsValue +\n\t\t\t\t\" < \" +\n\t\t\t\tsAcceptanceLow +\n\t\t\t\t\") || (\" +\n\t\t\t\tsValue +\n\t\t\t\t\" > \" +\n\t\t\t\tsAcceptanceHigh +\n\t\t\t\t\" && \" +\n\t\t\t\tsValue +\n\t\t\t\t\" <= \" +\n\t\t\t\tsToleranceHigh +\n\t\t\t\t\")) ? '\" +\n\t\t\t\tValueColor.Neutral +\n\t\t\t\t\"' : \" +\n\t\t\t\t\"((\" +\n\t\t\t\tsDeviationLow +\n\t\t\t\t\" && (\" +\n\t\t\t\tsValue +\n\t\t\t\t\" >= \" +\n\t\t\t\tsDeviationLow +\n\t\t\t\t\") && (\" +\n\t\t\t\tsValue +\n\t\t\t\t\" < \" +\n\t\t\t\tsToleranceLow +\n\t\t\t\t\")) || ((\" +\n\t\t\t\tsValue +\n\t\t\t\t\" > \" +\n\t\t\t\tsToleranceHigh +\n\t\t\t\t\") && \" +\n\t\t\t\tsDeviationHigh +\n\t\t\t\t\" && (\" +\n\t\t\t\tsValue +\n\t\t\t\t\" <= \" +\n\t\t\t\tsDeviationHigh +\n\t\t\t\t\"))) ? '\" +\n\t\t\t\tValueColor.Critical +\n\t\t\t\t\"' : '\" +\n\t\t\t\tValueColor.Error +\n\t\t\t\t\"' }\";\n\t\t} else {\n\t\t\tLog.warning(\"Case not supported, returning the default Value Neutral\");\n\t\t}\n\n\t\treturn sCriticalityExpression;\n\t},\n\t/**\n\t * To fetch measure attribute index.\n\t * @param iMeasure Chart Annotations\n\t * @param oChartAnnotations Chart Annotations\n\t * @returns MeasureAttribute index.\n\t * @private\n\t */\n\tgetMeasureAttributeIndex: function (iMeasure: number, oChartAnnotations: MetaModelType<Chart>): number {\n\t\tlet aMeasures, sMeasurePropertyPath;\n\t\tif (oChartAnnotations?.Measures?.length && oChartAnnotations?.Measures?.length > 0) {\n\t\t\taMeasures = oChartAnnotations.Measures;\n\t\t\tsMeasurePropertyPath = aMeasures[iMeasure].$PropertyPath;\n\t\t} else if (oChartAnnotations?.DynamicMeasures?.length && oChartAnnotations?.DynamicMeasures?.length > 0) {\n\t\t\taMeasures = oChartAnnotations.DynamicMeasures;\n\t\t\tsMeasurePropertyPath = aMeasures[iMeasure].$AnnotationPath;\n\t\t}\n\t\tlet bMeasureAttributeExists;\n\t\tconst aMeasureAttributes = oChartAnnotations.MeasureAttributes;\n\t\tlet iMeasureAttribute = -1;\n\t\tconst fnCheckMeasure = function (\n\t\t\tsMeasurePath: string | undefined,\n\t\t\toMeasureAttribute: MetaModelType<ChartMeasureAttributeType>,\n\t\t\tindex: number\n\t\t): boolean {\n\t\t\tif (oMeasureAttribute) {\n\t\t\t\tif (oMeasureAttribute.Measure && oMeasureAttribute.Measure.$PropertyPath === sMeasurePath) {\n\t\t\t\t\tiMeasureAttribute = index;\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (oMeasureAttribute.DynamicMeasure && oMeasureAttribute.DynamicMeasure.$AnnotationPath === sMeasurePath) {\n\t\t\t\t\tiMeasureAttribute = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (aMeasureAttributes) {\n\t\t\tbMeasureAttributeExists = aMeasureAttributes.some(fnCheckMeasure.bind(null, sMeasurePropertyPath));\n\t\t}\n\t\treturn bMeasureAttributeExists && iMeasureAttribute > -1 ? iMeasureAttribute : -1;\n\t},\n\n\tgetMeasureAttribute: async function (oContext: Context): Promise<string | undefined> {\n\t\tconst oMetaModel = oContext.getModel() as ODataMetaModel,\n\t\t\tsChartAnnotationPath = oContext.getPath();\n\t\treturn oMetaModel.requestObject(sChartAnnotationPath).then(function (oChartAnnotations: MetaModelType<Chart>) {\n\t\t\tconst aMeasureAttributes = oChartAnnotations.MeasureAttributes,\n\t\t\t\tiMeasureAttribute = CommonHelper.getMeasureAttributeIndex(0, oChartAnnotations);\n\t\t\tconst sMeasureAttributePath =\n\t\t\t\tiMeasureAttribute > -1 && aMeasureAttributes?.[iMeasureAttribute] && aMeasureAttributes[iMeasureAttribute].DataPoint\n\t\t\t\t\t? `${sChartAnnotationPath}/MeasureAttributes/${iMeasureAttribute}/`\n\t\t\t\t\t: undefined;\n\t\t\tif (sMeasureAttributePath === undefined) {\n\t\t\t\tLog.warning(\"DataPoint missing for the measure\");\n\t\t\t}\n\t\t\treturn sMeasureAttributePath ? `${sMeasureAttributePath}DataPoint/$AnnotationPath/` : sMeasureAttributePath;\n\t\t});\n\t},\n\t/**\n\t * This function returns the measureAttribute for the measure.\n\t * @param oContext Context to the measure annotation\n\t * @returns Path to the measureAttribute of the measure\n\t */\n\tgetMeasureAttributeForMeasure: function (oContext: Context): string | undefined {\n\t\tconst oMetaModel = oContext.getModel() as ODataMetaModel,\n\t\t\tsMeasurePath = oContext.getPath(),\n\t\t\tsChartAnnotationPath = sMeasurePath.substring(0, sMeasurePath.lastIndexOf(\"Measure\")),\n\t\t\tiMeasure = sMeasurePath.replace(/.*\\//, \"\");\n\n\t\tconst oChartAnnotations = oMetaModel.getObject(sChartAnnotationPath);\n\t\tconst aMeasureAttributes = oChartAnnotations.MeasureAttributes,\n\t\t\tiMeasureAttribute = CommonHelper.getMeasureAttributeIndex(iMeasure as unknown as number, oChartAnnotations);\n\t\tconst sMeasureAttributePath =\n\t\t\tiMeasureAttribute > -1 && aMeasureAttributes[iMeasureAttribute] && aMeasureAttributes[iMeasureAttribute].DataPoint\n\t\t\t\t? `${sChartAnnotationPath}MeasureAttributes/${iMeasureAttribute}/`\n\t\t\t\t: undefined;\n\t\tif (sMeasureAttributePath === undefined) {\n\t\t\tLog.warning(\"DataPoint missing for the measure\");\n\t\t}\n\t\treturn sMeasureAttributePath ? `${sMeasureAttributePath}DataPoint/$AnnotationPath/` : sMeasureAttributePath;\n\t},\n\t/**\n\t * Method to determine if the contained navigation property has a draft root/node parent entitySet.\n\t * @param oTargetCollectionContainsTarget Target collection has ContainsTarget property\n\t * @param oTableMetadata Table metadata for which draft support shall be checked\n\t * @param oTableMetadata.parentEntitySet\n\t * @param oTableMetadata.parentEntitySet.oModel\n\t * @param oTableMetadata.parentEntitySet.sPath\n\t * @returns Returns true if draft\n\t */\n\tisDraftParentEntityForContainment: function (\n\t\toTargetCollectionContainsTarget: object,\n\t\toTableMetadata: {\n\t\t\tparentEntitySet?: {\n\t\t\t\toModel: ODataMetaModel;\n\t\t\t\tsPath?: string;\n\t\t\t};\n\t\t}\n\t): boolean {\n\t\tif (oTargetCollectionContainsTarget) {\n\t\t\tif (oTableMetadata && oTableMetadata.parentEntitySet && oTableMetadata.parentEntitySet.sPath) {\n\t\t\t\tconst sParentEntitySetPath = oTableMetadata.parentEntitySet.sPath;\n\t\t\t\tconst oDraftRoot = oTableMetadata.parentEntitySet.oModel.getObject(\n\t\t\t\t\t`${sParentEntitySetPath}@com.sap.vocabularies.Common.v1.DraftRoot`\n\t\t\t\t);\n\t\t\t\tconst oDraftNode = oTableMetadata.parentEntitySet.oModel.getObject(\n\t\t\t\t\t`${sParentEntitySetPath}@com.sap.vocabularies.Common.v1.DraftNode`\n\t\t\t\t);\n\t\t\t\tif (oDraftRoot || oDraftNode) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Ensures the data is processed as defined in the template.\n\t * Since the property Data is of the type 'object', it may not be in the same order as required by the template.\n\t * @param dataElement The data that is currently being processed.\n\t * @returns The correct path according to the template.\n\t */\n\tgetDataFromTemplate: function (dataElement: Context): string {\n\t\tconst splitPath = dataElement.getPath().split(\"/\");\n\t\tconst dataKey = splitPath[splitPath.length - 1];\n\t\tconst connectedDataPath = `/${splitPath.slice(1, -2).join(\"/\")}/@`;\n\t\tconst connectedObject = dataElement.getObject(connectedDataPath);\n\t\tconst template = connectedObject.Template;\n\t\tconst splitTemp = template.split(\"}\");\n\t\tconst tempArray = [];\n\t\tfor (let i = 0; i < splitTemp.length - 1; i++) {\n\t\t\tconst key = splitTemp[i].split(\"{\")[1].trim();\n\t\t\ttempArray.push(key);\n\t\t}\n\t\tObject.keys(connectedObject.Data).forEach(function (sKey: string) {\n\t\t\tif (sKey.startsWith(\"$\")) {\n\t\t\t\tdelete connectedObject.Data[sKey];\n\t\t\t}\n\t\t});\n\t\tconst index = Object.keys(connectedObject.Data).indexOf(dataKey);\n\t\treturn `/${splitPath.slice(1, -2).join(\"/\")}/Data/${tempArray[index]}`;\n\t},\n\n\t/**\n\t * Checks if the end of the template has been reached.\n\t * @param target The target of the connected fields.\n\t * @param target.Template\n\t * @param target.Data\n\t * @param element The element that is currently being processed.\n\t * @returns True or False (depending on the template index).\n\t */\n\tnotLastIndex: function (target: { Template: string; Data: Record<string, unknown> }, element: object): boolean {\n\t\tconst template = target.Template;\n\t\tconst splitTemp = template.split(\"}\");\n\t\tconst tempArray: string[] = [];\n\t\tlet isLastIndex = false;\n\t\tfor (let i = 0; i < splitTemp.length - 1; i++) {\n\t\t\tconst dataKey = splitTemp[i].split(\"{\")[1].trim();\n\t\t\ttempArray.push(dataKey);\n\t\t}\n\n\t\ttempArray.forEach(function (templateInfo: string) {\n\t\t\tconst lastIndex = tempArray.length - 1;\n\t\t\tif (target.Data[templateInfo] === element && tempArray.indexOf(templateInfo) < lastIndex) {\n\t\t\t\tisLastIndex = true;\n\t\t\t}\n\t\t});\n\t\treturn isLastIndex;\n\t},\n\n\t/**\n\t * Determines the delimiter from the template.\n\t * @param template The template string.\n\t * @returns The delimiter in the template string.\n\t */\n\tgetDelimiter: function (template: string): string {\n\t\treturn template.split(\"}\")[1].split(\"{\")[0].trim();\n\t},\n\n\toMetaModel: undefined as ODataMetaModel | undefined,\n\tsetMetaModel: function (oMetaModel: ODataMetaModel): void {\n\t\tthis.oMetaModel = oMetaModel;\n\t},\n\n\tgetMetaModel: function (): ODataMetaModel {\n\t\treturn this.oMetaModel!;\n\t},\n\n\tgetParameters: function (oContext: Context, oInterface: ComputedAnnotationInterface): string[] {\n\t\tif (oContext) {\n\t\t\tconst oMetaModel = oInterface.context.getModel();\n\t\t\tconst sPath = oInterface.context.getPath();\n\t\t\tconst oParameterInfo = CommonUtils.getParameterInfo(oMetaModel, sPath);\n\t\t\tif (oParameterInfo.parameterProperties) {\n\t\t\t\treturn Object.keys(oParameterInfo.parameterProperties);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t},\n\n\t/**\n\t * Build an expression calling an action handler via the FPM helper's actionWrapper function\n\t *\n\t * This function assumes that the 'FPM.actionWrapper()' function is available at runtime.\n\t * @param oAction Action metadata\n\t * @param oAction.handlerModule Module containing the action handler method\n\t * @param oAction.handlerMethod Action handler method name\n\t * @param [oThis] `this` (if the function is called from a macro)\n\t * @param oThis.id The table's ID\n\t * @param forContextMenu Indicates if the action appears in the context menu. If false, the action appears in the table toolbar\n\t * @returns The action wrapper binding\texpression\n\t */\n\tbuildActionWrapper: function (\n\t\toAction: CustomAction,\n\t\toThis: { id?: string } | undefined,\n\t\tforContextMenu = false\n\t): CompiledBindingToolkitExpression {\n\t\tconst aParams: unknown[] = [ref(\"$event\"), oAction.handlerModule, oAction.handlerMethod];\n\n\t\tif (oThis && oThis.id) {\n\t\t\tconst internalModelPath = !forContextMenu ? \"${internal>selectedContexts}\" : \"${internal>contextmenu/selectedContexts}\";\n\t\t\tconst oAdditionalParams = { contexts: ref(internalModelPath) };\n\t\t\taParams.push(oAdditionalParams);\n\t\t}\n\t\treturn compileExpression(fn(\"FPM.actionWrapper\", aParams));\n\t},\n\t/**\n\t * Returns the value whether or not the element should be visible depending on the Hidden annotation.\n\t * It is inverted as the UI elements have a visible property instead of a hidden one.\n\t * @param dataFieldAnnotations The dataField object\n\t * @returns A path or a Boolean\n\t */\n\tgetHiddenPathExpression: function (dataFieldAnnotations: Record<string, { $Path?: string }>): string | boolean {\n\t\tif (dataFieldAnnotations[\"@com.sap.vocabularies.UI.v1.Hidden\"] !== null) {\n\t\t\tconst hidden = dataFieldAnnotations[\"@com.sap.vocabularies.UI.v1.Hidden\"];\n\t\t\treturn typeof hidden === \"object\" ? \"{= !${\" + hidden.$Path + \"} }\" : !hidden;\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t * Method to fetch the correct operators based on the filter restrictions that can be annotated on an entity set or a navigation property.\n\t * We return the correct operators based on the specified restriction and also check for the operators defined in the manifest to include or exclude them.\n\t * @param sProperty String name of the property\n\t * @param sEntitySetPath String path to the entity set\n\t * @param oContext Context used during templating\n\t * @param sType String data type od the property, for example edm.Date\n\t * @param bUseSemanticDateRange Boolean passed from the manifest for semantic date range\n\t * @param settings Stringified object of the property settings or property settings as a whole\n\t * @returns An array of strings representing operators for filtering\n\t */\n\tgetOperatorsForProperty: function (\n\t\tsProperty: string,\n\t\tsEntitySetPath: string,\n\t\toContext: ODataMetaModel,\n\t\tsType?: string,\n\t\tbUseSemanticDateRange?: boolean | string,\n\t\tsettings?: FilterSettings | string\n\t): string[] {\n\t\tconst oFilterRestrictions = CommonUtils.getFilterRestrictionsByPath(sEntitySetPath, oContext);\n\t\tconst aEqualsOps = [\"EQ\"];\n\t\tconst aSingleRangeOps = [\"EQ\", \"GE\", \"LE\", \"LT\", \"GT\", \"BT\", \"NOTLE\", \"NOTLT\", \"NOTGE\", \"NOTGT\"];\n\t\tconst aSingleRangeDTBasicOps = [\"EQ\", \"BT\"];\n\t\tconst aMultiRangeOps = [\"EQ\", \"GE\", \"LE\", \"LT\", \"GT\", \"BT\", \"NE\", \"NOTBT\", \"NOTLE\", \"NOTLT\", \"NOTGE\", \"NOTGT\"];\n\t\tconst aSearchExpressionOps = [\"Contains\", \"NotContains\", \"StartsWith\", \"NotStartsWith\", \"EndsWith\", \"NotEndsWith\"];\n\t\tconst aBasicSemanticDateOps = SemanticDateOperators.getBasicSemanticDateOperations();\n\t\tconst bSemanticDateRange = bUseSemanticDateRange === \"true\" || bUseSemanticDateRange === true;\n\t\tlet aSemanticDateOps: string[] = [];\n\t\tconst oSettings = settings && typeof settings === \"string\" ? JSON.parse(settings).customData : settings;\n\n\t\tif ((oContext.getObject(`${sEntitySetPath}/@com.sap.vocabularies.Common.v1.ResultContext`) as unknown) === true) {\n\t\t\treturn aEqualsOps;\n\t\t}\n\n\t\tif (oSettings && oSettings.operatorConfiguration && oSettings.operatorConfiguration.length > 0) {\n\t\t\taSemanticDateOps = SemanticDateOperators.getFilterOperations(oSettings.operatorConfiguration, sType);\n\t\t} else {\n\t\t\taSemanticDateOps = DefaultSemanticDateOperators.getSemanticDateOperations(sType);\n\t\t}\n\t\t// Get the default Operators for this Property Type\n\t\tconst aDefaultOperators = _getDefaultOperators(sType);\n\t\tlet supportedOperators = aDefaultOperators;\n\t\tif (bSemanticDateRange) {\n\t\t\tconst extendedSemanticDateOperators = ExtendedSemanticDateOperators.getSemanticDateOperations();\n\t\t\tsupportedOperators = [...aBasicSemanticDateOps, ...aDefaultOperators, ...extendedSemanticDateOperators];\n\t\t}\n\n\t\tlet restrictions: string[] = [];\n\n\t\t// Is there a Filter Restriction defined for this property?\n\t\tif (\n\t\t\toFilterRestrictions &&\n\t\t\toFilterRestrictions.FilterAllowedExpressions &&\n\t\t\toFilterRestrictions.FilterAllowedExpressions[sProperty]\n\t\t) {\n\t\t\t// Extending the default operators list with Semantic Date options DATERANGE, DATE, FROM and TO\n\t\t\tconst sAllowedExpression = CommonUtils.getSpecificAllowedExpression(oFilterRestrictions.FilterAllowedExpressions[sProperty]);\n\t\t\t// In case more than one Allowed Expressions has been defined for a property\n\t\t\t// choose the most restrictive Allowed Expression\n\n\t\t\t// MultiValue has same Operator as SingleValue, but there can be more than one (maxConditions)\n\t\t\tswitch (sAllowedExpression) {\n\t\t\t\tcase \"SingleValue\":\n\t\t\t\t\tconst singleValueDateOps = DefaultSemanticDateOperators.getSingleValueDateOperations();\n\t\t\t\t\tconst aSingleValueOps = sType === \"Edm.Date\" && bSemanticDateRange ? singleValueDateOps : aEqualsOps;\n\t\t\t\t\trestrictions = _getRestrictions(supportedOperators, aSingleValueOps);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"MultiValue\":\n\t\t\t\t\tconst multiValueOperators = [...aEqualsOps, \"Empty\", \"NotEmpty\"];\n\t\t\t\t\trestrictions = _getRestrictions(supportedOperators, multiValueOperators);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SingleRange\":\n\t\t\t\t\tlet aExpressionOps: string[];\n\t\t\t\t\tif (bSemanticDateRange) {\n\t\t\t\t\t\tif (sType === \"Edm.Date\") {\n\t\t\t\t\t\t\taExpressionOps = aSemanticDateOps;\n\t\t\t\t\t\t} else if (sType === \"Edm.DateTimeOffset\") {\n\t\t\t\t\t\t\taExpressionOps = aSemanticDateOps;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taExpressionOps = aSingleRangeOps;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (sType === \"Edm.DateTimeOffset\") {\n\t\t\t\t\t\taExpressionOps = aSingleRangeDTBasicOps;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taExpressionOps = aSingleRangeOps;\n\t\t\t\t\t}\n\t\t\t\t\tconst sOperators = _getRestrictions(supportedOperators, aExpressionOps);\n\t\t\t\t\trestrictions = sOperators;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"MultiRange\":\n\t\t\t\t\trestrictions = _getRestrictions(supportedOperators, aMultiRangeOps);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SearchExpression\":\n\t\t\t\t\trestrictions = _getRestrictions(supportedOperators, aSearchExpressionOps);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"MultiRangeOrSearchExpression\":\n\t\t\t\t\trestrictions = _getRestrictions(supportedOperators, aSearchExpressionOps.concat(aMultiRangeOps));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// In case AllowedExpressions is not recognised, undefined in return results in the default set of\n\t\t\t// operators for the type.\n\t\t}\n\t\treturn restrictions;\n\t},\n\tgetOperatorsForDateProperty: function (propertyType: string): string[] {\n\t\t// In case AllowedExpressions is not provided for type Edm.Date then all the default\n\t\t// operators for the type should be returned excluding semantic operators from the list.\n\t\tconst aDefaultOperators = _getDefaultOperators(propertyType);\n\t\tconst aMultiRangeOps = [\"EQ\", \"GE\", \"LE\", \"LT\", \"GT\", \"BT\", \"NE\", \"NOTBT\", \"NOTLE\", \"NOTLT\", \"NOTGE\", \"NOTGT\"];\n\t\treturn _getRestrictions(aDefaultOperators, aMultiRangeOps);\n\t}\n};\n(CommonHelper.getSortConditions as { requiresIContext?: boolean }).requiresIContext = true;\n\nexport default CommonHelper;\n"],"mappings":";;;;;;;;;;;;;;;;;EAiCA,SAASA,gBAAgBA,CAACC,WAAqB,EAAEC,cAAwB,EAAY;IACpF;IACA;IACA,OAAOD,WAAW,CAACE,MAAM,CAAC,UAAUC,QAAQ,EAAE;MAC7C,OAAOF,cAAc,CAACG,QAAQ,CAACD,QAAQ,CAAC;IACzC,CAAC,CAAC;EACH;EAEA,SAASE,oBAAoBA,CAACC,aAAsB,EAAY;IAC/D;IACA;IACA,MAAMC,UAAU,GAAGC,OAAO,CAACC,oBAAoB,CAACH,aAAa,CAAC;IAC9D;IACA,MAAMI,SAAS,GAAGF,OAAO,CAACG,WAAW,CAACJ,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,OAAOK,kBAAkB,CAACC,mBAAmB,CAACH,SAAS,CAAC;EACzD;EAEA,MAAMI,UAAU,GAAGC,QAAQ,CAACD,UAAU;EACtC,MAAME,YAAY,GAAG;IACpBC,YAAY,EAAE,SAAAA,CAAUC,IAAa,EAAU;MAC9C,OAAOA,IAAI,CAACC,SAAS,CAAC,CAAC;IACxB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACCC,oBAAoB,EAAE,SAAAA,CAAUC,MAAc,EAAEC,UAAuC,EAAU;MAChG,MAAMC,MAAM,GAAGD,UAAU,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAC;QAC3CC,aAAa,GAAGJ,UAAU,CAACE,OAAO,CAACG,OAAO,CAAC,CAAC;QAC5CC,YAAY,GAAGL,MAAM,CAACJ,SAAS,CAAC,GAAGO,aAAa,GAAG,CAAC;QACpDG,YAAY,GAAGD,YAAY,CAAC,8CAA8C,CAAC;QAC3EE,SAAS,GAAGF,YAAY,CAAC,8BAA8B,CAAC;QACxDG,QAAQ,GAAGH,YAAY,CAAC,6BAA6B,CAAC;MAEvD,IAAII,SAAiC,GAAGC,aAAa,CAACC,QAAQ;MAE9D,IAAIJ,SAAS,IAAIC,QAAQ,EAAE;QAC1BC,SAAS,GAAGC,aAAa,CAACE,QAAQ;MACnC,CAAC,MAAM,IAAIN,YAAY,EAAE;QACxB,IAAIA,YAAY,CAACO,WAAW,EAAE;UAC7B,IAAIP,YAAY,CAACO,WAAW,KAAK,0DAA0D,EAAE;YAC5FJ,SAAS,GAAGC,aAAa,CAACE,QAAQ;UACnC;UACA,IACCN,YAAY,CAACO,WAAW,KAAK,8DAA8D,IAC3FP,YAAY,CAACO,WAAW,KAAK,wDAAwD,EACpF;YACDJ,SAAS,GAAGC,aAAa,CAACI,QAAQ;UACnC;QACD;QACA,IAAIR,YAAY,CAACS,KAAK,EAAE;UACvBN,SAAS,GACR,OAAO,GACPH,YAAY,CAACS,KAAK,GAClB,aAAa,GACbT,YAAY,CAACS,KAAK,GAClB,aAAa,GACbL,aAAa,CAACI,QAAQ,GACtB,OAAO,GACPJ,aAAa,CAACE,QAAQ,GACtB,QAAQ,GACRF,aAAa,CAACC,QAAQ,GACtB,IAAI;QACN;MACD;MAEA,OAAOF,SAAS;IACjB,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;IACCO,WAAW,EAAE,SAAAA,CAAUlB,MAAe,EAAEC,UAAuC,EAAsB;MACpG,OAAQA,UAAU,IAAIA,UAAU,CAACE,OAAO,IAAIF,UAAU,CAACE,OAAO,CAACG,OAAO,CAAC,CAAC,IAAKa,SAAS;IACvF,CAAC;IACDC,cAAc,EAAE,SAAAA,CAAUpB,MAAe,EAAEC,UAAuC,EAAU;MAC3FoB,YAAY,CAACpB,UAAU,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;MAC3C,OAAOH,UAAU,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACkB,KAAK,CAAC,CAAC;IAC7C,CAAC;IACDC,SAAS,EAAE,SAAAA,CAAA,EAAqB;MAC/B,OAAOC,MAAM,CAACC,MAAM,CAACC,OAAO,KAAK,IAAI;IACtC,CAAC;IACDC,uBAAuB,EAAE,SAAAA,CAAUxB,OAAgB,EAAEyB,aAAsB,EAAU;MACpF,IAAIC,KAAK,GAAG1B,OAAO,CAACG,OAAO,CAAC,CAAC;MAC7B,IACEH,OAAO,CAACL,SAAS,CAAC,OAAO,CAAC,KAA2B,WAAW,IAChEK,OAAO,CAACL,SAAS,CAAC,iBAAiB,CAAC,KAA4B,IAAI,EACpE;QACD,OAAO+B,KAAK;MACb;MAEA,MAAMC,KAAK,GAAG3B,OAAO,CAACC,QAAQ,CAAC,CAAgC;MAC/D,MAAM2B,SAAS,GAAGD,KAAK,CAACE,GAAG,CAAiB,sCAAsC,CAAC,GAAGF,KAAK,GAAGA,KAAK,CAACG,YAAY,CAAC,CAAC;MAClHJ,KAAK,GAAGE,SAAS,CAACb,WAAW,CAACW,KAAK,CAAC;;MAEpC;MACA,MAAMK,MAAM,GAAGL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAACtD,MAAM,CAAC,UAAUuD,KAAa,EAAW;QACxE,OAAO,CAAC,CAACA,KAAK,IAAIA,KAAK,IAAI,OAAO;MACnC,CAAC,CAAC,CAAC,CAAC;MACJ,MAAMC,SAAS,GAAG,IAAIH,MAAM,CAAC,CAAC,CAAC,EAAE;MACjC,IAAIA,MAAM,CAACI,MAAM,KAAK,CAAC,EAAE;QACxB,OAAOD,SAAS;MACjB;MACA,MAAME,oBAAoB,GAAGX,aAAa,KAAKT,SAAS,GAAGe,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,8BAA8B,CAAC,GAAGb,aAAa;MAC/H,OAAO,GAAGS,SAAS,+BAA+BE,oBAAoB,EAAE,CAAC,CAAC;IAC3E,CAAC;IAEDG,oBAAoB,EAAE,SAAAA,CACrBvC,OAAgB,EAChBwC,UAA0C,EACG;MAC7C,MAAMzC,MAAM,GAAGC,OAAO,CAACC,QAAQ,CAAC,CAAmB;QAClDC,aAAa,GAAGF,OAAO,CAACG,OAAO,CAAC,CAAC;QACjC;QACAsC,qBAAqB,GAAGjD,YAAY,CAACkD,0BAA0B,CAAC3C,MAAM,EAAEG,aAAa,CAAC;QACtFyC,SAAS,GAAGzC,aAAa,CAAC0C,OAAO,CAAC,GAAGH,qBAAqB,GAAG,EAAE,EAAE,CAAC;MAEnE,IACCD,UAAU,KACTA,UAAU,CAACK,KAAK,KAAK,+CAA+C,IACpEL,UAAU,CAACK,KAAK,KAAK,8DAA8D,CAAC,EACpF;QACD,OAAO,KAAK;MACb;MAEA,OAAON,oBAAoB,CAACxC,MAAM,EAAE0C,qBAAqB,EAAEE,SAAS,CAAC;IACtE,CAAC;IAEDD,0BAA0B,EAAE,SAAAA,CAAU3C,MAAsB,EAAEG,aAAqB,EAAU;MAC5F,IAAI4C,OAAO;MACX,IAAIC,eAAe,GAAG7C,aAAa,CAACmC,KAAK,CAAC,CAAC,EAAEnC,aAAa,CAAC8C,WAAW,CAAC,GAAG,CAAC,CAAC;MAC5E,IAAIjD,MAAM,CAACJ,SAAS,CAAC,GAAGoD,eAAe,QAAQ,CAAC,KAAK,iBAAiB,EAAE;QACvED,OAAO,GAAGC,eAAe,CAACZ,MAAM,GAAG,CAAC;QACpCY,eAAe,GAAG7C,aAAa,CAACmC,KAAK,CAACS,OAAO,EAAE5C,aAAa,CAAC+C,OAAO,CAAC,GAAG,EAAEH,OAAO,CAAC,CAAC;MACpF;MACA,OAAOC,eAAe;IACvB,CAAC;IACDG,mBAAmB,EAAE,SAAAA,CAAUC,QAAiB,EAAU;MACzD,MAAMzB,KAAK,GAAGyB,QAAQ,CAAChD,OAAO,CAAC,CAAC;QAC/BiD,aAAa,GAAGD,QAAQ,CAACxD,SAAS,CAAC,GAAG+B,KAAK,QAAQ,CAAC;MAErD,OAAO2B,WAAW,CAACC,gBAAgB,CAAC5B,KAAK,EAAE0B,aAAa,CAAC;IAC1D,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;IACCG,gBAAgB,EAAE,SAAAA,CAAUC,UAA0B,EAAEC,WAAmB,EAAsB;MAChG,MAAMC,gBAAgB,GAAGF,UAAU,CAAC7D,SAAS,CAAC,GAAG,CAAC;MAClD,KAAK,MAAMgE,GAAG,IAAID,gBAAgB,EAAE;QACnC,IAAI,OAAOA,gBAAgB,CAACC,GAAG,CAAC,KAAK,QAAQ,IAAID,gBAAgB,CAACC,GAAG,CAAC,CAACd,KAAK,KAAKY,WAAW,EAAE;UAC7F,OAAOE,GAAG;QACX;MACD;MACA,OAAO3C,SAAS;IACjB,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACC4C,aAAa,EAAE,SAAAA,CACdC,OAAgB,EAChBC,eAAwB,EACxBC,WAAoB,EACpBC,iBAA2B,EAOvB;MACJ,IAAIC,YAAY,GAAGJ,OAAO,CAAC1D,OAAO,CAAC,CAAC,CAAC6B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAEnD+B,WAAW,GAAG,CAACA,WAAW,GAAGF,OAAO,CAAClE,SAAS,CAACkE,OAAO,CAAC1D,OAAO,CAAC,CAAC,CAAC,GAAG4D,WAAW;MAE/E,IAAIA,WAAW,IAAIA,WAAW,CAACnF,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC7C;QACAmF,WAAW,GAAGA,WAAW,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,MAAM,IAAI6B,OAAO,CAAClE,SAAS,CAACsE,YAAY,CAAC,EAAE;QAC3C;QACA,MAAMC,eAAe,GAAGL,OAAO,CAAClE,SAAS,CAACsE,YAAY,CAAC,CAACpB,KAAK;QAC7D,MAAMsB,WAAW,GAAG,IAAI,CAACZ,gBAAgB,CAACM,OAAO,CAAC5D,QAAQ,CAAC,CAAC,EAAEiE,eAAe,CAAC;QAC9E,IAAIC,WAAW,EAAE;UAChBF,YAAY,GAAG,IAAIE,WAAW,EAAE;QACjC;MACD,CAAC,MAAM;QACN,OAAOF,YAAY;MACpB;MAEA,IAAID,iBAAiB,EAAE;QACtB,OAAOH,OAAO,CAAClE,SAAS,CAAC,GAAGsE,YAAY,IAAIF,WAAW,uCAAuC,CAAC;MAChG;MACA,IAAID,eAAe,EAAE;QACpB,OAAO,GAAGG,YAAY,IAAIF,WAAW,EAAE;MACxC,CAAC,MAAM;QACN,OAAO;UACNE,YAAY,EAAEA,YAAY;UAC1BtB,SAAS,EAAEkB,OAAO,CAAClE,SAAS,CAAC,GAAGsE,YAAY,IAAIF,WAAW,6CAA6C,CAAC;UACzGK,iBAAiB,EAAEP,OAAO,CAAClE,SAAS,CAAC,GAAGsE,YAAY,IAAIF,WAAW,sCAAsC;QAC1G,CAAC;MACF;IACD,CAAC;IAEDM,oBAAoB,EAAE,SAAAA,CAAUlB,QAAiB,EAAU;MAC1D,OAAOmB,0BAA0B,CAACC,iBAAiB,CAACpB,QAAQ,CAAChD,OAAO,CAAC,CAAC,CAAC;IACxE,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCoE,iBAAiB,EAAE,SAAAA,CAAUrE,aAAqB,EAAEsE,aAAuB,EAAU;MACpF,MAAMC,qBAAqB,GAAGvE,aAAa,CAACwE,UAAU,CAAC,GAAG,CAAC;MAC3D,MAAM3C,MAAM,GAAG7B,aAAa,CAAC8B,KAAK,CAAC,GAAG,CAAC,CAACtD,MAAM,CAAC,UAAUiG,IAAY,EAAE;QACtE,OAAO,CAAC,CAACA,IAAI;MACd,CAAC,CAAC;MACF,IAAIF,qBAAqB,EAAE;QAC1B1C,MAAM,CAAC6C,KAAK,CAAC,CAAC;MACf;MACA,IAAI,CAACJ,aAAa,EAAE;QACnBzC,MAAM,CAAC8C,GAAG,CAAC,CAAC;MACb;MACA,OAAO9C,MAAM,CAACO,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCwC,gBAAgB,EAAE,SAAAA,CAAUjB,OAAgB,EAAU;MACrD,OAAOrE,YAAY,CAACoE,aAAa,CAACC,OAAO,EAAE,IAAI,CAAC;IACjD,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCkB,4BAA4B,EAAE,SAAAA,CAAUlB,OAAgB,EAAU;MACjE,MAAMnC,KAAK,GAAGlC,YAAY,CAACoE,aAAa,CAACC,OAAO,EAAE,IAAI,CAAC;MACvD,OAAO,GAAGnC,KAAK,mBAAmB;IACnC,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACCsD,eAAe,EAAE,SAAAA,CAAUC,MAAc,EAAEC,OAAiB,EAAU;MACrE,IAAIA,OAAO,IAAID,MAAM,EAAE;QACtBA,MAAM,GAAG,IAAI,CAACE,kBAAkB,CAACF,MAAM,CAAC;MACzC;MACA,OAAO,IAAIA,MAAM,GAAG;IACrB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCE,kBAAkB,EAAE,SAAAA,CAAUF,MAAc,EAAU;MACrD,OAAOA,MAAM,CAACrC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC;IACrC,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACCwC,gBAAgB,EAAE,SAAAA,CAAUC,SAAiB,EAA6B;MACzE,IAAIC,OAAO,GAAG,EAAE;MAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAAC,SAAA,CAAArD,MAAA,YAAAqD,SAAA,CAAArD,MAAA,KAAc,EAAEoD,CAAC,EAAE,EAAE;QACrCD,OAAO,IAASC,CAAC,YAAAC,SAAA,CAAArD,MAAA,IAADoD,CAAC,OAAAvE,SAAA,GAAAwE,SAAA,CAADD,CAAC,KAAC;QAClB,IAAIA,CAAC,GAAG,CAAAC,SAAA,CAAArD,MAAA,YAAAqD,SAAA,CAAArD,MAAA,QAAc,CAAC,EAAE;UACxBmD,OAAO,IAAI,IAAI;QAChB;MACD;MAEA,IAAIG,SAAS,GAAG,GAAGJ,SAAS,IAAI;MAChC,IAAIC,OAAO,EAAE;QACZG,SAAS,GAAG,GAAGJ,SAAS,IAAIC,OAAO,GAAG;MACvC;MACA,OAAOG,SAAS;IACjB,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAECC,gCAAgC,EAAE,SAAAA,CAAUC,IAAY,EAAEC,WAAoB,EAAoC;MACjH,OAAOC,iBAAiB,CACvBC,MAAM,CACLC,QAAQ,CAACH,WAAW,CAAC,EACrBI,KAAK,CAACC,WAAW,CAAC,yBAAyBN,IAAI,EAAE,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,EACrEO,QAAQ,CAACD,WAAW,CAAC,yBAAyBN,IAAI,EAAE,EAAE,UAAU,CAAC,EAAE,IAAI,CACxE,CACD,CAAC;IACF,CAAC;IAED;AACD;AACA;AACA;AACA;IACCQ,cAAc,EAAE,SAAAA,CAAUC,OAAgC,EAAU;MACnE,IAAIC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACjE,MAAM;QAC9CmD,OAAO,GAAG,EAAE;MAEb,KAAK,MAAMkB,IAAI,IAAIJ,OAAO,EAAE;QAC3B,IAAInB,MAAM,GAAGmB,OAAO,CAACI,IAAI,CAAC;QAC1B,IAAIvB,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;UACzCA,MAAM,GAAG,IAAI,CAACkB,cAAc,CAAClB,MAAiC,CAAC;QAChE;QACAK,OAAO,IAAI,GAAGkB,IAAI,KAAKvB,MAAM,EAAE;QAC/B,IAAIoB,aAAa,GAAG,CAAC,EAAE;UACtB,EAAEA,aAAa;UACff,OAAO,IAAI,IAAI;QAChB;MACD;MAEA,OAAO,KAAKA,OAAO,GAAG;IACvB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCmB,sBAAsB,EAAE,SAAAA,CAAUC,WAAoB,EAAsB;MAC3E,OAAOA,WAAW,GAAGA,WAAW,CAAC9D,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG5B,SAAS;IAC3E,CAAC;IAED;AACD;AACA;AACA;AACA;IACC2F,eAAe,EAAE,SAAAA,CAAUC,YAAoB,EAAsB;MACpE,IAAI,CAACA,YAAY,IAAIA,YAAY,KAAK,IAAI,EAAE;QAC3C,OAAO5F,SAAS;MACjB,CAAC,MAAM;QACN,MAAM6F,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC;QACxC,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,OAAO,CAAC,EAAE;UAC3D,MAAMK,UAAU,GAAG;YAClBC,SAAS,EAAE;UACZ,CAAC;UACDb,MAAM,CAACc,MAAM,CAACF,UAAU,EAAEL,OAAO,CAAC;UAClC,OAAOC,IAAI,CAACO,SAAS,CAACH,UAAU,CAAC;QAClC,CAAC,MAAM;UACN,MAAMI,KAAK,GAAGN,KAAK,CAACC,OAAO,CAACJ,OAAO,CAAC,GAAG,OAAO,GAAG,OAAOA,OAAO;UAC/DU,GAAG,CAACC,KAAK,CAAC,8CAA8CF,KAAK,4BAA4B,CAAC;UAC1F,MAAM,IAAIG,KAAK,CAAC,0CAA0C,CAAC;QAC5D;MACD;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACCC,mBAAmB,EAAE,SAAAA,CAAUC,KAAkC,EAAU;MAC1E,MAAMd,OAAkD,GAAG;QAC1DM,SAAS,EAAE;MACZ,CAAC;MACDN,OAAO,CAAC,YAAY,CAAC,GAAGc,KAAK,YAAYC,OAAO,GAAGD,KAAK,CAAChI,SAAS,CAAC,CAAC,GAAGgI,KAAK;MAC5E,OAAOb,IAAI,CAACO,SAAS,CAACR,OAAO,CAAC;IAC/B,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACCgB,eAAe,EAAE,SAAAA,CAAUF,KAA0D,EAAW;MAC/FA,KAAK,GAAG,OAAOA,KAAK,KAAK,QAAQ,GAAGb,IAAI,CAACC,KAAK,CAACY,KAAK,CAAC,GAAGA,KAAK;MAC7D,IAAIA,KAAK,IAAIA,KAAK,CAACG,cAAc,CAAC,YAAY,CAAC,EAAE;QAChD,OAAQH,KAAK,CAA+C,YAAY,CAAC;MAC1E;MACA,OAAOA,KAAK;IACb,CAAC;IACDI,cAAc,EAAE,SAAAA,CAAUC,MAAe,EAAElI,UAAuC,EAAU;MAC3F,MAAM4B,KAAK,GAAG5B,UAAU,IAAIA,UAAU,CAACE,OAAO,IAAIF,UAAU,CAACE,OAAO,CAACG,OAAO,CAAC,CAAC;MAC9E,OAAOuB,KAAK,CAACA,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAGT,KAAK,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGX,KAAK;IACpE,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCuG,iBAAiB,EAAE,SAAAA,CAClB9E,QAAiF,EACjF+E,oBAAwD,EACxDC,wBAAgC,EACX;MACrB,IACCD,oBAAoB,IACpB1I,YAAY,CAAC4I,gCAAgC,CAACD,wBAAwB,CAAC,IACvED,oBAAoB,CAACG,SAAS,EAC7B;QACD,MAAMC,eAAuE,GAAG;UAC/EC,OAAO,EAAE;QACV,CAAC;QAED,MAAMC,WAAW,GAAGrF,QAAQ,CAAChD,OAAO,CAAC,CAAC,CAAC,CAAC6B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrDkG,oBAAoB,CAACG,SAAS,CAACI,OAAO,CAAC,YAA2B;UAAA,IAAjBC,UAAU,GAAAlD,SAAA,CAAArD,MAAA,QAAAqD,SAAA,QAAAxE,SAAA,GAAAwE,SAAA,MAAG,CAAC,CAAC;UAC/D,IAAImD,aAAiC;UACrC,MAAMC,OAAgD,GAAG,CAAC,CAAC;UAC3D,IAAIF,UAAU,CAACG,eAAe,EAAE;YAC/BF,aAAa,GAAGxF,QAAQ,CAAClD,QAAQ,CAAC,CAAC,CAAC,CAACN,SAAS,CAAC6I,WAAW,GAAGE,UAAU,CAACG,eAAe,CAACC,eAAe,CAAC,EAAEC,IAAI;UAC/G,CAAC,MAAM,IAAIL,UAAU,CAACM,QAAQ,EAAE;YAC/BL,aAAa,GAAGD,UAAU,CAACM,QAAQ,CAACC,aAAa;UAClD;UACA,IAAIN,aAAa,EAAE;YAClBC,OAAO,CAACM,IAAI,GAAGP,aAAa;YAC5BC,OAAO,CAACO,UAAU,GAAG,CAAC,CAACT,UAAU,CAACU,UAAU;YAC5Cd,eAAe,CAACC,OAAO,CAACc,IAAI,CAACT,OAAO,CAAC;UACtC,CAAC,MAAM;YACN,MAAM,IAAInB,KAAK,CAAC,mDAAmD,CAAC;UACrE;QACD,CAAC,CAAC;QACF,OAAOX,IAAI,CAACO,SAAS,CAACiB,eAAe,CAAC;MACvC;MACA,OAAOtH,SAAS;IACjB,CAAC;IACDoH,gCAAgC,EAAE,SAAAA,CAAUkB,cAAsB,EAAW;MAC5E,OACCA,cAAc,CAAC1K,QAAQ,CAAC,sDAA2C,CAAC,IACpE0K,cAAc,CAAC1K,QAAQ,CAAC,+DAAoD,CAAC;IAE/E,CAAC;IACD2K,6BAA6B,EAAE,SAAAA,CAAUC,oBAA6B,EAAW;MAChF,MAAMC,MAAM,GAAGD,oBAAoB,CAACrJ,OAAO,CAAC,CAAC,CAAC6B,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;MAC9D,MAAMjC,MAAM,GAAGyJ,oBAAoB,CAACvJ,QAAQ,CAAC,CAAC;MAC9C,IAAIwJ,MAAM,CAACtH,MAAM,IAAIsH,MAAM,CAACA,MAAM,CAACtH,MAAM,GAAG,CAAC,CAAC,CAACvD,QAAQ,CAAC,yDAAyD,CAAC,EAAE;QACnH,MAAM8C,KAAK,GAAG8H,oBAAoB,CAACrJ,OAAO,CAAC,CAAC,CAAC6B,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QAC7E,OAAOjC,MAAM,CAAC2J,oBAAoB,CAAC,GAAGhI,KAAK,aAAa,CAAC;MAC1D;MACA,OAAO3B,MAAM,CAAC2J,oBAAoB,CAAC,GAAGF,oBAAoB,CAACrJ,OAAO,CAAC,CAAC,aAAa,CAAC;IACnF,CAAC;IACDwJ,iCAAiC,EAAE,SAAAA,CAClCnH,UAA6C,EAC7CoH,QAAiB,EACjBC,+BAAyC,EAEpB;MAAA,IADrBC,cAAc,GAAAtE,SAAA,CAAArD,MAAA,QAAAqD,SAAA,QAAAxE,SAAA,GAAAwE,SAAA,MAAG,KAAK;MAEtB,IAAI,CAAChD,UAAU,EAAE,OAAOxB,SAAS;MACjC,MAAM+I,qBAML,GAAG;QACHC,kBAAkB,EAAEJ,QAAQ,GAAGA,QAAQ,GAAG;MAC3C,CAAC;MACD,IAAIpH,UAAU,CAACyH,eAAe,IAAI,CAACzH,UAAU,CAAC0H,MAAM,IAAIL,+BAA+B,EAAE;QACxF,MAAMM,kBAAkB,GAAG,CAACL,cAAc,GAAG,aAAa,GAAG,2BAA2B;QACxF,MAAMM,qBAAqB,GAAG,CAACN,cAAc,GAAG,gBAAgB,GAAG,8BAA8B;QACjGC,qBAAqB,CAACM,kBAAkB,GAAG,mBAAmB7H,UAAU,CAAC8H,cAAc,IAAI9H,UAAU,CAAC+H,MAAM,IAAIJ,kBAAkB,IAAI;QACtIJ,qBAAqB,CAACS,qBAAqB,GAAG,mBAAmBhI,UAAU,CAAC8H,cAAc,IAAI9H,UAAU,CAAC+H,MAAM,IAAIH,qBAAqB,IAAI;QAC5IL,qBAAqB,CAACU,KAAK,GAAG,IAAI,CAACzF,eAAe,CAACxC,UAAU,CAACkI,KAAK,EAAY,IAAI,CAAC;MACrF;MACA,IAAIlI,UAAU,CAACmI,OAAO,EAAE;QACvBZ,qBAAqB,CAACa,qBAAqB,GAAG,IAAI,CAAC5F,eAAe,CAAC8B,IAAI,CAACO,SAAS,CAAC7E,UAAU,CAACmI,OAAO,CAAC,CAAC;MACvG;MACA,OAAO,IAAI,CAACvF,gBAAgB,CAC3ByE,+BAA+B,GAAG,wDAAwD,GAAG,kCAAkC,EAC/H,IAAI,CAAC7E,eAAe,CAACxC,UAAU,CAAC8H,cAAmC,CAAC,EACpE,IAAI,CAACtF,eAAe,CAACxC,UAAU,CAAC+H,MAA2B,CAAC,EAC5D,IAAI,CAACpE,cAAc,CAAC4D,qBAAqB,CAAC,EAC1C,cACD,CAAC;IACF,CAAC;IACDc,YAAY,EAAE,SAAAA,CAAU1H,QAAiB,EAAU;MAClD,MAAMzB,KAAK,GAAGyB,QAAQ,CAAChD,OAAO,CAAC,CAAC;MAChC,OAAO2K,WAAW,CAACC,gBAAgB,CAACrJ,KAAK,CAAC;IAC3C,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCsJ,gCAAgC,EAAE,SAAAA,CACjCC,qBAA6B,EAC7BhG,MAAc,EACdiG,aAA8B,EAC9BC,aAA8B,EAC9BC,cAA+B,EAC/BC,eAAgC,EAChCC,cAA+B,EAC/BC,cAA+B,EACtB;MACT,IAAIC,sBAAkD,GAAGlM,UAAU,CAACmM,OAAO,CAAC,CAAC;;MAE7ExG,MAAM,GAAG,IAAIA,MAAM,EAAE;;MAErB;MACAiG,aAAa,GAAGA,aAAa,IAAI,CAACQ,QAAQ;MAC1CP,aAAa,GAAGA,aAAa,IAAID,aAAa;MAC9CE,cAAc,GAAGA,cAAc,IAAID,aAAa;MAChDI,cAAc,GAAGA,cAAc,IAAIG,QAAQ;MAC3CJ,cAAc,GAAGA,cAAc,IAAIC,cAAc;MACjDF,eAAe,GAAGA,eAAe,IAAIC,cAAc;;MAEnD;MACAJ,aAAa,GAAGA,aAAa,KAAK,CAACA,aAAa,GAAG,CAACA,aAAa,GAAG,IAAIA,aAAa,EAAE,CAAC;MACxFC,aAAa,GAAGA,aAAa,KAAK,CAACA,aAAa,GAAG,CAACA,aAAa,GAAG,IAAIA,aAAa,EAAE,CAAC;MACxFC,cAAc,GAAGA,cAAc,KAAK,CAACA,cAAc,GAAG,CAACA,cAAc,GAAG,IAAIA,cAAc,EAAE,CAAC;MAC7FC,eAAe,GAAGA,eAAe,KAAK,CAACA,eAAe,GAAG,CAACA,eAAe,GAAG,IAAIA,eAAe,EAAE,CAAC;MAClGC,cAAc,GAAGA,cAAc,KAAK,CAACA,cAAc,GAAG,CAACA,cAAc,GAAG,IAAIA,cAAc,EAAE,CAAC;MAC7FC,cAAc,GAAGA,cAAc,KAAK,CAACA,cAAc,GAAG,CAACA,cAAc,GAAG,IAAIA,cAAc,EAAE,CAAC;;MAE7F;MACA,IAAIN,qBAAqB,CAACrM,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC/C4M,sBAAsB,GACrB,KAAK,GACLvG,MAAM,GACN,MAAM,GACNoG,eAAe,GACf,MAAM,GACN/L,UAAU,CAACqM,IAAI,GACf,MAAM,GACN1G,MAAM,GACN,MAAM,GACNqG,cAAc,GACd,MAAM,GACNhM,UAAU,CAACmM,OAAO,GAClB,MAAM,GACN,GAAG,GACHF,cAAc,GACd,MAAM,GACNtG,MAAM,GACN,MAAM,GACNsG,cAAc,GACd,OAAO,GACPjM,UAAU,CAACsM,QAAQ,GACnB,OAAO,GACPtM,UAAU,CAACmI,KAAK,GAChB,KAAK;MACP,CAAC,MAAM,IAAIwD,qBAAqB,CAACrM,QAAQ,CAAC,UAAU,CAAC,EAAE;QACtD4M,sBAAsB,GACrB,KAAK,GACLvG,MAAM,GACN,MAAM,GACNmG,cAAc,GACd,MAAM,GACN9L,UAAU,CAACqM,IAAI,GACf,MAAM,GACN1G,MAAM,GACN,MAAM,GACNkG,aAAa,GACb,MAAM,GACN7L,UAAU,CAACmM,OAAO,GAClB,MAAM,GACN,GAAG,GACHP,aAAa,GACb,MAAM,GACNjG,MAAM,GACN,MAAM,GACNiG,aAAa,GACb,OAAO,GACP5L,UAAU,CAACsM,QAAQ,GACnB,OAAO,GACPtM,UAAU,CAACmI,KAAK,GAChB,KAAK;MACP,CAAC,MAAM,IAAIwD,qBAAqB,CAACrM,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACpD4M,sBAAsB,GACrB,MAAM,GACNvG,MAAM,GACN,MAAM,GACNoG,eAAe,GACf,MAAM,GACNpG,MAAM,GACN,MAAM,GACNmG,cAAc,GACd,OAAO,GACP9L,UAAU,CAACqM,IAAI,GACf,MAAM,GACN,IAAI,GACJ1G,MAAM,GACN,MAAM,GACNkG,aAAa,GACb,MAAM,GACNlG,MAAM,GACN,KAAK,GACLmG,cAAc,GACd,QAAQ,GACRnG,MAAM,GACN,KAAK,GACLoG,eAAe,GACf,MAAM,GACNpG,MAAM,GACN,MAAM,GACNqG,cAAc,GACd,QAAQ,GACRhM,UAAU,CAACmM,OAAO,GAClB,MAAM,GACN,IAAI,GACJP,aAAa,GACb,OAAO,GACPjG,MAAM,GACN,MAAM,GACNiG,aAAa,GACb,QAAQ,GACRjG,MAAM,GACN,KAAK,GACLkG,aAAa,GACb,UAAU,GACVlG,MAAM,GACN,KAAK,GACLqG,cAAc,GACd,OAAO,GACPC,cAAc,GACd,OAAO,GACPtG,MAAM,GACN,MAAM,GACNsG,cAAc,GACd,SAAS,GACTjM,UAAU,CAACsM,QAAQ,GACnB,OAAO,GACPtM,UAAU,CAACmI,KAAK,GAChB,KAAK;MACP,CAAC,MAAM;QACNF,GAAG,CAACsE,OAAO,CAAC,yDAAyD,CAAC;MACvE;MAEA,OAAOL,sBAAsB;IAC9B,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;IACCM,wBAAwB,EAAE,SAAAA,CAAUC,QAAgB,EAAEC,iBAAuC,EAAU;MACtG,IAAIC,SAAS,EAAEC,oBAAoB;MACnC,IAAIF,iBAAiB,EAAEG,QAAQ,EAAEhK,MAAM,IAAI6J,iBAAiB,EAAEG,QAAQ,EAAEhK,MAAM,GAAG,CAAC,EAAE;QACnF8J,SAAS,GAAGD,iBAAiB,CAACG,QAAQ;QACtCD,oBAAoB,GAAGD,SAAS,CAACF,QAAQ,CAAC,CAAC9C,aAAa;MACzD,CAAC,MAAM,IAAI+C,iBAAiB,EAAEI,eAAe,EAAEjK,MAAM,IAAI6J,iBAAiB,EAAEI,eAAe,EAAEjK,MAAM,GAAG,CAAC,EAAE;QACxG8J,SAAS,GAAGD,iBAAiB,CAACI,eAAe;QAC7CF,oBAAoB,GAAGD,SAAS,CAACF,QAAQ,CAAC,CAACjD,eAAe;MAC3D;MACA,IAAIuD,uBAAuB;MAC3B,MAAMC,kBAAkB,GAAGN,iBAAiB,CAACO,iBAAiB;MAC9D,IAAIC,iBAAiB,GAAG,CAAC,CAAC;MAC1B,MAAMC,cAAc,GAAG,SAAAA,CACtBC,YAAgC,EAChCC,iBAA2D,EAC3DC,KAAa,EACH;QACV,IAAID,iBAAiB,EAAE;UACtB,IAAIA,iBAAiB,CAACE,OAAO,IAAIF,iBAAiB,CAACE,OAAO,CAAC5D,aAAa,KAAKyD,YAAY,EAAE;YAC1FF,iBAAiB,GAAGI,KAAK;YACzB,OAAO,IAAI;UACZ,CAAC,MAAM,IAAID,iBAAiB,CAACG,cAAc,IAAIH,iBAAiB,CAACG,cAAc,CAAChE,eAAe,KAAK4D,YAAY,EAAE;YACjHF,iBAAiB,GAAGI,KAAK;YACzB,OAAO,IAAI;UACZ;QACD;QACA,OAAO,KAAK;MACb,CAAC;MACD,IAAIN,kBAAkB,EAAE;QACvBD,uBAAuB,GAAGC,kBAAkB,CAACS,IAAI,CAACN,cAAc,CAACO,IAAI,CAAC,IAAI,EAAEd,oBAAoB,CAAC,CAAC;MACnG;MACA,OAAOG,uBAAuB,IAAIG,iBAAiB,GAAG,CAAC,CAAC,GAAGA,iBAAiB,GAAG,CAAC,CAAC;IAClF,CAAC;IAEDS,mBAAmB,EAAE,eAAAA,CAAgB9J,QAAiB,EAA+B;MACpF,MAAMK,UAAU,GAAGL,QAAQ,CAAClD,QAAQ,CAAC,CAAmB;QACvDiN,oBAAoB,GAAG/J,QAAQ,CAAChD,OAAO,CAAC,CAAC;MAC1C,OAAOqD,UAAU,CAAC2J,aAAa,CAACD,oBAAoB,CAAC,CAACE,IAAI,CAAC,UAAUpB,iBAAuC,EAAE;QAC7G,MAAMM,kBAAkB,GAAGN,iBAAiB,CAACO,iBAAiB;UAC7DC,iBAAiB,GAAGhN,YAAY,CAACsM,wBAAwB,CAAC,CAAC,EAAEE,iBAAiB,CAAC;QAChF,MAAMqB,qBAAqB,GAC1Bb,iBAAiB,GAAG,CAAC,CAAC,IAAIF,kBAAkB,GAAGE,iBAAiB,CAAC,IAAIF,kBAAkB,CAACE,iBAAiB,CAAC,CAACc,SAAS,GACjH,GAAGJ,oBAAoB,sBAAsBV,iBAAiB,GAAG,GACjExL,SAAS;QACb,IAAIqM,qBAAqB,KAAKrM,SAAS,EAAE;UACxCuG,GAAG,CAACsE,OAAO,CAAC,mCAAmC,CAAC;QACjD;QACA,OAAOwB,qBAAqB,GAAG,GAAGA,qBAAqB,4BAA4B,GAAGA,qBAAqB;MAC5G,CAAC,CAAC;IACH,CAAC;IACD;AACD;AACA;AACA;AACA;IACCE,6BAA6B,EAAE,SAAAA,CAAUpK,QAAiB,EAAsB;MAC/E,MAAMK,UAAU,GAAGL,QAAQ,CAAClD,QAAQ,CAAC,CAAmB;QACvDyM,YAAY,GAAGvJ,QAAQ,CAAChD,OAAO,CAAC,CAAC;QACjC+M,oBAAoB,GAAGR,YAAY,CAACc,SAAS,CAAC,CAAC,EAAEd,YAAY,CAAC1J,WAAW,CAAC,SAAS,CAAC,CAAC;QACrF+I,QAAQ,GAAGW,YAAY,CAAC9J,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;MAE5C,MAAMoJ,iBAAiB,GAAGxI,UAAU,CAAC7D,SAAS,CAACuN,oBAAoB,CAAC;MACpE,MAAMZ,kBAAkB,GAAGN,iBAAiB,CAACO,iBAAiB;QAC7DC,iBAAiB,GAAGhN,YAAY,CAACsM,wBAAwB,CAACC,QAAQ,EAAuBC,iBAAiB,CAAC;MAC5G,MAAMqB,qBAAqB,GAC1Bb,iBAAiB,GAAG,CAAC,CAAC,IAAIF,kBAAkB,CAACE,iBAAiB,CAAC,IAAIF,kBAAkB,CAACE,iBAAiB,CAAC,CAACc,SAAS,GAC/G,GAAGJ,oBAAoB,qBAAqBV,iBAAiB,GAAG,GAChExL,SAAS;MACb,IAAIqM,qBAAqB,KAAKrM,SAAS,EAAE;QACxCuG,GAAG,CAACsE,OAAO,CAAC,mCAAmC,CAAC;MACjD;MACA,OAAOwB,qBAAqB,GAAG,GAAGA,qBAAqB,4BAA4B,GAAGA,qBAAqB;IAC5G,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCI,iCAAiC,EAAE,SAAAA,CAClCC,+BAAuC,EACvCC,cAKC,EACS;MACV,IAAID,+BAA+B,EAAE;QACpC,IAAIC,cAAc,IAAIA,cAAc,CAACC,eAAe,IAAID,cAAc,CAACC,eAAe,CAAClM,KAAK,EAAE;UAC7F,MAAMmM,oBAAoB,GAAGF,cAAc,CAACC,eAAe,CAAClM,KAAK;UACjE,MAAMoM,UAAU,GAAGH,cAAc,CAACC,eAAe,CAAC7N,MAAM,CAACJ,SAAS,CACjE,GAAGkO,oBAAoB,2CACxB,CAAC;UACD,MAAME,UAAU,GAAGJ,cAAc,CAACC,eAAe,CAAC7N,MAAM,CAACJ,SAAS,CACjE,GAAGkO,oBAAoB,2CACxB,CAAC;UACD,IAAIC,UAAU,IAAIC,UAAU,EAAE;YAC7B,OAAO,IAAI;UACZ,CAAC,MAAM;YACN,OAAO,KAAK;UACb;QACD;MACD;MACA,OAAO,KAAK;IACb,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACCC,mBAAmB,EAAE,SAAAA,CAAUC,WAAoB,EAAU;MAC5D,MAAMC,SAAS,GAAGD,WAAW,CAAC9N,OAAO,CAAC,CAAC,CAAC6B,KAAK,CAAC,GAAG,CAAC;MAClD,MAAMmM,OAAO,GAAGD,SAAS,CAACA,SAAS,CAAC/L,MAAM,GAAG,CAAC,CAAC;MAC/C,MAAMiM,iBAAiB,GAAG,IAAIF,SAAS,CAAC7L,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,IAAI;MAClE,MAAM+L,eAAe,GAAGJ,WAAW,CAACtO,SAAS,CAACyO,iBAAiB,CAAC;MAChE,MAAME,QAAQ,GAAGD,eAAe,CAACE,QAAQ;MACzC,MAAMC,SAAS,GAAGF,QAAQ,CAACtM,KAAK,CAAC,GAAG,CAAC;MACrC,MAAMyM,SAAS,GAAG,EAAE;MACpB,KAAK,IAAIlJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiJ,SAAS,CAACrM,MAAM,GAAG,CAAC,EAAEoD,CAAC,EAAE,EAAE;QAC9C,MAAM5B,GAAG,GAAG6K,SAAS,CAACjJ,CAAC,CAAC,CAACvD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC0M,IAAI,CAAC,CAAC;QAC7CD,SAAS,CAACpF,IAAI,CAAC1F,GAAG,CAAC;MACpB;MACA2C,MAAM,CAACC,IAAI,CAAC8H,eAAe,CAACM,IAAI,CAAC,CAAClG,OAAO,CAAC,UAAUjC,IAAY,EAAE;QACjE,IAAIA,IAAI,CAAC9B,UAAU,CAAC,GAAG,CAAC,EAAE;UACzB,OAAO2J,eAAe,CAACM,IAAI,CAACnI,IAAI,CAAC;QAClC;MACD,CAAC,CAAC;MACF,MAAMoG,KAAK,GAAGtG,MAAM,CAACC,IAAI,CAAC8H,eAAe,CAACM,IAAI,CAAC,CAAC1L,OAAO,CAACkL,OAAO,CAAC;MAChE,OAAO,IAAID,SAAS,CAAC7L,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,SAASmM,SAAS,CAAC7B,KAAK,CAAC,EAAE;IACvE,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACCgC,YAAY,EAAE,SAAAA,CAAU/O,MAA2D,EAAEgP,OAAe,EAAW;MAC9G,MAAMP,QAAQ,GAAGzO,MAAM,CAAC0O,QAAQ;MAChC,MAAMC,SAAS,GAAGF,QAAQ,CAACtM,KAAK,CAAC,GAAG,CAAC;MACrC,MAAMyM,SAAmB,GAAG,EAAE;MAC9B,IAAIK,WAAW,GAAG,KAAK;MACvB,KAAK,IAAIvJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiJ,SAAS,CAACrM,MAAM,GAAG,CAAC,EAAEoD,CAAC,EAAE,EAAE;QAC9C,MAAM4I,OAAO,GAAGK,SAAS,CAACjJ,CAAC,CAAC,CAACvD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC0M,IAAI,CAAC,CAAC;QACjDD,SAAS,CAACpF,IAAI,CAAC8E,OAAO,CAAC;MACxB;MAEAM,SAAS,CAAChG,OAAO,CAAC,UAAUsG,YAAoB,EAAE;QACjD,MAAMC,SAAS,GAAGP,SAAS,CAACtM,MAAM,GAAG,CAAC;QACtC,IAAItC,MAAM,CAAC8O,IAAI,CAACI,YAAY,CAAC,KAAKF,OAAO,IAAIJ,SAAS,CAACxL,OAAO,CAAC8L,YAAY,CAAC,GAAGC,SAAS,EAAE;UACzFF,WAAW,GAAG,IAAI;QACnB;MACD,CAAC,CAAC;MACF,OAAOA,WAAW;IACnB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCG,YAAY,EAAE,SAAAA,CAAUX,QAAgB,EAAU;MACjD,OAAOA,QAAQ,CAACtM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC0M,IAAI,CAAC,CAAC;IACnD,CAAC;IAEDlL,UAAU,EAAExC,SAAuC;IACnDkO,YAAY,EAAE,SAAAA,CAAU1L,UAA0B,EAAQ;MACzD,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC7B,CAAC;IAED1B,YAAY,EAAE,SAAAA,CAAA,EAA4B;MACzC,OAAO,IAAI,CAAC0B,UAAU;IACvB,CAAC;IAED2L,aAAa,EAAE,SAAAA,CAAUhM,QAAiB,EAAErD,UAAuC,EAAY;MAC9F,IAAIqD,QAAQ,EAAE;QACb,MAAMK,UAAU,GAAG1D,UAAU,CAACE,OAAO,CAACC,QAAQ,CAAC,CAAC;QAChD,MAAMyB,KAAK,GAAG5B,UAAU,CAACE,OAAO,CAACG,OAAO,CAAC,CAAC;QAC1C,MAAMiP,cAAc,GAAG/L,WAAW,CAACgM,gBAAgB,CAAC7L,UAAU,EAAE9B,KAAK,CAAC;QACtE,IAAI0N,cAAc,CAACE,mBAAmB,EAAE;UACvC,OAAOhJ,MAAM,CAACC,IAAI,CAAC6I,cAAc,CAACE,mBAAmB,CAAC;QACvD;MACD;MACA,OAAO,EAAE;IACV,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCC,kBAAkB,EAAE,SAAAA,CACnB1L,OAAqB,EACrB2L,KAAkC,EAEC;MAAA,IADnC1F,cAAc,GAAAtE,SAAA,CAAArD,MAAA,QAAAqD,SAAA,QAAAxE,SAAA,GAAAwE,SAAA,MAAG,KAAK;MAEtB,MAAMiK,OAAkB,GAAG,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE7L,OAAO,CAAC8L,aAAa,EAAE9L,OAAO,CAAC+L,aAAa,CAAC;MAExF,IAAIJ,KAAK,IAAIA,KAAK,CAACK,EAAE,EAAE;QACtB,MAAMC,iBAAiB,GAAG,CAAChG,cAAc,GAAG,8BAA8B,GAAG,0CAA0C;QACvH,MAAMiG,iBAAiB,GAAG;UAAEC,QAAQ,EAAEN,GAAG,CAACI,iBAAiB;QAAE,CAAC;QAC9DL,OAAO,CAACpG,IAAI,CAAC0G,iBAAiB,CAAC;MAChC;MACA,OAAOlK,iBAAiB,CAACoK,EAAE,CAAC,mBAAmB,EAAER,OAAO,CAAC,CAAC;IAC3D,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;IACCS,uBAAuB,EAAE,SAAAA,CAAUC,oBAAwD,EAAoB;MAC9G,IAAIA,oBAAoB,CAAC,oCAAoC,CAAC,KAAK,IAAI,EAAE;QACxE,MAAMC,MAAM,GAAGD,oBAAoB,CAAC,oCAAoC,CAAC;QACzE,OAAO,OAAOC,MAAM,KAAK,QAAQ,GAAG,QAAQ,GAAGA,MAAM,CAACtP,KAAK,GAAG,KAAK,GAAG,CAACsP,MAAM;MAC9E;MACA,OAAO,IAAI;IACZ,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACCC,uBAAuB,EAAE,SAAAA,CACxB1N,SAAiB,EACjB2N,cAAsB,EACtBnN,QAAwB,EACxBmE,KAAc,EACdiJ,qBAAwC,EACxCC,QAAkC,EACvB;MACX,MAAMC,mBAAmB,GAAGpN,WAAW,CAACqN,2BAA2B,CAACJ,cAAc,EAAEnN,QAAQ,CAAC;MAC7F,MAAMwN,UAAU,GAAG,CAAC,IAAI,CAAC;MACzB,MAAMC,eAAe,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAChG,MAAMC,sBAAsB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;MAC3C,MAAMC,cAAc,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9G,MAAMC,oBAAoB,GAAG,CAAC,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,eAAe,EAAE,UAAU,EAAE,aAAa,CAAC;MAClH,MAAMC,qBAAqB,GAAGC,qBAAqB,CAACC,8BAA8B,CAAC,CAAC;MACpF,MAAMC,kBAAkB,GAAGZ,qBAAqB,KAAK,MAAM,IAAIA,qBAAqB,KAAK,IAAI;MAC7F,IAAIa,gBAA0B,GAAG,EAAE;MACnC,MAAMC,SAAS,GAAGb,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,GAAG1J,IAAI,CAACC,KAAK,CAACyJ,QAAQ,CAAC,CAACc,UAAU,GAAGd,QAAQ;MAEvG,IAAKrN,QAAQ,CAACxD,SAAS,CAAC,GAAG2Q,cAAc,gDAAgD,CAAC,KAAiB,IAAI,EAAE;QAChH,OAAOK,UAAU;MAClB;MAEA,IAAIU,SAAS,IAAIA,SAAS,CAACE,qBAAqB,IAAIF,SAAS,CAACE,qBAAqB,CAACpP,MAAM,GAAG,CAAC,EAAE;QAC/FiP,gBAAgB,GAAGH,qBAAqB,CAACO,mBAAmB,CAACH,SAAS,CAACE,qBAAqB,EAAEjK,KAAK,CAAC;MACrG,CAAC,MAAM;QACN8J,gBAAgB,GAAGK,4BAA4B,CAACC,yBAAyB,CAACpK,KAAK,CAAC;MACjF;MACA;MACA,MAAMqK,iBAAiB,GAAG9S,oBAAoB,CAACyI,KAAK,CAAC;MACrD,IAAIsK,kBAAkB,GAAGD,iBAAiB;MAC1C,IAAIR,kBAAkB,EAAE;QACvB,MAAMU,6BAA6B,GAAGC,6BAA6B,CAACJ,yBAAyB,CAAC,CAAC;QAC/FE,kBAAkB,GAAG,CAAC,GAAGZ,qBAAqB,EAAE,GAAGW,iBAAiB,EAAE,GAAGE,6BAA6B,CAAC;MACxG;MAEA,IAAIE,YAAsB,GAAG,EAAE;;MAE/B;MACA,IACCtB,mBAAmB,IACnBA,mBAAmB,CAACuB,wBAAwB,IAC5CvB,mBAAmB,CAACuB,wBAAwB,CAACrP,SAAS,CAAC,EACtD;QACD;QACA,MAAMsP,kBAAkB,GAAG5O,WAAW,CAAC6O,4BAA4B,CAACzB,mBAAmB,CAACuB,wBAAwB,CAACrP,SAAS,CAAC,CAAC;QAC5H;QACA;;QAEA;QACA,QAAQsP,kBAAkB;UACzB,KAAK,aAAa;YACjB,MAAME,kBAAkB,GAAGV,4BAA4B,CAACW,4BAA4B,CAAC,CAAC;YACtF,MAAMC,eAAe,GAAG/K,KAAK,KAAK,UAAU,IAAI6J,kBAAkB,GAAGgB,kBAAkB,GAAGxB,UAAU;YACpGoB,YAAY,GAAGxT,gBAAgB,CAACqT,kBAAkB,EAAES,eAAe,CAAC;YACpE;UACD,KAAK,YAAY;YAChB,MAAMC,mBAAmB,GAAG,CAAC,GAAG3B,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;YAChEoB,YAAY,GAAGxT,gBAAgB,CAACqT,kBAAkB,EAAEU,mBAAmB,CAAC;YACxE;UACD,KAAK,aAAa;YACjB,IAAI7T,cAAwB;YAC5B,IAAI0S,kBAAkB,EAAE;cACvB,IAAI7J,KAAK,KAAK,UAAU,EAAE;gBACzB7I,cAAc,GAAG2S,gBAAgB;cAClC,CAAC,MAAM,IAAI9J,KAAK,KAAK,oBAAoB,EAAE;gBAC1C7I,cAAc,GAAG2S,gBAAgB;cAClC,CAAC,MAAM;gBACN3S,cAAc,GAAGmS,eAAe;cACjC;YACD,CAAC,MAAM,IAAItJ,KAAK,KAAK,oBAAoB,EAAE;cAC1C7I,cAAc,GAAGoS,sBAAsB;YACxC,CAAC,MAAM;cACNpS,cAAc,GAAGmS,eAAe;YACjC;YACA,MAAM2B,UAAU,GAAGhU,gBAAgB,CAACqT,kBAAkB,EAAEnT,cAAc,CAAC;YACvEsT,YAAY,GAAGQ,UAAU;YACzB;UACD,KAAK,YAAY;YAChBR,YAAY,GAAGxT,gBAAgB,CAACqT,kBAAkB,EAAEd,cAAc,CAAC;YACnE;UACD,KAAK,kBAAkB;YACtBiB,YAAY,GAAGxT,gBAAgB,CAACqT,kBAAkB,EAAEb,oBAAoB,CAAC;YACzE;UACD,KAAK,8BAA8B;YAClCgB,YAAY,GAAGxT,gBAAgB,CAACqT,kBAAkB,EAAEb,oBAAoB,CAACyB,MAAM,CAAC1B,cAAc,CAAC,CAAC;YAChG;UACD;YACC;QACF;QACA;QACA;MACD;MACA,OAAOiB,YAAY;IACpB,CAAC;IACDU,2BAA2B,EAAE,SAAAA,CAAUC,YAAoB,EAAY;MACtE;MACA;MACA,MAAMf,iBAAiB,GAAG9S,oBAAoB,CAAC6T,YAAY,CAAC;MAC5D,MAAM5B,cAAc,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAC9G,OAAOvS,gBAAgB,CAACoT,iBAAiB,EAAEb,cAAc,CAAC;IAC3D;EACD,CAAC;EACAtR,YAAY,CAACyI,iBAAiB,CAAoC0K,gBAAgB,GAAG,IAAI;EAAC,OAE5EnT,YAAY;AAAA","ignoreList":[],"file":"CommonHelper-dbg.js"}