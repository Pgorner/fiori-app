{"!name":"sap.ndc","!version":"1.21.1","!define":{"sap.ndc.BarcodeScannerButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ndc.BarcodeScannerButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ndc.BarcodeScannerButton"},"sap.ndc":{"!description":"SAPUI5 library with controls with native device capabilities.","preferFrontCamera":{"!description":"If set to true, the front camera will be used to decode.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"BarcodeScannerButton":"sap.ndc.BarcodeScannerButton_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"provideFallback":{"!description":"If set to true, the button remains visible if the scanner is not available and triggers a dialog to enter barcode.","!category":"enum","!type":"Boolean"},"!category":"namespace","zoom":{"!description":"Defines the zoom of the camera. This parameter is not supported on iOS.","!category":"enum","!type":"Number"},"keepCameraScan":{"!description":"If set to true, the camera should be used for scanning in Zebra Enterprise Browser.","!category":"enum","!type":"Boolean"},"frameRate":{"!description":"Defines the frame rate of the camera.","!category":"enum","!type":"Number"},"disableBarcodeInputDialog":{"!description":"If the value is true, the Barcode input dialog should be hidden.","!category":"enum","!type":"Boolean"},"!module":"sap/ndc/library","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"!helpDescription":"SAPUI5 library with controls with native device capabilities.","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"BarcodeScanner":"sap.ndc.BarcodeScanner","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"width":{"!description":"Defines the width of the scanner button.","!category":"enum","!type":"sap.ui.core.CSSSize"},"dialogTitle":{"!description":"Defines the barcode input dialog title. If unset, a predefined title will be used.","!category":"enum","!type":"String"}},"sap":{"sap":"sap","!category":"namespace","ndc":"sap.ndc"},"sap.ndc.BarcodeScanner":{"!description":"Please refer to <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://launchpad.support.sap.com/#/notes/2402585\">SAP Note 2402585<\/a> for information on Barcode Scanner support in native iOS and Android browsers.\n\nHere is an example of how to trigger the scan function of BarcodeScanner: <pre>\nsap.ui.require([\"sap/ndc/BarcodeScanner\"], function(BarcodeScanner) {\n\tBarcodeScanner.scan(\n\t\tfunction (oResult) { / * process scan result * / },\n\t\tfunction (oError) { / * handle scan error * / },\n\t\tfunction (oResult) { / * handle input dialog change * / }\n\t);\n});\n<\/pre> The Barcode Scanner control can open the flashlight of Android devices if supported. The Barcode Scanner control can also scan the barcode from a selected image file in gallery, or a photo taking by System Camera App directly.\n\nThe Barcode Scanner control integrates with the laser scanner when the page is loaded in the Enterprise Browser on a Zebra device. To enable laser scanning with a Zebra device, two JavaScript files (ebapi.js and eb.barcode.js) need to be loaded during runtime by the Enterprise Browser. <ul> <li>Your company admin / IT should configure the Barcode API settings in the Enterprise Browser config.xml file using mobile device management (MDM). Refer to <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://techdocs.zebra.com/enterprise-browser/3-3/guide/configreference/\">CustomDOMElements<\/a> for detailed information (recommended).<\/li> <li>Developers can load these files directly into an HTML file. Refer to <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://techdocs.zebra.com/enterprise-browser/3-3/api/barcode/\">Enabling the API<\/a> for detailed information.<\/li> <li>Developers can refer to the <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://launchpad.support.sap.com/#/notes/3390217\">KBA 3390217<\/a> for guidance on configuring Zebra Enterprise Browser.<\/li> <\/ul>","setPhysicalScan":{"!description":"Set the callback function for the physical scan button.","!static":"true","!category":"function","!type":"fn(fnPhysicalScan?: fn())"},"setScanAPIInfo":{"!description":"Set the scanner API info that will be used to scan the barcode.\n\nIMPORTANT: The status of the scanner API must be <strong>\"Available\"<\/strong>(for ZXingCPP, status is <strong>NOT \"UnAvailable\"<\/strong>), or will return False. Scanner APIs with status value can be got by using {@link #getStatusModel}. By default, Barcode Scanner will select the scanner API(Available) with priority: ZebraEnterpriseBrowser > Cordova > ZXingCPP.","!static":"true","!category":"function","!type":"fn(scannerAPI?: String) -> Boolean"},"scan":{"!description":"Starts the barcode scanning process either showing the live input from the camera or displaying a dialog to enter the value directly if the barcode scanning feature is unavailable.\n\nThe barcode scanning is done asynchronously. When it is triggered, this function returns without waiting for the scanning process to finish. The applications have to provide callback functions to react to the events of a successful scanning, an error during scanning, and the live input on the dialog.\n\n<code>fnSuccess<\/code> is passed an object with text, format and cancelled properties. Text is the text representation of the barcode data, format is the type of the barcode detected, and cancelled is whether or not the user cancelled the scan. <code>fnError<\/code> is given the error, <code>fnLiveUpdate<\/code> is passed the new value entered in the dialog's input field. An example:\n\n<pre>\nsap.ui.require([\"sap/ndc/BarcodeScanner\"], function(BarcodeScanner) {\n\tBarcodeScanner.scan(\n\t\tfunction (mResult) {\n\t\t\talert(\"We got a barcode\\n\" +\n\t\t\t \t\"Result: \" + mResult.text + \"\\n\" +\n\t\t\t \t\"Format: \" + mResult.format + \"\\n\" +\n\t\t\t \t\"Cancelled: \" + mResult.cancelled);\n\t\t},\n\t\tfunction (Error) {\n\t\t\talert(\"Scanning failed: \" + Error);\n\t\t},\n\t\tfunction (mParams) {\n\t\t\talert(\"Value entered: \" + mParams.newValue);\n\t\t},\n\t\t\"Enter Product Barcode\",\n\t\ttrue,\n\t\t30,\n\t\t1,\n\t\tfalse,\n\t\tfalse\n\t);\n});\n<\/pre>","!static":"true","!category":"function","!type":"fn(fnSuccess?: fn(), fnFail?: fn(), fnLiveUpdate?: fn(), dialogTitle?: String, preferFrontCamera?: Boolean, frameRate?: Number, zoom?: Number, keepCameraScan?: Boolean, disableBarcodeInputDialog?: Boolean)"},"setFocusedInstanceId":{"!description":"Set the sId of the element to be focused, which will then be used to retrieve the instance of the focused SAP UI5 element.","!static":"true","!category":"function","!type":"fn(sId: String) -> Boolean"},"!category":"namespace","setConfig":{"!description":"Set the configs of the control Barcode Scanner.","!static":"true","!category":"function","!type":"fn(options?: Object)"},"!module":"sap/ndc/BarcodeScanner","!helpDescription":"Please refer to <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://launchpad.support.sap.com/#/notes/2402585\">SAP Note 2402585<\/a> for information on Barcode Scanner support in native iOS and Android browsers.\n\nHere is an example of how to trigger the scan function of BarcodeScanner: <pre>\nsap.ui.require([\"sap/ndc/BarcodeScanner\"], function(BarcodeScanner) {\n\tBarcodeScanner.scan(\n\t\tfunction (oResult) { / * process scan result * / },\n\t\tfunction (oError) { / * handle scan error * / },\n\t\tfunction (oResult) { / * handle input dialog change * / }\n\t);\n});\n<\/pre> The Barcode Scanner control can open the flashlight of Android devices if supported. The Barcode Scanner control can also scan the barcode from a selected image file in gallery, or a photo taking by System Camera App directly.\n\nThe Barcode Scanner control integrates with the laser scanner when the page is loaded in the Enterprise Browser on a Zebra device. To enable laser scanning with a Zebra device, two JavaScript files (ebapi.js and eb.barcode.js) need to be loaded during runtime by the Enterprise Browser. <ul> <li>Your company admin / IT should configure the Barcode API settings in the Enterprise Browser config.xml file using mobile device management (MDM). Refer to <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://techdocs.zebra.com/enterprise-browser/3-3/guide/configreference/\">CustomDOMElements<\/a> for detailed information (recommended).<\/li> <li>Developers can load these files directly into an HTML file. Refer to <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://techdocs.zebra.com/enterprise-browser/3-3/api/barcode/\">Enabling the API<\/a> for detailed information.<\/li> <li>Developers can refer to the <a target=\"_blank\" rel=\"noopener,noreferrer\" href=\"https://launchpad.support.sap.com/#/notes/3390217\">KBA 3390217<\/a> for guidance on configuring Zebra Enterprise Browser.<\/li> <\/ul>","getStatusModel":{"!description":"Returns the status model of the Barcode Scanner. It is a JSON model which contains below properties: <pre>\n{\n\t\tscannerAPI: \"ZXingCPP\",\n\t\tavailable: true,\n\t\tdeviceId: undefined,\n\t\tdevices: [],\n\t\tapis: [\n\t\t\t{\n\t\t\t\tkey: \"ZebraEnterpriseBrowser\",\n\t\t\t\tstatus: \"UnAvailable\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: \"Cordova\",\n\t\t\t\tstatus: \"UnAvailable\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: \"ZXingCPP\",\n\t\t\t\tstatus: \"Available\"\n\t\t\t}\n\t\t]\n\t}\n<\/pre> '<code>scannerAPI<\/code>' shows the current scanner API used to scan the Barcode. '<code>available<\/code>' indicating whether or not the Barcode Scanner feature is available. It can be used to bind to the <code>visible<\/code> property of UI controls which have to be hidden in case the feature is unavailable. '<code>deviceId<\/code>' lists the current used camera id of current device. Not working for iOS devices since do not support to get all the cameras. '<code>devices<\/code>' lists all the cameras of current device. Not working for iOS devices since do not support to get all the cameras. '<code>apis<\/code>' lists scanner APIs with status value. Status value can be: \"Initial\", \"Loading\", \"Available\" or \"UnAvailable\".\n\nIMPORTANT: This model just shows current status of Barcode Scanner. Any change to it will not impact Barcode Scanner.","!static":"true","!category":"function","!type":"fn() -> sap.ui.model.json.JSONModel"},"disableBluetoothBarcodeScanner":{"!description":"Disable the Bluetooth Barcode Scanner.","!static":"true","!category":"function","!type":"fn()"},"closeScanDialog":{"!description":"Closes the barcode input dialog. It can be used to close the dialog before the user presses the OK or the Cancel button (e.g. in the fnLiveUpdate callback function of the {@link sap.ndc.BarcodeScanner.scan} method.)","!static":"true","!category":"function","!type":"fn()"},"enableBluetoothBarcodeScanner":{"!description":"Set the callback function and settings to the Bluetooth Barcode Scanner.\n\nIMPORTANT: If the BarcodeScanner button is included into one iframe, the focus point must be into the window of the iframe. If not, the Bluetooth Barcode Scanner cannot be triggered.","!static":"true","!category":"function","!type":"fn(bluetoothCallBack: fn(), oSettings?: Object) -> Boolean"},"getScanAPIInfo":{"!description":"Returns the scanner API info that will be used to scan the barcode.","!static":"true","!category":"function","!type":"fn() -> String"}},"sap.ndc.BarcodeScannerButton":{"detachScanFail":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:scanFail scanFail} event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getZoom":{"!description":"Gets current value of property {@link #getZoom zoom}.\n\nDefines the zoom of the camera. This parameter is not supported on iOS.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachInputLiveUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:inputLiveUpdate inputLiveUpdate} event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setProvideFallback":{"!description":"Sets a new value for property {@link #getProvideFallback provideFallback}.\n\nIf set to true, the button remains visible if the scanner is not available and triggers a dialog to enter barcode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bProvideFallback?: Boolean) -> sap.ndc.BarcodeScannerButton","parameters":{"bProvideFallback":"type: boolean, description: New value for property <code>provideFallback<\/code>"}},"setZoom":{"!description":"Sets a new value for property {@link #getZoom zoom}.\n\nDefines the zoom of the camera. This parameter is not supported on iOS.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fZoom: Number) -> sap.ndc.BarcodeScannerButton","parameters":{"fZoom":"type: float, description: New value for property <code>zoom<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the scanner button.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"fireScanSuccess":{"!description":"Fires event {@link #event:scanSuccess scanSuccess} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new BarcodeScannerButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getProvideFallback provideFallback} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDialogTitle dialogTitle} : string<\/li>\n<li>{@link #getPreferFrontCamera preferFrontCamera} : boolean (default: false)<\/li>\n<li>{@link #getFrameRate frameRate} : float<\/li>\n<li>{@link #getZoom zoom} : float<\/li>\n<li>{@link #getKeepCameraScan keepCameraScan} : boolean (default: false)<\/li>\n<li>{@link #getDisableBarcodeInputDialog disableBarcodeInputDialog} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:scanSuccess scanSuccess} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:scanFail scanFail} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:inputLiveUpdate inputLiveUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setKeepCameraScan":{"!description":"Sets a new value for property {@link #getKeepCameraScan keepCameraScan}.\n\nIf set to true, the camera should be used for scanning in Zebra Enterprise Browser.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bKeepCameraScan?: Boolean) -> sap.ndc.BarcodeScannerButton","parameters":{"bKeepCameraScan":"type: boolean, description: New value for property <code>keepCameraScan<\/code>"}},"getDisableBarcodeInputDialog":{"!description":"Gets current value of property {@link #getDisableBarcodeInputDialog disableBarcodeInputDialog}.\n\nIf the value is true, the Barcode input dialog should be hidden.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFrameRate":{"!description":"Sets a new value for property {@link #getFrameRate frameRate}.\n\nDefines the frame rate of the camera.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fFrameRate: Number) -> sap.ndc.BarcodeScannerButton","parameters":{"fFrameRate":"type: float, description: New value for property <code>frameRate<\/code>"}},"setPreferFrontCamera":{"!description":"Sets a new value for property {@link #getPreferFrontCamera preferFrontCamera}.\n\nIf set to true, the front camera will be used to decode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreferFrontCamera?: Boolean) -> sap.ndc.BarcodeScannerButton","parameters":{"bPreferFrontCamera":"type: boolean, description: New value for property <code>preferFrontCamera<\/code>"}},"fireScanFail":{"!description":"Fires event {@link #event:scanFail scanFail} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getDialogTitle":{"!description":"Gets current value of property {@link #getDialogTitle dialogTitle}.\n\nDefines the barcode input dialog title. If unset, a predefined title will be used.","!static":false,"!category":"function","!type":"fn() -> String"},"getPreferFrontCamera":{"!description":"Gets current value of property {@link #getPreferFrontCamera preferFrontCamera}.\n\nIf set to true, the front camera will be used to decode.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFrameRate":{"!description":"Gets current value of property {@link #getFrameRate frameRate}.\n\nDefines the frame rate of the camera.","!static":false,"!category":"function","!type":"fn() -> Number"},"getKeepCameraScan":{"!description":"Gets current value of property {@link #getKeepCameraScan keepCameraScan}.\n\nIf set to true, the camera should be used for scanning in Zebra Enterprise Browser.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A button control (displaying a barcode icon) to start the barcode scanning process. If the native scanning feature is not available or camera capability is not granted, the button is either hidden or it provides a fallback by opening a dialog with an input field where the barcode can be entered manually.","getProvideFallback":{"!description":"Gets current value of property {@link #getProvideFallback provideFallback}.\n\nIf set to true, the button remains visible if the scanner is not available and triggers a dialog to enter barcode.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachScanFail":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:scanFail scanFail} event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ndc.BarcodeScannerButton<\/code> itself.\n\nEvent is fired when the native scanning process is failed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ndc.BarcodeScannerButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ndc.BarcodeScannerButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachInputLiveUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:inputLiveUpdate inputLiveUpdate} event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ndc.BarcodeScannerButton<\/code> itself.\n\nEvent is fired when the text in the dialog's input field is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ndc.BarcodeScannerButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDisableBarcodeInputDialog":{"!description":"Sets a new value for property {@link #getDisableBarcodeInputDialog disableBarcodeInputDialog}.\n\nIf the value is true, the Barcode input dialog should be hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisableBarcodeInputDialog?: Boolean) -> sap.ndc.BarcodeScannerButton","parameters":{"bDisableBarcodeInputDialog":"type: boolean, description: New value for property <code>disableBarcodeInputDialog<\/code>"}},"attachScanSuccess":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:scanSuccess scanSuccess} event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ndc.BarcodeScannerButton<\/code> itself.\n\nEvent is fired when the scanning is finished or cancelled","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ndc.BarcodeScannerButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDialogTitle":{"!description":"Sets a new value for property {@link #getDialogTitle dialogTitle}.\n\nDefines the barcode input dialog title. If unset, a predefined title will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDialogTitle?: String) -> sap.ndc.BarcodeScannerButton","parameters":{"sDialogTitle":"type: string, description: New value for property <code>dialogTitle<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the scanner button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ndc.BarcodeScannerButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"detachScanSuccess":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:scanSuccess scanSuccess} event of this <code>sap.ndc.BarcodeScannerButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ndc.BarcodeScannerButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ndc/BarcodeScannerButton","!helpDescription":"A button control (displaying a barcode icon) to start the barcode scanning process. If the native scanning feature is not available or camera capability is not granted, the button is either hidden or it provides a fallback by opening a dialog with an input field where the barcode can be entered manually.","fireInputLiveUpdate":{"!description":"Fires event {@link #event:inputLiveUpdate inputLiveUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ndc.BarcodeScannerButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}}}}