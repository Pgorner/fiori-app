{"!name":"sap.ushell","!version":"1.21.1","!define":{"sap.ushell.ui.launchpad.VizInstanceBase":{"!description":"Wrapper control for tiles. This control must only be created via {@link sap.ushell.services.VisualizationInstantiation#instantiateVisualization}","extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.VizInstanceBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.VizInstanceBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getActive active} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setActive":{"!description":"Sets a new value for property {@link #getActive active}.\n\nCurrent active state. Can be used to update visibility of the VizInstance.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bActive?: Boolean) -> sap.ushell.ui.launchpad.VizInstanceBase","parameters":{"bActive":"type: boolean, description: New value for property <code>active<\/code>"}},"!module":"sap/ushell/ui/launchpad/VizInstanceBase","!helpDescription":"Wrapper control for tiles. This control must only be created via {@link sap.ushell.services.VisualizationInstantiation#instantiateVisualization}","!proto":"sap.ui.core.Control","!category":"class","getActive":{"!description":"Gets current value of property {@link #getActive active}.\n\nCurrent active state. Can be used to update visibility of the VizInstance.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ushell.services.ContentExtensionAdapterFactory":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>undefined","!module":"sap/ushell/services/ContentExtensionAdapterFactory","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>undefined","getAdapters":{"!description":"Constructs a new instance of the Content Extension Adapter Factory. An array of adapter configurations needs to be passed to it (one specific adapter for each extended content). The configuration can be passed explicitly as an array vConfig or coded in ContentExtensionAdapterConfig.\n\nOnce instantiated, it generates a map of all the needed adapters and returns them (as a promise) with the method #getAdapterMap. Once the Promises resolve, the adapters are available in the map.\n\nIMPORTANT: aConfig.contentProviderName is the string any content would use to indicate the LaunchPage service which adapter needs to be used through a field \"contentProvider\" e.g. oGroup.contentProvider\n\nCurrently, the configuration mocks the content through FeatureGroupConfig and uses the local adapter. This should be changed once a dedicated adapter for the extended content exists.","!static":"true","!category":"function","!type":"fn(vConfigs: [Object]) -> Promise<object>"},"!category":"namespace"},"sap.ushell.services.Personalization.PersonalizationContainerVariant":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Personalization#getContainer} instead<br>The personalization variant contains personalization data. It is used in the personalization container mode.\n\nTo be called by the personalization variant set.","delItem":{"!description":"Deletes an item from this variant. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"!module":"sap/ushell/services/_Personalization/PersonalizationContainerVariant","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Personalization#getContainer} instead<br>The personalization variant contains personalization data. It is used in the personalization container mode.\n\nTo be called by the personalization variant set.","setItemValue":{"!description":"Sets the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String, item: Object)","parameters":{"item":"type: object, description: value (JSON object)","sItemKey":"type: string, description: item key"}},"getVariantKey":{"!description":"Returns the key of this variant.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.base.Object","containsItem":{"!description":"Checks if a specific item is contained in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"getItemKeys":{"!description":"Returns an array with the keys of all items in this variant.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getVariantName":{"!description":"Returns the name of this variant.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","getItemValue":{"!description":"Returns the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}}},"sap.ushell.services.Service_obj":{"!type":"fn()","prototype":"sap.ushell.services.Service"},"sap.ushell.services.LaunchPage_obj":{"!type":"fn()","prototype":"sap.ushell.services.LaunchPage"},"sap.ushell.services.Personalization.ContextContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.ContextContainer} instead<br>The container is the anchor object of the unified shell personalization in container mode.\n\nTo be called by the personalization service getContainer method.","getKey":{"!description":"return the container key as a string variable","!static":false,"!category":"function","!type":"fn() -> String"},"getUnmodifiableContainer":{"!description":"Return an instance unmodifiable container instance. There is one instance of this wrapper per container. It will permit all read accesses to the container, but block all modifying accesses.","!static":false,"!category":"function","!type":"fn() -> Object"},"_getInternalKeys":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 undefined<br>Returns an array with all internal keys of direct items in the container.","!static":false,"!category":"function","!type":"fn() -> [String]"},"delItem":{"!description":"Deletes a direct item from the container. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"setItemValue":{"!description":"Sets the value of a direct item in the container. In case the item is already existing its value is overwritten. In case it is not existing a new item with this key and value is created. The value is serialized during set","!static":false,"!category":"function","!type":"fn(sItemKey: String, sItemValue: Object)","parameters":{"sItemValue":"type: object, description: item value (JSON object)","sItemKey":"type: string, description: item key The string length is restricted to 40 characters"}},"!proto":"sap.ui.base.Object","clear":{"!description":"clears the local copy data of this container","!static":false,"!category":"function","!type":"fn()"},"containsItem":{"!description":"Checks if a specific direct item is contained in the container.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"save":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 Use {@link sap.ushell.services.Personalization.ContextContainer#saveDeferred} instead<br>Attempts to save the current container data at the underlying storage asynchronously. The current state is serialized.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"!category":"class","getValidity":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31 Support for this function has been discontinued.<br>return the validity of this container only for testing!","!static":false,"!category":"function","!type":"fn()"},"getItemValue":{"!description":"Returns the value for a direct item from the container. (Value semantics, new copy is returned)","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"!module":"sap/ushell/services/_Personalization/ContextContainer","flush":{"!description":"flush all pending request; The result of the promise may reflect the last pending operation in the queue","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"load":{"!description":"(Re)loads the current container data from the underlying storage asynchronously. The current local data is discarded.\n\nReturns a promise for the load operation. If another save/load/delete operation is not completed, the operation may fail! (wait for the other promise).\n\nSynchronous read and write operations before the load is done have undefined effects.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.ContextContainer} instead<br>The container is the anchor object of the unified shell personalization in container mode.\n\nTo be called by the personalization service getContainer method.","getItemKeys":{"!description":"Returns an array with the keys of direct items in the container.","!static":false,"!category":"function","!type":"fn() -> [String]"},"saveDeferred":{"!description":"Save the current container data at the underlying storage asynchronously at the earlies nDelayInMilliseconds seconds before. The current state is serialized.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"}},"sap.ushell.services.CrossApplicationNavigation":{"getLinks":{"!description":"Resolves the given semantic object (and action) and business parameters to a list of links available to the user.","!static":false,"!category":"function","!type":"fn(vArgs?: [Object | Object]) -> jQuery.Promise","parameters":{"vArgs":"type: object|object[], description: An object containing nominal arguments for the method, having the following structure:\n\n<pre>\n  {\n     semanticObject: \"Object\", // optional, matches any semantic objects if undefined\n     action: \"action\",         // optional, matches any actions if undefined\n     params: {                 // optional business parameters\n        A: \"B\",\n        C: [\"e\", \"j\"]\n     },\n     withAtLeastOneUsedParam: true, // optional, defaults to false.\n                                    // If true, returns only the links that use at least one (non sap-) parameter from 'params'.\n\n     sortResultsBy: \"intent\", // optional parameter that decides on how the returned results will be sorted.\n                              // Possible values are:\n                              //   - \"intent\" (default) lexicographical sort on returned 'intent' field\n                              //   - \"text\" lexicographical sort on returned 'text' field\n                              //   - \"priority\" experimental - top intents are returned first\n\n     treatTechHintAsFilter : true, // optional, defaults to false.\n                                   // if true, only apps that match exactly the supplied technology (e.g. sap-ui-tech-hint=WDA) will be considered.\n\n     ui5Component: UI5Component, // mandatory, the UI5 component invoking the service, shall be a root component!\n\n     appStateKey: \"abc123...\",   // optional, application state key to add to the generated links, SAP internal usage only.\n\n     compactIntents: true        // optional, whether intents should be returned in compact format. Defaults to false.\n\n     ignoreFormFactor: true,     // optional, defaults to false, deprecated, do not use, may have no effect in the future.\n\n     tags: [\"tag-1\", \"tag-2\"]    // optional, if specified, only returns links that match inbound with certain tags.\n  }\n  <\/pre>\n\nStarting from UI5 version 1.52.0 the <code>params<\/code> argument can be specified in the extended format:\n\n<pre>\n  ...\n  params: {\n     P1: { value: \"v1\" },\n     P2: { value: [\"v2\", \"v3\"] }\n  }\n  <\/pre>\n\nWhen the parameter is expressed in this format, the caller can specify additional search options.\n\nBesides 'value', supported search options for the extended format are: <ul> <li> <b>required<\/b>: whether the parameter must be required (true) or not required (false) in the signature of the matching target (once the navigation occurs to the returned link). Note that this option will be effective if the Fiori Launchpad is configured to resolve navigation targets via <code>sap.ushell.services.ClientSideTargetResolution<\/code> and therefore may not be supported in all platforms.<br />\n\nExample: <pre>\n        ...\n        params: {\n          P1: { value: \"v1\", required: true },\n          P2: { value: [\"v2\", \"v3\"] }\n        }\n        ...\n      <\/pre> <\/li> <\/ul>\n\n<p>This method supports a mass invocation interface to obtain multiple results with a single call, as shown in the following example:\n\n<pre>\n    oCrossApplicationService.getLinks([ // array, because multiple invocations are to be made\n       [                           // arguments for the first invocation\n         { semanticObject: \"SO\" }  // this method supports one parameter only in each call\n       ],\n       [                           // arguments for the second invocation\n         { action: \"someAction\" }\n       ]\n       // ... and so on\n    ]).done(\u2026);\n  <\/pre>\n\n<p>Calling this method with no arguments will produce the same result as if the method was called with an empty object.<\/p>"}},"getDistinctSemanticObjects":{"!description":"Returns a list of semantic objects of the intents the current user can navigate to.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"hrefForExternal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.98 Please use {@link #hrefForExternalAsync} instead.<br>Returns a string which can be put into the DOM (e.g. in a link tag). <b>Note:<\/b> The generated url / url segment must not be used as <code>shellHash<\/code> in the target definition of {@link sap.ushell.services.CrossApplicationNavigation#toExternal}","!static":false,"!category":"function","!type":"fn(oArgs: Object, oComponent?: Object, bAsync: Boolean) -> String | Promise<string>","parameters":{"oArgs":"type: object, description: object encoding a semantic object and action, e.g. <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { A : \"B\" }\n  }\n  <\/pre> or e.g. <pre>\n  {\n    target : {\n      semanticObject : \"AnObject\",\n      action: \"action\", context  : \"AB7F3C\"\n    },\n    params : {\n      A : \"B\",\n      c : \"e\"\n    }\n  }\n  <\/pre> or <pre>{ target : { shellHash : \"SO-36?jumper=postman\" } }<\/pre>","oComponent":"type: object, description: the root component of the application","bAsync":"type: boolean, description: if set to <code>true<\/code>, a promise will be returned instead of the direct argument. The promise will only succeed after all compaction requests have been sent. <code>bAsync=false<\/code> is deprecated since 1.94."}},"!proto":"sap.ushell.services.Service","isInitialNavigation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.94 Please use {@link #isInitialNavigationAsync} instead.<br>Checks wether the FLP currently shows the initially loaded navigation target (i.e. the intent it was started with). This method can be used to e.g. detect whether the current app was started directly, that is, without a navigation from another app or FLP home.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","hrefForAppSpecificHash":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.94 Please use {@link #hrefForAppSpecificHashAsync} instead.<br>Returns a string which can be put into the DOM (e.g. in a link tag) given an application specific hash suffix\n\nExample: <code>hrefForAppSpecificHash(\"View1/details/0/\")<\/code> returns <code>#SemanticObject-action&/View1/details/0/<\/code> if the current application runs in the shell and was started using \"SemanticObject-action\" as shell navigation hash","!static":false,"!category":"function","!type":"fn(sAppHash: String) -> String","parameters":{"sAppHash":"type: string, description: the app specific router, obtained e.g. via router.getURL(...). Note that sAppHash shall not exceed 512 bytes when serialized as UTF-8."}},"getSemanticObjectLinks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Please use {@link #getLinks} instead.<br>Resolves a given semantic object and business parameters to a list of links, taking into account the form factor of the current device.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String, mParameters?: Object, bIgnoreFormFactor?: Boolean, oComponent?: Object, sAppStateKey?: String, bCompactIntents?: Boolean) -> jQuery.Promise","parameters":{"sAppStateKey":"type: string, description: application state key to add to the generated links, SAP internal usage only","bIgnoreFormFactor":"type: boolean, description: when set to <code>true<\/code> the form factor of the current device is ignored","oComponent":"type: object, description: SAP UI5 Component invoking the service","sSemanticObject":"type: string, description: the semantic object such as <code>\"AnObject\"<\/code>","bCompactIntents":"type: boolean, description: whether the returned intents should be returned in compact format. Defaults to false.","mParameters":"type: object, description: the map of business parameters with values, for instance <pre>\n  {\n    A: \"B\",\n    c: \"e\"\n  }\n<\/pre>"}},"hrefForExternalAsync":{"!description":"Returns a promise resolving to a URL that launches an app with certain parameters. The URL can be used to define a link to a Fiori application, for example.","!static":false,"!category":"function","!type":"fn(oArgs: Object, oComponent?: Object) -> Promise<string>","parameters":{"oArgs":"type: object, description: object encoding a semantic object and action, e.g. <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { A : \"B\" }\n  }\n<\/pre> or e.g. <pre>\n  {\n    target : {\n      semanticObject : \"AnObject\",\n      action: \"action\", context  : \"AB7F3C\"\n    },\n    params : {\n      A : \"B\",\n      c : \"e\"\n    }\n  }\n<\/pre> or <pre>\n  {\n    target : {\n      shellHash : \"SO-36?jumper=postman\"\n    }\n  }\n <\/pre>","oComponent":"type: object, description: the root component of the application"}},"_getAppStateData":{"!description":"Get data of an AppStates data given a key. A lookup for a cross user app state will be performed.","!static":false,"!category":"function","!type":"fn(sAppStateKey: Object) -> jQuery.Promise","parameters":{"sAppStateKey":"type: object, description: the application state key, or an array, see below. SAP internal usage only."}},"backToPreviousApp":{"!description":"Attempts to use the browser history to navigate to the previous app.\n\nA navigation to the Fiori launchpad Home is performed when this method is called on a first navigation. In all other cases, this function simply performs a browser back navigation.\n\nNote that the behavior of this method is subject to change and therefore it may not yield to the expected results especially on mobile devices where \"back\" is the previous inner-app state if these are put into the history!","!static":false,"!category":"function","!type":"fn() -> Promise<undefined>"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Navigation} instead<br>The Unified Shell's CrossApplicationNavigation service. Allows navigating to \"external\" targets outside of the currently running app (but still in scope of the current Fiori launchpad) or to create links to such external targets.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const CrossApplicationNavigation = await Container.getServiceAsync(\"CrossApplicationNavigation\");\n    // do something with the CrossApplicationNavigation service\n  });\n<\/pre>\n\nThe CrossApplicationNavigation service currently provides platform independent functionality.\n\nThe service is meant to be used by applications, plugins and shell components.\n\nUsage: <pre>\n     CrossApplicationNavigation.hrefForExternalAsync({\n         target : {\n             semanticObject: \"Product\",\n             action: \"display\"\n         },\n         params: {\n             \"ProductID\": \"102343333\"\n         }\n     }).then( function(sHref) {\n         // Place sHref somewhere in the DOM\n     });\n  <\/pre>\n\nParameter names and values are case sensitive.\n\nNote that the usage of multi-valued parameters (specifying an array with more than one member as parameter value, e.g. <code>params : { A : [\"a1\", \"a2\"] }<\/code>) is possible with this API but <b>strongly discouraged<\/b>. Depending on the used platform / back-end implementation the target matching might not supported multi-value parameters. Furthermore, it is not guaranteed that additional parameter values specified in the back-end configuration are merged with parameter values passed in this method.\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as UTF-8.\n\nNote that when receiving the values as startup parameters (as part of the component data object) single values are represented as an array of size 1. Above example is returned as <code> deepEqual(getComponentData().startupParameters , { \"ProductID\" : [ \"102343333\" ] } ) <\/code>\n\nMake sure not to store security critical data within an URL. URLs may appear in a server log, be persisted inside and outside the system.\n\nNote: When constructing large URLs, the URLs may be shortened and persisted on a database server for prolonged time, the actual data is persisted under a key accessible to any User (guessing the key).\n\nThe same restrictions apply for the Application state.","toExternal":{"!description":"Triggers a navigation to a specified target outside of the currently running application (e.g. different launchpad application). Invocation will trigger a hash change and subsequent invocation of the target.\n\nIf the navigation target opens in a new window the running application may be retained.","!static":false,"!category":"function","!type":"fn(oArgs: Object, oComponent?: Object) -> Promise<undefined>","parameters":{"oArgs":"type: object, description: A configuration object describing the navigation target. The navigation target can be provided as its separate aspects like semantic object, action, parameters etc. in separate members of the configuration object.\n\n<b>Note:<\/b> Parameter values can contain special characters and must be provided unencoded; the function takes care for necessary encodings itself.\n\nSimple Example: <pre>\n{\n  target: {\n    semanticObject: \"Customer\",\n    action: \"display\"\n  },\n  params: {\n    customerId: \"0815-4711\"\n  }\n}\n<\/pre>\n\nExample with text: <pre>\n{\n  target: {\n    semanticObject: \"Note\",\n    action: \"create\"\n  },\n  params: {\n    noteText: \"Thanks for reading the documentation!\"\n  }\n}\n<\/pre>\n\nExample with a given context: <pre>\n{\n  target: {\n    semanticObject: \"AnObject\",\n    action: \"action\",\n    context: \"AB7F3C\"\n  },\n  params: {\n    param1: \"Value One\"\n  }\n}\n<\/pre>\n\nAlternatively a <code>shellHash<\/code> can be provided that includes already all aspects of the navigation target: semantic object, action, intent parameters, app-specific route (including app parameters)\n\n<b>Note:<\/b> While parameters need to be url-encoded once when used in the <code>shellHash<\/code> the app specific route must not be encoded.\n\nExample with shellHash as target: <pre>\n{\n  target: {\n    shellHash: \"Note-update?noteText=You%20got%20quite%20far&/Notes/My First Note\"\n  }\n}\n<\/pre>\n\nTo navigate to the homepage of the Fiori launchpad, navigate to <code>{target: {shellHash: \"#\"}}<\/code>. Do not use \"#Shell-home\" or \"Shell-home\" to navigate to!\n\nTo provide a complex parameter structure to a target app the pseudo parameter <code>sap-xapp-state-data<\/code> can be used.\n\nExample: <pre>\n{\n  ...\n  params : {\n    \"sap-xapp-state-data\": JSON.stringify({ a: \"b\", c: \"d\" })\n  }\n}\n<\/pre>\n\nThe data specified via <code>sap-xapp-state-data<\/code> is passed to the target application in the <code>sap-xapp-state<\/code> parameter. The <code>sap-xapp-state-data<\/code> parameter itself is not passed to the target application.\n\n<b>Note:<\/b> The parameter length (including semantic object and action) shall not exceed 512 bytes when serialized as UTF-8.","oComponent":"type: object, description: an optional UI5 component, used to logically attach a possibly generated app state."}},"createComponentInstance":{"!description":"Resolves a given navigation intent (if valid) and returns the respective component instance for further processing.\n\nThis method should be accessed by the Unified Inbox and Copilot only.","!static":false,"!category":"function","!type":"fn(sIntent: String, oConfig?: Object, oOwnerComponent?: Object) -> jQuery.Promise","parameters":{"oOwnerComponent":"type: object, description: If specified, the created component will be called within the context of the oOwnerComponent (via oOwnerComponent.runAsOwner(fn))","oConfig":"type: object, description: Configuration used to instantiate the component, when given it is expected that the only property contained in this object is `componentData`. When the `componentData` is not relevant, then this method should be called with an empty object or null otherwise it throws. Note that the `componentData` member is cloned for use by this method, and the following properties are unconditionally set by this method and should not be passed in `componentData`: -- componentData.startupParameters, componentData.config, componentData[\"sap-xapp-state\"].","sIntent":"type: string, description: Semantic object and action as a string with a \"#\" as prefix"}},"isInitialNavigationAsync":{"!description":"Checks whether the FLP has performed the first navigation. This method can be used to detect whether the current app was started directly, that is, without a previous navigation to another app, to the FLP home, or another target that adds an entry in the browser history.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"createEmptyAppStateAsync":{"!description":"Creates an empty app state object which acts as a parameter container for cross app navigation.","!static":false,"!category":"function","!type":"fn(oAppComponent: Object, bTransientEnforced: Boolean, sPersistencyMethod: String, oPersistencySettings: Object) -> Promise<object>","parameters":{"oAppComponent":"type: object, description: A UI5 component used as context for the app state.","bTransientEnforced":"type: boolean, description: If set to <code>true<\/code> the appstate is not persisted on the backend. If set to <code>false<\/code> or <code>undefined<\/code> the persistency location is determined by the global ushell configuration.","oPersistencySettings":"type: object, description: Persistency settings.","sPersistencyMethod":"type: string, description: See sap/ushell/services/appstate/AppStatePersistencyMethod for possible values. Support depends on the used platform."}},"historyBack":{"!description":"Navigates back in history the number of given steps if this is supported by the underlying platform. If no argument is provided it will navigate back 1 step.","!static":false,"!category":"function","!type":"fn(iSteps: Number)","parameters":{"iSteps":"type: int, description: positive integer representing the steps to go back in the history"}},"getAppState":{"!description":"Get an app state object given a key. A lookup for a cross user app state will be performed.","!static":false,"!category":"function","!type":"fn(oAppComponent: Object, sAppStateKey: Object) -> jQuery.Promise","parameters":{"oAppComponent":"type: object, description: UI5 component, key will be extracted from component data","sAppStateKey":"type: object, description: the application state key. SAP internal usage only."}},"hrefForAppSpecificHashAsync":{"!description":"Returns a Promise which resolves a string that can be put into the DOM (e.g. in a link tag) given an application specific hash suffix\n\nExample: <code>hrefForAppSpecificHashAsync(\"View1/details/0/\")<\/code> returns a Promise that resolves: <code>#SemanticObject-action&/View1/details/0/<\/code> if the current application runs in the shell and was started using \"SemanticObject-action\" as shell navigation hash","!static":false,"!category":"function","!type":"fn(sAppHash: String) -> Promise<string>","parameters":{"sAppHash":"type: string, description: the app specific router, obtained e.g. via router.getURL(...). Note that sAppHash shall not exceed 512 bytes when serialized as UTF-8."}},"resolveIntent":{"!description":"Resolves the URL hash fragment.\n\nThis function gets the hash part of the URL and returns the URL of the target application.\n\nThis is an asynchronous operation.","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> jQuery.Promise","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format (as obtained by the SAPUI5 hasher service) not as given in <code>location.hash<\/code>)! Example: <code>#SemanticObject-action?P1=V1&P2=A%20B%20C<\/code>"}},"!module":"sap/ushell/services/CrossApplicationNavigation","getPrimaryIntent":{"!description":"For a given semantic object, this method considers all actions associated with the semantic object and returns the one tagged as a \"primaryAction\". If no inbound tagged as \"primaryAction\" exists, then the intent of the first inbound (after sorting has been applied) matching the action \"displayFactSheet\".\n\nThe primary intent is determined by querying {@link sap.ushell.services.CrossApplicationNavigation#getLinks} with the given semantic object and optional parameter. Then the resulting list is filtered to the outcome that a single item remains.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String, mParameters?: Object) -> jQuery.Promise","parameters":{"sSemanticObject":"type: string, description: Semantic object.","mParameters":"type: object, description: @see sap.ushell.services.CrossApplicationNavigation#getSemanticObjectLinks for description."}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Navigation} instead<br>The Unified Shell's CrossApplicationNavigation service. Allows navigating to \"external\" targets outside of the currently running app (but still in scope of the current Fiori launchpad) or to create links to such external targets.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const CrossApplicationNavigation = await Container.getServiceAsync(\"CrossApplicationNavigation\");\n    // do something with the CrossApplicationNavigation service\n  });\n<\/pre>\n\nThe CrossApplicationNavigation service currently provides platform independent functionality.\n\nThe service is meant to be used by applications, plugins and shell components.\n\nUsage: <pre>\n     CrossApplicationNavigation.hrefForExternalAsync({\n         target : {\n             semanticObject: \"Product\",\n             action: \"display\"\n         },\n         params: {\n             \"ProductID\": \"102343333\"\n         }\n     }).then( function(sHref) {\n         // Place sHref somewhere in the DOM\n     });\n  <\/pre>\n\nParameter names and values are case sensitive.\n\nNote that the usage of multi-valued parameters (specifying an array with more than one member as parameter value, e.g. <code>params : { A : [\"a1\", \"a2\"] }<\/code>) is possible with this API but <b>strongly discouraged<\/b>. Depending on the used platform / back-end implementation the target matching might not supported multi-value parameters. Furthermore, it is not guaranteed that additional parameter values specified in the back-end configuration are merged with parameter values passed in this method.\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as UTF-8.\n\nNote that when receiving the values as startup parameters (as part of the component data object) single values are represented as an array of size 1. Above example is returned as <code> deepEqual(getComponentData().startupParameters , { \"ProductID\" : [ \"102343333\" ] } ) <\/code>\n\nMake sure not to store security critical data within an URL. URLs may appear in a server log, be persisted inside and outside the system.\n\nNote: When constructing large URLs, the URLs may be shortened and persisted on a database server for prolonged time, the actual data is persisted under a key accessible to any User (guessing the key).\n\nThe same restrictions apply for the Application state.","createComponentData":{"!description":"Resolves a given navigation intent (if valid) and returns the respective component data only for further processing.\n\nThis method should be accessed by the Unified Inbox only.","!static":false,"!category":"function","!type":"fn(sIntent: String, oConfig?: Object) -> Promise<object>","parameters":{"oConfig":"type: object, description: Configuration used to instantiate the component, when given it is expected that the only property contained in this object is `componentData`. When the `componentData` is not relevant, then this method should be called with an empty object or null otherwise it throws. Note that the `componentData` member is cloned for use by this method, and the following properties are unconditionally set by this method and should not be passed in `componentData`: -- componentData.startupParameters, componentData.config, componentData[\"sap-xapp-state\"].","sIntent":"type: string, description: Semantic object and action as a string with a \"#\" as prefix"}},"getStartupAppState":{"!description":"Get the app state object that was used for the current cross application navigation","!static":false,"!category":"function","!type":"fn(oAppComponent: Object) -> jQuery.Promise","parameters":{"oAppComponent":"type: object, description: UI5 component, key will be extracted from component data"}},"isNavigationSupported":{"!description":"Tells whether the given navigation intents are supported for the given parameters, form factor etc. . \"Supported\" means that a valid navigation target is configured for the user and for the given device.\n\n<code>isNavigationSupported<\/code> is effectively a test function for {@link sap.ushell.services.CrossApplicationNavigation#toExternal} and {@link sap.ushell.services.CrossApplicationNavigation#hrefForExternal}.\n\nIt is functionally equivalent to {@link sap.ushell.services.CrossApplicationNavigation#isIntentSupported} but accepts the same interface as {@link sap.ushell.services.CrossApplicationNavigation#toExternal} and {@link sap.ushell.services.CrossApplicationNavigation#hrefForExternal}.","!static":false,"!category":"function","!type":"fn(aIntents: [Object], oComponent?: Object) -> jQuery.Promise","parameters":{"aIntents":"type: object[], description: The intents to be checked, with <code>object[]<\/code> being instances of the <code>oArgs<\/code> argument of the <code>toExternal<\/code> or <code>hrefForExternal<\/code> methods, e.g. <pre>\n  {\n    target: {\n      semanticObject: \"AnObject\",\n      action: \"action\"\n    },\n    params: { A: \"B\" }\n  }\n<\/pre> or e.g. <pre>\n  {\n    target: {\n      semanticObject: \"AnObject\",\n      action: \"action\"\n    },\n    params: {\n      A: \"B\",\n      c: \"e\"\n    }\n  }\n<\/pre> or <pre>\n  {\n    target: {\n       shellHash: \"SalesOrder-approve?SOId=1234\"\n    }\n  }\n<\/pre>","oComponent":"type: object, description: The root component of the application"}},"saveMultipleAppStates":{"!description":"persist multiple app states (in future potentially batched in a single roundtrip)","!static":false,"!category":"function","!type":"fn(aAppStates: [Object]) -> jQuery.Promise","parameters":{"aAppStates":"type: object[], description: Array of application States"}},"isIntentSupported":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31 Please use {@link #isNavigationSupported} instead. Note that this has a slightly different response format.<br>Tells whether the given intent(s) are supported, taking into account the form factor of the current device. \"Supported\" means that navigation to the intent is possible. Note that the intents are assumed to be in internal format and expanded.","!static":false,"!category":"function","!type":"fn(aIntents: [String], oComponent?: Object) -> jQuery.Promise","parameters":{"aIntents":"type: string[], description: the intents (such as <code>[\"#AnObject-action?A=B&c=e\"]<\/code>) to be checked","oComponent":"type: object, description: the root component of the application"}},"createEmptyAppState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.95 Please use {@link #createEmptyAppStateAsync} instead.<br>Creates an empty app state object which acts as a parameter container for cross app navigation.","!static":false,"!category":"function","!type":"fn(oAppComponent: Object, bTransientEnforced: Boolean, sPersistencyMethod: String, oPersistencySettings: Object) -> Object","parameters":{"oAppComponent":"type: object, description: A UI5 component used as context for the app state.","bTransientEnforced":"type: boolean, description: If set to <code>true<\/code> the appstate is not persisted on the backend. If set to <code>false<\/code> or <code>undefined<\/code> the persistency location is determined by the global ushell configuration.","oPersistencySettings":"type: object, description: Persistency settings.","sPersistencyMethod":"type: string, description: See sap/ushell/services/appstate/AppStatePersistencyMethod for possible values. Support depends on the used platform."}},"expandCompactHash":{"!description":"if sHashFragment is a compacted hash (sap-intent-param is present), in a hash, this function replaces it into a long url with all parameters expanded","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> jQuery.Promise","parameters":{"sHashFragment":"type: string, description: an (internal format) shell hash"}}},"sap.ushell.System":{"!description":"A representation of a system Constructs a new system object representing a system used in the Unified Shell.","!module":"sap/ushell/System","!helpDescription":"A representation of a system Constructs a new system object representing a system used in the Unified Shell.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.NotificationsV2.Nature":{"!description":"Enumeration for The nature of the notification","POSITIVE":{"!description":"The Positive nature.","!category":"enum","!type":"String"},"!module":"sap/ushell/services/NotificationsV2","NEGATIVE":{"!description":"The Negative nature.","!category":"enum","!type":"String"},"!category":"static class","NEUTRAL":{"!description":"The Neutral nature.","!category":"enum","!type":"String"}},"sap.ushell.services.Notifications_obj":{"!type":"fn()","prototype":"sap.ushell.services.Notifications"},"sap.ushell.ui5service.UserStatus_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.UserStatus with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.service.Service.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ushell.ui5service.UserStatus"},"sap.ushell.api.Inbox":{"!description":"The My Inbox app needs to instantiate app components based on intents for which this API provides utility functions.","!module":"sap/ushell/api/Inbox","createComponentInstance":{"!description":"Resolves a given navigation intent (if valid) and returns the respective component instance for further processing.","!static":"true","!category":"function","!type":"fn(sIntent: String, oComponentData?: Object, oOwnerComponent?: sap.ui.core.Component) -> Promise<sap.ui.core.Component>"},"!helpDescription":"The My Inbox app needs to instantiate app components based on intents for which this API provides utility functions.","createComponentInstantiationData":{"!description":"Resolves a given navigation intent (if valid) and returns the respective component data only for further processing.","!static":"true","!category":"function","!type":"fn(sIntent: String, oComponentData?: sap.ushell.services.Ui5ComponentLoader.ComponentData) -> Promise<sap.ushell.services.Ui5ComponentLoader.ComponentData>"},"!category":"namespace"},"sap.ushell.services.UserDefaultParameters":{"!description":"The Unified Shell's UserDefaultParameters service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UserDefaultParameters = await Container.getServiceAsync(\"UserDefaultParameters\");\n    // do something with the UserDefaultParameters service\n  });\n<\/pre>","getValue":{"!description":"Attempt to determine a value for the parameter name <code>sParameterName<\/code>.","!static":false,"!category":"function","!type":"fn(sParameterName: String, oSystemContext: Object) -> Promise<object>","parameters":{"sParameterName":"type: string, description: The parameter name","oSystemContext":"type: object, description: The system context object"}},"detachValueStored":{"!description":"Detaches a listener from the valueStored event.","!static":false,"!category":"function","!type":"fn(fnFunction: fn())","parameters":{"fnFunction":"type: function, description: Event handler to be detached."}},"registerPlugin":{"!static":false,"!category":"function","!type":"fn(oPlugin: Object)","parameters":{"oPlugin":"type: object, description: the Plugin to register with the service"}},"!module":"sap/ushell/services/UserDefaultParameters","!helpDescription":"The Unified Shell's UserDefaultParameters service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UserDefaultParameters = await Container.getServiceAsync(\"UserDefaultParameters\");\n    // do something with the UserDefaultParameters service\n  });\n<\/pre>","!proto":"sap.ui.base.Object","!category":"class","attachValueStored":{"!description":"Attaches a listener to the valueStored event.","!static":false,"!category":"function","!type":"fn(fnFunction: fn())","parameters":{"fnFunction":"type: function, description: Event handler to be attached."}}},"sap.ushell.services.AppLifeCycle.AppInfoParameterName":{"!description":"Enumeration of application info parameter names.","technicalAppComponentId":{"!description":"Identifier of the component that implements the base application.","!category":"enum","!type":"String"},"appVersion":{"!description":"Version of the app","!category":"enum","!type":"String"},"!category":"static class","languageTag":{"!description":"Current Language (BCP47 format)","!category":"enum","!type":"String"},"productName":{"!description":"A human readable free form text maintained on the platform where FLP runs, and identifying the current product.","!category":"enum","!type":"String"},"appFrameworkId":{"!description":"ID of the framework","!category":"enum","!type":"String"},"!module":"sap/ushell/services/AppLifeCycle","appId":{"!description":"Universal stable logical identifier of the application across the whole content.","!category":"enum","!type":"String"},"theme":{"!description":"Current FLP theme. Includes the path to the theme resources if the theme is not an sap theme (does not start with sap_)","!category":"enum","!type":"String"},"appFrameworkVersion":{"!description":"Version of the framework","!category":"enum","!type":"String"},"appIntent":{"!description":"Intent that was used to launch the application (including parameters)","!category":"enum","!type":"String"},"appSupportInfo":{"!description":"The name of an organizational component that handles support incidents.","!category":"enum","!type":"String"}},"sap.ushell.ui.launchpad.LinkTileWrapper":{"getTileActionModeActive":{"!description":"Gets current value of property {@link #getTileActionModeActive tileActionModeActive}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIsLocked":{"!description":"Sets a new value for property {@link #getIsLocked isLocked}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsLocked?: Boolean) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"bIsLocked":"type: boolean, description: New value for property <code>isLocked<\/code>"}},"attachCoverDivPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:coverDivPress coverDivPress} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachCoverDivPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:coverDivPress coverDivPress} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addFootItem":{"!description":"Adds some footItem to the aggregation {@link #getFootItems footItems}.","!static":false,"!category":"function","!type":"fn(oFootItem: sap.ui.core.Control) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oFootItem":"type: sap.ui.core.Control, description: The footItem to add; if empty, nothing is inserted"}},"removeAllTileViews":{"!description":"Removes all the controls from the aggregation {@link #getTileViews tileViews}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfFootItem":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getFootItems footItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFootItem: sap.ui.core.Control) -> Number","parameters":{"oFootItem":"type: sap.ui.core.Control, description: The footItem whose index is looked for"}},"getTarget":{"!description":"Gets current value of property {@link #getTarget target}.","!static":false,"!category":"function","!type":"fn() -> String"},"setTileCatalogIdStable":{"!description":"Sets a new value for property {@link #getTileCatalogIdStable tileCatalogIdStable}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTileCatalogIdStable?: String) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"sTileCatalogIdStable":"type: string, description: New value for property <code>tileCatalogIdStable<\/code>"}},"getTileViews":{"!description":"Gets content of aggregation {@link #getTileViews tileViews}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAnimationRendered":{"!description":"Gets current value of property {@link #getAnimationRendered animationRendered}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTileCatalogId":{"!description":"Gets current value of property {@link #getTileCatalogId tileCatalogId}.","!static":false,"!category":"function","!type":"fn() -> String"},"insertTileView":{"!description":"Inserts a tileView into the aggregation {@link #getTileViews tileViews}.","!static":false,"!category":"function","!type":"fn(oTileView: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oTileView":"type: sap.ui.core.Control, description: The tileView to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the tileView should be inserted at; for a negative value of <code>iIndex<\/code>, the tileView is inserted at position 0; for a value greater than the current size of the aggregation, the tileView is inserted at the last position"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/launchpad/LinkTileWrapper. A link tile to be displayed in the tile container. This control acts as container for specialized tile implementations.","attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.LinkTileWrapper.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertFootItem":{"!description":"Inserts a footItem into the aggregation {@link #getFootItems footItems}.","!static":false,"!category":"function","!type":"fn(oFootItem: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oFootItem":"type: sap.ui.core.Control, description: The footItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the footItem should be inserted at; for a negative value of <code>iIndex<\/code>, the footItem is inserted at position 0; for a value greater than the current size of the aggregation, the footItem is inserted at the last position"}},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachShowActions":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:showActions showActions} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.LinkTileWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/ushell/ui/launchpad/LinkTileWrapper","removeFootItem":{"!description":"Removes a footItem from the aggregation {@link #getFootItems footItems}.","!static":false,"!category":"function","!type":"fn(vFootItem: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vFootItem":"type: int|string|sap.ui.core.Control, description: The footItem to remove or its index or id"}},"setDebugInfo":{"!description":"Sets a new value for property {@link #getDebugInfo debugInfo}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDebugInfo?: String) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"sDebugInfo":"type: string, description: New value for property <code>debugInfo<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/launchpad/LinkTileWrapper. A link tile to be displayed in the tile container. This control acts as container for specialized tile implementations.","attachShowActions":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:showActions showActions} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireShowActions":{"!description":"Fires event {@link #event:showActions showActions} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUuid":{"!description":"Gets current value of property {@link #getUuid uuid}.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyTileViews":{"!description":"Destroys all the tileViews in the aggregation {@link #getTileViews tileViews}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.LinkTileWrapper"},"fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.core.Control","!category":"class","!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUuid uuid} : string<\/li>\n<li>{@link #getTileCatalogId tileCatalogId} : string<\/li>\n<li>{@link #getTileCatalogIdStable tileCatalogIdStable} : string<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDebugInfo debugInfo} : string<\/li>\n<li>{@link #getAnimationRendered animationRendered} : boolean (default: false)<\/li>\n<li>{@link #getIsLocked isLocked} : boolean (default: false)<\/li>\n<li>{@link #getTileActionModeActive tileActionModeActive} : boolean (default: false)<\/li>\n<li>{@link #getIeHtml5DnD ieHtml5DnD} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTileViews tileViews} : sap.ui.core.Control[]<\/li>\n<li>{@link #getFootItems footItems} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:coverDivPress coverDivPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:showActions showActions} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addTileView":{"!description":"Adds some tileView to the aggregation {@link #getTileViews tileViews}.","!static":false,"!category":"function","!type":"fn(oTileView: sap.ui.core.Control) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oTileView":"type: sap.ui.core.Control, description: The tileView to add; if empty, nothing is inserted"}},"getIsLocked":{"!description":"Gets current value of property {@link #getIsLocked isLocked}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAnimationRendered":{"!description":"Sets a new value for property {@link #getAnimationRendered animationRendered}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAnimationRendered?: Boolean) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"bAnimationRendered":"type: boolean, description: New value for property <code>animationRendered<\/code>"}},"setIeHtml5DnD":{"!description":"Sets a new value for property {@link #getIeHtml5DnD ieHtml5DnD}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIeHtml5DnD?: Boolean) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"bIeHtml5DnD":"type: boolean, description: New value for property <code>ieHtml5DnD<\/code>"}},"setTarget":{"!description":"Sets a new value for property {@link #getTarget target}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTarget?: String) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"indexOfTileView":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTileViews tileViews}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTileView: sap.ui.core.Control) -> Number","parameters":{"oTileView":"type: sap.ui.core.Control, description: The tileView whose index is looked for"}},"setTileActionModeActive":{"!description":"Sets a new value for property {@link #getTileActionModeActive tileActionModeActive}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bTileActionModeActive?: Boolean) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"bTileActionModeActive":"type: boolean, description: New value for property <code>tileActionModeActive<\/code>"}},"getTileCatalogIdStable":{"!description":"Gets current value of property {@link #getTileCatalogIdStable tileCatalogIdStable}.","!static":false,"!category":"function","!type":"fn() -> String"},"setTileCatalogId":{"!description":"Sets a new value for property {@link #getTileCatalogId tileCatalogId}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTileCatalogId?: String) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"sTileCatalogId":"type: string, description: New value for property <code>tileCatalogId<\/code>"}},"removeAllFootItems":{"!description":"Removes all the controls from the aggregation {@link #getFootItems footItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeTileView":{"!description":"Removes a tileView from the aggregation {@link #getTileViews tileViews}.","!static":false,"!category":"function","!type":"fn(vTileView: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vTileView":"type: int|string|sap.ui.core.Control, description: The tileView to remove or its index or id"}},"getFootItems":{"!description":"Gets content of aggregation {@link #getFootItems footItems}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setUuid":{"!description":"Sets a new value for property {@link #getUuid uuid}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUuid?: String) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"sUuid":"type: string, description: New value for property <code>uuid<\/code>"}},"fireCoverDivPress":{"!description":"Fires event {@link #event:coverDivPress coverDivPress} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getIeHtml5DnD":{"!description":"Gets current value of property {@link #getIeHtml5DnD ieHtml5DnD}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyFootItems":{"!description":"Destroys all the footItems in the aggregation {@link #getFootItems footItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.LinkTileWrapper"},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.LinkTileWrapper<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.LinkTileWrapper","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getDebugInfo":{"!description":"Gets current value of property {@link #getDebugInfo debugInfo}.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ushell.api.NewExperience":{"!description":"The New Experience API provides a way of embedding a switch in the shell header to allow switching apps to their \"New Version\". The expected behavior is that, once the switch is enabled, navigation to the predecessor (old) app shall be redirected to the successor (new) app. Note that this switch behavior is not implemented by the shell itself, which only places the switch control in the shell header.","!module":"sap/ushell/api/NewExperience","!helpDescription":"The New Experience API provides a way of embedding a switch in the shell header to allow switching apps to their \"New Version\". The expected behavior is that, once the switch is enabled, navigation to the predecessor (old) app shall be redirected to the successor (new) app. Note that this switch behavior is not implemented by the shell itself, which only places the switch control in the shell header.","!category":"namespace","setSwitchControl":{"!description":"Sets the switch control. In the shell header, the switch control is placed directly \"as is\". In the shell header overflow, the switch control is wrapped. Because of this wrapping, whenever toggling the visibility of the switch control, it is also necessary to call {@link #setSwitchVisibility}.","!static":"true","!category":"function","!type":"fn(oShellHeaderControl: sap.ui.core.Control)"},"setSwitchVisibility":{"!description":"Sets the visibility of the switch control in the shell header overflow. Note: in order to change the visibility of the switch control, two actions must be performed: 1. Change the visibility of the switch control itself; 2. Call {@link #setSwitchVisibility} to make the new visibility consistent also in the shell header overflow.","!static":"true","!category":"function","!type":"fn(bVisible: Boolean)"}},"sap.ushell.api":{"workpage":"sap.ushell.api.workpage","BootstrapObserver":"sap.ushell.api.BootstrapObserver","NewExperience":"sap.ushell.api.NewExperience","!module":"sap/ushell/library","S4MyHome":"sap.ushell.api.S4MyHome","!category":"namespace","Copilot":"sap.ushell.api.Copilot","Inbox":"sap.ushell.api.Inbox","RTA":"sap.ushell.api.RTA"},"sap.ushell.services.SpaceContent":{"!description":"This service provides APIs for the S/4 MyHome. For FLP internal usage, the internal APIs should be used directly.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SpaceContent = await Container.getServiceAsync(\"SpaceContent\");\n    // do something with the SpaceContent service\n  });\n<\/pre>","addVisualization":{"!description":"Adds a new visualization to a page\n\nIf no section ID is specified, the visualization is added to the 'Recently Added' section automatically.","!static":false,"!category":"function","!type":"fn(pageId: String, sectionId?: String, vizId: String) -> Promise<undefined>","parameters":{"vizId":"type: string, description: The ID of the visualization to add","sectionId":"type: string, description: The ID of the section the visualization should be added to","pageId":"type: string, description: The ID of the page the visualization should be added to"}},"instantiateVisualization":{"!description":"Creates VizInstance controls from the visualization data returned by getPage and getPages.","!static":false,"!category":"function","!type":"fn(vizData: sap.ushell.services.Pages.Visualization) -> sap.ushell.ui.launchpad.VizInstanceBase","parameters":{"vizData":"type: sap.ushell.services.Pages.Visualization, description: Data for a visualization"}},"getPage":{"!description":"Returns the data of a page","!static":false,"!category":"function","!type":"fn(pageId: String) -> Promise<sap.ushell.services.Pages.PageData>","parameters":{"pageId":"type: string, description: ID of the page"}},"launchTileTarget":{"!description":"Starts an app based on the provided URL. If an intent is provided an intent based navigation is triggered. If a fully qualified URL is provided the app is opened in a new tab. This API must only be used to start tile targets.","!static":false,"!category":"function","!type":"fn(url: String, title?: String)","parameters":{"title":"type: string, description: Title of the app. This is only used for non-intent based navigation in order to add an entry to the recently used apps. If no title is provided for such a target no recently used entry is added.","url":"type: string, description: URL of the app"}},"!proto":"sap.ui.base.Object","addSection":{"!description":"Adds a section to a page","!static":false,"!category":"function","!type":"fn(pageId: String, sectionIndex: Number, sectionProperties?: sap.ushell.services.Pages.Section) -> Promise<undefined>","parameters":{"sectionIndex":"type: int, description: The index of the added section on the page","sectionProperties":"type: sap.ushell.services.Pages.Section, description: Properties of the added section","pageId":"type: string, description: The ID of the page to which the section is added"}},"!category":"class","isPersonalizationEnabled":{"!description":"Returns the personalization enabled flag","!static":false,"!category":"function","!type":"fn() -> Boolean"},"moveVisualization":{"!description":"Moves a visualization on a page","!static":false,"!category":"function","!type":"fn(pageId: String, sourceSectionIndex: Number, sourceVisualizationIndex: Number, targetSectionIndex: Number, targetVisualizationIndex: Number) -> Promise<{visualizationIndex:int}>","parameters":{"targetVisualizationIndex":"type: int, description: The new index of the moved visualization. If -1 is passed, the visualization is moved to the last position.","targetSectionIndex":"type: int, description: The index of the section to which the visualization should be moved","sourceSectionIndex":"type: int, description: The index of the section from where the visualization is moved","pageId":"type: string, description: The ID of the page containing the moved visualization","sourceVisualizationIndex":"type: int, description: The index of the moved visualization"}},"!module":"sap/ushell/services/SpaceContent","!helpDescription":"This service provides APIs for the S/4 MyHome. For FLP internal usage, the internal APIs should be used directly.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SpaceContent = await Container.getServiceAsync(\"SpaceContent\");\n    // do something with the SpaceContent service\n  });\n<\/pre>","updateVisualization":{"!description":"Updates the properties of a visualization. Properties that are not supplied are not updated. Currently only the display format, title and subtitle are supported.","!static":false,"!category":"function","!type":"fn(pageId: String, sectionIndex: Number, visualizationIndex: Number, visualizationData: Object) -> Promise<undefined>","parameters":{"sectionIndex":"type: int, description: The index of the section from where the visualization is updated","visualizationData":"type: object, description: The updated visualization properties","visualizationIndex":"type: int, description: The index of the updated visualization","pageId":"type: string, description: The ID of the page containing the updated visualization"}},"getPages":{"!description":"Returns the data of multiple pages","!static":false,"!category":"function","!type":"fn(pageIds: [String]) -> [Promise<sap.ushell.services.Pages.PageData]","parameters":{"pageIds":"type: string[], description: IDs of the pages"}},"deleteVisualization":{"!description":"Deletes a visualization from a page","!static":false,"!category":"function","!type":"fn(pageId: String, sectionIndex: Number, visualizationIndex: Number) -> Promise<undefined>","parameters":{"sectionIndex":"type: int, description: The index of the section from where the visualization is deleted","visualizationIndex":"type: int, description: The index of the deleted visualization","pageId":"type: string, description: The ID of the page containing the deleted visualization"}},"getUserDefaultParameter":{"!description":"Attempt to determine a value for the parameter name.","!static":false,"!category":"function","!type":"fn(parameterName: String) -> Promise<(null | sap.ushell.services.SpaceContent.ParameterValue)>","parameters":{"parameterName":"type: string, description: The parameter name"}}},"sap.ushell.services.UserInfo":{"!description":"The Unified Shell's user information service. Allows retrieving information about the logged-in user.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UserInfo = await Container.getServiceAsync(\"UserInfo\");\n    // do something with the UserInfo service\n  });\n<\/pre>","!module":"sap/ushell/services/UserInfo","!helpDescription":"The Unified Shell's user information service. Allows retrieving information about the logged-in user.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UserInfo = await Container.getServiceAsync(\"UserInfo\");\n    // do something with the UserInfo service\n  });\n<\/pre>","!proto":"sap.ushell.services.Service","getEmail":{"!description":"Returns the email address of the user.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","getId":{"!description":"Returns the id of the user.","!static":false,"!category":"function","!type":"fn() -> String"},"getShellUserInfo":{"!description":"Returns an object representing data about the user.","!static":false,"!category":"function","!type":"fn() -> Promise<sap.ushell.services.UserInfo.ShellUserInfo>"},"getFirstName":{"!description":"Returns the first name of the user.","!static":false,"!category":"function","!type":"fn() -> String"},"getFullName":{"!description":"Returns the full name of the user.","!static":false,"!category":"function","!type":"fn() -> String"},"getLastName":{"!description":"Returns the last name of the user.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ushell.services.UserRecents_obj":{"!type":"fn()","prototype":"sap.ushell.services.UserRecents"},"sap.ushell.services.PersonalizationV2.TransientPersonalizer":{"!description":"The transient personalizer shall be used in container mode for table personalization. To be called by the personalization service getTransientPersonalizer method.","deletePersData":{"!description":"Deletes a personalization data value.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!module":"sap/ushell/services/PersonalizationV2/TransientPersonalizer","!helpDescription":"The transient personalizer shall be used in container mode for table personalization. To be called by the personalization service getTransientPersonalizer method.","getPersData":{"!description":"Gets a personalization data value.","!static":false,"!category":"function","!type":"fn() -> Promise<object>"},"!proto":"sap.ui.base.Object","!category":"class","setPersData":{"!description":"Sets a personalization data value.","!static":false,"!category":"function","!type":"fn(oValue: Object) -> Promise","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."}}},"sap.ushell.services.FrameBoundExtension.Item":{"!description":"Item wrapping an item positioned in an extension point. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}. <br> The item will be automatically destroyed when the user navigates away from the current application. After calling {@link sap.ushell.services.Extension.Item#showOnHome} or {@link sap.ushell.services.Extension.Item#showForAllApps} the item is not destroyed automatically and has to be destroyed manually via {@link sap.ushell.services.Extension.Item#destroy}. <br> <p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>","getControl":{"!description":"Returns the related control instance.","!static":false,"!category":"function","!type":"fn() -> Promise<sap.ui.core.Control>"},"hideForAllApps":{"!description":"Shows the item for all applications. Does not change the visibility of the item for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.Item"},"!proto":"sap.ui.base.Object","hideForCurrentApp":{"!description":"Hides the item for the current application.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.Item"},"destroy":{"!description":"Destroys the item and it's related content.","!static":false,"!category":"function","!type":"fn() -> Promise"},"showOnHome":{"!description":"Shows the item for launchpad \"home\". Does not change the visibility of the item within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.Item"},"!category":"class","showForAllApps":{"!description":"Shows the item for all applications. Does not change the visibility of the item for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.Item"},"hideOnHome":{"!description":"Hides the item for launchpad \"home\". Does not change the visibility of the item within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.Item"},"showForCurrentApp":{"!description":"Shows the item for the current application. The item will be hidden after the user navigates away from this application. The item will <b>not<b> be added again if the user navigates back to the application.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.Item"},"!module":"sap/ushell/services/FrameBoundExtension/Item","!helpDescription":"Item wrapping an item positioned in an extension point. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}. <br> The item will be automatically destroyed when the user navigates away from the current application. After calling {@link sap.ushell.services.Extension.Item#showOnHome} or {@link sap.ushell.services.Extension.Item#showForAllApps} the item is not destroyed automatically and has to be destroyed manually via {@link sap.ushell.services.Extension.Item#destroy}. <br> <p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>"},"sap.ushell.services.PersonalizationV2.VariantSetAdapter":{"!description":"The Unified Shell's personalization service. Provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const PersonalizationV2 = await Container.getServiceAsync(\"PersonalizationV2\");\n    // do something with the PersonalizationV2 service\n  });\n<\/pre>","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Boolean","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!module":"sap/ushell/services/PersonalizationV2","getVariantSet":{"!description":"Returns the variant set object from the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> sap.ushell.services.PersonalizationV2.VariantSet","parameters":{"sVariantSetKey":"type: string, description: variant set key. The string length is restricted to 40 characters."}},"!helpDescription":"The Unified Shell's personalization service. Provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const PersonalizationV2 = await Container.getServiceAsync(\"PersonalizationV2\");\n    // do something with the PersonalizationV2 service\n  });\n<\/pre>","addVariantSet":{"!description":"Creates a new variant set in the container. In case a variant set with this key is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> sap.ushell.services.PersonalizationV2.VariantSet","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!proto":"sap.ushell.services.Service","deleteVariantSet":{"!description":"Deletes a variant set from the container. In case the variant set does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String)","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!category":"class","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!static":false,"!category":"function","!type":"fn() -> [String]"}},"sap.ushell.services.Personalization.Variant":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.Variant} instead<br>The personalization variant contains personalization data. It is used in the personalization container mode.\n\nTo be instantiated via Personalization.VariantSet add / get Variant only","delItem":{"!description":"Deletes an item from this variant. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"setItemValue":{"!description":"Sets the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String, item: Object)","parameters":{"item":"type: object, description: value (JSON object)","sItemKey":"type: string, description: item key"}},"!proto":"sap.ui.base.Object","containsItem":{"!description":"Checks if a specific item is contained in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"setVariantName":{"!description":"Sets the name of the variant.\n\nIn case a variant with <code>sVariantName<\/code> is already existing in the corresponding variant set an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantName: String)","parameters":{"sVariantName":"type: string, description: variant name"}},"!category":"class","getItemValue":{"!description":"Returns the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"!module":"sap/ushell/services/_Personalization/Variant","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.Variant} instead<br>The personalization variant contains personalization data. It is used in the personalization container mode.\n\nTo be instantiated via Personalization.VariantSet add / get Variant only","getVariantKey":{"!description":"Returns the key of this variant.","!static":false,"!category":"function","!type":"fn() -> String"},"getItemKeys":{"!description":"Returns an array with the keys of all items in this variant.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getVariantName":{"!description":"Returns the name of this variant.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ushell.services.EndUserFeedback":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 undefined<br>The Unified Shell's end user feedback service. This service is deprecated and does nothing. End user feedback functionality is not part of the ushell library.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const EndUserFeedback = await Container.getServiceAsync(\"EndUserFeedback\");\n    // do something with the EndUserFeedback service\n  });\n<\/pre>","!module":"sap/ushell/services/EndUserFeedback","getLegalText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 undefined<br>undefined","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 undefined<br>The Unified Shell's end user feedback service. This service is deprecated and does nothing. End user feedback functionality is not part of the ushell library.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const EndUserFeedback = await Container.getServiceAsync(\"EndUserFeedback\");\n    // do something with the EndUserFeedback service\n  });\n<\/pre>","isEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 undefined<br>The service is deprecated. The function always returns a negative answer.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!proto":"sap.ushell.services.Service","!category":"class","sendFeedback":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 undefined<br>Sends a feedback.","!static":false,"!category":"function","!type":"fn() -> Promise"}},"sap.ushell.services.AppLifeCycle_obj":{"!type":"fn()","prototype":"sap.ushell.services.AppLifeCycle"},"sap.ushell.services.Ui5ComponentLoader":{"!category":"namespace"},"sap.ushell.services.FrameBoundExtension.SidePane":{"!description":"The side pane extension point is positioned next the launchpad content. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}.\n\n<p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>","hideOnHome":{"!description":"Hides the area for launchpad \"home\". Does not change the visibility of the area within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.SidePane"},"hideForAllApps":{"!description":"Shows the side pane for all applications. Does not change the visibility of the side pane for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.SidePane"},"!module":"sap/ushell/services/FrameBoundExtension/SidePane","!helpDescription":"The side pane extension point is positioned next the launchpad content. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}.\n\n<p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>","!proto":"sap.ui.base.Object","createItem":{"!description":"Creates an item in the side pane.\n\nThe <code>controlType<\/code> can be any control and is by default a {@link sap.m.Button}. The <code>controlProperties<\/code> are passed to the constructor of the control.","!static":false,"!category":"function","!type":"fn(controlProperties: Object, parameters?: Object) -> Promise<sap.ushell.services.FrameBoundExtension.Item>","parameters":{"controlProperties":"type: object, description: The properties that will be passed to the created control.","parameters":"type: object, description: Additional parameters."}},"showOnHome":{"!description":"Shows the side pane for launchpad \"home\". Does not change the visibility of the side pane within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.SidePane"},"!category":"class","showForAllApps":{"!description":"Shows the side pane for all applications. Does not change the visibility of the side pane for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.SidePane"}},"sap.ushell.services.Personalization.PersonalizationContainerVariantSet_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.PersonalizationContainerVariantSet"},"sap.ushell.renderers.fiori2.Renderer":{"hideHeaderItem":{"!description":"Hide the given sap.ushell.ui.shell.ShellHeadItem from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: string[], description: the Ids of the sap.ushell.ui.shell.ShellHeadItem to remove.","aStates":"type: string[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"showHeaderItem":{"!description":"Creates and displays one or more HeaderItem controls according to the given control IDs and Shell states<br> (see sap.ushell.renderers.fiori2.Renderer.LaunchpadState).<br><br> The HeaderItem controls will be displayed on the left side of the Fiori Launchpad shell header according to the given display parameters.<br> There can be up to three header items. If the number of existing header items plus the given ones exceeds 3, then the operation fails and no new header items are created.<br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.ushell.ui.shell.ShellHeadItem();\nvar button2 = new sap.ushell.ui.shell.ShellHeadItem();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showHeaderItem ([button1.getId(), button2.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(vIds: [String | String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created controls are added to the current rendered shell state. When the user navigates to another application (including the Home page) then the controls will be removed. If <code>false<\/code> then the controls are added to the LaunchPadState itself.","vIds":"type: string|string[], description: Either ID or an array of IDs of headerItem controls to be added to the shell header.","aStates":"type: string[], description: Valid only if bCurrentState is <code>false<\/code>. A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added. If no launchpad state is provided the controls are added in all states."}},"showHeaderEndItem":{"!description":"Displays HeaderItems on the right side of the Fiori launchpad shell header, in the given launchpad states (see sap.ushell.renderers.fiori2.Renderer.LaunchpadState).<\/br> If no launchpad state is provided the content is displayed in all states.<\/br> The shell header can display the user HeaderItem, and just one more HeaderItem.<\/br> If this method is called when the right side of the header is full, this method will not do anything.<\/br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.ushell.ui.shell.ShellHeadItem();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showHeaderEndItem ([button1.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, add the current HeaderItems only to the current instance of the rendering of the shell. if false, add the HeaderItems to the LaunchPadState itself.","aIds":"type: string[], description: List of ID elements to add to the shell header.","aStates":"type: string[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the aIds."}},"addEndUserFeedbackCustomUI":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 undefined<br>Adds the given sap.ui.core.Control to the EndUserFeedback dialog.<\/br> The EndUserFeedback dialog is opened via the user actions menu in the Fiori Launchpad shell header.","!static":false,"!category":"function","!type":"fn(oCustomUIContent: Object, bShowCustomUIContent: Boolean)","parameters":{"oCustomUIContent":"type: object, description: The control to be added to the EndUserFeedback dialog.","bShowCustomUIContent":"type: boolean, description: Specify whether to display the control."}},"!proto":"sap.ui.core.UIComponent","getCurrentViewportState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 This functionality was discontinued<br>This method returns the current state of the Viewport Container control.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","addHeaderItem":{"!description":"Creates and displays an item in the header of Fiori launchpad, in the given launchpad states.<br> The new header item will be displayed on the left-hand side of the Fiori Launchpad shell header, according to the given display parameters.<br> The new header item will be added to the right of any existing header items. The header can contain a maximum of three header items.<br><br>\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\n    oRenderer.addHeaderItem({\n        id: \"myTestButton\",\n        ariaLabel: resources.i18n.getText(\"testButton.label\"),\n        ariaHaspopup: \"dialog\",\n        icon: \"sap-icon://action-settings\",\n        tooltip: resources.i18n.getText(\"testButton.tooltip\"),\n        text: resources.i18n.getText(\"testButton.text\"),\n        press: controller.handleTestButtonPress\n    }, true, true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(controlType?: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> sap.ui.core.Control","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created control is added to the current rendered shell state.<br> When the user navigates to a different state including a different application then the control will be removed.<br> If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","controlType":"type: string, description: The (class) name of the control type to create. <b>Deprecated<\/b>: Since version 1.38. This parameter is no longer supported and can be omitted.","bIsVisible":"type: boolean, description: Specifies whether the header item control is displayed after being created.<br> If <code>true<\/code> then the control is displayed according to parameters bCurrentState and aStates.<br> If <code>false<\/code> then the control is created but not displayed.<br>","oControlProperties":"type: object, description: The properties that will be passed to the created control. For example: <code>{id: \"testButton\"}<\/code><br>","aStates":"type: string[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the control is added.<br> If no launchpad state is provided the control is added in all states."}},"removeToolAreaItem":{"!description":"Remove the given Tool Area Item from Fiori Launchpad, in the given launchpad states. This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(vIds: [String | String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code>, remove the items from the currently rendered shell. If <code>false<\/code>, remove the items from the LaunchPadState itself, causing the items to be removed every time the given states are active.","vIds":"type: string|string[], description: A single ID or an array of IDs to remove from the Tool Area.","aStates":"type: string[], description: (only valid if bCurrentState is set to <code>false<\/code>) - An array of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) from which the controls are removed. If no launchpad state is provided the items are removed from all states."}},"addSidePaneContent":{"!description":"Creates the Left Pane content in Fiori launchpad, in the given launchpad states.<\/br>\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n    oSidePaneContentProperties = {\n        controlType : \"sap.m.Button\",\n        oControlProperties : {\n            id: \"testBtn\",\n            text: \"Test Button\"\n        },\n        bIsVisible: true,\n        bCurrentState: true\n    };\n\noRenderer.addSidePaneContent(oSidePaneContentProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> jQuery.Promise","parameters":{"oParameters":"type: object, description: Contains the parameters for the control that should be added to the side pane"}},"addShellSubHeader":{"!description":"Creates and displays a sub header control in Fiori launchpad, in the given launchpad states.<br> The new control is displayed in FLP UI according to the given display parameters.<br> If a sub header already exists, the new created one will replace the existing one.<br><br> <b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n    oAddSubHeaderProperties = {\n        controlType : \"sap.m.Bar\",\n        oControlProperties : {\n            id: \"testBar\",\n            contentLeft: [new sap.m.Button({\n                text: \"Test SubHeader Button\",\n                press: function () {\n                    sap.m.MessageToast.show(\"Pressed\");\n                }\n            })\n        },\n        bIsVisible: true,\n        bCurrentState: true\n    };\n\noRenderer.addShellSubHeader(oAddSubHeaderProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> jQuery.Promise","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object."}},"showFloatingActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 Support for the FloatingActionButton has been discontinued.<br>Displays FloatingActionButton on the bottom right corner of the Fiori launchpad, in the given launchpad states. The FloatingActionButton is rendered in the bottom right corner of the shell.<\/br> (see sap.ushell.renderers.fiori2.Renderer.LaunchpadState).<\/br> If no launchpad state is provided the content is displayed in all states.<\/br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.ushell.ui.shell.ShellFloatingAction();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showFloatingActionButton([button1.getId()], true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, add the current Buttons only to the current instance of the rendering of the shell. if false, add the Buttons to the LaunchPadState itself.","aIds":"type: string[], description: List of ID elements to add to the user actions menu.","aStates":"type: string[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the aIds."}},"hideLeftPaneContent":{"!description":"Hide the given control from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: string[], description: the Ids of the controls to remove.","aStates":"type: string[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"addUserAction":{"!description":"Creates an Action Button in Fiori launchpad, in the given launchpad states. <\/br> The button will be displayed in the user actions menu, that is opened from the user button in the shell header.<\/br> <b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n    oAddActionButtonProperties = {\n        controlType : \"sap.m.Button\",\n        oControlProperties : {\n            id: \"exampleButton\",\n            text: \"Example Button\",\n            icon: \"sap-icon://refresh\",\n            press: function () {\n                alert(\"Example Button was pressed!\");\n            }\n        },\n        bIsVisible: true,\n        bCurrentState: true\n    };\noRenderer.addUserAction(oAddActionButtonProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> jQuery.Promise","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object."}},"removeFooter":{"!description":"If exists, this method will remove the footer from the Fiori Launchpad.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn()"},"setFooterControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 Please use {@link #setShellFooter} instead.<br>Creates and displays an SAPUI5 control as the footer of the Fiori launchpad shell.<br> The footer will be displayed in all states. <br> Previously created footer will be removed. <br>\n\n<b>For example, using the sap.m.Bar control:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.setFooterControl(\"sap.m.Bar\", {id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test Footer Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]});\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object) -> sap.ui.core.Control","parameters":{"controlType":"type: string, description: The (class) name of the control type to create.<br> For example: <code>\"sap.m.Bar\"<\/code><br>","oControlProperties":"type: object, description: The properties that will be passed to the created control.<br> For example: <code>{id: \"testBar\"}<\/code><br>"}},"setHeaderVisibility":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 This functionality was discontinued<br>Sets the header visibility according to the given value and shell states. (see sap.ushell.renderers.fiori2.Renderer.LaunchpadState).\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.setHeaderVisibility(false, false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(bVisible: Boolean, bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the visibility is set only to the current rendered shell state.<br> When the user navigates to another application (including the Home page) then the visibility flag is reset.<br> If <code>false<\/code> then set the visibility according to the states provided in the aState parameter.<br>","aStates":"type: string[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the header visibility flag should be set.<br> If no launchpad state is provided the visibility flag is set for all states.","bVisible":"type: boolean, description: The visibility of the header<br>"}},"setShellFooter":{"!description":"Creates and displays an SAPUI5 control as the footer of the Fiori launchpad shell.<br> The footer will be displayed in all states. <br> Previously created footer will be removed. <br>\n\n<b>For example, using the sap.m.Bar control:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n  oFooterControlProperties = {\n    controlType : \"sap.m.Bar\",\n    oControlProperties : {\n      id: \"testBar\",\n      contentLeft: [new sap.m.Button({\n        text: \"Test Footer Button\",\n        press: function () {\n          sap.m.MessageToast.show(\"Pressed\");\n        }\n      })]\n    }\n  };\noRenderer.setShellFooter(oFooterControlProperties);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> jQuery.Promise","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object."}},"showSubHeader":{"!description":"Displays one or more sub header controls according to the given control IDs and shell states.<br> (see sap.ushell.renderers.fiori2.Renderer.LaunchpadState).<br><br> A sub header is placed in a container, located directly below the main Fiori launchpad shell header.<br>\n\n<b>Example:<\/b> <pre>\nvar bar = new sap.m.Bar({id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test SubHeader Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]});\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.showSubHeader([bar.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created controls are added only to the current rendered shell state.<br> When the user navigates to another application (including the Home page) then the controls will be removed.<br> If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","aIds":"type: string[], description: Array of sub header control IDs to be added<br>","aStates":"type: string[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added.<br> If no launchpad state is provided the controls are added in all states."}},"addToolAreaItem":{"!description":"Creates a ToolAreaItem in Fiori Launchpad and adds it to the Tool Area, in the given launchpad states. Once the item is added, the Tool Area is rendered on the left side on the Fiori Launchpad shell.\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addToolAreaItem({\n  id: \"testButton\",\n  icon: \"sap-icon://documents\",\n  expandable: true,\n  press: function (evt) {\n    window.alert(\"Press\" );\n  },\n  expand: function (evt) {\n    // This function will be called on the press event of the \"expand\" button. The result of \"expand\" event in the UI must be determined by the developer\n    window.alert(\"Expand\" );\n  }\n}, true, false, [\"home\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> sap.ui.core.Control","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code>, add the item to the currently rendered shell. If <code>false<\/code>, add the item to the given LaunchPadStates This causes the items to be rendered every time the given states are active.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties object that will be passed to the constructor of sap.ushell.ui.shell.ToolAreaItem control.","aStates":"type: string[], description: (only valid if bCurrentState is set to <code>false<\/code>) - An array of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added. If no launchpad state is provided the items are added in all states."}},"showActionButton":{"!description":"Displays action buttons in the User Actions Menu in the SAP Fiori launchpad, in the given launchpad states (LaunchpadState). (see sap.ushell.renderers.fiori2.Renderer.LaunchpadState).<\/br> If no launchpad state is provided the content is displayed in all states.<\/br> The user actions menu is opened via the button on the right hand side of the shell header.<\/br>\n\n<b>Example:<\/b> <pre>\nvar button1 = new sap.m.Button();\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.showActionButton([button1.getId()], false, [\"home\", \"app\"]);\n<\/pre>","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If true, add the created control to the current rendered shell state. When the user navigates to a different state, or to a different application, then the control is removed. If false, the control is added to the LaunchpadState.","aIds":"type: string[], description: List of ID elements to that should be added to the User Actions Menu options bar.","aStates":"type: string[], description: List of the launchpad states (sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which to add the aIds. Valid only if bCurrentState is set to false."}},"hideHeaderEndItem":{"!description":"Hide the given sap.ushell.ui.shell.ShellHeadItem from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: string[], description: the Ids of the sap.ushell.ui.shell.ShellHeadItem to remove.","aStates":"type: string[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 Please use {@link sap.ushell.services.Extension} instead.<br>The SAPUI5 component of SAP Fiori Launchpad renderer for the Unified Shell. This method MUST be called by the Unified Shell's container only, others MUST call {@link sap.ushell.Container#getRenderer}.","addLeftPaneContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 Please use {@link #addSidePaneContent} instead.<br>Creates the Left Pane content in Fiori launchpad, in the given launchpad states.<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addLeftPaneContent(\"sap.m.Button\", {id: \"testBtn\", text: \"Test Button\"}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the Home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","aStates":"type: string[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."}},"addSubHeader":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 Please use {@link #addShellSubHeader} instead.<br>Creates and displays a sub header control in Fiori launchpad, in the given launchpad states.<br> The new control is displayed in FLP UI according to the given display parameters.<br> If a sub header already exists, the new created one will replace the existing one.<br><br>\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\noRenderer.addSubHeader(\"sap.m.Bar\", {id: \"testBar\", contentLeft: [new sap.m.Button({text: \"Test SubHeader Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code> then the new created control is added to the current rendered shell state.<br> When the user navigates to another application (including the Home page) then the control will be removed.<br> If <code>false<\/code> then add the control to the LaunchPadState itself.<br>","controlType":"type: string, description: The (class) name of the control type to create.<br> For example: <code>\"sap.m.Bar\"<\/code><br>","bIsVisible":"type: boolean, description: Specifies whether the sub header control is displayed after being created.<br> If <code>true<\/code> then the control is displayed according to parameters bCurrentState and aStates,<br> if <code>false<\/code> then the control is created but not displayed.<br>","oControlProperties":"type: object, description: The properties that will be passed to the created control.<br> For example: <code>{id: \"testBar\"}<\/code><br>","aStates":"type: string[], description: (Valid only if bCurrentState is <code>false<\/code>)<br> A list of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the control is added.<br> If no launchpad state is provided the control is added in all states."}},"setLeftPaneVisibility":{"!description":"Sets the visibility of the left pane in the Fiori Launchpad shell, in the given launchpad state @see LaunchpadState","!static":false,"!category":"function","!type":"fn(sLaunchpadState: String, bVisible: Boolean)","parameters":{"sLaunchpadState":"type: string, description: LaunchpadState in which to show/hide the left pane","bVisible":"type: boolean, description: specify whether to display the left pane or not"}},"showToolArea":{"!description":"Sets the ToolArea visibility","!static":false,"!category":"function","!type":"fn(sLaunchpadState?: String, bVisible?: Boolean)","parameters":{"sLaunchpadState":"type: string, description: LaunchpadState in which to show/hide the ToolArea @see LaunchpadState","bVisible":"type: boolean, description: specifies whether to display the ToolArea or not"}},"addFloatingActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 Please use {@link #addFloatingButton} instead.<br>Creates a FloatingActionButton in Fiori launchpad, in the given launchpad states.<\/br> The FloatingActionButton is rendered in the bottom right corner of the shell.<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addFloatingActionButton(\"sap.ushell.ui.shell.ShellFloatingAction\", {id: \"testBtn\"}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> Object","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the Home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties that will be passed to the created control.","aStates":"type: string[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."}},"addUserPreferencesEntry":{"!description":"Adds an entry to the User Preferences dialog box including the UI control that appears when the user clicks the new entry, and handling of User Preferences actions such as SAVE and CANCEL.\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\nvar oEntry = {\n  title: \"title\",\n  value: function() {\n      return jQuery.Deferred().resolve(\"entryTitleToBeDisplayed\");\n  },\n  content: function() {\n      return jQuery.Deferred().resolve(new sap.m.Button(\"userPrefEntryButton\", {text: \"Button\"}));\n  },\n  onSave: function() {\n      return jQuery.Deferred().resolve();\n  }\n};\noRenderer.addUserPreferencesEntry(oEntry);\n<\/pre>","!static":false,"!category":"function","!type":"fn(entryObject: Object, value: String | fn())","parameters":{"entryObject":"type: object, description: The data of the new added User Preference entry.","value":"type: string|function, description: A string to be presented as the value of the entry OR a function to be called which returns a {@link jQuery.Promise} object."}},"addHeaderEndItem":{"!description":"Creates and displays a shell header icon in Fiori launchpad, in the given launchpad states.<\/br> The icon is displayed in the right side of the Fiori Launchpad shell header or in an overflow menu.<\/br> The text property is mandatory as it might be used in the overflow menu.<\/br> The tooltip property must not have the same text as the text property, as this causes accessibility issues if the item is in the overflow menu.<\/br> If no tooltip is provided, the text property is shown as tooltip when the item is not in the overflow menu.<\/br>\n\n<b>Example:<\/b> <pre>\nvar oRenderer = sap.ushell.Container.getRenderer(\"fiori2\");\n\n    // Create an icon button that opens a dialog\n    oRenderer.addHeaderEndItem({\n        id: \"myTestButton\",\n        icon: \"sap-icon://action-settings\",\n        tooltip: resources.i18n.getText(\"testButton.tooltip\"),\n        text: resources.i18n.getText(\"testButton.text\"),\n        ariaLabel: resources.i18n.getText(\"testButton.ariaLabel\"),\n        ariaHaspopup: \"dialog\",\n        press: [myController.handleTestButtonPress, myController]\n    }, true);\n\n    // Create a temporary link\n    oRenderer.addHeaderEndItem({\n        id: \"myTestLink\",\n        ariaLabel: resources.i18n.getText(\"testLink.label\"),\n        target: \"#MyTestApplication-show\",\n        icon: \"sap-icon://overflow\"\n    }, true, true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> sap.ui.core.Control","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the Home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create. <b>Deprecated<\/b>: Since version 1.38. This parameter is no longer supported and can be omitted.","bIsVisible":"type: boolean, description: Specify whether to display the control.","oControlProperties":"type: object, description: The properties that will be passed to the created control. The object may contain the following properties: <ul> <li>{string} [id] - The ID of the object.<br> <li>{string} icon - The button icon source.<br> <li>{string} [text] - The button text. It is only rendered in the overflow popover but not in the shell header.<br> <li>{string} [target] - target URI for a navigation link.<br> <li>{string} [ariaLabel] - Accessibility: aria-label attribute.<br> <li>{string} [ariaHaspopup] - Accessibility: aria-haspopup attribute.<br> <li>{Function} [press] - A function to be called when the button is depressed.<br> <\/ul>","aStates":"type: string[], description: (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control."}},"addFloatingButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 undefined<br>Creates a FloatingActionButton in Fiori launchpad, in the given launchpad states.<\/br> The FloatingActionButton is rendered in the bottom right corner of the shell.<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addFloatingActionButton(\"sap.ushell.ui.shell.ShellFloatingAction\", {id: \"testBtn\"}, true, true);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oParameters: Object) -> jQuery.Promise","parameters":{"oParameters":"type: object, description: Contains the required parameters for creating and showing the new control object:<br> Properties:<br> - {string} controlType<br> The (class) name of the control type to create.<br> - {object} oControlProperties<br> The properties that will be passed to the created control.<br> - {boolean} bIsVisible<br> Specify whether to display the control.<br> - {boolean} bCurrentState<br> If true, add the current control only to the current rendered shell state.<br> Once the user navigates to another app or back to the Home page, this control will be removed.<br> - {string[]} aStates<br> (only valid if bCurrentState is set to false) - list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to add the control.<br>"}},"!module":"sap/ushell/renderers/fiori2/Renderer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 Please use {@link sap.ushell.services.Extension} instead.<br>The SAPUI5 component of SAP Fiori Launchpad renderer for the Unified Shell. This method MUST be called by the Unified Shell's container only, others MUST call {@link sap.ushell.Container#getRenderer}.","hideFloatingActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 undefined<br>Hide the given sap.ushell.ui.shell.ShellFloatingAction from Fiori Launchpad, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: string[], description: the Ids of the sap.ushell.ui.shell.ShellFloatingAction to remove.","aStates":"type: string[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"setFooter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 Please use {@link #setShellFooter} instead.<br>Displays the given sap.m.Bar as the footer of the Fiori launchpad shell.<\/br> The footer will be displayed in all states. <\/br>\n\n<b>Example:<\/b> <pre>\nvar bar = new sap.m.Bar({contentLeft: [new sap.m.Button({text: \"Test Footer Button\",\n  press: function () {\n    sap.m.MessageToast.show(\"Pressed\");\n  }})\n]});\nvar renderer = sap.ushell.Container.getRenderer(\"fiori2\");\nrenderer.setFooter(bar);\n<\/pre>","!static":false,"!category":"function","!type":"fn(oFooter: sap.m.Bar)","parameters":{"oFooter":"type: sap.m.Bar, description: sap.m.Bar, the control to be added as the footer of the Fiori Launchpad"}},"hideSubHeader":{"!description":"Hide the given control from the Fiori Launchpad sub header, in the given launchpad states. The removed control will not be destroyed.<br><br> This API is meant to be used for implementing custom elements in the SAP Fiori launchpad. We do not recommend using it on a standard launchpad element, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: if true, remove the current control only from the current rendered shell state.","aIds":"type: string[], description: the Ids of the controls to remove.","aStates":"type: string[], description: list of the sap.ushell.renderers.fiori2.Renderer.LaunchpadState in which to remove the control. (Only valid if bCurrentState is set to false)"}},"showToolAreaItem":{"!description":"Displays ToolAreaItems on the left side of the Fiori Launchpad shell, in the given launchpad states.\n\n<b>Example:<\/b> <pre>\nsap.ui.require([\"sap/ushell/ui/shell/ToolAreaItem\"], function (ToolAreaItem) {\n    var oRenderer = sap.ushell.Container.getRenderer(\"fiori2\"),\n        oToolAreaItem = new ToolAreaItem({ icon: \"sap-icon://wrench\" });\n    renderer.showToolAreaItem(oToolAreaItem.getId(), false, [\"home\", \"app\"]);\n});\n<\/pre>","!static":false,"!category":"function","!type":"fn(vIds: [String | String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If <code>true<\/code>, add the items to the currently rendered shell. If <code>false<\/code>, add the items to the LaunchPadState itself, causing the items to be rendered every time the given states are active.","vIds":"type: string|string[], description: A single ID or an array of IDs to add to the Tool Area.","aStates":"type: string[], description: Only valid if bCurrentState is set to <code>false<\/code>. An array of shell states (i.e. sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which the controls are added. If no launchpad state is provided the items are added in all states."}},"addActionButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 Please use {@link #addUserAction} instead.<br>Creates an action button in the User Actions Menu in the SAP Fiori launchpad, in the given launchpad states (LaunchpadState).<\/br>\n\n<b>Example:<\/b> <pre>\nsap.ushell.Container.getRenderer(\"fiori2\").addActionButton(\"sap.m.Button\", {id: \"testBtn2\", text: \"test button\"}, true, true);\n<\/pre>\n\nThis function is marked for deprecation as of version 1.48.<br> It will continue to work as expected as long as one of the following conditions apply:<br> 1. The control instance is already created and its ID is included in the input parameter oControlProperties<br> 2. The control type resource is already loaded","!static":false,"!category":"function","!type":"fn(controlType: String, oControlProperties: Object, bIsVisible: Boolean, bCurrentState: Boolean, aStates: [String]) -> sap.ui.core.Control","parameters":{"bCurrentState":"type: boolean, description: If true, add the current control only to the current rendered shell state. Once the user navigates to another app or back to the home page, this control will be removed.","controlType":"type: string, description: The (class) name of the control type to create.","bIsVisible":"type: boolean, description: Specify whether to display the control. If true, the control is displayed (calls the showActionButton method) according to the bCurrentState and aStates parameters. If false, the control is created but not displayed (you can use showActionButton to display the control when needed).","oControlProperties":"type: object, description: The properties that will be passed to the created control.","aStates":"type: string[], description: List of the launchpad states (sap.ushell.renderers.fiori2.Renderer.LaunchpadState) in which to add the control. Valid only if bCurrentState is set to false."}},"setHeaderTitle":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 Please use {@link sap.ushell.ui5service.ShellUIService#getTitle} instead.<br>Sets the title in the Fiori Launchpad shell header.","!static":false,"!category":"function","!type":"fn(sTitle: String)","parameters":{"sTitle":"type: string, description: The title to be displayed in the Fiori Launchpad shell header"}},"hideActionButton":{"!description":"Hides an action button from the User Actions Menu in the SAP Fiori launchpad, in the given launchpad states (LaunchpadState). The removed button will not be destroyed.<br><br> This API is meant to be used for custom elements in the SAP Fiori launchpad. We do not recommend using it on standard launchpad elements, as this may interfere with the standard launchpad functionality.","!static":false,"!category":"function","!type":"fn(aIds: [String], bCurrentState: Boolean, aStates: [String])","parameters":{"bCurrentState":"type: boolean, description: If true, removes the current control only from the current rendered shell state.","aIds":"type: string[], description: IDs of the button controls that should hidden.","aStates":"type: string[], description: A list of the launchpad states in which to hide the control. Valid only if bCurrentState is set to false."}}},"sap.ushell.services.FrameBoundExtension.ToolArea_obj":{"!type":"fn()","prototype":"sap.ushell.services.FrameBoundExtension.ToolArea"},"sap.ushell.components.factsheet.controls.PictureTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use {@link sap.m.Carousel} instead.\n\nPictureTile is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the sap.m.Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Tile control embedding an image and allowing custom sizing","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.CustomTile","setTileContent":{"!description":"Reference to one PictureViewerItem coming from the PictureViewer.","!static":false,"!category":"function","!type":"fn(vTileContent: String | sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"vTileContent":"type: string|sap.ushell.components.factsheet.controls.PictureViewerItem, description: Id of an element which becomes the new target of this <code>tileContent<\/code> association. Alternatively, an element instance may be given."}},"getTileContent":{"!description":"ID of the element which is the current target of the association {@link #getTileContent tileContent}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!category":"class","attachPictureDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:pictureDelete pictureDelete} event of this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefault value is <code>\"32px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"32px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"32px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.CustomTile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefault value is <code>\"32px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: \"32px\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: \"32px\")<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTileContent tileContent} : (sap.ui.core.ID | sap.ushell.components.factsheet.controls.PictureViewerItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:pictureDelete pictureDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.CustomTile#constructor sap.m.CustomTile}\ncan be used as well.","!module":"sap/ushell/components/factsheet/controls/PictureTile","detachPictureDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:pictureDelete pictureDelete} event of this <code>sap.ushell.components.factsheet.controls.PictureTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use {@link sap.m.Carousel} instead.\n\nPictureTile is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the sap.m.Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Tile control embedding an image and allowing custom sizing","firePictureDelete":{"!description":"Fires event {@link #event:pictureDelete pictureDelete} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.components.factsheet.controls.PictureTile","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ushell.services.FrameBoundExtension.Footer":{"!description":"The footer extension point is positioned below the launchpad content. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}.\n\n<p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>","getControl":{"!description":"Returns the related control instance.","!static":false,"!category":"function","!type":"fn() -> Promise<sap.ui.core.Control>"},"!module":"sap/ushell/services/FrameBoundExtension/Footer","!helpDescription":"The footer extension point is positioned below the launchpad content. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}.\n\n<p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>","!proto":"sap.ui.base.Object","destroy":{"!description":"Destroys the footer.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!category":"class"},"sap.ushell.ui.appfinder":{"AppBox":"sap.ushell.ui.appfinder.AppBox_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"!category":"namespace"},"sap.ushell.ui5service":{"ShellUIService":"sap.ushell.ui5service.ShellUIService_obj","!category":"namespace","ShellUIServiceFactory":"sap.ushell.ui5service.ShellUIServiceFactory","UserStatus":"sap.ushell.ui5service.UserStatus_obj"},"sap.ushell.ui.appfinder.AppBox_obj":{"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.appfinder.AppBox"},"sap.ushell.services.FrameBoundExtension.FloatingContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.services.FrameBoundExtension.FloatingContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ushell.services.FrameBoundExtension.FloatingContainer"},"sap.ushell.services.FrameBoundExtension_obj":{"!type":"fn()","prototype":"sap.ushell.services.FrameBoundExtension.ToolArea"},"sap.ushell.services.Personalization.VariantSetAdapter_obj":{"!type":"fn(oContextContainer: Object)","prototype":"sap.ushell.services.Personalization.VariantSetAdapter"},"sap.ushell.services.AppLifeCycle.ApplicationType":{"!description":"Enumeration of application types.","UI5":{"!description":"The application is a UI5 application.","!category":"enum","!type":"String"},"!module":"sap/ushell/services/AppLifeCycle","WDA":{"!description":"The application is a Webdynpro application.","!category":"enum","!type":"String"},"!category":"static class","NWBC":{"!description":"The application is starting using the SAP Business Client.","!category":"enum","!type":"String"},"TR":{"!description":"The application is started using a transaction","!category":"enum","!type":"String"},"URL":{"!description":"The application is started using a URL","!category":"enum","!type":"String"}},"sap.ushell.ui.tile.StaticTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.tile.StaticTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ushell.ui.tile.TileBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.tile.StaticTile"},"sap.ushell.services.SmartNavigation_obj":{"!type":"fn()","prototype":"sap.ushell.services.SmartNavigation"},"sap.ushell.components.factsheet":{"controls":"sap.ushell.components.factsheet.controls","!category":"namespace"},"sap.ushell.services.FrameBoundExtension":{"!description":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call <code>sap.ushell.Container.getServiceAsync(\"FrameBoundExtension\")<\/code>. For details, see {@link sap.ushell.Container#getServiceAsync}.\n\n<p><b>Restriction:<\/b> This Service does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","hideOnHome":{"!description":"Hides the tool area for launchpad \"home\". Does not change the visibility of the tool area within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"},"hideForAllApps":{"!description":"Shows the tool area for all applications. Does not change the visibility of the tool area for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"},"!module":"sap/ushell/services/FrameBoundExtension","!helpDescription":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call <code>sap.ushell.Container.getServiceAsync(\"FrameBoundExtension\")<\/code>. For details, see {@link sap.ushell.Container#getServiceAsync}.\n\n<p><b>Restriction:<\/b> This Service does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","!proto":"sap.ushell.services.Service","createItem":{"!description":"Creates an item in the tool area.","!static":false,"!category":"function","!type":"fn(controlProperties: Object) -> Promise<sap.ushell.services.FrameBoundExtension.Item>","parameters":{"controlProperties":"type: object, description: The properties that will be passed to the {@link sap.ushell.ui.shell.ToolAreaItem}."}},"showOnHome":{"!description":"Shows the tool area for launchpad \"home\". Does not change the visibility of the tool area within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"},"!category":"class","showForAllApps":{"!description":"Shows the tool area for all applications. Does not change the visibility of the tool area for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"}},"sap.ushell.services.NavTargetResolution_obj":{"!type":"fn()","prototype":"sap.ushell.services.NavTargetResolution"},"sap.ushell.ui.launchpad.VizInstanceBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.VizInstanceBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ushell.ui.launchpad.VizInstanceBase"},"sap.ushell.services.PersonalizationV2.ContextContainer_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationV2.ContextContainer"},"sap.ushell.services.Message":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Message service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Message = await Container.getServiceAsync(\"Message\");\n    // do something with the Message service\n  });\n<\/pre>","!module":"sap/ushell/services/Message","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Message service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Message = await Container.getServiceAsync(\"Message\");\n    // do something with the Message service\n  });\n<\/pre>","!proto":"sap.ushell.services.Service","!category":"class"},"sap.ushell.services.Personalization.VariantSetAdapter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2} instead<br>The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Personalization = await Container.getServiceAsync(\"Personalization\");\n    // do something with the Personalization service\n  });\n<\/pre>","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Boolean","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"delVariantSet":{"!description":"Deletes a variant set from the container. In case the variant set does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String)","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!constructorDescription":"VariantSetAdapter\namends ContextContainer with functionality to\n\nExample: An application has two types of variants.\nVariant type 1 contains filter values for a query, which are stored in item 1 of\nthe variant, and personalization data for a table, which are stored in item 2\nof the variant.\nVariant type 2 contains a setting (item 3) that is independent of\nthe filtering and the table settings. It might be used for a different\nscreen than the variants of type 1.\nIn this example you would have 2 variant sets, one for each variant type.","!module":"sap/ushell/services/Personalization","getVariantSet":{"!description":"Returns the variant set object from the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key The string length is restricted to 40 characters"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2} instead<br>The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Personalization = await Container.getServiceAsync(\"Personalization\");\n    // do something with the Personalization service\n  });\n<\/pre>","addVariantSet":{"!description":"Creates a new variant set in the container. In case a variant set with this key is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!proto":"sap.ushell.services.Service","!category":"class","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!static":false,"!category":"function","!type":"fn() -> [String]"}},"sap.ushell.services.ShellNavigation_obj":{"!type":"fn()","prototype":"sap.ushell.services.ShellNavigation"},"sap.ushell.ui.footerbar.AddBookmarkButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.footerbar.AddBookmarkButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.footerbar.AddBookmarkButton"},"sap.ushell.ui.shell":{"visible":{"!description":"Defines whether to display the control","!category":"enum","!type":"Boolean"},"expandable":{"!description":"Defines whether the control will have an expand functionality containing sub-items or actions. If the property is set to true, a small \"expand\" icon appears in the lower corner of the control. The \"expand\" event is fired when the \"expand\" icon is pressed.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"ToolAreaItem":"sap.ushell.ui.shell.ToolAreaItem_obj","icon":{"!description":"Icon that is displayed in the item.","!category":"enum","!type":"sap.ui.core.URI"},"!category":"namespace","ShellHeadItem":"sap.ushell.ui.shell.ShellHeadItem","ariaLabel":{"!description":"Text which will be read by screenreader.","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"text":{"!description":"text : String","!category":"enum","!type":"String"},"selected":{"!description":"Defines whether to mark the control as selected","!category":"enum","!type":"Boolean"}},"sap.ushell.services.AppConfiguration":{"!description":"The unified shell's AppConfiguration service as a singleton object.","getMetadata":{"!description":"Returns the current metadata.","!static":"true","!category":"function","!type":"fn(oApplication?: Object, sFixedShellHash?: String | undefined) -> sap.ushell.services.AppConfiguration.Metadata"},"setApplicationFullWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 Use the \"sap.ui/fullWidth\" property in the application's manifest.json instead.<br>Sets the application screen size to full width","!static":"true","!category":"function","!type":"fn(bValue: Boolean)"},"addApplicationSettingsButtons":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Use {@link sap.ushell.services.Extension#addUserAction} instead.<br>Adds buttons to the action sheet in the shell header. This function always overrides the already existing application settings buttons with the new buttons. It is meant to be used by applications that want to add their own settings button to the shell header.","!static":"true","!category":"function","!type":"fn(aButtons: [sap.m.Button])"},"!module":"sap/ushell/services/AppConfiguration","!helpDescription":"The unified shell's AppConfiguration service as a singleton object.","addActivity":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 without replacement.<br>Adds an entry to user recent activity list. The list of recent activities will be displayed in the UserActionsMenu of FLP application (fiori 2.0) This method should be used by applications of special types. like \"Search\", \"OVP\", \"Co-Pilot\" and \"FactSheet\" This method should be only called in the \"exit\" method of applications Component.js in order to assure that it will be added to recent activities. For these applications the unique identifier of the entry is url and not appId, so in order to add different entry, different url should be specified, otherwise the entry will be updated with a new timestamp Only applications of type Search and Co-Pilot can set their icon.","!static":"true","!category":"function","!type":"fn(oRecentActivity: Object) -> jQuery.Promise"},"!category":"namespace","setIcons":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 Use {@link sap.ui.util.Mobile#setIcons} instead.<br>Sets the icons of the browser.","!static":"true","!category":"function","!type":"fn(oIconsProperties: Object)"}},"sap.ushell.services.PersonalizationV2.VariantSet_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationV2.VariantSet"},"sap.ushell.services.NotificationsV2.Priority":{"!description":"Enumeration for the priority of a notification","HIGH":{"!description":"High priority.","!category":"enum","!type":"String"},"!module":"sap/ushell/services/NotificationsV2","MEDIUM":{"!description":"Medium priority.","!category":"enum","!type":"String"},"LOW":{"!description":"Low priority.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ushell.services.UsageAnalytics":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 The corresponding cloud service \"SAP Web Analytics\" has been retired, therefore this client-side service API cannot be used any longer.<br>A UShell service for tracking business flows and user actions.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UsageAnalytics = await Container.getServiceAsync(\"UsageAnalytics\");\n    // do something with the UsageAnalytics service\n  });\n<\/pre>\n\nThe UsageAnalytics service exposes API for logging custom events and setting custom field values in the logged events.<br> The data is sent via http and recorded on a server, whose URL is defined by the <code>baseUrl<\/code> service configuration property.<br> The service configuration must also include the site ID from the <code>pubToken<\/code> attribute.<br> You can find the pubToken in the code snippet provided in the WARP when creating a new site.\n\nEach tracked event is represented by a table entry on the server database.<br> The administrator can produce reports based on the the recorded data.\n\nTwo types of events can be logged:<br> - Automatic events: Click or pageLoad are predefined events, logged by the base tracking library.<br> You can disable these events in the service configuration.<br> - Custom events: You can use the service API to log an event with custom data using the function logCustomEvent<br>\n\nEach tracked event (either automatic or custom) is represented by a database row, that includes 10 custom attributes named custom1...custom10.<br> Some of these values can be set using UsageAnalytics service API.<br>","!module":"sap/ushell/services/UsageAnalytics","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 The corresponding cloud service \"SAP Web Analytics\" has been retired, therefore this client-side service API cannot be used any longer.<br>A UShell service for tracking business flows and user actions.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UsageAnalytics = await Container.getServiceAsync(\"UsageAnalytics\");\n    // do something with the UsageAnalytics service\n  });\n<\/pre>\n\nThe UsageAnalytics service exposes API for logging custom events and setting custom field values in the logged events.<br> The data is sent via http and recorded on a server, whose URL is defined by the <code>baseUrl<\/code> service configuration property.<br> The service configuration must also include the site ID from the <code>pubToken<\/code> attribute.<br> You can find the pubToken in the code snippet provided in the WARP when creating a new site.\n\nEach tracked event is represented by a table entry on the server database.<br> The administrator can produce reports based on the the recorded data.\n\nTwo types of events can be logged:<br> - Automatic events: Click or pageLoad are predefined events, logged by the base tracking library.<br> You can disable these events in the service configuration.<br> - Custom events: You can use the service API to log an event with custom data using the function logCustomEvent<br>\n\nEach tracked event (either automatic or custom) is represented by a database row, that includes 10 custom attributes named custom1...custom10.<br> Some of these values can be set using UsageAnalytics service API.<br>","setCustomAttributes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 undefined<br>Sets up to 6 customer attributes of logged events according to the given object attributes.<br> A customer attribute can be set only once during a session.<br> Currently these attributes correspond to database columns custom5...custom10.","!static":false,"!category":"function","!type":"fn(oCustomFieldValues: Object)","parameters":{"oCustomFieldValues":"type: object, description: An json object that includes attribute1...attribute6 (or subset)<br> with values of type string/number/boolean or a function that returns any of these types.<br> For example:<br> {<br> attribute1: \"value3\",<br> attribute2: function () {return \"value4\"},<br> attribute3: 55<br> }<br> in this example the custom field \"custom5\" gets the string \"value3\"<br> the custom field custom6 gets the function that returns the string \"value4\",<br> the custom field custom7 gets a string \"55\".<br> Any property of oCustomFieldValues which is not in the range of attribute1...attribute6 is ignored."}},"userEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 undefined<br>Indicates whether the user has specified to track activities.<br><br>\n\nSince the service is deprecated and no longer supported, this method always returns <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ushell.services.Service","!category":"class","setLegalText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 undefined<br>Enables the renderer to set the content of the legal message..","!static":false,"!category":"function","!type":"fn()"},"systemEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 undefined<br>Indicates whether the service is available.<br><br>\n\nSince the service is deprecated and no longer supported, this method always returns <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ushell.ui5service.UserStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 Support for this service has been discontinued.<br>undefined","extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.UserStatus with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.service.Service.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 undefined<br>Enable the User Status service (online status)\n\nIf the user has never agreed to share their online status, then the method will show the opt-in screen to the user. If the user already agreed to share their online status, the setStatus method will be called with the default online status that was set by the user. If the user already declined to share their online status, the setStatus method will be called with a null value.","!static":false,"!category":"function","!type":"fn(bEnable: Boolean)","parameters":{"bEnable":"type: boolean, description: boolean."}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui5service.UserStatus.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!module":"sap/ushell/ui5service/UserStatus","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 Support for this service has been discontinued.<br>undefined","detachStatusChanged":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 undefined<br>Detaches an event handler from the 'statusChanged' event.","!static":false,"!category":"function","!type":"fn(fnFunction: fn())","parameters":{"fnFunction":"type: function, description: Event handler to be detached."}},"!proto":"sap.ui.core.service.Service","!category":"class","attachStatusChanged":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 undefined<br>Attaches an event handler fnFunction to be called upon the 'statusChanged' event. Event is fired when the setStatus method is called.","!static":false,"!category":"function","!type":"fn(fnFunction?: fn())","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs."}},"setStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.70 undefined<br>Publish the user status. This method is used to publish the status to other components.\n\nThe publication of the status by firing the 'statusChanged' event will happen when all the following apply: 1) the User Status service is enabled 2) the status is null or exists in the list of available statuses (sap.ushell.ui5service.UserStatus.prototype.AvailableStatus) 3) the user has agreed to share their online status","!static":false,"!category":"function","!type":"fn(oNewStatus: Object)","parameters":{"oNewStatus":"type: object, description: sap.ushell.ui5service.UserStatus.prototype.AvailableStatus"}}},"sap.ushell.services.LaunchPage":{"getTileTitle":{"!description":"Returns the tile's title.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"getTileTarget":{"!description":"Returns the tile's navigation target.\n\nThe navigation target string is used (when assigned to <code>location.hash<\/code>) for performing a navigation action that eventually opens the application represented by the tile.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: the tile"}},"isGroupFeatured":{"!description":"Checks if a group was marked as featured (meaning the group is a Fiori 3 featured group).\n\nReturns <code>true<\/code> if the group is featured and <code>false<\/code> if not.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Boolean","parameters":{"oGroup":"type: object, description: The group to be checked"}},"getLinkTiles":{"!description":"Returns an array of link tiles for a group. The order of the array is the order in which the links will be displayed to the user.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> [Object]","parameters":{"oGroup":"type: object, description: The group whose link tiles are returned"}},"addGroupAt":{"!description":"Adds a new group at a specific location.\n\nIntention: the page builder adds this group to the specific location on the home screen.\n\nIn case of error it gets the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(sTitle: String, iIndex: Number) -> jQuery.Promise","parameters":{"sTitle":"type: string, description: The title of the new group","iIndex":"type: int, description: the location of the new group"}},"getCatalogTiles":{"!description":"Returns the tiles of a catalog.","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> jQuery.Promise","parameters":{"oCatalog":"type: object, description: The catalog"}},"getGroupId":{"!description":"Returns the unique identifier of the given group","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> String","parameters":{"oGroup":"type: object, description: The group whose id is returned"}},"registerTileActionsProvider":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 This feature has been deprecated with the classic homepage. There is no alternative with spaces and pages.<br>Register an external tile actions provider callback function.\n\nThe callback has to return an array of actions of the given tile. The callback is triggered when @see sap.ushell.services.LaunchPage.getTileActions is called.\n\nTile actions are additional operations that can be executed on a tile, and can be provided by external providers.\n\nA tile action is an object with the following properties: text, icon and targetURL or a press handler.\n\nTile actions should be returned immediately without any additional server access in order to avoid delays in rendering the action list in the browser.","!static":false,"!category":"function","!type":"fn(fnProvider: Object)","parameters":{"fnProvider":"type: object, description: A callback which returns an array of action objects."}},"getTileSize":{"!description":"Returns the tile size in the format of 1x1 or 1x2 string","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"getCatalogTileTargetURL":{"!description":"Returns the navigation target URL of a catalog tile.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"getGroupTitle":{"!description":"Returns the title of the given group.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> String","parameters":{"oGroup":"type: object, description: The group whose title is returned"}},"getGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 Alternative for use with {@link sap.ushell.services.Bookmark} is {@link sap.ushell.services.Bookmark#getContentNodes}<br>Returns the groups of the user. The order of the array is the order in which the groups will be displayed to the user.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise<object>"},"setTileVisible":{"!description":"Sets the tile's visibility state and notifies the tile about the change.","!static":false,"!category":"function","!type":"fn(oTile: Object, bNewVisible: Boolean)","parameters":{"bNewVisible":"type: boolean, description: The tile's required visibility state.","oTile":"type: object, description: The tile"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 This service has been deprecated as it only works for the classic homepage.<br>A service for handling groups, tiles and catalogs.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const LaunchPage = await Container.getServiceAsync(\"LaunchPage\");\n    // do something with the LaunchPage service\n  });\n<\/pre>\n\nThe functions that return the main objects are getGroups, getGroupTitle, getCatalogs and getCatalogTiles. Since the implementation (i.e. adapter) is platform specific, do not call or access properties and functions of returned objects. Instead, use other functions of the LaunchPage service with the relevant object as the input parameter.\n\nWhen using the content extension factory, any extended content needs to refer to the correct adapter with the field \"contentProvider\".","getCatalogTileViewControl":{"!description":"Returns the UI5 view or control of a catalog tile","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object, bPreview?: Boolean) -> jQuery.Promise","parameters":{"bPreview":"type: boolean, description: SAP-internal: Whether the tile should be displayed in preview mode","oCatalogTile":"type: object, description: The catalog tile"}},"getCatalogTilePreviewInfo":{"!description":"Returns the catalog tile info","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"isGroupLocked":{"!description":"Checks if a group was marked as locked (meaning the group and its tiles will lack several capabilities such as Rename, Drag&Drop...).\n\nReturns <code>true<\/code> if the group is locked and <code>false<\/code> if not.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Boolean","parameters":{"oGroup":"type: object, description: The group to be checked"}},"isGroupRemovable":{"!description":"Checks if a group can be removed.\n\nReturns <code>true<\/code> if the group can be removed (i.e. if the given group was created by the user) and <code>false<\/code> if the group can only be reset.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> Boolean","parameters":{"oGroup":"type: object, description: The group to be checked"}},"removeTile":{"!description":"Removes a tile from a group.\n\nIntention: the page builder has already 'hidden' (or removed) the tile.\n\nIn case of failure it gets the consistent (i.e. persisted) backend state of the group.","!static":false,"!category":"function","!type":"fn(oGroup: Object, oTile: Object, iIndex: Number) -> jQuery.Promise","parameters":{"oGroup":"type: object, description: The group from which to remove the tile instance","iIndex":"type: int, description: The tile index","oTile":"type: object, description: The tile instance to remove"}},"getTileType":{"!description":"Returns the tile's type.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"setGroupTitle":{"!description":"Sets the title of an existing group.\n\nIntention: the page builder knows the new title, and if successful nothing needs to be done, as the title is already visible to the user. In case of failure it gets the consistent (i.e. persisted) backend state of the group title, in most cases the old title.","!static":false,"!category":"function","!type":"fn(oGroup: Object, sTitle: String) -> jQuery.Promise","parameters":{"oGroup":"type: object, description: The group whose title is set","sTitle":"type: string, description: The new title of the group"}},"getAppBoxPressHandler":{"!description":"Returns the press handler for clicking on a tile.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> fn()","parameters":{"oTile":"type: object, description: The tile"}},"getGroupTiles":{"!description":"Returns an array of 'anonymous' tiles of a group. The order of the array is the order of tiles that will be displayed to the user.","!static":false,"!category":"function","!type":"fn(oGroup: Object) -> [Object]","parameters":{"oGroup":"type: object, description: The group whose tiles are returned"}},"resetGroup":{"!description":"Resets a group.\n\nThe reset action is relevant for a group that was assigned to the user by an administrator. The reset action means that the group is set back to the state defined by the administrator, and changes made by the end user (e.g. adding tiles) are removed. A group can be reset multiple times.\n\nIn case of failure, or when the given group was created by the user (i.e. can't be reset)- it gets, the consistent (i.e. persisted) backend state of all groups. The returned group object is the same as the one returned by @see sap.ushell.services.LaunchPage.getGroups","!static":false,"!category":"function","!type":"fn(oGroup: Object, iIndex: Number) -> jQuery.Promise","parameters":{"oGroup":"type: object, description: The group to be reset","iIndex":"type: int, description: The index of the group to be reset"}},"!module":"sap/ushell/services/LaunchPage","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 This service has been deprecated as it only works for the classic homepage.<br>A service for handling groups, tiles and catalogs.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const LaunchPage = await Container.getServiceAsync(\"LaunchPage\");\n    // do something with the LaunchPage service\n  });\n<\/pre>\n\nThe functions that return the main objects are getGroups, getGroupTitle, getCatalogs and getCatalogTiles. Since the implementation (i.e. adapter) is platform specific, do not call or access properties and functions of returned objects. Instead, use other functions of the LaunchPage service with the relevant object as the input parameter.\n\nWhen using the content extension factory, any extended content needs to refer to the correct adapter with the field \"contentProvider\".","getCatalogTileTechnicalAttributes":{"!description":"Returns the technical attributes associated with a catalog tile which can be used define additional tags for apps. Note: getCatalogTileViewControl <b>must<\/b> be called <b>before<\/b> this method. Otherwise the technical attributes may be incomplete.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> [String]","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"getTileView":{"!description":"Returns UI5 view or control of the tile.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> jQuery.Promise","parameters":{"oTile":"type: object, description: The tile"}},"getCatalogTileContentProviderId":{"!description":"Returns catalog tile's content provider ID.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile or the catalog tile"}},"getCatalogTilePreviewTitle":{"!description":"Returns preview title for a catalog tile.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"!proto":"sap.ushell.services.Service","getCatalogTileTags":{"!description":"Returns the tags associated with a catalog tile which can be used to find the catalog tile in a tag filter.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> [String]","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"!category":"class","getCatalogTilePreviewSubtitle":{"!description":"Returns preview subtitle for a catalog tile.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"getCatalogTileView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 Please use {@link #getCatalogTileViewControl} instead.<br>Returns the UI5 view or control of a catalog tile","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object, bPreview?: Boolean) -> Object","parameters":{"bPreview":"type: boolean, description: SAP-internal: Whether the tile should be displayed in preview mode","oCatalogTile":"type: object, description: The catalog tile"}},"getCatalogs":{"!description":"Returns the catalogs of the user. <p> Only severe failures make the overall operation fail. If loading of a remote catalog fails, this is handled gracefully by providing a \"dummy\" empty catalog (with ID instead of title). Use {@link getCatalogError} to check if a (remote) catalog could not be loaded from the backend. <p> Progress notifications are sent for each single catalog, i.e. attaching a <code>progress<\/code> handler gives you the same possibilities as attaching a <code>done<\/code> handler, but with the advantage of improved responsiveness.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"moveTile":{"!description":"Moves a tile within a group or between different groups.\n\nIntention: the page builder already moved the tile.\n\nIn case of failure it gets the consistent (i.e. persisted) backend state of the source group and the target group. The result is in the following format {source:[{},{}], target:[{},{}]}.\n\nThe source and the target groups tiles are in the form of the @see sap.ushell.services.LaunchPage.getGroupTiles","!static":false,"!category":"function","!type":"fn(oTile: Object, iSourceIndex: Number, iTargetIndex: Number, oSourceGroup: Object, oTargetGroup?: Object, sNewTileType?: String) -> jQuery.Promise","parameters":{"oTargetGroup":"type: object, description: The same object type as the one returned by <code>sap.ushell.services.LaunchPage.getGroups<\/code> the target group the tile will be placed in, in case this parameter is not supplied we assume the move tile is within the source group","oSourceGroup":"type: object, description: the source group the tile came from","iTargetIndex":"type: int, description: the target group index, in case this parameter is not supplied we assume the move tile is within the source group using iSourceIndex","iSourceIndex":"type: int, description: the index in the source group","sNewTileType":"type: string, description: (added with 1.46) The new type of the tile","oTile":"type: object, description: a tile instance to be moved. The same object type as the one returned by <code>sap.ushell.services.LaunchPage.getGroupTiles<\/code>"}},"getCatalogTitle":{"!description":"Returns the catalog's title","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> String","parameters":{"oCatalog":"type: object, description: The catalog"}},"getTileId":{"!description":"Returns the tile's unique identifier","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile"}},"addGroup":{"!description":"Adds a new group.\n\nIntention: the page builder adds this group to the end of the home screen.\n\nIn case of failure it gets the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> jQuery.Promise","parameters":{"sTitle":"type: string, description: The title of the new group"}},"getCatalogTileKeywords":{"!description":"Returns the keywords associated with a catalog tile which can be used to find the catalog tile in a search. Note: getCatalogTileViewControl <b>must<\/b> be called <b>before<\/b> this method. Otherwise the keywords may be incomplete.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> [String]","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"isCatalogsValid":{"!description":"Returns whether the catalogs collection previously returned by <code>getCatalogs()<\/code> is still valid.\n\nInitially the result is <code>false<\/code> until <code>getCatalogs()<\/code> has been called. Later, the result might be <code>false<\/code> again in case one of the catalogs has been invalidated, e.g. due to adding a tile to a catalog (\"Add to catalog\" scenario).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addTile":{"!description":"Adds a tile to a group.\n\nIf no group is provided then the tile is added to the default group.\n\nIntention: the page builder by default puts this tile at the end of the default group. In case of failure it gets the consistent (i.e. persisted) backend state of the default group.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object, oGroup?: Object) -> jQuery.Promise","parameters":{"oGroup":"type: object, description: The target group","oCatalogTile":"type: object, description: An 'anonymous' tile from the tile catalog"}},"refreshTile":{"!description":"Triggers a refresh action of a tile. Typically this action is related to the value presented in dynamic tiles","!static":false,"!category":"function","!type":"fn(oTile: Object)","parameters":{"oTile":"type: object, description: The tile"}},"getCatalogTileId":{"!description":"Returns catalog tile's unique identifier. This function may be called for a catalog tile or (since 1.21.0) for a group tile. In the latter case, the function returns the unique identifier of the catalog tile on which the group tile is based.","!static":false,"!category":"function","!type":"fn(oTile: Object) -> String","parameters":{"oTile":"type: object, description: The tile or the catalog tile"}},"getDefaultGroup":{"!description":"Returns the default group of the user.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"getCatalogData":{"!description":"Returns catalog's technical data.","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> Object","parameters":{"oCatalog":"type: object, description: the catalog"}},"getCatalogId":{"!description":"Returns the catalog's unique identifier","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> String","parameters":{"oCatalog":"type: object, description: The catalog"}},"getCatalogTileTitle":{"!description":"Returns the catalog tile's title","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"getCatalogTileSize":{"!description":"Returns the size of a catalog tile as a string. For example: \"1x1\", \"1x2\"","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"moveGroup":{"!description":"Moves a group to a new index (i.e. location).\n\nIntention: the page builder already moved the page (visible to the user) and if successful - nothing needs to be done. In case of failure it gets the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(oGroup: Object, iNewIndex: Number) -> jQuery.Promise","parameters":{"iNewIndex":"type: int, description: The new index for the group","oGroup":"type: object, description: The group to be moved"}},"getCatalogTilePreviewIcon":{"!description":"Returns preview icon for a catalog tile.","!static":false,"!category":"function","!type":"fn(oCatalogTile: Object) -> String","parameters":{"oCatalogTile":"type: object, description: The catalog tile"}},"removeGroup":{"!description":"Removes a group.\n\nIntention: the page builder already removed the page (or hid it from the user) and if successful - nothing needs to be done.\n\nIn case of failure it gets the consistent (i.e. persisted) backend state of all groups.","!static":false,"!category":"function","!type":"fn(oGroup: Object, iIndex: Number) -> jQuery.Promise","parameters":{"oGroup":"type: object, description: The group to be removed","iIndex":"type: int, description: The index of the group to be removed"}},"getCatalogError":{"!description":"Returns the catalog's technical error message in case it could not be loaded from the backend. <p> <b>Beware:<\/b> The technical error message is not translated!","!static":false,"!category":"function","!type":"fn(oCatalog: Object) -> String","parameters":{"oCatalog":"type: object, description: the catalog"}}},"sap.ushell.NavigationState":{"!description":"The state of a navigation operation","Finished":{"!category":"enum","!type":"String"},"!module":"sap/ushell/library","!category":"static class","InProgress":{"!category":"enum","!type":"String"}},"sap.ushell.renderers.fiori2":{"LaunchpadState":{"!description":"The launchpad states that can be passed as a parameter.<\/br>\n\n<b>Values:<\/b> App - launchpad state when running a Fiori app<\/br> Home - launchpad state when the home page is open<\/br>","!category":"enum","!type":"String"},"Renderer":"sap.ushell.renderers.fiori2.Renderer_obj","!category":"namespace"},"sap.ushell.services.URLParsing":{"!description":"The Unified Shell's internal URL parsing service (platform independent).\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const URLParsing = await Container.getServiceAsync(\"URLParsing\");\n    // do something with the URLParsing service\n  });\n<\/pre>\n\nMethods in this class allow to break down a shell compliant hash into it's respective parts (SemanticObject,Action,Context, Parameters, appSpecificHash) or (ShellPart,appSpecificHash) respectively or construct a hash from its constituents.\n\nAll methods deal with the *internal* shellHash format.\n\nMost of the parse methods are robust w.r.t. a leading \"#\".\n\nNote: The functions were designed with a \"truthy\" behavior for not present values, Thus a client should not rely on the difference between null, \"undefined\", \"\" when testing for the result of a parse action.\n\nThe parsing functions are deliberately restrictive and fragile, only shell compliant hashes are parsed correctly, behavior for non-compliant hashes is undefined and subject to change, notably we do not aim do \"degrade\" nicely or support partial parsing of corrupted urls.","addSystemToServiceUrl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31 Please use {@link sap.ui.model.odata.ODataUtils#setOrigin} instead.<br>Note: deprecated, please use <code>sap.ui.model.odata.ODataUtils.setOrigin(sServiceUrl, { alias : sSystem });<\/code> Makes the given server-relative SAP OData service URL point to the system given explicitly as parameter <code>vComponentOrSystem<\/code>. If this parameter is not provided, it makes the server-relative URL point to the system of the current application. <em>Server-relative URL<\/em> means a URL starting with exactly one &quot;/&quot; (also known as absolute-path URL). The <em>system of the current application<\/em> is taken from the parameter &quot;sap-system&quot; of the last navigation target resolution result. <p> If either a multiple-origin parameter <code>;mo/<\/code> or an origin parameter with qualified system (<code>;o=sid(SYS.123)<\/code> or <code>o=SYSALIAS<\/code>) is already present, the <code>sServiceUrl<\/code> is returned unchanged. <p> The framework invokes this function for SAPUI5 applications that have been built using declarative model instantiation with the application descriptor (data source) mechanism or using an sap.ca framework. For these applications, you do not need to invoke this function explicitly in the application code. If the application does not use any of these mechanisms, but explicitly constructs additional OData models or performs OData requests, the application code shall invoke this function. It shall pass its root component instance as <code>vComponentOrSystem<\/code> - the function will then determine the system from the navigation start-up parameter &quot;sap-system&quot; (<code>getComponentData().startupParameters[&quot;sap-system&quot;][0])<\/code>. Applications may call this API with parameter <code>vComponentOrSystem<\/code> and a non-empty string value if application-specific logic is used to determine the target system for service calls. <p> With service URLs converted using this API, administrators can redirect service calls to servers other than the default SAP Gateway and back-end server either via reverse proxy (e.g. SAP Web Dispatcher) configuration or using the system alias functionality of the SAP Gateway server. <p> The system is added to the last URL segment of the service URL with the segment parameter <code>;o=<\/code>. You can also make this function put the system to a different URL path segment of the service URL by specifying the empty segment parameter <code>;o=<\/code>, e.g. <code>/sap/opu/odata/MyService;o=/MyEntities/$count?p1=v1<\/code>. If both <code>vComponentOrSystem<\/code> is empty and the current application has no system, no system is added and the empty segment parameter <code>;o<\/code> is removed.<br/>\n\n<b>Example 1:<\/b> <code>/sap/opu/odata/MyService/?p1=v1<\/code> is converted to <code>/sap/opu/odata/MyService;o=SYS/?p1=v1<\/code> if the target system is &quot;SYS&quot;. However it remains unchanged if both the current application's system <em>and<\/em> the parameter <code>vComponentOrSystem<\/code> are empty.<br/>\n\n<b>Example 2:<\/b> <code>/sap/opu/odata/MyService;o=/MyEntities/$count?p1=v1<\/code> is converted to <code>/sap/opu/odata/MyService;o=sid(SYS.123)/MyEntities/$count?p1=v1<\/code> if parameter <code>vComponentOrSystem<\/code> is set to &quot;sid(SYS.123)&quot;<\/code>. <p> The URL is in no way normalized.","!static":false,"!category":"function","!type":"fn(sServiceUrl: String, vComponentOrSystem?: String | sap.ui.core.Component) -> String","parameters":{"vComponentOrSystem":"type: string|sap.ui.core.Component, description: the root component of the FLP application ( <code>getComponentData().startupParameters[&quot;sap-system&quot;][0]<\/code> is used as system alias if present) or a string valued system specification like &quot;SYS&quot; or &quot;sid(SYS.123)&quot; if undefined or falsy the system of the current application is used","sServiceUrl":"type: string, description: a server-relative URL without system alias information"}},"getHash":{"!description":"Extract a hash part from an URL, including an app-specific part","!static":false,"!category":"function","!type":"fn(sURL: String) -> String","parameters":{"sURL":"type: string, description: any value"}},"!proto":"sap.ushell.services.Service","isIntentUrl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.96 Please use {@link #isIntentUrlAsync} instead.<br>Check if a URL has an intent based navigation part which can be parsed into a semantic object and action part. Accepts only a relative URL (must contain #) or fully qualified Urls for which origin and filename must correspond to the running launchpad.\n\nGiven actual url <code>http://www.mycorp.com/sap/fiori/FioriLaunchpad.html?sap-language=DE#SO-action?P1=value1<\/code>, the following parts <code>http://www.mycorp.com/sap/fiori/FioriLaunchpad.html<\/code> must match.\n\nThe actual test is synchronous and *only* tests whether the hash part can be parsed and contains a semantic object and action. It does not test whether the intent or its parameters are valid for a given user","!static":false,"!category":"function","!type":"fn(sUrl: String) -> Boolean","parameters":{"sUrl":"type: string, description: the URL to test. Note: this url must be in internal format."}},"isIntentUrlAsync":{"!description":"Check if a URL has an intent based navigation part which can be parsed into a semantic object and action part. Accepts only a relative URL (must contain #) or fully qualified Urls for which origin and filename must correspond to the running launchpad.\n\nGiven actual url <code>http://www.mycorp.com/sap/fiori/FioriLaunchpad.html?sap-language=DE#SO-action?P1=value1<\/code>, the following parts <code>http://www.mycorp.com/sap/fiori/FioriLaunchpad.html<\/code> must match.\n\nThis function *only* tests whether the hash part can be parsed and contains a semantic object and action. It does not test whether the intent or its parameters are valid for a given user","!static":false,"!category":"function","!type":"fn(sUrl: String) -> Promise<boolean>","parameters":{"sUrl":"type: string, description: the URL to test. Note: this url must be in internal format."}},"!category":"class","parseParameters":{"!description":"This method parses parameters from a URI query string (starting with ?) and puts the result into a parameter object.","!static":false,"!category":"function","!type":"fn(sParams: sap.ui.core.URI) -> [Object<string,sap.ushell.services.URLParsing.URLValue]","parameters":{"sParams":"type: sap.ui.core.URI, description: Parameter string, e.g. <code>?ABC=1&ABC=1%202&DEF=4<\/code>"}},"getShellHash":{"!description":"Extract the Shell hash# part from an URL The application specific route part is removed See {@link #getHash} for a function which retains the app specific route.\n\nShell services shall use this service to extract relevant parts of an URL from an actual URL string (which should be treated as opaque) <p> The URL has to comply with the Fiori-Wave 2 agreed upon format <p> This service shall be used to extract a hash part from an url. The result can be further broken up by parseShellHash\n\nExamples<p> http://a.b.c?defhij#SemanticObject-Action~Context?PV1=A&PV2=B&/appspecific <br/> returns : \"#SemanticObject-Action~Context?PV1=A&PV2=B&/appspecific\"\n\nNote: the results when passing an illegal (non-compliant) url are undefined and subject to change w.o. notice. Notably further checks may added. The design is deliberately restrictive and non-robust.","!static":false,"!category":"function","!type":"fn(sShellHashString: sap.ui.core.URI) -> sap.ushell.services.Navigation.TargetIntent","parameters":{"sShellHashString":"type: sap.ui.core.URI, description: a valid (Shell) url, e.g. <br/> <code>http://xx.b.c#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH<\/code>"}},"!module":"sap/ushell/services/URLParsing","!helpDescription":"The Unified Shell's internal URL parsing service (platform independent).\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const URLParsing = await Container.getServiceAsync(\"URLParsing\");\n    // do something with the URLParsing service\n  });\n<\/pre>\n\nMethods in this class allow to break down a shell compliant hash into it's respective parts (SemanticObject,Action,Context, Parameters, appSpecificHash) or (ShellPart,appSpecificHash) respectively or construct a hash from its constituents.\n\nAll methods deal with the *internal* shellHash format.\n\nMost of the parse methods are robust w.r.t. a leading \"#\".\n\nNote: The functions were designed with a \"truthy\" behavior for not present values, Thus a client should not rely on the difference between null, \"undefined\", \"\" when testing for the result of a parse action.\n\nThe parsing functions are deliberately restrictive and fragile, only shell compliant hashes are parsed correctly, behavior for non-compliant hashes is undefined and subject to change, notably we do not aim do \"degrade\" nicely or support partial parsing of corrupted urls.","parseShellHash":{"!description":"Decompose a shell hash into the respective parts","!static":false,"!category":"function","!type":"fn(sHash: sap.ushell.services.Navigation.TargetIntent) -> sap.ushell.services.URLParsing.DecomposedHash","parameters":{"sHash":"type: sap.ushell.services.Navigation.TargetIntent, description: Hash part of a shell compliant URL <code>#SO-Action~Context?P1=a&P2=x&/route?RPV=1<\/code> the hash part of an URL, <br/> e.g. <code>\"#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH<\/code>"}},"paramsToString":{"!description":"combine members of a javascript object into a parameter string, note that parameters are ordered in an arbitrary manner which is subject to change","!static":false,"!category":"function","!type":"fn(oParams: [Object<string,sap.ushell.services.URLParsing.URLValue]) -> sap.ui.core.URI","parameters":{"oParams":"type: Object<string,sap.ushell.services.URLParsing.URLValue[]>, description: The parameters to combine into the parameter String, e.g. <code>{ ABC : [1,\"1 2\"], DEF : [\"4\"]}<\/code>"}},"constructShellHash":{"!description":"compose a shell Hash from it's respective parts Note that it also may append an app specific route!","!static":false,"!category":"function","!type":"fn(oShellHash?: sap.ushell.services.URLParsing.SimpleDecomposedHash | sap.ushell.services.URLParsing.DecomposedHash) -> sap.ushell.services.Navigation.TargetIntentStrict","parameters":{"oShellHash":"type: sap.ushell.services.URLParsing.SimpleDecomposedHash|sap.ushell.services.URLParsing.DecomposedHash, description: The parts of a shell hash. Its action must be a valid action, It may not contain \"?\" or directly a parameter string. Note: In general it is preferred to add an appStateKey directly to the params object."}},"splitHash":{"!description":"split a Unified Shell compliant hash into an Object containing a shell specific part and an app specific parts<\/br> for non compliant hash strings, the empty object {} is returned. an optional leading # is stripped","!static":false,"!category":"function","!type":"fn(sHash: sap.ushell.services.Navigation.TargetIntent) -> sap.ushell.services.URLParsing.SplitHash","parameters":{"sHash":"type: sap.ushell.services.Navigation.TargetIntent, description: The hash part of a shell conformant URL. It has to have the following format: <code>#SO-Action~Context?P1=a&P2=x&/route?RPV=1<code> Here is an example for the hash part of an URL: <code>\"#Object-name~AFE2==?PV1=PV2&PV4=V5&/display/detail/7?UU=HH<code>"}}},"sap.ushell.ui.shell.ToolAreaItem":{"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines whether to mark the control as selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nText which will be read by screenreader.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","fireExpand":{"!description":"Fires event {@link #event:expand expand} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new ToolAreaItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getExpandable":{"!description":"Gets current value of property {@link #getExpandable expandable}.\n\nDefines whether the control will have an expand functionality containing sub-items or actions. If the property is set to true, a small \"expand\" icon appears in the lower corner of the control. The \"expand\" event is fired when the \"expand\" icon is pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself.\n\nEvent is fired when the user presses the item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"A control to be placed in the tool area","setExpandable":{"!description":"Sets a new value for property {@link #getExpandable expandable}.\n\nDefines whether the control will have an expand functionality containing sub-items or actions. If the property is set to true, a small \"expand\" icon appears in the lower corner of the control. The \"expand\" event is fired when the \"expand\" icon is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandable?: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"bExpandable":"type: boolean, description: New value for property <code>expandable<\/code>"}},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nDefines whether to display the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.shell.ToolAreaItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDefines whether to display the control\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property {@link #getText text}.","!static":false,"!category":"function","!type":"fn() -> String"},"attachExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:expand expand} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself.\n\nEvent is fired when the user presses the Expand icon.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.shell.ToolAreaItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon that is displayed in the item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nText which will be read by screenreader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAriaLabel?: String) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.shell.ToolAreaItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon that is displayed in the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon?: sap.ui.core.URI) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines whether to mark the control as selected\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:expand expand} event of this <code>sap.ushell.ui.shell.ToolAreaItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!module":"sap/ushell/ui/shell/ToolAreaItem","!helpDescription":"A control to be placed in the tool area","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ushell.ui.shell.ToolAreaItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ushell.components.factsheet.controls.PictureViewerItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use {@link sap.m.Carousel} instead. PictureViewerItem is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","setSrc":{"!description":"Setter for property <code>src<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn(sSrc: String) -> sap.ushell.components.factsheet.controls.PictureViewerItem","parameters":{"sSrc":"type: string, description: new value for property <code>src<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureViewerItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","destroyImage":{"!description":"Destroys the image in the aggregation {@link #getImage image}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewerItem"},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewerItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureViewerItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getImage image} : sap.m.Image<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ushell/components/factsheet/controls/PictureViewerItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use {@link sap.m.Carousel} instead. PictureViewerItem is used in PictureViewer control and is not meant to be consumed outside of PictureViewer usage. PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","getImage":{"!description":"Gets content of aggregation {@link #getImage image}.","!static":false,"!category":"function","!type":"fn() -> sap.m.Image"},"setImage":{"!description":"Sets the aggregated {@link #getImage image}.","!static":false,"!category":"function","!type":"fn(oImage: sap.m.Image) -> sap.ushell.components.factsheet.controls.PictureViewerItem","parameters":{"oImage":"type: sap.m.Image, description: The image to set"}}},"sap.ushell.services.FrameBoundExtension.ToolArea":{"!description":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call <code>sap.ushell.Container.getServiceAsync(\"FrameBoundExtension\")<\/code>. For details, see {@link sap.ushell.Container#getServiceAsync}.\n\n<p><b>Restriction:<\/b> This Service does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","hideOnHome":{"!description":"Hides the tool area for launchpad \"home\". Does not change the visibility of the tool area within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"},"hideForAllApps":{"!description":"Shows the tool area for all applications. Does not change the visibility of the tool area for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"},"!module":"sap/ushell/services/FrameBoundExtension","!helpDescription":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call <code>sap.ushell.Container.getServiceAsync(\"FrameBoundExtension\")<\/code>. For details, see {@link sap.ushell.Container#getServiceAsync}.\n\n<p><b>Restriction:<\/b> This Service does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","!proto":"sap.ushell.services.Service","createItem":{"!description":"Creates an item in the tool area.","!static":false,"!category":"function","!type":"fn(controlProperties: Object) -> Promise<sap.ushell.services.FrameBoundExtension.Item>","parameters":{"controlProperties":"type: object, description: The properties that will be passed to the {@link sap.ushell.ui.shell.ToolAreaItem}."}},"showOnHome":{"!description":"Shows the tool area for launchpad \"home\". Does not change the visibility of the tool area within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"},"!category":"class","showForAllApps":{"!description":"Shows the tool area for all applications. Does not change the visibility of the tool area for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.ToolArea"}},"sap.ushell.components.factsheet.controls.PictureViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.TileContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureViewer"},"sap.ushell.services.Extension.Item":{"!description":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Extension = await Container.getServiceAsync(\"Extension\");\n    // do something with the Extension service\n  });\n<\/pre>\n\nThis service is available in any FLP context (native, iframe, ...).\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","hideOnHome":{"!description":"Hides the item for launchpad \"home\". Does not change the visibility of the item within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"hideForAllApps":{"!description":"Shows the item for all applications. Does not change the visibility of the item for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"showForCurrentApp":{"!description":"Shows the item for the current application. The item will be hidden after the user navigates away from this application. The item will <b>not<b> be added again if the user navigates back to the application.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"!module":"sap/ushell/services/Extension","!helpDescription":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Extension = await Container.getServiceAsync(\"Extension\");\n    // do something with the Extension service\n  });\n<\/pre>\n\nThis service is available in any FLP context (native, iframe, ...).\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","!proto":"sap.ushell.services.Service","hideForCurrentApp":{"!description":"Hides the item for the current application.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"destroy":{"!description":"Destroys the item and it's related content.","!static":false,"!category":"function","!type":"fn() -> Promise"},"showOnHome":{"!description":"Shows the item for launchpad \"home\". Does not change the visibility of the item within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"!category":"class","showForAllApps":{"!description":"Shows the item for all applications. Does not change the visibility of the item for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"}},"sap.ushell.services.PersonalizationV2.ContextContainer":{"!description":"The container is the anchor object of the unified shell personalization in container mode.\n\nTo be called by the personalization service getContainer method.","getKey":{"!description":"return the container key as a string variable","!static":false,"!category":"function","!type":"fn() -> String"},"setItemValue":{"!description":"Sets the value of a direct item in the container. In case the item is already existing its value is overwritten. In case it is not existing a new item with this key and value is created. The value is serialized during set","!static":false,"!category":"function","!type":"fn(sItemKey: String, oItemValue: Object)","parameters":{"sItemKey":"type: string, description: item key. The string length is restricted to 40 characters","oItemValue":"type: object, description: item value (JSON object)"}},"!proto":"sap.ui.base.Object","containsItem":{"!description":"Checks if a specific direct item is contained in the container.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"save":{"!description":"Save the current container data at the underlying storage asynchronously at the earlies nDelayInMilliseconds seconds before. The current state is serialized.","!static":false,"!category":"function","!type":"fn(nDelayInMilliseconds: Number) -> Promise","parameters":{"nDelayInMilliseconds":"type: int, description: undefined"}},"!category":"class","getItemValue":{"!description":"Returns the value for a direct item from the container. (Value semantics, new copy is returned)","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"clearData":{"!description":"clears the local copy data of this container","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ushell/services/PersonalizationV2/ContextContainer","load":{"!description":"(Re)loads the current container data from the underlying storage asynchronously. The current local data is discarded.\n\nReturns a promise for the load operation. If another save/load/delete operation is not completed, the operation may fail! (wait for the other promise).\n\nSynchronous read and write operations before the load is done have undefined effects.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!helpDescription":"The container is the anchor object of the unified shell personalization in container mode.\n\nTo be called by the personalization service getContainer method.","deleteItem":{"!description":"Deletes a direct item from the container. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"getItemKeys":{"!description":"Returns an array with the keys of direct items in the container.","!static":false,"!category":"function","!type":"fn() -> [String]"},"flushPendingRequests":{"!description":"flush all pending request; The result of the promise may reflect the last pending operation in the queue","!static":false,"!category":"function","!type":"fn() -> Promise"}},"sap.ushell.services.URLParsing_obj":{"!type":"fn()","prototype":"sap.ushell.services.URLParsing"},"sap.ushell.services.PersonalizationV2.VariantSet":{"!description":"A VariantSet is a class representing a collection of Variants (identified by a key and name) and a member variable indicating the \"current variable\"\n\nWhen manipulating the underlying data, additional constraints are enforced.\n\nThe personalization variant set contains variants of personalization data. It is used in the personalization container mode.\n\nTo be called by the personalization container","getVariantKeys":{"!description":"Returns an array with the keys of the variants in the variant set.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getVariant":{"!description":"Returns a variant object.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> sap.ushell.services.PersonalizationV2.Variant","parameters":{"sVariantKey":"type: string, description: variant key"}},"!proto":"sap.ui.base.Object","!category":"class","getVariantKeyByName":{"!description":"Returns the variant key corresponding to a variant name.","!static":false,"!category":"function","!type":"fn(sVariantName: String) -> String","parameters":{"sVariantName":"type: string, description: variant name"}},"setCurrentVariantKey":{"!description":"Sets the current variant key.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: There is no validity check for the variant key."}},"deleteVariant":{"!description":"Deletes a variant from the variant set. In case the variant does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: variant key"}},"!module":"sap/ushell/services/PersonalizationV2/VariantSet","!helpDescription":"A VariantSet is a class representing a collection of Variants (identified by a key and name) and a member variable indicating the \"current variable\"\n\nWhen manipulating the underlying data, additional constraints are enforced.\n\nThe personalization variant set contains variants of personalization data. It is used in the personalization container mode.\n\nTo be called by the personalization container","getCurrentVariantKey":{"!description":"Returns the current variant key.","!static":false,"!category":"function","!type":"fn() -> String"},"containsVariant":{"!description":"Checks if a specific variant is contained in the variant set.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Boolean","parameters":{"sVariantKey":"type: string, description: variant key"}},"addVariant":{"!description":"Creates a new variant in the variant set. In case a variant with this name is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantName: String) -> sap.ushell.services.PersonalizationV2.Variant","parameters":{"sVariantName":"type: string, description: variant set name"}}},"sap.ushell.services.Personalization.PersonalizationContainerVariant_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.PersonalizationContainerVariant"},"sap.ushell.services.PersonalizationV2.Variant":{"!description":"The personalization variant contains personalization data. It is used in the personalization container mode.\n\nTo be instantiated via Personalization.VariantSet add / get Variant only","setItemValue":{"!description":"Sets the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String, oItemValue: Object)","parameters":{"sItemKey":"type: string, description: item key","oItemValue":"type: object, description: value (JSON object)"}},"!proto":"sap.ui.base.Object","containsItem":{"!description":"Checks if a specific item is contained in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Boolean","parameters":{"sItemKey":"type: string, description: item key"}},"setVariantName":{"!description":"Sets the name of the variant.\n\nIn case a variant with <code>sVariantName<\/code> is already existing in the corresponding variant set an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantName: String)","parameters":{"sVariantName":"type: string, description: variant name"}},"!category":"class","getItemValue":{"!description":"Returns the value for an item in this variant.","!static":false,"!category":"function","!type":"fn(sItemKey: String) -> Object","parameters":{"sItemKey":"type: string, description: item key"}},"!module":"sap/ushell/services/PersonalizationV2/Variant","!helpDescription":"The personalization variant contains personalization data. It is used in the personalization container mode.\n\nTo be instantiated via Personalization.VariantSet add / get Variant only","deleteItem":{"!description":"Deletes an item from this variant. In case the item does not exist, nothing happens.","!static":false,"!category":"function","!type":"fn(sItemKey: String)","parameters":{"sItemKey":"type: string, description: item key"}},"getVariantKey":{"!description":"Returns the key of this variant.","!static":false,"!category":"function","!type":"fn() -> String"},"getItemKeys":{"!description":"Returns an array with the keys of all items in this variant.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getVariantName":{"!description":"Returns the name of this variant.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ushell.ui.launchpad.ActionItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.ActionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.launchpad.ActionItem"},"sap.ushell.api.workpage.Designtime_obj":{"!type":"fn()","prototype":"sap.ushell.api.workpage.Designtime"},"sap.ushell.ui.tile.StaticTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/tile/StaticTile. An applauncher tile for simple, static apps, displaying title, subtitle, an icon and additional information","extend":{"!description":"Creates a new subclass of class sap.ushell.ui.tile.StaticTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ushell.ui.tile.TileBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.tile.StaticTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ushell.ui.tile.TileBase#constructor sap.ushell.ui.tile.TileBase} can be used.","!module":"sap/ushell/ui/tile/StaticTile","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/tile/StaticTile. An applauncher tile for simple, static apps, displaying title, subtitle, an icon and additional information","!proto":"sap.ushell.ui.tile.TileBase","!category":"class"},"sap.ushell.ui.launchpad.DashboardGroupsContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.DashboardGroupsContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.launchpad.DashboardGroupsContainer"},"sap.ushell.ui.tile":{"StaticTile":"sap.ushell.ui.tile.StaticTile_obj","!category":"namespace"},"sap.ushell.services.SupportTicket":{"!description":"The Unified Shell's SupportTicket service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SupportTicket = await Container.getServiceAsync(\"SupportTicket\");\n    // do something with the SupportTicket service\n  });\n<\/pre>","!module":"sap/ushell/services/SupportTicket","!helpDescription":"The Unified Shell's SupportTicket service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SupportTicket = await Container.getServiceAsync(\"SupportTicket\");\n    // do something with the SupportTicket service\n  });\n<\/pre>","createTicket":{"!description":"Creates a Support Ticket. Forwards the given data (JSON object) to the associated adapter.","!static":false,"!category":"function","!type":"fn(oSupportTicketData: Object) -> Promise<string>","parameters":{"oSupportTicketData":"type: object, description: JSON object containing the input fields required for the support ticket."}},"isEnabled":{"!description":"Checks if the service is enabled. <p> The service enablement depends on the configuration in the back-end system and the bootstrap configuration.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ushell.services.Service","!category":"class"},"sap.ushell.services.Personalization.Personalizer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.Personalizer} instead<br>The Unified Shell personalizer providing set get delete methods to access the persisted personalization data in direct mode.\n\nTo be called by the personalization service getPersonalizer method.","!module":"sap/ushell/services/_Personalization/Personalizer","delPersData":{"!description":"Deletes a personalization data value.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.Personalizer} instead<br>The Unified Shell personalizer providing set get delete methods to access the persisted personalization data in direct mode.\n\nTo be called by the personalization service getPersonalizer method.","getPersData":{"!description":"Gets a personalization data value.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"!proto":"sap.ui.base.Object","!category":"class","setPersData":{"!description":"Sets a personalization data value.","!static":false,"!category":"function","!type":"fn(oValue: Object) -> jQuery.Promise","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."}}},"sap.ushell.services.Extension.Item_obj":{"!type":"fn()","prototype":"sap.ushell.services.Extension.Item"},"sap.ushell.ui.footerbar.AddBookmarkButton":{"getDataSource":{"!description":"Gets current value of property {@link #getDataSource dataSource}.\n\nData source of the OData service. See same parameter of {@link sap.ushell.services.Bookmark#addBookmark} for details","!static":false,"!category":"function","!type":"fn() -> Object"},"getNumberUnit":{"!description":"Gets current value of property {@link #getNumberUnit numberUnit}.\n\nFor dynamic tile, the unit to be displayed below the number, for example, USD.","!static":false,"!category":"function","!type":"fn() -> String"},"getServiceUrl":{"!description":"Gets current value of property {@link #getServiceUrl serviceUrl}.\n\nURL of an OData service from which data for a dynamic tile should be read.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAppData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31 Use dedicated properties like afterPressHandler, beforePresshandler, customUrl, ... of the AddBookmarkButton instead.<br>Gets current value of property {@link #getAppData appData}.\n\nAn object containing properties with information about the app, e.g. serviceUrl, numberUnit, ... .","!static":false,"!category":"function","!type":"fn() -> Object"},"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.\n\nSubtitle to be displayed below the tile title.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.Button","setAfterPressHandler":{"!description":"Sets a new value for property {@link #getAfterPressHandler afterPressHandler}.\n\nA callback function that is called after the save-as-tile dialog is closed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnAfterPressHandler?: fn()) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"fnAfterPressHandler":"type: function, description: New value for property <code>afterPressHandler<\/code>"}},"!category":"class","setAppData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31 Use dedicated properties like afterPressHandler, beforePresshandler, customUrl, ... of the AddBookmarkButton instead.<br>Sets a new value for property {@link #getAppData appData}.\n\nAn object containing properties with information about the app, e.g. serviceUrl, numberUnit, ... .\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAppData?: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oAppData":"type: object, description: New value for property <code>appData<\/code>"}},"setTileIcon":{"!description":"Sets a new value for property {@link #getTileIcon tileIcon}.\n\nIcon to be displayed in the Tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTileIcon?: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sTileIcon":"type: string, description: New value for property <code>tileIcon<\/code>"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBeforePressHandler beforePressHandler} : function<\/li>\n<li>{@link #getAfterPressHandler afterPressHandler} : function<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getTileIcon tileIcon} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getKeywords keywords} : string<\/li>\n<li>{@link #getCustomUrl customUrl} : any<\/li>\n<li>{@link #getServiceUrl serviceUrl} : any<\/li>\n<li>{@link #getDataSource dataSource} : any<\/li>\n<li>{@link #getServiceRefreshInterval serviceRefreshInterval} : string<\/li>\n<li>{@link #getShowGroupSelection showGroupSelection} : boolean (default: true)<\/li>\n<li>{@link #getShowPageSelection showPageSelection} : boolean (default: true)<\/li>\n<li>{@link #getAppData appData} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle to be displayed on the tile.","!static":false,"!category":"function","!type":"fn() -> String"},"setDataSource":{"!description":"Sets a new value for property {@link #getDataSource dataSource}.\n\nData source of the OData service. See same parameter of {@link sap.ushell.services.Bookmark#addBookmark} for details\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDataSource?: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oDataSource":"type: any, description: New value for property <code>dataSource<\/code>"}},"setSubtitle":{"!description":"Sets a new value for property {@link #getSubtitle subtitle}.\n\nSubtitle to be displayed below the tile title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubtitle?: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sSubtitle":"type: string, description: New value for property <code>subtitle<\/code>"}},"!description":"Enables users to save bookmark tiles in the Fiori launchpad. Clicking the button opens a dialog box for saving the app state, so that the app can be launched directly in that state from the launchpad.","getShowPageSelection":{"!description":"Gets current value of property {@link #getShowPageSelection showPageSelection}.\n\nWhether to display the control for page selection in the save-bookmark dialog in launchpad spaces mode.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getServiceRefreshInterval":{"!description":"Gets current value of property {@link #getServiceRefreshInterval serviceRefreshInterval}.\n\nNumber of seconds after which dynamic content is read from the data source and the display is refreshed.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.footerbar.AddBookmarkButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getInfo":{"!description":"Gets current value of property {@link #getInfo info}.\n\nText to be displayed at the bottom of the tile.","!static":false,"!category":"function","!type":"fn() -> String"},"getKeywords":{"!description":"Gets current value of property {@link #getKeywords keywords}.\n\nThe keywords based on which the future tile should be indexed and filtered.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowGroupSelection":{"!description":"Sets a new value for property {@link #getShowGroupSelection showGroupSelection}.\n\nWhether to display the control for group selection in the save-as-tile dialog in launchpad homepage mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupSelection?: Boolean) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"bShowGroupSelection":"type: boolean, description: New value for property <code>showGroupSelection<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle to be displayed on the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setNumberUnit":{"!description":"Sets a new value for property {@link #getNumberUnit numberUnit}.\n\nFor dynamic tile, the unit to be displayed below the number, for example, USD.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumberUnit?: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sNumberUnit":"type: string, description: New value for property <code>numberUnit<\/code>"}},"setServiceUrl":{"!description":"Sets a new value for property {@link #getServiceUrl serviceUrl}.\n\nURL of an OData service from which data for a dynamic tile should be read.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oServiceUrl?: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oServiceUrl":"type: any, description: New value for property <code>serviceUrl<\/code>"}},"setKeywords":{"!description":"Sets a new value for property {@link #getKeywords keywords}.\n\nThe keywords based on which the future tile should be indexed and filtered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKeywords?: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sKeywords":"type: string, description: New value for property <code>keywords<\/code>"}},"setServiceRefreshInterval":{"!description":"Sets a new value for property {@link #getServiceRefreshInterval serviceRefreshInterval}.\n\nNumber of seconds after which dynamic content is read from the data source and the display is refreshed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sServiceRefreshInterval?: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sServiceRefreshInterval":"type: string, description: New value for property <code>serviceRefreshInterval<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.footerbar.AddBookmarkButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setBeforePressHandler":{"!description":"Sets a new value for property {@link #getBeforePressHandler beforePressHandler}.\n\nA callback function that is called before the save-as-tile dialog is opened.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnBeforePressHandler?: fn()) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"fnBeforePressHandler":"type: function, description: New value for property <code>beforePressHandler<\/code>"}},"getBeforePressHandler":{"!description":"Gets current value of property {@link #getBeforePressHandler beforePressHandler}.\n\nA callback function that is called before the save-as-tile dialog is opened.","!static":false,"!category":"function","!type":"fn() -> fn()"},"getCustomUrl":{"!description":"Gets current value of property {@link #getCustomUrl customUrl}.\n\nThe target intent or URL of the bookmark. If the target app runs in the current shell, the URL has to be a valid intent, i.e. in the format <code>\"#SO-Action?P1=a&P2=x&/route?RPV=1\"<\/code>. See also {@link sap.ushell.services.URLParsing#getHash}.","!static":false,"!category":"function","!type":"fn() -> Object"},"getTileIcon":{"!description":"Gets current value of property {@link #getTileIcon tileIcon}.\n\nIcon to be displayed in the Tile.","!static":false,"!category":"function","!type":"fn() -> String"},"setCustomUrl":{"!description":"Sets a new value for property {@link #getCustomUrl customUrl}.\n\nThe target intent or URL of the bookmark. If the target app runs in the current shell, the URL has to be a valid intent, i.e. in the format <code>\"#SO-Action?P1=a&P2=x&/route?RPV=1\"<\/code>. See also {@link sap.ushell.services.URLParsing#getHash}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oCustomUrl?: Object) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"oCustomUrl":"type: any, description: New value for property <code>customUrl<\/code>"}},"!module":"sap/ushell/ui/footerbar/AddBookmarkButton","!helpDescription":"Enables users to save bookmark tiles in the Fiori launchpad. Clicking the button opens a dialog box for saving the app state, so that the app can be launched directly in that state from the launchpad.","getShowGroupSelection":{"!description":"Gets current value of property {@link #getShowGroupSelection showGroupSelection}.\n\nWhether to display the control for group selection in the save-as-tile dialog in launchpad homepage mode.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setInfo":{"!description":"Sets a new value for property {@link #getInfo info}.\n\nText to be displayed at the bottom of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInfo?: String) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"sInfo":"type: string, description: New value for property <code>info<\/code>"}},"getAfterPressHandler":{"!description":"Gets current value of property {@link #getAfterPressHandler afterPressHandler}.\n\nA callback function that is called after the save-as-tile dialog is closed.","!static":false,"!category":"function","!type":"fn() -> fn()"},"setShowPageSelection":{"!description":"Sets a new value for property {@link #getShowPageSelection showPageSelection}.\n\nWhether to display the control for page selection in the save-bookmark dialog in launchpad spaces mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPageSelection?: Boolean) -> sap.ushell.ui.footerbar.AddBookmarkButton","parameters":{"bShowPageSelection":"type: boolean, description: New value for property <code>showPageSelection<\/code>"}}},"sap.ushell.services.PersonalizationV2.Personalizer":{"!description":"The Unified Shell personalizer providing set get delete methods to access the persisted personalization data in direct mode.\n\nTo be called by the personalization service getPersonalizer method.","deletePersData":{"!description":"Deletes a personalization data value.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!module":"sap/ushell/services/PersonalizationV2/Personalizer","!helpDescription":"The Unified Shell personalizer providing set get delete methods to access the persisted personalization data in direct mode.\n\nTo be called by the personalization service getPersonalizer method.","getPersData":{"!description":"Gets a personalization data value.","!static":false,"!category":"function","!type":"fn() -> Promise<object>"},"!proto":"sap.ui.base.Object","!category":"class","setPersData":{"!description":"Sets a personalization data value.","!static":false,"!category":"function","!type":"fn(oValue: Object) -> Promise","parameters":{"oValue":"type: object, description: JSON object containing the personalization value."}}},"sap.ushell.services.SupportTicket_obj":{"!type":"fn()","prototype":"sap.ushell.services.SupportTicket"},"sap.ushell.services.Personalization.PersonalizationContainer_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.PersonalizationContainer"},"sap.ushell.components.factsheet.controls.PictureTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.CustomTile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureTile"},"sap.ushell.services.Personalization":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2} instead<br>The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Personalization = await Container.getServiceAsync(\"Personalization\");\n    // do something with the Personalization service\n  });\n<\/pre>","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Boolean","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"delVariantSet":{"!description":"Deletes a variant set from the container. In case the variant set does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String)","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!constructorDescription":"VariantSetAdapter\namends ContextContainer with functionality to\n\nExample: An application has two types of variants.\nVariant type 1 contains filter values for a query, which are stored in item 1 of\nthe variant, and personalization data for a table, which are stored in item 2\nof the variant.\nVariant type 2 contains a setting (item 3) that is independent of\nthe filtering and the table settings. It might be used for a different\nscreen than the variants of type 1.\nIn this example you would have 2 variant sets, one for each variant type.","!module":"sap/ushell/services/Personalization","getVariantSet":{"!description":"Returns the variant set object from the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key The string length is restricted to 40 characters"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2} instead<br>The Unified Shell's personalization service, which provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Personalization = await Container.getServiceAsync(\"Personalization\");\n    // do something with the Personalization service\n  });\n<\/pre>","addVariantSet":{"!description":"Creates a new variant set in the container. In case a variant set with this key is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Object","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!proto":"sap.ushell.services.Service","!category":"class","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!static":false,"!category":"function","!type":"fn() -> [String]"}},"sap.ushell.services.Extension":{"!description":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Extension = await Container.getServiceAsync(\"Extension\");\n    // do something with the Extension service\n  });\n<\/pre>\n\nThis service is available in any FLP context (native, iframe, ...).\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","hideOnHome":{"!description":"Hides the item for launchpad \"home\". Does not change the visibility of the item within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"hideForAllApps":{"!description":"Shows the item for all applications. Does not change the visibility of the item for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"showForCurrentApp":{"!description":"Shows the item for the current application. The item will be hidden after the user navigates away from this application. The item will <b>not<b> be added again if the user navigates back to the application.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"!module":"sap/ushell/services/Extension","!helpDescription":"The Unified Shell's Extension service. Allows adding extensions on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Extension = await Container.getServiceAsync(\"Extension\");\n    // do something with the Extension service\n  });\n<\/pre>\n\nThis service is available in any FLP context (native, iframe, ...).\n\n<br> All extension items and extension areas are instantiated as invisible. You have to call .show<...> to make them visible.","!proto":"sap.ushell.services.Service","hideForCurrentApp":{"!description":"Hides the item for the current application.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"destroy":{"!description":"Destroys the item and it's related content.","!static":false,"!category":"function","!type":"fn() -> Promise"},"showOnHome":{"!description":"Shows the item for launchpad \"home\". Does not change the visibility of the item within applications.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"},"!category":"class","showForAllApps":{"!description":"Shows the item for all applications. Does not change the visibility of the item for the launchpad \"home\".","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.Extension.Item"}},"sap.ushell.services.ShellNavigationInternal":{"!description":"The Unified Shell's internal navigation service (platform independent).\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const ShellNavigationInternal = await Container.getServiceAsync(\"ShellNavigationInternal\");\n    // do something with the ShellNavigationInternal service\n  });\n<\/pre>\n\nThis interface is for consumption by shell renderers/containers only\n\nIt is not for direct usage by applications, see inner app navigation : UI5 interfaces (hashChanger, Router) cross app navigation : @see sap.ushell.services.CrossApplicationNavigation\n\nUsage:\n\nExample: see renders/fiorisandbox/Shell.controller.js\n\n<pre>\n  sap.ui.define([\n     \"sap/ushell/services/ShellNavigationInternal\"\n  ], function (ShellNavigationInternal) {\n      Shell.onHashChange(shellHash,appHash) {  / *resolve url, load app and exchange root view* / }\n      Shell.init() {\n        this.privShellNavigator = new ShellNavigationInternal();\n        this.privShellNavigator.init(jQuery.proxy(this.doHashChange, this));\n      }\n  });\n  <\/pre>\n\nNote: further app specific integration via the reference app reuse code (setting of app specific handler)\n\nNote: the ShellNavigationInternal service replaces the UI5 core HashChanger which abstracts from the browser url modification.\n\nIt performs the following services: - encoding of the actual browser url hash ( via hasher.js). - expansion of \"shortened\" urls ( AppParameterParts) via invocation. - splitting of shellHash and AppSpecific hash and abstraction w.r.t. Eventing\n\nThus it is crucial to use appropriate interfaces and not directly invoke window.location.hash.\n\n- internal construction methods for a \"current\" App specific and non-app specific hash (invoked by CrossApplicationNavigation), not to be invoked directly!","registerNavigationFilter":{"!description":"Register the navigation filter callback function. A navigation filter provides plugins with the ability to intervene in the navigation flow, and optionally to stop the navigation.\n\nThe callback has to return {@link sap.ushell.services.ShellNavigationInternal.NavigationFilterStatus}\n\nUse <code>Function.prototype.bind()<\/code> to determine the callback's <code>this<\/code> or some of its arguments.","!static":false,"!category":"function","!type":"fn(fnFilter: Object)","parameters":{"fnFilter":"type: object, description: navigation filter function"}},"!module":"sap/ushell/services/ShellNavigationInternal","!helpDescription":"The Unified Shell's internal navigation service (platform independent).\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const ShellNavigationInternal = await Container.getServiceAsync(\"ShellNavigationInternal\");\n    // do something with the ShellNavigationInternal service\n  });\n<\/pre>\n\nThis interface is for consumption by shell renderers/containers only\n\nIt is not for direct usage by applications, see inner app navigation : UI5 interfaces (hashChanger, Router) cross app navigation : @see sap.ushell.services.CrossApplicationNavigation\n\nUsage:\n\nExample: see renders/fiorisandbox/Shell.controller.js\n\n<pre>\n  sap.ui.define([\n     \"sap/ushell/services/ShellNavigationInternal\"\n  ], function (ShellNavigationInternal) {\n      Shell.onHashChange(shellHash,appHash) {  / *resolve url, load app and exchange root view* / }\n      Shell.init() {\n        this.privShellNavigator = new ShellNavigationInternal();\n        this.privShellNavigator.init(jQuery.proxy(this.doHashChange, this));\n      }\n  });\n  <\/pre>\n\nNote: further app specific integration via the reference app reuse code (setting of app specific handler)\n\nNote: the ShellNavigationInternal service replaces the UI5 core HashChanger which abstracts from the browser url modification.\n\nIt performs the following services: - encoding of the actual browser url hash ( via hasher.js). - expansion of \"shortened\" urls ( AppParameterParts) via invocation. - splitting of shellHash and AppSpecific hash and abstraction w.r.t. Eventing\n\nThus it is crucial to use appropriate interfaces and not directly invoke window.location.hash.\n\n- internal construction methods for a \"current\" App specific and non-app specific hash (invoked by CrossApplicationNavigation), not to be invoked directly!","!proto":"sap.ui.base.Object","unregisterNavigationFilter":{"!description":"Unregister a previously registered navigation filter\n\nThe callback has to return {@link sap.ushell.services.ShellNavigationInternal.NavigationFilterStatus}\n\nNote the same filter function that was registered should be passed as a parameter to this method.","!static":false,"!category":"function","!type":"fn(fnFilter: Object)","parameters":{"fnFilter":"type: object, description: navigation filter function"}},"!category":"class"},"sap.ushell.services.PersonalizationV2":{"!description":"The Unified Shell's personalization service. Provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const PersonalizationV2 = await Container.getServiceAsync(\"PersonalizationV2\");\n    // do something with the PersonalizationV2 service\n  });\n<\/pre>","containsVariantSet":{"!description":"Checks if a specific variant set is contained in the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> Boolean","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!module":"sap/ushell/services/PersonalizationV2","getVariantSet":{"!description":"Returns the variant set object from the container.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> sap.ushell.services.PersonalizationV2.VariantSet","parameters":{"sVariantSetKey":"type: string, description: variant set key. The string length is restricted to 40 characters."}},"!helpDescription":"The Unified Shell's personalization service. Provides a personalizer object that handles all personalization operations.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const PersonalizationV2 = await Container.getServiceAsync(\"PersonalizationV2\");\n    // do something with the PersonalizationV2 service\n  });\n<\/pre>","addVariantSet":{"!description":"Creates a new variant set in the container. In case a variant set with this key is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String) -> sap.ushell.services.PersonalizationV2.VariantSet","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!proto":"sap.ushell.services.Service","deleteVariantSet":{"!description":"Deletes a variant set from the container. In case the variant set does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantSetKey: String)","parameters":{"sVariantSetKey":"type: string, description: variant set key"}},"!category":"class","getVariantSetKeys":{"!description":"Returns an array with the keys of the variant sets in the container.","!static":false,"!category":"function","!type":"fn() -> [String]"}},"sap.ushell.services.BookmarkV2":{"!description":"The Unified Shell's bookmark service. Allows creating shortcuts on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const BookmarkV2 = await Container.getServiceAsync(\"BookmarkV2\");\n    // do something with the BookmarkV2 service\n  });\n<\/pre>","deleteCustomBookmarks":{"!description":"Deletes <b>all<\/b> custom bookmarks matching exactly the identification data. {@link #countCustomBookmarks} can be used to check upfront how many bookmarks are going to be affected.","!static":false,"!category":"function","!type":"fn(oIdentifier: Object) -> Promise<int>","parameters":{"oIdentifier":"type: object, description: An object which is used to find the bookmarks by matching the provided properties."}},"updateCustomBookmarks":{"!description":"Updates <b>all<\/b> custom bookmarks matching exactly the identification data. Only given properties are updated. {@link #countCustomBookmarks} can be used to check upfront how many bookmarks are going to be affected. The vizType as well as the chipId of the bookmarks <b>cannot be changed!<\/b>","!static":false,"!category":"function","!type":"fn(oIdentifier: Object, oConfig: Object) -> Promise<int>","parameters":{"oConfig":"type: object, description: Viz type specific configuration including all parameters the visualization needs.","oIdentifier":"type: object, description: An object which is used to find the bookmarks by matching the provided properties."}},"addBookmark":{"!description":"Adds a bookmark tile to the provided content nodes.","!static":false,"!category":"function","!type":"fn(oParameters: sap.ushell.services.BookmarkV2.BookmarkParameters, vContainer?: [sap.ushell.services.BookmarkV2.ContentNode | sap.ushell.services.BookmarkV2.ContentNode], sContentProviderId?: String) -> Promise","parameters":{"sContentProviderId":"type: string, description: <b>SAP internal usage only<\/b> The contentProviderId or undefined outside the cFLP.","vContainer":"type: sap.ushell.services.BookmarkV2.ContentNode|sap.ushell.services.BookmarkV2.ContentNode[], description: Either a content node or an array of content nodes (see {@link #getContentNodes}). If not provided, the bookmark will be added to the default page.","oParameters":"type: sap.ushell.services.BookmarkV2.BookmarkParameters, description: Bookmark parameters. In addition to title and URL, a bookmark might allow further settings, such as an icon or a subtitle. Which settings are supported depends on the environment in which the application is running. Unsupported parameters will be ignored."}},"!proto":"sap.ushell.services.Service","!category":"class","addCustomBookmark":{"!description":"Adds a custom bookmark visualization to one or multiple provided content nodes.","!static":false,"!category":"function","!type":"fn(sVizType: String, oConfig: Object, vContentNodes: [sap.ushell.services.BookmarkV2.ContentNode | sap.ushell.services.BookmarkV2.ContentNode], sContentProviderId?: String) -> Promise<(undefined | string)>","parameters":{"sVizType":"type: string, description: Specifies what tile should be created, for example \"ssuite.smartbusiness.abap.tiles.contribution\"","sContentProviderId":"type: string, description: <b>SAP internal usage only<\/b> The contentProviderId or undefined outside the cFLP.","oConfig":"type: object, description: Viz type specific configuration including all parameters the visualization needs.","vContentNodes":"type: sap.ushell.services.BookmarkV2.ContentNode|sap.ushell.services.BookmarkV2.ContentNode[], description: Either an array of ContentNodes or a single ContentNode in which the Bookmark will be placed."}},"updateBookmarks":{"!description":"Updates <b>all<\/b> bookmarks pointing to the given URL on all of the user's pages with the given new parameters. Parameters which are omitted are not changed in the existing bookmarks.","!static":false,"!category":"function","!type":"fn(sUrl: String, oParameters: sap.ushell.services.BookmarkV2.BookmarkParameters, sContentProviderId?: String) -> Promise<int>","parameters":{"sContentProviderId":"type: string, description: <b>SAP internal usage only<\/b> The contentProviderId or undefined outside the cFLP.","sUrl":"type: string, description: The URL of the bookmarks to be updated, exactly as specified to {@link #addBookmark}. In case you need to update the URL itself, pass the old one here and the new one as <code>oParameters.url<\/code>!","oParameters":"type: sap.ushell.services.BookmarkV2.BookmarkParameters, description: Bookmark parameters. In addition to title and URL, a bookmark might allow additional settings, such as an icon or a subtitle. Which settings are supported depends on the environment in which the application is running. Unsupported parameters will be ignored."}},"!module":"sap/ushell/services/BookmarkV2","!helpDescription":"The Unified Shell's bookmark service. Allows creating shortcuts on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const BookmarkV2 = await Container.getServiceAsync(\"BookmarkV2\");\n    // do something with the BookmarkV2 service\n  });\n<\/pre>","countCustomBookmarks":{"!description":"Counts <b>all<\/b> custom bookmarks matching exactly the identification data. Can be used to check if a bookmark already exists (e.g. before updating).","!static":false,"!category":"function","!type":"fn(oIdentifier: Object) -> Promise<int>","parameters":{"oIdentifier":"type: object, description: An object which is used to find the bookmarks by matching the provided properties."}},"getContentNodes":{"!description":"Returns available content nodes.","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ushell.services.BookmarkV2.ContentNode]"},"countBookmarks":{"!description":"Counts <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages. You can use this method to check if a bookmark already exists. <p> This is a potentially asynchronous operation in case the user's pages have not yet been loaded completely!","!static":false,"!category":"function","!type":"fn(sUrl: sap.ushell.services.navigation.TargetIntent | sap.ui.core.URI, sContentProviderId?: String) -> Promise<int>","parameters":{"sContentProviderId":"type: string, description: <b>SAP internal usage only<\/b> The contentProviderId or undefined outside the cFLP. The Content Provider ID.","sUrl":"type: sap.ushell.services.navigation.TargetIntent|sap.ui.core.URI, description: The URL of the bookmarks to be counted, exactly as specified to {@link #addBookmark}."}},"deleteBookmarks":{"!description":"Deletes <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages.","!static":false,"!category":"function","!type":"fn(sUrl: sap.ushell.services.navigation.TargetIntent | sap.ui.core.URI, sContentProviderId?: String) -> Promise<int>","parameters":{"sContentProviderId":"type: string, description: <b>SAP internal usage only<\/b> The contentProviderId or undefined outside the cFLP.","sUrl":"type: sap.ushell.services.navigation.TargetIntent|sap.ui.core.URI, description: The URL of the bookmarks to be deleted, exactly as specified to {@link #addBookmark}."}}},"sap.ushell.services.NavTargetResolution":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Use {@link sap.ushell.services.Navigation} for Navigation instead.<br>The Unified Shell's internal navigation target resolution service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const NavTargetResolution = await Container.getServiceAsync(\"NavTargetResolution\");\n    // do something with the NavTargetResolution service\n  });\n<\/pre>\n\nMethods in this class deal with *internal* representations of the shell hash.\n\nconfigurations: <code>config : { allowTestUrlComponentConfig : true }<\/code> allow to redefine the Test-url, Test-local1, Test-local2 applications via url parameters (sap-ushell-test-local1-url= / sap-ushell-test-local1-additionalInformation= ... )","!module":"sap/ushell/services/NavTargetResolution","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Use {@link sap.ushell.services.Navigation} for Navigation instead.<br>The Unified Shell's internal navigation target resolution service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const NavTargetResolution = await Container.getServiceAsync(\"NavTargetResolution\");\n    // do something with the NavTargetResolution service\n  });\n<\/pre>\n\nMethods in this class deal with *internal* representations of the shell hash.\n\nconfigurations: <code>config : { allowTestUrlComponentConfig : true }<\/code> allow to redefine the Test-url, Test-local1, Test-local2 applications via url parameters (sap-ushell-test-local1-url= / sap-ushell-test-local1-additionalInformation= ... )","resolveHashFragment":{"!description":"Resolves the URL hash fragment.\n\nThis function should be used by a custom renderer in order to implement custom navigation. Do not use this function for developing Fiori applications.\n\nThis function gets the hash part of the URL and returns data of the target application.\n\nExample of the returned data: <pre>\n  {\n    \"additionalInformation\": \"SAPUI5.Component=sap.ushell.renderer.search.container\",\n    \"applicationType\": \"URL\",\n    \"url\": \"/sap/bc/ui5_ui5/ui2/ushell/resources/sap/ushell/renderer/search/container\",\n    \"navigationMode\": \"embedded\"\n  }\n  <\/pre>\n\nThis is an asynchronous operation.","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> jQuery.Promise","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format (as obtained by the SAPUI5 hasher service) not as given in <code>location.hash<\/code>)! Example: <code>#SemanticObject-action?P1=V1&P2=A%20B%20C<\/code>"}},"!proto":"sap.ushell.services.Service","resolveTarget":{"!description":"Resolves a navigation target taking into account the sap-system\n\nThis function should be used by the NWBC browser in order to get a resolved target corresponding to a certain configuration object describing the target. Do not use this function for developing Fiori applications.","!static":false,"!category":"function","!type":"fn(oArgs: Object) -> jQuery.Promise","parameters":{"oArgs":"type: object, description: <pre>\n  {\n    target : {\n      semanticObject : \"semantic object\",\n      action : \"action\",\n    },\n    params :  {\n      \"sap-system-src\": \"e.g. sid(UR5.120)\",\n      \"sap-system\": {\n        ... data related to the sap-system\n      }\n    }\n  }\n<\/pre>"}},"isNavigationSupported":{"!description":"Tells whether the given navigation intent(s) are supported for the given parameters Supported\" means that a valid navigation target is configured for the user for the given device form factor.\n\nThis is effectively a test function for {@link toExternal}/ {@link hrefForExternal}. It function accepts the same input as {@link toExternal}/ {@link hrefForExternal}.","!static":false,"!category":"function","!type":"fn(aIntents: [Object]) -> jQuery.Promise","parameters":{"aIntents":"type: object[], description: the intents (such as <code>[\"#AnObject-action?A=B&c=e\"]<\/code>) to be checked with object being instances the oArgs object of toExternal, hrefForExternal etc. e.g. <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { A : \"B\" }\n  }\n<\/pre> or e.g. <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { A : \"B\", c : \"e\" }\n  }\n<\/pre> or <code>{ target : { shellHash : \"AnObject-action?A=B&c=e\" } }<\/code>"}},"!category":"class","registerCustomResolver":{"!description":"Register a custom resolver for semantic objects\n\nThe resolver must be JavaScript object with a string property name, and two functions resolveHashFragment(sHashFragment,nextResolver) returning a promise and isApplicable(sHashFragment) returning a boolean","!static":false,"!category":"function","!type":"fn(oResolver: Object) -> Boolean","parameters":{"oResolver":"type: object, description: the custom resolver"}},"expandCompactHash":{"!description":"expands a URL hash fragment\n\nThis function gets the hash part of the URL and expands a sap-intent-param if present and retrievable\n\nThis is an asynchronous operation.","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> jQuery.Promise","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format (as obtained by the SAPUI5 hasher service, not as given in <code>location.hash<\/code>)"}}},"sap.ushell.services.Personalization.Variant_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.Variant"},"sap.ushell.services.FrameBoundExtension.Footer_obj":{"!type":"fn()","prototype":"sap.ushell.services.FrameBoundExtension.Footer"},"sap.ushell.services":{"Ui5ComponentLoader":"sap.ushell.services.Ui5ComponentLoader","Personalization":"sap.ushell.services.Personalization_obj","Configuration":"sap.ushell.services.Configuration_obj","ContentExtensionAdapterFactory":"sap.ushell.services.ContentExtensionAdapterFactory","SpaceContent":"sap.ushell.services.SpaceContent_obj","UserDefaultParameters":"sap.ushell.services.UserDefaultParameters_obj","Item":"sap.ushell.services.FrameBoundExtension.Item_obj","AppConfiguration":"sap.ushell.services.AppConfiguration","Personalizer":"sap.ushell.services.PersonalizationV2.Personalizer_obj","ShellNavigationInternal":"sap.ushell.services.ShellNavigationInternal_obj","!description":"Default namespace for Unified Shell services.","TransientPersonalizer":"sap.ushell.services.PersonalizationV2.TransientPersonalizer_obj","PersonalizationContainer":"sap.ushell.services.Personalization.PersonalizationContainer_obj","VariantSet":"sap.ushell.services.PersonalizationV2.VariantSet_obj","Priority":"sap.ushell.services.NotificationsV2.Priority","FrameBoundExtension":"sap.ushell.services.FrameBoundExtension_obj","PersonalizationContainerVariantSet":"sap.ushell.services.Personalization.PersonalizationContainerVariantSet_obj","WriteFrequency":"sap.ushell.services.PersonalizationV2.WriteFrequency","Variant":"sap.ushell.services.PersonalizationV2.Variant_obj","SearchableContent":"sap.ushell.services.SearchableContent_obj","Pages":"sap.ushell.services.Pages","ApplicationType":"sap.ushell.services.AppLifeCycle.ApplicationType","ContextContainer":"sap.ushell.services.PersonalizationV2.ContextContainer_obj","Bookmark":"sap.ushell.services.Bookmark_obj","!module":"sap/ushell/Container","!helpDescription":"Default namespace for Unified Shell services.","SidePane":"sap.ushell.services.FrameBoundExtension.SidePane_obj","AppLifeCycle":"sap.ushell.services.AppLifeCycle_obj","Notifications":"sap.ushell.services.Notifications_obj","VisualizationInstantiation":"sap.ushell.services.VisualizationInstantiation_obj","Message":"sap.ushell.services.Message_obj","VariantSetAdapter":"sap.ushell.services.PersonalizationV2.VariantSetAdapter_obj","UserInfo":"sap.ushell.services.UserInfo_obj","!category":"namespace","UsageAnalytics":"sap.ushell.services.UsageAnalytics_obj","SmartNavigation":"sap.ushell.services.SmartNavigation_obj","FloatingContainer":"sap.ushell.services.FrameBoundExtension.FloatingContainer_obj","ToolArea":"sap.ushell.services.FrameBoundExtension.ToolArea_obj","Nature":"sap.ushell.services.NotificationsV2.Nature","NavTargetResolution":"sap.ushell.services.NavTargetResolution_obj","LaunchPage":"sap.ushell.services.LaunchPage_obj","Navigation":"sap.ushell.services.Navigation_obj","UserRecents":"sap.ushell.services.UserRecents_obj","NavigationFilterStatus":{"!description":"The navigation filter statuses that should be returned by a navigation filter\n\nContinue - continue with the navigation flow Abandon - stop the navigation flow, and revert to the previous hash state Custom - stop the navigation flow, but leave the hash state as is. The filter should use this status to provide alternative navigation handling","!category":"enum","!type":"String"},"Service":"sap.ushell.services.Service_obj","PersonalizationV2":"sap.ushell.services.PersonalizationV2_obj","AppInfoParameterName":"sap.ushell.services.AppLifeCycle.AppInfoParameterName","Extension":"sap.ushell.services.Extension_obj","ShellNavigation":"sap.ushell.services.ShellNavigation_obj","EndUserFeedback":"sap.ushell.services.EndUserFeedback_obj","KeyCategory":"sap.ushell.services.PersonalizationV2.KeyCategory","NotificationsV2":"sap.ushell.services.NotificationsV2_obj","SupportTicket":"sap.ushell.services.SupportTicket_obj","BookmarkV2":"sap.ushell.services.BookmarkV2_obj","Footer":"sap.ushell.services.FrameBoundExtension.Footer_obj","CrossApplicationNavigation":"sap.ushell.services.CrossApplicationNavigation_obj","URLParsing":"sap.ushell.services.URLParsing_obj","PersonalizationContainerVariant":"sap.ushell.services.Personalization.PersonalizationContainerVariant_obj"},"sap.ushell.api.Copilot":{"!description":"The Copilot needs to instantiate app components based on intents for which this API provides utility functions.","!module":"sap/ushell/api/Copilot","createComponentInstance":{"!description":"Resolves a given navigation intent (if valid) and returns the respective component instance for further processing.","!static":"true","!category":"function","!type":"fn(sIntent: String) -> Promise<sap.ui.core.Component>"},"!helpDescription":"The Copilot needs to instantiate app components based on intents for which this API provides utility functions.","!category":"namespace"},"sap.ushell.services.Notifications":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.NotificationsV2} instead.<br>UShell service for fetching user notification data from the Notification center/service<br> and exposing them to the Unified Shell and Fiori applications UI controls.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Notifications = await Container.getServiceAsync(\"Notifications\");\n    // do something with the Notifications service\n  });\n<\/pre>\n\nIn order to get user notifications, Unified Shell notification service issues OData requests<br> to the service defined by the configuration property <code>serviceUrl<\/code>,<br> for example: \"/sap/opu/odata4/iwngw/notification/default/iwngw/notification_srv/0001\"<br>.\n\nUnified Shell Notification service has several working modes, depending on the environment and the available resources:<br> PackagedApp mode: Fiori launchpad runs in the context of PackagedApp<br> FioriClient mode: Fiori launchpad runs in the context of FioriLaunchpad<br> WebSocket mode: Fiori launchpad runs in a browser, and WebSocket connection to the notifications provider is available<br> Polling mode: Fiori launchpad in runs in a browser, and WebSocket connection to the notifications provider is not available<br>\n\nThe notification service exposes an API that includes: - Service enabling and initialization<br> - Registration of callback functions (by Shell/FLP controls) that will be called for every data update<br>. - Retrieval of notification data (e.g. notifications, number of unseen notifications) - Execution of a notification actions - Marking user notifications as seen","init":{"!description":"Initializes the notification service\n\nInitialization is performed only if the following two conditions are fulfilled:<br> 1. Notification service is enabled<br> 2. Notification service hasn't been initialized yet<br>\n\nThe main initialization functionality is determining and setting the mode in which notifications are consumed.<br> The possible modes are:<br> PACKAGED_APP - Notifications are fetched when a callback is called by PackagedApp environment<br> FIORI_CLIENT - Notifications are fetched when a callback is called by FioriClient environment<br> WEB_SOCKET - Notifications are fetched on WebSocket \"ping\"<br> POLLING - Notifications are fetched using periodic polling mechanism<br>","!static":false,"!category":"function","!type":"fn()"},"getNotificationsGroupHeaders":{"!description":"Returns the group headers of the user notifications","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"executeBulkAction":{"!description":"Launches a notification action oData call.<br> After launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!static":false,"!category":"function","!type":"fn(sNotificationGroupId: String, sActionId: String) -> Promise<undefined>","parameters":{"sNotificationGroupId":"type: string, description: The ID of the notification header/group whose action is being executed","sActionId":"type: string, description: The ID of the action that is being executed"}},"registerNotificationCountUpdateCallback":{"!description":"Gets a callback function that will be called when updated unseen notifications count is available.","!static":false,"!category":"function","!type":"fn(callback: fn())","parameters":{"callback":"type: function, description: The callback function that is registered and called on data update."}},"dismissNotification":{"!description":"Launches dismiss notification call.<br>","!static":false,"!category":"function","!type":"fn(sNotificationId: String) -> jQuery.Promise","parameters":{"sNotificationId":"type: string, description: The ID of the notification whose action is being executed"}},"!proto":"sap.ushell.services.Service","!category":"class","isFirstDataLoaded":{"!static":false,"!category":"function","!type":"fn() -> Boolean"},"markRead":{"!description":"Launches mark as read notification call.<br> After launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!static":false,"!category":"function","!type":"fn(sNotificationId: String) -> jQuery.Promise","parameters":{"sNotificationId":"type: string, description: The ID of the notification whose action is being executed"}},"getUnseenNotificationsCount":{"!description":"Returns the number of unseen notifications<br> e.g. Notifications that the user hasn't seen yet.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"!module":"sap/ushell/services/Notifications","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.NotificationsV2} instead.<br>UShell service for fetching user notification data from the Notification center/service<br> and exposing them to the Unified Shell and Fiori applications UI controls.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Notifications = await Container.getServiceAsync(\"Notifications\");\n    // do something with the Notifications service\n  });\n<\/pre>\n\nIn order to get user notifications, Unified Shell notification service issues OData requests<br> to the service defined by the configuration property <code>serviceUrl<\/code>,<br> for example: \"/sap/opu/odata4/iwngw/notification/default/iwngw/notification_srv/0001\"<br>.\n\nUnified Shell Notification service has several working modes, depending on the environment and the available resources:<br> PackagedApp mode: Fiori launchpad runs in the context of PackagedApp<br> FioriClient mode: Fiori launchpad runs in the context of FioriLaunchpad<br> WebSocket mode: Fiori launchpad runs in a browser, and WebSocket connection to the notifications provider is available<br> Polling mode: Fiori launchpad in runs in a browser, and WebSocket connection to the notifications provider is not available<br>\n\nThe notification service exposes an API that includes: - Service enabling and initialization<br> - Registration of callback functions (by Shell/FLP controls) that will be called for every data update<br>. - Retrieval of notification data (e.g. notifications, number of unseen notifications) - Execution of a notification actions - Marking user notifications as seen","getNotificationsCount":{"!description":"Returns the number of notifications<br> e.g. Notifications for user.","!static":false,"!category":"function","!type":"fn() -> Number"},"isEnabled":{"!description":"Indicates whether notification service is enabled.<br> Enabling is based on the <code>enable<\/code> service configuration flag.<br> The service configuration must also include serviceUrl attribute.<br>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"notificationsSeen":{"!description":"Mark all notifications as seen.<br> the main use-case is when the user navigated to the notification center and sees all the pending notifications.<br>","!static":false,"!category":"function","!type":"fn()"},"registerNotificationsUpdateCallback":{"!description":"Gets a callback function that will be called when updated notifications data is available.","!static":false,"!category":"function","!type":"fn(callback: fn())","parameters":{"callback":"type: function, description: The callback function that is registered and called on data update."}},"getNotificationsByTypeWithGroupHeaders":{"!description":"Returns the notifications of the user sorted by type include the group headers and the notifications","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"}},"sap.ushell.api.S4MyHome":{"!description":"The utility functions for the S/4 My Home app.","formatDate":{"!description":"Formats the date to easy human readable format.","!static":"true","!category":"function","!type":"fn(sCreatedAt: String) -> String"},"detachRouteMatched":{"!description":"Detaches a handler from the routeMatched event.","!static":"true","!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object)"},"!module":"sap/ushell/api/S4MyHome","!helpDescription":"The utility functions for the S/4 My Home app.","!category":"namespace","attachRouteMatched":{"!description":"Attaches a handler to the routeMatched event. The event is used to activate and deactivate tiles on the My Home app and to change the visibility of the My Home specific buttons.","!static":"true","!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object)"}},"sap.ushell.services.Personalization.TransientPersonalizer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.TransientPersonalizer} instead<br>The transient personalizer shall be used in container mode for table personalization. To be called by the personalization service getTransientPersonalizer method.","!module":"sap/ushell/services/_Personalization/TransientPersonalizer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.TransientPersonalizer} instead<br>The transient personalizer shall be used in container mode for table personalization. To be called by the personalization service getTransientPersonalizer method.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.PersonalizationV2.KeyCategory":{"GENERATED_KEY":{"!description":"For all other cases.","!category":"enum","!type":"String"},"!module":"sap/ushell/services/PersonalizationV2/constants","!category":"static class","FIXED_KEY":{"!description":"A static hard-coded key which does not change. This value is required for caching to take place.","!category":"enum","!type":"String"}},"sap.ushell.services.Bookmark":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.BookmarkV2} instead.<br>The Unified Shell's bookmark service. Allows creating shortcuts on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Bookmark = await Container.getServiceAsync(\"Bookmark\");\n    // do something with the Bookmark service\n  });\n<\/pre>","deleteCustomBookmarks":{"!description":"Deletes <b>all<\/b> custom bookmarks matching exactly the identification data. {@link #countCustomBookmarks} can be used to check upfront how many bookmarks are going to be affected.","!static":false,"!category":"function","!type":"fn(oIdentifier: Object) -> Promise<int>","parameters":{"oIdentifier":"type: object, description: An object which is used to find the bookmarks by matching the provided properties."}},"updateCustomBookmarks":{"!description":"Updates <b>all<\/b> custom bookmarks matching exactly the identification data. Only given properties are updated. {@link #countCustomBookmarks} can be used to check upfront how many bookmarks are going to be affected. The vizType as well as the chipId of the bookmarks <b>cannot be changed!<\/b>","!static":false,"!category":"function","!type":"fn(oIdentifier: Object, oConfig: Object) -> Promise<int>","parameters":{"oConfig":"type: object, description: Viz type specific configuration including all parameters the visualization needs.","oIdentifier":"type: object, description: An object which is used to find the bookmarks by matching the provided properties."}},"addBookmark":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.BookmarkV2#addBookmark} instead.<br>Adds a bookmark tile to one of the user's classic home page groups or to multiple provided content nodes.","!static":false,"!category":"function","!type":"fn(oParameters: Object, vContainer?: [Object | sap.ushell.services.Bookmark.ContentNode | sap.ushell.services.Bookmark.ContentNode], sContentProviderId?: String) -> jQuery.Promise","parameters":{"sContentProviderId":"type: string, description: The contentProviderId or undefined outside the cFLP","vContainer":"type: object|sap.ushell.services.Bookmark.ContentNode|sap.ushell.services.Bookmark.ContentNode[], description: Either a legacy launchpad home page group, one content node or an array of content nodes (see {@link #getContentNodes}). If not provided, the bookmark will be added to the default group if spaces mode is not active or to the default page if spaces mode is active.","oParameters":"type: object, description: Bookmark parameters. In addition to title and URL, a bookmark might allow further settings, such as an icon or a subtitle. Which settings are supported depends on the environment in which the application is running. Unsupported parameters will be ignored."}},"!proto":"sap.ushell.services.Service","!category":"class","addCustomBookmark":{"!description":"Adds a custom bookmark visualization to one or multiple provided content nodes.","!static":false,"!category":"function","!type":"fn(sVizType: String, oConfig: Object, vContentNodes: [sap.ushell.services.Bookmark.ContentNode | sap.ushell.services.Bookmark.ContentNode], sContentProviderId?: String) -> Promise<(undefined | string)>","parameters":{"sVizType":"type: string, description: Specifies what tile should be created, for example \"ssuite.smartbusiness.abap.tiles.contribution\"","sContentProviderId":"type: string, description: The contentProviderId or undefined outside the cFLP","oConfig":"type: object, description: Viz type specific configuration including all parameters the visualization needs.","vContentNodes":"type: sap.ushell.services.Bookmark.ContentNode|sap.ushell.services.Bookmark.ContentNode[], description: Either an array of ContentNodes or a single ContentNode in which the Bookmark will be placed."}},"addCatalogTileToGroup":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.112 Please use {@link sap.ushell.services.BookmarkV2#addBookmark} instead.<br>Adds the catalog tile with the given ID to given group. The catalog tile is looked up in the legacy SAP HANA catalog unless data to look up a remote catalog is provided.","!static":false,"!category":"function","!type":"fn(sCatalogTileId: String, sGroupId?: String, oCatalogData?: Object) -> jQuery.Promise","parameters":{"oCatalogData":"type: object, description: The data to identify the catalog containing the tile with the given ID","sCatalogTileId":"type: string, description: The ID of the tile within the catalog","sGroupId":"type: string, description: The id of the group. If not given, the tile is added to the default group"}},"updateBookmarks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.BookmarkV2#updateBookmarks} instead.<br>Updates <b>all<\/b> bookmarks pointing to the given URL on all of the user's pages with the given new parameters. Parameters which are omitted are not changed in the existing bookmarks.","!static":false,"!category":"function","!type":"fn(sUrl: String, oParameters: Object, sContentProviderId?: String) -> jQuery.Promise","parameters":{"sContentProviderId":"type: string, description: The contentProviderId or undefined outside the cFLP","sUrl":"type: string, description: The URL of the bookmarks to be updated, exactly as specified to {@link #addBookmark}. In case you need to update the URL itself, pass the old one here and the new one as <code>oParameters.url<\/code>!","oParameters":"type: object, description: Bookmark parameters. In addition to title and URL, a bookmark might allow additional settings, such as an icon or a subtitle. Which settings are supported depends on the environment in which the application is running. Unsupported parameters will be ignored."}},"!module":"sap/ushell/services/Bookmark","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.BookmarkV2} instead.<br>The Unified Shell's bookmark service. Allows creating shortcuts on the user's home page.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Bookmark = await Container.getServiceAsync(\"Bookmark\");\n    // do something with the Bookmark service\n  });\n<\/pre>","countCustomBookmarks":{"!description":"Counts <b>all<\/b> custom bookmarks matching exactly the identification data. Can be used to check if a bookmark already exists (e.g. before updating).","!static":false,"!category":"function","!type":"fn(oIdentifier: Object) -> Promise<int>","parameters":{"oIdentifier":"type: object, description: An object which is used to find the bookmarks by matching the provided properties."}},"getContentNodes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.BookmarkV2#getContentNodes} instead.<br>Returns available content nodes based on the current launchpad context. (Classic home page, spaces mode)\n\nA content node may be: <ul> <li>a classic home page group<\/li> <li>an unselectable node (space) or a selectable node (page) in spaces mode<\/li> <li>or any other containers in the future<\/li> <\/ul>\n\nIt has the following properties: <ul> <li>id: ID of the content node<\/li> <li>label: Human-readable representation of a content node which can be displayed in a control<\/li> <li>type: Specifies the content node type. E.g: space, page, group, etc. See {@link sap.ushell.ContentNodeType}<\/li> <li>isContainer: Specifies if a bookmark can be added<\/li> <li>children: Specifies sub-nodes<\/li> <ul>","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ushell.services.Bookmark.ContentNode]"},"countBookmarks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.BookmarkV2#countBookmarks} instead.<br>Counts <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages. You can use this method to check if a bookmark already exists. <p> This is a potentially asynchronous operation in case the user's pages have not yet been loaded completely!","!static":false,"!category":"function","!type":"fn(sUrl: String, sContentProviderId: String) -> jQuery.Promise","parameters":{"sContentProviderId":"type: string, description: The Content Provider ID.","sUrl":"type: string, description: The URL of the bookmarks to be counted, exactly as specified to {@link #addBookmark}."}},"deleteBookmarks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ushell.services.BookmarkV2#deleteBookmarks} instead.<br>Deletes <b>all<\/b> bookmarks pointing to the given URL from all of the user's pages.","!static":false,"!category":"function","!type":"fn(sUrl: String, sContentProviderId?: String) -> jQuery.Promise","parameters":{"sContentProviderId":"type: string, description: The contentProviderId or undefined outside the cFLP","sUrl":"type: string, description: The URL of the bookmarks to be deleted, exactly as specified to {@link #addBookmark}."}}},"sap.ushell.services.Personalization.VariantSet_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.VariantSet"},"sap.ushell.services.UserDefaultParameters_obj":{"!type":"fn()","prototype":"sap.ushell.services.UserDefaultParameters"},"sap.ushell.components.factsheet.controls.PictureViewerItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewerItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.components.factsheet.controls.PictureViewerItem"},"sap.ushell.api.workpage.Runtime":{"!description":"Runtime API Facade for work page builder.\n\nThis class <b>MUST<\/b> only be used in a running unified shell context, i.e. only after the unified shell container has been initialized.","createHost":{"!description":"Creates a new work page host instance.","!static":false,"!category":"function","!type":"fn(sId: String, mSettings: Object) -> sap.ui.integration.Host","parameters":{"mSettings":"type: object, description: the settings of the host instance.","sId":"type: string, description: the ID of the host."}},"!module":"sap/ushell/api/workpage/Runtime","!helpDescription":"Runtime API Facade for work page builder.\n\nThis class <b>MUST<\/b> only be used in a running unified shell context, i.e. only after the unified shell container has been initialized.","!proto":"sap.ushell.api.workpage.Designtime","!category":"class","fireAfterContentAdded":{"!description":"Event that should be fired after the content for the first page has been added. This will trigger loading of lazy shell components like menu bar, user settings, search, ...","!static":false,"!category":"function","!type":"fn()"},"getInstance":{"!description":"Returns the singleton instance of the Runtime API.","!static":true,"!category":"function","!type":"fn() -> Promise<sap.ushell.api.workpage.Runtime>"},"fetchPageData":{"!description":"Load the WorkPage data for the given page id and the visualizations used on that WorkPage. Additionally, lookup the corresponding target app in the CDM runtime site and add data from the app in the <code>_siteData<\/code> property.","!static":false,"!category":"function","!type":"fn(sPageId: String) -> [Promise<{workPage:{usedVisualizations:{nodes:sap.ushell.api.workpage.Runtime.ExtendedVisualization]","parameters":{"sPageId":"type: string, description: The WorkPage id."}}},"sap.ushell.components.factsheet.controls.PictureViewer":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureViewerItem | null","parameters":{"vItem":"type: int|string|sap.ushell.components.factsheet.controls.PictureViewerItem, description: The item to remove or its index or id"}},"getCurrentPictureIndex":{"!description":"Gets the current picture index.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewer"},"!proto":"sap.m.TileContainer","deletePicture":{"!description":"Removes the picture at index <code>iIndex<\/code> from the <code>items<\/code> aggregation.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index of the picture collection to delete; if <code>iIndex<\/code> is out of range or empty, the current image will be deleted."}},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.components.factsheet.controls.PictureViewer"},"!category":"class","selectPicture":{"!description":"Select the picture at index <code>iIndex<\/code> from the <code>items<\/code> aggregation.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index of the aggregation to select; for a negative value of <code>iIndex<\/code>, the picture at position 0 is selected; for a value greater than the current size of the aggregation, the selected picture at the last position is selected"}},"attachPictureDeleted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:pictureDeleted pictureDeleted} event of this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 undefined<br>Adds some item <code>oItem<\/code> to the aggregation named <code>items<\/code>. Deprecated, use aggregation \"tiles\".","!static":false,"!category":"function","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> [sap.ushell.components.factsheet.controls.PictureViewerItem]"},"!constructorDescription":"Constructor for a new components/factsheet/controls/PictureViewer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTileScaling tileScaling} : float (default: 0.95)<\/li>\n<li>{@link #getRemovable removable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ushell.components.factsheet.controls.PictureViewerItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:pictureDeleted pictureDeleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.TileContainer#constructor sap.m.TileContainer}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ushell.components.factsheet.controls.PictureViewerItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem) -> Number","parameters":{"oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: The item whose index is looked for"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use {@link sap.m.Carousel} instead. PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.components.factsheet.controls.PictureViewer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"firePictureDeleted":{"!description":"Fires event {@link #event:pictureDeleted pictureDeleted} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setTileScaling":{"!description":"Sets a new value for property {@link #getTileScaling tileScaling}.\n\nPercentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0.95<\/code>.","!static":false,"!category":"function","!type":"fn(fTileScaling?: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"fTileScaling":"type: float, description: New value for property <code>tileScaling<\/code>"}},"getTileScaling":{"!description":"Gets current value of property {@link #getTileScaling tileScaling}.\n\nPercentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available\n\nDefault value is <code>0.95<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ushell.components.factsheet.controls.PictureViewerItem]"},"extend":{"!description":"Creates a new subclass of class sap.ushell.components.factsheet.controls.PictureViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.TileContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ushell/components/factsheet/controls/PictureViewer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use {@link sap.m.Carousel} instead. PictureViewer was replacing the Carousel as it wasn't supporting some versions of MS Internet Explorer. Now, the sap.m.Carousel is fully functional, please use sap.m.Carousel instead. This control will not be supported anymore.<br>Picture viewer control relying on the TileContainer control","detachPictureDeleted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:pictureDeleted pictureDeleted} event of this <code>sap.ushell.components.factsheet.controls.PictureViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setRemovable":{"!description":"Sets a new value for property {@link #getRemovable removable}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRemovable?: Boolean) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"bRemovable":"type: boolean, description: New value for property <code>removable<\/code>"}},"insertItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 undefined<br>Inserts a item into the aggregation named <code>items<\/code>. When adding a new item to the aggregation, a sap.ca.ui.PictureTile is actually created with its own ID and added to the internal TileContainer. Deprecated, use aggregation \"tiles\".","!static":false,"!category":"function","!type":"fn(oItem: sap.ushell.components.factsheet.controls.PictureViewerItem, iIndex: Number) -> sap.ushell.components.factsheet.controls.PictureViewer","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ushell.components.factsheet.controls.PictureViewerItem, description: the item to insert; if empty, nothing is inserted"}},"getRemovable":{"!description":"Gets current value of property {@link #getRemovable removable}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ushell.renderers.fiori2.Renderer_obj":{"!type":"fn()","prototype":"sap.ushell.renderers.fiori2.Renderer"},"sap.ushell.services.Bookmark_obj":{"!type":"fn()","prototype":"sap.ushell.services.Bookmark"},"sap.ushell.services.Configuration_obj":{"!type":"fn()","prototype":"sap.ushell.services.Configuration"},"sap.ushell":{"!description":"SAP library: sap.ushell","components":"sap.ushell.components","!category":"namespace","services":"sap.ushell.services","bootstrap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Initializes the Unified Shell Container.\n\nThis platform-specific method must be called exactly once in the very beginning to resolve all necessary dependencies and prepare Unified Shell's global infrastructure. As soon as the returned promise has been resolved, the container will be available as a singleton object in namespace <code>sap.ushell.Container<\/code>.\n\n<strong>Note:<\/strong> <code>sap.ushell.bootstrap<\/code> is used internally by the SAP Fiori launchpad. Developers who build apps or plugins for the SAP Fiori launchpad should use <code>sap.ushell.bootstrap<\/code> in their code. However, there are special use cases where a customized bootstrap of Unified Shell is helpful, e.g. when Unified Shell UI services need to be accessed without having loaded the Unified Shell's UI. In such cases, additional dependencies need to be required to allow proper usage of the Unified Shell's functionality.\n\n<strong>Example:<\/strong> <pre>\n&lt;script id=\"sap-ui-bootstrap\"\n        src=\".../sap-ui-core.js\"\n        data-sap-ui-libs=\"sap.ushell, sap.m\"&gt;\n&lt;/script&gt;\n\n&lt;!--...--&gt;\n\n&lt;script&gt;\n  sap.ui.getCore().attachInit(function () {\n  // Container needs to be required to make sap.ushell.bootstrap available\n    sap.ui.require([\"sap/ushell/Container\", ... ], function (Container) {\n      window[\"sap-ushell-config\"] = {...};\n\n      sap.ushell.bootstrap(\"abap\", {\n        abap: \"sap.ushell_abap.adapters.abap\"\n      }).then(function () {\n        sap.ushell.Container.getServiceAsync(\\/* Service *\\/).then(function (serviceInstance) {\n          ...\n        });\n      });\n    });\n  });\n&lt;/script&gt;\n<\/pre>","!static":"true","!category":"function","!type":"fn(sPlatform: String, mAdapterPackagesByPlatform?: Object<string,string>) -> jQuery.Promise"},"ContentNodeType":"sap.ushell.ContentNodeType","System":"sap.ushell.System_obj","ViewPortState":"sap.ushell.ui.launchpad.ViewPortState","ui5service":"sap.ushell.ui5service","Container":"sap.ushell.Container","ui":"sap.ushell.ui","!module":"sap/ushell/library","!helpDescription":"SAP library: sap.ushell","renderers":"sap.ushell.renderers","NavigationState":"sap.ushell.NavigationState","api":"sap.ushell.api"},"sap.ushell.services.PersonalizationV2.Personalizer_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationV2.Personalizer"},"sap.ushell.services.ShellNavigation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Use {@link sap.ushell.services.Navigation} for Navigation instead.<br>The Unified Shell's internal navigation service (platform independent).\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const ShellNavigation = await Container.getServiceAsync(\"ShellNavigation\");\n    // do something with the ShellNavigation service\n  });\n<\/pre>\n\nThis interface is for consumption by shell renderers/containers only\n\nIt is not for direct usage by applications, see inner app navigation : UI5 interfaces (hashChanger, Router) cross app navigation : @see sap.ushell.services.CrossApplicationNavigation\n\nUsage:\n\nExample: see renders/fiorisandbox/Shell.controller.js\n\n<pre>\n  sap.ui.define([\n     \"sap/ushell/services/ShellNavigation\"\n  ], function (ShellNavigation) {\n      Shell.onHashChange(shellHash,appHash) {  / *resolve url, load app and exchange root view* / }\n      Shell.init() {\n        this.privShellNavigator = new ShellNavigation();\n        this.privShellNavigator.init(jQuery.proxy(this.doHashChange, this));\n      }\n  });\n  <\/pre>\n\nNote: further app specific integration via the reference app reuse code (setting of app specific handler)\n\nNote: the ShellNavigation service replaces the UI5 core HashChanger which abstracts from the browser url modification.\n\nIt performs the following services: - encoding of the actual browser url hash ( via hasher.js). - expansion of \"shortened\" urls ( AppParameterParts) via invocation. - splitting of shellHash and AppSpecific hash and abstraction w.r.t. Eventing\n\nThus it is crucial to use appropriate interfaces and not directly invoke window.location.hash.\n\n- internal construction methods for a \"current\" App specific and non-app specific hash (invoked by CrossApplicationNavigation), not to be invoked directly!","init":{"!description":"Initializes ShellNavigation\n\nThis function should be used by a custom renderer in order to implement custom navigation. Do not use this function for developing Fiori applications.\n\nThis method should be invoked by the Shell in order to: - Register the event listener - Register the container callback for the (currently single) ShellHash changes.\n\nSignature of the callback function sShellHashPart, // The hash part on the URL that is resolved and used for application loading sAppSpecificPart // Typically ignored sOldShellHashPart, // The old shell hash part, if exist sOldAppSpecificPart, // The old app hash part, if exist","!static":false,"!category":"function","!type":"fn(fnShellCallback: fn()) -> sap.ushell.services.ShellNavigation","parameters":{"fnShellCallback":"type: function, description: The callback method for hash changes"}},"registerNavigationFilter":{"!description":"Register the navigation filter callback function. A navigation filter provides plugins with the ability to intervene in the navigation flow, and optionally to stop the navigation.\n\nThe callback has to return {@link sap.ushell.services.ShellNavigationInternal.NavigationFilterStatus}\n\nUse <code>Function.prototype.bind()<\/code> to determine the callback's <code>this<\/code> or some of its arguments.","!static":false,"!category":"function","!type":"fn(fnFilter: Object)","parameters":{"fnFilter":"type: object, description: navigation filter function"}},"!proto":"sap.ui.base.Object","unregisterNavigationFilter":{"!description":"Unregister a previously registered navigation filter\n\nThe callback has to return {@link sap.ushell.services.ShellNavigationInternal.NavigationFilterStatus}\n\nNote the same filter function that was registered should be passed as a parameter to this method.","!static":false,"!category":"function","!type":"fn(fnFilter: Object)","parameters":{"fnFilter":"type: object, description: navigation filter function"}},"!category":"class","resetHistoryEntryReplaced":{"!description":"Resets the internal flag used to track whether the last navigation is made via hasher#setHash or hasher#replaceHash. This method should be called after a navigation is successfully made to a target application to avoid returning an inconsistent answer when calling <code>#wasHistoryEntryReplaced<\/code>. An inconsistent answer might occur when a navigation is made via forward/back button without passing via <code>hasher#replaceHash<\/code> or <code>hasher#setHash<\/code>.\n\nThis method should not be used externally. It's reserved uniquely for internal shell consumption and its signature or result might change at any time.","!static":false,"!category":"function","!type":"fn()"},"compactParams":{"!description":"compact the parameter object, if required a number of parameters will be removed, instead a corresponding \"sap-intent-param\" containing a key of an appstate representing the removed parameters will be inserted","!static":false,"!category":"function","!type":"fn(oParams: Object, aRetainedParameters?: Array<*>, oComponent?: Object, bTransient?: Boolean) -> Promise","parameters":{"oParams":"type: object, description: A parameter object","oComponent":"type: object, description: optional, a SAP UI5 Component","bTransient":"type: boolean, description: whether an transient appstate is sufficient","aRetainedParameters":"type: Array<*>, description: An array of string value of parameters which shall not be compacted The array may contains a *-terminated string, which will match and strings with the same prefix ( e.g. \"sap-*\" will match \"sap-ushell\", \"sap-wd\", \"sap-\" etc. )"}},"getNavigationContext":{"!description":"Returns the current navigation context.","!static":false,"!category":"function","!type":"fn() -> Object"},"!module":"sap/ushell/services/ShellNavigation","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Use {@link sap.ushell.services.Navigation} for Navigation instead.<br>The Unified Shell's internal navigation service (platform independent).\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const ShellNavigation = await Container.getServiceAsync(\"ShellNavigation\");\n    // do something with the ShellNavigation service\n  });\n<\/pre>\n\nThis interface is for consumption by shell renderers/containers only\n\nIt is not for direct usage by applications, see inner app navigation : UI5 interfaces (hashChanger, Router) cross app navigation : @see sap.ushell.services.CrossApplicationNavigation\n\nUsage:\n\nExample: see renders/fiorisandbox/Shell.controller.js\n\n<pre>\n  sap.ui.define([\n     \"sap/ushell/services/ShellNavigation\"\n  ], function (ShellNavigation) {\n      Shell.onHashChange(shellHash,appHash) {  / *resolve url, load app and exchange root view* / }\n      Shell.init() {\n        this.privShellNavigator = new ShellNavigation();\n        this.privShellNavigator.init(jQuery.proxy(this.doHashChange, this));\n      }\n  });\n  <\/pre>\n\nNote: further app specific integration via the reference app reuse code (setting of app specific handler)\n\nNote: the ShellNavigation service replaces the UI5 core HashChanger which abstracts from the browser url modification.\n\nIt performs the following services: - encoding of the actual browser url hash ( via hasher.js). - expansion of \"shortened\" urls ( AppParameterParts) via invocation. - splitting of shellHash and AppSpecific hash and abstraction w.r.t. Eventing\n\nThus it is crucial to use appropriate interfaces and not directly invoke window.location.hash.\n\n- internal construction methods for a \"current\" App specific and non-app specific hash (invoked by CrossApplicationNavigation), not to be invoked directly!","replaceHashWithoutNavigation":{"!description":"Rewrite the hash fragment identifier without triggering any navigation at","!static":false,"!category":"function","!type":"fn(sNewHash: String)","parameters":{"sNewHash":"type: string, description: new hash fragment"}},"wasHistoryEntryReplaced":{"!description":"Returns true if the history entry was replaced immediately after the last navigation. To be useful, this method should be called immediately after the hash enters the URL but before the target application is finally navigated to.\n\nThis method should not be used externally. It's reserved uniquely for internal shell consumption and its signature or result might change at any time.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ushell.renderers":{"fiori2":"sap.ushell.renderers.fiori2","!category":"namespace"},"sap.ushell.services.PersonalizationV2.WriteFrequency":{"HIGH":{"!category":"enum","!type":"String"},"!module":"sap/ushell/services/PersonalizationV2/constants","LOW":{"!description":"The key is typically rarely updated, for example in explicit table personalization by end users.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ushell.ui":{"appfinder":"sap.ushell.ui.appfinder","launchpad":"sap.ushell.ui.launchpad","shell":"sap.ushell.ui.shell","tile":"sap.ushell.ui.tile","footerbar":"sap.ushell.ui.footerbar","!category":"namespace"},"sap.ushell.services.SearchableContent":{"!description":"The Unified Shell's SearchableContent service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SearchableContent = await Container.getServiceAsync(\"SearchableContent\");\n    // do something with the SearchableContent service\n  });\n<\/pre>","!module":"sap/ushell/services/SearchableContent","!helpDescription":"The Unified Shell's SearchableContent service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SearchableContent = await Container.getServiceAsync(\"SearchableContent\");\n    // do something with the SearchableContent service\n  });\n<\/pre>","getApps":{"!description":"Collects and returns all apps","!static":false,"!category":"function","!type":"fn(oParameters?: Object) -> [Promise<sap.ushell.services.SearchableContent.AppData]","parameters":{"oParameters":"type: object, description: the parameters for the search."}},"!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.api.RTA":{"addTopHeaderPlaceHolder":{"!description":"Adds a placeholder for the shell header within the iframe.","!static":"true","!category":"function","!type":"fn()"},"!module":"sap/ushell/api/RTA","getShellHeader":{"!description":"Returns the shell header control.","!static":"true","!category":"function","!type":"fn() -> sap.ui.core.Control"},"!category":"namespace","setShellHeaderVisibility":{"!description":"Sets the visibility of the shell header.","!static":"true","!category":"function","!type":"fn(visible: Boolean)"},"removeTopHeaderPlaceHolder":{"!description":"Removes the placeholder for the shell header within the iframe.","!static":"true","!category":"function","!type":"fn()"},"setNavigationBarEnabled":{"!description":"Sets the property enabled of the navigation bar.","!static":"true","!category":"function","!type":"fn(bEnable: Boolean)"}},"sap.ushell.services.Personalization.PersonalizationContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Personalization#getContainer} instead<br>The personalization container is the anchor object of the unified shell personalization in container mode.\n\nTo be called by the personalization service getPersonalizationContainer method.","!module":"sap/ushell/services/_Personalization/PersonalizationContainer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Personalization#getContainer} instead<br>The personalization container is the anchor object of the unified shell personalization in container mode.\n\nTo be called by the personalization service getPersonalizationContainer method.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.ui.launchpad.ActionItem":{"!description":"Constructor for a new ui/launchpad/ActionItem.","attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.ActionItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.ActionItem<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.ActionItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.ActionItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.ActionItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getActionType":{"!description":"Gets current value of property {@link #getActionType actionType}.\n\nDefault value is <code>\"standard\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.Button","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.ActionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ushell.ui.launchpad.ActionItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.ActionItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.ActionItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getActionType actionType} : string (default: \"standard\")<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","!module":"sap/ushell/ui/launchpad/ActionItem","setActionType":{"!description":"Sets a new value for property {@link #getActionType actionType}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"standard\"<\/code>.","!static":false,"!category":"function","!type":"fn(sActionType?: String) -> sap.ushell.ui.launchpad.ActionItem","parameters":{"sActionType":"type: string, description: New value for property <code>actionType<\/code>"}},"!helpDescription":"Constructor for a new ui/launchpad/ActionItem.","fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.ActionItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.ActionItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.ActionItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ushell.ui.launchpad.ActionItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.ActionItem<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.ActionItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.ActionItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ushell.Container":{"!description":"The Unified Shell's container. Manages renderers, services, and adapters. The container is designed to be a singleton, therefore instead of creating an instance, access the central one via <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    // do something with the container\n  });\n<\/pre>","deregisterDirtyStateProvider":{"!description":"Deregister the work protection dirty callback function. See registerDirtyStateProvider for more information. Only the last registered function will be deregistered (in case it was registered multiple times).","!static":"true","!category":"function","!type":"fn(fnDirty: function() : boolean)"},"createRenderer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 undefined<br>Creates a new renderer instance for the given renderer name.\n\nNames without a dot are interpreted as package names within the default naming convention and will be expanded to <code>\"sap.ushell.renderers.\" + sRendererName + \".Renderer\"<\/code>. Names containing a dot are used \"as is\".\n\nThe resulting name must point to a SAPUI5 object which is first required and then instantiated (without arguments). The object is expected to be a UI component (i.e. extend <code>sap.ui.core.UIComponent<\/code>), which is then automatically wrapped into a <code>sap.ui.core.ComponentContainer<\/code> control by this method. The <code>sap.ui.core.ComponentContainer<\/code> is created with <code>height<\/code> and <code>width<\/code> set to \"100%\" to accommodate the complete available space. Besides UIComponents a control (i.e. extend <code>sap.ui.core.Control<\/code>) is accepted, too.\n\nThe returned renderer is supposed to be added to a direct child (for example <code>div<\/code>) of the <code>body<\/code> of the page and there should be no other parts of the page consuming space outside the renderer. Use CSS class <code>sapUShellFullHeight<\/code> at <code>html<\/code>, <code>body<\/code> and at the element to which the renderer is added to allow the renderer to use 100% height.","!static":"true","!category":"function","!type":"fn(sRendererName?: String, bAsync?: Boolean) -> sap.ui.core.Control | Promise<sap.ui.core.Control> | sap.ui.core.ComponentContainer | Promise<sap.ui.core.ComponentContainer>"},"getRenderer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Use {@link sap.ushell.services.Extension} for shell extensions instead.<br>Gets a renderer instance for the given renderer name, that was created by the createRenderer method.","!static":"true","!category":"function","!type":"fn(sRendererName?: String) -> sap.ui.core.Control | sap.ui.core.Component"},"registerDirtyStateProvider":{"!description":"Register the work protection dirty callback function. In the work protect mechanism, each platform can register their own method in order to check if data was changed during the session, and notify the container about the change. Registering multiple times the same function is allowed.\n\nUse <code>Function.prototype.bind()<\/code> to determine the callback's <code>this<\/code> or some of its arguments.","!static":"true","!category":"function","!type":"fn(fnDirty: function() : boolean)"},"setDirtyFlag":{"!description":"Setter for the isDirty flag value.\n\nDefault value is false","!static":"true","!category":"function","!type":"fn(bIsDirty?: Boolean)"},"!category":"namespace","cancelLogon":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Cancels the logon procedure in the current frame, if any. This MUST be used by the logon frame provider in case the user wants to close the logon frame for good. It will report \"Authentication cancelled\" and let all pending requests for the current realm fail. As a side-effect, it also calls <code>destroy<\/code> on the logon frame provider.","!static":"true","!category":"function","!type":"fn()"},"detachRendererCreatedEvent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Detaches a listener from the rendererCreated event.","!static":"true","!category":"function","!type":"fn(fnFunction: fn())"},"getService":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.77 Please use {@link #getServiceAsync} instead.<br>Returns a service with the given name, creating it if necessary. Services are singleton objects identified by their (resulting) name.\n\nNames without a dot are interpreted as service names within the default naming convention and will be expanded to <code>\"sap.ushell.services.\" + sServiceName<\/code>. Names containing a dot are not yet supported. This name may be overridden via configuration. See example 2 below.\n\nThe resulting name must point to a constructor function which is first required as a SAPUI5 module and then called to create a service instance. The service will be passed to a corresponding service adapter for the current logon system, as well as a callback interface (of virtual type <code>sap.ushell.services.ContainerInterface<\/code>) to the container providing a method <code>createAdapter(oSystem)<\/code> to create further adapters for the same service but connected to remote systems. The third parameter will be <code>sParameter<\/code> as passed to this function. The fourth parameter will be an object with the property <code>config<\/code> supplied by the configuration. See example 2 below.\n\nThe adapter for the logon system will be created before the service. Its constructor gets three parameters. The first parameter is the logon system, the second parameter is <code>sParameter<\/code> and the third parameter is an object with the property <code>config<\/code> supplied by the configuration.\n\nThe service may declare itself adapterless by setting the property <code>hasNoAdapter = true<\/code> at the constructor function. In this case no adapter will be created and passed to the constructor and all other parameters will be shifted.\n\n<b>Example 1:<\/b> The service <code>sap.ushell.services.UserInfo<\/code> is parameterless. It indicates this by setting <code>sap.ushell.services.UserInfo.hasNoAdapter = true;<\/code>.\n\n<b>Example 2:<\/b> (Configuration) <pre>\n  window[\"sap-ushell-config\"] = {\n    services: {\n      Foo: {\n        module: \"my.own.Foo\"\n        config: {header: \"hidden\"},\n        adapter: {\n          module: \"my.own.FooAdapter\",\n          config: {foo: \"bar\"}\n        }\n      }\n    }\n  }\n  sap.ushell.Container.getServiceAsync(\"Foo\", \"runtimeConfig\")\n      .then(function (Foo) {\n          // Do something with the service\n      });\n  <\/pre> Now <code>oService<\/code> is an instance of <code>my.own.Foo<\/code>. The third parameter of the constructor will be \"runtimeConfig\", the fourth parameter <code>{config: {header: \"hidden\"}}<\/code>. Its adapter is an instance of <code>my.own.FooAdapter<\/code> constructed with the parameters logon system, \"runtimeConfig\" and <code>{config: {foo: \"bar\"}}<\/code>.\n\nNote that the api will throw a runtime error (or reject for async mode) if the service name does not reflect a service available.","!static":"true","!category":"function","!type":"fn(sServiceName: String, sParameter?: String, bAsync?: Boolean) -> ServiceType | Promise<ServiceType>"},"getDirtyFlag":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>If the dirty state was set to 'false' using 'setDirtyFlag' the registered dirty state provider methods get called to determine the actual dirty state. The determined dirty state is then returned.\n\nHowever, if the dirty state was previously set to 'true' using 'setDirtyFlag' the registered dirty state provider methods are ignored and the function simply returns 'true'.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"addRemoteSystem":{"!description":"Adds a system to the list of remote systems currently in use. On logout this list is processed and performs a logout for each system via the ContainerAdapter specific for its platform.","!static":"true","!category":"function","!type":"fn(oRemoteSystem: sap.ushell.System)"},"DirtyState":{"!description":"An enumeration for the application work protect mode state.","!category":"enum","!type":"sap.ushell.Container.DirtyState"},"attachLogoutEvent":{"!description":"Attaches a listener to the logout event. In case the bAsyncFunction parameter is true, the fnFunction must return a promise. FLP will wait for the promise to be resolved before doing the actual logout.","!static":"true","!category":"function","!type":"fn(fnFunction: fn(), bAsyncFunction: Boolean)"},"!module":"sap/ushell/Container","!helpDescription":"The Unified Shell's container. Manages renderers, services, and adapters. The container is designed to be a singleton, therefore instead of creating an instance, access the central one via <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    // do something with the container\n  });\n<\/pre>","getGlobalDirty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Returns the global dirty state.\n\nAll open UShell browser windows for the same origin are asked about their global dirty state.","!static":"true","!category":"function","!type":"fn() -> jQuery.Promise"},"ready":{"!description":"Returns a Promise that resolves when the Container instance has been initialized completely.","!static":"true","!category":"function","!type":"fn() -> Promise"},"attachRendererCreatedEvent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Attaches a listener to the rendererCreated event.","!static":"true","!category":"function","!type":"fn(fnFunction: fn())"},"detachLogoutEvent":{"!description":"Detaches a listener from the logout event.","!static":"true","!category":"function","!type":"fn(fnFunction: fn())"},"getServiceAsync":{"!description":"Returns a Promise that resolves a service with the given name, creating it if necessary. Services are singleton objects identified by their (resulting) name.\n\nNames without a dot are interpreted as service names within the default naming convention and will be expanded to <code>\"sap.ushell.services.\" + sServiceName<\/code>. Names containing a dot are not yet supported. This name may be overridden via configuration. See example 2 below.\n\nThe resulting name must point to a constructor function which is first required as a SAPUI5 module and then called to create a service instance. The service will be passed to a corresponding service adapter for the current logon system, as well as a callback interface (of virtual type <code>sap.ushell.services.ContainerInterface<\/code>) to the container providing a method <code>createAdapter(oSystem)<\/code> to create further adapters for the same service but connected to remote systems. The third parameter will be <code>sParameter<\/code> as passed to this function. The fourth parameter will be an object with the property <code>config<\/code> supplied by the configuration. See example 2 below.\n\nThe adapter for the logon system will be created before the service. Its constructor gets three parameters. The first parameter is the logon system, the second parameter is <code>sParameter<\/code> and the third parameter is an object with the property <code>config<\/code> supplied by the configuration.\n\nThe service may declare itself adapterless by setting the property <code>hasNoAdapter = true<\/code> at the constructor function. In this case no adapter will be created and passed to the constructor and all other parameters will be shifted.\n\n<b>Example 1:<\/b> The service <code>sap.ushell.services.UserInfo<\/code> is parameterless. It indicates this by setting <code>sap.ushell.services.UserInfo.hasNoAdapter = true;<\/code>.\n\n<b>Example 2:<\/b> (Configuration) <pre>\n  window[\"sap-ushell-config\"] = {\n    services: {\n      Foo: {\n        module: \"my.own.Foo\"\n        config: {header: \"hidden\"},\n        adapter: {\n          module: \"my.own.FooAdapter\",\n          config: {foo: \"bar\"}\n        }\n      }\n    }\n  }\n  sap.ushell.Container.getServiceAsync(\"Foo\", \"runtimeConfig\")\n      .then(function (Foo) {\n          // Do something with the service\n      });\n  <\/pre> Now the parameter provided in the promise handler is an instance of <code>my.own.Foo<\/code>. The third parameter of the constructor will be \"runtimeConfig\", the fourth parameter <code>{config: {header: \"hidden\"}}<\/code>. Its adapter is an instance of <code>my.own.FooAdapter<\/code> constructed with the parameters logon system, \"runtimeConfig\" and <code>{config: {foo: \"bar\"}}<\/code>.","!static":"true","!category":"function","!type":"fn(sServiceName: String, sParameter?: String) -> Promise<ServiceType>"},"getLogonSystem":{"!description":"Returns the logon system.","!static":"true","!category":"function","!type":"fn() -> sap.ushell.System"}},"sap.ushell.services.FrameBoundExtension.SidePane_obj":{"!type":"fn()","prototype":"sap.ushell.services.FrameBoundExtension.SidePane"},"sap.ushell.services.AppLifeCycle":{"!description":"The Unified Shell's AppLifeCycle service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const AppLifeCycle = await Container.getServiceAsync(\"AppLifeCycle\");\n    // do something with the AppLifeCycle service\n  });\n<\/pre>","detachAppLoaded":{"!description":"Detaches an event handler from the EventProvider.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object)","parameters":{"oListener":"type: object, description: The object that wanted to be notified when the event occurred","fnFunction":"type: function, description: The handler function that has to be detached from the EventProvider."}},"getCurrentApplication":{"!description":"Returns information about the currently running application or <code>undefined<\/code> if no application is running.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.AppLifeCycle.CurrentApplication | undefined"},"attachAppLoaded":{"!description":"Attaches an event handler for the appLoaded event. This event handler will be triggered each time an application has been loaded.","!static":false,"!category":"function","!type":"fn(oData: ObjectToBePassedToHandler, fnFunction: function(sap.ui.base.Event,ObjectToBePassedToHandler), oListener: Object)","parameters":{"oListener":"type: object, description: The object that wants to be notified when the event occurs (this context within the handler function).","fnFunction":"type: function(sap.ui.base.Event,ObjectToBePassedToHandler), description: The handler function to call when the event occurs.","oData":"type: ObjectToBePassedToHandler, description: An object that will be passed to the handler along with the event object when the event is fired."}},"!module":"sap/ushell/services/AppLifeCycle","reloadCurrentApp":{"!description":"Reloads the currently displayed app (used by RTA plugin).","!static":false,"!category":"function","!type":"fn()"},"!helpDescription":"The Unified Shell's AppLifeCycle service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const AppLifeCycle = await Container.getServiceAsync(\"AppLifeCycle\");\n    // do something with the AppLifeCycle service\n  });\n<\/pre>","!proto":"sap.ushell.services.Service","!category":"class"},"sap.ushell.services.BookmarkV2_obj":{"!type":"fn()","prototype":"sap.ushell.services.BookmarkV2"},"sap.ushell.ui.launchpad.TileState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/launchpad/TileState. The tile state control that displays loading indicator, while tile view is loading and failed status in case tile view is not available.","getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.TileState.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.TileState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ushell.ui.launchpad.TileState<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.TileState","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.TileState","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getState state} : string (default: \"Loaded\")<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getState":{"!description":"Gets current value of property {@link #getState state}.\n\nDefault value is <code>\"Loaded\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ushell/ui/launchpad/TileState","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/launchpad/TileState. The tile state control that displays loading indicator, while tile view is loading and failed status in case tile view is not available.","setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Loaded\"<\/code>.","!static":false,"!category":"function","!type":"fn(sState?: String) -> sap.ushell.ui.launchpad.TileState","parameters":{"sState":"type: string, description: New value for property <code>state<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ushell.ui.launchpad.TileState<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.TileState<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.TileState","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.TileState<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ushell.services.FrameBoundExtension.FloatingContainer":{"!description":"The floating container. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}.\n\n<p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>","isDocked":{"!description":"Checks whether the floating container is docked.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.services.FrameBoundExtension.FloatingContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the content of the floating container.","!static":false,"!category":"function","!type":"fn(control: sap.ui.core.Control, dragSelector: String) -> sap.ushell.services.FrameBoundExtension.FloatingContainer","parameters":{"control":"type: sap.ui.core.Control, description: The actual content of the extension.","dragSelector":"type: string, description: CSS selector describing the drag handle to enable drag and drop."}},"!proto":"sap.ui.base.ManagedObject","show":{"!description":"Shows the floating container.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.FloatingContainer"},"!category":"class","isVisible":{"!description":"Checks whether the floating container is docked.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"extend":{"!description":"Creates a new subclass of class sap.ushell.services.FrameBoundExtension.FloatingContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireDockingStateUpdate":{"!description":"Fires event {@link #event:dockingStateUpdate dockingStateUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.services.FrameBoundExtension.FloatingContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"hide":{"!description":"Hides the floating container.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.services.FrameBoundExtension.FloatingContainer"},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:dockingStateUpdate dockingStateUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/ushell/services/FrameBoundExtension/FloatingContainer","detachDockingStateUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dockingStateUpdate dockingStateUpdate} event of this <code>sap.ushell.services.FrameBoundExtension.FloatingContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.services.FrameBoundExtension.FloatingContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!helpDescription":"The floating container. To be instantiated by {@link sap.ushell.services.FrameBoundExtension}.\n\n<p><b>Restriction:<\/b> Does not work when called from within a iframe. The calling function has to be in the 'same frame' as the launchpad itself.<\/p>","attachDockingStateUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dockingStateUpdate dockingStateUpdate} event of this <code>sap.ushell.services.FrameBoundExtension.FloatingContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.services.FrameBoundExtension.FloatingContainer<\/code> itself.\n\nIs triggered after the floating container was docked or undocked. Happens either by user drag or by window resize. It might happen that the floating container is undocked while invisible.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.services.FrameBoundExtension.FloatingContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.services.FrameBoundExtension.FloatingContainer<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ushell.services.CrossApplicationNavigation_obj":{"!type":"fn()","prototype":"sap.ushell.services.CrossApplicationNavigation"},"sap.ushell.services.Personalization.PersonalizationContainerVariantSet":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Personalization#getContainer} instead<br>The personalization variant set contains variants of personalization data. It is used in the personalization container mode.\n\nTo be called by the personalization container.","getVariantKeys":{"!description":"Returns an array with the keys of the variants in the variant set.","!static":false,"!category":"function","!type":"fn() -> [String]"},"!module":"sap/ushell/services/_Personalization/PersonalizationContainerVariantSet","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.Personalization#getContainer} instead<br>The personalization variant set contains variants of personalization data. It is used in the personalization container mode.\n\nTo be called by the personalization container.","getCurrentVariantKey":{"!description":"Returns the current variant key.","!static":false,"!category":"function","!type":"fn() -> String"},"getVariant":{"!description":"Returns a variant object.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Object","parameters":{"sVariantKey":"type: string, description: variant key"}},"!proto":"sap.ui.base.Object","!category":"class","getVariantKeyByName":{"!description":"Returns the variant key corresponding to a variant name.","!static":false,"!category":"function","!type":"fn(sVariantName: String) -> Object","parameters":{"sVariantName":"type: string, description: variant name"}},"containsVariant":{"!description":"Checks if a specific variant is contained in the variant set.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Boolean","parameters":{"sVariantKey":"type: string, description: variant key"}},"delVariant":{"!description":"Deletes a variant from the variant set. In case the variant does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: variant key"}},"setCurrentVariantKey":{"!description":"Sets the current variant key.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: There is no validity check for the variant key."}}},"sap.ushell.services.Pages":{"addVisualization":{"!description":"Adds a new visualization to the model and to the CDM 3.1 site.\n\nIf no section ID is specified, the visualization is added to the 'Recently Added' section automatically.","!static":"true","!category":"function","!type":"fn(sPageId: String, sSectionId?: String, sVizId: String, sDisplayFormatHint: String) -> Promise<undefined>"},"!category":"namespace"},"sap.ushell.ui.launchpad.TileState_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.TileState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.launchpad.TileState"},"sap.ushell.services.Service":{"!description":"Abstract base class for ushell services. For details, see {@link sap.ushell.Container#getServiceAsync}.","!module":"sap/ushell/Container","!helpDescription":"Abstract base class for ushell services. For details, see {@link sap.ushell.Container#getServiceAsync}.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.ui5service.ShellUIService_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.ShellUIService with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.service.Service.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ushell.ui5service.ShellUIService"},"sap.ushell.services.Extension_obj":{"!type":"fn()","prototype":"sap.ushell.services.Extension.Item"},"sap.ushell.services.Personalization.TransientPersonalizer_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.TransientPersonalizer"},"sap.ushell.services.SearchableContent_obj":{"!type":"fn()","prototype":"sap.ushell.services.SearchableContent"},"sap.ushell.services.Configuration":{"!description":"The unified shell's Configuration service. Allows attaching to <b>selected<\/b> launchpad configuration settings and their value changes.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Configuration = await Container.getServiceAsync(\"Configuration\");\n    // do something with the Configuration service\n  });\n<\/pre>","!module":"sap/ushell/services/Configuration","!helpDescription":"The unified shell's Configuration service. Allows attaching to <b>selected<\/b> launchpad configuration settings and their value changes.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Configuration = await Container.getServiceAsync(\"Configuration\");\n    // do something with the Configuration service\n  });\n<\/pre>","attachSizeBehaviorUpdate":{"!description":"Allows to attach to any value change of the sizeBehavior configuration for homepage parts (smaller tile size) which is needed to implement custom tiles reacting on this setting. The returned value can directly be used in {@link sap.m.GenericTile#sizeBehavior}.\n\nOnce attached, <code>fnCallback<\/code> will be called once initially for the <b>current value<\/b> and afterwards every time the value changed.\n\nPlease ensure to detach from the registry by calling <code>.detach<\/code> on the returned object e.g. in the destroy function of your component or controller! Make sure that you do not attach twice with the same function as otherwise a detach cannot be performed later!\n\nExample usage: <pre>\nvar oEventRegistry;\n\n// the callback that is called whenever the property changes\nvar fnCallback = function (sSizeBehavior) {\n    // do something with sSizeBehavior like setting it on a\n    // sap.m.GenericTile via model and data binding!\n};\n\n\n// retrieve service via getServiceAsync API\nsap.ushell.Container.getServiceAsync(\"Configuration\").then( function (oService) {\n    // keep the returned event registry in order to detach upon destroy of your context\n    oEventRegistry = oService.attachSizeBehaviorUpdate(fnCallback);\n});\n\n// detach later when your context is destroyed (e.g. destroy of the controller)\noEventRegistry.detach();\n<\/pre>","!static":false,"!category":"function","!type":"fn(fnCallback: fn()) -> {detach:function}","parameters":{"fnCallback":"type: function, description: The function to be called once the property changes. It receives a parameter of type {@link sap.m.TileSizeBehavior}."}},"!proto":"sap.ushell.services.Service","!category":"class"},"sap.ushell.services.Personalization_obj":{"!type":"fn(oContextContainer: Object)","prototype":"sap.ushell.services.Personalization.VariantSetAdapter"},"sap.ushell.ui.launchpad":{"highlightAccKeysRef":{"!description":"Indicates whether the access keys ref of the control should be highlighted. NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"Boolean"},"VizInstanceBase":"sap.ushell.ui.launchpad.VizInstanceBase_obj","ariaHasPopup":{"!description":"Specifies the value of the <code>aria-haspopup<\/code> attribute\n\nIf the value is <code>None<\/code>, the attribute will not be rendered. Otherwise it will be rendered with the selected value.\n\nNOTE: Use this property only when a button is related to a popover/popup. The value needs to be equal to the main/root role of the popup - e.g. dialog, menu or list (examples: if you have dialog -> dialog, if you have menu -> menu; if you have list -> list; if you have dialog containing a list -> dialog). Do not use it, if you open a standard sap.m.Dialog, MessageBox or other type of dialogs displayed as on overlay over the application.","!category":"enum","!type":"sap.ui.core.aria.HasPopup"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"icon":{"!description":"Defines the icon to be displayed as graphical element within the <code>Button<\/code>. It can be an image or an icon from the icon font.","!category":"enum","!type":"sap.ui.core.URI"},"!category":"namespace","badgeStyle":{"!description":"Determines the style in which the badge notification will be represented: <ul> <li><code>BadgeStyle.Default<\/code> Use for badges that contain numbers <\/li> <li><code>BadgeStyle.Attention<\/code> This badge is rendered as a single dot designed to capture user attention <\/li> <\/ul>","!category":"enum","!type":"sap.m.BadgeStyle"},"debugInfo":{"!description":"debugInfo : String","!category":"enum","!type":"String"},"type":{"!description":"Defines the <code>Button<\/code> type.","!category":"enum","!type":"sap.m.ButtonType"},"iconFirst":{"!description":"Determines whether the icon is displayed before the text.","!category":"enum","!type":"Boolean"},"uuid":{"!description":"uuid : String","!category":"enum","!type":"String"},"enabled":{"!description":"Determines whether the <code>Button<\/code> is enabled (default is set to <code>true<\/code>). A disabled <code>Button<\/code> has different colors depending on the {@link sap.m.ButtonType ButtonType}.","!category":"enum","!type":"Boolean"},"activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button. Both active and default icon properties should be defined and have the same type: image or icon font. If the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!category":"enum","!type":"sap.ui.core.URI"},"textDirection":{"!description":"Specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"accessibleRole":{"!description":"Describes the accessibility role of the button:<ul> <li><code>ButtonAccessibleRole.Default<\/code> - The accessibility semantics is derived from the button tag and no role attribute is rendered. <li><code>ButtonAccessibleRole.Link<\/code> - The accessibility semantics is derived from a custom role attribute with \"link\" value.\n\nNOTE: Use link role only with a press handler, which performs a navigation. In all other scenarios the default button semantics is recommended.","!category":"enum","!type":"sap.m.ButtonAccessibleRole"},"LinkTileWrapper":"sap.ushell.ui.launchpad.LinkTileWrapper_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"accesskey":{"!description":"Indicates which keyboard key should be pressed to focus the access key ref NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"isLocked":{"!description":"isLocked : Boolean","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"text":{"!description":"Determines the text of the <code>Button<\/code>.","!category":"enum","!type":"String"},"state":{"!description":"state : String","!category":"enum","!type":"String"},"accessibilityLabel":{"!description":"A value for an optional accessibility label.","!category":"enum","!type":"String"},"animationRendered":{"!description":"animationRendered : Boolean","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"ActionItem":"sap.ushell.ui.launchpad.ActionItem_obj","active":{"!description":"Current active state. Can be used to update visibility of the VizInstance.","!category":"enum","!type":"Boolean"},"tileCatalogId":{"!description":"tileCatalogId : String","!category":"enum","!type":"String"},"displayMode":{"!description":"displayMode : String","!category":"enum","!type":"String"},"target":{"!description":"target : String","!category":"enum","!type":"String"},"TileState":"sap.ushell.ui.launchpad.TileState_obj","actionType":{"!description":"actionType : String","!category":"enum","!type":"String"},"width":{"!description":"Defines the <code>Button<\/code> width.","!category":"enum","!type":"sap.ui.core.CSSSize"},"tileActionModeActive":{"!description":"tileActionModeActive : Boolean","!category":"enum","!type":"Boolean"},"tileCatalogIdStable":{"!description":"tileCatalogIdStable : String","!category":"enum","!type":"String"},"DashboardGroupsContainer":"sap.ushell.ui.launchpad.DashboardGroupsContainer_obj","ieHtml5DnD":{"!description":"ieHtml5DnD : Boolean","!category":"enum","!type":"Boolean"},"iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!category":"enum","!type":"Boolean"}},"sap.ushell.components.factsheet.controls":{"PictureTile":"sap.ushell.components.factsheet.controls.PictureTile_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"src":{"!description":"src : String","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"editable":{"!description":"Determines whether the TileContainer is editable so you can move, delete or add tiles.","!category":"enum","!type":"Boolean"},"allowAdd":{"!description":"Determines whether the user is allowed to add Tiles in Edit mode (editable = true).","!category":"enum","!type":"Boolean"},"!category":"namespace","tileScaling":{"!description":"Percentage of the space occupied by the image in the picture viewer control. Please note that if the factor is too close to 1, the navigation arrows usually displayed in desktop mode will not be available","!category":"enum","!type":"Number"},"PictureViewer":"sap.ushell.components.factsheet.controls.PictureViewer_obj","PictureViewerItem":"sap.ushell.components.factsheet.controls.PictureViewerItem_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"removable":{"!description":"removable : Boolean","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"width":{"!description":"Defines the width of the TileContainer in px.","!category":"enum","!type":"sap.ui.core.CSSSize"},"height":{"!description":"Defines the height of the TileContainer in px.","!category":"enum","!type":"sap.ui.core.CSSSize"}},"sap.ushell.components":{"factsheet":"sap.ushell.components.factsheet","!category":"namespace"},"sap.ushell.services.PersonalizationV2.VariantSetAdapter_obj":{"!type":"fn(oContextContainer: sap.ushell.services.PersonalizationV2.ContextContainer)","prototype":"sap.ushell.services.PersonalizationV2.VariantSetAdapter"},"sap.ushell.ui.shell.ToolAreaItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.shell.ToolAreaItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.shell.ToolAreaItem"},"sap.ushell.services.Personalization.ContextContainer_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.ContextContainer"},"sap.ushell.ui.shell.ShellHeadItem":{"getFloatingNumber":{"!description":"Gets current value of property {@link #getFloatingNumber floatingNumber}.\n\nThe floating number of the item.","!static":"true","!category":"function","!type":"fn() -> Number"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nIf set to true, the item gets a special design.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn(bSelected?: Boolean, bSelected?: Boolean) -> sap.ushell.ui.shell.ShellHeadItem"},"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nThe aria-label attribute of the item.","!static":"true","!category":"function","!type":"fn() -> String"},"setAriaHidden":{"!description":"Sets a new value for property {@link #getAriaHidden ariaHidden}.\n\nSpecifies whether the aria-hidden attribute is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn(bAriaHidden?: Boolean) -> sap.ushell.ui.shell.ShellHeadItem"},"!category":"namespace","setShowMarker":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Markers should not be used anymore.<br>Sets a new value for property {@link #getShowMarker showMarker}.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn(bShowMarker?: Boolean) -> sap.ushell.ui.shell.ShellHeadItem"},"getTarget":{"!description":"Gets current value of property {@link #getTarget target}.\n\nTarget URI of the item.","!static":"true","!category":"function","!type":"fn() -> sap.ui.core.URI"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nIf set to false, the button isn't clickable and displayed as disabled.\n\nDefault value is <code>true<\/code>.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"setTarget":{"!description":"Sets a new value for property {@link #getTarget target}.\n\nTarget URI of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":"true","!category":"function","!type":"fn(sTarget?: sap.ui.core.URI) -> sap.ushell.ui.shell.ShellHeadItem"},"getShowSeparator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62 Support for the showSeparator property has been discontinued in Fiori 2 and later.<br>Gets current value of property {@link #getShowSeparator showSeparator}.\n\nIf set to true, a separator is displayed after the item.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ushell.ui.shell.ShellHeadItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.shell.ShellHeadItem<\/code> itself.\n\nEvent is fired when the user presses the item.","!static":"true","!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.shell.ShellHeadItem"},"setAriaHaspopup":{"!description":"Sets a new value for property {@link #getAriaHaspopup ariaHaspopup}.\n\nSpecifies the value of the aria-haspopup attribute\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":"true","!category":"function","!type":"fn(sAriaHaspopup?: String) -> sap.ushell.ui.shell.ShellHeadItem"},"getFloatingNumberMaxValue":{"!description":"Gets current value of property {@link #getFloatingNumberMaxValue floatingNumberMaxValue}.\n\nThe maximum value of the floating number.\n\nDefault value is <code>999<\/code>.","!static":"true","!category":"function","!type":"fn() -> Number"},"setShowSeparator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62 Support for the showSeparator property has been discontinued in Fiori 2 and later.<br>Sets a new value for property {@link #getShowSeparator showSeparator}.\n\nIf set to true, a separator is displayed after the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn(bShowSeparator?: Boolean) -> sap.ushell.ui.shell.ShellHeadItem"},"getAriaHaspopup":{"!description":"Gets current value of property {@link #getAriaHaspopup ariaHaspopup}.\n\nSpecifies the value of the aria-haspopup attribute\n\nDefault value is <code>empty string<\/code>.","!static":"true","!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text of the item. It is either visible as tooltip or as label when the item is rendered as part of an overflow button in a popover.","!static":"true","!category":"function","!type":"fn() -> String"},"getShowMarker":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Markers should not be used anymore.<br>Gets current value of property {@link #getShowMarker showMarker}.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"setFloatingNumberMaxValue":{"!description":"Sets a new value for property {@link #getFloatingNumberMaxValue floatingNumberMaxValue}.\n\nThe maximum value of the floating number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>999<\/code>.","!static":"true","!category":"function","!type":"fn(iFloatingNumberMaxValue?: Number) -> sap.ushell.ui.shell.ShellHeadItem"},"setFloatingNumber":{"!description":"Sets a new value for property {@link #getFloatingNumber floatingNumber}.\n\nThe floating number of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":"true","!category":"function","!type":"fn(iFloatingNumber?: Number) -> sap.ushell.ui.shell.ShellHeadItem"},"setStartsSection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Dividers are not supported anymore.<br>Sets a new value for property {@link #getStartsSection startsSection}.\n\nIf set to true, a divider is displayed before the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn(bStartsSection?: Boolean) -> sap.ushell.ui.shell.ShellHeadItem"},"getFloatingNumberType":{"!description":"Gets current value of property {@link #getFloatingNumberType floatingNumberType}.\n\nThe type of the floating number.\n\nDefault value is <code>None<\/code>.","!static":"true","!category":"function","!type":"fn() -> sap.ushell.FloatingNumberType"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set.","!static":"true","!category":"function","!type":"fn() -> sap.ui.core.URI"},"setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nThe aria-label attribute of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":"true","!category":"function","!type":"fn(sAriaLabel?: String, sAriaLabel?: String) -> sap.ushell.ui.shell.ShellHeadItem"},"getAriaHidden":{"!description":"Gets current value of property {@link #getAriaHidden ariaHidden}.\n\nSpecifies whether the aria-hidden attribute is set to true.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or an URI to a custom image. An icon must be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":"true","!category":"function","!type":"fn(sIcon?: sap.ui.core.URI, sIcon?: sap.ui.core.URI) -> sap.ushell.ui.shell.ShellHeadItem"},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ushell.ui.shell.ShellHeadItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":"true","!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.shell.ShellHeadItem"},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":"true","!category":"function","!type":"fn(mParameters?: Object, mParameters?: Object) -> sap.ushell.ui.shell.ShellHeadItem"},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nIf set to true, the item gets a special design.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nIf set to false, the button isn't clickable and displayed as disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":"true","!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ushell.ui.shell.ShellHeadItem"},"getStartsSection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18 Dividers are not supported anymore.<br>Gets current value of property {@link #getStartsSection startsSection}.\n\nIf set to true, a divider is displayed before the item.\n\nDefault value is <code>false<\/code>.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"setFloatingNumberType":{"!description":"Sets a new value for property {@link #getFloatingNumberType floatingNumberType}.\n\nThe type of the floating number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":"true","!category":"function","!type":"fn(sFloatingNumberType?: sap.ushell.FloatingNumberType) -> sap.ushell.ui.shell.ShellHeadItem"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text of the item. It is either visible as tooltip or as label when the item is rendered as part of an overflow button in a popover.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":"true","!category":"function","!type":"fn(sText?: String, sText?: String) -> sap.ushell.ui.shell.ShellHeadItem"}},"sap.ushell.api.workpage.Runtime_obj":{"!type":"fn()","prototype":"sap.ushell.api.workpage.Runtime"},"sap.ushell.ui.launchpad.DashboardGroupsContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for \"sap.ushell.ui.launchpad.DashboardGroupsContainer\".","attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.DashboardGroupsContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ushell.ui.launchpad.DashboardGroupsContainer<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.DashboardGroupsContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ushell.ui.launchpad.DashboardGroupsContainer<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfGroup":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroup: sap.ui.core.Control) -> Number","parameters":{"oGroup":"type: sap.ui.core.Control, description: The group whose index is looked for"}},"insertGroup":{"!description":"Inserts a group into the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn(oGroup: sap.ui.core.Control, iIndex: Number) -> sap.ushell.ui.launchpad.DashboardGroupsContainer","parameters":{"oGroup":"type: sap.ui.core.Control, description: The group to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the group should be inserted at; for a negative value of <code>iIndex<\/code>, the group is inserted at position 0; for a value greater than the current size of the aggregation, the group is inserted at the last position"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui.launchpad.DashboardGroupsContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setDisplayMode":{"!description":"Sets a new value for property {@link #getDisplayMode displayMode}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayMode?: String) -> sap.ushell.ui.launchpad.DashboardGroupsContainer","parameters":{"sDisplayMode":"type: string, description: New value for property <code>displayMode<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getAccessibilityLabel":{"!description":"Gets current value of property {@link #getAccessibilityLabel accessibilityLabel}.\n\nA value for an optional accessibility label.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibilityLabel":{"!description":"Sets a new value for property {@link #getAccessibilityLabel accessibilityLabel}.\n\nA value for an optional accessibility label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibilityLabel?: String) -> sap.ushell.ui.launchpad.DashboardGroupsContainer","parameters":{"sAccessibilityLabel":"type: string, description: New value for property <code>accessibilityLabel<\/code>"}},"getDisplayMode":{"!description":"Gets current value of property {@link #getDisplayMode displayMode}.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.DashboardGroupsContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibilityLabel accessibilityLabel} : string<\/li>\n<li>{@link #getDisplayMode displayMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroups groups} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ushell/ui/launchpad/DashboardGroupsContainer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for \"sap.ushell.ui.launchpad.DashboardGroupsContainer\".","removeGroup":{"!description":"Removes a group from the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn(vGroup: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vGroup":"type: int|string|sap.ui.core.Control, description: The group to remove or its index or id"}},"destroyGroups":{"!description":"Destroys all the groups in the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn() -> sap.ushell.ui.launchpad.DashboardGroupsContainer"},"fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ushell.ui.launchpad.DashboardGroupsContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ushell.ui.launchpad.DashboardGroupsContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ushell.ui.launchpad.DashboardGroupsContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeAllGroups":{"!description":"Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addGroup":{"!description":"Adds some group to the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn(oGroup: sap.ui.core.Control) -> sap.ushell.ui.launchpad.DashboardGroupsContainer","parameters":{"oGroup":"type: sap.ui.core.Control, description: The group to add; if empty, nothing is inserted"}},"getGroups":{"!description":"Gets content of aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"}},"sap.ushell.ui.footerbar":{"highlightAccKeysRef":{"!description":"Indicates whether the access keys ref of the control should be highlighted. NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"Boolean"},"keywords":{"!description":"The keywords based on which the future tile should be indexed and filtered.","!category":"enum","!type":"String"},"ariaHasPopup":{"!description":"Specifies the value of the <code>aria-haspopup<\/code> attribute\n\nIf the value is <code>None<\/code>, the attribute will not be rendered. Otherwise it will be rendered with the selected value.\n\nNOTE: Use this property only when a button is related to a popover/popup. The value needs to be equal to the main/root role of the popup - e.g. dialog, menu or list (examples: if you have dialog -> dialog, if you have menu -> menu; if you have list -> list; if you have dialog containing a list -> dialog). Do not use it, if you open a standard sap.m.Dialog, MessageBox or other type of dialogs displayed as on overlay over the application.","!category":"enum","!type":"sap.ui.core.aria.HasPopup"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"icon":{"!description":"Defines the icon to be displayed as graphical element within the <code>Button<\/code>. It can be an image or an icon from the icon font.","!category":"enum","!type":"sap.ui.core.URI"},"serviceUrl":{"!description":"URL of an OData service from which data for a dynamic tile should be read.","!category":"enum","!type":"Object"},"!category":"namespace","badgeStyle":{"!description":"Determines the style in which the badge notification will be represented: <ul> <li><code>BadgeStyle.Default<\/code> Use for badges that contain numbers <\/li> <li><code>BadgeStyle.Attention<\/code> This badge is rendered as a single dot designed to capture user attention <\/li> <\/ul>","!category":"enum","!type":"sap.m.BadgeStyle"},"type":{"!description":"Defines the <code>Button<\/code> type.","!category":"enum","!type":"sap.m.ButtonType"},"title":{"!description":"Title to be displayed on the tile.","!category":"enum","!type":"String"},"iconFirst":{"!description":"Determines whether the icon is displayed before the text.","!category":"enum","!type":"Boolean"},"numberUnit":{"!description":"For dynamic tile, the unit to be displayed below the number, for example, USD.","!category":"enum","!type":"String"},"AddBookmarkButton":"sap.ushell.ui.footerbar.AddBookmarkButton_obj","enabled":{"!description":"Determines whether the <code>Button<\/code> is enabled (default is set to <code>true<\/code>). A disabled <code>Button<\/code> has different colors depending on the {@link sap.m.ButtonType ButtonType}.","!category":"enum","!type":"Boolean"},"appData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31 Use dedicated properties like afterPressHandler, beforePresshandler, customUrl, ... of the AddBookmarkButton instead.<br>An object containing properties with information about the app, e.g. serviceUrl, numberUnit, ... .","!category":"enum","!type":"Object"},"activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button. Both active and default icon properties should be defined and have the same type: image or icon font. If the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!category":"enum","!type":"sap.ui.core.URI"},"textDirection":{"!description":"Specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"accessibleRole":{"!description":"Describes the accessibility role of the button:<ul> <li><code>ButtonAccessibleRole.Default<\/code> - The accessibility semantics is derived from the button tag and no role attribute is rendered. <li><code>ButtonAccessibleRole.Link<\/code> - The accessibility semantics is derived from a custom role attribute with \"link\" value.\n\nNOTE: Use link role only with a press handler, which performs a navigation. In all other scenarios the default button semantics is recommended.","!category":"enum","!type":"sap.m.ButtonAccessibleRole"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"accesskey":{"!description":"Indicates which keyboard key should be pressed to focus the access key ref NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"showGroupSelection":{"!description":"Whether to display the control for group selection in the save-as-tile dialog in launchpad homepage mode.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"serviceRefreshInterval":{"!description":"Number of seconds after which dynamic content is read from the data source and the display is refreshed.","!category":"enum","!type":"String"},"text":{"!description":"Determines the text of the <code>Button<\/code>.","!category":"enum","!type":"String"},"info":{"!description":"Text to be displayed at the bottom of the tile.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"customUrl":{"!description":"The target intent or URL of the bookmark. If the target app runs in the current shell, the URL has to be a valid intent, i.e. in the format <code>\"#SO-Action?P1=a&P2=x&/route?RPV=1\"<\/code>. See also {@link sap.ushell.services.URLParsing#getHash}.","!category":"enum","!type":"Object"},"tileIcon":{"!description":"Icon to be displayed in the Tile.","!category":"enum","!type":"String"},"showPageSelection":{"!description":"Whether to display the control for page selection in the save-bookmark dialog in launchpad spaces mode.","!category":"enum","!type":"Boolean"},"beforePressHandler":{"!description":"A callback function that is called before the save-as-tile dialog is opened.","!category":"enum","!type":"fn()"},"subtitle":{"!description":"Subtitle to be displayed below the tile title.","!category":"enum","!type":"String"},"width":{"!description":"Defines the <code>Button<\/code> width.","!category":"enum","!type":"sap.ui.core.CSSSize"},"afterPressHandler":{"!description":"A callback function that is called after the save-as-tile dialog is closed.","!category":"enum","!type":"fn()"},"dataSource":{"!description":"Data source of the OData service. See same parameter of {@link sap.ushell.services.Bookmark#addBookmark} for details","!category":"enum","!type":"Object"},"iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!category":"enum","!type":"Boolean"}},"sap.ushell.services.NotificationsV2":{"!description":"UShell service for fetching user notification data from the Notification center/service<br> and exposing them to the Unified Shell and Fiori applications UI controls.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const NotificationsV2 = await Container.getServiceAsync(\"NotificationsV2\");\n    // do something with the NotificationsV2 service\n  });\n<\/pre>\n\nIn order to get user notifications, Unified Shell notification service issues OData requests<br> to the service defined by the configuration property <code>serviceUrl<\/code>,<br> for example: \"/sap/opu/odata4/iwngw/notification/default/iwngw/notification_srv/0001\"<br>.\n\nUnified Shell Notification service has several working modes, depending on the environment and the available resources:<br> PackagedApp mode: Fiori launchpad runs in the context of PackagedApp<br> FioriClient mode: Fiori launchpad runs in the context of FioriLaunchpad<br> WebSocket mode: Fiori launchpad runs in a browser, and WebSocket connection to the notifications provider is available<br> Polling mode: Fiori launchpad in runs in a browser, and WebSocket connection to the notifications provider is not available<br>\n\nThe notification service exposes an API that includes: - Service enabling and initialization<br> - Registration of callback functions (by Shell/FLP controls) that will be called for every data update<br>. - Retrieval of notification data (e.g. notifications, number of unseen notifications) - Execution of a notification actions - Marking user notifications as seen","init":{"!description":"Initializes the notification service\n\nInitialization is performed only if the following two conditions are fulfilled:<br> 1. Notification service is enabled<br> 2. Notification service hasn't been initialized yet<br>\n\nThe main initialization functionality is determining and setting the mode in which notifications are consumed.<br> The possible modes are:<br> PACKAGED_APP - Notifications are fetched when a callback is called by PackagedApp environment<br> FIORI_CLIENT - Notifications are fetched when a callback is called by FioriClient environment<br> WEB_SOCKET - Notifications are fetched on WebSocket \"ping\"<br> POLLING - Notifications are fetched using periodic polling mechanism<br>","!static":false,"!category":"function","!type":"fn()"},"getNotificationsGroupHeaders":{"!description":"Returns the group headers of the user notifications","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ushell.services.NotificationsV2.NotificationItem]"},"executeBulkAction":{"!description":"Launches a notification action oData call.<br> After launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!static":false,"!category":"function","!type":"fn(sNotificationGroupId: String, sActionId: String) -> [Promise<sap.ushell.services.NotificationsV2.BulkAction]","parameters":{"sNotificationGroupId":"type: string, description: The ID of the notification header/group whose action is being executed","sActionId":"type: string, description: The ID of the action that is being executed"}},"registerNotificationCountUpdateCallback":{"!description":"Gets a callback function that will be called when updated unseen notifications count is available.","!static":false,"!category":"function","!type":"fn(callback: fn())","parameters":{"callback":"type: function, description: The callback function that is registered and called on data update."}},"dismissNotification":{"!description":"Launches dismiss notification call.<br>","!static":false,"!category":"function","!type":"fn(sNotificationId: String) -> Promise","parameters":{"sNotificationId":"type: string, description: The ID of the notification whose action is being executed"}},"!proto":"sap.ushell.services.Service","!category":"class","isFirstDataLoaded":{"!static":false,"!category":"function","!type":"fn() -> Boolean"},"markRead":{"!description":"Launches mark as read notification call.<br> After launching the action, the function gets updated notification data in order to push the updated data to the consumers.","!static":false,"!category":"function","!type":"fn(sNotificationId: String) -> Promise","parameters":{"sNotificationId":"type: string, description: The ID of the notification whose action is being executed"}},"getUnseenNotificationsCount":{"!description":"Returns the number of unseen notifications<br> e.g. Notifications that the user hasn't seen yet.","!static":false,"!category":"function","!type":"fn() -> Promise<int>"},"!module":"sap/ushell/services/NotificationsV2","!helpDescription":"UShell service for fetching user notification data from the Notification center/service<br> and exposing them to the Unified Shell and Fiori applications UI controls.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const NotificationsV2 = await Container.getServiceAsync(\"NotificationsV2\");\n    // do something with the NotificationsV2 service\n  });\n<\/pre>\n\nIn order to get user notifications, Unified Shell notification service issues OData requests<br> to the service defined by the configuration property <code>serviceUrl<\/code>,<br> for example: \"/sap/opu/odata4/iwngw/notification/default/iwngw/notification_srv/0001\"<br>.\n\nUnified Shell Notification service has several working modes, depending on the environment and the available resources:<br> PackagedApp mode: Fiori launchpad runs in the context of PackagedApp<br> FioriClient mode: Fiori launchpad runs in the context of FioriLaunchpad<br> WebSocket mode: Fiori launchpad runs in a browser, and WebSocket connection to the notifications provider is available<br> Polling mode: Fiori launchpad in runs in a browser, and WebSocket connection to the notifications provider is not available<br>\n\nThe notification service exposes an API that includes: - Service enabling and initialization<br> - Registration of callback functions (by Shell/FLP controls) that will be called for every data update<br>. - Retrieval of notification data (e.g. notifications, number of unseen notifications) - Execution of a notification actions - Marking user notifications as seen","getNotificationsCount":{"!description":"Returns the number of notifications<br> e.g. Notifications for user.","!static":false,"!category":"function","!type":"fn() -> Number"},"isEnabled":{"!description":"Indicates whether notification service is enabled.<br> Enabling is based on the <code>enable<\/code> service configuration flag.<br> The service configuration must also include serviceUrl attribute.<br>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"notificationsSeen":{"!description":"Mark all notifications as seen.<br> the main use-case is when the user navigated to the notification center and sees all the pending notifications.","!static":false,"!category":"function","!type":"fn() -> Promise"},"registerNotificationsUpdateCallback":{"!description":"Gets a callback function that will be called when updated notifications data is available.","!static":false,"!category":"function","!type":"fn(callback: fn())","parameters":{"callback":"type: function, description: The callback function that is registered and called on data update."}},"getNotificationsByTypeWithGroupHeaders":{"!description":"Returns the notifications of the user sorted by type include the group headers and the notifications","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ushell.services.NotificationsV2.NotificationItem]"}},"sap.ushell.services.Personalization.VariantSet":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.VariantSet} instead<br>The personalization variant set contains variants of personalization data. It is used in the personalization container mode. A VariantSet is a class representing a collection of Variants (identified by a key and name) and a member variable indicating the \"current variable\"\n\nWhen manipulating the underlying data, additional constraints are enforced.\n\nTo be called by the personalization container.","getVariantKeys":{"!description":"Returns an array with the keys of the variants in the variant set.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getVariant":{"!description":"Returns a variant object.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Object","parameters":{"sVariantKey":"type: string, description: variant key"}},"!proto":"sap.ui.base.Object","!category":"class","getVariantKeyByName":{"!description":"Returns the variant key corresponding to a variant name.","!static":false,"!category":"function","!type":"fn(sVariantName: String) -> String","parameters":{"sVariantName":"type: string, description: variant name"}},"setCurrentVariantKey":{"!description":"Sets the current variant key.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: There is no validity check for the variant key."}},"!module":"sap/ushell/services/_Personalization/VariantSet","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ushell.services.PersonalizationV2.VariantSet} instead<br>The personalization variant set contains variants of personalization data. It is used in the personalization container mode. A VariantSet is a class representing a collection of Variants (identified by a key and name) and a member variable indicating the \"current variable\"\n\nWhen manipulating the underlying data, additional constraints are enforced.\n\nTo be called by the personalization container.","getCurrentVariantKey":{"!description":"Returns the current variant key.","!static":false,"!category":"function","!type":"fn() -> String"},"containsVariant":{"!description":"Checks if a specific variant is contained in the variant set.","!static":false,"!category":"function","!type":"fn(sVariantKey: String) -> Boolean","parameters":{"sVariantKey":"type: string, description: variant key"}},"addVariant":{"!description":"Creates a new variant in the variant set. In case a variant with this name is already existing an exception is thrown.","!static":false,"!category":"function","!type":"fn(sVariantSetName: String) -> Object","parameters":{"sVariantSetName":"type: string, description: variant set name"}},"delVariant":{"!description":"Deletes a variant from the variant set. In case the variant does not exist nothing happens.","!static":false,"!category":"function","!type":"fn(sVariantKey: String)","parameters":{"sVariantKey":"type: string, description: variant key"}}},"sap.ushell.services.PersonalizationV2.TransientPersonalizer_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationV2.TransientPersonalizer"},"sap.ushell.ui.launchpad.LinkTileWrapper_obj":{"extend":{"!description":"Creates a new subclass of class sap.ushell.ui.launchpad.LinkTileWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ushell.ui.launchpad.LinkTileWrapper"},"sap.ushell.services.PersonalizationV2_obj":{"!type":"fn(oContextContainer: sap.ushell.services.PersonalizationV2.ContextContainer)","prototype":"sap.ushell.services.PersonalizationV2.VariantSetAdapter"},"sap.ushell.services.VisualizationInstantiation":{"!description":"The Unified Shell's VisualizationInstantiation service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const VisualizationInstantiation = await Container.getServiceAsync(\"VisualizationInstantiation\");\n    // do something with the VisualizationInstantiation service\n  });\n<\/pre>","instantiateVisualization":{"!description":"A factory function to create a VizInstance of type corresponding to source platform {ABAP|CDM|LINK|LAUNCHPAGE}","!static":false,"!category":"function","!type":"fn(vizData: Object) -> sap.ushell.ui.launchpad.VizInstanceBase","parameters":{"vizData":"type: object, description: VisualizationData for one single visualization"}},"!module":"sap/ushell/services/VisualizationInstantiation","!helpDescription":"The Unified Shell's VisualizationInstantiation service.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const VisualizationInstantiation = await Container.getServiceAsync(\"VisualizationInstantiation\");\n    // do something with the VisualizationInstantiation service\n  });\n<\/pre>","!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.services.FrameBoundExtension.Item_obj":{"!type":"fn()","prototype":"sap.ushell.services.FrameBoundExtension.Item"},"sap.ushell.ui5service.ShellUIServiceFactory":{"!description":"Factory for creating instances of ShellUIService. The factory should be retrieved directly via {@link sap.ui.core.service.ServiceFactoryRegistry#get}.","extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.ShellUIServiceFactory with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.service.ServiceFactory.extend}.","!static":"true","!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()"},"createInstance":{"!description":"Overwrites the default implementation of createInstance of ServiceFactory to create a new instance of ShellUIService and attach the handlers to it. The instance is then stored in a map with the scopeObject id as the key. If the current application is the same as the scopeObject derived from the parameter oServiceContext , the instance is resolved immediately. Otherwise, the instance is resolved when the current application is loaded.","!static":"true","!category":"function","!type":"fn(oServiceContext: sap.ui.core.service.Service.Context) -> Promise<sap.ushell.ui5service.ShellUIService>"},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui5service.ShellUIServiceFactory.","!static":"true","!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!module":"sap/ushell/ui5service/ShellUIServiceFactory","!helpDescription":"Factory for creating instances of ShellUIService. The factory should be retrieved directly via {@link sap.ui.core.service.ServiceFactoryRegistry#get}.","!category":"namespace"},"sap.ushell.System_obj":{"!type":"fn(oData: Object)","prototype":"sap.ushell.System"},"sap.ushell.ui5service.ShellUIService":{"!description":"The ShellUIService for the unified shell can be used to modify the app title or the app hierarchy.\n\n<h3>Usage<\/h3>\n\nAllows apps to interact with the SAP Fiori launchpad UI. A defined service is injected in the app components by the FLP before the corresponding apps start. To consume the service, app components should declare it in their \"manifest.json\" as follows:\n\n<pre>\n{\n   ...\n   \"sap.ui5\": {\n      \"services\" : {\n         \"ShellUIService\": {\n             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\"\n         }\n      }\n   }\n   ...\n}\n<\/pre>\n\nThe service can then be retrieved and consumed by the app component as in the following example:\n\n<pre>\n// Component.js (the app component)\n...\nthis.getService(\"ShellUIService\") // promise is returned\n    .then(function (oService) {\n        oService.setTitle(\"Application Title\");\n    })\n    .catch(function (oError) {\n        Log.error(\"Cannot get ShellUIService\", oError, \"my.app.Component\");\n    });\n...\n<\/pre>\n\nThe ShellUIService can also be used within nested components. Every component receives a separate instance of the service. All service instances are independent and do not share any state. With this they can also overwrite each other's settings. Nested components have to define the service in their own manifest as well.\n\n<strong>Note:<\/strong> The ShellUIService is intended for use by the active app only. Calls from other types of components (e.g. plugins) or inactive components (e.g. from a hidden app) are ignored.\n\n<h3>Auto Title and Hierarchy<\/h3>\n\nThe ShellUIService can work together with the routing defined in a UI5 app to set title and hierarchy automatically, as the navigation within the app occurs. This can be achieved by enabling the ShellUIService to load instantly and configuring one or both <code>setTitle<\/code> and <code>setHierarchy<\/code> options to <code>auto<\/code> in the app manifest. Using this mechanism disables the API to manually set the title or hierarchy via <code>setTitle<\/code> and <code>setHierarchy<\/code>.\n\n<pre>\n{\n   \"sap.ui5\": {\n      \"services\" : {\n         \"ShellUIService\": {\n             \"lazy\": false,\n             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\",\n             \"settings\": {\n                 \"setHierarchy\": \"auto\",\n                 \"setTitle\": \"auto\"\n             }\n         }\n      }\n   }\n}\n<\/pre>\n\n<strong>Note:<\/strong> Please be aware that the sapFiori2Adaptation configuration of the application may cause the ShellUIService service to work incorrectly. We recommend to disable the sapFiori2Adaptation configuration for the new applications if you use the ShellUIService.","extend":{"!description":"Creates a new subclass of class sap.ushell.ui5service.ShellUIService with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.service.Service.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setHierarchy":{"!description":"Displays the given hierarchy in the shell header. The default app hierarchy is applied if no parameter is given.","!static":false,"!category":"function","!type":"fn(aHierarchyLevels?: [sap.ushell.ui5service.ShellUIService.AppInfo])","parameters":{"aHierarchyLevels":"type: sap.ushell.ui5service.ShellUIService.AppInfo[], description: An array representing hierarchies of the currently displayed app."}},"setBackNavigation":{"!description":"Displays the back button in the shell header.","!static":false,"!category":"function","!type":"fn(fnCallback?: fn())","parameters":{"fnCallback":"type: function, description: A callback function called when the button is clicked in the UI."}},"setRelatedApps":{"!description":"Used by apps to set related apps. This setting is propagated towards the Shell Header via corresponding events.","!static":false,"!category":"function","!type":"fn(aRelatedApps?: [sap.ushell.ui5service.ShellUIService.AppInfo])","parameters":{"aRelatedApps":"type: sap.ushell.ui5service.ShellUIService.AppInfo[], description: An array of related apps."}},"getMetadata":{"!description":"Returns a metadata object for class sap.ushell.ui5service.ShellUIService.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTitle":{"!description":"Returns the current title shown in the header. This might differ from the title set by the via {@link #setTitle}.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ushell/ui5service/ShellUIService","!helpDescription":"The ShellUIService for the unified shell can be used to modify the app title or the app hierarchy.\n\n<h3>Usage<\/h3>\n\nAllows apps to interact with the SAP Fiori launchpad UI. A defined service is injected in the app components by the FLP before the corresponding apps start. To consume the service, app components should declare it in their \"manifest.json\" as follows:\n\n<pre>\n{\n   ...\n   \"sap.ui5\": {\n      \"services\" : {\n         \"ShellUIService\": {\n             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\"\n         }\n      }\n   }\n   ...\n}\n<\/pre>\n\nThe service can then be retrieved and consumed by the app component as in the following example:\n\n<pre>\n// Component.js (the app component)\n...\nthis.getService(\"ShellUIService\") // promise is returned\n    .then(function (oService) {\n        oService.setTitle(\"Application Title\");\n    })\n    .catch(function (oError) {\n        Log.error(\"Cannot get ShellUIService\", oError, \"my.app.Component\");\n    });\n...\n<\/pre>\n\nThe ShellUIService can also be used within nested components. Every component receives a separate instance of the service. All service instances are independent and do not share any state. With this they can also overwrite each other's settings. Nested components have to define the service in their own manifest as well.\n\n<strong>Note:<\/strong> The ShellUIService is intended for use by the active app only. Calls from other types of components (e.g. plugins) or inactive components (e.g. from a hidden app) are ignored.\n\n<h3>Auto Title and Hierarchy<\/h3>\n\nThe ShellUIService can work together with the routing defined in a UI5 app to set title and hierarchy automatically, as the navigation within the app occurs. This can be achieved by enabling the ShellUIService to load instantly and configuring one or both <code>setTitle<\/code> and <code>setHierarchy<\/code> options to <code>auto<\/code> in the app manifest. Using this mechanism disables the API to manually set the title or hierarchy via <code>setTitle<\/code> and <code>setHierarchy<\/code>.\n\n<pre>\n{\n   \"sap.ui5\": {\n      \"services\" : {\n         \"ShellUIService\": {\n             \"lazy\": false,\n             \"factoryName\": \"sap.ushell.ui5service.ShellUIService\",\n             \"settings\": {\n                 \"setHierarchy\": \"auto\",\n                 \"setTitle\": \"auto\"\n             }\n         }\n      }\n   }\n}\n<\/pre>\n\n<strong>Note:<\/strong> Please be aware that the sapFiori2Adaptation configuration of the application may cause the ShellUIService service to work incorrectly. We recommend to disable the sapFiori2Adaptation configuration for the new applications if you use the ShellUIService.","!proto":"sap.ui.core.service.Service","setTitle":{"!description":"Displays the given title in the shell header. This method should not be called - and will be without effect - if the app calling the method is not currently displayed in the Fiori launchpad.","!static":false,"!category":"function","!type":"fn(sTitle?: String)","parameters":{"sTitle":"type: string, description: The new title. The default title is set if this argument is not given."}},"!category":"class"},"sap":{"sap":"sap","ushell":"sap.ushell","!category":"namespace"},"sap.ushell.api.workpage.Designtime":{"!description":"Design-time API Facade for work page builder.\n\nThis class <b>MAY<\/b> be used in a standalone context, i.e. it does <b>not<\/b> require a bootstrap of the unified shell container.","!module":"sap/ushell/api/workpage/Designtime","!helpDescription":"Design-time API Facade for work page builder.\n\nThis class <b>MAY<\/b> be used in a standalone context, i.e. it does <b>not<\/b> require a bootstrap of the unified shell container.","createVizInstance":{"!description":"Creates a new visualization instance.","!static":false,"!category":"function","!type":"fn(oVizData: sap.ushell.api.workpage.Designtime.VizData) -> Object","parameters":{"oVizData":"type: sap.ushell.api.workpage.Designtime.VizData, description: The visualization data as defined in the content API."}},"!proto":"sap.ui.base.Object","!category":"class","createTileCardConfiguration":{"!description":"Creates a new tile card configuration.","!static":false,"!category":"function","!type":"fn(oVizData: sap.ushell.api.workpage.Designtime.VizData) -> Object","parameters":{"oVizData":"type: sap.ushell.api.workpage.Designtime.VizData, description: The visualization data as defined in the content API."}},"getInstance":{"!description":"Returns the singleton instance of the Designtime API.","!static":true,"!category":"function","!type":"fn() -> Promise<sap.ushell.api.workpage.Designtime>"}},"sap.ushell.api.workpage":{"Runtime":"sap.ushell.api.workpage.Runtime_obj","!module":"sap/ushell/library","Designtime":"sap.ushell.api.workpage.Designtime_obj","!category":"namespace"},"sap.ushell.services.PersonalizationV2.Variant_obj":{"!type":"fn()","prototype":"sap.ushell.services.PersonalizationV2.Variant"},"sap.ushell.api.BootstrapObserver":{"!description":"sap.fl wants to get notified when a FLP is bootstrapped. However, fl lib might also be used without sap/ushell at all. Therefore, they need a solution independent of an actual Container (sap.ui.require(\"sap/ushell/Container\") would not work as fl couldn't be sure that Container isn't instanciated later...).","!module":"sap/ushell/api/BootstrapObserver","!helpDescription":"sap.fl wants to get notified when a FLP is bootstrapped. However, fl lib might also be used without sap/ushell at all. Therefore, they need a solution independent of an actual Container (sap.ui.require(\"sap/ushell/Container\") would not work as fl couldn't be sure that Container isn't instanciated later...).","ready":{"!description":"Returns a ready promise that resolves as soon as a Container instance has been created and bootstrapped.","!static":"true","!category":"function","!type":"fn() -> Promise<sap.ushell.Container>"},"!category":"namespace"},"sap.ushell.services.EndUserFeedback_obj":{"!type":"fn()","prototype":"sap.ushell.services.EndUserFeedback"},"sap.ushell.services.ShellNavigationInternal_obj":{"!type":"fn()","prototype":"sap.ushell.services.ShellNavigationInternal"},"sap.ushell.services.UsageAnalytics_obj":{"!type":"fn()","prototype":"sap.ushell.services.UsageAnalytics"},"sap.ushell.services.NotificationsV2_obj":{"!type":"fn()","prototype":"sap.ushell.services.NotificationsV2"},"sap.ushell.services.SmartNavigation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.112 This service has been deprecated. Please use the CrossApplicationNavigation service instead.<br>Constructs an instance of SmartNavigation. <p> The constructed service provides an enhancement on {@link CrossApplicationNavigation#getLinks} and {@link CrossApplicationNavigation#toExternal}. In order for an application to leverage this enhancement, it is pertinent that the application uses {@link SmartNavigation#toExternal} for navigation. Hence the caller can subsequently use {@link SmartNavigation#getLinks} with the outcome that it sorts the resulting list in the order of frequency of <i>attempted<\/i> navigation from the application to respective links. <p> <i>Attempted<\/i> in the previous paragraph is emphasized due to the fact that a click on the link will cause an increment of the frequency count, regardless of whether or not the navigation was successful. <p>\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SmartNavigation = await Container.getServiceAsync(\"SmartNavigation\");\n    // do something with the SmartNavigation service\n  });\n<\/pre>","hrefForExternalAsync":{"!description":"Completely delegates to {@link sap.ushell.services.CrossApplicationNavigation#hrefForExternalAsync}, and may be used in place of the other with exactly the same outcome.","!static":false,"!category":"function","!type":"fn() -> Promise<string>"},"toExternal":{"!description":"Usage of this method in place of {@link sap.ushell.services.CrossApplicationNavigation#toExternal} drives the smartness of the results returned by {@link sap.ushell.services.SmartNavigation#getLinks}.","!static":false,"!category":"function","!type":"fn()"},"getLinks":{"!description":"Resolves the given semantic object (or action) and business parameters to a list of links available to the user, sorted according their relevance to the calling application.\n\nThe relevance of link is defined by the frequency with which a navigation activity from the calling application to that link occurs.\n\nInternally, this method delegates to {@link sap.ushell.services.CrossApplicationNavigation#getLinks} and then sorts the resulting list accordingly.","!static":false,"!category":"function","!type":"fn() -> jQuery.Promise"},"!module":"sap/ushell/services/SmartNavigation","getPrimaryIntent":{"!description":"Completely delegates to {@link sap.ushell.services.CrossApplicationNavigation#getPrimaryIntent}, and either may be used in place of the other with exactly the same outcome.","!static":false,"!category":"function","!type":"fn()"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.112 This service has been deprecated. Please use the CrossApplicationNavigation service instead.<br>Constructs an instance of SmartNavigation. <p> The constructed service provides an enhancement on {@link CrossApplicationNavigation#getLinks} and {@link CrossApplicationNavigation#toExternal}. In order for an application to leverage this enhancement, it is pertinent that the application uses {@link SmartNavigation#toExternal} for navigation. Hence the caller can subsequently use {@link SmartNavigation#getLinks} with the outcome that it sorts the resulting list in the order of frequency of <i>attempted<\/i> navigation from the application to respective links. <p> <i>Attempted<\/i> in the previous paragraph is emphasized due to the fact that a click on the link will cause an increment of the frequency count, regardless of whether or not the navigation was successful. <p>\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const SmartNavigation = await Container.getServiceAsync(\"SmartNavigation\");\n    // do something with the SmartNavigation service\n  });\n<\/pre>","hrefForExternal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.94 Please use {@link #hrefForExternalAsync} instead.<br>Completely delegates to {@link sap.ushell.services.CrossApplicationNavigation#hrefForExternal}, and may be used in place of the other with exactly the same outcome.","!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ushell.services.Service","trackNavigation":{"!description":"Tracks a navigation to a valid intent if provided via arguments but does not perform the navigation itself. If no valid intent was provided tracking will be prevented. The intent has to consist of SemanticObject and Action. It may be passed as complete shellHash (presidence) or as individual parts Additional parameters will not be part of the tracking and ignored This Method can be used to track a click if the actual navigation was triggered via clicking a link on the UI.","!static":false,"!category":"function","!type":"fn(oArgs: Object) -> jQuery.Promise","parameters":{"oArgs":"type: object, description: The navigation target as object, for example: <code>{ target: { shellHash: 'SaleOrder-display' } }<\/code> or <pre>\n  {\n    target: {\n      semanticObject: 'SalesOrder',\n      action: 'action'\n    }\n  }\n<\/pre>"}},"!category":"class"},"sap.ushell.services.SpaceContent_obj":{"!type":"fn()","prototype":"sap.ushell.services.SpaceContent"},"sap.ushell.services.UserInfo_obj":{"!type":"fn()","prototype":"sap.ushell.services.UserInfo"},"sap.ushell.services.VisualizationInstantiation_obj":{"!type":"fn()","prototype":"sap.ushell.services.VisualizationInstantiation"},"sap.ushell.ui.appfinder.AppBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/appfinder/AppBox.","!module":"sap/ushell/ui/appfinder/AppBox","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Constructor for a new ui/appfinder/AppBox.","!proto":"sap.ui.core.Control","!category":"class"},"sap.ushell.services.Navigation_obj":{"!type":"fn()","prototype":"sap.ushell.services.Navigation"},"sap.ushell.services.UserRecents":{"!description":"The Unified Shell's user recents service. Manages recent searches and recently viewed apps.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UserRecents = await Container.getServiceAsync(\"UserRecents\");\n    // do something with the UserRecents service\n  });\n<\/pre>","getRecentActivity":{"!description":"Resolves to the list of activities.\n\nWas part of the public interface.","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ushell.services.UserRecents.ActivityItem]"},"!module":"sap/ushell/services/UserRecents","!helpDescription":"The Unified Shell's user recents service. Manages recent searches and recently viewed apps.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const UserRecents = await Container.getServiceAsync(\"UserRecents\");\n    // do something with the UserRecents service\n  });\n<\/pre>","getFrequentActivity":{"!description":"Resolves the frequent activities.\n\nWas part of the public interface.","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ushell.services.UserRecents.ActivityItem]"},"!proto":"sap.ui.base.Object","!category":"class"},"sap.ushell.ContentNodeType":{"!description":"Denotes the types of the content nodes.","Space":{"!description":"A space in spaces mode","!category":"enum","!type":"String"},"Visualization":{"!description":"A visualization which is assigned to a space in spaces mode","!category":"enum","!type":"String"},"!module":"sap/ushell/library","HomepageGroup":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>A group of the classic homepage","!category":"enum","!type":"String"},"!category":"static class","Page":{"!description":"A page which is assigned to a space in spaces mode","!category":"enum","!type":"String"}},"sap.ushell.services.Personalization.Personalizer_obj":{"!type":"fn()","prototype":"sap.ushell.services.Personalization.Personalizer"},"sap.ushell.ui.launchpad.ViewPortState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 The ViewPortState is related to Fiori2 and not used anymore.<br>Denotes display states of the viewport","CenterRight":{"!description":"Indicates state, when the center content as well as a part from the right content is in the viewport.","!category":"enum","!type":"String"},"Center":{"!description":"Indicates state, when only center content is in the viewport.","!category":"enum","!type":"String"},"Left":{"!description":"Indicates state, when only left content is in the viewport.","!category":"enum","!type":"String"},"LeftCenter":{"!description":"Indicates state, when the left content as well as a part from the center content is in the viewport.","!category":"enum","!type":"String"},"!module":"sap/ushell/library","Right":{"!description":"Indicates state, when only right content is in the viewport.","!category":"enum","!type":"String"},"!category":"static class","CenterLeft":{"!description":"Indicates state, when the center content as well as a part from the left content is in the viewport.","!category":"enum","!type":"String"},"RightCenter":{"!description":"Indicates state, when the right content as well as a part from the center content is in the viewport.","!category":"enum","!type":"String"}},"sap.ushell.services.Navigation":{"!description":"The Unified Shell's Navigation service. Allows navigating to \"external\" targets outside of the currently running app (but still in scope of the current Fiori launchpad) or to create links to such external targets.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Navigation = await Container.getServiceAsync(\"Navigation\");\n    // do something with the Navigation service\n  });\n<\/pre>\n\nThe Navigation service currently provides platform independent functionality.\n\nThe service is meant to be used by applications, plugins and shell components.\n\nUsage: <pre>\n  const sHref = await Navigation.getHref({\n    target : {\n      semanticObject: \"Product\",\n      action: \"display\"\n    },\n    params: {\n      \"ProductID\": \"102343333\"\n    }\n  }, oComponent);\n  // do something with the resolved sHref.\n<\/pre>\n\nParameter names and values are case sensitive.\n\nNote that the usage of multi-valued parameters (specifying an array with more than one member as parameter value, e.g. <code>params : { A : [\"a1\", \"a2\"] }<\/code>) is possible with this API but <b>strongly discouraged<\/b>. Depending on the used platform / back-end implementation the target matching might not support multi-value parameters. Furthermore, it is not guaranteed that additional parameter values specified in the back-end configuration are merged with parameter values passed via the Navigation service.\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as UTF-8.\n\nNote that when receiving the values as startup parameters (as part of the component data object) single values are represented as an array of size 1. Above example is returned as <code> deepEqual(getComponentData().startupParameters , { \"ProductID\" : [ \"102343333\" ] } ) <\/code>\n\nMake sure not to store sensitive data within an URL. URLs may appear in a server log, be persisted inside and outside the system.\n\nNote: When constructing large URLs, the URLs may be shortened and persisted on a database server for prolonged time, the actual data is persisted under a key accessible to any User (guessing the key).\n\nThe same restrictions apply for the Application state.","navigate":{"!description":"Triggers a navigation to a specified target outside of the currently running application (e.g. different launchpad application). Invocation will trigger a hash change and subsequent invocation of the target.\n\nIf the navigation target opens in a new window the running application may be retained.\n\nThis API accepts a sap-xapp-state-data parameter that can be used generate a url that can be used to launch an app with certain data, for example: <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { \"sap-xapp-state-data\" : JSON.stringify({ a: \"b\", c: \"d\" }) }\n  }\n<\/pre> Using the arguments as in the example above, a link with a sap-xapp-state parameter that encodes the provided data is returned. The sap-xapp-state-data parameter does not appear in the generated link.\n\nDo <b>not<\/b> use \"#Shell-home\" to navigate to a specific homepage!<br> A proper way for an application to generate a link to return to the home page of the Fiori launchpad is:<br> <code>navigate( { target : { shellHash : \"#\" }})<\/code>","!static":false,"!category":"function","!type":"fn(oTarget: sap.ushell.services.Navigation.Target, oComponent?: sap.ui.core.Component) -> Promise","parameters":{"oTarget":"type: sap.ushell.services.Navigation.Target, description: The navigation target.","oComponent":"type: sap.ui.core.Component, description: A UI5 component, used to logically attach any related app state."}},"getHref":{"!description":"Returns a promise resolving to a URL that launches an app with certain parameters. This API can be used to convert the internal shell hash format into the URL format for use in link tags. The resulting href is fully encoded and cannot be used in other APIs expecting the internal decoded hash.\n\n<pre>\n  const sHref = await Navigation.getHref({\n    target: { shellHash: oLink.intent }\n  }, oComponent);\n  // do something with the resolved sHref.\n<\/pre>\n\nThis API accepts a sap-xapp-state-data parameter that can be used generate a url that can be used to launch an app with certain data, for example: <pre>\n  {\n    target : { semanticObject : \"AnObject\", action: \"action\" },\n    params : { \"sap-xapp-state-data\" : JSON.stringify({ a: \"b\", c: \"d\" }) }\n  }\n<\/pre> Using the arguments as in the example above, a link with a sap-xapp-state parameter that encodes the provided data is returned. The sap-xapp-state-data parameter does not appear in the generated link.\n\nDo <b>not<\/b> use \"#Shell-home\" to navigate to a specific homepage!<br> A proper way for an application to generate a link to return to the home page of the Fiori launchpad is:<br> <code>getHref( { target : { shellHash : \"#\" }})<\/code>","!static":false,"!category":"function","!type":"fn(oTarget?: sap.ushell.services.Navigation.Target, oComponent?: sap.ui.core.Component) -> Promise<string>","parameters":{"oTarget":"type: sap.ushell.services.Navigation.Target, description: The navigation target to transform. When omitted the current hash is used as basis for the calculation.","oComponent":"type: sap.ui.core.Component, description: A UI5 component, used to logically attach any related app state."}},"getLinks":{"!description":"Resolves the given filters to a list of links available to the user.","!static":false,"!category":"function","!type":"fn(aLinkFilter?: [sap.ushell.services.Navigation.LinkFilter]) -> [Promise<sap.ushell.services.Navigation.Link[]]","parameters":{"aLinkFilter":"type: sap.ushell.services.Navigation.LinkFilter[], description: A list of target filters."}},"saveAppStates":{"!description":"persist multiple app states (in future potentially batched in a single roundtrip)","!static":false,"!category":"function","!type":"fn(aAppStates: [Object]) -> Promise","parameters":{"aAppStates":"type: object[], description: Array of application States"}},"!proto":"sap.ushell.services.Service","isInitialNavigation":{"!description":"Checks whether the FLP has performed the first navigation. This method can be used to detect whether the current app was started directly, that is, without a previous navigation to another app, to the FLP home, or another target that adds an entry in the browser history.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"historyBack":{"!description":"Navigates back in history the number of given steps if this is supported by the underlying platform. If no argument is provided it will navigate back 1 step.","!static":false,"!category":"function","!type":"fn(iSteps: Number)","parameters":{"iSteps":"type: int, description: positive integer representing the steps to go back in the history"}},"!category":"class","getAppState":{"!description":"Get an app state object given a key. A lookup for a cross user app state will be performed.","!static":false,"!category":"function","!type":"fn(oAppComponent: sap.ui.core.Component, sAppStateKey: Object | String) -> Promise<sap.ushell.services.AppState.AppState>","parameters":{"oAppComponent":"type: sap.ui.core.Component, description: UI5 component, key will be extracted from component data","sAppStateKey":"type: object|string, description: the application state key."}},"resolveIntent":{"!description":"Resolves the URL hash fragment. This function gets the hash part of the URL and returns the URL of the target application.","!static":false,"!category":"function","!type":"fn(sHashFragment: String) -> Promise<{url:string}>","parameters":{"sHashFragment":"type: string, description: The formatted URL hash fragment in internal format (as obtained by the SAPUI5 hasher service) not as given in <code>location.hash<\/code>)! Example: <code>#SemanticObject-action?P1=V1&P2=A%20B%20C<\/code>"}},"getSemanticObjects":{"!description":"Returns a list of semantic objects of the intents the current user can navigate to.","!static":false,"!category":"function","!type":"fn() -> [Promise<string]"},"!module":"sap/ushell/services/Navigation","getPrimaryIntent":{"!description":"For a given semantic object, this method considers all actions associated with the semantic object and returns the one tagged as a \"primaryAction\". <br>If no inbound tagged as \"primaryAction\" exists, then the intent of the first inbound (after sorting has been applied) matching the action \"displayFactSheet\".\n\nThe primary intent is determined by querying {@link sap.ushell.services.Navigation#getLinks} with the given semantic object and optional parameter. <br>Then the resulting list is filtered to the outcome that a single item remains.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String, oLinkFilter?: sap.ushell.services.Navigation.LinkFilter) -> Promise<sap.ushell.services.Navigation.Link>","parameters":{"oLinkFilter":"type: sap.ushell.services.Navigation.LinkFilter, description: A target filter.","sSemanticObject":"type: string, description: The semantic object."}},"!helpDescription":"The Unified Shell's Navigation service. Allows navigating to \"external\" targets outside of the currently running app (but still in scope of the current Fiori launchpad) or to create links to such external targets.\n\n<b>Note:<\/b> To retrieve a valid instance of this service, it is necessary to call {@link sap.ushell.Container#getServiceAsync}. <pre>\n  sap.ui.require([\"sap/ushell/Container\"], async function (Container) {\n    const Navigation = await Container.getServiceAsync(\"Navigation\");\n    // do something with the Navigation service\n  });\n<\/pre>\n\nThe Navigation service currently provides platform independent functionality.\n\nThe service is meant to be used by applications, plugins and shell components.\n\nUsage: <pre>\n  const sHref = await Navigation.getHref({\n    target : {\n      semanticObject: \"Product\",\n      action: \"display\"\n    },\n    params: {\n      \"ProductID\": \"102343333\"\n    }\n  }, oComponent);\n  // do something with the resolved sHref.\n<\/pre>\n\nParameter names and values are case sensitive.\n\nNote that the usage of multi-valued parameters (specifying an array with more than one member as parameter value, e.g. <code>params : { A : [\"a1\", \"a2\"] }<\/code>) is possible with this API but <b>strongly discouraged<\/b>. Depending on the used platform / back-end implementation the target matching might not support multi-value parameters. Furthermore, it is not guaranteed that additional parameter values specified in the back-end configuration are merged with parameter values passed via the Navigation service.\n\nNote that the application parameter length (including SemanticObject/Action) shall not exceed 512 bytes when serialized as UTF-8.\n\nNote that when receiving the values as startup parameters (as part of the component data object) single values are represented as an array of size 1. Above example is returned as <code> deepEqual(getComponentData().startupParameters , { \"ProductID\" : [ \"102343333\" ] } ) <\/code>\n\nMake sure not to store sensitive data within an URL. URLs may appear in a server log, be persisted inside and outside the system.\n\nNote: When constructing large URLs, the URLs may be shortened and persisted on a database server for prolonged time, the actual data is persisted under a key accessible to any User (guessing the key).\n\nThe same restrictions apply for the Application state.","getStartupAppState":{"!description":"Get the app state object that was used for the current navigation","!static":false,"!category":"function","!type":"fn(oAppComponent: sap.ui.core.Component) -> Promise<sap.ushell.services.AppState.AppState>","parameters":{"oAppComponent":"type: sap.ui.core.Component, description: UI5 component, key will be extracted from component data."}},"getAppStateData":{"!description":"Get data of an AppStates data given a key. A lookup for a cross user app state will be performed.","!static":false,"!category":"function","!type":"fn(aAppStateKeys: [String]) -> [Promise<object]","parameters":{"aAppStateKeys":"type: string[], description: An array of AppState keys."}},"isNavigationSupported":{"!description":"Calculates whether the given navigation targets are supported for the given parameters, form factor etc. . \"Supported\" means that a valid navigation target is configured for the user and for the given device.\n\n<code>isNavigationSupported<\/code> is a test function for {@link sap.ushell.services.Navigation#navigate} and {@link sap.ushell.services.Navigation#getHref}.\n\nExample usage: <pre>\n  const aResult = await oNavigationService.isNavigationSupported([{\n    target: { shellHash: \"SalesOrder-approve?SOId=1234\" }\n  }])\n  if (aResult[0].supported===true){\n      // enable link\n    }\n    else {\n      // disable link\n  }\n<\/pre>","!static":false,"!category":"function","!type":"fn(aTargets: [sap.ushell.services.Navigation.Target], oComponent?: sap.ui.core.Component) -> Promise<Array<Array<{supported:boolean}>>","parameters":{"oComponent":"type: sap.ui.core.Component, description: The root component of the application.","aTargets":"type: sap.ushell.services.Navigation.Target[], description: A list of navigation targets to be checked."}},"backToPreviousApp":{"!description":"Attempts to use the browser history to navigate to the previous app.\n\nA navigation to the Fiori launchpad Home is performed when this method is called on a first navigation. In all other cases, this function simply performs a browser back navigation.\n\nNote that the behavior of this method is subject to change and therefore it may not yield to the expected results especially on mobile devices where \"back\" is the previous inner-app state if these are put into the history!","!static":false,"!category":"function","!type":"fn() -> Promise"},"createEmptyAppState":{"!description":"Creates an empty app state object which acts as a parameter container for navigation.","!static":false,"!category":"function","!type":"fn(oAppComponent: sap.ui.core.Component, bTransientEnforced: Boolean, sPersistencyMethod: String, oPersistencySettings: Object) -> Promise<sap.ushell.services.AppState.AppState>","parameters":{"oAppComponent":"type: sap.ui.core.Component, description: A UI5 component used as context for the app state.","bTransientEnforced":"type: boolean, description: If set to <code>true<\/code> the appstate is not persisted on the backend. If set to <code>false<\/code> or <code>undefined<\/code> the persistency location is determined by the global ushell configuration.","oPersistencySettings":"type: object, description: Persistency settings.","sPersistencyMethod":"type: string, description: See sap/ushell/services/appstate/AppStatePersistencyMethod for possible values. Support depends on the used platform."}}},"sap.ushell.services.Message_obj":{"!type":"fn()","prototype":"sap.ushell.services.Message"}}}