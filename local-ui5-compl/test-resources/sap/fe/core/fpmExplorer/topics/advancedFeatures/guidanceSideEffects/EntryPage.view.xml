<mvc:View
	id="application-product"
	height="100%"
	controllerName="sap.fe.core.fpmExplorer.guidanceSideEffects.EntryPage"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:f="sap.ui.layout.form"
	xmlns:fe="sap.fe.macros"
	xmlns:code="sap.ui.codeeditor"
>
	<Page>
		<content>
			<Text
				class="sapUiSmallMargin"
				text="If a user changes the content of a field or performs another activity, this change can potentially influence other fields on the UI. This system behavior is called a side effect."
			/>

			<Panel headerText="Side Effect Annotation Elements" expandable="true" expanded="true">
				<Text
					class="sapUiTinyMarginBeginEnd"
					text="For a side effect annotation, the following properties are supported by SAP Fiori elements for OData V4:"
				/>
				<Panel>
					<Table id="SideEffectsTable" items="{path:'/SideEffectsProperties'}">
						<columns>
							<Column>
								<Text text="Property" />
							</Column>
							<Column>
								<Text text="Type" />
							</Column>
							<Column>
								<Text text="Description" />
							</Column>
						</columns>
						<items>
							<ColumnListItem vAlign="Middle">
								<cells>
									<Text text="{Property}" wrapping="false" />
									<Text text="{PropertyType}" wrapping="false" />
									<Text text="{Description}" />
								</cells>
							</ColumnListItem>
						</items>
					</Table>
				</Panel>
				<Panel
					headerText="Usage of * in 'TargetProperties' of a Side Effects Annotation"
					width="auto"
					class="sapUiResponsiveMargin"
				>
					<Text
						class="sapUiTinyMargin"
						text="'TargetProperties' are defined as a collection of strings. For 'TargetProperties', a property path may end with a '*' segment. With such a segment ending, the side effect can target all structural properties that are directly reachable via the property path. Navigation properties are excluded, unless you list them explicitly.&#13;&#10;
					Examples of 'TargetProperties' with a '*' segment:"
					/>
					<Table id="TargetPropertiesTable" items="{path:'/TargetPropertiesSample'}">
						<columns>
							<Column>
								<Text text="'TargetProperties' Example" />
							</Column>
							<Column>
								<Text text="Side Effect Target" />
							</Column>
						</columns>
						<items>
							<ColumnListItem vAlign="Middle">
								<cells>
									<Text text="{TargetProperties}" wrapping="false" />
									<Text text="{Description}" />
								</cells>
							</ColumnListItem>
						</items>
					</Table>
				</Panel>
			</Panel>

			<Panel headerText="1.) Side Effect with Single Source Property" expandable="true">
				<Text
					class="sapUiTinyMarginBeginEnd"
					text="If you define one source property, the side effect request is sent immediately after the property was changed."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Enter a value in the field 'Single Source Property'.&#13;&#10;When the input focus is set outside the input field (e.g. by pressing the tab key), the side effect is triggered and the target property is updated.&#13;&#10;
						Additionally, this updates the property 'fieldControlProperty1' in a custom back-end handler. The property is used for toggling the input readiness of the field 'Target Property 1b'."
					/>
					<VBox>
						<f:Form>
							<f:layout>
								<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<fe:FormElement metaPath="sourceProperty1" id="formElementSingleSourceProperty" />
										<fe:FormElement metaPath="targetProperty1a" id="formElementTargetProperty1a" />
										<fe:FormElement metaPath="targetProperty1b" id="formElementTargetProperty1b" />
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect1" selectedKey="codeSideEffectSingleSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectSingleSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectSingleSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectSingleSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="2.) Side Effect with Trigger Action" expandable="true">
				<Text
					class="sapUiTinyMargin"
					text="If you define an additional trigger action, it is always issued before the GET request for 'TargetProperties' and/or 'TargetEntities' defined with the side effect.&#13;&#10;
					The action is only called when the side effect source property is changed. In this example, the called action implements the update logic for the defined side effect target."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Enter a value in the field 'Source Property 2'.&#13;&#10;When the input focus is set outside the input field (e.g. by pressing the tab key), the trigger action of the side effect is issued and the target property is updated.&#13;&#10;"
					/>
					<VBox>
						<f:Form>
							<f:layout>
								<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<fe:FormElement metaPath="sourceProperty2" id="formElementSourceProperty2" />
										<fe:FormElement metaPath="targetProperty2" id="formElementTargetProperty2" />
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect2" selectedKey="codeSideEffectTriggerActionCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectTriggerActionCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectTriggerActionXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectTriggerAction"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="3.) Side Effect with Multiple Source Properties" expandable="true">
				<Text
					class="sapUiTinyMargin"
					text="By configuring a side effect with multiple source properties, a virtual field group is defined.&#13;&#10;
					The side effect is only requested when any of the source properties are changed â€“ provided that the focus from the input field is set outside the virtual field group. The side effect is usually implemented in a trigger action and not during the update of any source property. This ensures the logic runs only once the virtual field group was left."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Enter a value in both fields 'Source Property 3a' and 'Source Property 3b'.&#13;&#10;When the input focus is set outside the virtual field group (e.g. by pressing the tab key), for instance, on 'Other Property 3c', the trigger action is requested and the target property is updated."
					/>
					<fe:Form metaPath="@com.sap.vocabularies.UI.v1.Facets/0" id="SourceGroup" />
					<fe:Form metaPath="@com.sap.vocabularies.UI.v1.Facets/1" id="TargetGroup" />
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect3" selectedKey="codeSideEffectMultiSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectMultiSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectMultiSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectMultiSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="4.) Side Effect on a Checkbox" expandable="true">
				<Text
					class="sapUiTinyMarginTopBottom"
					text="Properties of type 'Boolean' are displayed as a checkbox on the UI.&#13;&#10;By defining a side effect with the Boolean property as the source property, the side effect is triggered immediately when the checkbox is selected."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Select the checkbox 'Boolean Source Property'. This updates the property 'fieldControlProperty2' in a custom back-end handler.&#13;&#10;The property is used for toggling the input readiness of the field 'Target Property 4'. The value for 'fieldControlProperty2' is requested via a side effect."
					/>
					<VBox>
						<f:Form>
							<f:layout>
								<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<fe:FormElement metaPath="sourceProperty4" id="formElementSourceProperty4" />
										<fe:FormElement metaPath="targetProperty4" id="formElementTargetProperty4" />
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect4" selectedKey="codeSideEffectBooleanSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectBooleanSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectBooleanSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectBooleanSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="5.) Side Effect on a Source Entity" expandable="true">
				<Text
					class="sapUiTinyMargin"
					text="You can define one or several entity paths in the side effect annotation property 'SourceEntities'.&#13;&#10;An empty 'SourceEntities' path implies the annotated entity itself.&#13;&#10; The side effect GET request is issued immediately after any property belonging to any of the paths defined in 'SourceEntities' was changed."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Enter a different price in one of the table lines and change the input field focus. &#13;&#10; The recalculated value for 'Total Amount' is requested via a GET request."
					/>
					<VBox>
						<f:Form>
							<f:layout>
								<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<fe:FormElement metaPath="totalAmount" id="formElementTotalAmount" />
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
						<Panel headerText="Source Entity Items">
							<fe:Table metaPath="items/@com.sap.vocabularies.UI.v1.LineItem#sample5" id="LineItemTableSourceEntity" />
						</Panel>
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect5" selectedKey="codeSideEffectSourceEntityCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectSourceEntityCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectSourceEntityXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectSourceEntity"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="6.) Side Effect on a Bound Action (with Operation Control)" expandable="true">
				<Text
					class="sapUiTinyMargin"
					text="If an action applies changes to an entity, these changes are only reflected on the UI after adding a side effect annotation to that action.&#13;&#10;
					Please note that there are no 'SourceProperties' or 'SourceEntities' to be defined for side effects on actions, as the action itself is the source.&#13;&#10;
					The OData binding parameter is defined along with the side effect annotation. In case of a side effect on an action, the OData binding parameter is required in order to refer to the fields of the entity which are to be updated.&#13;&#10;
					Property paths defined for the side effect property 'TargetProperties' and/or 'TargetEntities' must be defined relative to this binding parameter.&#13;&#10;"
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Trigger the bound action by clicking the button. The values shown in the field group are updated via an action-based side effect. &#13;&#10;
						The target property of the side effect is always annotated as a string. The example uses the special character '*' as the last path segment, ensuring all directly reachable properties of the annotated entity are updated.&#13;&#10;
						In this example, the annotated entity is represented by the OData binding parameter alias '_it', which is used as the preceding path in 'TargetProperties'.&#13;&#10;
						To enable the action button, an additional 'OperationAvailable' annotation with a path expression referring to a Boolean property is defined on the action.&#13;&#10;
						Depending on the checkbox selection state, the Boolean property is set to true or false."
					/>
					<f:Form>
						<f:layout>
							<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
						</f:layout>
						<f:formContainers>
							<f:FormContainer>
								<f:formElements>
									<f:FormElement>
										<Button
											text="Increase Number"
											class="sapUiTinyMargin"
											width="10em"
											press="onPress"
											enabled="{= ${OperationAvailable}}"
										/>
									</f:FormElement>
									<f:FormElement>
										<fe:Form
											contextPath="/RootEntity"
											metaPath="@com.sap.vocabularies.UI.v1.Facets#OperationAvailable/0"
											id="Sample6Group1"
										/>
									</f:FormElement>
									<f:FormElement>
										<fe:Form
											contextPath="/RootEntity"
											metaPath="@com.sap.vocabularies.UI.v1.Facets#complexProperty/0"
											id="Sample6Group2"
										/>
									</f:FormElement>
								</f:formElements>
							</f:FormContainer>
						</f:formContainers>
					</f:Form>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect6" selectedKey="codeSideEffectActionCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectActionCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectActionXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor class="sapUiTinyMargin" id="codeSideEffectAction" type="red" lineNumbers="false" editable="false" />
				</Panel>
			</Panel>

			<Panel headerText="7.) Side Effect on an Unbound Action" expandable="true">
				<Text
					class="sapUiTinyMargin"
					text="An unbound actions can have side effects annotated on it.&#13;&#10;
					Please note that, as the action is not bound to any context, the underlying side effects definition has to use absolute paths.&#13;&#10;
					For instance, upon completion of an unbound action that influences all entities of a list, this entity list should be refreshed so that the new entity appears in the list."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Trigger the unbound action by clicking the 'Table Refresh' button.&#13;&#10;
						The ubound action triggers its annotated side effect.&#13;&#10;
						The side effect execution triggers the refresh of the entity 'RootEntity'."
					/>
					<VBox>
						<f:Form>
							<f:layout>
								<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
							</f:layout>
						</f:Form>
						<Panel headerText="Root Entity Items">
							<fe:Table
								contextPath="/RootEntity"
								metaPath="@com.sap.vocabularies.UI.v1.LineItem#sample7"
								id="LineItemTableRefresh"
							/>
						</Panel>
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect" selectedKey="codeSideEffectUnBoundActionCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectUnBoundActionCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectUnBoundActionXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectUnBoundAction"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel
				headerText="8.) Side Effect for Refreshing Data of an Entity &amp; for Invalidating a Cached Value Help"
				expandable="true"
			>
				<Text
					class="sapUiTinyMargin"
					text="You can define one or several navigation property paths and/or absolute paths (the latter starting with the entity container) for the side effect property 'TargetEntities'.&#13;&#10;
					An empty path implies a request to the annotated entity itself, including its associations. Please be aware that this might have an impact on performance.&#13;&#10;
					Value lists are cached during runtime for better performance. They can be refreshed by defining an absolute side effect with the value list collection as the target."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Select a business partner via the value help. This refreshes the data from the associated entity shown in the field group."
					/>
					<VBox>
						<f:Form>
							<f:layout>
								<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<fe:FormElement metaPath="BusinessPartnerID" id="formElementBusinessPartnerID" />
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.Facets#BusinessPartnerAddress/0" id="Sample7Group" />
						<f:Form>
							<f:layout>
								<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<f:FormElement>
											<Button
												text="Delete Business Partner"
												press="onDeleteBusinessPartner"
												enabled="{= ${businessPartner/FullName} !== null}"
											/>
										</f:FormElement>
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
						<Text
							class="sapUiTinyMargin"
							text="Click the button in order to delete the selected business partner ID and associated business partner.&#13;&#10;
							The cached value help of the field 'Business Partner ID' is refreshed by defining a side effect on the delete action with an absolute path in the property 'TargetEntities', pointing to the value list collection.&#13;&#10;
							 The field 'Business Partner ID' itself is refreshed by adding '_it/BusinessPartnerID' (using the OData binding parameter as a prefix) into the side effect property 'TargetProperties'.&#13;&#10;
							 This also ensures that the business partner address fields are refreshed via the first side effect definition which has 'BusinessPartnerID' defined in the property 'SourceProperties'."
						/>
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect7" selectedKey="codeSideEffectTargetEntityCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectTargetEntityCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectTargetEntityXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectTargetEntity"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="9.) Side Effect with an Absolute Target Entity Path" expandable="true">
				<Text
					class="sapUiTinyMargin"
					text="Some entities requiring a complete refresh on the UI might not be referred by an association.&#13;&#10;
					These entities can be addressed in the side effect annotation property 'TargetEntities' by defining an absolute path, going via the service entity container."
				/>
				<Panel headerText="Example" width="auto" class="sapUiResponsiveMargin">
					<Text
						class="sapUiTinyMargin"
						text="Click the button 'Start'. Clicking on 'Round' updates the duration and adds a new entry to the table.&#13;&#10;
						The table is refreshed via a side effect defining the target entity with an absolute path."
					/>
					<f:Form>
						<f:layout>
							<f:ColumnLayout columnsM="2" columnsL="3" columnsXL="4" labelCellsLarge="12" />
						</f:layout>
						<f:formContainers>
							<f:FormContainer>
								<f:formElements>
									<f:FormElement>
										<Button
											text="Round"
											press="onAddRound"
											enabled="{= ${/EntitiesSingleton/BooleanProperty} === true}"
										/>
										<Button
											text="Start"
											press="onStartRound"
											enabled="{= ${/EntitiesSingleton/BooleanProperty} === false}"
										/>
										<Button
											text="Stop"
											press="onStopRound"
											enabled="{= ${/EntitiesSingleton/BooleanProperty} === true}"
										/>
										<Button
											text="Clear"
											press="onClearRounds"
											enabled="{= ${/EntitiesSingleton/BooleanProperty} === false}"
										/>
									</f:FormElement>
								</f:formElements>
							</f:FormContainer>
						</f:formContainers>
					</f:Form>
					<Panel headerText="Absolute Entity Items">
						<fe:Table
							contextPath="/AbsoluteEntity"
							metaPath="@com.sap.vocabularies.UI.v1.LineItem"
							id="LineItemTableAbsoluteEntity"
						/>
					</Panel>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderSideEffect8" selectedKey="codeSideEffectAbsolutePathCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeSideEffectAbsolutePathCDS" />
							<IconTabFilter text="XML Annotation" key="codeSideEffectAbsolutePathXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeSideEffectAbsolutePath"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>
		</content>
	</Page>
</mvc:View>
