<mvc:View
	id="application-product"
	height="100%"
	controllerName="sap.fe.core.fpmExplorer.guidanceValueHelp.EntryPage"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:f="sap.ui.layout.form"
	xmlns:fe="sap.fe.macros"
	xmlns:code="sap.ui.codeeditor"
>
	<Page>
		<content>
			<Text
				class="sapUiSmallMargin"
				text="A value help enables users to choose one or more values from a list, or to search for and select values in a dialog view. The selected values are automatically added as input parameters in the corresponding input field."
			/>
			<Panel headerText="Documentation links" expandable="true" expanded="false">
				<Text class="sapUiTinyMarginBeginEnd" text="OData vocabularies" />
				<Panel>
					<Table id="ValueHelpDocumentation" items="{path:'/ValueListDocumentation'}">
						<columns>
							<Column>
								<Text text="Description" />
							</Column>
							<Column>
								<Text text="Link" />
							</Column>
						</columns>
						<items>
							<ColumnListItem vAlign="Middle">
								<cells>
									<Text text="{Description}" wrapping="false" />
									<Text text="{Link}" />
								</cells>
							</ColumnListItem>
						</items>
					</Table>
				</Panel>
			</Panel>

			<Panel headerText="ValueList Annotation Elements" expandable="true" expanded="false">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="The annotation needed to support a value help is &lt;strong&gt;&lt;em&gt;com.sap.vocabularies.Common.v1.ValueList&lt;/em&gt;&lt;/strong&gt; and it's type &lt;strong&gt;&lt;em&gt;ValueListType&lt;/em&gt;&lt;/strong&gt; provides the following properties:"
				/>
				<Panel>
					<Table id="ValueHelpTable" items="{path:'/ValueListProperties'}">
						<columns>
							<Column>
								<Text text="Property" />
							</Column>
							<Column>
								<Text text="Type" />
							</Column>
							<Column>
								<Text text="Description" />
							</Column>
						</columns>
						<items>
							<ColumnListItem vAlign="Middle">
								<cells>
									<Text text="{Property}" wrapping="false" />
									<Text text="{PropertyType}" wrapping="false" />
									<Text text="{Description}" />
								</cells>
							</ColumnListItem>
						</items>
					</Table>
				</Panel>
			</Panel>

			<Panel headerText="1.) Value Help with a Select Control" expandable="true" expanded="false">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="This basic value help allows a single selection from a predefined list.&#13;&#10;
				The annotation term &lt;strong&gt;&lt;em&gt;Common.ValueListWithFixedValues&lt;/em&gt;&lt;/strong&gt; sets the valuehelp type 'select control'."
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br/&gt;
						Select the select control menu’s arrow on the right side of the input field.&lt;br/&gt;
						The select control opens and provides a list of possible input values for the field.&lt;br/&gt;
						Click on a list item. The item key is entered into the input field and the select control is closed.
						"
					/>
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Feature 'Text Arrangement':&lt;/strong&gt;&lt;br/&gt;
						'Value Help Field 1_1' is annotated with a value list entity that has no text annotated at the corresponding property BusinessPartner, therefore the value list parameters key and description are displayed in separate columns.&lt;br/&gt;
						'Value Help Field 1_2' is annotated with a value list entity that does have the annotations 'Text' and 'TextArrangement' set to 'TextFirst'.&lt;br/&gt;
						&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; For the dropdown field help the text arrangement annotation is optional, as the default value is 'TextFirst'. But you can change the display format if you set the annotation ‘TextArrangement’ to another value.&lt;br/&gt;
						&lt;strong&gt;&lt;em&gt;If you specify a 'TextArrangement' we highly recommend to specify the same 'TextArrangement' for the property of your field as well for the corresponding property of the value help entity.&lt;/em&gt;&lt;/strong&gt;
						"
					/>
					<VBox>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#Example1" id="myForm" />
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader
						id="iconTabHeaderValueHelp1"
						selectedKey="codeVHFixedValuesHelpSingleSelectSourceCDS"
						select=".onSelectTab"
					>
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeVHFixedValuesHelpSingleSelectSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeVHFixedValuesHelpSingleSelectSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeVHFixedValuesHelpSingleSelectSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="2.) Value Help with a Dialog Control" expandable="true">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="This basic value help allows a single selection from a value help dialog.&lt;br/&gt;
				This is the default value help type if there is no annotation &lt;strong&gt;&lt;em&gt;Common.ValueListWithFixedValues&lt;/em&gt;&lt;/strong&gt; for the field."
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br/&gt;
						Select the icon on the right side of the input field. The dialog opens and provides a list of possible input values in table format.&lt;br/&gt;
						Click on a table line. The item key is entered into the input field and the dialog is closed.&lt;br/&gt;"
					/>
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="'Value Help Field 2_1' is annotated with a value list entity that has no text arrangement annotated to the corresponding property BusinessPartner, therefore the value list parameters key and description are displayed in separate columns.&lt;br/&gt;
						'Value Help Field 2_2' is annotated with a value list entity that does have a annotation 'Text' and 'TextArrangement' set to 'TextFirst' at the correponding property BusinessPartner. Therefore the value list parameters key and description are displayed in one column."
					/>
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; In contrast to the dropdown field help (Example 1, Value Help Field 1_2), the text arrangement annotation is &lt;strong&gt;NOT&lt;/strong&gt; optional.&lt;br/&gt;
						You can change the display format if you set the annotation 'TextArrangement' to another value.&lt;br/&gt;
						"
					/>
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Feature 'Typeahead':&lt;/strong&gt;&lt;br/&gt;
						By default, typeahead is active if an input field is annotated with &lt;strong&gt;&lt;em&gt;Common.ValueList&lt;/em&gt;&lt;/strong&gt;.
						When you start typing, a table opens containing those items from the value list entity which fits to the “searchterm” you entered. The backend might also consider properties which are not visible in the value help but be a part of the value help entity. You can then select one of the table rows to specify the input value.&lt;br/&gt;
						For field 'Value Help Field 2_1' the visible table columns are determined with annotation &lt;strong&gt;&lt;em&gt;UI.Importance: High&lt;/em&gt;&lt;/strong&gt; at the related property in the value list definition of the field.&lt;br/&gt;
						Typeahead can be deactivated by annotating the value list entity with &lt;strong&gt;&lt;em&gt;Capabilities.SearchRestrictions.Searchable : false&lt;/em&gt;&lt;/strong&gt;.&lt;br/&gt;
						Therefore, the typeahead in 'Value Help Field 2_3' is not available since the associated entity 'BusinessPartnerAddress3' was annotated with &lt;strong&gt;&lt;em&gt;Capabilities.SearchRestrictions.Searchable: false&lt;/em&gt;&lt;/strong&gt;.
					"
					/>
					<VBox>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#Example2" id="myForm2" />
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderValueHelp2" selectedKey="codeVHDialogSingleSelectSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeVHDialogSingleSelectSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeVHDialogSingleSelectSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeVHDialogSingleSelectSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="3.) Value Help with Value Validation" expandable="true">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="This example demonstrates the validation feature for a field with a value help.&lt;br/&gt;
				'Value Help Field 3_1' is annotated with &lt;strong&gt;&lt;em&gt;Common.ValueListForValidation&lt;/em&gt;&lt;/strong&gt;.
				Therefore, the input value is validated against the data from the value list entity when leaving the field.&lt;br/&gt;
				"
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br/&gt;
						Enter any value in 'Value Help Field 3_1' and either use the tab key or the mouse to remove the focus from the field.&lt;br/&gt;
						If the value entered is not found in the value help data set, the field is marked with a red frame. If you now set the foucs back to the field you see a error message below the field, indicating that the value does not exist. &lt;br/&gt;
						"
					/>
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt;
						In the &lt;em&gt;Select Control&lt;/em&gt; field help (Example 1, Value Help Field 1_1 and Value Help Field 1_2), validation is done by default, so the annotation &lt;strong&gt;&lt;em&gt;Common.ValueListForValidation&lt;/em&gt;&lt;/strong&gt; is &lt;strong&gt;NOT&lt;/strong&gt; necessary.&lt;br/&gt;
						"
					/>
					<VBox>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#Example2a" id="myForm2a" />
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderValueHelp2a" selectedKey="codeVHValidationSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeVHValidationSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeVHValidationSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor class="sapUiTinyMargin" id="codeVHValidationSource" type="red" lineNumbers="false" editable="false" />
				</Panel>
			</Panel>

			<Panel headerText="4.) Context-Dependent Value Help" expandable="true">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="Some scenarios require different value help dialogs based on a context. This context is determined by a property other than the annotated property.&lt;br/&gt;
					You can use the annotation term &lt;strong&gt;&lt;em&gt;Common.ValueListRelevantQualifiers&lt;/em&gt;&lt;/strong&gt; to configure the behavior of the value help if you are using more than one value list."
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br/&gt;
						Select the icon on the right side of the input field 'Value Help Field 4_2'. A dialog opens. Close the value help.&lt;br/&gt;
						Select item &lt;strong&gt;17100001&lt;/strong&gt; or &lt;strong&gt;17100006&lt;/strong&gt; from the dropdown value list of the field 'Value Help Field 4_1'.&lt;br/&gt;
						When you now open the value help for field 'Value Help Field 4_2' again you will notice that now the content visualization of the value help is different than before.&lt;br/&gt;
						Select another item (not the same as before) from the dropdown value list of the field 'Value Help Field 4_1'. Now the value help of field 'Value Help Field 4_2' displays the initial variant again.
						"
					/>
					<VBox>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#Example3" id="myForm3" />
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderValueHelp3" selectedKey="codeVHContextDependentSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeVHContextDependentSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeVHContextDependentSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeVHContextDependentSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="5.) Multiple Value Help Dialogs" expandable="true">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="Some scenarios require more than one value help.&lt;br/&gt;
					You can use a collection of ValueList annotations to select a value help variant from a dropdown list in a value help dialog."
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br/&gt;
						Select the icon on the right side of the input field 'Value Help Field 5_1'. A dialog opens.&lt;br/&gt;
						Select the dropdown menu’s arrow at the top of the dialog. Select an item from the dropdown list to change the value help in the dialog.&lt;br/&gt;
						"
					/>
					<VBox>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#Example4" id="myForm4" />
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderValueHelp4" selectedKey="codeVHMultiValueSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeVHMultiValueSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeVHMultiValueSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor class="sapUiTinyMargin" id="codeVHMultiValueSource" type="red" lineNumbers="false" editable="false" />
				</Panel>
			</Panel>

			<Panel headerText="6.) Control the Content of the Dropdown List if You’re Using Multiple Value Help Dialogs" expandable="true">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="Some scenarios require more than one multiple value help compilation.&lt;br/&gt;
					Combine techniques from examples 3 and 4 above to define the content of the value help dropdown list based on a context. This context is determined by a property other than the annotated property.&lt;br/&gt;
					You can use the annotation term &lt;strong&gt;&lt;em&gt;Common.ValueListRelevantQualifiers&lt;/em&gt;&lt;/strong&gt; to group collections of value lists in distinct compilations that are presented dependent on the value of another field.
					"
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br/&gt;
						Select the dropdown menu’s arrow on the right side of the input field 'Value Help Field 6_1' and select item '17100001'.&lt;br/&gt;
						Now open the value help of the input field 'Value Help Field 6_2'. When you now open the value help again you will notice that the value help compilation in the dropdown list consists of 'Business Partner Address 2' and 'Business Partner Address 3'.&lt;br/&gt;&lt;br/&gt;
						Open the value help of input field 'Value Help Field 6_1' again and select item '17100006'.&lt;br/&gt;
						Now the value help compilation of input field 'Value Help Field 6_2' consists of 'Business Partner Address 3' and 'Business Partner Address 4'.&lt;br/&gt;&lt;br/&gt;
						If you select any other value in input field 'Value Help Field 6_1', this results in the default value help 'Business Partner Address' being automatically selected for 'Value Help Field 6_2'.
						"
					/>
					<VBox>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#Example5" id="myForm5" />
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderValueHelp5" selectedKey="codeVHControlMultiValueSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeVHControlMultiValueSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeVHControlMultiValueSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeVHControlMultiValueSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="7.) Mapping of In/Out Parameters in the ValueList Annotation" expandable="true">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="This example provides information about the structure of the ValueList annotation and how the In/Out mappings there allow linking between fields of the main entity and fields of the value help entity.&lt;br/&gt;
					"
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;
					&lt;strong&gt;1. Out-Mapping&lt;/strong&gt;&lt;br/&gt;
					Open the value help dialog of the input field 'Account ID' and select an item from the value list. The dialog is closed and the key of the selected item is displayed in the input field.&lt;br/&gt;
					Note that the name of the selected item is also displayed in the field 'Account Full Name'.&lt;br/&gt;
					This is because of the annotation ValueListParameterOut&lt;br/&gt;
					...&lt;br/&gt;
					&lt;pre&gt;
						$Type            : 'Common.ValueListParameterOut',&lt;br/&gt;
						LocalDataProperty: valueHelpField7_2,&lt;br/&gt;
						ValueListProperty: 'FullName',
					&lt;/pre&gt;
					...&lt;br/&gt;
					in the ValueList definition for the field valueHelpField7_1.&lt;/br&gt;
					The parameters 'CityName' and 'Country' are annotated with ValueListParameterDisplayOnly and are therefore only displayed as a column in the table of the value list dialog.&lt;br/&gt;&lt;br/&gt;
					&lt;strong&gt;2. In-Mapping&lt;/strong&gt;&lt;br/&gt;
					Open the value help dialog of the input field 'Account ID' and select item 'ACC-5'. Then open the value help of the input field 'Business Partner'.&lt;br/&gt;
					Note that the value help table is now filtered with the value of the selected account.&lt;br/&gt;
					Press the 'Show Filters' button in the table header. Note that the filter field 'Account' is added to the filter bar and is prefilled with the selected account from the field valueHelpField7_1.&lt;br/&gt;
					This is because of the annotation ValueListParameterIn&lt;br/&gt;
					...&lt;br/&gt;
					&lt;pre&gt;
						$Type            : 'Common.ValueListParameterIn',&lt;br/&gt;
						LocalDataProperty: valueHelpField7_1,&lt;br/&gt;
						ValueListProperty: 'Account',&lt;br/&gt;
					&lt;/pre&gt;
						...&lt;br/&gt;
					in the ValueList definition for the field valueHelpField7_3. &lt;br/&gt;&lt;br/&gt;
					"
					/>
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="
						&lt;strong&gt;3. In/Out-Mapping&lt;/strong&gt;&lt;br/&gt;
						Open the value help dialog of the input field 'Partner Function'.&lt;br/&gt;
						Press the 'Show Filters' button in the table header.&lt;br/&gt;
						Note that the filter fields 'Account' and 'BusinessPartner' are added to the filter bar and are prefilled with the corresponding values.&lt;br/&gt;
						In addition, the column 'Business Partner' is added to the value list table.&lt;br/&gt;
						This is because of the following annotations in the ValueList definition for field valueHelpField7_4:&lt;br/&gt;&lt;br/&gt;
					...&lt;br/&gt;
					&lt;pre&gt;
							$Type            : 'Common.ValueListParameterIn',&lt;br/&gt;
							LocalDataProperty: valueHelpField7_1,&lt;br/&gt;
							ValueListProperty: 'Account',
					&lt;/pre&gt;
					...&lt;br/&gt;&lt;br/&gt;
						and&lt;br/&gt;&lt;br/&gt;
					...&lt;br/&gt;
					&lt;pre&gt;
							$Type            : 'Common.ValueListParameterInOut',&lt;br/&gt;
							LocalDataProperty: valueHelpField7_3,&lt;br/&gt;
							ValueListProperty: 'BusinessPartner',
					&lt;/pre&gt;
					...&lt;br/&gt;&lt;br/&gt;

						Clear the filter field 'Business Partner' and press the 'Go' button. Select the row with business partner '17100007'.&lt;br/&gt;
						Note that after the value help is closed the value in the field 'Business Partner' has changed to '17100007' and the field 'Partner Function' is filled with 'Ship-to Party'.
					"
					/>
					<VBox>
						<fe:Form metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#Example7" id="myForm7" />
					</VBox>
				</Panel>
				<Panel headerText="Annotations" width="auto" class="sapUiResponsiveMargin">
					<IconTabHeader id="iconTabHeaderValueHelp7" selectedKey="codeVHInOutMappingsSourceCDS" select=".onSelectTab">
						<items>
							<IconTabFilter text="CAP CDS Annotation" key="codeVHInOutMappingsSourceCDS" />
							<IconTabFilter text="XML Annotation" key="codeVHInOutMappingsSourceXML" />
						</items>
					</IconTabHeader>
					<code:CodeEditor
						class="sapUiTinyMargin"
						id="codeVHInOutMappingsSource"
						type="red"
						lineNumbers="false"
						editable="false"
					/>
				</Panel>
			</Panel>

			<Panel headerText="8.) Side Effect on a Value Help Selection to Update the Value Help Collection" expandable="true">
				<FormattedText
					class="sapUiTinyMarginBeginEnd"
					htmlText="This section provides information about invoking a side effect to update the value help collection if the content of the collection has changed.&lt;br/&gt;
					"
				/>
				<Panel headerText="Examples" width="auto" class="sapUiResponsiveMargin">
					<FormattedText
						class="sapUiTinyMargin"
						htmlText="This use case is demonstrated in chapter 'Usage of Side Effects' in item '7.) Side Effect for Refreshing Data of an Entity &amp; for Invalidating a Cached Value Help'.&lt;br/&gt;
					"
					/>
				</Panel>
			</Panel>
		</content>
	</Page>
</mvc:View>
