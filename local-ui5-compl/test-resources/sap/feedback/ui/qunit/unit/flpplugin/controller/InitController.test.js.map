{"version":3,"file":"InitController.test.js","names":["Environment","___sap_px_pxapi","__exports","pluginInfo","id","version","tenantInfo","configIdentifier","platformType","productName","surveyInvitationDialogCallback","sinon","stub","QUnit","module","beforeEach","tenantId","tenantRole","configUrl","unitId","environment","afterEach","reset","resetBehavior","test","assert","errorInfoStub","Log","migrateStub","PushStateMigrator","returns","initController","InitController","Promise","resolve","init","then","result","equal","ok","calledWith","Constants","ERROR","PUSH_STATE_MIGRATION_FAILED","undefined","COMPONENT","INIT_CONTROLLER","restore","e","reject","originalPhoneValue","Device","system","phone","Object","defineProperty","value","logInfoStub","called","hasOldParametersStub","prototype","initWithOldParametersStub","rawParameters","qualtricsInternalUri","pxApiWrapperInitStub","PxApiWrapper","withArgs","match","object","_args$2$startupConfig","_args$2$startupConfig2","args","getCall","startupConfig","scopeSet","length","SCOPE_SETS","MANUAL","expectedConfigIdentifier","dev","windowSearchLocationStub","Util","configJson","runtimeConfig","useApi","themingConfig","writeToGlobals","logErrorStub","key1","key2","INIT_PARAMS_INCONSISTENT","pxApiWrapper","getUnitIdUrlParamValueStub","parameters","deepEqual","getEnvironmentUrlParamValueStub","resultedScopSet1","resultedScopSet2","resultedScopSet3","resultedScopSet4","resultedScopSet"],"sourceRoot":".","sources":["InitController.test.ts"],"sourcesContent":["import { Environment } from '@sap-px/pxapi';\nimport { ConfigIdentifier, SurveyInvitationDialogCallback, TenantInfo } from '@sap-px/pxapi/dist/api/common/Types';\nimport Log from 'sap/base/Log';\nimport Constants from 'sap/feedback/ui/flpplugin/common/Constants';\nimport { RawStartParameters } from 'sap/feedback/ui/flpplugin/common/Types';\nimport Util from 'sap/feedback/ui/flpplugin/common/Util';\nimport InitController from 'sap/feedback/ui/flpplugin/controller/InitController';\nimport PxApiWrapper from 'sap/feedback/ui/flpplugin/pxapi/PxApiWrapper';\nimport PushStateMigrator from 'sap/feedback/ui/flpplugin/storage/PushStateMigrator';\nimport Device from 'sap/ui/Device';\n// eslint-disable-next-line import/no-unresolved\nimport * as sinon from 'sinon';\n\nexport default () => {\n\tconst pluginInfo = {\n\t\tid: 'pluginId',\n\t\tversion: 'pluginVersion'\n\t};\n\tlet tenantInfo: TenantInfo, configIdentifier: ConfigIdentifier, platformType: string, productName: string;\n\tconst surveyInvitationDialogCallback = sinon.stub();\n\n\tQUnit.module('InitController unit tests', {\n\t\tbeforeEach: function () {\n\t\t\ttenantInfo = {\n\t\t\t\ttenantId: 'foo',\n\t\t\t\ttenantRole: 'bar'\n\t\t\t};\n\t\t\tconfigIdentifier = {\n\t\t\t\tconfigUrl: 'somepxconfigUrl',\n\t\t\t\tunitId: 'SomeUnitId',\n\t\t\t\tenvironment: 'test'\n\t\t\t};\n\t\t\tplatformType = 'QUnit';\n\t\t\tproductName = 'UnitTest';\n\t\t},\n\t\tafterEach: function () {\n\t\t\tsurveyInvitationDialogCallback.reset();\n\t\t\tsurveyInvitationDialogCallback.resetBehavior();\n\t\t}\n\t});\n\n\tQUnit.test('init - shall not initialize PluginController when Push state migration failed', async (assert) => {\n\t\tconst errorInfoStub = sinon.stub(Log, 'error');\n\t\tconst migrateStub = sinon.stub(PushStateMigrator, 'migrate').returns(false);\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init({} as RawStartParameters, {} as SurveyInvitationDialogCallback);\n\n\t\tassert.equal(result, false);\n\t\tassert.ok(errorInfoStub.calledWith(Constants.ERROR.PUSH_STATE_MIGRATION_FAILED, undefined, Constants.COMPONENT.INIT_CONTROLLER));\n\n\t\tmigrateStub.restore();\n\t\terrorInfoStub.restore();\n\t});\n\n\tQUnit.test('init - shall not initialize PluginController when device is Phone', async (assert) => {\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: true });\n\t\tconst logInfoStub = sinon.stub(Log, 'info');\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init({} as RawStartParameters, {} as SurveyInvitationDialogCallback);\n\n\t\tassert.ok(logInfoStub.called);\n\t\tassert.equal(result, false);\n\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t\tlogInfoStub.restore();\n\t});\n\n\tQUnit.test('init - shall initialize PluginController when device is not Phone', async (assert) => {\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: false });\n\t\tconst hasOldParametersStub = sinon.stub(InitController.prototype, 'hasOldParameters' as any).returns(true);\n\t\tconst initWithOldParametersStub = sinon.stub(InitController.prototype, 'initWithOldParameters' as any).returns(Promise.resolve(true));\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init({} as RawStartParameters, {} as SurveyInvitationDialogCallback);\n\n\t\tassert.equal(result, true);\n\n\t\thasOldParametersStub.restore();\n\t\tinitWithOldParametersStub.restore();\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t});\n\n\tQUnit.test('init - shall initialize PluginController with old parameters (embedded config, no scopeSet)', async (assert) => {\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: false });\n\t\tconst rawParameters = {\n\t\t\ttenantId: tenantInfo.tenantId,\n\t\t\ttenantRole: tenantInfo.tenantRole,\n\t\t\tqualtricsInternalUri: 'someUrl',\n\t\t\tplatformType: platformType,\n\t\t\tproductName: productName\n\t\t};\n\t\tconst pxApiWrapperInitStub = sinon.stub(PxApiWrapper.prototype, 'initialize');\n\t\tpxApiWrapperInitStub.withArgs(tenantInfo, undefined, sinon.match.object).returns(Promise.resolve(true));\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init(\n\t\t\trawParameters as RawStartParameters,\n\t\t\tsurveyInvitationDialogCallback as SurveyInvitationDialogCallback\n\t\t);\n\n\t\tassert.equal(result, true);\n\t\tconst args = pxApiWrapperInitStub.getCall(0).args as any;\n\t\tassert.equal(args[2].startupConfig?.scopeSet.length, 1);\n\t\tassert.equal(args[2].startupConfig?.scopeSet[0], Constants.SCOPE_SETS.MANUAL);\n\n\t\tpxApiWrapperInitStub.restore();\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t});\n\n\tQUnit.test('init - shall initialize PluginController with old parameters (embedded config, with scopeSet)', async (assert) => {\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: false });\n\t\tconst rawParameters = {\n\t\t\ttenantId: tenantInfo.tenantId,\n\t\t\ttenantRole: tenantInfo.tenantRole,\n\t\t\tqualtricsInternalUri: 'someUrl',\n\t\t\tplatformType: platformType,\n\t\t\tproductName: productName,\n\t\t\tscopeSet: 'abc, def'\n\t\t};\n\t\tconst pxApiWrapperInitStub = sinon.stub(PxApiWrapper.prototype, 'initialize');\n\t\tpxApiWrapperInitStub.withArgs(tenantInfo, undefined, sinon.match.object).returns(Promise.resolve(true));\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init(\n\t\t\trawParameters as RawStartParameters,\n\t\t\tsurveyInvitationDialogCallback as SurveyInvitationDialogCallback\n\t\t);\n\n\t\tassert.equal(result, true);\n\t\tconst args = pxApiWrapperInitStub.getCall(0).args as any;\n\t\tassert.equal(args[2].startupConfig.scopeSet.length, 3);\n\n\t\tpxApiWrapperInitStub.restore();\n\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t});\n\n\tQUnit.test('init - shall initialize PluginController with new parameters (central config)', async (assert) => {\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: false });\n\t\tconst rawParameters = {\n\t\t\ttenantId: tenantInfo.tenantId,\n\t\t\ttenantRole: tenantInfo.tenantRole,\n\t\t\tconfigUrl: configIdentifier.configUrl,\n\t\t\tunitId: configIdentifier.unitId,\n\t\t\tenvironment: configIdentifier.environment\n\t\t};\n\t\tconst pxApiWrapperInitStub = sinon.stub(PxApiWrapper.prototype, 'initialize');\n\t\tpxApiWrapperInitStub.withArgs(tenantInfo, configIdentifier).returns(Promise.resolve(true));\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init(\n\t\t\trawParameters as RawStartParameters,\n\t\t\tsurveyInvitationDialogCallback as SurveyInvitationDialogCallback\n\t\t);\n\n\t\tassert.equal(result, true);\n\n\t\tpxApiWrapperInitStub.restore();\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t});\n\n\tQUnit.test('init - shall initialize PluginController with new parameters + URL Params (central config)', async (assert) => {\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: false });\n\t\tconst rawParameters = {\n\t\t\ttenantId: tenantInfo.tenantId,\n\t\t\ttenantRole: tenantInfo.tenantRole,\n\t\t\tconfigUrl: configIdentifier.configUrl,\n\t\t\tunitId: configIdentifier.unitId,\n\t\t\tenvironment: configIdentifier.environment\n\t\t};\n\t\tconst expectedConfigIdentifier = {\n\t\t\tconfigUrl: configIdentifier.configUrl,\n\t\t\tunitId: 'abc',\n\t\t\tenvironment: Environment.dev\n\t\t};\n\t\tconst windowSearchLocationStub = sinon.stub(Util, 'getWindowSearchLocation').returns('?sap-px-unitId=ABC&sap-px-env=dev');\n\t\tconst pxApiWrapperInitStub = sinon.stub(PxApiWrapper.prototype, 'initialize');\n\t\tpxApiWrapperInitStub.withArgs(tenantInfo, expectedConfigIdentifier).returns(Promise.resolve(true));\n\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init(\n\t\t\trawParameters as RawStartParameters,\n\t\t\tsurveyInvitationDialogCallback as SurveyInvitationDialogCallback\n\t\t);\n\n\t\tassert.equal(result, true);\n\n\t\twindowSearchLocationStub.restore();\n\t\tpxApiWrapperInitStub.restore();\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t});\n\n\tQUnit.test('init - shall initialize PluginController with new parameters (config json)', async (assert) => {\n\t\tconst configJson = {\n\t\t\tversion: '0.4.0',\n\t\t\tstartupConfig: {\n\t\t\t\tqualtricsInternalUri: 'SomeUrl',\n\t\t\t\tproductName: productName,\n\t\t\t\tplatformType: platformType\n\t\t\t},\n\t\t\truntimeConfig: {\n\t\t\t\tuseApi: true\n\t\t\t},\n\t\t\tthemingConfig: {\n\t\t\t\twriteToGlobals: true\n\t\t\t}\n\t\t};\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: false });\n\t\tconst rawParameters = {\n\t\t\ttenantId: tenantInfo.tenantId,\n\t\t\ttenantRole: tenantInfo.tenantRole,\n\t\t\tconfigJson: configJson\n\t\t};\n\t\tconst pxApiWrapperInitStub = sinon.stub(PxApiWrapper.prototype, 'initialize');\n\t\tpxApiWrapperInitStub.withArgs(tenantInfo, undefined, configJson).returns(Promise.resolve(true));\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init(\n\t\t\trawParameters as RawStartParameters,\n\t\t\tsurveyInvitationDialogCallback as SurveyInvitationDialogCallback\n\t\t);\n\n\t\tassert.equal(result, true);\n\n\t\tpxApiWrapperInitStub.restore();\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t});\n\n\tQUnit.test('init - shall log error when inconsistent parameters provided', async (assert) => {\n\t\tconst originalPhoneValue = Device.system.phone;\n\t\tObject.defineProperty(Device.system, 'phone', { value: false });\n\t\tconst rawParameters = {\n\t\t\ttenantId: tenantInfo.tenantId,\n\t\t\ttenantRole: tenantInfo.tenantRole,\n\t\t\tplatformType: productName,\n\t\t\tproductName: platformType\n\t\t};\n\t\tconst logErrorStub = sinon.stub(Log, 'error');\n\t\tconst pxApiWrapperInitStub = sinon.stub(PxApiWrapper.prototype, 'initialize');\n\t\tpxApiWrapperInitStub.returns(Promise.resolve(true));\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst result = await initController.init(\n\t\t\trawParameters as RawStartParameters,\n\t\t\tsurveyInvitationDialogCallback as SurveyInvitationDialogCallback\n\t\t);\n\n\t\tassert.equal(result, false);\n\t\tassert.ok(logErrorStub.called);\n\n\t\tlogErrorStub.restore();\n\t\tpxApiWrapperInitStub.restore();\n\t\tObject.defineProperty(Device.system, 'phone', { value: originalPhoneValue });\n\t});\n\n\tQUnit.test('initWithNewParameters - shall log error when inconsistent parameters provided', async (assert) => {\n\t\tconst initController = new InitController(pluginInfo);\n\t\tconst logErrorStub = sinon.stub(Log, 'error');\n\t\tconst rawParameters = {\n\t\t\tkey1: 'value1',\n\t\t\tkey2: 'value2'\n\t\t};\n\n\t\tconst result = await initController['initWithNewParameters'](\n\t\t\trawParameters as unknown as RawStartParameters,\n\t\t\tsurveyInvitationDialogCallback as SurveyInvitationDialogCallback\n\t\t);\n\n\t\tassert.equal(result, false);\n\t\tassert.ok(logErrorStub.calledWith(Constants.ERROR.INIT_PARAMS_INCONSISTENT, undefined, Constants.COMPONENT.INIT_CONTROLLER));\n\n\t\tlogErrorStub.restore();\n\t});\n\n\tQUnit.test('get pxApiWrapper - shall return PxApiWrapper', (assert) => {\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tassert.ok(initController instanceof InitController);\n\t\tassert.ok(initController.pxApiWrapper);\n\t});\n\n\tQUnit.test('overwriteWithUrlParameters - shall not overwrite the unitId and environment', (assert) => {\n\t\tconst getUnitIdUrlParamValueStub = sinon.stub(Util, 'getUnitIdUrlParamValue').returns(null);\n\t\tconst parameters = {\n\t\t\tunitId: '123',\n\t\t\tenvironment: 'dev'\n\t\t};\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tinitController['overwriteWithUrlParameters'](parameters as RawStartParameters);\n\n\t\tassert.deepEqual(parameters, {\n\t\t\tunitId: '123',\n\t\t\tenvironment: 'dev'\n\t\t});\n\n\t\tgetUnitIdUrlParamValueStub.restore();\n\t});\n\n\tQUnit.test('overwriteWithUrlParameters - shall not overwrite the unitId and environment', (assert) => {\n\t\tconst getUnitIdUrlParamValueStub = sinon.stub(Util, 'getUnitIdUrlParamValue').returns('123');\n\t\tconst getEnvironmentUrlParamValueStub = sinon.stub(Util, 'getEnvironmentUrlParamValue').returns('dev');\n\t\tconst parameters = {\n\t\t\tunitId: '456',\n\t\t\tenvironment: 'prod'\n\t\t};\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tinitController['overwriteWithUrlParameters'](parameters as RawStartParameters);\n\n\t\tassert.deepEqual(parameters, {\n\t\t\tunitId: '123',\n\t\t\tenvironment: 'dev'\n\t\t});\n\n\t\tgetUnitIdUrlParamValueStub.restore();\n\t\tgetEnvironmentUrlParamValueStub.restore();\n\t});\n\n\tQUnit.test('convertScopeSet - shall return the appropriate (new) scope set values for given (old) scope set string', (assert) => {\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst resultedScopSet1 = initController['convertScopeSet']('featurePush, dynamicPush, somethingElse');\n\t\tassert.deepEqual(resultedScopSet1, ['appPush', 'timedPush', 'somethingElse', 'manual']);\n\n\t\tconst resultedScopSet2 = initController['convertScopeSet']('somethingElse');\n\t\tassert.deepEqual(resultedScopSet2, ['somethingElse', 'manual']);\n\n\t\tconst resultedScopSet3 = initController['convertScopeSet'](undefined);\n\t\tassert.deepEqual(resultedScopSet3, [Constants.SCOPE_SETS.MANUAL]);\n\n\t\tconst resultedScopSet4 = initController['convertScopeSet']('');\n\t\tassert.deepEqual(resultedScopSet4, [Constants.SCOPE_SETS.MANUAL]);\n\t});\n\n\tQUnit.test('appendManualScopeSet - scope set shall add manual scope set value to the Empty scopeSet array', (assert) => {\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst resultedScopSet = initController['appendManualScopeSet']([]);\n\n\t\tassert.deepEqual(resultedScopSet, ['manual']);\n\t});\n\n\tQUnit.test('appendManualScopeSet - scope set shall add manual scope set value to the existing the scopeSet array', (assert) => {\n\t\tconst initController = new InitController(pluginInfo);\n\n\t\tconst resultedScopSet = initController['appendManualScopeSet'](['appPush', 'timedPush']);\n\n\t\tassert.deepEqual(resultedScopSet, ['appPush', 'timedPush', 'manual']);\n\t});\n\n\tQUnit.test(\n\t\t'appendManualScopeSet - scope set shall not add again manual scope set value to the existing the scopeSet array if its already set',\n\t\t(assert) => {\n\t\t\tconst initController = new InitController(pluginInfo);\n\n\t\t\tconst resultedScopSet = initController['appendManualScopeSet'](['appPush', 'timedPush', 'manual']);\n\n\t\t\tassert.deepEqual(resultedScopSet, ['appPush', 'timedPush', 'manual']);\n\t\t}\n\t);\n};\n"],"mappings":"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","ignoreList":[]}