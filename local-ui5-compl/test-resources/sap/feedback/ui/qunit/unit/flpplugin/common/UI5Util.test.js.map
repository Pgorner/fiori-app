{"version":3,"file":"UI5Util.test.js","names":["__exports","QUnit","module","test","assert","getThemeStub","sinon","stub","Theming","returns","themeResult","UI5Util","getTheme","equal","restore","getThemeId","getLanguageStub","Localization","resultedLanguage","getLanguage","appLifeCycleServiceMock","getCurrentApplication","getAppLifeCycleServiceStub","Promise","resolve","getCurrentApp","then","resultedCurrentApp","ok","called","deepEqual","reset","e","reject","getServiceAsyncMock","withArgs","shellContainerMock","getServiceAsync","getShellContainerStub","getAppLifeCycleService","resultedAppLifeCycle","calledWith","getExtensionService","getShellContainer","resultedShellContainer","notEqual","eventBusGetInstanceStub","EventBus","getEventBus"],"sourceRoot":".","sources":["UI5Util.test.ts"],"sourcesContent":["import Localization from 'sap/base/i18n/Localization';\nimport UI5Util from 'sap/feedback/ui/flpplugin/common/UI5Util';\nimport EventBus from 'sap/ui/core/EventBus';\nimport Theming from 'sap/ui/core/Theming';\nimport Container from 'sap/ushell/Container';\nimport AppLifeCycle from 'sap/ushell/services/AppLifeCycle';\nimport ShellExtension from 'sap/ushell/services/Extension';\n// eslint-disable-next-line import/no-unresolved\nimport * as sinon from 'sinon';\n\nexport default () => {\n\tQUnit.module('UI5Util unit tests', {});\n\n\tQUnit.test('getTheme - shall return the current theme.', (assert) => {\n\t\tconst getThemeStub = sinon.stub(Theming, 'getTheme').returns('sap_fiori_3');\n\t\tconst themeResult = UI5Util.getTheme();\n\n\t\tassert.equal(themeResult, 'sap_fiori_3');\n\n\t\tgetThemeStub.restore();\n\t});\n\n\tQUnit.test('getThemeId - shall return the current theme typed.', (assert) => {\n\t\tconst getThemeStub = sinon.stub(UI5Util, 'getTheme').returns('sap_fiori_3');\n\t\tconst themeResult = UI5Util.getThemeId();\n\n\t\tassert.equal(themeResult, 'sap_fiori_3');\n\n\t\tgetThemeStub.restore();\n\t});\n\n\tQUnit.test('getLanguage - shall return the current language.', (assert) => {\n\t\tconst getLanguageStub = sinon.stub(Localization, 'getLanguage').returns('en-us');\n\t\tconst resultedLanguage = UI5Util.getLanguage();\n\n\t\tassert.equal(resultedLanguage, 'en-us');\n\n\t\tgetLanguageStub.restore();\n\t});\n\n\tQUnit.test('getCurrentApp - shall return the current application.', async (assert) => {\n\t\tconst appLifeCycleServiceMock = { getCurrentApplication: sinon.stub().returns({}) };\n\t\tconst getAppLifeCycleServiceStub = sinon\n\t\t\t.stub(UI5Util, 'getAppLifeCycleService')\n\t\t\t.returns(Promise.resolve(appLifeCycleServiceMock as unknown as AppLifeCycle));\n\n\t\tconst resultedCurrentApp = await UI5Util.getCurrentApp();\n\n\t\tassert.ok(appLifeCycleServiceMock.getCurrentApplication.called);\n\t\tassert.deepEqual(resultedCurrentApp, {});\n\n\t\tgetAppLifeCycleServiceStub.restore();\n\t\tappLifeCycleServiceMock.getCurrentApplication.reset();\n\t});\n\n\tQUnit.test('getAppLifeCycleService - shall return the current AppLifeCycle.', async (assert) => {\n\t\tconst getServiceAsyncMock = sinon.stub().withArgs('AppLifeCycle').returns({});\n\t\tconst shellContainerMock = {\n\t\t\tgetServiceAsync: getServiceAsyncMock\n\t\t} as unknown as Container;\n\t\tconst getShellContainerStub = sinon.stub(UI5Util, 'getShellContainer').returns(Promise.resolve(shellContainerMock));\n\n\t\tconst resultedAppLifeCycle = await UI5Util.getAppLifeCycleService();\n\n\t\tassert.ok(getServiceAsyncMock.calledWith('AppLifeCycle'));\n\t\tassert.deepEqual(resultedAppLifeCycle, {} as AppLifeCycle);\n\n\t\tgetShellContainerStub.restore();\n\t});\n\n\tQUnit.test('getExtensionService - shall return the current ShellExtension.', async (assert) => {\n\t\tconst getServiceAsyncMock = sinon.stub().withArgs('Extension').returns({});\n\t\tconst shellContainerMock = {\n\t\t\tgetServiceAsync: getServiceAsyncMock\n\t\t} as unknown as Container;\n\t\tconst getShellContainerStub = sinon.stub(UI5Util, 'getShellContainer').returns(Promise.resolve(shellContainerMock));\n\n\t\tconst resultedAppLifeCycle = await UI5Util.getExtensionService();\n\n\t\tassert.ok(getServiceAsyncMock.calledWith('Extension'));\n\t\tassert.deepEqual(resultedAppLifeCycle, {} as ShellExtension);\n\n\t\tgetShellContainerStub.restore();\n\t});\n\n\tQUnit.test('getShellContainer - shall return the current getShellContainer.', async (assert) => {\n\t\tconst resultedShellContainer = await UI5Util.getShellContainer();\n\n\t\tassert.notEqual(resultedShellContainer, null);\n\t});\n\n\tQUnit.test('getEventBus - shall return the UI5 Event bus.', (assert) => {\n\t\tconst eventBusGetInstanceStub = sinon.stub(EventBus, 'getInstance');\n\n\t\tUI5Util.getEventBus();\n\n\t\tassert.ok(eventBusGetInstanceStub.called);\n\n\t\teventBusGetInstanceStub.restore();\n\t});\n};\n"],"mappings":"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","ignoreList":[]}