{"version":3,"file":"LocalStorageHandler.test.js","names":["executeLocalStorageHandlerTests","errorLogStub","debugLogStub","QUnit","module","beforeEach","sinon","stub","Log","afterEach","restore","test","assert","localStorageMock","getItem","withArgs","Constants","PUSH_STATE_STORAGE_KEY","returns","setItem","getLocalStorageStub","LocalStorageHandler","userState","getUserState","equal","undefined","ok","called","notOk","userStateString","deepEqual","JSON","parse","stringifyStub","throws","Error","status","updateUserState","calledWith","DEBUG","PUSH_STATE_MIGRATED","localStorage","getLocalStorage","updateUserStateStub","updateLastTheme","getUserStateStub","lastTheme","updateCurrentTheme","currentTheme"],"sourceRoot":".","sources":["LocalStorageHandler.test.ts"],"sourcesContent":["import { ThemeId } from '@sap-px/pxapi';\nimport Log from 'sap/base/Log';\nimport Constants from 'sap/feedback/ui/flpplugin/common/Constants';\nimport { UserState } from 'sap/feedback/ui/flpplugin/common/Types';\nimport LocalStorageHandler from 'sap/feedback/ui/flpplugin/storage/LocalStorageHandler';\n// eslint-disable-next-line import/no-unresolved\nimport * as sinon from 'sinon';\n\nexport default function executeLocalStorageHandlerTests() {\n\tlet errorLogStub: sinon.SinonStub<\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\t[sMessage: string, vDetails?: string | Error | undefined, sComponent?: string | undefined, fnSupportInfo?: Function | undefined],\n\t\t\tvoid\n\t\t>,\n\t\tdebugLogStub: sinon.SinonStub<\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\t[sMessage: string, vDetails?: string | Error | undefined, sComponent?: string | undefined, fnSupportInfo?: Function | undefined],\n\t\t\tvoid\n\t\t>;\n\tQUnit.module('LocalStorageHandler unit tests', {\n\t\tbeforeEach: function () {\n\t\t\terrorLogStub = sinon.stub(Log, 'error');\n\t\t\tdebugLogStub = sinon.stub(Log, 'debug');\n\t\t},\n\n\t\tafterEach: function () {\n\t\t\terrorLogStub.restore();\n\t\t\tdebugLogStub.restore();\n\t\t}\n\t});\n\n\tQUnit.test('getUserState - shall catch the error and return undefined if unable to parse the User state', (assert) => {\n\t\tconst localStorageMock = {\n\t\t\tgetItem: sinon.stub().withArgs(Constants.PUSH_STATE_STORAGE_KEY).returns('{{}'),\n\t\t\tsetItem: sinon.stub()\n\t\t} as any;\n\t\tconst getLocalStorageStub = sinon.stub(LocalStorageHandler, 'getLocalStorage').returns(localStorageMock);\n\n\t\tconst userState = LocalStorageHandler.getUserState();\n\n\t\tassert.equal(userState, undefined);\n\t\tassert.ok(errorLogStub.called);\n\n\t\tgetLocalStorageStub.restore();\n\t});\n\n\tQUnit.test('getUserState - shall return undefined if User state is not found in local storage', (assert) => {\n\t\tconst localStorageMock = {\n\t\t\tgetItem: sinon.stub().withArgs('something').returns(undefined),\n\t\t\tsetItem: sinon.stub()\n\t\t} as unknown as Storage;\n\t\tconst getLocalStorageStub = sinon.stub(LocalStorageHandler, 'getLocalStorage').returns(localStorageMock);\n\n\t\tconst userState = LocalStorageHandler.getUserState();\n\n\t\tassert.equal(userState, undefined);\n\t\tassert.notOk(errorLogStub.called);\n\n\t\tgetLocalStorageStub.restore();\n\t});\n\n\tQUnit.test('getUserState - shall return parsed User state if available', (assert) => {\n\t\tconst userStateString =\n\t\t\t'{\"version\":1,\"dynamicPushDate\":1677316125907,\"inAppPushDate\":1676192925907,\"lastTheme\":\"sap_fiori_3\",\"currentTheme\":\"sap_fiori_3\",\"featurePushStates\":{\"poc/featuretest\":{\"areaId\":\"POC\",\"triggerName\":\"featureTest\",\"triggerType\":\"recurring\",\"lastChanged\":1674637741016,\"triggeredCount\":1,\"executedCount\":0},\"001/managestockpoc\":{\"areaId\":\"001\",\"triggerName\":\"manageStockPoC\",\"triggerType\":\"recurring\",\"lastChanged\":1674637743467,\"triggeredCount\":1,\"executedCount\":0}}}';\n\t\tconst localStorageMock = {\n\t\t\tgetItem: sinon.stub().withArgs(Constants.PUSH_STATE_STORAGE_KEY).returns(userStateString),\n\t\t\tsetItem: sinon.stub()\n\t\t} as any;\n\t\tconst getLocalStorageStub = sinon.stub(LocalStorageHandler, 'getLocalStorage').returns(localStorageMock);\n\n\t\tconst userState = LocalStorageHandler.getUserState();\n\n\t\tassert.deepEqual(userState, JSON.parse(userStateString));\n\n\t\tgetLocalStorageStub.restore();\n\t});\n\n\tQUnit.test('updateUserState - shall catch the error if unable to stringify the User state', (assert) => {\n\t\tconst stringifyStub = sinon.stub(JSON, 'stringify').throws(new Error());\n\n\t\tconst status = LocalStorageHandler.updateUserState({} as UserState);\n\n\t\tassert.ok(errorLogStub.called);\n\t\tassert.notOk(status);\n\n\t\tstringifyStub.restore();\n\t});\n\n\tQUnit.test('updateUserState - shall just return true in case if no userState provided', (assert) => {\n\t\tconst stringifyStub = sinon.stub(JSON, 'stringify').throws(new Error());\n\n\t\tconst status = LocalStorageHandler.updateUserState(undefined as unknown as UserState);\n\n\t\tassert.ok(status);\n\n\t\tstringifyStub.restore();\n\t});\n\n\tQUnit.test('updateUserState - shall set the provided local storage object', (assert) => {\n\t\tconst userStateString =\n\t\t\t'{\"version\":1,\"dynamicPushDate\":1677316125907,\"inAppPushDate\":1676192925907,\"lastTheme\":\"sap_fiori_3\",\"currentTheme\":\"sap_fiori_3\",\"featurePushStates\":{\"poc/featuretest\":{\"areaId\":\"POC\",\"triggerName\":\"featureTest\",\"triggerType\":\"recurring\",\"lastChanged\":1674637741016,\"triggeredCount\":1,\"executedCount\":0},\"001/managestockpoc\":{\"areaId\":\"001\",\"triggerName\":\"manageStockPoC\",\"triggerType\":\"recurring\",\"lastChanged\":1674637743467,\"triggeredCount\":1,\"executedCount\":0}}}';\n\t\tconst userState = JSON.parse(userStateString);\n\t\tconst localStorageMock = {\n\t\t\tgetItem: sinon.stub(),\n\t\t\tsetItem: sinon.stub()\n\t\t} as any;\n\t\tconst getLocalStorageStub = sinon.stub(LocalStorageHandler, 'getLocalStorage').returns(localStorageMock);\n\n\t\tconst status = LocalStorageHandler.updateUserState(userState);\n\n\t\tassert.ok(localStorageMock.setItem.calledWith(Constants.PUSH_STATE_STORAGE_KEY, userStateString));\n\t\tassert.ok(debugLogStub.calledWith(Constants.DEBUG.PUSH_STATE_MIGRATED));\n\t\tassert.ok(status);\n\n\t\tgetLocalStorageStub.restore();\n\t});\n\n\tQUnit.test('getLocalStorage - nothing but just for the sake of coverage!', (assert) => {\n\t\tconst localStorage = LocalStorageHandler.getLocalStorage();\n\n\t\tassert.ok(localStorage);\n\t});\n\n\tQUnit.test('updateLastTheme - shall not call updateUserState when no themeId provided', (assert) => {\n\t\tconst updateUserStateStub = sinon.stub(LocalStorageHandler, 'updateUserState');\n\n\t\tLocalStorageHandler.updateLastTheme(undefined as unknown as ThemeId);\n\n\t\tassert.notOk(updateUserStateStub.called);\n\n\t\tupdateUserStateStub.restore();\n\t});\n\n\tQUnit.test('updateLastTheme - shall update user state with last theme', (assert) => {\n\t\tconst getUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({} as UserState);\n\t\tconst updateUserStateStub = sinon.stub(LocalStorageHandler, 'updateUserState');\n\n\t\tLocalStorageHandler.updateLastTheme('sap_horizon');\n\n\t\tassert.ok(updateUserStateStub.calledWith({ lastTheme: 'sap_horizon' }));\n\n\t\tgetUserStateStub.restore();\n\t\tupdateUserStateStub.restore();\n\t});\n\n\tQUnit.test('updateCurrentTheme - shall update user state with current theme', (assert) => {\n\t\tconst getUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({} as UserState);\n\t\tconst updateUserStateStub = sinon.stub(LocalStorageHandler, 'updateUserState');\n\n\t\tLocalStorageHandler.updateCurrentTheme('sap_horizon');\n\n\t\tassert.ok(updateUserStateStub.calledWith({ currentTheme: 'sap_horizon' }));\n\n\t\tgetUserStateStub.restore();\n\t\tupdateUserStateStub.restore();\n\t});\n\n\tQUnit.test('updateCurrentTheme - shall not update user state if themeId is not provided', (assert) => {\n\t\tconst getUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({} as UserState);\n\t\tconst updateUserStateStub = sinon.stub(LocalStorageHandler, 'updateUserState');\n\n\t\tLocalStorageHandler.updateCurrentTheme(null as unknown as ThemeId);\n\n\t\tassert.notOk(updateUserStateStub.called);\n\n\t\tgetUserStateStub.restore();\n\t\tupdateUserStateStub.restore();\n\t});\n}\n"],"mappings":"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","ignoreList":[]}