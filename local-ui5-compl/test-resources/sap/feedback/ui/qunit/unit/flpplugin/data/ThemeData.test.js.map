{"version":3,"file":"ThemeData.test.js","names":["ThemeId","___sap_px_pxapi","__exports","QUnit","module","test","assert","getThemeStub","sinon","stub","UI5Util","returns","getLocalStorageUserStateStub","LocalStorageHandler","lastTheme","updateThemeStateStub","ThemeData","initLastTheme","ok","calledWith","restore","none","undefined","updateCurrentTheme","notOk","called","currentTheme","updateLastThemeStub","updateCurrentThemeStub","updateThemeState","getUserStateStub","result","getPreviousTheme","equal"],"sourceRoot":".","sources":["ThemeData.test.ts"],"sourcesContent":["import { ThemeId } from '@sap-px/pxapi';\nimport { UserState } from 'sap/feedback/ui/flpplugin/common/Types';\nimport UI5Util from 'sap/feedback/ui/flpplugin/common/UI5Util';\nimport ThemeData from 'sap/feedback/ui/flpplugin/data/ThemeData';\nimport LocalStorageHandler from 'sap/feedback/ui/flpplugin/storage/LocalStorageHandler';\n// eslint-disable-next-line import/no-unresolved\nimport * as sinon from 'sinon';\n\nexport default () => {\n\tQUnit.module('ThemeData unit tests', {});\n\n\tQUnit.test('initLastTheme - init last theme without persisted last theme value', (assert) => {\n\t\tconst getThemeStub = sinon.stub(UI5Util, 'getThemeId').returns('sap_horizon');\n\t\tconst getLocalStorageUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({ lastTheme: null } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.initLastTheme();\n\n\t\tassert.ok(updateThemeStateStub.calledWith('sap_horizon', 'sap_horizon'));\n\n\t\tgetThemeStub.restore();\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('initLastTheme - init last theme with persisted valid last theme value', (assert) => {\n\t\tconst getThemeStub = sinon.stub(UI5Util, 'getThemeId').returns('sap_horizon');\n\t\tconst getLocalStorageUserStateStub = sinon\n\t\t\t.stub(LocalStorageHandler, 'getUserState')\n\t\t\t.returns({ lastTheme: 'sap_fiori_3' } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.initLastTheme();\n\n\t\tassert.ok(updateThemeStateStub.calledWith('sap_fiori_3', 'sap_horizon'));\n\n\t\tgetThemeStub.restore();\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('initLastTheme - init last theme with persisted invalid last theme value', (assert) => {\n\t\tconst getThemeStub = sinon.stub(UI5Util, 'getThemeId').returns('sap_horizon');\n\t\tconst getLocalStorageUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({ lastTheme: 'foo' } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.initLastTheme();\n\n\t\tassert.ok(updateThemeStateStub.calledWith('sap_horizon', 'sap_horizon'));\n\n\t\tgetThemeStub.restore();\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('initLastTheme - init last theme with invalid current theme', (assert) => {\n\t\tconst getThemeStub = sinon.stub(UI5Util, 'getThemeId').returns(ThemeId.none);\n\t\tconst getLocalStorageUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({ lastTheme: 'foo' } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.initLastTheme();\n\n\t\tassert.ok(updateThemeStateStub.calledWith('none', 'none'));\n\n\t\tgetThemeStub.restore();\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('updateCurrentTheme - shall not call updateThemeState when no userState provided', (assert) => {\n\t\tconst getLocalStorageUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns(undefined);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.updateCurrentTheme('sap_horizon');\n\n\t\tassert.notOk(updateThemeStateStub.called);\n\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('updateCurrentTheme - invalid persisted theme, valid current theme', (assert) => {\n\t\tconst getLocalStorageUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({ currentTheme: 'foo' } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.updateCurrentTheme('sap_horizon');\n\n\t\tassert.ok(updateThemeStateStub.calledWith('none', 'sap_horizon'));\n\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('updateCurrentTheme - valid persisted theme, invalid current theme', (assert) => {\n\t\tconst getLocalStorageUserStateStub = sinon\n\t\t\t.stub(LocalStorageHandler, 'getUserState')\n\t\t\t.returns({ currentTheme: 'sap_horizon' } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.updateCurrentTheme('foo' as ThemeId);\n\n\t\tassert.ok(updateThemeStateStub.calledWith('sap_horizon', 'none'));\n\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('updateCurrentTheme - valid persisted theme, valid current theme', (assert) => {\n\t\tconst getLocalStorageUserStateStub = sinon\n\t\t\t.stub(LocalStorageHandler, 'getUserState')\n\t\t\t.returns({ currentTheme: 'sap_horizon' } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.updateCurrentTheme('sap_fiori_3');\n\n\t\tassert.ok(updateThemeStateStub.calledWith('sap_horizon', 'sap_fiori_3'));\n\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('updateCurrentTheme - invalid persisted theme, invalid current theme', (assert) => {\n\t\tconst getLocalStorageUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({ currentTheme: 'foo' } as unknown as UserState);\n\t\tconst updateThemeStateStub = sinon.stub(ThemeData, 'updateThemeState');\n\n\t\tThemeData.updateCurrentTheme('invalid' as ThemeId);\n\n\t\tassert.notOk(updateThemeStateStub.called);\n\n\t\tgetLocalStorageUserStateStub.restore();\n\t\tupdateThemeStateStub.restore();\n\t});\n\n\tQUnit.test('updateThemeState - shall call updates to last and current theme', (assert) => {\n\t\tconst updateLastThemeStub = sinon.stub(LocalStorageHandler, 'updateLastTheme');\n\t\tconst updateCurrentThemeStub = sinon.stub(LocalStorageHandler, 'updateCurrentTheme');\n\n\t\tThemeData.updateThemeState('firstValue' as ThemeId, 'secondValue' as ThemeId);\n\n\t\tassert.ok(updateLastThemeStub.calledWith('firstValue' as ThemeId));\n\t\tassert.ok(updateCurrentThemeStub.calledWith('secondValue' as ThemeId));\n\n\t\tupdateLastThemeStub.restore();\n\t\tupdateCurrentThemeStub.restore();\n\t});\n\n\tQUnit.test('getPreviousTheme - shall return valid theme', (assert) => {\n\t\tconst getUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({ lastTheme: 'sap_horizon' } as unknown as UserState);\n\n\t\tconst result = ThemeData.getPreviousTheme();\n\n\t\tassert.equal(result, 'sap_horizon');\n\n\t\tgetUserStateStub.restore();\n\t});\n\n\tQUnit.test('getPreviousTheme - shall return none for invalid theme if UserState contains invalid theme', (assert) => {\n\t\tconst getUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns({ lastTheme: 'foo' } as unknown as UserState);\n\n\t\tconst result = ThemeData.getPreviousTheme();\n\n\t\tassert.equal(result, 'none');\n\n\t\tgetUserStateStub.restore();\n\t});\n\n\tQUnit.test('getPreviousTheme - shall return none for invalid theme if UserState cannot be read', (assert) => {\n\t\tconst getUserStateStub = sinon.stub(LocalStorageHandler, 'getUserState').returns(null as unknown as UserState);\n\n\t\tconst result = ThemeData.getPreviousTheme();\n\n\t\tassert.equal(result, 'none');\n\n\t\tgetUserStateStub.restore();\n\t});\n};\n"],"mappings":"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","ignoreList":[]}