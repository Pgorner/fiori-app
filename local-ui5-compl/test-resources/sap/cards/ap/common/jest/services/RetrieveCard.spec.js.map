{"version":3,"file":"RetrieveCard.spec.js","names":["sap","ui","define","ResourceBundle","sap_cards_ap_common_services_RetrieveCard","UIComponent","HashChanger","AdaptiveCardSampleManifest","IntegrationCardManifestWithoutSelectParam","IntegrationCardSampleManifest","_catch","body","recover","result","e","then","CardTypes","_getObjectPageCardManifest","getCardPath","getObjectPageCardManifestForPreview","i18nMap","appTitle","appDescription","CardGeneratorHeaderTitle","CardGeneratorHeaderSubTitle","CardGeneratorGroupPropertyLabel_Groups_0_Items_0","CardGeneratorGroupPropertyLabel_Groups_0_Items_1","CardGeneratorGroupPropertyLabel_Groups_0_Items_2","CardGeneratorGroupHeader_Groups_0","CardGeneratorGroupPropertyLabel_Groups_1_Items_0","CardGeneratorGroupPropertyLabel_Groups_1_Items_1","CardGeneratorGroupPropertyLabel_Groups_1_Items_2","CardGeneratorGroupHeader_Groups_1","describe","appManifest","id","type","uri","embeds","ObjectPage","default","manifests","testEntity","localUri","testEntity1","test","sType","INTEGRATION","entitySet","cardPath","expect","toBe","ADAPTIVE","globalFetchMock","sapAppId","Component","extend","metadata","manifest","createContent","rootComponent","beforeAll","jest","spyOn","window","mockImplementation","url","Promise","resolve","ok","json","afterAll","mockRestore","fetchedParams","componentName","cardType","cardManifest","toMatchSnapshot","reject","rootComponent1","getManifest","fn","mockReturnValue","_temp","error","toBeDefined","resourceBundleCreateSpy","getText","key","windowSpy","getModelSpy","beforeEach","isA","getMetaModel","getODataEntitySet","entityType","getODataEntityType","property","name","propertyRef","getObject","node_key","IsActiveEntity","getResourceBundle","oUrlInfo","afterEach","hasher","getHash","isDesignMode","mIntegrationCardManifest","location","href","origin","pathname","search","hash","hashChangerMock","hrefForAppSpecificHash","mockRouter","mAdaptiveCardManifest","CashBank","hideActions","sParam","entityContainer","$kind","$Type","$Key","BankCountry","BankInternalID","replace","path","includeActions","_temp2"],"sources":["RetrieveCard.spec.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport {\n\tCardTypes,\n\t_getObjectPageCardManifest,\n\tgetCardPath,\n\tgetObjectPageCardManifestForPreview\n} from \"sap/cards/ap/common/services/RetrieveCard\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport HashChanger from \"sap/ui/core/routing/HashChanger\";\nimport * as AdaptiveCardSampleManifest from \"../testData/AdaptiveCardSampleManifest\";\nimport * as IntegrationCardManifestWithoutSelectParam from \"../testData/IntegrationCardManifestWithoutSelectParam\";\nimport * as IntegrationCardSampleManifest from \"../testData/IntegrationCardSampleManifest\";\n\nconst i18nMap: {\n\t[key: string]: string;\n} = {\n\tappTitle: \"Sales Order\",\n\tappDescription: \"A Fiori application.\",\n\tCardGeneratorHeaderTitle: \"Sales Order\",\n\tCardGeneratorHeaderSubTitle: \"A Fiori application.\",\n\tCardGeneratorGroupPropertyLabel_Groups_0_Items_0: \"Net Amount\",\n\tCardGeneratorGroupPropertyLabel_Groups_0_Items_1: \"Gross Amount\",\n\tCardGeneratorGroupPropertyLabel_Groups_0_Items_2: \"Tax Amount\",\n\tCardGeneratorGroupHeader_Groups_0: \"Amount\",\n\tCardGeneratorGroupPropertyLabel_Groups_1_Items_0: \"Business Partner ID\",\n\tCardGeneratorGroupPropertyLabel_Groups_1_Items_1: \"Created At\",\n\tCardGeneratorGroupPropertyLabel_Groups_1_Items_2: \"Sales Order ID\",\n\tCardGeneratorGroupHeader_Groups_1: \"Additional Info\"\n};\n\ndescribe(\"getCardPath\", () => {\n\tconst appManifest = {\n\t\t\"sap.app\": {\n\t\t\tid: \"testComponent\",\n\t\t\ttype: \"application\"\n\t\t},\n\t\t\"sap.ui5\": {},\n\t\t\"sap.platform.abap\": {\n\t\t\turi: \"\"\n\t\t},\n\t\t\"sap.cards.ap\": {\n\t\t\tembeds: {\n\t\t\t\tObjectPage: {\n\t\t\t\t\tdefault: \"testEntity\",\n\t\t\t\t\tmanifests: {\n\t\t\t\t\t\ttestEntity: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocalUri: \"cards/op/testEntity/\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\ttestEntity1: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocalUri: \"cards/op/testEntity1/\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\ttest(\"returns the card path for integration card\", () => {\n\t\tconst sType = CardTypes.INTEGRATION;\n\t\tconst entitySet = \"testEntity\";\n\t\tconst cardPath = getCardPath(sType, entitySet, appManifest);\n\n\t\texpect(cardPath).toBe(\"/cards/op/testEntity/manifest.json\");\n\t});\n\n\ttest(\"returns the card path for integration card when localUri is without training slash\", () => {\n\t\tconst appManifest = {\n\t\t\t\"sap.app\": {\n\t\t\t\tid: \"testComponent\"\n\t\t\t},\n\t\t\t\"sap.ui5\": {},\n\t\t\t\"sap.ui\": {},\n\t\t\t\"sap.cards.ap\": {\n\t\t\t\tembeds: {\n\t\t\t\t\tObjectPage: {\n\t\t\t\t\t\tdefault: \"testEntity\",\n\t\t\t\t\t\tmanifests: {\n\t\t\t\t\t\t\ttestEntity: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlocalUri: \"cards/op/testEntity\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst sType = CardTypes.INTEGRATION;\n\t\tconst entitySet = \"testEntity\";\n\t\tconst cardPath = getCardPath(sType, entitySet, appManifest);\n\n\t\texpect(cardPath).toBe(\"/cards/op/testEntity/manifest.json\");\n\t});\n\n\ttest(\"returns the card path for adaptive card\", () => {\n\t\tconst sType = CardTypes.ADAPTIVE;\n\t\tconst entitySet = \"testEntity\";\n\t\tconst cardPath = getCardPath(sType, entitySet, appManifest);\n\n\t\texpect(cardPath).toBe(\"/cards/op/testEntity/adaptive-manifest.json\");\n\t});\n\n\ttest(\"returns empty path when sap.cards.ap's embeds object page configuration is empty\", () => {\n\t\tappManifest[\"sap.cards.ap\"].embeds.ObjectPage.manifests = {} as any;\n\t\tconst sType = CardTypes.ADAPTIVE;\n\t\tconst entitySet = \"testEntity\";\n\t\tconst cardPath = getCardPath(sType, entitySet, appManifest);\n\n\t\texpect(cardPath).toBe(\"\");\n\t});\n\n\ttest(\"returns empty path when sap.cards.ap configuration is not there in appManifest\", () => {\n\t\tappManifest[\"sap.cards.ap\"] = {} as any;\n\t\tconst sType = CardTypes.ADAPTIVE;\n\t\tconst entitySet = \"testEntity\";\n\t\tconst cardPath = getCardPath(sType, entitySet, appManifest);\n\n\t\texpect(cardPath).toBe(\"\");\n\t});\n});\n\ndescribe(\"_getObjectPageCardManifest\", () => {\n\tlet globalFetchMock: jest.SpyInstance;\n\tconst sapAppId = \"testComponent1\";\n\tconst appManifest = {\n\t\t\"sap.app\": {\n\t\t\tid: sapAppId,\n\t\t\ttype: \"application\"\n\t\t},\n\t\t\"sap.ui5\": {},\n\t\t\"sap.platform.abap\": {\n\t\t\turi: \"\"\n\t\t},\n\t\t\"sap.cards.ap\": {\n\t\t\tembeds: {\n\t\t\t\tObjectPage: {\n\t\t\t\t\tdefault: \"testEntity\",\n\t\t\t\t\tmanifests: {\n\t\t\t\t\t\ttestEntity: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocalUri: \"cards/op/testEntity/\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst Component = UIComponent.extend(\"rootComponent\", {\n\t\tmetadata: {\n\t\t\tmanifest: appManifest\n\t\t},\n\t\tcreateContent() {\n\t\t\treturn null;\n\t\t}\n\t});\n\tconst rootComponent = new Component(sapAppId);\n\n\tbeforeAll(() => {\n\t\tglobalFetchMock = jest.spyOn(window, \"fetch\").mockImplementation((url: string) => {\n\t\t\tif (url === \"/manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn appManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (url === \"/cards/op/testEntity/manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn IntegrationCardSampleManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (url === \"/cards/op/testEntity/adaptive-manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn AdaptiveCardSampleManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\tafterAll(() => {\n\t\tglobalFetchMock.mockRestore();\n\t});\n\n\ttest(\"returns the integration card manifest for object page card\", async () => {\n\t\tconst fetchedParams = {\n\t\t\tcomponentName: \"testComponent1\",\n\t\t\tentitySet: \"testEntity\",\n\t\t\tcardType: CardTypes.INTEGRATION\n\t\t};\n\n\t\tconst cardManifest = await _getObjectPageCardManifest(rootComponent, fetchedParams);\n\t\texpect(cardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"returns the adaptive card manifest for object page card\", async () => {\n\t\tconst fetchedParams = {\n\t\t\tcomponentName: \"testComponent1\",\n\t\t\tentitySet: \"testEntity\",\n\t\t\tcardType: CardTypes.ADAPTIVE\n\t\t};\n\n\t\tconst cardManifest = await _getObjectPageCardManifest(rootComponent, fetchedParams);\n\t\texpect(cardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"rejects the promise when entity set name is empty\", async () => {\n\t\tconst fetchedParams = {\n\t\t\tcomponentName: \"testComponent1\",\n\t\t\tentitySet: \"\",\n\t\t\tcardType: \"\"\n\t\t};\n\t\tconst rootComponent1 = {\n\t\t\tgetManifest: jest.fn().mockReturnValue({})\n\t\t};\n\n\t\ttry {\n\t\t\tawait _getObjectPageCardManifest(rootComponent1, fetchedParams);\n\t\t} catch (error) {\n\t\t\texpect(error).toBeDefined();\n\t\t\texpect(error).toBe(\"No cards available for this application\");\n\t\t}\n\t});\n});\n\ndescribe(\"getObjectPageCardManifestForPreview - V2\", () => {\n\tlet globalFetchMock: jest.SpyInstance;\n\tlet resourceBundleCreateSpy: jest.SpyInstance;\n\tconst sapAppId = \"testComponent2\";\n\tconst appManifest = {\n\t\t\"sap.app\": {\n\t\t\tid: sapAppId,\n\t\t\ttype: \"application\"\n\t\t},\n\t\t\"sap.ui5\": {},\n\t\t\"sap.platform.abap\": {\n\t\t\turi: \"\"\n\t\t},\n\t\t\"sap.cards.ap\": {\n\t\t\tembeds: {\n\t\t\t\tObjectPage: {\n\t\t\t\t\tdefault: \"testEntity\",\n\t\t\t\t\tmanifests: {\n\t\t\t\t\t\ttestEntity: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocalUri: \"cards/op/testEntity/\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\ttestEntity1: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocalUri: \"cards/op/testEntity1/\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst Component = UIComponent.extend(\"rootComponent\", {\n\t\tmetadata: {\n\t\t\tmanifest: appManifest\n\t\t},\n\t\tcreateContent() {\n\t\t\treturn null;\n\t\t}\n\t});\n\tconst rootComponent = new Component(sapAppId);\n\n\tbeforeAll(() => {\n\t\tresourceBundleCreateSpy = jest.spyOn(ResourceBundle, \"create\").mockImplementation(() => {\n\t\t\treturn {\n\t\t\t\tgetText: (key: string) => {\n\t\t\t\t\treturn i18nMap[key] || key;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tglobalFetchMock = jest.spyOn(window, \"fetch\").mockImplementation((url: string) => {\n\t\t\tif (url === \"/manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn appManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (url === \"/cards/op/testEntity1/manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn IntegrationCardManifestWithoutSelectParam;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (url === \"/cards/op/testEntity/manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn IntegrationCardSampleManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (url === \"/cards/op/testEntity/adaptive-manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn AdaptiveCardSampleManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\tafterAll(() => {\n\t\tresourceBundleCreateSpy.mockRestore();\n\t\tglobalFetchMock.mockRestore();\n\t});\n\tlet windowSpy: jest.SpyInstance;\n\tlet getModelSpy: jest.SpyInstance;\n\n\tbeforeEach(() => {\n\t\twindowSpy = jest.spyOn(window, \"window\", \"get\");\n\t\tgetModelSpy = jest.spyOn(rootComponent, \"getModel\").mockImplementation(() => {\n\t\t\treturn {\n\t\t\t\tisA: () => false,\n\t\t\t\tgetMetaModel: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgetODataEntitySet: function () {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tentityType: \"container.testEntityType\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetODataEntityType: function () {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tproperty: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"node_key\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Edm.Guid\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Edm.Boolean\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\t\tpropertyRef: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"node_key\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetObject: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode_key: \"12345\",\n\t\t\t\t\t\tIsActiveEntity: true\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetResourceBundle: jest.fn().mockImplementation(() => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\toUrlInfo: {\n\t\t\t\t\t\t\turl: \"i18n.properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\t});\n\n\tafterEach(() => {\n\t\twindowSpy.mockRestore();\n\t\tgetModelSpy.mockRestore();\n\t});\n\n\ttest(\"returns integration card manifest\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () => \"test-intent&/testEntity('12345')\"\n\t\t\t}\n\t\t}));\n\n\t\tconst mIntegrationCardManifest = await getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\tcardType: CardTypes.INTEGRATION,\n\t\t\tisDesignMode: true\n\t\t});\n\t\texpect(mIntegrationCardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"returns integration card manifest, with key-value format as context parameters\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () => \"test-intent&/testEntity(id='12345')\"\n\t\t\t}\n\t\t}));\n\n\t\tconst mIntegrationCardManifest = await getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\tcardType: CardTypes.INTEGRATION,\n\t\t\tisDesignMode: true\n\t\t});\n\t\texpect(mIntegrationCardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"returns adaptive card manifest ready for preview when there exists select query parameters\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () => \"test-intent&/testEntity(id='12345')\"\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\thref: \"http://localhost:8080/test#test-intent&/testEntity(id='12345')\",\n\t\t\t\torigin: \"http://localhost:8080\",\n\t\t\t\tpathname: \"/test\",\n\t\t\t\tsearch: \"?query=1\",\n\t\t\t\thash: \"#hash\"\n\t\t\t} as Location\n\t\t}));\n\t\tconst hashChangerMock = {\n\t\t\tgetHash: jest.fn().mockReturnValue(\"myHash\"),\n\t\t\threfForAppSpecificHash: jest.fn().mockReturnValue(\"basePath/\")\n\t\t} as unknown as HashChanger;\n\t\tconst mockRouter = {\n\t\t\thashChangerMock\n\t\t};\n\t\tjest.spyOn(HashChanger, \"getInstance\").mockReturnValue(mockRouter.hashChangerMock);\n\n\t\tconst mAdaptiveCardManifest = await getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\tcardType: CardTypes.ADAPTIVE,\n\t\t\tisDesignMode: true\n\t\t});\n\t\texpect(mAdaptiveCardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"returns adaptive card manifest ready for preview when no select query parameter exists for card\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () => \"test-intent&/testEntity1(id='12345')\"\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\thref: \"http://localhost:8080/test#test-intent&/testEntity(id='12345')\",\n\t\t\t\torigin: \"http://localhost:8080\",\n\t\t\t\tpathname: \"/test\",\n\t\t\t\tsearch: \"?query=1\",\n\t\t\t\thash: \"#hash\"\n\t\t\t} as Location\n\t\t}));\n\t\tconst hashChangerMock = {\n\t\t\tgetHash: jest.fn().mockReturnValue(\"myHash\"),\n\t\t\threfForAppSpecificHash: jest.fn().mockReturnValue(\"basePath/\")\n\t\t} as unknown as HashChanger;\n\t\tconst mockRouter = {\n\t\t\thashChangerMock\n\t\t};\n\t\tjest.spyOn(HashChanger, \"getInstance\").mockReturnValue(mockRouter.hashChangerMock);\n\n\t\tconst mIntegrationCardManifest = await getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\tcardType: CardTypes.ADAPTIVE,\n\t\t\tisDesignMode: true\n\t\t});\n\t\texpect(mIntegrationCardManifest).toMatchSnapshot();\n\t});\n});\n\ndescribe(\"getObjectPageCardManifestForPreview - V4\", () => {\n\tlet globalFetchMock: jest.SpyInstance;\n\tlet resourceBundleCreateSpy: jest.SpyInstance;\n\tconst sapAppId = \"testComponent3\";\n\tconst appManifest = {\n\t\t\"sap.app\": {\n\t\t\tid: sapAppId,\n\t\t\ttype: \"application\"\n\t\t},\n\t\t\"sap.ui5\": {},\n\t\t\"sap.platform.abap\": {\n\t\t\turi: \"\"\n\t\t},\n\t\t\"sap.cards.ap\": {\n\t\t\tembeds: {\n\t\t\t\tObjectPage: {\n\t\t\t\t\tdefault: \"CashBank\",\n\t\t\t\t\tmanifests: {\n\t\t\t\t\t\tCashBank: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocalUri: \"cards/op/CashBank/\",\n\t\t\t\t\t\t\t\thideActions: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst Component = UIComponent.extend(\"rootComponent\", {\n\t\tmetadata: {\n\t\t\tmanifest: appManifest\n\t\t},\n\t\tcreateContent() {\n\t\t\treturn null;\n\t\t}\n\t});\n\tconst rootComponent = new Component(sapAppId);\n\n\tbeforeAll(() => {\n\t\tresourceBundleCreateSpy = jest.spyOn(ResourceBundle, \"create\").mockImplementation(() => {\n\t\t\treturn {\n\t\t\t\tgetText: (key: string) => {\n\t\t\t\t\treturn i18nMap[key] || key;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tglobalFetchMock = jest.spyOn(window, \"fetch\").mockImplementation((url: string) => {\n\t\t\tif (url === \"/manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn appManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (url === \"/cards/op/CashBank/manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn IntegrationCardSampleManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (url === \"/cards/op/CashBank/adaptive-manifest.json\") {\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tok: true,\n\t\t\t\t\tjson: () => {\n\t\t\t\t\t\treturn AdaptiveCardSampleManifest;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\tafterAll(() => {\n\t\tresourceBundleCreateSpy.mockRestore();\n\t\tglobalFetchMock.mockRestore();\n\t});\n\tlet windowSpy: jest.SpyInstance;\n\tlet getModelSpy: jest.SpyInstance;\n\n\tbeforeEach(() => {\n\t\twindowSpy = jest.spyOn(window, \"window\", \"get\");\n\t\tgetModelSpy = jest.spyOn(rootComponent, \"getModel\").mockImplementation(() => {\n\t\t\treturn {\n\t\t\t\tisA: () => true,\n\t\t\t\tgetMetaModel: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgetObject: (sParam: string) => {\n\t\t\t\t\t\t\tconst entityContainer = {\n\t\t\t\t\t\t\t\t$kind: \"EntityContainer\",\n\t\t\t\t\t\t\t\tCashBank: {\n\t\t\t\t\t\t\t\t\t$kind: \"EntitySet\",\n\t\t\t\t\t\t\t\t\t$Type: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\": {\n\t\t\t\t\t\t\t\t\t$kind: \"EntityType\",\n\t\t\t\t\t\t\t\t\t$Key: [\"BankCountry\", \"BankInternalID\", \"IsActiveEntity\"],\n\t\t\t\t\t\t\t\t\tBankCountry: {\n\t\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Country\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tBankInternalID: {\n\t\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Internal ID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tIsActiveEntity: {\n\t\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t\t$Type: \"Edm.Boolean\",\n\t\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Is Active Entity\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (sParam === \"/\") {\n\t\t\t\t\t\t\t\treturn entityContainer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsParam = sParam.replace(\"/\", \"\");\n\t\t\t\t\t\t\treturn entityContainer[sParam];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetODataEntityType: (path: string) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\t\tpropertyRef: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"node_key\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"BankCountry\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetObject: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode_key: \"005056a7-004e-1ed8-b2e0-081387831f0d\",\n\t\t\t\t\t\tIsActiveEntity: true,\n\t\t\t\t\t\tBankCountry: \"0000000006\"\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetResourceBundle: jest.fn().mockImplementation(() => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\toUrlInfo: {\n\t\t\t\t\t\t\turl: \"i18n.properties\"\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\t});\n\n\tafterEach(() => {\n\t\twindowSpy.mockRestore();\n\t\tgetModelSpy.mockRestore();\n\t});\n\n\ttest(\"returns adaptive card manifest ready for preview when there exists select query parameters- when hideAction is false\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () =>\n\t\t\t\t\t\"test-intent&/CashBank(node_key='005056a7-004e-1ed8-b2e0-081387831f0d',IsActiveEntity=true,BankCountry=0000000006)\"\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\thref: \"http://localhost:8080/test#test-intent&/CashBank(node_key=005056a7-004e-1ed8-b2e0-081387831f0d,IsActiveEntity=true,BankCountry=0000000006)\",\n\t\t\t\torigin: \"http://localhost:8080\",\n\t\t\t\tpathname: \"/test\",\n\t\t\t\tsearch: \"?query=1\",\n\t\t\t\thash: \"#hash\"\n\t\t\t}\n\t\t}));\n\t\tconst hashChangerMock = {\n\t\t\tgetHash: jest.fn().mockReturnValue(\"myHash\"),\n\t\t\threfForAppSpecificHash: jest.fn().mockReturnValue(\"basePath/\")\n\t\t} as unknown as HashChanger;\n\t\tconst mockRouter = {\n\t\t\thashChangerMock\n\t\t};\n\t\tjest.spyOn(HashChanger, \"getInstance\").mockReturnValue(mockRouter.hashChangerMock);\n\n\t\tconst mAdaptiveCardManifest = await getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\tcardType: CardTypes.ADAPTIVE,\n\t\t\tincludeActions: false,\n\t\t\thideActions: false,\n\t\t\tisDesignMode: true\n\t\t});\n\t\texpect(mAdaptiveCardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"returns integration card manifest\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () =>\n\t\t\t\t\t\"test-intent&/CashBank(node_key='005056a7-004e-1ed8-b2e0-081387831f0d',IsActiveEntity=true,BankCountry=0000000006)\"\n\t\t\t}\n\t\t}));\n\t\tconst hashChangerMock = {\n\t\t\tgetHash: jest.fn().mockReturnValue(\"myHash\"),\n\t\t\threfForAppSpecificHash: jest.fn().mockReturnValue(\"basePath/\")\n\t\t} as unknown as HashChanger;\n\t\tconst mockRouter = {\n\t\t\thashChangerMock\n\t\t};\n\t\tjest.spyOn(HashChanger, \"getInstance\").mockReturnValue(mockRouter.hashChangerMock);\n\n\t\tconst mIntegrationCardManifest = await getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\tcardType: CardTypes.INTEGRATION,\n\t\t\tisDesignMode: true\n\t\t});\n\t\texpect(mIntegrationCardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"returns adaptive card manifest ready for preview when there exists select query parameters - when hideAction is true\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () =>\n\t\t\t\t\t\"test-intent?&/CashBank(node_key='005056a7-004e-1ed8-b2e0-081387831f0d',IsActiveEntity=true,BankCountry=0000000006)/\"\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\thref: \"http://localhost:8080/test#test-intent&/CashBank(node_key=005056a7-004e-1ed8-b2e0-081387831f0d,IsActiveEntity=true,BankCountry=0000000006)\",\n\t\t\t\torigin: \"http://localhost:8080\",\n\t\t\t\tpathname: \"/test\",\n\t\t\t\tsearch: \"?query=1\",\n\t\t\t\thash: \"#hash\"\n\t\t\t}\n\t\t}));\n\t\tconst hashChangerMock = {\n\t\t\tgetHash: jest.fn().mockReturnValue(\"myHash\"),\n\t\t\threfForAppSpecificHash: jest.fn().mockReturnValue(\"basePath/\")\n\t\t} as unknown as HashChanger;\n\t\tconst mockRouter = {\n\t\t\thashChangerMock\n\t\t};\n\t\tjest.spyOn(HashChanger, \"getInstance\").mockReturnValue(mockRouter.hashChangerMock);\n\n\t\tconst mAdaptiveCardManifest = await getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\tcardType: CardTypes.ADAPTIVE,\n\t\t\tincludeActions: false,\n\t\t\thideActions: true,\n\t\t\tisDesignMode: true\n\t\t});\n\t\texpect(mAdaptiveCardManifest).toMatchSnapshot();\n\t});\n\n\ttest(\"No card exists for application at run time\", async () => {\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () =>\n\t\t\t\t\t\"test-intent&/CashBank(node_key=005056a7-004e-1ed8-b2e0-081387831f0d,IsActiveEntity=true,BankCountry=0000000006)\"\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\thref: \"http://localhost:8080/test-intent&/CashBank(node_key=005056a7-004e-1ed8-b2e0-081387831f0d,IsActiveEntity=true,BankCountry=0000000006)\"\n\t\t\t}\n\t\t}));\n\n\t\tdelete rootComponent?.getManifest()?.[\"sap.cards.ap\"];\n\n\t\ttry {\n\t\t\tawait getObjectPageCardManifestForPreview(rootComponent, {\n\t\t\t\tcardType: CardTypes.ADAPTIVE,\n\t\t\t\tincludeActions: false,\n\t\t\t\thideActions: true,\n\t\t\t\tisDesignMode: false\n\t\t\t});\n\t\t} catch (error) {\n\t\t\texpect(error).toBeDefined();\n\t\t\texpect(error).toBe(\"No cards available for this application\");\n\t\t}\n\t});\n});\n"],"mappings":"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","ignoreList":[]}