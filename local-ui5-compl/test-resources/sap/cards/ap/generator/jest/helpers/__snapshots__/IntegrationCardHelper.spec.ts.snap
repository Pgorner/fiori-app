// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addQueryParametersToManifest should add expand query when only select query exists 1`] = `
{
  "_contentExpandQuery": {
    "value": "",
  },
  "_contentSelectQuery": {
    "value": "",
  },
  "_headerExpandQuery": {
    "value": "",
  },
  "_headerSelectQuery": {
    "value": "",
  },
}
`;

exports[`addQueryParametersToManifest should add query parameters when an already saved manifest w/o query parameters is reopened 1`] = `
{
  "_contentExpandQuery": {
    "value": "",
  },
  "_contentSelectQuery": {
    "value": "",
  },
  "_headerExpandQuery": {
    "value": "",
  },
  "_headerSelectQuery": {
    "value": "",
  },
}
`;

exports[`addQueryParametersToManifest should not modify the original manifest and the query parameters should not update 1`] = `
{
  "_contentExpandQuery": {
    "value": "",
  },
  "_contentSelectQuery": {
    "value": "",
  },
  "_headerExpandQuery": {
    "value": "",
  },
  "_headerSelectQuery": {
    "value": "",
  },
}
`;

exports[`createInitialManifest Create initial integration card manifest 1`] = `
{
  "_version": "1.15.0",
  "sap.app": {
    "applicationVersion": {
      "version": "1.0.0",
    },
    "description": undefined,
    "i18n": "../../../i18n/i18n.properties",
    "id": "test.app.id",
    "subTitle": "A Fiori application.",
    "title": "Sales Order",
    "type": "card",
  },
  "sap.card": {
    "configuration": {
      "csrfTokens": {
        "token1": {
          "data": {
            "request": {
              "headers": {
                "X-CSRF-Token": "Fetch",
              },
              "method": "HEAD",
              "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder",
            },
          },
        },
      },
      "destinations": {
        "service": {
          "defaultUrl": "/",
          "name": "(default)",
        },
      },
      "parameters": {
        "_contentExpandQuery": {
          "value": "",
        },
        "_contentSelectQuery": {
          "value": "$select=node_key,so_id",
        },
        "_entitySet": {
          "type": "string",
          "value": "C_STTA_SalesOrder_WD_20",
        },
        "_headerExpandQuery": {
          "value": "",
        },
        "_headerSelectQuery": {
          "value": "$select=node_key,so_id",
        },
        "node_key": {
          "type": "string",
          "value": "guid'fa163ee4-7bdd-1ee8-b1ff-d3c5a4e5236a'",
        },
        "so_id": {
          "type": "string",
          "value": "12345",
        },
      },
    },
    "content": {
      "data": {
        "path": "/content/d/",
      },
      "groups": [],
    },
    "data": {
      "request": {
        "batch": {
          "content": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "url": "{{parameters._entitySet}}(node_key=guid'{{parameters.node_key}}',IsActiveEntity={{parameters.IsActiveEntity}})?{{parameters._contentSelectQuery}}{{parameters._contentExpandQuery}}",
          },
          "header": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "retryAfter": 30,
            "url": "{{parameters._entitySet}}(node_key=guid'{{parameters.node_key}}',IsActiveEntity={{parameters.IsActiveEntity}})?{{parameters._headerSelectQuery}}{{parameters._headerExpandQuery}}",
          },
        },
        "headers": {
          "Accept-Language": "{{parameters.LOCALE}}",
          "X-CSRF-Token": "{{csrfTokens.token1}}",
        },
        "method": "POST",
        "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder/$batch",
      },
    },
    "extension": "module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension",
    "header": {
      "data": {
        "path": "/header/d/",
      },
      "mainIndicator": {
        "number": "",
        "unit": "",
      },
      "subTitle": "A Fiori application.",
      "title": "Sales Order",
      "type": "Numeric",
      "unitOfMeasurement": "",
    },
    "type": "Object",
  },
  "sap.insights": {
    "cardType": "LEAN_DT",
    "parentAppId": "test.app.id",
    "templateName": "ObjectPage",
    "versions": {
      "ui5": "1.0.0-2021-09-01T00:00:00Z",
    },
  },
  "sap.ui": {
    "icons": {
      "icon": "sap-icon://switch-classes",
    },
    "technology": "UI5",
  },
  "sap.ui5": {
    "_version": "1.1.0",
    "contentDensities": {
      "compact": true,
      "cozy": true,
    },
    "dependencies": {
      "libs": {
        "sap.insights": {
          "lazy": false,
        },
      },
    },
  },
}
`;

exports[`createInitialManifest Create initial integration card manifest of OData V4 application 1`] = `
{
  "_version": "1.15.0",
  "sap.app": {
    "applicationVersion": {
      "version": "1.0.0",
    },
    "description": undefined,
    "i18n": "../../../i18n/i18n.properties",
    "id": "test.app.id",
    "subTitle": "A Fiori application.",
    "title": "Manage Sales Contracts",
    "type": "card",
  },
  "sap.card": {
    "configuration": {
      "csrfTokens": {
        "token1": {
          "data": {
            "request": {
              "headers": {
                "X-CSRF-Token": "Fetch",
              },
              "method": "HEAD",
              "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder",
            },
          },
        },
      },
      "destinations": {
        "service": {
          "defaultUrl": "/",
          "name": "(default)",
        },
      },
      "parameters": {
        "SalesContract": {
          "type": "string",
          "value": "40000441",
        },
        "_contentExpandQuery": {
          "value": "",
        },
        "_contentSelectQuery": {
          "value": "$select=SalesContract",
        },
        "_entitySet": {
          "type": "string",
          "value": "SalesContractManage",
        },
        "_headerExpandQuery": {
          "value": "",
        },
        "_headerSelectQuery": {
          "value": "$select=SalesContract",
        },
      },
    },
    "content": {
      "data": {
        "path": "/content/",
      },
      "groups": [],
    },
    "data": {
      "request": {
        "batch": {
          "content": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "url": "{{parameters._entitySet}}(node_key=guid'{{parameters.node_key}}',IsActiveEntity={{parameters.IsActiveEntity}})?{{parameters._contentSelectQuery}}{{parameters._contentExpandQuery}}",
          },
          "header": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "retryAfter": 30,
            "url": "{{parameters._entitySet}}(node_key=guid'{{parameters.node_key}}',IsActiveEntity={{parameters.IsActiveEntity}})?{{parameters._headerSelectQuery}}{{parameters._headerExpandQuery}}",
          },
        },
        "headers": {
          "Accept-Language": "{{parameters.LOCALE}}",
          "X-CSRF-Token": "{{csrfTokens.token1}}",
        },
        "method": "POST",
        "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder/$batch",
      },
    },
    "extension": "module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension",
    "header": {
      "data": {
        "path": "/header/",
      },
      "mainIndicator": {
        "number": "",
        "unit": "",
      },
      "subTitle": "A Fiori application.",
      "title": "Manage Sales Contracts",
      "type": "Numeric",
      "unitOfMeasurement": "",
    },
    "type": "Object",
  },
  "sap.insights": {
    "cardType": "LEAN_DT",
    "parentAppId": "test.app.id",
    "templateName": "ObjectPage",
    "versions": {
      "ui5": "1.0.0-2021-09-01T00:00:00Z",
    },
  },
  "sap.ui": {
    "icons": {
      "icon": "sap-icon://switch-classes",
    },
    "technology": "UI5",
  },
  "sap.ui5": {
    "_version": "1.1.0",
    "contentDensities": {
      "compact": true,
      "cozy": true,
    },
    "dependencies": {
      "libs": {
        "sap.insights": {
          "lazy": false,
        },
      },
    },
  },
}
`;

exports[`enhanceManifestWithConfigurationParameters validate generated configuration->parameters 1`] = `
{
  "_version": "1.15.0",
  "sap.app": {
    "applicationVersion": {
      "version": "1.0.0",
    },
    "id": "objectCard",
    "subTitle": "A Fiori application. | {overall_status}",
    "title": "Sales Order",
    "type": "card",
  },
  "sap.card": {
    "configuration": {
      "csrfTokens": {
        "token1": {
          "data": {
            "request": {
              "headers": {
                "X-CSRF-Token": "Fetch",
              },
              "method": "HEAD",
              "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder",
            },
          },
        },
      },
      "destinations": {
        "service": {
          "defaultUrl": "/",
          "name": "(default)",
        },
      },
      "parameters": {
        "IsActiveEntity": {
          "type": "string",
          "value": "",
        },
        "_entitySet": {
          "type": "string",
          "value": "C_STTA_SalesOrder_WD_20",
        },
        "_mandatoryODataParameters": {
          "value": [
            "node_key",
            "IsActiveEntity",
          ],
        },
        "_propertyFormatting": {
          "net_amount": {
            "arrangements": {
              "text": {
                "TextLast": true,
                "path": "{overall_status}",
              },
            },
          },
        },
        "contextParameters": {
          "type": "string",
          "value": "node_key=guid'fa163ee4-7bdd-1ee8-b1ff-d3c5a4e5236a',IsActiveEntity=true",
        },
        "node_key": {
          "type": "string",
          "value": "",
        },
      },
    },
    "content": {
      "data": {
        "path": "/content/d/",
      },
      "groups": [
        {
          "items": [
            {
              "label": "Net Amount",
              "name": "net_amount",
              "value": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
            },
            {
              "label": "Gross Amount",
              "name": "gross_amount",
              "value": "{gross_amount} {currency_code}",
            },
            {
              "label": "Tax Amount",
              "name": "tax_amount",
              "value": "{tax_amount} {currency_code}",
            },
          ],
          "title": "Amount",
        },
      ],
    },
    "data": {
      "request": {
        "batch": {
          "content": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "url": "C_STTA_SalesOrder_WD_20({{parameters.contextParameters}})",
          },
          "header": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "retryAfter": 30,
            "url": "C_STTA_SalesOrder_WD_20({{parameters.contextParameters}})",
          },
        },
        "headers": {
          "X-CSRF-Token": "{{csrfTokens.token1}}",
        },
        "method": "POST",
        "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder/$batch",
      },
    },
    "extension": "module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension",
    "header": {
      "data": {
        "path": "/content/d/",
      },
      "mainIndicator": {
        "number": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
        "state": "None",
        "trend": "None",
        "unit": "",
      },
      "subTitle": "A Fiori application.",
      "title": "Sales Order",
      "type": "Numeric",
      "unitOfMeasurement": "",
    },
    "type": "Object",
  },
  "sap.ui": {
    "icons": {
      "icon": "sap-icon://switch-classes",
    },
    "technology": "UI5",
  },
}
`;

exports[`enhanceManifestWithConfigurationParameters validate generated configuration->parameters when text arrangements is empty 1`] = `
{
  "_version": "1.15.0",
  "sap.app": {
    "applicationVersion": {
      "version": "1.0.0",
    },
    "id": "objectCard",
    "subTitle": "A Fiori application. | {overall_status}",
    "title": "Sales Order",
    "type": "card",
  },
  "sap.card": {
    "configuration": {
      "csrfTokens": {
        "token1": {
          "data": {
            "request": {
              "headers": {
                "X-CSRF-Token": "Fetch",
              },
              "method": "HEAD",
              "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder",
            },
          },
        },
      },
      "destinations": {
        "service": {
          "defaultUrl": "/",
          "name": "(default)",
        },
      },
      "parameters": {
        "IsActiveEntity": {
          "type": "string",
          "value": "",
        },
        "_entitySet": {
          "type": "string",
          "value": "C_STTA_SalesOrder_WD_20",
        },
        "_mandatoryODataParameters": {
          "value": [
            "node_key",
            "IsActiveEntity",
          ],
        },
        "_propertyFormatting": {},
        "contextParameters": {
          "type": "string",
          "value": "node_key=guid'fa163ee4-7bdd-1ee8-b1ff-d3c5a4e5236a',IsActiveEntity=true",
        },
        "node_key": {
          "type": "string",
          "value": "",
        },
      },
    },
    "content": {
      "data": {
        "path": "/content/d/",
      },
      "groups": [
        {
          "items": [
            {
              "label": "Net Amount",
              "name": "net_amount",
              "value": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
            },
            {
              "label": "Gross Amount",
              "name": "gross_amount",
              "value": "{gross_amount} {currency_code}",
            },
            {
              "label": "Tax Amount",
              "name": "tax_amount",
              "value": "{tax_amount} {currency_code}",
            },
          ],
          "title": "Amount",
        },
      ],
    },
    "data": {
      "request": {
        "batch": {
          "content": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "url": "C_STTA_SalesOrder_WD_20({{parameters.contextParameters}})",
          },
          "header": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "retryAfter": 30,
            "url": "C_STTA_SalesOrder_WD_20({{parameters.contextParameters}})",
          },
        },
        "headers": {
          "X-CSRF-Token": "{{csrfTokens.token1}}",
        },
        "method": "POST",
        "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder/$batch",
      },
    },
    "extension": "module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension",
    "header": {
      "data": {
        "path": "/content/d/",
      },
      "mainIndicator": {
        "number": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
        "state": "None",
        "trend": "None",
        "unit": "",
      },
      "subTitle": "A Fiori application.",
      "title": "Sales Order",
      "type": "Numeric",
      "unitOfMeasurement": "",
    },
    "type": "Object",
  },
  "sap.ui": {
    "icons": {
      "icon": "sap-icon://switch-classes",
    },
    "technology": "UI5",
  },
}
`;

exports[`enhanceManifestWithConfigurationParameters validate generated configuration->parameters when text arrangements list has an empty object at the second position 1`] = `
{
  "_version": "1.15.0",
  "sap.app": {
    "applicationVersion": {
      "version": "1.0.0",
    },
    "id": "objectCard",
    "subTitle": "A Fiori application. | {overall_status}",
    "title": "Sales Order",
    "type": "card",
  },
  "sap.card": {
    "configuration": {
      "csrfTokens": {
        "token1": {
          "data": {
            "request": {
              "headers": {
                "X-CSRF-Token": "Fetch",
              },
              "method": "HEAD",
              "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder",
            },
          },
        },
      },
      "destinations": {
        "service": {
          "defaultUrl": "/",
          "name": "(default)",
        },
      },
      "parameters": {
        "IsActiveEntity": {
          "type": "string",
          "value": "",
        },
        "_entitySet": {
          "type": "string",
          "value": "C_STTA_SalesOrder_WD_20",
        },
        "_mandatoryODataParameters": {
          "value": [
            "node_key",
            "IsActiveEntity",
          ],
        },
        "_propertyFormatting": {
          "net_amount": {
            "arrangements": {
              "text": {
                "TextLast": true,
                "path": "{overall_status}",
              },
            },
          },
        },
        "contextParameters": {
          "type": "string",
          "value": "node_key=guid'fa163ee4-7bdd-1ee8-b1ff-d3c5a4e5236a',IsActiveEntity=true",
        },
        "node_key": {
          "type": "string",
          "value": "",
        },
      },
    },
    "content": {
      "data": {
        "path": "/content/d/",
      },
      "groups": [
        {
          "items": [
            {
              "label": "Net Amount",
              "name": "net_amount",
              "value": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
            },
            {
              "label": "Gross Amount",
              "name": "gross_amount",
              "value": "{gross_amount} {currency_code}",
            },
            {
              "label": "Tax Amount",
              "name": "tax_amount",
              "value": "{tax_amount} {currency_code}",
            },
          ],
          "title": "Amount",
        },
      ],
    },
    "data": {
      "request": {
        "batch": {
          "content": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "url": "C_STTA_SalesOrder_WD_20({{parameters.contextParameters}})",
          },
          "header": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "retryAfter": 30,
            "url": "C_STTA_SalesOrder_WD_20({{parameters.contextParameters}})",
          },
        },
        "headers": {
          "X-CSRF-Token": "{{csrfTokens.token1}}",
        },
        "method": "POST",
        "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder/$batch",
      },
    },
    "extension": "module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension",
    "header": {
      "data": {
        "path": "/content/d/",
      },
      "mainIndicator": {
        "number": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
        "state": "None",
        "trend": "None",
        "unit": "",
      },
      "subTitle": "A Fiori application.",
      "title": "Sales Order",
      "type": "Numeric",
      "unitOfMeasurement": "",
    },
    "type": "Object",
  },
  "sap.ui": {
    "icons": {
      "icon": "sap-icon://switch-classes",
    },
    "technology": "UI5",
  },
}
`;

exports[`enhanceManifestWithInsights - Fix integration card manifest on regeneration with sap.insights section validate method enhanceManifestWithInsights - with cardType as DT 1`] = `
{
  "sap.insights": {
    "cardType": "DT",
    "parentAppId": "sap.app.id",
    "templateName": "ObjectPage",
    "versions": {
      "ui5": "1.88.0-202404111500",
    },
  },
}
`;

exports[`enhanceManifestWithInsights - Fix integration card manifest on regeneration with sap.insights section validate method enhanceManifestWithInsights - without cardType 1`] = `{}`;

exports[`parseCard Validate parseCard generated content 1`] = `
{
  "formatterConfigurationFromCardManifest": [],
  "groups": [
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Activation Status",
          "name": "CndnContrActvtnStatusName",
          "state": "Success",
          "type": "Status",
          "value": "{{GROUP_1_VALUE_1}}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Process Category",
          "name": "CndnContrProcessCategoryDesc",
          "value": "{{GROUP_1_VALUE_2}}",
        },
      ],
      "title": "Group 1",
    },
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Sales Organization Description",
          "name": "SalesOrganizationName",
          "value": "{{GROUP_2_VALUE_1}}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Short Description",
          "name": "CndnContrPrtlSettlmtCatName",
          "value": "{{GROUP_2_VALUE_2}}",
        },
      ],
      "title": "Group 2",
    },
  ],
  "headerUOM": "Condition Control Type Description (USD)",
  "mainIndicatorOptions": {
    "criticalityOptions": [
      {
        "activeCalculation": false,
        "criticality": "Good",
        "name": "CndnContrActvtnStatusName",
      },
    ],
    "mainIndicatorNavigationSelectedKey": "",
    "mainIndicatorStatusKey": "NUMBER",
    "navigationValue": "NUMBER",
    "trendOptions": {
      "downDifference": "",
      "referenceValue": "",
      "upDifference": "",
    },
  },
  "sideIndicatorOptions": {
    "deviationUnit": "",
    "deviationValue": "",
    "targetUnit": "",
    "targetValue": "",
  },
  "subtitle": "Header Subtitle",
  "textArrangementsFromCardManifest": [],
  "title": "Header Title",
}
`;

exports[`parseCard Validate parseCard generated content when manifest fields have bindings 1`] = `
{
  "formatterConfigurationFromCardManifest": [
    {
      "displayName": "Format Criticality State or Value",
      "formatterName": "extension.formatters.formatCriticality",
      "parameters": [
        {
          "defaultValue": "",
          "displayName": "Criticality States",
          "name": "sType",
          "type": "string",
          "value": "",
        },
      ],
      "property": "Language",
      "type": "string | numeric",
      "visible": false,
    },
    {
      "displayName": "Float",
      "formatterName": "format.float",
      "parameters": [
        {
          "defaultValue": "",
          "displayName": "Options",
          "name": "options",
          "properties": [
            {
              "defaultValue": 2,
              "displayName": "Decimals",
              "name": "decimals",
              "type": "number",
              "value": 2,
            },
            {
              "defaultSelectedKey": "short",
              "displayName": "Style",
              "name": "style",
              "options": [
                {
                  "name": "Short",
                  "value": "short",
                },
                {
                  "name": "Long",
                  "value": "long",
                },
              ],
              "selectedKey": "short",
              "type": "enum",
              "value": "short",
            },
          ],
          "type": "object",
        },
      ],
      "property": "net_amount",
      "type": "numeric",
      "visible": true,
    },
    {
      "displayName": "Date Time",
      "formatterName": "format.dateTime",
      "parameters": [
        {
          "defaultValue": "",
          "displayName": "Options",
          "name": "options",
          "properties": [
            {
              "defaultValue": false,
              "displayName": "Relative",
              "name": "relative",
              "selected": true,
              "type": "boolean",
            },
            {
              "defaultValue": false,
              "displayName": "UTC",
              "name": "UTC",
              "selected": false,
              "type": "boolean",
            },
          ],
          "type": "object",
        },
      ],
      "property": "created_at",
      "type": "Date",
      "visible": true,
    },
  ],
  "groups": [
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Net Amount",
          "name": "net_amount",
          "state": "{= extension.formatters.formatCriticality(\${Language}, 'color') }",
          "type": "Status",
          "value": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Gross Amount",
          "name": "gross_amount",
          "state": "Error",
          "type": "Status",
          "value": "{gross_amount} {currency_code}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Tax Amount",
          "name": "tax_amount",
          "value": "{tax_amount} {currency_code}",
        },
      ],
      "title": "Amount",
    },
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Business Partner ID",
          "name": "bp_id",
          "value": "{bp_id}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Created At",
          "name": "created_at",
          "value": "{= format.dateTime(\${created_at}, {"relative":true,"UTC":false})}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Sales Order ID",
          "name": "so_id",
          "value": "{so_id}",
        },
      ],
      "title": "Additional Info",
    },
  ],
  "headerUOM": "",
  "mainIndicatorOptions": {
    "criticalityOptions": [
      {
        "activeCalculation": false,
        "criticality": "{Language}",
        "name": "net_amount",
      },
      {
        "activeCalculation": false,
        "criticality": "Error",
        "name": "gross_amount",
      },
    ],
    "mainIndicatorNavigationSelectedKey": "",
    "mainIndicatorStatusKey": "net_amount",
    "navigationValue": "net_amount",
    "trendOptions": {
      "downDifference": "11",
      "referenceValue": "3333",
      "upDifference": "22",
    },
  },
  "sideIndicatorOptions": {
    "deviationUnit": "%",
    "deviationValue": "33",
    "targetUnit": "K",
    "targetValue": "22",
  },
  "subtitle": "A Fiori application.",
  "textArrangementsFromCardManifest": [],
  "title": "Sales Order",
}
`;

exports[`parseCard Validate parseCard generated content when manifest fields have static criticality 1`] = `
{
  "formatterConfigurationFromCardManifest": [
    {
      "displayName": "Float",
      "formatterName": "format.float",
      "parameters": [
        {
          "defaultValue": "",
          "displayName": "Options",
          "name": "options",
          "properties": [
            {
              "defaultValue": 2,
              "displayName": "Decimals",
              "name": "decimals",
              "type": "number",
              "value": 2,
            },
            {
              "defaultSelectedKey": "short",
              "displayName": "Style",
              "name": "style",
              "options": [
                {
                  "name": "Short",
                  "value": "short",
                },
                {
                  "name": "Long",
                  "value": "long",
                },
              ],
              "selectedKey": "short",
              "type": "enum",
              "value": "short",
            },
          ],
          "type": "object",
        },
      ],
      "property": "net_amount",
      "type": "numeric",
      "visible": true,
    },
  ],
  "groups": [
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Net Amount",
          "name": "net_amount",
          "state": "Error",
          "type": "Status",
          "value": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
        },
      ],
      "title": "Amount",
    },
  ],
  "headerUOM": "",
  "mainIndicatorOptions": {
    "criticalityOptions": [
      {
        "activeCalculation": false,
        "criticality": "Error",
        "name": "net_amount",
      },
      {
        "activeCalculation": false,
        "criticality": "Good",
        "name": "Language",
      },
    ],
    "mainIndicatorNavigationSelectedKey": "",
    "mainIndicatorStatusKey": "Language",
    "navigationValue": "Language",
    "trendOptions": {
      "downDifference": "",
      "referenceValue": "",
      "upDifference": "",
    },
  },
  "sideIndicatorOptions": {
    "deviationUnit": "",
    "deviationValue": "",
    "targetUnit": "",
    "targetValue": "",
  },
  "subtitle": "A Fiori application.",
  "textArrangementsFromCardManifest": [],
  "title": "Sales Order",
}
`;

exports[`parseCard Validate parseCard generated content when manifest fields have static criticality as None 1`] = `
{
  "formatterConfigurationFromCardManifest": [
    {
      "displayName": "Float",
      "formatterName": "format.float",
      "parameters": [
        {
          "defaultValue": "",
          "displayName": "Options",
          "name": "options",
          "properties": [
            {
              "defaultValue": 2,
              "displayName": "Decimals",
              "name": "decimals",
              "type": "number",
              "value": 2,
            },
            {
              "defaultSelectedKey": "short",
              "displayName": "Style",
              "name": "style",
              "options": [
                {
                  "name": "Short",
                  "value": "short",
                },
                {
                  "name": "Long",
                  "value": "long",
                },
              ],
              "selectedKey": "short",
              "type": "enum",
              "value": "short",
            },
          ],
          "type": "object",
        },
      ],
      "property": "net_amount",
      "type": "numeric",
      "visible": true,
    },
  ],
  "groups": [
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Net Amount",
          "name": "net_amount",
          "value": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
        },
      ],
      "title": "Amount",
    },
  ],
  "headerUOM": "",
  "mainIndicatorOptions": {
    "criticalityOptions": [],
    "mainIndicatorNavigationSelectedKey": "",
    "mainIndicatorStatusKey": "Language",
    "navigationValue": "Language",
    "trendOptions": {
      "downDifference": "",
      "referenceValue": "",
      "upDifference": "",
    },
  },
  "sideIndicatorOptions": {
    "deviationUnit": "",
    "deviationValue": "",
    "targetUnit": "",
    "targetValue": "",
  },
  "subtitle": "A Fiori application.",
  "textArrangementsFromCardManifest": [],
  "title": "Sales Order",
}
`;

exports[`parseCard Validate parseCard generated content with trend enabled 1`] = `
{
  "formatterConfigurationFromCardManifest": [],
  "groups": [
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Activation Status",
          "name": "CndnContrActvtnStatusName",
          "value": "{{GROUP_1_VALUE_1}}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Process Category",
          "name": "CndnContrProcessCategoryDesc",
          "value": "{{GROUP_1_VALUE_2}}",
        },
      ],
      "title": "Group 1",
    },
    {
      "items": [
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Sales Organization Description",
          "name": "SalesOrganizationName",
          "value": "{{GROUP_2_VALUE_1}}",
        },
        {
          "isEnabled": true,
          "isNavigationEnabled": false,
          "label": "Short Description",
          "name": "CndnContrPrtlSettlmtCatName",
          "value": "{{GROUP_2_VALUE_2}}",
        },
      ],
      "title": "Group 2",
    },
  ],
  "headerUOM": "Condition Control Type Description (USD)",
  "mainIndicatorOptions": {
    "criticalityOptions": [],
    "mainIndicatorNavigationSelectedKey": "",
    "mainIndicatorStatusKey": "NUMBER",
    "navigationValue": "NUMBER",
    "trendOptions": {
      "downDifference": "11",
      "referenceValue": "3333",
      "upDifference": "22",
    },
  },
  "sideIndicatorOptions": {
    "deviationUnit": "",
    "deviationValue": "",
    "targetUnit": "",
    "targetValue": "",
  },
  "subtitle": "Header Subtitle",
  "textArrangementsFromCardManifest": [],
  "title": "Header Title",
}
`;

exports[`parseCard Validate parseCard generated with no contents for group or mainIndicator 1`] = `
{
  "formatterConfigurationFromCardManifest": [],
  "groups": [],
  "headerUOM": "",
  "mainIndicatorOptions": {
    "criticalityOptions": [],
    "mainIndicatorNavigationSelectedKey": "",
    "mainIndicatorStatusKey": "",
    "navigationValue": "",
    "trendOptions": {
      "downDifference": "",
      "referenceValue": "",
      "upDifference": "",
    },
  },
  "sideIndicatorOptions": {
    "deviationUnit": "",
    "deviationValue": "",
    "targetUnit": "",
    "targetValue": "",
  },
  "subtitle": "",
  "textArrangementsFromCardManifest": [],
  "title": "",
}
`;

exports[`updateCardGroups for group level should filter out valid items which needs to be added to the card manifest 1`] = `
[
  {
    "items": [
      {
        "label": "Label 2",
        "name": "Item 2",
        "value": "Value 2",
      },
    ],
    "title": "Group 1",
  },
]
`;

exports[`updateCardGroups for group level should handle groups with no items property 1`] = `
[
  {
    "items": [],
    "title": "Group 1",
  },
]
`;

exports[`updateCardGroups for group level should handle the scenario when there is no item added to the group 1`] = `
[
  {
    "items": [],
    "title": "Group 1",
  },
]
`;

exports[`updateCardGroups for group level should update manifest groups based on model data 1`] = `
[
  {
    "items": [
      {
        "actions": [],
        "label": "Net Amount",
        "name": "net_amount",
        "state": "{= extension.formatters.formatCriticality(\${Language}, 'state') }",
        "type": "Status",
        "value": "{= format.unit(\${net_amount}, \${currency_code})}",
      },
      {
        "label": "Gross Amount",
        "name": "gross_amount",
        "value": "{= format.unit(\${gross_amount}, \${currency_code})}",
      },
      {
        "label": "Tax Amount",
        "name": "DraftEntityCreationDateTime",
        "state": "Error",
        "type": "Status",
        "value": "{= format.dateTime(\${DraftEntityCreationDateTime}, {"relative":false,"UTC":true})}",
      },
      {
        "label": "CardGeneratorGroupPropertyLabel_Groups_0_Items_3",
        "name": "so_id",
        "state": "{= extension.formatters.formatCriticality(\${op_id_fc}, 'state') }",
        "type": "Status",
        "value": "{so_id}",
      },
    ],
    "title": "Group 1",
  },
  {
    "items": [
      {
        "label": "Business Partner ID",
        "name": "net_amount",
        "state": "{= extension.formatters.formatCriticality(\${Language}, 'state') }",
        "type": "Status",
        "value": "{= format.unit(\${net_amount}, \${currency_code})}",
      },
      {
        "label": "Created At",
        "name": "node_key",
        "state": "{= extension.formatters.formatValueColor(\${node_key},{"oCriticalityConfigValues":{"None":"None","Negative":"Error","Critical":"Warning","Positive":"Success"}}) }",
        "type": "Status",
        "value": "{node_key}",
      },
    ],
    "title": "Additional Info",
  },
  {
    "items": [
      {
        "label": "CardGeneratorGroupPropertyLabel_Groups_2_Items_0",
        "name": "DraftEntityCreationDateTime",
        "state": "Error",
        "type": "Status",
        "value": "{= format.dateTime(\${DraftEntityCreationDateTime}, {"relative":false,"UTC":true})}",
      },
      {
        "label": "CardGeneratorGroupPropertyLabel_Groups_2_Items_1",
        "name": "net_amount",
        "state": "{= extension.formatters.formatCriticality(\${Language}, 'state') }",
        "type": "Status",
        "value": "{= format.unit(\${net_amount}, \${currency_code})}",
      },
      {
        "label": "CardGeneratorGroupPropertyLabel_Groups_2_Items_2",
        "name": "changed_at",
        "state": "None",
        "type": "Status",
        "value": "{= format.dateTime(\${changed_at}, {"relative":false,"UTC":true})}",
      },
      {
        "label": "Tax Amount",
        "name": "tax_amount",
        "value": "{= format.unit(\${tax_amount}, \${currency_code})}",
      },
    ],
    "title": "CardGeneratorGroupHeader_Groups_2",
  },
]
`;

exports[`updateExistingCardManifest it should have app component id as sap.app.id, i18n properties path and mandatory OData properties and their types in configuration paramereters 1`] = `
{
  "_version": "1.15.0",
  "sap.app": {
    "applicationVersion": {
      "version": "1.0.0",
    },
    "i18n": "../../../i18n/i18n.properties",
    "id": "testComponent",
    "subTitle": "A Fiori application. | {overall_status}",
    "title": "Sales Order",
    "type": "card",
  },
  "sap.card": {
    "configuration": {
      "csrfTokens": {
        "token1": {
          "data": {
            "request": {
              "headers": {
                "X-CSRF-Token": "Fetch",
              },
              "method": "HEAD",
              "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder",
            },
          },
        },
      },
      "destinations": {
        "service": {
          "defaultUrl": "/",
          "name": "(default)",
        },
      },
      "parameters": {
        "IsActiveEntity": {
          "type": "boolean",
          "value": true,
        },
        "_contentExpandQuery": {
          "value": "",
        },
        "_contentSelectQuery": {
          "value": "",
        },
        "_entitySet": {
          "type": "string",
          "value": "C_STTA_SalesOrder_WD_20",
        },
        "_headerExpandQuery": {
          "value": "",
        },
        "_headerSelectQuery": {
          "value": "",
        },
        "contextParameters": {
          "type": "string",
          "value": "node_key=guid'fa163ee4-7bdd-1ee8-b1ff-d3c5a4e5236a',IsActiveEntity=true",
        },
        "node_key": {
          "type": "string",
          "value": "guid'fa163ee4-7bdd-1ee8-b1ff-d3c5a4e5236a'",
        },
      },
    },
    "content": {
      "data": {
        "path": "/content/d/",
      },
      "groups": [
        {
          "items": [
            {
              "label": "Net Amount",
              "name": "net_amount",
              "value": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
            },
            {
              "label": "Gross Amount",
              "name": "gross_amount",
              "value": "{gross_amount} {currency_code}",
            },
            {
              "label": "Tax Amount",
              "name": "tax_amount",
              "value": "{tax_amount} {currency_code}",
            },
          ],
          "title": "Amount",
        },
      ],
    },
    "data": {
      "request": {
        "batch": {
          "content": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "url": "{{parameters._entitySet}}(node_key=guid'{{parameters.node_key}}',IsActiveEntity={{parameters.IsActiveEntity}})?{{parameters._contentSelectQuery}}{{parameters._contentExpandQuery}}",
          },
          "header": {
            "headers": {
              "Accept": "application/json",
              "Accept-Language": "{{parameters.LOCALE}}",
            },
            "method": "GET",
            "retryAfter": 30,
            "url": "{{parameters._entitySet}}(node_key=guid'{{parameters.node_key}}',IsActiveEntity={{parameters.IsActiveEntity}})?{{parameters._headerSelectQuery}}{{parameters._headerExpandQuery}}",
          },
        },
        "headers": {
          "X-CSRF-Token": "{{csrfTokens.token1}}",
        },
        "method": "POST",
        "url": "{{destinations.service}}/sap/opu/odata/sap/salesorder/$batch",
      },
    },
    "extension": "module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension",
    "header": {
      "data": {
        "path": "/header/d/",
      },
      "mainIndicator": {
        "number": "{= format.float(\${net_amount}, {"decimals":2,"style":"short"})} {currency_code}",
        "state": "None",
        "trend": "None",
        "unit": "",
      },
      "subTitle": "A Fiori application.",
      "title": "Sales Order",
      "type": "Numeric",
      "unitOfMeasurement": "",
    },
    "type": "Object",
  },
  "sap.ui": {
    "icons": {
      "icon": "sap-icon://switch-classes",
    },
    "technology": "UI5",
  },
}
`;
