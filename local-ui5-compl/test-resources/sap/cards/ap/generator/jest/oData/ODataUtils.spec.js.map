{"version":3,"file":"ODataUtils.spec.js","names":["sap","ui","define","sap_cards_ap_generator_odata_ODataUtils","createPathWithEntityContext","fetchDataAsyncV4","describe","originalFetch","sUrl","sPath","expectedValue","value","Response","Status","StatusText","Headers","beforeEach","global","fetch","jest","fn","Promise","resolve","json","afterEach","test","then","result","expect","toHaveBeenCalledWith","toBe","e","reject","windowSpy","BankCountry","IsActiveEntity","beforeAll","spyOn","window","mockImplementation","hasher","getHash","afterAll","restoreAllMocks","mockMetaData","getMetaModel","getObject","sParam","entityContainer","$kind","CashBank","$Type","$Key","BankInternalID","replace","getODataEntitySet","path","name","entityType","getContext","expectedPath","updatedPath","toEqual","mockMetamodel","$PropertyPath","getServiceUrl","isA","getODataEntityType","key","propertyRef","property","type","nullable","kind","getODataAssociationEnd","getODataEntityContainer","entitySet"],"sources":["ODataUtils.spec.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { createPathWithEntityContext, fetchDataAsyncV4 } from \"sap/cards/ap/generator/odata/ODataUtils\";\n\ndescribe(\"fetchDataAsyncV4\", () => {\n\tlet originalFetch: any;\n\tlet sUrl = \"https://url/test/\";\n\tconst sPath = \"Products\";\n\tconst expectedValue = {\n\t\tvalue: \"Testing!\",\n\t\tResponse: \"Success\",\n\t\tStatus: 200,\n\t\tStatusText: \"OK\",\n\t\tHeaders: \"Content-Type: application/json\"\n\t};\n\tbeforeEach(() => {\n\t\toriginalFetch = global.fetch;\n\t\tglobal.fetch = jest.fn(() =>\n\t\t\tPromise.resolve({\n\t\t\t\tjson: () => Promise.resolve(expectedValue)\n\t\t\t})\n\t\t) as jest.Mock;\n\t});\n\n\tafterEach(() => {\n\t\tglobal.fetch = originalFetch;\n\t});\n\n\ttest(\"fetchDataAsyncV4 - service URL ending with /\", async () => {\n\t\tconst result = await fetchDataAsyncV4(sUrl, sPath, {});\n\t\texpect(global.fetch).toHaveBeenCalledWith(\"https://url/test/Products?format=json\");\n\t\texpect(result).toBe(expectedValue);\n\t});\n\n\ttest(\"fetchDataAsyncV4 service URL ending without /\", async () => {\n\t\tsUrl = \"https://url/test\";\n\t\tconst result = await fetchDataAsyncV4(sUrl, sPath, {});\n\t\texpect(global.fetch).toHaveBeenCalledWith(\"https://url/test/Products?format=json\");\n\t\texpect(result).toBe(expectedValue);\n\t});\n});\n\ndescribe(\"createPathWithEntityContext\", () => {\n\tlet windowSpy: jest.SpyInstance;\n\tlet originalFetch: any;\n\tconst expectedValue = {\n\t\tvalue: [\n\t\t\t{\n\t\t\t\tBankCountry: \"AD\",\n\t\t\t\tIsActiveEntity: true\n\t\t\t}\n\t\t]\n\t};\n\tbeforeAll(() => {\n\t\twindowSpy = jest.spyOn(window, \"window\", \"get\");\n\t\twindowSpy.mockImplementation(() => ({\n\t\t\thasher: {\n\t\t\t\tgetHash: () => \"test-intent&/I_BillingBlockReason(12345)\"\n\t\t\t}\n\t\t}));\n\t\toriginalFetch = global.fetch;\n\t\tglobal.fetch = jest.fn(() =>\n\t\t\tPromise.resolve({\n\t\t\t\tjson: () => Promise.resolve(expectedValue)\n\t\t\t})\n\t\t) as jest.Mock;\n\t});\n\tafterAll(() => {\n\t\tjest.restoreAllMocks();\n\t\tglobal.fetch = originalFetch;\n\t});\n\n\ttest(\"validate method createPathWithEntityContext for V4 data - with multiple context parameters\", async () => {\n\t\tconst mockMetaData = {\n\t\t\tgetMetaModel: () => {\n\t\t\t\treturn {\n\t\t\t\t\tgetObject: (sParam: string) => {\n\t\t\t\t\t\tconst entityContainer = {\n\t\t\t\t\t\t\t$kind: \"EntityContainer\",\n\t\t\t\t\t\t\tCashBank: {\n\t\t\t\t\t\t\t\t$kind: \"EntitySet\",\n\t\t\t\t\t\t\t\t$Type: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\": {\n\t\t\t\t\t\t\t\t$kind: \"EntityType\",\n\t\t\t\t\t\t\t\t$Key: [\"BankCountry\", \"BankInternalID\", \"IsActiveEntity\"],\n\t\t\t\t\t\t\t\tBankCountry: {\n\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Country\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tBankInternalID: {\n\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Internal ID\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tIsActiveEntity: {\n\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t$Type: \"Edm.Boolean\",\n\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Is Active Entity\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (sParam === \"/\") {\n\t\t\t\t\t\t\treturn entityContainer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsParam = sParam.replace(\"/\", \"\");\n\t\t\t\t\t\treturn entityContainer[sParam];\n\t\t\t\t\t},\n\t\t\t\t\tgetODataEntitySet: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: \"CashBank\",\n\t\t\t\t\t\t\tentityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: (path: string) => {\n\t\t\t\treturn {\n\t\t\t\t\tgetObject: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tBankInternalID: \"0000000002\",\n\t\t\t\t\t\t\tIsActiveEntity: true,\n\t\t\t\t\t\t\tBankCountry: \"AD\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tconst path = \"CashBank(BankCountry='AD',BankInternalID='0000000002')\";\n\t\tconst expectedPath = \"CashBank(BankCountry='AD',BankInternalID='0000000002',IsActiveEntity=true)\";\n\n\t\tconst updatedPath = await createPathWithEntityContext(path, mockMetaData, true);\n\t\texpect(updatedPath).toEqual(expectedPath);\n\t});\n\n\ttest(\"validate method createPathWithEntityContext for V4 data - with single context guid parameters\", async () => {\n\t\tconst mockMetaData = {\n\t\t\tgetMetaModel: () => {\n\t\t\t\treturn {\n\t\t\t\t\tgetObject: (sParam: string) => {\n\t\t\t\t\t\tconst entityContainer = {\n\t\t\t\t\t\t\t$kind: \"EntityContainer\",\n\t\t\t\t\t\t\tCashBank: {\n\t\t\t\t\t\t\t\t$kind: \"EntitySet\",\n\t\t\t\t\t\t\t\t$Type: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\": {\n\t\t\t\t\t\t\t\t$kind: \"EntityType\",\n\t\t\t\t\t\t\t\t$Key: [\"BankCountry\", \"IsActiveEntity\"],\n\t\t\t\t\t\t\t\tBankCountry: {\n\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t$Type: \"Edm.Guid\",\n\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Country\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tIsActiveEntity: {\n\t\t\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t\t\t$Type: \"Edm.Boolean\",\n\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Is Active Entity\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (sParam === \"/\") {\n\t\t\t\t\t\t\treturn entityContainer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsParam = sParam.replace(\"/\", \"\");\n\t\t\t\t\t\treturn entityContainer[sParam];\n\t\t\t\t\t},\n\t\t\t\t\tgetODataEntitySet: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: \"CashBank\",\n\t\t\t\t\t\t\tentityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: (path: string) => {\n\t\t\t\treturn {\n\t\t\t\t\tgetObject: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tIsActiveEntity: true,\n\t\t\t\t\t\t\tBankCountry: \"'AD'\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tconst path = \"CashBank(BankCountry='AD')\";\n\t\tconst expectedPath = \"CashBank(BankCountry='AD',IsActiveEntity=true)\";\n\n\t\tconst updatedPath = await createPathWithEntityContext(path, mockMetaData, true);\n\t\texpect(updatedPath).toEqual(expectedPath);\n\t});\n\n\ttest(\"validate method createPathWithEntityContext for V4 data - with semantic key annotation\", async () => {\n\t\tconst mockMetamodel = {\n\t\t\tgetObject: (sParam: string) => {\n\t\t\t\tconst entityContainer = {\n\t\t\t\t\t$kind: \"EntityContainer\",\n\t\t\t\t\tCashBank: {\n\t\t\t\t\t\t$kind: \"EntitySet\",\n\t\t\t\t\t\t$Type: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t},\n\t\t\t\t\t\"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\": {\n\t\t\t\t\t\t$kind: \"EntityType\",\n\t\t\t\t\t\t$Key: [\"BankCountry\", \"IsActiveEntity\"],\n\t\t\t\t\t\tBankCountry: {\n\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Country\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIsActiveEntity: {\n\t\t\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t\t\t$Type: \"Edm.Boolean\",\n\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Is Active Entity\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (sParam === \"/\") {\n\t\t\t\t\treturn entityContainer;\n\t\t\t\t}\n\t\t\t\tif (sParam === \"/CashBank/@com.sap.vocabularies.Common.v1.SemanticKey\") {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$PropertyPath: \"BankCountry\"\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tsParam = sParam.replace(\"/\", \"\");\n\t\t\t\treturn entityContainer[sParam];\n\t\t\t},\n\t\t\tgetODataEntitySet: (path: string) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: \"CashBank\",\n\t\t\t\t\tentityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tconst mockMetaData = {\n\t\t\tgetMetaModel: () => {\n\t\t\t\treturn mockMetamodel;\n\t\t\t},\n\t\t\tgetContext: (path: string) => {\n\t\t\t\treturn {\n\t\t\t\t\tgetObject: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tIsActiveEntity: true,\n\t\t\t\t\t\t\tBankCountry: \"AD\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetServiceUrl: () => \"/sap/opu/odata\",\n\t\t\tisA: () => true\n\t\t};\n\n\t\tconst path = \"CashBank('AD')\";\n\t\tconst expectedPath = \"CashBank(BankCountry='AD',IsActiveEntity=true)\";\n\t\tconst updatedPath = await createPathWithEntityContext(path, mockMetaData, true);\n\n\t\texpect(updatedPath).toEqual(expectedPath);\n\t});\n\n\ttest(\"validate method createPathWithEntityContext for V2 data - with multiple context parameters\", async () => {\n\t\tconst mockMetaData = {\n\t\t\tgetMetaModel: () => {\n\t\t\t\treturn {\n\t\t\t\t\tgetODataEntityType: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\tpropertyRef: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"BankCountry\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"BankInternalID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tproperty: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"BankCountry\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.String\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Bank Country\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"BankInternalID\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.Guid\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Bank Internal ID\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.Boolean\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Is Active Entity\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tgetODataAssociationEnd: () => {},\n\t\t\t\t\tgetODataEntitySet: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: \"CashBank\",\n\t\t\t\t\t\t\tentityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetObject: () => {\n\t\t\t\treturn {\n\t\t\t\t\tBankInternalID: \"0000000002\",\n\t\t\t\t\tIsActiveEntity: true,\n\t\t\t\t\tBankCountry: \"AD\"\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tconst path = \"CashBank(BankInternalID=guid'0000000002',BankCountry='AD',IsActiveEntity=true)\";\n\t\tconst expectedPath = \"CashBank(BankCountry='AD',BankInternalID=guid'0000000002',IsActiveEntity=true)\";\n\n\t\tconst updatedPath = await createPathWithEntityContext(path, mockMetaData, false);\n\t\texpect(updatedPath).toEqual(expectedPath);\n\t});\n\n\ttest(\"validate method createPathWithEntityContext for V2 data - with single context guid parameter\", async () => {\n\t\tconst mockMetaData = {\n\t\t\tgetMetaModel: () => {\n\t\t\t\treturn {\n\t\t\t\t\tgetODataEntityContainer: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tentitySet: [{ name: \"CashBank\", entityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\" }]\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tgetODataEntityType: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\tpropertyRef: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"BankCountry\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"BankInternalID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tproperty: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"BankCountry\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.String\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Bank Country\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"BankInternalID\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.Guid\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Bank Internal ID\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.Boolean\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Is Active Entity\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tgetODataAssociationEnd: () => {},\n\t\t\t\t\tgetODataEntitySet: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: \"CashBank\",\n\t\t\t\t\t\t\tentityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetObject: () => {\n\t\t\t\treturn {\n\t\t\t\t\tBankInternalID: \"0000000002\",\n\t\t\t\t\tIsActiveEntity: true,\n\t\t\t\t\tBankCountry: \"AD\"\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tconst path = \"CashBank(BankInternalID=guid'005056a7-004e-1ed8-b2e0-081387831f0d',IsActiveEntity=true)\";\n\t\tconst expectedPath = \"CashBank(BankCountry='AD',BankInternalID=guid'0000000002',IsActiveEntity=true)\";\n\n\t\tconst updatedPath = await createPathWithEntityContext(path, mockMetaData, false);\n\t\texpect(updatedPath).toEqual(expectedPath);\n\t});\n\n\ttest(\"validate method createPathWithEntityContext for V2 data - with guid as context parameter\", async () => {\n\t\tconst mockMetaData = {\n\t\t\tgetMetaModel: () => {\n\t\t\t\treturn {\n\t\t\t\t\tgetODataEntityContainer: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tentitySet: [{ name: \"CashBank\", entityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\" }]\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tgetODataEntityType: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\tpropertyRef: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"BankCountry\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"BankInternalID\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tproperty: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"BankCountry\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.String\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Bank Country\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"BankInternalID\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.Guid\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Bank Internal ID\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"IsActiveEntity\",\n\t\t\t\t\t\t\t\t\ttype: \"Edm.Boolean\",\n\t\t\t\t\t\t\t\t\tnullable: \"false\",\n\t\t\t\t\t\t\t\t\t\"sap:label\": \"Is Active Entity\",\n\t\t\t\t\t\t\t\t\tkind: \"Property\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tgetODataAssociationEnd: () => {},\n\t\t\t\t\tgetODataEntitySet: (path: string) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: \"CashBank\",\n\t\t\t\t\t\t\tentityType: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetObject: () => {\n\t\t\t\treturn {\n\t\t\t\t\tBankInternalID: \"0000000002\",\n\t\t\t\t\tIsActiveEntity: true,\n\t\t\t\t\tBankCountry: \"AD\"\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tconst path = \"CashBank('0000000002')\";\n\t\tconst expectedPath = \"CashBank(BankCountry='AD',BankInternalID=guid'0000000002',IsActiveEntity=true)\";\n\n\t\tconst updatedPath = await createPathWithEntityContext(path, mockMetaData, false);\n\t\texpect(updatedPath).toEqual(expectedPath);\n\t});\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAHA;;AAAAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,wDAAAC,uCAAA;EAAA;;EAAA,MAISC,2BAA2B,GAAAD,uCAAA;EAAA,MAAEE,gBAAgB,GAAAF,uCAAA;EAEtDG,QAAQ,CAAC,kBAAkB,EAAE,MAAM;IAClC,IAAIC,aAAkB;IACtB,IAAIC,IAAI,GAAG,mBAAmB;IAC9B,MAAMC,KAAK,GAAG,UAAU;IACxB,MAAMC,aAAa,GAAG;MACrBC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE,SAAS;MACnBC,MAAM,EAAE,GAAG;MACXC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;IACV,CAAC;IACDC,UAAU,CAAC,MAAM;MAChBT,aAAa,GAAGU,MAAM,CAACC,KAAK;MAC5BD,MAAM,CAACC,KAAK,GAAGC,IAAI,CAACC,EAAE,CAAC,MACtBC,OAAO,CAACC,OAAO,CAAC;QACfC,IAAI,EAAEA,CAAA,KAAMF,OAAO,CAACC,OAAO,CAACZ,aAAa;MAC1C,CAAC,CACF,CAAc;IACf,CAAC,CAAC;IAEFc,SAAS,CAAC,MAAM;MACfP,MAAM,CAACC,KAAK,GAAGX,aAAa;IAC7B,CAAC,CAAC;IAEFkB,IAAI,CAAC,8CAA8C;MAAA,IAAc;QAAA,OAAAJ,OAAA,CAAAC,OAAA,CAC3CjB,gBAAgB,CAACG,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAAiB,IAAA,WAAhDC,MAAM;UACZC,MAAM,CAACX,MAAM,CAACC,KAAK,CAAC,CAACW,oBAAoB,CAAC,uCAAuC,CAAC;UAClFD,MAAM,CAACD,MAAM,CAAC,CAACG,IAAI,CAACpB,aAAa,CAAC;QAAC;MACpC,CAAC,QAAAqB,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;IAEFN,IAAI,CAAC,+CAA+C;MAAA,IAAc;QACjEjB,IAAI,GAAG,kBAAkB;QAAC,OAAAa,OAAA,CAAAC,OAAA,CACLjB,gBAAgB,CAACG,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAAiB,IAAA,WAAhDC,MAAM;UACZC,MAAM,CAACX,MAAM,CAACC,KAAK,CAAC,CAACW,oBAAoB,CAAC,uCAAuC,CAAC;UAClFD,MAAM,CAACD,MAAM,CAAC,CAACG,IAAI,CAACpB,aAAa,CAAC;QAAC;MACpC,CAAC,QAAAqB,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;EACH,CAAC,CAAC;EAEFzB,QAAQ,CAAC,6BAA6B,EAAE,MAAM;IAC7C,IAAI2B,SAA2B;IAC/B,IAAI1B,aAAkB;IACtB,MAAMG,aAAa,GAAG;MACrBC,KAAK,EAAE,CACN;QACCuB,WAAW,EAAE,IAAI;QACjBC,cAAc,EAAE;MACjB,CAAC;IAEH,CAAC;IACDC,SAAS,CAAC,MAAM;MACfH,SAAS,GAAGd,IAAI,CAACkB,KAAK,CAACC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC;MAC/CL,SAAS,CAACM,kBAAkB,CAAC,OAAO;QACnCC,MAAM,EAAE;UACPC,OAAO,EAAEA,CAAA,KAAM;QAChB;MACD,CAAC,CAAC,CAAC;MACHlC,aAAa,GAAGU,MAAM,CAACC,KAAK;MAC5BD,MAAM,CAACC,KAAK,GAAGC,IAAI,CAACC,EAAE,CAAC,MACtBC,OAAO,CAACC,OAAO,CAAC;QACfC,IAAI,EAAEA,CAAA,KAAMF,OAAO,CAACC,OAAO,CAACZ,aAAa;MAC1C,CAAC,CACF,CAAc;IACf,CAAC,CAAC;IACFgC,QAAQ,CAAC,MAAM;MACdvB,IAAI,CAACwB,eAAe,CAAC,CAAC;MACtB1B,MAAM,CAACC,KAAK,GAAGX,aAAa;IAC7B,CAAC,CAAC;IAEFkB,IAAI,CAAC,4FAA4F;MAAA,IAAc;QAC9G,MAAMmB,YAAY,GAAG;UACpBC,YAAY,EAAEA,CAAA,KAAM;YACnB,OAAO;cACNC,SAAS,EAAGC,MAAc,IAAK;gBAC9B,MAAMC,eAAe,GAAG;kBACvBC,KAAK,EAAE,iBAAiB;kBACxBC,QAAQ,EAAE;oBACTD,KAAK,EAAE,WAAW;oBAClBE,KAAK,EAAE;kBACR,CAAC;kBACD,4DAA4D,EAAE;oBAC7DF,KAAK,EAAE,YAAY;oBACnBG,IAAI,EAAE,CAAC,aAAa,EAAE,gBAAgB,EAAE,gBAAgB,CAAC;oBACzDlB,WAAW,EAAE;sBACZe,KAAK,EAAE,UAAU;sBACjBE,KAAK,EAAE,YAAY;sBACnB,uCAAuC,EAAE;oBAC1C,CAAC;oBACDE,cAAc,EAAE;sBACfJ,KAAK,EAAE,UAAU;sBACjBE,KAAK,EAAE,YAAY;sBACnB,uCAAuC,EAAE;oBAC1C,CAAC;oBACDhB,cAAc,EAAE;sBACfc,KAAK,EAAE,UAAU;sBACjBE,KAAK,EAAE,aAAa;sBACpB,uCAAuC,EAAE;oBAC1C;kBACD;gBACD,CAAC;gBACD,IAAIJ,MAAM,KAAK,GAAG,EAAE;kBACnB,OAAOC,eAAe;gBACvB;gBACAD,MAAM,GAAGA,MAAM,CAACO,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;gBAChC,OAAON,eAAe,CAACD,MAAM,CAAC;cAC/B,CAAC;cACDQ,iBAAiB,EAAGC,IAAY,IAAK;gBACpC,OAAO;kBACNC,IAAI,EAAE,UAAU;kBAChBC,UAAU,EAAE;gBACb,CAAC;cACF;YACD,CAAC;UACF,CAAC;UACDC,UAAU,EAAGH,IAAY,IAAK;YAC7B,OAAO;cACNV,SAAS,EAAEA,CAAA,KAAM;gBAChB,OAAO;kBACNO,cAAc,EAAE,YAAY;kBAC5BlB,cAAc,EAAE,IAAI;kBACpBD,WAAW,EAAE;gBACd,CAAC;cACF;YACD,CAAC;UACF;QACD,CAAC;QACD,MAAMsB,IAAI,GAAG,wDAAwD;QACrE,MAAMI,YAAY,GAAG,4EAA4E;QAAC,OAAAvC,OAAA,CAAAC,OAAA,CAExElB,2BAA2B,CAACoD,IAAI,EAAEZ,YAAY,EAAE,IAAI,CAAC,EAAAlB,IAAA,WAAzEmC,WAAW;UACjBjC,MAAM,CAACiC,WAAW,CAAC,CAACC,OAAO,CAACF,YAAY,CAAC;QAAC;MAC3C,CAAC,QAAA7B,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;IAEFN,IAAI,CAAC,+FAA+F;MAAA,IAAc;QACjH,MAAMmB,YAAY,GAAG;UACpBC,YAAY,EAAEA,CAAA,KAAM;YACnB,OAAO;cACNC,SAAS,EAAGC,MAAc,IAAK;gBAC9B,MAAMC,eAAe,GAAG;kBACvBC,KAAK,EAAE,iBAAiB;kBACxBC,QAAQ,EAAE;oBACTD,KAAK,EAAE,WAAW;oBAClBE,KAAK,EAAE;kBACR,CAAC;kBACD,4DAA4D,EAAE;oBAC7DF,KAAK,EAAE,YAAY;oBACnBG,IAAI,EAAE,CAAC,aAAa,EAAE,gBAAgB,CAAC;oBACvClB,WAAW,EAAE;sBACZe,KAAK,EAAE,UAAU;sBACjBE,KAAK,EAAE,UAAU;sBACjB,uCAAuC,EAAE;oBAC1C,CAAC;oBACDhB,cAAc,EAAE;sBACfc,KAAK,EAAE,UAAU;sBACjBE,KAAK,EAAE,aAAa;sBACpB,uCAAuC,EAAE;oBAC1C;kBACD;gBACD,CAAC;gBACD,IAAIJ,MAAM,KAAK,GAAG,EAAE;kBACnB,OAAOC,eAAe;gBACvB;gBACAD,MAAM,GAAGA,MAAM,CAACO,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;gBAChC,OAAON,eAAe,CAACD,MAAM,CAAC;cAC/B,CAAC;cACDQ,iBAAiB,EAAGC,IAAY,IAAK;gBACpC,OAAO;kBACNC,IAAI,EAAE,UAAU;kBAChBC,UAAU,EAAE;gBACb,CAAC;cACF;YACD,CAAC;UACF,CAAC;UACDC,UAAU,EAAGH,IAAY,IAAK;YAC7B,OAAO;cACNV,SAAS,EAAEA,CAAA,KAAM;gBAChB,OAAO;kBACNX,cAAc,EAAE,IAAI;kBACpBD,WAAW,EAAE;gBACd,CAAC;cACF;YACD,CAAC;UACF;QACD,CAAC;QACD,MAAMsB,IAAI,GAAG,4BAA4B;QACzC,MAAMI,YAAY,GAAG,gDAAgD;QAAC,OAAAvC,OAAA,CAAAC,OAAA,CAE5ClB,2BAA2B,CAACoD,IAAI,EAAEZ,YAAY,EAAE,IAAI,CAAC,EAAAlB,IAAA,WAAzEmC,WAAW;UACjBjC,MAAM,CAACiC,WAAW,CAAC,CAACC,OAAO,CAACF,YAAY,CAAC;QAAC;MAC3C,CAAC,QAAA7B,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;IAEFN,IAAI,CAAC,wFAAwF;MAAA,IAAc;QAC1G,MAAMsC,aAAa,GAAG;UACrBjB,SAAS,EAAGC,MAAc,IAAK;YAC9B,MAAMC,eAAe,GAAG;cACvBC,KAAK,EAAE,iBAAiB;cACxBC,QAAQ,EAAE;gBACTD,KAAK,EAAE,WAAW;gBAClBE,KAAK,EAAE;cACR,CAAC;cACD,4DAA4D,EAAE;gBAC7DF,KAAK,EAAE,YAAY;gBACnBG,IAAI,EAAE,CAAC,aAAa,EAAE,gBAAgB,CAAC;gBACvClB,WAAW,EAAE;kBACZe,KAAK,EAAE,UAAU;kBACjBE,KAAK,EAAE,YAAY;kBACnB,uCAAuC,EAAE;gBAC1C,CAAC;gBACDhB,cAAc,EAAE;kBACfc,KAAK,EAAE,UAAU;kBACjBE,KAAK,EAAE,aAAa;kBACpB,uCAAuC,EAAE;gBAC1C;cACD;YACD,CAAC;YACD,IAAIJ,MAAM,KAAK,GAAG,EAAE;cACnB,OAAOC,eAAe;YACvB;YACA,IAAID,MAAM,KAAK,uDAAuD,EAAE;cACvE,OAAO,CACN;gBACCiB,aAAa,EAAE;cAChB,CAAC,CACD;YACF;YACAjB,MAAM,GAAGA,MAAM,CAACO,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;YAChC,OAAON,eAAe,CAACD,MAAM,CAAC;UAC/B,CAAC;UACDQ,iBAAiB,EAAGC,IAAY,IAAK;YACpC,OAAO;cACNC,IAAI,EAAE,UAAU;cAChBC,UAAU,EAAE;YACb,CAAC;UACF;QACD,CAAC;QACD,MAAMd,YAAY,GAAG;UACpBC,YAAY,EAAEA,CAAA,KAAM;YACnB,OAAOkB,aAAa;UACrB,CAAC;UACDJ,UAAU,EAAGH,IAAY,IAAK;YAC7B,OAAO;cACNV,SAAS,EAAEA,CAAA,KAAM;gBAChB,OAAO;kBACNX,cAAc,EAAE,IAAI;kBACpBD,WAAW,EAAE;gBACd,CAAC;cACF;YACD,CAAC;UACF,CAAC;UACD+B,aAAa,EAAEA,CAAA,KAAM,gBAAgB;UACrCC,GAAG,EAAEA,CAAA,KAAM;QACZ,CAAC;QAED,MAAMV,IAAI,GAAG,gBAAgB;QAC7B,MAAMI,YAAY,GAAG,gDAAgD;QAAC,OAAAvC,OAAA,CAAAC,OAAA,CAC5ClB,2BAA2B,CAACoD,IAAI,EAAEZ,YAAY,EAAE,IAAI,CAAC,EAAAlB,IAAA,WAAzEmC,WAAW;UAEjBjC,MAAM,CAACiC,WAAW,CAAC,CAACC,OAAO,CAACF,YAAY,CAAC;QAAC;MAC3C,CAAC,QAAA7B,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;IAEFN,IAAI,CAAC,4FAA4F;MAAA,IAAc;QAC9G,MAAMmB,YAAY,GAAG;UACpBC,YAAY,EAAEA,CAAA,KAAM;YACnB,OAAO;cACNsB,kBAAkB,EAAGX,IAAY,IAAK;gBACrC,OAAO;kBACNY,GAAG,EAAE;oBACJC,WAAW,EAAE,CACZ;sBACCZ,IAAI,EAAE;oBACP,CAAC,EACD;sBACCA,IAAI,EAAE;oBACP,CAAC,EACD;sBACCA,IAAI,EAAE;oBACP,CAAC;kBAEH,CAAC;kBACDa,QAAQ,EAAE,CACT;oBACCb,IAAI,EAAE,aAAa;oBACnBc,IAAI,EAAE,YAAY;oBAClBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,cAAc;oBAC3BC,IAAI,EAAE;kBACP,CAAC,EACD;oBACChB,IAAI,EAAE,gBAAgB;oBACtBc,IAAI,EAAE,UAAU;oBAChBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,kBAAkB;oBAC/BC,IAAI,EAAE;kBACP,CAAC,EACD;oBACChB,IAAI,EAAE,gBAAgB;oBACtBc,IAAI,EAAE,aAAa;oBACnBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,kBAAkB;oBAC/BC,IAAI,EAAE;kBACP,CAAC;gBAEH,CAAC;cACF,CAAC;cACDC,sBAAsB,EAAEA,CAAA,KAAM,CAAC,CAAC;cAChCnB,iBAAiB,EAAGC,IAAY,IAAK;gBACpC,OAAO;kBACNC,IAAI,EAAE,UAAU;kBAChBC,UAAU,EAAE;gBACb,CAAC;cACF;YACD,CAAC;UACF,CAAC;UACDZ,SAAS,EAAEA,CAAA,KAAM;YAChB,OAAO;cACNO,cAAc,EAAE,YAAY;cAC5BlB,cAAc,EAAE,IAAI;cACpBD,WAAW,EAAE;YACd,CAAC;UACF;QACD,CAAC;QACD,MAAMsB,IAAI,GAAG,gFAAgF;QAC7F,MAAMI,YAAY,GAAG,gFAAgF;QAAC,OAAAvC,OAAA,CAAAC,OAAA,CAE5ElB,2BAA2B,CAACoD,IAAI,EAAEZ,YAAY,EAAE,KAAK,CAAC,EAAAlB,IAAA,WAA1EmC,WAAW;UACjBjC,MAAM,CAACiC,WAAW,CAAC,CAACC,OAAO,CAACF,YAAY,CAAC;QAAC;MAC3C,CAAC,QAAA7B,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;IAEFN,IAAI,CAAC,8FAA8F;MAAA,IAAc;QAChH,MAAMmB,YAAY,GAAG;UACpBC,YAAY,EAAEA,CAAA,KAAM;YACnB,OAAO;cACN8B,uBAAuB,EAAEA,CAAA,KAAM;gBAC9B,OAAO;kBACNC,SAAS,EAAE,CAAC;oBAAEnB,IAAI,EAAE,UAAU;oBAAEC,UAAU,EAAE;kBAA6D,CAAC;gBAC3G,CAAC;cACF,CAAC;cACDS,kBAAkB,EAAGX,IAAY,IAAK;gBACrC,OAAO;kBACNY,GAAG,EAAE;oBACJC,WAAW,EAAE,CACZ;sBACCZ,IAAI,EAAE;oBACP,CAAC,EACD;sBACCA,IAAI,EAAE;oBACP,CAAC,EACD;sBACCA,IAAI,EAAE;oBACP,CAAC;kBAEH,CAAC;kBACDa,QAAQ,EAAE,CACT;oBACCb,IAAI,EAAE,aAAa;oBACnBc,IAAI,EAAE,YAAY;oBAClBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,cAAc;oBAC3BC,IAAI,EAAE;kBACP,CAAC,EACD;oBACChB,IAAI,EAAE,gBAAgB;oBACtBc,IAAI,EAAE,UAAU;oBAChBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,kBAAkB;oBAC/BC,IAAI,EAAE;kBACP,CAAC,EACD;oBACChB,IAAI,EAAE,gBAAgB;oBACtBc,IAAI,EAAE,aAAa;oBACnBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,kBAAkB;oBAC/BC,IAAI,EAAE;kBACP,CAAC;gBAEH,CAAC;cACF,CAAC;cACDC,sBAAsB,EAAEA,CAAA,KAAM,CAAC,CAAC;cAChCnB,iBAAiB,EAAGC,IAAY,IAAK;gBACpC,OAAO;kBACNC,IAAI,EAAE,UAAU;kBAChBC,UAAU,EAAE;gBACb,CAAC;cACF;YACD,CAAC;UACF,CAAC;UACDZ,SAAS,EAAEA,CAAA,KAAM;YAChB,OAAO;cACNO,cAAc,EAAE,YAAY;cAC5BlB,cAAc,EAAE,IAAI;cACpBD,WAAW,EAAE;YACd,CAAC;UACF;QACD,CAAC;QACD,MAAMsB,IAAI,GAAG,yFAAyF;QACtG,MAAMI,YAAY,GAAG,gFAAgF;QAAC,OAAAvC,OAAA,CAAAC,OAAA,CAE5ElB,2BAA2B,CAACoD,IAAI,EAAEZ,YAAY,EAAE,KAAK,CAAC,EAAAlB,IAAA,WAA1EmC,WAAW;UACjBjC,MAAM,CAACiC,WAAW,CAAC,CAACC,OAAO,CAACF,YAAY,CAAC;QAAC;MAC3C,CAAC,QAAA7B,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;IAEFN,IAAI,CAAC,0FAA0F;MAAA,IAAc;QAC5G,MAAMmB,YAAY,GAAG;UACpBC,YAAY,EAAEA,CAAA,KAAM;YACnB,OAAO;cACN8B,uBAAuB,EAAEA,CAAA,KAAM;gBAC9B,OAAO;kBACNC,SAAS,EAAE,CAAC;oBAAEnB,IAAI,EAAE,UAAU;oBAAEC,UAAU,EAAE;kBAA6D,CAAC;gBAC3G,CAAC;cACF,CAAC;cACDS,kBAAkB,EAAGX,IAAY,IAAK;gBACrC,OAAO;kBACNY,GAAG,EAAE;oBACJC,WAAW,EAAE,CACZ;sBACCZ,IAAI,EAAE;oBACP,CAAC,EACD;sBACCA,IAAI,EAAE;oBACP,CAAC,EACD;sBACCA,IAAI,EAAE;oBACP,CAAC;kBAEH,CAAC;kBACDa,QAAQ,EAAE,CACT;oBACCb,IAAI,EAAE,aAAa;oBACnBc,IAAI,EAAE,YAAY;oBAClBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,cAAc;oBAC3BC,IAAI,EAAE;kBACP,CAAC,EACD;oBACChB,IAAI,EAAE,gBAAgB;oBACtBc,IAAI,EAAE,UAAU;oBAChBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,kBAAkB;oBAC/BC,IAAI,EAAE;kBACP,CAAC,EACD;oBACChB,IAAI,EAAE,gBAAgB;oBACtBc,IAAI,EAAE,aAAa;oBACnBC,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,kBAAkB;oBAC/BC,IAAI,EAAE;kBACP,CAAC;gBAEH,CAAC;cACF,CAAC;cACDC,sBAAsB,EAAEA,CAAA,KAAM,CAAC,CAAC;cAChCnB,iBAAiB,EAAGC,IAAY,IAAK;gBACpC,OAAO;kBACNC,IAAI,EAAE,UAAU;kBAChBC,UAAU,EAAE;gBACb,CAAC;cACF;YACD,CAAC;UACF,CAAC;UACDZ,SAAS,EAAEA,CAAA,KAAM;YAChB,OAAO;cACNO,cAAc,EAAE,YAAY;cAC5BlB,cAAc,EAAE,IAAI;cACpBD,WAAW,EAAE;YACd,CAAC;UACF;QACD,CAAC;QACD,MAAMsB,IAAI,GAAG,wBAAwB;QACrC,MAAMI,YAAY,GAAG,gFAAgF;QAAC,OAAAvC,OAAA,CAAAC,OAAA,CAE5ElB,2BAA2B,CAACoD,IAAI,EAAEZ,YAAY,EAAE,KAAK,CAAC,EAAAlB,IAAA,WAA1EmC,WAAW;UACjBjC,MAAM,CAACiC,WAAW,CAAC,CAACC,OAAO,CAACF,YAAY,CAAC;QAAC;MAC3C,CAAC,QAAA7B,CAAA;QAAA,OAAAV,OAAA,CAAAW,MAAA,CAAAD,CAAA;MAAA;IAAA,EAAC;EACH,CAAC,CAAC;AAAC","ignoreList":[]}