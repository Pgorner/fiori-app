{"version":3,"file":"MetadataAnalyzer.spec.js","names":["sap","ui","define","sap_cards_ap_generator_odata_v4_MetadataAnalyzer","getNavigationPropertyInfoFromEntity","getPropertyInfoFromEntity","getPropertyReferenceKey","describe","mockMetaData","beforeEach","entityContainer","$kind","CashBank","$Type","$Key","BankCountry","BankInternalID","IsActiveEntity","getMetaModel","getObject","sParam","replace","afterEach","jest","clearAllMocks","test","keyReferenceProperties","expect","toMatchSnapshot","mockAnnotations","property1","property2","property3","SAP__Messages","fn","includes","path","split","propertyName","properties","resourceBundle","getText","mockImplementation","key","$NavigationPropertyBinding","referencedTestEntities","_RootPaymentTerms","DraftAdministrativeData","SiblingEntity","$ReferentialConstraint","RootPaymentTerms"],"sources":["MetadataAnalyzer.spec.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport {\n\tgetNavigationPropertyInfoFromEntity,\n\tgetPropertyInfoFromEntity,\n\tgetPropertyReferenceKey\n} from \"sap/cards/ap/generator/odata/v4/MetadataAnalyzer\";\n\ndescribe(\"Card CardGenerator\", () => {\n\tlet mockMetaData: any;\n\n\tbeforeEach(() => {\n\t\tconst entityContainer = {\n\t\t\t$kind: \"EntityContainer\",\n\t\t\tCashBank: {\n\t\t\t\t$kind: \"EntitySet\",\n\t\t\t\t$Type: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\"\n\t\t\t},\n\t\t\t\"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\": {\n\t\t\t\t$kind: \"EntityType\",\n\t\t\t\t$Key: [\"BankCountry\", \"BankInternalID\", \"IsActiveEntity\"],\n\t\t\t\tBankCountry: {\n\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Country\"\n\t\t\t\t},\n\t\t\t\tBankInternalID: {\n\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Bank Internal ID\"\n\t\t\t\t},\n\t\t\t\tIsActiveEntity: {\n\t\t\t\t\t$kind: \"Property\",\n\t\t\t\t\t$Type: \"Edm.Boolean\",\n\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\": \"Is Active Entity\"\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tmockMetaData = {\n\t\t\tgetMetaModel: () => {\n\t\t\t\treturn {\n\t\t\t\t\tgetObject: (sParam: string) => {\n\t\t\t\t\t\tif (sParam === \"/\") {\n\t\t\t\t\t\t\treturn entityContainer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsParam = sParam.replace(\"/\", \"\");\n\t\t\t\t\t\treturn entityContainer[sParam];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t});\n\n\tafterEach(() => {\n\t\tjest.clearAllMocks();\n\t});\n\n\ttest(\"validate function getPropertyReferenceKey\", () => {\n\t\tconst keyReferenceProperties = getPropertyReferenceKey(mockMetaData, \"CashBank\");\n\t\texpect(keyReferenceProperties).toMatchSnapshot();\n\t});\n\n\ttest(\"validate function getPropertyInfoFromEntity\", () => {\n\t\tconst mockAnnotations: Record<string, any> = {\n\t\t\t// Mock annotations for properties\n\t\t\tproperty1: { $kind: \"Property\", \"@Org.OData.Measures.V1.Unit\": \"kg\", $Type: \"Edm.String\" },\n\t\t\tproperty2: {\n\t\t\t\t\"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\": false,\n\t\t\t\t$kind: \"Property\",\n\t\t\t\t\"@Org.OData.Measures.V1.ISOCurrency\": \"INR\",\n\t\t\t\t$Type: \"Edm.String\"\n\t\t\t},\n\t\t\tproperty3: { \"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\": true, $kind: \"Property\" },\n\t\t\tSAP__Messages: {\n\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t$kind: \"Property\"\n\t\t\t}\n\t\t};\n\n\t\t// Mock getObject to return properties with annotations\n\t\tmockMetaData.getMetaModel = jest.fn(() => ({\n\t\t\tgetObject: jest.fn((sParam: string) => {\n\t\t\t\tif (sParam.includes(\"@\")) {\n\t\t\t\t\tconst path = sParam.split(\"@\")[0];\n\t\t\t\t\tconst propertyName = path.split(\"/\")[2];\n\t\t\t\t\treturn mockAnnotations[propertyName];\n\t\t\t\t} else if (sParam.includes(\"/\")) {\n\t\t\t\t\treturn mockAnnotations;\n\t\t\t\t}\n\t\t\t})\n\t\t}));\n\n\t\tconst properties = getPropertyInfoFromEntity(mockMetaData, \"CashBank\", false);\n\t\texpect(properties).toMatchSnapshot();\n\t});\n\n\ttest(\"validate function getPropertyInfoFromEntity with navigation\", () => {\n\t\tconst mockAnnotations: Record<string, any> = {\n\t\t\tproperty1: { $kind: \"Property\", \"@Org.OData.Measures.V1.Unit\": \"kg\", $Type: \"Edm.String\" },\n\t\t\tproperty2: {\n\t\t\t\t$kind: \"NavigationProperty\",\n\t\t\t\t$Type: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.property2\"\n\t\t\t},\n\t\t\tproperty3: { \"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\": true, $kind: \"Property\" },\n\t\t\tSAP__Messages: {\n\t\t\t\t$Type: \"Edm.String\",\n\t\t\t\t$kind: \"Property\"\n\t\t\t}\n\t\t};\n\t\tconst resourceBundle = {\n\t\t\tgetText: jest.fn().mockImplementation((key) => {\n\t\t\t\tif (key === \"GENERATOR_CARD_SELECT_NAV_PROP\") return \"Select a Navigational Property:\";\n\t\t\t\tif (key === \"CRITICALITY_CONTROL_SELECT_PROP\") return \"Select a Property:\";\n\t\t\t})\n\t\t};\n\n\t\tmockMetaData.getMetaModel = jest.fn(() => ({\n\t\t\tgetObject: jest.fn((sParam: string) => {\n\t\t\t\tif (sParam.includes(\"@\")) {\n\t\t\t\t\tconst path = sParam.split(\"@\")[0];\n\t\t\t\t\tconst propertyName = path.split(\"/\")[2];\n\t\t\t\t\treturn mockAnnotations[propertyName];\n\t\t\t\t} else if (sParam.includes(\"/\")) {\n\t\t\t\t\treturn mockAnnotations;\n\t\t\t\t}\n\t\t\t})\n\t\t}));\n\n\t\tconst properties = getPropertyInfoFromEntity(mockMetaData, \"CashBank\", true, resourceBundle);\n\t\texpect(properties).toMatchSnapshot();\n\t});\n\n\ttest(\"validate function getNavigationPropertyInfoFromEntity\", () => {\n\t\tconst mockAnnotations: Record<string, any> = {\n\t\t\t$NavigationPropertyBinding: {\n\t\t\t\treferencedTestEntities: \"RootElement\",\n\t\t\t\t_RootPaymentTerms: \"RootPaymentTerms\",\n\t\t\t\tDraftAdministrativeData: \"RootPaymentTerms\",\n\t\t\t\tSiblingEntity: \"RootElement\"\n\t\t\t},\n\t\t\t_RootPaymentTerms: {\n\t\t\t\t$kind: \"NavigationProperty\",\n\t\t\t\t$Type: \"com.sap.gateway.srvd.ui_cashbank_manage.v0001.CashBankType\",\n\t\t\t\t$ReferentialConstraint: {\n\t\t\t\t\tRootPaymentTerms: \"RootPaymentTerms\"\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tmockMetaData.getMetaModel = jest.fn(() => ({\n\t\t\tgetObject: jest.fn((sParam: string) => {\n\t\t\t\tif (sParam.includes(\"/\")) {\n\t\t\t\t\treturn mockAnnotations;\n\t\t\t\t}\n\t\t\t})\n\t\t}));\n\n\t\tconst properties = getNavigationPropertyInfoFromEntity(mockMetaData, \"CashBank\");\n\t\texpect(properties).toMatchSnapshot();\n\t});\n});\n"],"mappings":"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","ignoreList":[]}