{"enums":[],"metadatas":{"sap.apf.Api":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/api","description":"Official API for Analysis Path Framework (APF)<br> <p> The APF API provides a consuming application access to the functionality of the APF. It is assumed that the consuming application extends type {@link sap.apf.base.Component}. The API reference is returned by method {@link sap.apf.base.Component#getApi}. <br> Objects and types returned by methods of APF API or passed in parameters of APF API method also belong to the API. These objects and types are documented in their respective sections of this documentation. All methods, objects or types that are not explicitly documented as public are strictly internal and may be changed without prior notice. This also includes all methods, objects or types being classified as experimental.<br> Furthermore there is no need to instantiate required entities directly by applying the JavaScript 'new'-operator on their respective constructors. Instead they should be created by consumers using a create method available on API-level, such as e.g. {@link sap.apf.Api#createMessageObject} for {@link sap.apf.core.MessageObject} or {@link sap.apf.Api#createFilter} for {@link sap.apf.utils.Filter}. <\/p>","helpDescription":"Official API for Analysis Path Framework (APF)<br> <p> The APF API provides a consuming application access to the functionality of the APF. It is assumed that the consuming application extends type {@link sap.apf.base.Component}. The API reference is returned by method {@link sap.apf.base.Component#getApi}. <br> Objects and types returned by methods of APF API or passed in parameters of APF API method also belong to the API. These objects and types are documented in their respective sections of this documentation. All methods, objects or types that are not explicitly documented as public are strictly internal and may be changed without prior notice. This also includes all methods, objects or types being classified as experimental.<br> Furthermore there is no need to instantiate required entities directly by applying the JavaScript 'new'-operator on their respective constructors. Instead they should be created by consumers using a create method available on API-level, such as e.g. {@link sap.apf.Api#createMessageObject} for {@link sap.apf.core.MessageObject} or {@link sap.apf.Api#createFilter} for {@link sap.apf.utils.Filter}. <\/p>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.utils.Filter":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/utils/filter","description":"Filter object","constructorDescription":"It is designed to be used for supplying context information for\r             the application. In addition, it can be used for exchanging\r             filter values between the path and the facet filters. This function object supports the top down\r             construction of filter expressions.","helpDescription":"Filter object","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.ui.representations.RepresentationInterfaceProxy":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":true,"module":"sap/apf/ui/representations/RepresentationInterfaceProxy","description":"The interface proxy passed to a representation which provides access to required APF methods. This constructor is used by apf.api. It can be also used to build unit tests that need an interface proxy between APF and representations.","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.ui.representations.representationInterface":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":true,"module":"sap/apf/ui/representations/representationInterface","description":"This is not a runtime class, but it describes the interface that a representation (chart) has to implement for to interact with the APF.","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.core.MessageObject":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/core/messageObject","description":"The message object represents the APF specific message object for detailed evaluation. The message object shall be created by method {@link sap.apf.Api#createMessageObject}.","helpDescription":"The message object represents the APF specific message object for detailed evaluation. The message object shall be created by method {@link sap.apf.Api#createMessageObject}.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.core.ReadRequestByRequiredFilter":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/core/readRequestByRequiredFilter","description":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API. In addition to the handed over filter argument in method send(), the required filters and parameter entity set key properties of the configured entity type are applied, which are determined from path filter.","helpDescription":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API. In addition to the handed over filter argument in method send(), the required filters and parameter entity set key properties of the configured entity type are applied, which are determined from path filter.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.utils.FilterAnd":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/utils/filter","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.utils.FilterExpression":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/utils/filter","description":"Filter expression","helpDescription":"Filter expression","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.ui.Instance":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/ui/instance","description":"UI Component Instance","constructorDescription":"Creates a new UI Component Instance.","helpDescription":"UI Component Instance","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.utils.FilterOr":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/utils/filter","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.abap.LrepConnector":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/abap/LrepConnector","constructorDescription":"Provides the connectivity to the LRep & UI5 Flexibility Services REST-routes","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.apf.core.ReadRequest":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/apf/core/readRequest","description":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API.","helpDescription":"Facade for sap.apf.core.Request for getting data via the OData protocol. This corresponds to a normal HTTP GET method. Creation is done via APF API.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}}},"!version":"1.21.1"}