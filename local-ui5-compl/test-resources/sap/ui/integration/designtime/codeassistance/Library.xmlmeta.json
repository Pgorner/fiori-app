{"enums":{"sap.ui.integration.CardArea":{"Filters":{"Deprecated":false,"Experimental":false,"description":"The filters area.","helpDescription":"The filters area.","DeprecatedInfo":{"isDeprecated":false},"value":"Filters"},"Header":{"Deprecated":false,"Experimental":false,"description":"The header.","helpDescription":"The header.","DeprecatedInfo":{"isDeprecated":false},"value":"Header"},"Content":{"Deprecated":false,"Experimental":false,"description":"The content area.","helpDescription":"The content area.","DeprecatedInfo":{"isDeprecated":false},"value":"Content"}},"sap.ui.integration.CardMessageType":{"Warning":{"Deprecated":false,"Experimental":false,"description":"Message is a warning","helpDescription":"Message is a warning","DeprecatedInfo":{"isDeprecated":false},"value":"Warning"},"Toast":{"Deprecated":false,"Experimental":false,"description":"Message is an informative brief toast message. For this type the default behavior is to auto close.","helpDescription":"Message is an informative brief toast message. For this type the default behavior is to auto close.","DeprecatedInfo":{"isDeprecated":false},"value":"Toast"},"Loading":{"Deprecated":false,"Experimental":false,"description":"Informs the user that the content is busy at that moment with a loading operation. Blocks the content from interaction.","helpDescription":"Informs the user that the content is busy at that moment with a loading operation. Blocks the content from interaction.","DeprecatedInfo":{"isDeprecated":false},"value":"Loading"},"Error":{"Deprecated":false,"Experimental":false,"description":"Message is an error","helpDescription":"Message is an error","DeprecatedInfo":{"isDeprecated":false},"value":"Error"},"Information":{"Deprecated":false,"Experimental":false,"description":"Message should be just an information","helpDescription":"Message should be just an information","DeprecatedInfo":{"isDeprecated":false},"value":"Information"},"None":{"Deprecated":false,"Experimental":false,"description":"Message has no specific level","helpDescription":"Message has no specific level","DeprecatedInfo":{"isDeprecated":false},"value":"None"},"Success":{"Deprecated":false,"Experimental":false,"description":"Message is a success message","helpDescription":"Message is a success message","DeprecatedInfo":{"isDeprecated":false},"value":"Success"}},"sap.ui.integration.CardActionType":{"Navigation":{"Deprecated":false,"Experimental":false,"description":"Used for navigation actions.","helpDescription":"Used for navigation actions.","DeprecatedInfo":{"isDeprecated":false},"value":"Navigation"},"HideCard":{"Deprecated":false,"Experimental":false,"description":"Used for hiding the appeared details about the card.","helpDescription":"Used for hiding the appeared details about the card.","DeprecatedInfo":{"isDeprecated":false},"value":"HideCard"},"MonthChange":{"Deprecated":false,"Experimental":false,"description":"Month selection. Available only for Calendar cards.","helpDescription":"Month selection. Available only for Calendar cards.","DeprecatedInfo":{"isDeprecated":false},"value":"MonthChange"},"DateChange":{"Deprecated":false,"Experimental":false,"description":"Date selection. Available only for Calendar cards.","helpDescription":"Date selection. Available only for Calendar cards.","DeprecatedInfo":{"isDeprecated":false},"value":"DateChange"},"Submit":{"Deprecated":false,"Experimental":false,"description":"Used for submit actions.","helpDescription":"Used for submit actions.","DeprecatedInfo":{"isDeprecated":false},"value":"Submit"},"Custom":{"Deprecated":false,"Experimental":false,"description":"Used for custom actions.","helpDescription":"Used for custom actions.","DeprecatedInfo":{"isDeprecated":false},"value":"Custom"},"ShowCard":{"Deprecated":false,"Experimental":false,"description":"Used for showing more details about the card.","helpDescription":"Used for showing more details about the card.","DeprecatedInfo":{"isDeprecated":false},"value":"ShowCard"}},"sap.ui.integration.CardDisplayVariant":{"TileStandard":{"Deprecated":false,"Experimental":false,"description":"Card renders and behaves like a tile of size 2x2.","helpDescription":"Card renders and behaves like a tile of size 2x2.","DeprecatedInfo":{"isDeprecated":false},"value":"TileStandard"},"CompactHeader":{"Deprecated":false,"Experimental":false,"description":"The CompactHeader card variant.","helpDescription":"The CompactHeader card variant.","DeprecatedInfo":{"isDeprecated":false},"value":"CompactHeader"},"StandardHeader":{"Deprecated":false,"Experimental":false,"description":"The SmallHeader card variant.","helpDescription":"The SmallHeader card variant.","DeprecatedInfo":{"isDeprecated":false},"value":"StandardHeader"},"TileFlatWide":{"Deprecated":false,"Experimental":false,"description":"Card renders and behaves like a tile of size 4x1.","helpDescription":"Card renders and behaves like a tile of size 4x1.","DeprecatedInfo":{"isDeprecated":false},"value":"TileFlatWide"},"Small":{"Deprecated":false,"Experimental":false,"description":"The small card variant.","helpDescription":"The small card variant.","DeprecatedInfo":{"isDeprecated":false},"value":"Small"},"SmallHeader":{"Deprecated":false,"Experimental":false,"description":"The SmallHeader card variant.","helpDescription":"The SmallHeader card variant.","DeprecatedInfo":{"isDeprecated":false},"value":"SmallHeader"},"Large":{"Deprecated":false,"Experimental":false,"description":"The large card variant.","helpDescription":"The large card variant.","DeprecatedInfo":{"isDeprecated":false},"value":"Large"},"TileStandardWide":{"Deprecated":false,"Experimental":false,"description":"Card renders and behaves like a tile of size 4x2.","helpDescription":"Card renders and behaves like a tile of size 4x2.","DeprecatedInfo":{"isDeprecated":false},"value":"TileStandardWide"},"Standard":{"Deprecated":false,"Experimental":false,"description":"The standard card variant.","helpDescription":"The standard card variant.","DeprecatedInfo":{"isDeprecated":false},"value":"Standard"},"TileFlat":{"Deprecated":false,"Experimental":false,"description":"Card renders and behaves like a tile of size 2x1.","helpDescription":"Card renders and behaves like a tile of size 2x1.","DeprecatedInfo":{"isDeprecated":false},"value":"TileFlat"}},"sap.ui.integration.CardDesign":{"Transparent":{"Deprecated":false,"Experimental":false,"description":"When in this mode, the card background is transparent.","helpDescription":"When in this mode, the card background is transparent.","DeprecatedInfo":{"isDeprecated":false},"value":"Transparent"},"Solid":{"Deprecated":false,"Experimental":false,"description":"When in this mode, the card has a solid background.","helpDescription":"When in this mode, the card has a solid background.","DeprecatedInfo":{"isDeprecated":false},"value":"Solid"}},"sap.ui.integration.AttributesLayoutType":{"OneColumn":{"Deprecated":false,"Experimental":false,"description":"One column.","helpDescription":"One column.","DeprecatedInfo":{"isDeprecated":false},"value":"OneColumn"},"TwoColumns":{"Deprecated":false,"Experimental":false,"description":"Two columns.","helpDescription":"Two columns.","DeprecatedInfo":{"isDeprecated":false},"value":"TwoColumns"}},"sap.ui.integration.CardBlockingMessageType":{"Error":{"Deprecated":false,"Experimental":false,"description":"An error occurred in the card.","helpDescription":"An error occurred in the card.","DeprecatedInfo":{"isDeprecated":false},"value":"Error"},"Information":{"Deprecated":false,"Experimental":false,"description":"Information message.","helpDescription":"Information message.","DeprecatedInfo":{"isDeprecated":false},"value":"Information"},"NoData":{"Deprecated":false,"Experimental":false,"description":"There is no data to be displayed.","helpDescription":"There is no data to be displayed.","DeprecatedInfo":{"isDeprecated":false},"value":"NoData"}},"sap.ui.integration.CardDataMode":{"Auto":{"Deprecated":false,"Experimental":false,"description":"When in this mode, the card starts processing the manifest when the card is in the viewport.","helpDescription":"When in this mode, the card starts processing the manifest when the card is in the viewport.","DeprecatedInfo":{"isDeprecated":false},"value":"Auto"},"Active":{"Deprecated":false,"Experimental":false,"description":"When in this mode, the card can make requests.","helpDescription":"When in this mode, the card can make requests.","DeprecatedInfo":{"isDeprecated":false},"value":"Active"},"Inactive":{"Deprecated":false,"Experimental":false,"description":"When in this mode, the card cannot make requests.","helpDescription":"When in this mode, the card cannot make requests.","DeprecatedInfo":{"isDeprecated":false},"value":"Inactive"}},"sap.ui.integration.CardPreviewMode":{"Abstract":{"Deprecated":false,"Experimental":false,"description":"Card displays abstract preview. No data requests are made.","helpDescription":"Card displays abstract preview. No data requests are made.","DeprecatedInfo":{"isDeprecated":false},"value":"Abstract"},"MockData":{"Deprecated":false,"Experimental":false,"description":"Card displays mocked data, loaded using a data request as configured in the manifest.","helpDescription":"Card displays mocked data, loaded using a data request as configured in the manifest.","DeprecatedInfo":{"isDeprecated":false},"value":"MockData"},"Off":{"Deprecated":false,"Experimental":false,"description":"Card displays real data.","helpDescription":"Card displays real data.","DeprecatedInfo":{"isDeprecated":false},"value":"Off"}}},"metadatas":{"sap.ui.integration.Host":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.Host#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/Host","description":"Provides application-level functions and services to an integration card.\n\nExamples may include, but are not limited to options like: share a card, remove a card.","constructorDescription":"Constructor for a new <code>Host<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getActions actions} : sap.ui.integration.CardMenuAction[]<\/li>\n<li>{@link #getResolveDestination resolveDestination} : function<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:action action} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cardConfigurationChange cardConfigurationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cardStateChanged cardStateChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cardInitialized cardInitialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:message message} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"Provides application-level functions and services to an integration card.\n\nExamples may include, but are not limited to options like: share a card, remove a card.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.Host#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.Host#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.Host#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.Host#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.Host#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Host#models","type":"object"},"resolveDestination":{"method":"#getResolveDestination,setResolveDestination","Deprecated":false,"Experimental":false,"description":"A function that resolves the given destination name to a URL.\n\nThe Card calls this function when it needs to send a request to a destination. Function returns the URL to which the request is sent.\n\nIf a card depends on a destination, but this callback is not implemented, an error will be logged.\n\nThe callback receives <code>destinationName<\/code> as parameter and returns a string with the URL. Or alternatively the callback may return a <code>Promise<\/code> with the URL as an argument.","fullName":"sap.ui.integration.Host#resolveDestination","helpDescription":"A function that resolves the given destination name to a URL.\n\nThe Card calls this function when it needs to send a request to a destination. Function returns the URL to which the request is sent.\n\nIf a card depends on a destination, but this callback is not implemented, an error will be logged.\n\nThe callback receives <code>destinationName<\/code> as parameter and returns a string with the URL. Or alternatively the callback may return a <code>Promise<\/code> with the URL as an argument.","type":"function","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Host#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.Host#id","type":"sap.ui.core.ID"},"actions":{"method":"#getActions,setActions","Deprecated":false,"Experimental":true,"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.Host#actions","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"sap.ui.integration.CardMenuAction[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Host#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.Host#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.Host#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.Host#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.Host#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.Host#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.Host#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.Host#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"action":{"method":"sap.ui.integration.Host#event:action","Deprecated":false,"Experimental":true,"name":"action","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.Host#action","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"cardStateChanged":{"method":"sap.ui.integration.Host#event:cardStateChanged","Deprecated":false,"Experimental":false,"name":"cardStateChanged","description":"Fired when the state of a card is changed. For example - the card is ready, new page is selected inside the card, a filter is changed or data is refreshed.","fullName":"sap.ui.integration.Host#cardStateChanged","helpDescription":"Fired when the state of a card is changed. For example - the card is ready, new page is selected inside the card, a filter is changed or data is refreshed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.Host#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.Host#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"cardInitialized":{"method":"sap.ui.integration.Host#event:cardInitialized","Deprecated":false,"Experimental":false,"name":"cardInitialized","description":"Fired when the card is initially ready for the first time. Will not be fired for consecutive refreshes or data changes.","fullName":"sap.ui.integration.Host#cardInitialized","helpDescription":"Fired when the card is initially ready for the first time. Will not be fired for consecutive refreshes or data changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"message":{"method":"sap.ui.integration.Host#event:message","Deprecated":false,"Experimental":false,"name":"message","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.data":"type:object","oControlEvent":"sap.ui.base.Event"},"description":"Fired when a message from channels like navigator.serviceWorker is received.","fullName":"sap.ui.integration.Host#message","helpDescription":"Fired when a message from channels like navigator.serviceWorker is received.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.Host#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.Host#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"cardConfigurationChange":{"method":"sap.ui.integration.Host#event:cardConfigurationChange","Deprecated":false,"Experimental":false,"name":"cardConfigurationChange","description":"Fired when some card configuration settings are changed as a result of user interaction. For example - filter value is changed.","fullName":"sap.ui.integration.Host#cardConfigurationChange","helpDescription":"Fired when some card configuration settings are changed as a result of user interaction. For example - filter value is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.PropertyEditors":{"associations":{"editor":{"method":"#getEditor,setEditor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"propertyEditors":{"method":"#getPropertyEditors,setPropertyEditors","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#propertyEditors","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/designtime/baseEditor/PropertyEditors","description":"Renders a group of {@link sap.ui.integration.designtime.baseEditor.propertyEditor property editors} based on specified <code>tags<\/code> or custom <code>config<\/code>.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTags tags} : string<\/li>\n<li>{@link #getRenderLabels renderLabels} : boolean<\/li>\n<li>{@link #getConfig config} : array<\/li>\n<li>{@link #getLayout layout} : string (default: \"list\")<\/li>\n<li>{@link #getLayoutConfig layoutConfig} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getEditor editor} : (sap.ui.core.ID | sap.ui.integration.designtime.baseEditor.BaseEditor)<\/li>\n<li>{@link #getPropertyEditors propertyEditors} : (sap.ui.core.ID | sap.ui.integration.designtime.baseEditor.PropertyEditor)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:editorChange editorChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyEditorsChange propertyEditorsChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:init init} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:configChange configChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tagsChange tagsChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:ready ready} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:validationErrorChange validationErrorChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:layoutChange layoutChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:layoutConfigChange layoutConfigChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"Renders a group of {@link sap.ui.integration.designtime.baseEditor.propertyEditor property editors} based on specified <code>tags<\/code> or custom <code>config<\/code>.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"renderLabels":{"method":"#getRenderLabels,setRenderLabels","Deprecated":false,"Experimental":false,"description":"Indicates whether the embedded <code>BasePropertyEditor<\/code> instances should render their labels.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#renderLabels","helpDescription":"Indicates whether the embedded <code>BasePropertyEditor<\/code> instances should render their labels.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"tags":{"method":"#getTags,setTags","Deprecated":false,"Experimental":false,"description":"List of tags to render, e.g. <code>\"header,content\"<\/code>. Only the properties that contain both tags will be rendered.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#tags","helpDescription":"List of tags to render, e.g. <code>\"header,content\"<\/code>. Only the properties that contain both tags will be rendered.","type":"string","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#metadataContexts","type":"object"},"layout":{"method":"#getLayout,setLayout","Deprecated":false,"defaultValue":"\"list\"","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#layout","type":"string","DeprecatedInfo":{"isDeprecated":false}},"layoutConfig":{"method":"#getLayoutConfig,setLayoutConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#layoutConfig","type":"object","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#id","type":"sap.ui.core.ID"},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"description":"An array of custom configuration objects. If set, it has priority over <code>tags<\/code>. Example: <pre>\n[\n    {\n        \"label\": \"My property 1\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property1\"\n    },\n    {\n        \"label\": \"My property 2\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property2\"\n    }\n]\n<\/pre> Where: <ul> <li><b>label<\/b> = text string for the property editor label<\/li> <li><b>type<\/b> = one of the registered property editors types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors<\/code> section)<\/li> <li><b>path<\/b> = a binding path to get data from<\/li> <\/ul>","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#config","helpDescription":"An array of custom configuration objects. If set, it has priority over <code>tags<\/code>. Example: <pre>\n[\n    {\n        \"label\": \"My property 1\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property1\"\n    },\n    {\n        \"label\": \"My property 2\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property2\"\n    }\n]\n<\/pre> Where: <ul> <li><b>label<\/b> = text string for the property editor label<\/li> <li><b>type<\/b> = one of the registered property editors types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors<\/code> section)<\/li> <li><b>path<\/b> = a binding path to get data from<\/li> <\/ul>","type":"array","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when the wrapper is initialized.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#init","helpDescription":"Fires when the wrapper is initialized.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"layoutChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:layoutChange","Deprecated":false,"Experimental":false,"name":"layoutChange","description":"Fires when <code>layout<\/code> changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#layoutChange","helpDescription":"Fires when <code>layout<\/code> changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"editorChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:editorChange","Deprecated":false,"Experimental":false,"name":"editorChange","description":"Fires when the new editor changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#editorChange","helpDescription":"Fires when the new editor changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"propertyEditorsChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:propertyEditorsChange","Deprecated":false,"Experimental":false,"name":"propertyEditorsChange","description":"Fires when the internal <code>propertyEditors<\/code> aggregation changes, e.g. called after the initial initialization or after changing <code>tag<\/code> or <code>config<\/code> properties.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#propertyEditorsChange","helpDescription":"Fires when the internal <code>propertyEditors<\/code> aggregation changes, e.g. called after the initial initialization or after changing <code>tag<\/code> or <code>config<\/code> properties.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"layoutConfigChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:layoutConfigChange","Deprecated":false,"Experimental":false,"name":"layoutConfigChange","description":"Fires when <code>layoutConfig<\/code> changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#layoutConfigChange","helpDescription":"Fires when <code>layoutConfig<\/code> changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fires when the nested editors are ready","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#ready","helpDescription":"Fires when the nested editors are ready","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.hasError":"type: boolean, description: Whether there is an error in one of the nested editors","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fires when the error state of one of the nested property editors changes","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#validationErrorChange","helpDescription":"Fires when the error state of one of the nested property editors changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when <code>config<\/code> changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#configChange","helpDescription":"Fires when <code>config<\/code> changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"tagsChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditors#event:tagsChange","Deprecated":false,"Experimental":false,"name":"tagsChange","description":"Fires when <code>tags<\/code> changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditors#tagsChange","helpDescription":"Fires when <code>tags<\/code> changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.validator":{"filetype":"library","types":["sap.ui.integration.designtime.baseEditor.validator.IsBoolean","sap.ui.integration.designtime.baseEditor.validator.IsDate","sap.ui.integration.designtime.baseEditor.validator.IsInteger","sap.ui.integration.designtime.baseEditor.validator.IsNumber","sap.ui.integration.designtime.baseEditor.validator.IsSelectedKey","sap.ui.integration.designtime.baseEditor.validator.IsStringList","sap.ui.integration.designtime.baseEditor.validator.IsUniqueKey","sap.ui.integration.designtime.baseEditor.validator.IsUniqueList","sap.ui.integration.designtime.baseEditor.validator.IsValidBinding","sap.ui.integration.designtime.baseEditor.validator.MaxLength","sap.ui.integration.designtime.baseEditor.validator.NotABinding","sap.ui.integration.designtime.baseEditor.validator.ValidatorRegistry"],"name":"sap.ui.integration.designtime.baseEditor.validator","version":"1.132.1"},"sap.ui.integration.editor.fields.StringListField":{"associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringListField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.StringListField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringListField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringListField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/editor/fields/StringListField","description":"String List Field with string list value, such as [\"value1\", \"value2\"]","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","extend":"sap.ui.integration.editor.fields.BaseField","Deprecated":false,"helpDescription":"String List Field with string list value, such as [\"value1\", \"value2\"]","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringListField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.StringListField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.StringListField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringListField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.StringListField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.StringListField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.StringListField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.StringListField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringListField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringListField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringListField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.StringListField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.StringListField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringListField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.StringListField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringListField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.StringListField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.StringListField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.StringListField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.StringListField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringListField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringListField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.StringListField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.StringListField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.StringListField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.StringListField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.StringListField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.StringListField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.StringListField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.StringListField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.StringListField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringListField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.StringListField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.StringListField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.StringListField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.StringListField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.integration.editor.fields.StringListField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.StringListField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.StringListField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.StringListField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.StringListField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.StringListField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.DestinationField":{"extend":"sap.ui.integration.editor.fields.BaseField","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DestinationField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.DestinationField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DestinationField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DestinationField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/DestinationField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DestinationField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.DestinationField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.DestinationField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DestinationField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.DestinationField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.DestinationField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.DestinationField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DestinationField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.DestinationField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DestinationField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.DestinationField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DestinationField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.DestinationField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DestinationField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.DestinationField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DestinationField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.DestinationField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.DestinationField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.DestinationField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.DestinationField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DestinationField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DestinationField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.DestinationField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DestinationField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.DestinationField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DestinationField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.DestinationField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.DestinationField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.DestinationField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.DestinationField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.DestinationField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.DestinationField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.DestinationField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DestinationField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.DestinationField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.DestinationField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.DestinationField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.DestinationField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.DestinationField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.DestinationField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.DestinationField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DestinationField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.BaseField":{"extend":"sap.ui.core.Control","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BaseField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.BaseField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BaseField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BaseField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/BaseField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConfiguration configuration} : object<\/li>\n<li>{@link #getSpecialButton specialButton} : object<\/li>\n<li>{@link #getMode mode} : string<\/li>\n<li>{@link #getHost host} : object<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getParameterKey parameterKey} : string<\/li>\n<li>{@link #getAllowPopover allowPopover} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #get_messageIcon _messageIcon} : (sap.ui.core.ID | sap.ui.core.Icon)<\/li>\n<li>{@link #get_messageStrip _messageStrip} : (sap.ui.core.ID | sap.m.MessageStrip)<\/li>\n<li>{@link #get_editor _editor} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterInit afterInit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:validateFailed validateFailed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:settingsPanelOpened settingsPanelOpened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BaseField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.BaseField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.BaseField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BaseField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.BaseField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.BaseField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.BaseField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.BaseField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.BaseField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BaseField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.BaseField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.BaseField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.BaseField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BaseField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.BaseField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BaseField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.BaseField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.BaseField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.BaseField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.BaseField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BaseField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BaseField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.BaseField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.BaseField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.BaseField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.BaseField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.BaseField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.BaseField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.BaseField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.BaseField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.BaseField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.BaseField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.BaseField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.BaseField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.BaseField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.BaseField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.BaseField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.BaseField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.BaseField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.BaseField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.BaseField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.BaseField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.widgets.Card":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.widgets.Card#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dialogHeader":{"method":"#getDialogHeader,setDialogHeader","Deprecated":false,"Experimental":false,"multiple":"false","description":"The opener card.","fullName":"sap.ui.integration.widgets.Card#dialogHeader","helpDescription":"The opener card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"multiple":"false","description":"The host.","fullName":"sap.ui.integration.widgets.Card#host","helpDescription":"The host.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"openerReference":{"method":"#getOpenerReference,setOpenerReference","Deprecated":false,"Experimental":false,"multiple":"false","description":"The opener card.","fullName":"sap.ui.integration.widgets.Card#openerReference","helpDescription":"The opener card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/widgets/Card","description":"A control that represents a container with a header and content.\n\n<h3>Overview<\/h3> Cards are small user interface elements which provide the most important information from an app, related to a specific role or task. The information is represented in a compact manner, allowing for actions to be executed. Cards can be described as small representations of an app which can be integrated in different systems.\n\nThe integration card is defined in a declarative way, using a manifest.json to be: <ul> <li>Easily integrated into apps<\/li> <li>Easily reused across apps<\/li> <li>Understandable by other technologies<\/li> <li>Self-contained (has a built-in functionality and doesn't need external configuration)<\/li> <li>Dynamic parameter handling<\/li> <li>Clear separation of the roles of the card and app developers<\/li> <\/ul>\n\nThe role of the card developer is to describe the card in a manifest.json file and define: <ul> <li>Header<\/li> <li>Content<\/li> <li>Data source<\/li> <li>Possible actions<\/li> <\/ul>\n\nThe role of the app developer is to integrate the card into the app and define: <ul> <li>The dimensions of the card inside a layout of choice, using the <code>width<\/code> and <code>height<\/code> properties<\/li> <li>The behavior for the actions described in the manifest.json file, using the action event<\/li> <\/ul>\n\n<strong>You can learn more about integration cards in the {@link demo:sap/ui/integration/demokit/cardExplorer/index.html Card Explorer}<\/strong>\n\n<i>When to use<\/i> <ul> <li>When you want to reuse the card across apps.<\/li> <li>When you need easy integration and configuration.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>When you need more header and content flexibility.<\/li> <li>When you have to achieve simple card visualization. For such cases, use: {@link sap.f.Card sap.f.Card}.<\/li> <li>When you have to use an application model. For such cases, use: {@link sap.f.Card sap.f.Card}.<\/li> <li>When you need complex behavior. For such cases, use: {@link sap.f.Card sap.f.Card}.<\/li> <\/ul>","constructorDescription":"Constructor for a new <code>Card<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getReferenceId referenceId} : string (default: \"\")<\/li>\n<li>{@link #getManifest manifest} : any (default: \"\")<\/li>\n<li>{@link #getParameters parameters} : object<\/li>\n<li>{@link #getDataMode dataMode} : sap.ui.integration.CardDataMode (default: Auto)<\/li>\n<li>{@link #getBaseUrl baseUrl} : sap.ui.core.URI<\/li>\n<li>{@link #getManifestChanges manifestChanges} : object[] (default: [])<\/li>\n<li>{@link #getUseMockData useMockData} : boolean (default: false)<\/li>\n<li>{@link #getDesign design} : sap.ui.integration.CardDesign (default: Solid)<\/li>\n<li>{@link #getDisplayVariant displayVariant} : sap.ui.integration.CardDisplayVariant (default: Standard)<\/li>\n<li>{@link #getPreviewMode previewMode} : sap.ui.integration.CardPreviewMode (default: Off)<\/li>\n<li>{@link #getUseProgressiveDisclosure useProgressiveDisclosure} : boolean (default: false)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: false)<\/li>\n<li>{@link #getInteractive interactive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActionDefinitions actionDefinitions} : sap.ui.integration.ActionDefinition[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getHost host} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getOpenerReference openerReference} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getDialogHeader dialogHeader} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:action action} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:configurationChange configurationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:manifestReady manifestReady} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:manifestApplied manifestApplied} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:stateChanged stateChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.CardBase#constructor sap.f.CardBase}\ncan be used as well.","extend":"sap.f.CardBase","Deprecated":false,"helpDescription":"A control that represents a container with a header and content.\n\n<h3>Overview<\/h3> Cards are small user interface elements which provide the most important information from an app, related to a specific role or task. The information is represented in a compact manner, allowing for actions to be executed. Cards can be described as small representations of an app which can be integrated in different systems.\n\nThe integration card is defined in a declarative way, using a manifest.json to be: <ul> <li>Easily integrated into apps<\/li> <li>Easily reused across apps<\/li> <li>Understandable by other technologies<\/li> <li>Self-contained (has a built-in functionality and doesn't need external configuration)<\/li> <li>Dynamic parameter handling<\/li> <li>Clear separation of the roles of the card and app developers<\/li> <\/ul>\n\nThe role of the card developer is to describe the card in a manifest.json file and define: <ul> <li>Header<\/li> <li>Content<\/li> <li>Data source<\/li> <li>Possible actions<\/li> <\/ul>\n\nThe role of the app developer is to integrate the card into the app and define: <ul> <li>The dimensions of the card inside a layout of choice, using the <code>width<\/code> and <code>height<\/code> properties<\/li> <li>The behavior for the actions described in the manifest.json file, using the action event<\/li> <\/ul>\n\n<strong>You can learn more about integration cards in the {@link demo:sap/ui/integration/demokit/cardExplorer/index.html Card Explorer}<\/strong>\n\n<i>When to use<\/i> <ul> <li>When you want to reuse the card across apps.<\/li> <li>When you need easy integration and configuration.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>When you need more header and content flexibility.<\/li> <li>When you have to achieve simple card visualization. For such cases, use: {@link sap.f.Card sap.f.Card}.<\/li> <li>When you have to use an application model. For such cases, use: {@link sap.f.Card sap.f.Card}.<\/li> <li>When you need complex behavior. For such cases, use: {@link sap.f.Card sap.f.Card}.<\/li> <\/ul>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.widgets.Card#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"_loadingProvider":{"method":"#get_loadingProvider,destroy_loadingProvider,set_loadingProvider","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the internally used LoadingProvider.","fullName":"sap.ui.integration.widgets.Card#_loadingProvider","helpDescription":"Defines the internally used LoadingProvider.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.widgets.Card#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_oInvisibleCardBadgeText":{"method":"#get_oInvisibleCardBadgeText,destroy_oInvisibleCardBadgeText,set_oInvisibleCardBadgeText","Deprecated":false,"Experimental":false,"multiple":"false","description":"Holds the text used for announcing the card badges to the screen reader.","fullName":"sap.ui.integration.widgets.Card#_oInvisibleCardBadgeText","helpDescription":"Holds the text used for announcing the card badges to the screen reader.","type":"sap.ui.core.InvisibleText","DeprecatedInfo":{"isDeprecated":false}},"_header":{"method":"#get_header,destroy_header,set_header","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the header of the card.","fullName":"sap.ui.integration.widgets.Card#_header","helpDescription":"Defines the header of the card.","type":"sap.f.cards.IHeader","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.widgets.Card#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"_filterBar":{"method":"#get_filterBar,destroy_filterBar,set_filterBar","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the filters section of the card.","fullName":"sap.ui.integration.widgets.Card#_filterBar","helpDescription":"Defines the filters section of the card.","type":"sap.ui.integration.cards.filters.FilterBar","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.widgets.Card#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_cardBadges":{"method":"#get_cardBadges,destroy_cardBadges,insert_cardBadge,add_cardBadge,remove_cardBadge,indexOf_cardBadge,removeAll_cardBadges","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the internally used <code>sap.m.ObjectStatus<\/code>.","fullName":"sap.ui.integration.widgets.Card#_cardBadges","helpDescription":"Defines the internally used <code>sap.m.ObjectStatus<\/code>.","type":"sap.m.ObjectStatus","DeprecatedInfo":{"isDeprecated":false}},"_footer":{"method":"#get_footer,destroy_footer,set_footer","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the footer of the card.","fullName":"sap.ui.integration.widgets.Card#_footer","helpDescription":"Defines the footer of the card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.widgets.Card#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_content":{"method":"#get_content,destroy_content,set_content","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the content of the card.","fullName":"sap.ui.integration.widgets.Card#_content","helpDescription":"Defines the content of the card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"_extension":{"method":"#get_extension,destroy_extension,set_extension","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the Extension of the card.","fullName":"sap.ui.integration.widgets.Card#_extension","helpDescription":"Defines the Extension of the card.","type":"sap.ui.integration.Extension","DeprecatedInfo":{"isDeprecated":false}},"actionDefinitions":{"method":"#getActionDefinitions,destroyActionDefinitions,insertActionDefinition,addActionDefinition,removeActionDefinition,indexOfActionDefinition,removeAllActionDefinitions","Deprecated":false,"Experimental":true,"multiple":"true","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.widgets.Card#actionDefinitions","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"sap.ui.integration.ActionDefinition","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"useProgressiveDisclosure":{"method":"#getUseProgressiveDisclosure,setUseProgressiveDisclosure","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"If the card should change depending on its size. This property is temporary. Should be used to enable the feature for cards where it is needed.","fullName":"sap.ui.integration.widgets.Card#useProgressiveDisclosure","helpDescription":"If the card should change depending on its size. This property is temporary. Should be used to enable the feature for cards where it is needed.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Behavior"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.widgets.Card#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.widgets.Card#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"interactive":{"method":"#getInteractive,setInteractive","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Defines if the card is interactive.","fullName":"sap.ui.integration.widgets.Card#interactive","helpDescription":"Defines if the card is interactive.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"semanticRole":{"method":"#getSemanticRole,setSemanticRole","Deprecated":false,"defaultValue":"Region","Experimental":false,"description":"Defines the role of the Card Header.","fullName":"sap.ui.integration.widgets.Card#semanticRole","helpDescription":"Defines the role of the Card Header.","type":"sap.f.cards.SemanticRole","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"displayVariant":{"method":"#getDisplayVariant,setDisplayVariant","Deprecated":false,"defaultValue":"Standard","Experimental":true,"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.widgets.Card#displayVariant","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"sap.ui.integration.CardDisplayVariant","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"previewMode":{"method":"#getPreviewMode,setPreviewMode","Deprecated":false,"defaultValue":"Off","Experimental":false,"description":"Preview mode of the <code>Card<\/code>. Helpful in scenarios when the end user is choosing or configuring a card. <ul> <li>When set to \"MockData\", the card data is loaded, using a data request, as configured in the \"data/mockData\" in the manifest. If such configuration is missing, then the Abstract mode will be used instead.<\/li> <li>When set to \"Abstract\", the card shows abstract placeholder without loading data.<\/li> <li>When set to \"Off\", the card displays real data.<\/li> <\/ul>","fullName":"sap.ui.integration.widgets.Card#previewMode","helpDescription":"Preview mode of the <code>Card<\/code>. Helpful in scenarios when the end user is choosing or configuring a card. <ul> <li>When set to \"MockData\", the card data is loaded, using a data request, as configured in the \"data/mockData\" in the manifest. If such configuration is missing, then the Abstract mode will be used instead.<\/li> <li>When set to \"Abstract\", the card shows abstract placeholder without loading data.<\/li> <li>When set to \"Off\", the card displays real data.<\/li> <\/ul>","type":"sap.ui.integration.CardPreviewMode","DeprecatedInfo":{"isDeprecated":false},"group":"Behavior"},"referenceId":{"method":"#getReferenceId,setReferenceId","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"description":"Optional property which can be used by the host to reference the card. It will be forwarded to any children cards. Does not affect the card behavior.","fullName":"sap.ui.integration.widgets.Card#referenceId","helpDescription":"Optional property which can be used by the host to reference the card. It will be forwarded to any children cards. Does not affect the card behavior.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.widgets.Card#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"},"group":"Misc"},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.widgets.Card#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"manifestChanges":{"method":"#getManifestChanges,setManifestChanges","Deprecated":false,"Experimental":true,"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.widgets.Card#manifestChanges","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"object[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.widgets.Card#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"design":{"method":"#getDesign,setDesign","Deprecated":false,"defaultValue":"Solid","Experimental":false,"description":"Defines the design of the <code>Card<\/code>.","fullName":"sap.ui.integration.widgets.Card#design","helpDescription":"Defines the design of the <code>Card<\/code>.","type":"sap.ui.integration.CardDesign","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.widgets.Card#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"showCloseButton":{"method":"#getShowCloseButton,setShowCloseButton","Deprecated":false,"defaultValue":"false","Experimental":false,"fullName":"sap.ui.integration.widgets.Card#showCloseButton","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Behavior"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.widgets.Card#id","type":"sap.ui.core.ID"},"height":{"method":"#getHeight,setHeight","Deprecated":false,"defaultValue":"\"auto\"","Experimental":false,"description":"Defines the height of the card.","fullName":"sap.ui.integration.widgets.Card#height","helpDescription":"Defines the height of the card.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.widgets.Card#bindingContexts","type":"object"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.widgets.Card#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.widgets.Card#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"manifest":{"method":"#getManifest,setManifest","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"description":"The URL of the manifest or an object.","fullName":"sap.ui.integration.widgets.Card#manifest","helpDescription":"The URL of the manifest or an object.","type":"any","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.widgets.Card#metadataContexts","type":"object"},"dataMode":{"method":"#getDataMode,setDataMode","Deprecated":false,"defaultValue":"Auto","Experimental":false,"description":"Defines the state of the <code>Card<\/code>. When set to <code>Inactive<\/code>, the <code>Card<\/code> doesn't make requests.","fullName":"sap.ui.integration.widgets.Card#dataMode","helpDescription":"Defines the state of the <code>Card<\/code>. When set to <code>Inactive<\/code>, the <code>Card<\/code> doesn't make requests.","type":"sap.ui.integration.CardDataMode","DeprecatedInfo":{"isDeprecated":false},"group":"Behavior"},"baseUrl":{"method":"#getBaseUrl,setBaseUrl","Deprecated":false,"Experimental":false,"description":"Defines the base URL of the card manifest. It should be used when manifest property is an object instead of a URL. If both manifest URL and base URL are defined - the base URL will be used for loading dependencies. If both manifest URL and base URL are not defined - relative resources might not be loaded correctly.","fullName":"sap.ui.integration.widgets.Card#baseUrl","helpDescription":"Defines the base URL of the card manifest. It should be used when manifest property is an object instead of a URL. If both manifest URL and base URL are defined - the base URL will be used for loading dependencies. If both manifest URL and base URL are not defined - relative resources might not be loaded correctly.","type":"sap.ui.core.URI","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"width":{"method":"#getWidth,setWidth","Deprecated":false,"defaultValue":"\"100%\"","Experimental":false,"description":"Defines the width of the card.","fullName":"sap.ui.integration.widgets.Card#width","helpDescription":"Defines the width of the card.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"parameters":{"method":"#getParameters,setParameters","Deprecated":false,"Experimental":true,"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.widgets.Card#parameters","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"useMockData":{"method":"#getUseMockData,setUseMockData","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.112 Use <code>previewMode<\/code> instead.<br>Defines if the card should be displayed with mock data. To be used with component cards.","fullName":"sap.ui.integration.widgets.Card#useMockData","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.112 Use <code>previewMode<\/code> instead.<br>Defines if the card should be displayed with mock data. To be used with component cards.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"Use <code>previewMode<\/code> instead.","since":"1.112"},"group":"Misc"}},"events":{"formatError":{"method":"sap.ui.integration.widgets.Card#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.widgets.Card#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"manifestApplied":{"method":"sap.ui.integration.widgets.Card#event:manifestApplied","Deprecated":false,"Experimental":false,"name":"manifestApplied","description":"Fired when card utilities (like <code>DataProviderFactory<\/code>) and the card elements (like header) are created and initialized.\n\nNote: The card's content may not be available yet because it may depend on other resources to load.","fullName":"sap.ui.integration.widgets.Card#manifestApplied","helpDescription":"Fired when card utilities (like <code>DataProviderFactory<\/code>) and the card elements (like header) are created and initialized.\n\nNote: The card's content may not be available yet because it may depend on other resources to load.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configurationChange":{"method":"sap.ui.integration.widgets.Card#event:configurationChange","Deprecated":false,"Experimental":false,"name":"configurationChange","description":"Fired when some configuration settings are changed as a result of user interaction. For example - filter value is changed.","fullName":"sap.ui.integration.widgets.Card#configurationChange","helpDescription":"Fired when some configuration settings are changed as a result of user interaction. For example - filter value is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.widgets.Card#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.widgets.Card#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.widgets.Card#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.widgets.Card#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"action":{"method":"sap.ui.integration.widgets.Card#event:action","Deprecated":false,"Experimental":true,"name":"action","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.widgets.Card#action","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.widgets.Card#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.widgets.Card#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"press":{"method":"sap.ui.integration.widgets.Card#event:press","Deprecated":false,"Experimental":false,"name":"press","description":"Fired when action is added on card level. Note: Can be used only if <code>semanticRole<\/code> is <code>sap.f.cards.SemanticRole.ListItem<\/code>.","fullName":"sap.ui.integration.widgets.Card#press","helpDescription":"Fired when action is added on card level. Note: Can be used only if <code>semanticRole<\/code> is <code>sap.f.cards.SemanticRole.ListItem<\/code>.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"stateChanged":{"method":"sap.ui.integration.widgets.Card#event:stateChanged","Deprecated":false,"Experimental":false,"name":"stateChanged","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when the state of the card is changed. For example - the card is ready, new page is selected, a filter is changed or data is refreshed.","fullName":"sap.ui.integration.widgets.Card#stateChanged","helpDescription":"Fired when the state of the card is changed. For example - the card is ready, new page is selected, a filter is changed or data is refreshed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.widgets.Card#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.widgets.Card#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.widgets.Card#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.widgets.Card#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"manifestReady":{"method":"sap.ui.integration.widgets.Card#event:manifestReady","Deprecated":false,"Experimental":false,"name":"manifestReady","description":"Fired when the manifest is loaded.","fullName":"sap.ui.integration.widgets.Card#manifestReady","helpDescription":"Fired when the manifest is loaded.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.viz.VizBase":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/editor/fields/viz/VizBase","description":"Visualization Base Control","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"Visualization Base Control","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_control":{"method":"#get_control,destroy_control,set_control","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.viz.VizBase#_control","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"editable":{"method":"#getEditable,setEditable","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.VizBase#editable","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.VizBase#value","type":"string","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.viz.VizBase#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.viz.VizBase#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.viz.VizBase#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.integration.editor.fields.viz.VizBase#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.viz.VizBase#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.viz.VizBase#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.viz.VizBase#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.VizBase#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/mapEditor/MapEditor","description":"Constructor for a new <code>MapEditor<\/code> for editing key-value pairs with primitive values. To get notified about changes made with the editor, you can attach a handler to the <code>valueChange<\/code> event.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowKeyChange<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow editing the key attribute of map entries<\/td> <\/tr> <tr> <td><code>allowTypeChange<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow editing the type of map entries<\/td> <\/tr> <tr> <td><code>allowAddAndRemove<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow adding and removing map entries<\/td> <\/tr> <tr> <td><code>allowedTypes<\/code><\/td> <td><code>string[]<\/code><\/td> <td><code>[\"string\"]<\/code><\/td> <td>List of editor types which are supported in the map<\/td> <\/tr> <tr> <td><code>includeInvalidEntries<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to show entries with invalid types if the <code>StringEditor<\/code> cannot be used as a fallback<\/td> <\/tr> <tr> <td><code>allowSorting<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow changing the order of items.<\/td> <\/tr> <tr> <td><code>addItemLabelI18n<\/code><\/td> <td><code>string<\/code><\/td> <td><code>BASE_EDITOR.MAP.DEFAULT_TYPE<\/code><\/td> <td>I18n key for the item in the \"Add: Item\" label, e.g. \"Add: Parameter\" by default<\/td> <\/tr> <tr> <td><code>defaultType<\/code><\/td> <td><code>string<\/code><\/td> <td><code>null<\/code><\/td> <td>Default type for all map items. If <code>null<\/code>, the editor will try to derive the type from the value or fall back to \"string\"<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration":{"filetype":"library","types":["sap.ui.integration.designtime","sap.ui.integration.AttributesLayoutType","sap.ui.integration.CardActionType","sap.ui.integration.CardArea","sap.ui.integration.CardBlockingMessageType","sap.ui.integration.CardDataMode","sap.ui.integration.CardDesign","sap.ui.integration.CardDisplayVariant","sap.ui.integration.CardMessageType","sap.ui.integration.CardPreviewMode"],"typesWithClasses":["sap.ui.integration.editor","sap.ui.integration.services","sap.ui.integration.util","sap.ui.integration.widgets"],"elements":["sap.ui.integration.ActionDefinition","sap.ui.integration.Host"],"module":"sap/ui/integration/library","name":"sap.ui.integration","description":"SAPUI5 library with controls specialized for SAP Fiori apps.","helpDescription":"SAPUI5 library with controls specialized for SAP Fiori apps.","version":"1.132.1"},"sap.ui.integration.services.Service":{"associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/services/Service","constructorDescription":"Base class for all services.\nTo inherit use the extend method <code>Service.extend<\/code>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/groupEditor/GroupEditor","description":"Constructor for a new <code>GroupEditor<\/code>. This allows to set a group title or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Title}.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>maxLength<\/code><\/td> <td><code>number<\/code><\/td> <td><\/td> <td>Maximum number of characters<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.util.DataProviderFactory":{"extend":"sap.ui.base.EventProvider","associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/util/DataProviderFactory","description":"A factory class which creates a data provider based on data settings and stores the created instance. When destroyed, all data providers created by this class are also destroyed.","helpDescription":"A factory class which creates a data provider based on data settings and stores the created instance. When destroyed, all data providers created by this class are also destroyed.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{"error":{"method":"sap.ui.integration.util.DataProvider#event:error","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.message":"type: string, description: The error message.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"error","description":"Event fired when an error is thrown.","fullName":"sap.ui.integration.util.DataProvider#error","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"}}},"sap.ui.integration.designtime":{"filetype":"library","types":["sap.ui.integration.designtime.cardEditor"],"typesWithClasses":["sap.ui.integration.designtime.baseEditor","sap.ui.integration.designtime.editor"],"name":"sap.ui.integration.designtime","version":"1.132.1"},"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/iconEditor/IconEditor","description":"Constructor for a <code>IconEditor<\/code>. This allows to set icon URIs or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input} with a {@link sap.m.SelectDialog} value help. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as a string containing an icon URI or as a binding string to the provided callback function when the user edits the input or selects an item in the dialog.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/cardEditor/propertyEditor/iconEditor/IconEditor","description":"Constructor for a new <code>IconEditor<\/code>. This allows to set icon Object properties for a specified property of a JSON object. The type of the icon can be \"icon\", \"text\" or \"picture\" Properties of the icon are \"src\", \"text\" \"alt\", \"shape\"","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.DateTimeField":{"extend":"sap.ui.integration.editor.fields.BaseField","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateTimeField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.DateTimeField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateTimeField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateTimeField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/DateTimeField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateTimeField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.DateTimeField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.DateTimeField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateTimeField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.DateTimeField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.DateTimeField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.DateTimeField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DateTimeField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateTimeField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateTimeField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateTimeField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DateTimeField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.DateTimeField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateTimeField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.DateTimeField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateTimeField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.DateTimeField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.DateTimeField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.DateTimeField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.DateTimeField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateTimeField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateTimeField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.DateTimeField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DateTimeField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DateTimeField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.DateTimeField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.DateTimeField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.DateTimeField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DateTimeField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.DateTimeField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.DateTimeField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.DateTimeField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.DateTimeField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DateTimeField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/multiSelectEditor/MultiSelectEditor","description":"Constructor for a new <code>MultiSelectEditor<\/code>. This allows to select from predefined list or to provide binding list for a specified property of a JSON object. The editor is rendered as a {@link sap.m.MultiComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as a string representing a valid option value or as a binding string to the provided callback function when the user selects a value or edits the input.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowCustomValues<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>false<\/code><\/td> <td>Whether custom values can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor.MultiSelectEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.BaseEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/designtime/baseEditor/BaseEditor","description":"<h3>Overview<\/h3> Configurable JSON editor <h4>Example<\/h4> <pre>\nsap.ui.require([\"sap/ui/integration/designtime/baseEditor/BaseEditor\"], function (Editor) {\n    var oJson = {\n        root: {\n            context: {\n                id: \"404\",\n                name: \"Kate\",\n                role: \"End User\"\n            },\n            foo: {\n                bar: true\n            }\n        }\n    };\n    var oEditor = new Editor();\n    oEditor.setJson(oJson);\n    oEditor.setConfig({\n        \"context\": \"root/context\",\n        \"properties\" : {\n            \"name\": {\n                \"label\": \"Name\",\n                \"path\": \"name\",\n                \"type\": \"string\"\n            },\n            \"role\": {\n                \"label\": \"Role\",\n                \"path\": \"role\",\n                \"type\": \"select\",\n                \"items\": [\n                    { \"key\": \"Developer\" },\n                    { \"key\": \"Key User\" },\n                    { \"key\": \"End User\" }\n                ]\n            },\n            \"department\": {\n                \"label\": \"Department\",\n                \"path\": \"department\",\n                \"type\": \"select\",\n                \"items\": [\n                    { \"key\": \"Sales\" },\n                    { \"key\": \"HR\" },\n                    { \"key\": \"Development\" }\n                ]\n                \"visible\": \"{= ${context>/role} === 'Key User'}\"\n            }\n        },\n        \"propertyEditors\": {\n            \"select\": \"sap/ui/integration/designtime/baseEditor/propertyEditor/selectEditor/SelectEditor\",\n            \"string\" : \"sap/ui/integration/designtime/baseEditor/propertyEditors/stringEditor/StringEditor\"\n        }\n    });\n    oEditor.attachJsonChange(function(oEvent) {\n        var oJson = oEvent.getParameter(\"json\");\n        // live change\n    })\n    oEditor.placeAt(\"content\");\n})\n<\/pre>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getJson json} : object<\/li>\n<li>{@link #getConfig config} : object (default: ...see text or source)<\/li>\n<li>{@link #getDesigntimeMetadata designtimeMetadata} : object<\/li>\n<li>{@link #getLayout layout} : string (default: \"list\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:jsonChange jsonChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:designtimeMetadataChange designtimeMetadataChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:configChange configChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyEditorsReady propertyEditorsReady} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:validationErrorChange validationErrorChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"defaultAggregation":"content","helpDescription":"<h3>Overview<\/h3> Configurable JSON editor <h4>Example<\/h4> <pre>\nsap.ui.require([\"sap/ui/integration/designtime/baseEditor/BaseEditor\"], function (Editor) {\n    var oJson = {\n        root: {\n            context: {\n                id: \"404\",\n                name: \"Kate\",\n                role: \"End User\"\n            },\n            foo: {\n                bar: true\n            }\n        }\n    };\n    var oEditor = new Editor();\n    oEditor.setJson(oJson);\n    oEditor.setConfig({\n        \"context\": \"root/context\",\n        \"properties\" : {\n            \"name\": {\n                \"label\": \"Name\",\n                \"path\": \"name\",\n                \"type\": \"string\"\n            },\n            \"role\": {\n                \"label\": \"Role\",\n                \"path\": \"role\",\n                \"type\": \"select\",\n                \"items\": [\n                    { \"key\": \"Developer\" },\n                    { \"key\": \"Key User\" },\n                    { \"key\": \"End User\" }\n                ]\n            },\n            \"department\": {\n                \"label\": \"Department\",\n                \"path\": \"department\",\n                \"type\": \"select\",\n                \"items\": [\n                    { \"key\": \"Sales\" },\n                    { \"key\": \"HR\" },\n                    { \"key\": \"Development\" }\n                ]\n                \"visible\": \"{= ${context>/role} === 'Key User'}\"\n            }\n        },\n        \"propertyEditors\": {\n            \"select\": \"sap/ui/integration/designtime/baseEditor/propertyEditor/selectEditor/SelectEditor\",\n            \"string\" : \"sap/ui/integration/designtime/baseEditor/propertyEditors/stringEditor/StringEditor\"\n        }\n    });\n    oEditor.attachJsonChange(function(oEvent) {\n        var oJson = oEvent.getParameter(\"json\");\n        // live change\n    })\n    oEditor.placeAt(\"content\");\n})\n<\/pre>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,insertContent,addContent,removeContent,indexOfContent,removeAllContent","Deprecated":false,"Experimental":false,"multiple":"true","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#metadataContexts","type":"object"},"layout":{"method":"#getLayout,setLayout","Deprecated":false,"defaultValue":"\"list\"","Experimental":false,"description":"Layout name. Standard layout types: list | form","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#layout","helpDescription":"Layout name. Standard layout types: list | form","type":"string","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadata":{"method":"#getDesigntimeMetadata,setDesigntimeMetadata","Deprecated":false,"Experimental":false,"description":"Designtime-specific metadata to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getDesigntimeMetadata()<\/code> or <code>.attachDesigntimeMetadataChange()<\/code> should be used instead to get the changed object.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#designtimeMetadata","helpDescription":"Designtime-specific metadata to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getDesigntimeMetadata()<\/code> or <code>.attachDesigntimeMetadataChange()<\/code> should be used instead to get the changed object.","type":"object","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"json":{"method":"#getJson,setJson","Deprecated":false,"Experimental":false,"description":"JSON to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getJson()<\/code> or <code>.attachJsonChange()<\/code> should be used instead to get the changed object.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#json","helpDescription":"JSON to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getJson()<\/code> or <code>.attachJsonChange()<\/code> should be used instead to get the changed object.","type":"object","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#id","type":"sap.ui.core.ID"},"config":{"method":"#getConfig,setConfig","Deprecated":false,"defaultValue":"\"...see text or source\"","Experimental":false,"description":"Configuration Map config.context {string} Path in the JSON that will be edited e.g. <code>\"path/subpath\"<\/code> for <code>json.path.subpath<\/code> config.properties {Object<string,object>} Defines which fields in the context are editable config.properties.<key>.label {string} of the property to show on the UI config.properties.<key>.type {string} of the property (property editor for this type will be shown) config.properties.<key>.path {string} that will be changed, relative to the context. Example: If the context is <code>root<\/code> and the path is <code>header/name<\/code>, the <code>json.root.header.name<\/code> field is to be changed config.properties.<key>.value {string|boolean} (Optional) value of the property. A binding relative to the context (model name) should be used. Example: <code>{context>header/name}<\/code> will create a binding <code>json.root.header.name<\/code> config.properties.<key>.tags {array} Strings to categorize the property config.properties.<key>.visible {string|boolean} Should be used as a binding relative to the context to define the conditions under which the editor for this property should be visible, e.g. <code>{= ${context>anotherProperty} === 'someValue'}<\/code>. Invisible editors won't receive value updates until they are activated again. config.properties.<key>.<other configurations> {any} It is possible to define additional configurations in this namespace. These configurations will be passed to the dedicated property editor. Binding strings relative to context model are supported as well, e.g. <code>{= ${context>someProperty} + ${context>anotherProperty}}<\/code> config.propertyEditors {Object<string,string>} Defines which property editors should be loaded. Key is the property type and value is the editor module path. Example: <code>propertyEditors: {\"string\": \"sap/ui/integration/designtime/controls/propertyEditors/StringEditor\"}<\/code> defines the module responsible for all properties with the type <code>string<\/code> config.i18n {string|array} Module path or array of paths for i18n property files. i18n binding, for example, <code>{i18n>key}<\/code> is available in the <code>/properties<code> section, e.g. for <code>label<\/code>","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#config","helpDescription":"Configuration Map config.context {string} Path in the JSON that will be edited e.g. <code>\"path/subpath\"<\/code> for <code>json.path.subpath<\/code> config.properties {Object<string,object>} Defines which fields in the context are editable config.properties.<key>.label {string} of the property to show on the UI config.properties.<key>.type {string} of the property (property editor for this type will be shown) config.properties.<key>.path {string} that will be changed, relative to the context. Example: If the context is <code>root<\/code> and the path is <code>header/name<\/code>, the <code>json.root.header.name<\/code> field is to be changed config.properties.<key>.value {string|boolean} (Optional) value of the property. A binding relative to the context (model name) should be used. Example: <code>{context>header/name}<\/code> will create a binding <code>json.root.header.name<\/code> config.properties.<key>.tags {array} Strings to categorize the property config.properties.<key>.visible {string|boolean} Should be used as a binding relative to the context to define the conditions under which the editor for this property should be visible, e.g. <code>{= ${context>anotherProperty} === 'someValue'}<\/code>. Invisible editors won't receive value updates until they are activated again. config.properties.<key>.<other configurations> {any} It is possible to define additional configurations in this namespace. These configurations will be passed to the dedicated property editor. Binding strings relative to context model are supported as well, e.g. <code>{= ${context>someProperty} + ${context>anotherProperty}}<\/code> config.propertyEditors {Object<string,string>} Defines which property editors should be loaded. Key is the property type and value is the editor module path. Example: <code>propertyEditors: {\"string\": \"sap/ui/integration/designtime/controls/propertyEditors/StringEditor\"}<\/code> defines the module responsible for all properties with the type <code>string<\/code> config.i18n {string|array} Module path or array of paths for i18n property files. i18n binding, for example, <code>{i18n>key}<\/code> is available in the <code>/properties<code> section, e.g. for <code>label<\/code>","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"propertyEditorsReady":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:propertyEditorsReady","Deprecated":false,"Experimental":false,"name":"propertyEditorsReady","description":"Fired when all property editors for the given JSON and configuration are created. TODO: remove this public event.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#propertyEditorsReady","helpDescription":"Fired when all property editors for the given JSON and configuration are created. TODO: remove this public event.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fired when designtime metadata has been changed by a <code>propertyEditor<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#designtimeMetadataChange","helpDescription":"Fired when designtime metadata has been changed by a <code>propertyEditor<\/code>.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.hasError":"type: boolean, description: Whether there is an error in one of the nested editors","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fires when the error state of one of the nested property editors changes","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#validationErrorChange","helpDescription":"Fires when the error state of one of the nested property editors changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"jsonChange":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:jsonChange","Deprecated":false,"Experimental":false,"name":"jsonChange","description":"Fired when any property has been changed by the <code>propertyEditor<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#jsonChange","helpDescription":"Fired when any property has been changed by the <code>propertyEditor<\/code>.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fired when config has been changed.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#configChange","helpDescription":"Fired when config has been changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.BaseEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.BaseEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/cardEditor/propertyEditor/parametersEditor/ParametersEditor","description":"Constructor for a new <code>ParametersEditor<\/code> for editing key-value pairs with primitive values, labels and persisted type information.\n\n<h3>Configuration<\/h3>\n\nConfiguration is inherited from {@link sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor}\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowLabelChange<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow editing the label of parameters<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.DateField":{"extend":"sap.ui.integration.editor.fields.BaseField","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.DateField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/DateField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.DateField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.DateField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.DateField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.DateField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.DateField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.DateField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DateField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DateField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.DateField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.DateField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.DateField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.DateField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.DateField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.DateField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.DateField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.DateField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.DateField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.DateField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DateField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.DateField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.DateField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.DateField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.DateField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.DateField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.DateField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.DateField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DateField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.DateField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.DateField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.DateField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.DateField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.DateField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.DateField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.DateField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.DateField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.Extension":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/ui/integration/editor/Extension","description":"Brings JavaScript capabilities for an {@link sap.ui.integration.editor.Editor} where custom logic can be implemented.","constructorDescription":"Constructor for a new <code>Extension<\/code>.","extend":"sap.ui.integration.Extension","Deprecated":false,"helpDescription":"Brings JavaScript capabilities for an {@link sap.ui.integration.editor.Editor} where custom logic can be implemented.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.Extension#models","type":"object"},"formatters":{"method":"#getFormatters,setFormatters","Deprecated":false,"Experimental":false,"description":"The formatters that can be used in the manifest.","fullName":"sap.ui.integration.editor.Extension#formatters","helpDescription":"The formatters that can be used in the manifest.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.Extension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.Extension#id","type":"sap.ui.core.ID"},"actions":{"method":"#getActions,setActions","Deprecated":true,"Experimental":true,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.85 This property is replaced by the <code>actions<\/code> aggregation of the card;<br>The actions configuration.","fullName":"sap.ui.integration.editor.Extension#actions","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.85 This property is replaced by the <code>actions<\/code> aggregation of the card;<br>The actions configuration.","type":"sap.ui.integration.CardMenuAction[]","DeprecatedInfo":{"isDeprecated":true,"description":"This property is replaced by the <code>actions<\/code> aggregation of the card;","since":"1.85"},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.Extension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.Extension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.Extension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.Extension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.Extension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.Extension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.Extension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.Extension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"action":{"method":"sap.ui.integration.editor.Extension#event:action","Deprecated":false,"Experimental":true,"name":"action","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.Extension#action","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.Extension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.Extension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"message":{"method":"sap.ui.integration.Host#event:message","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.data":"type:object","oControlEvent":"sap.ui.base.Event"},"name":"message","description":"Fired when a message from channels like navigator.serviceWorker is received.","fullName":"sap.ui.integration.Host#message","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationError":{"method":"sap.ui.integration.editor.Extension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.Extension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.ObjectListField":{"associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectListField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.ObjectListField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectListField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectListField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/editor/fields/ObjectListField","description":"Object List Field with object list value, such as [{\"key\": \"key1\"}, {\"key\": \"key2\"}]","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.ObjectField#constructor sap.ui.integration.editor.fields.ObjectField} can be used.","extend":"sap.ui.integration.editor.fields.ObjectField","Deprecated":false,"helpDescription":"Object List Field with object list value, such as [{\"key\": \"key1\"}, {\"key\": \"key2\"}]","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectListField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.ObjectListField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.ObjectListField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectListField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.ObjectListField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.ObjectListField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.ObjectListField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.ObjectListField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectListField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectListField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectListField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.ObjectListField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.ObjectListField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectListField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.ObjectListField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectListField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.ObjectListField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.ObjectListField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.ObjectListField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.ObjectListField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectListField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectListField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.ObjectListField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.ObjectListField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.ObjectListField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.ObjectListField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"tableUpdated":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:tableUpdated","Deprecated":false,"Experimental":false,"name":"tableUpdated","description":"Fired when table is updated.","fullName":"sap.ui.integration.editor.fields.ObjectListField#tableUpdated","helpDescription":"Fired when table is updated.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.ObjectListField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.ObjectListField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.ObjectListField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.ObjectListField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:translationPopoverOpened","Deprecated":false,"Experimental":true,"name":"translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.ObjectListField#translationPopoverOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.ObjectListField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.ObjectListField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.ObjectListField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.ObjectListField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.util.RequestDataProvider":{"extend":"sap.ui.integration.util.DataProvider","associations":{"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"multiple":"false","description":"The host which is used for communication with the caching service worker.","fullName":"sap.ui.integration.util.RequestDataProvider#host","helpDescription":"The host which is used for communication with the caching service worker.","type":"sap.ui.integration.Host","DeprecatedInfo":{"isDeprecated":false}},"card":{"method":"#getCard,setCard","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.util.RequestDataProvider#card","type":"sap.ui.integration.widgets.Card","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/util/RequestDataProvider","constructorDescription":"Constructor for a new <code>RequestDataProvider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAllowCustomDataType allowCustomDataType} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getHost host} : (sap.ui.core.ID | sap.ui.integration.Host)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.util.DataProvider#constructor sap.ui.integration.util.DataProvider}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.RequestDataProvider#models","type":"object"},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"description":"Data provider configuration in manifest format. May contain FormData.","fullName":"sap.ui.integration.util.RequestDataProvider#configuration","helpDescription":"Data provider configuration in manifest format. May contain FormData.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.RequestDataProvider#objectBindings","type":"object"},"allowCustomDataType":{"method":"#getAllowCustomDataType,setAllowCustomDataType","Deprecated":false,"defaultValue":"false","Experimental":false,"fullName":"sap.ui.integration.util.RequestDataProvider#allowCustomDataType","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"configurationJson":{"method":"#getConfigurationJson,setConfigurationJson","Deprecated":false,"Experimental":false,"description":"Configuration in stringified JSON format. Should be used when binding resolving is wanted. Anytime this value is changed, a new data update is triggered.","fullName":"sap.ui.integration.util.RequestDataProvider#configurationJson","helpDescription":"Configuration in stringified JSON format. Should be used when binding resolving is wanted. Anytime this value is changed, a new data update is triggered.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"baseRuntimeUrl":{"method":"#getBaseRuntimeUrl,setBaseRuntimeUrl","Deprecated":false,"Experimental":false,"description":"The base url where resources for card or editor are located.","fullName":"sap.ui.integration.util.RequestDataProvider#baseRuntimeUrl","helpDescription":"The base url where resources for card or editor are located.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.util.RequestDataProvider#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.RequestDataProvider#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.util.RequestDataProvider#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.util.RequestDataProvider#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.util.RequestDataProvider#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"dataRequested":{"method":"sap.ui.integration.util.RequestDataProvider#event:dataRequested","Deprecated":false,"Experimental":false,"name":"dataRequested","description":"Event fired when new data is requested.","fullName":"sap.ui.integration.util.RequestDataProvider#dataRequested","helpDescription":"Event fired when new data is requested.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.util.RequestDataProvider#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.util.RequestDataProvider#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.util.RequestDataProvider#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.util.RequestDataProvider#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"dataChanged":{"method":"sap.ui.integration.util.RequestDataProvider#event:dataChanged","Deprecated":false,"Experimental":false,"name":"dataChanged","description":"Event fired when new data is available.","fullName":"sap.ui.integration.util.RequestDataProvider#dataChanged","helpDescription":"Event fired when new data is available.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.util.RequestDataProvider#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.util.RequestDataProvider#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"error":{"method":"sap.ui.integration.util.RequestDataProvider#event:error","Deprecated":false,"Experimental":false,"name":"error","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.message":"type: string, description: The error message.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Event fired when an error is thrown.","fullName":"sap.ui.integration.util.RequestDataProvider#error","helpDescription":"Event fired when an error is thrown.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.util.RequestDataProvider#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.util.RequestDataProvider#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.Designtime":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/ui/integration/Designtime","description":"Brings JavaScript capabilities for an {@link sap.ui.integration.widgets.Card} where custom logic can be implemented.","constructorDescription":"Constructor for a new <code>Designtime<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject} can be used.","extend":"sap.ui.base.ManagedObject","Deprecated":false,"helpDescription":"Brings JavaScript capabilities for an {@link sap.ui.integration.widgets.Card} where custom logic can be implemented.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Designtime#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Designtime#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.Designtime#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Designtime#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.Designtime#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.Designtime#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.Designtime#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.Designtime#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.Designtime#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.Designtime#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.Designtime#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.Designtime#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.Designtime#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"press":{"method":"sap.ui.integration.ActionDefinition#event:press","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"press","description":"Fired when the action button is pressed.","fullName":"sap.ui.integration.ActionDefinition#press","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationError":{"method":"sap.ui.integration.Designtime#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.Designtime#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/selectEditor/SelectEditor","description":"Constructor for a new <code>SelectEditor<\/code>. This allows to select from predefined string values or to provide binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.ComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as a string representing a valid option value or as a binding string to the provided callback function when the user selects a value or edits the input.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowCustomValues<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>false<\/code><\/td> <td>Whether custom values can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/stringEditor/StringEditor","description":"Constructor for a new <code>StringEditor<\/code>. This allows to set string values or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as a string or binding string to the provided callback function when the user edits the input.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>enabled<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether the underlying control should be enabled<\/td> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>placeholder<\/code><\/td> <td><code>string<\/code><\/td> <td><\/td> <td>Placeholder for the input field<\/td> <\/tr> <tr> <td><code>maxLength<\/code><\/td> <td><code>number<\/code><\/td> <td><\/td> <td>Maximum number of characters<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.Extension":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/ui/integration/Extension","description":"Brings JavaScript capabilities for an {@link sap.ui.integration.widgets.Card} where custom logic can be implemented.","constructorDescription":"Constructor for a new <code>Extension<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getActions actions} : sap.ui.integration.CardMenuAction[]<\/li>\n<li>{@link #getFormatters formatters} : object<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:action action} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extend":"sap.ui.base.ManagedObject","Deprecated":false,"helpDescription":"Brings JavaScript capabilities for an {@link sap.ui.integration.widgets.Card} where custom logic can be implemented.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Extension#models","type":"object"},"formatters":{"method":"#getFormatters,setFormatters","Deprecated":false,"Experimental":false,"description":"The formatters that can be used in the manifest.","fullName":"sap.ui.integration.Extension#formatters","helpDescription":"The formatters that can be used in the manifest.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Extension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.Extension#id","type":"sap.ui.core.ID"},"actions":{"method":"#getActions,setActions","Deprecated":true,"Experimental":true,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.85 This property is replaced by the <code>actions<\/code> aggregation of the card;<br>The actions configuration.","fullName":"sap.ui.integration.Extension#actions","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.85 This property is replaced by the <code>actions<\/code> aggregation of the card;<br>The actions configuration.","type":"sap.ui.integration.CardMenuAction[]","DeprecatedInfo":{"isDeprecated":true,"description":"This property is replaced by the <code>actions<\/code> aggregation of the card;","since":"1.85"},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.Extension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.Extension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.Extension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.Extension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.Extension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.Extension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.Extension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.Extension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"action":{"method":"sap.ui.integration.Extension#event:action","Deprecated":false,"Experimental":true,"name":"action","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.formData":"type: object, description: All form data that is filled inside the card. This parameter is available only with action types <code>Submit<\/code> and <code>Custom<\/code>.\n\nThe format will be the same as in the <code>form<\/code> model available in the card manifest. For more information look at the documentation for each individual form type.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.actionSource":"type: sap.ui.core.Control, description: The action source.","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.card":"type: sap.ui.core.Control, description: The card the action is fired from.","oControlEvent.getParameters.actionConfig":"type: object, description: The action configuration.","oControlEvent.getParameters.parameters":"type: object, description: The parameters related to the triggered action.\n\n<b>Disclaimer:<\/b> Since 1.129 the special parameter <code>data<\/code> for action <code>Submit<\/code> is deprecated and must not be used. Use event parameter <code>formData<\/code> instead.","oControlEvent.getParameters.type":"type: sap.ui.integration.CardActionType, description: The type of the action."},"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.Extension#action","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.Extension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.Extension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.Extension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.Extension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.util":{"filetype":"library","types":["sap.ui.integration.util.ManifestResolver"],"controls":["sap.ui.integration.util.SkeletonCard"],"name":"sap.ui.integration.util","version":"1.132.1"},"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/enumStringEditor/EnumStringEditor","description":"Constructor for a new <code>EnumStringEditor<\/code>. This allows to select from predefined string values or to provide binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.ComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as a string representing a valid option value or as a binding string to the provided callback function when the user selects a value or edits the input.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowCustomValues<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>false<\/code><\/td> <td>Whether custom values can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.81 Use the {@link sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor} instead<br>Constructor for a new <code>EnumStringEditor<\/code>. This allows to select from predefined string values or to provide binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.ComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as a string representing a valid option value or as a binding string to the provided callback function when the user selects a value or edits the input.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowCustomValues<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>false<\/code><\/td> <td>Whether custom values can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <\/table>","DeprecatedInfo":{"isDeprecated":true,"description":"Use the {@link sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor} instead","since":"1.81"},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor":{"filetype":"library","controls":["sap.ui.integration.editor.Settings"],"typesWithClasses":["sap.ui.integration.editor.fields"],"name":"sap.ui.integration.editor","version":"1.132.1"},"sap.ui.integration.designtime.baseEditor.layout":{"filetype":"library","types":["sap.ui.integration.designtime.baseEditor.layout.Form"],"name":"sap.ui.integration.designtime.baseEditor.layout","version":"1.132.1"},"sap.ui.integration.editor.fields.GroupField":{"associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.GroupField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.GroupField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.GroupField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.GroupField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/editor/fields/GroupField","description":"Group Field which will contains multi parameters via Panel/Tab","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","extend":"sap.ui.integration.editor.fields.BaseField","Deprecated":false,"helpDescription":"Group Field which will contains multi parameters via Panel/Tab","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.GroupField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.GroupField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.GroupField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.GroupField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.GroupField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.GroupField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.GroupField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.GroupField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.GroupField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.GroupField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.GroupField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.GroupField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.GroupField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.GroupField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.GroupField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.GroupField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.GroupField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.GroupField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.GroupField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.GroupField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.GroupField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.GroupField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.GroupField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.GroupField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.GroupField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.GroupField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.GroupField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.GroupField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.GroupField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.GroupField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.GroupField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.GroupField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.GroupField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.GroupField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.GroupField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.GroupField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.GroupField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.GroupField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.GroupField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.GroupField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.GroupField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.GroupField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/arrayEditor/ArrayEditor","description":"Constructor for a new <code>ArrayEditor<\/code>.\n\nThis property editor allows you to edit arrays in a flat way. To get notified about changes made with the editor, you can use the <code>valueChange<\/code> event.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowAddAndRemove<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow adding and removing array items<\/td> <\/tr> <tr> <td><code>allowSorting<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow changing the order of array items<\/td> <\/tr> <tr> <td><code>collapsibleItems<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to render collapsible groups for array items or the plain array editor style<\/td> <\/tr> <tr> <td><code>showItemLabel<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to show the item label in the plain array editor<\/td> <\/tr> <tr> <td><code>template<\/code><\/td> <td><code>object<\/code><\/td> <td><code>{}<\/code><\/td> <td>Editor configurations for the nested editors of each item<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor}\ncan be used as well.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.viz.ShapeSelect":{"extend":"sap.ui.integration.editor.fields.viz.VizBase","associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/viz/ShapeSelect","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: \"Circle\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.editor.fields.viz.VizBase#constructor sap.ui.integration.editor.fields.viz.VizBase}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_control":{"method":"#get_control,destroy_control,set_control","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#_control","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"editable":{"method":"#getEditable,setEditable","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#editable","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"defaultValue":"\"Circle\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#value","type":"string","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.viz.ShapeSelect#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.viz.ShapeSelect#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.viz.ShapeSelect#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.integration.editor.fields.viz.ShapeSelect#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.viz.ShapeSelect#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.viz.ShapeSelect#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ShapeSelect#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/integerEditor/IntegerEditor","description":"Constructor for a new <code>IntegerEditor<\/code>. This allows you to set integer values or binding paths for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input}, which prevents non-integer user input unless it is a valid binding path.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.NumberField":{"extend":"sap.ui.integration.editor.fields.BaseField","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.NumberField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.NumberField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.NumberField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.NumberField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/NumberField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.NumberField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.NumberField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.NumberField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.NumberField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.NumberField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.NumberField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.NumberField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.NumberField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.NumberField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.NumberField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.NumberField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.NumberField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.NumberField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.NumberField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.NumberField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.NumberField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.NumberField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.NumberField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.NumberField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.NumberField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.NumberField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.NumberField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.NumberField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.NumberField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.NumberField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.NumberField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.NumberField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.NumberField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.NumberField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.NumberField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.NumberField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.NumberField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.NumberField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.NumberField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.NumberField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.NumberField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.NumberField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.NumberField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.NumberField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.NumberField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.NumberField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.NumberField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/objectArrayEditor/ObjectArrayEditor","description":"Constructor for a new <code>ObjectArrayEditor<\/code>. This allows to set a code editor or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.TextArea}.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>type<\/code><\/td> <td><code>string<\/code><\/td> <td><code>json<\/code><\/td> <td>The type of the code in the editor used for syntax highlighting<\/td> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>maxLength<\/code><\/td> <td><code>number<\/code><\/td> <td><\/td> <td>Maximum number of characters<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor.ObjectArrayEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/dateEditor/DateEditor","description":"Constructor for a new <code>DateEditor<\/code>. This allows to set date values or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.DatePicker}.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.ActionDefinition":{"associations":{"_menuItem":{"method":"#get_menuItem,set_menuItem","Deprecated":false,"Experimental":false,"multiple":"false","description":"The button in the actions menu, which is related to this action.","fullName":"sap.ui.integration.ActionDefinition#_menuItem","helpDescription":"The button in the actions menu, which is related to this action.","type":"sap.m.MenuItem","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.ActionDefinition#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/ActionDefinition","description":"Represents an action, which appears in the header of {@link sap.ui.integration.widgets.Card}. Useful in <code>Component<\/code> card and <code>Extension<\/code>.","constructorDescription":"Constructor for a new <code>ActionDefinition<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.integration.CardActionType<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getButtonType buttonType} : sap.m.ButtonType (default: Transparent)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getParameters parameters} : object<\/li>\n<li>{@link #getStartsSection startsSection} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActionDefinitions actionDefinitions} : sap.ui.integration.ActionDefinition[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #get_menuItem _menuItem} : (sap.ui.core.ID | sap.m.MenuItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.ActionDefinition#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.ActionDefinition#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.ActionDefinition#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.ActionDefinition#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.ActionDefinition#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"actionDefinitions":{"method":"#getActionDefinitions,destroyActionDefinitions,insertActionDefinition,addActionDefinition,removeActionDefinition,indexOfActionDefinition,removeAllActionDefinitions","Deprecated":false,"Experimental":false,"multiple":"true","description":"Action Definitions which will appear as nested items in the menu. <b>Note<\/b>: The parent action definition will not fire a press anymore, it will only be used to hold the subitem.","fullName":"sap.ui.integration.ActionDefinition#actionDefinitions","helpDescription":"Action Definitions which will appear as nested items in the menu. <b>Note<\/b>: The parent action definition will not fire a press anymore, it will only be used to hold the subitem.","type":"sap.ui.integration.ActionDefinition","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.ActionDefinition#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the action button should be visible on the screen.","fullName":"sap.ui.integration.ActionDefinition#visible","helpDescription":"Whether the action button should be visible on the screen.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.ActionDefinition#objectBindings","type":"object"},"icon":{"method":"#getIcon,setIcon","Deprecated":false,"Experimental":false,"description":"The icon of the action button.","fullName":"sap.ui.integration.ActionDefinition#icon","helpDescription":"The icon of the action button.","type":"sap.ui.core.URI","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"type":{"method":"#getType,setType","Deprecated":false,"Experimental":false,"description":"The type of the action.","fullName":"sap.ui.integration.ActionDefinition#type","helpDescription":"The type of the action.","type":"sap.ui.integration.CardActionType","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"enabled":{"method":"#getEnabled,setEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Indicates whether the user can interact with the action button or not. <b>Note<\/b>: Disabled controls cannot be focused and they are out of the navigation tab-chain.","fullName":"sap.ui.integration.ActionDefinition#enabled","helpDescription":"Indicates whether the user can interact with the action button or not. <b>Note<\/b>: Disabled controls cannot be focused and they are out of the navigation tab-chain.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.ActionDefinition#metadataContexts","type":"object"},"buttonType":{"method":"#getButtonType,setButtonType","Deprecated":true,"defaultValue":"Transparent","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.130 All <code>ActionDefinitions<\/code> are now rendered as menu items and don't have <code>buttonType<\/code>.<br>The type of the action button.","fullName":"sap.ui.integration.ActionDefinition#buttonType","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.130 All <code>ActionDefinitions<\/code> are now rendered as menu items and don't have <code>buttonType<\/code>.<br>The type of the action button.","type":"sap.m.ButtonType","DeprecatedInfo":{"isDeprecated":true,"description":"All <code>ActionDefinitions<\/code> are now rendered as menu items and don't have <code>buttonType<\/code>.","since":"1.130"},"group":"Misc"},"text":{"method":"#getText,setText","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"description":"The text of the action button.","fullName":"sap.ui.integration.ActionDefinition#text","helpDescription":"The text of the action button.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.ActionDefinition#id","type":"sap.ui.core.ID"},"startsSection":{"method":"#getStartsSection,setStartsSection","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Defines whether a visual separator should be rendered before the item. <b>Note<\/b>: If an item is invisible its separator is also not displayed.","fullName":"sap.ui.integration.ActionDefinition#startsSection","helpDescription":"Defines whether a visual separator should be rendered before the item. <b>Note<\/b>: If an item is invisible its separator is also not displayed.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"parameters":{"method":"#getParameters,setParameters","Deprecated":false,"Experimental":false,"description":"The parameters of the action.","fullName":"sap.ui.integration.ActionDefinition#parameters","helpDescription":"The parameters of the action.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.ActionDefinition#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.ActionDefinition#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.ActionDefinition#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.ActionDefinition#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.ActionDefinition#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.ActionDefinition#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.ActionDefinition#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.ActionDefinition#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.ActionDefinition#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"press":{"method":"sap.ui.integration.ActionDefinition#event:press","Deprecated":false,"Experimental":false,"name":"press","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when the action button is pressed.","fullName":"sap.ui.integration.ActionDefinition#press","helpDescription":"Fired when the action button is pressed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.ActionDefinition#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.ActionDefinition#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.BooleanField":{"extend":"sap.ui.integration.editor.fields.BaseField","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BooleanField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.BooleanField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BooleanField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BooleanField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/BooleanField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BooleanField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.BooleanField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.BooleanField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.BooleanField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.BooleanField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.BooleanField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.BooleanField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.BooleanField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.BooleanField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BooleanField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.BooleanField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.BooleanField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.BooleanField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BooleanField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.BooleanField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BooleanField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.BooleanField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.BooleanField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.BooleanField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.BooleanField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BooleanField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.BooleanField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.BooleanField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.BooleanField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.BooleanField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.BooleanField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.BooleanField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.BooleanField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.BooleanField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.BooleanField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.BooleanField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.BooleanField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.BooleanField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.BooleanField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.BooleanField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.BooleanField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.BooleanField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.BooleanField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.BooleanField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.BooleanField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.BooleanField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.BooleanField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor":{"filetype":"library","types":["sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IsInIconPool"],"controls":["sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor"],"name":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor","version":"1.132.1"},"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/numberEditor/NumberEditor","description":"Constructor for a new <code>NumberEditor<\/code>. This allows you to set numeric values or binding paths for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input}, which prevents non-numeric user input unless it is a valid binding path. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property value as a number or binding string to the provided callback function when the state changes.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.viz.ColorSelect":{"extend":"sap.ui.integration.editor.fields.viz.VizBase","associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/viz/ColorSelect","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnumValue enumValue} : string (default: \"\")<\/li>\n<li>{@link #getColorValue colorValue} : string (default: \"\")<\/li>\n<li>{@link #getColorEnum colorEnum} : string (default: \"sap.m.AvatarColor\")<\/li>\n<li>{@link #getBackground background} : boolean (default: true)<\/li>\n<li>{@link #getAllowCustomColors allowCustomColors} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.editor.fields.viz.VizBase#constructor sap.ui.integration.editor.fields.viz.VizBase}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_control":{"method":"#get_control,destroy_control,set_control","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#_control","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_colorpalette":{"method":"#get_colorpalette,destroy_colorpalette,set_colorpalette","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#_colorpalette","type":"sap.m.ColorPalettePopover","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"editable":{"method":"#getEditable,setEditable","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#editable","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"colorEnum":{"method":"#getColorEnum,setColorEnum","Deprecated":false,"defaultValue":"\"sap.m.AvatarColor\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#colorEnum","type":"string","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#metadataContexts","type":"object"},"allowCustomColors":{"method":"#getAllowCustomColors,setAllowCustomColors","Deprecated":false,"defaultValue":"false","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#allowCustomColors","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"enumValue":{"method":"#getEnumValue,setEnumValue","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#enumValue","type":"string","DeprecatedInfo":{"isDeprecated":false}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"background":{"method":"#getBackground,setBackground","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#background","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"colorValue":{"method":"#getColorValue,setColorValue","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#colorValue","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#value","type":"string","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.viz.ColorSelect#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.viz.ColorSelect#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.viz.ColorSelect#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.integration.editor.fields.viz.ColorSelect#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.viz.ColorSelect#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.viz.ColorSelect#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ColorSelect#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.ObjectField":{"associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.ObjectField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/editor/fields/ObjectField","description":"Object Field with object value such as {\"key\": \"key1\"}","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:tableUpdated tableUpdated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:translationPopoverOpened translationPopoverOpened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField}\ncan be used as well.","extend":"sap.ui.integration.editor.fields.BaseField","Deprecated":false,"helpDescription":"Object Field with object value such as {\"key\": \"key1\"}","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.ObjectField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.ObjectField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.ObjectField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.ObjectField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.ObjectField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.ObjectField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.ObjectField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.ObjectField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.ObjectField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.ObjectField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.ObjectField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.ObjectField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.ObjectField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.ObjectField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.ObjectField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.ObjectField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.ObjectField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.ObjectField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.ObjectField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.ObjectField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.ObjectField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"tableUpdated":{"method":"sap.ui.integration.editor.fields.ObjectField#event:tableUpdated","Deprecated":false,"Experimental":false,"name":"tableUpdated","description":"Fired when table is updated.","fullName":"sap.ui.integration.editor.fields.ObjectField#tableUpdated","helpDescription":"Fired when table is updated.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.ObjectField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.ObjectField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.ObjectField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.ObjectField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.ObjectField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.ObjectField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.ObjectField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.ObjectField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.ObjectField#event:translationPopoverOpened","Deprecated":false,"Experimental":true,"name":"translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.ObjectField#translationPopoverOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.ObjectField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.ObjectField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.ObjectField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.ObjectField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.ObjectField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.ObjectField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.Settings":{"extend":"sap.ui.core.Control","associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.Settings#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/Settings","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.Settings#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.Settings#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.Settings#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.Settings#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.Settings#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.Settings#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.editor.Settings#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.Settings#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.Settings#objectBindings","type":"object"},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.Settings#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.Settings#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.Settings#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.Settings#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.Settings#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.Settings#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.Settings#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.Settings#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.Settings#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.Settings#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.Settings#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.Settings#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.Settings#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.Settings#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.Settings#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"message":{"method":"sap.ui.integration.Host#event:message","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.data":"type:object","oControlEvent":"sap.ui.base.Event"},"name":"message","description":"Fired when a message from channels like navigator.serviceWorker is received.","fullName":"sap.ui.integration.Host#message","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validateFieldGroup":{"method":"sap.ui.integration.editor.Settings#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.Settings#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.Settings#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.Settings#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/codeEditor/CodeEditor","description":"Constructor for a new <code>CodeEditor<\/code>. This allows to set code text values for a specified property. The editor is rendered as a {@link sap.ui.CodeEditor} inside a {@link sap.m.Dialog}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as an object to the provided callback function when the user saves changes in the dialog.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor.CodeEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/separatorEditor/SeparatorEditor","description":"Constructor for a new <code>SeparatorEditor<\/code>. This allows to add a separator between parameters. The editor is rendered as a {@link sap.m.ToolbarSpacer}.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>maxLength<\/code><\/td> <td><code>number<\/code><\/td> <td><\/td> <td>Maximum number of characters<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor.SeparatorEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields":{"filetype":"library","controls":["sap.ui.integration.editor.fields.BaseField","sap.ui.integration.editor.fields.BooleanField","sap.ui.integration.editor.fields.DateField","sap.ui.integration.editor.fields.DateTimeField","sap.ui.integration.editor.fields.DestinationField","sap.ui.integration.editor.fields.GroupField","sap.ui.integration.editor.fields.IntegerField","sap.ui.integration.editor.fields.NumberField","sap.ui.integration.editor.fields.ObjectField","sap.ui.integration.editor.fields.ObjectListField","sap.ui.integration.editor.fields.StringField","sap.ui.integration.editor.fields.StringListField"],"typesWithClasses":["sap.ui.integration.editor.fields.fragment","sap.ui.integration.editor.fields.viz"],"name":"sap.ui.integration.editor.fields","version":"1.132.1"},"sap.ui.integration.designtime.editor.CardPreview":{"extend":"sap.ui.core.Control","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.editor.CardPreview#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.editor.CardPreview#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/designtime/editor/CardPreview","constructorDescription":"Constructor for a new <code>Preview<\/code> that show a image, abstract live preview\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSettings settings} : any<\/li>\n<li>{@link #getCard card} : object<\/li>\n<li>{@link #getParentWidth parentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getParentHeight parentHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #get_editor _editor} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.editor.CardPreview#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.editor.CardPreview#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.editor.CardPreview#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.editor.CardPreview#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"cardPreview":{"method":"#getCardPreview,destroyCardPreview,setCardPreview","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.editor.CardPreview#cardPreview","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.editor.CardPreview#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"settings":{"method":"#getSettings,setSettings","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.editor.CardPreview#settings","type":"any","DeprecatedInfo":{"isDeprecated":false}},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.editor.CardPreview#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.editor.CardPreview#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.editor.CardPreview#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.editor.CardPreview#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.editor.CardPreview#metadataContexts","type":"object"},"parentWidth":{"method":"#getParentWidth,setParentWidth","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.editor.CardPreview#parentWidth","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.editor.CardPreview#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"parentHeight":{"method":"#getParentHeight,setParentHeight","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.editor.CardPreview#parentHeight","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.editor.CardPreview#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.editor.CardPreview#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.editor.CardPreview#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.editor.CardPreview#id","type":"sap.ui.core.ID"},"card":{"method":"#getCard,setCard","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.editor.CardPreview#card","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.editor.CardPreview#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.designtime.editor.CardPreview#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.editor.CardPreview#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"name":"valueChange","description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#valueChange","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"parseError":{"method":"sap.ui.integration.designtime.editor.CardPreview#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.editor.CardPreview#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.editor.CardPreview#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.editor.CardPreview#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.editor.CardPreview#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.editor.CardPreview#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.editor.CardPreview#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.editor.CardPreview#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.editor.CardPreview#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.editor.CardPreview#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.util.DataProvider":{"associations":{"card":{"method":"#getCard,setCard","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.util.DataProvider#card","type":"sap.ui.integration.widgets.Card","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/util/DataProvider","description":"Provides data for the card, card header and card content by reading the \"data\" part of the card manifest. Hides the complexity of working with different data providers like: - static JSON data - data services which implements the interface <code>sap.ui.integration.services.Data<\/code> class - AJAX calls like <code>sap.ui.integration.cards.Data<\/code> class Allows for an extensible way to add more data providers.","constructorDescription":"Constructor for a new <code>DataProvider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConfiguration configuration} : object<\/li>\n<li>{@link #getConfigurationJson configurationJson} : string<\/li>\n<li>{@link #getBaseRuntimeUrl baseRuntimeUrl} : string<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getCard card} : (sap.ui.core.ID | sap.ui.integration.widgets.Card)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dataRequested dataRequested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataChanged dataChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:error error} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extend":"sap.ui.base.ManagedObject","Deprecated":false,"helpDescription":"Provides data for the card, card header and card content by reading the \"data\" part of the card manifest. Hides the complexity of working with different data providers like: - static JSON data - data services which implements the interface <code>sap.ui.integration.services.Data<\/code> class - AJAX calls like <code>sap.ui.integration.cards.Data<\/code> class Allows for an extensible way to add more data providers.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.DataProvider#models","type":"object"},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"description":"Data provider configuration in manifest format. May contain FormData.","fullName":"sap.ui.integration.util.DataProvider#configuration","helpDescription":"Data provider configuration in manifest format. May contain FormData.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.DataProvider#objectBindings","type":"object"},"configurationJson":{"method":"#getConfigurationJson,setConfigurationJson","Deprecated":false,"Experimental":false,"description":"Configuration in stringified JSON format. Should be used when binding resolving is wanted. Anytime this value is changed, a new data update is triggered.","fullName":"sap.ui.integration.util.DataProvider#configurationJson","helpDescription":"Configuration in stringified JSON format. Should be used when binding resolving is wanted. Anytime this value is changed, a new data update is triggered.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"baseRuntimeUrl":{"method":"#getBaseRuntimeUrl,setBaseRuntimeUrl","Deprecated":false,"Experimental":false,"description":"The base url where resources for card or editor are located.","fullName":"sap.ui.integration.util.DataProvider#baseRuntimeUrl","helpDescription":"The base url where resources for card or editor are located.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.util.DataProvider#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.DataProvider#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.util.DataProvider#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.util.DataProvider#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.util.DataProvider#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"dataRequested":{"method":"sap.ui.integration.util.DataProvider#event:dataRequested","Deprecated":false,"Experimental":false,"name":"dataRequested","description":"Event fired when new data is requested.","fullName":"sap.ui.integration.util.DataProvider#dataRequested","helpDescription":"Event fired when new data is requested.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.util.DataProvider#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.util.DataProvider#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.util.DataProvider#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.util.DataProvider#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"dataChanged":{"method":"sap.ui.integration.util.DataProvider#event:dataChanged","Deprecated":false,"Experimental":false,"name":"dataChanged","description":"Event fired when new data is available.","fullName":"sap.ui.integration.util.DataProvider#dataChanged","helpDescription":"Event fired when new data is available.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.util.DataProvider#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.util.DataProvider#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"error":{"method":"sap.ui.integration.util.DataProvider#event:error","Deprecated":false,"Experimental":false,"name":"error","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.message":"type: string, description: The error message.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Event fired when an error is thrown.","fullName":"sap.ui.integration.util.DataProvider#error","helpDescription":"Event fired when an error is thrown.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.util.DataProvider#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.util.DataProvider#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/BasePropertyEditor","description":"Base class for property editor implementations.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRenderLabel renderLabel} : boolean (default: true)<\/li>\n<li>{@link #getValue value} : any<\/li>\n<li>{@link #getConfig config} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeValueChange beforeValueChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueChange valueChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:designtimeMetadataChange designtimeMetadataChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:configChange configChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fragmentChange fragmentChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:ready ready} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:init init} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:validationErrorChange validationErrorChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.IntegerField":{"extend":"sap.ui.integration.editor.fields.BaseField","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.IntegerField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.IntegerField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.IntegerField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.IntegerField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/IntegerField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField} can be used.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.IntegerField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.IntegerField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.IntegerField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.IntegerField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.IntegerField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.IntegerField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.IntegerField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.IntegerField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.IntegerField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.IntegerField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.IntegerField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.IntegerField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.IntegerField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.IntegerField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.IntegerField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.IntegerField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.IntegerField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.IntegerField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.IntegerField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.IntegerField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.IntegerField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.IntegerField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.IntegerField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.IntegerField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.IntegerField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.IntegerField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.IntegerField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.IntegerField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.IntegerField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.IntegerField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.IntegerField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.IntegerField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.IntegerField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.IntegerField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.IntegerField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.IntegerField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.IntegerField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.IntegerField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.IntegerField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.IntegerField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.IntegerField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.IntegerField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.PropertyEditor":{"associations":{"editor":{"method":"#getEditor,setEditor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/designtime/baseEditor/PropertyEditor","description":"Renders one of the {@link sap.ui.integration.designtime.baseEditor.propertyEditor property editors} based on a specified <code>propertyName<\/code> or custom <code>config<\/code>.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPropertyName propertyName} : string<\/li>\n<li>{@link #getRenderLabel renderLabel} : boolean<\/li>\n<li>{@link #getValue value} : any<\/li>\n<li>{@link #getConfig config} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getEditor editor} : (sap.ui.core.ID | sap.ui.integration.designtime.baseEditor.BaseEditor)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:editorChange editorChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyEditorChange propertyEditorChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:configChange configChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyNameChange propertyNameChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:ready ready} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:validationErrorChange validationErrorChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeValueChange beforeValueChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueChange valueChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:designtimeMetadataChange designtimeMetadataChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:init init} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"Renders one of the {@link sap.ui.integration.designtime.baseEditor.propertyEditor property editors} based on a specified <code>propertyName<\/code> or custom <code>config<\/code>.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"propertyEditor":{"method":"#getPropertyEditor,destroyPropertyEditor,setPropertyEditor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#propertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"propertyName":{"method":"#getPropertyName,setPropertyName","Deprecated":false,"Experimental":false,"description":"Property name for which the configuration should be retrieved. The configuration for a specified name will be taken from the {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor} directly.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#propertyName","helpDescription":"Property name for which the configuration should be retrieved. The configuration for a specified name will be taken from the {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor} directly.","type":"string","DeprecatedInfo":{"isDeprecated":false}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"Experimental":false,"description":"Indicates whether the embedded <code>BasePropertyEditor<\/code> should render its label.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#renderLabel","helpDescription":"Indicates whether the embedded <code>BasePropertyEditor<\/code> should render its label.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"description":"Nested editor value","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#value","helpDescription":"Nested editor value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"description":"Custom configuration object. If set, it has priority over <code>propertyName<\/code>. Example: <pre>\n{\n    \"label\": \"My property\",\n    \"type\": \"string\",\n    \"path\": \"header/status/text\"\n}\n<\/pre> Where: <ul> <li><b>label<\/b> = text string for the property editor label<\/li> <li><b>type<\/b> = one of the registered property editor types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors<\/code> section)<\/li> <li><b>path<\/b> = a binding path to get data from<\/li> <\/ul>","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#config","helpDescription":"Custom configuration object. If set, it has priority over <code>propertyName<\/code>. Example: <pre>\n{\n    \"label\": \"My property\",\n    \"type\": \"string\",\n    \"path\": \"header/status/text\"\n}\n<\/pre> Where: <ul> <li><b>label<\/b> = text string for the property editor label<\/li> <li><b>type<\/b> = one of the registered property editor types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors<\/code> section)<\/li> <li><b>path<\/b> = a binding path to get data from<\/li> <\/ul>","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when the wrapper is initialized.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#init","helpDescription":"Fires when the wrapper is initialized.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when the designtime metadata of the nested property editor changes","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#designtimeMetadataChange","helpDescription":"Fires when the designtime metadata of the nested property editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"editorChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:editorChange","Deprecated":false,"Experimental":false,"name":"editorChange","description":"Fires when the new editor changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#editorChange","helpDescription":"Fires when the new editor changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"propertyNameChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:propertyNameChange","Deprecated":false,"Experimental":false,"name":"propertyNameChange","description":"Fires when <code>propertyName<\/code> changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#propertyNameChange","helpDescription":"Fires when <code>propertyName<\/code> changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fires when nested property editor is ready.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#ready","helpDescription":"Fires when nested property editor is ready.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the nested property editor changes","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#validationErrorChange","helpDescription":"Fires when the error state of the nested property editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when the value of the nested property editor changes","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#valueChange","helpDescription":"Fires when the value of the nested property editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before the value of the nested property editor changes","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#beforeValueChange","helpDescription":"Fires before the value of the nested property editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when <code>config<\/code> changes.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#configChange","helpDescription":"Fires when <code>config<\/code> changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"propertyEditorChange":{"method":"sap.ui.integration.designtime.baseEditor.PropertyEditor#event:propertyEditorChange","Deprecated":false,"Experimental":false,"name":"propertyEditorChange","description":"Fires when the internal property editor changes, e.g. called after the initial initialization or after changing the <code>propertyName<\/code> or <code>config<\/code> properties.","fullName":"sap.ui.integration.designtime.baseEditor.PropertyEditor#propertyEditorChange","helpDescription":"Fires when the internal property editor changes, e.g. called after the initial initialization or after changing the <code>propertyName<\/code> or <code>config<\/code> properties.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.viz.IconSelect":{"extend":"sap.ui.integration.editor.fields.viz.VizBase","associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/viz/IconSelect","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: \"sap-icon://accept\")<\/li>\n<li>{@link #getAllowFile allowFile} : boolean (default: true)<\/li>\n<li>{@link #getAllowNone allowNone} : boolean (default: true)<\/li>\n<li>{@link #getAllowDefaultIcons allowDefaultIcons} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.editor.fields.viz.VizBase#constructor sap.ui.integration.editor.fields.viz.VizBase}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_control":{"method":"#get_control,destroy_control,set_control","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#_control","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"allowFile":{"method":"#getAllowFile,setAllowFile","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.IconSelect#allowFile","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"editable":{"method":"#getEditable,setEditable","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.IconSelect#editable","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"allowNone":{"method":"#getAllowNone,setAllowNone","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.IconSelect#allowNone","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"allowDefaultIcons":{"method":"#getAllowDefaultIcons,setAllowDefaultIcons","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Specifies whether or not to allow Default Icons (SAP Icons).","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#allowDefaultIcons","helpDescription":"Specifies whether or not to allow Default Icons (SAP Icons).","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"defaultValue":"\"sap-icon://accept\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.IconSelect#value","type":"string","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.viz.IconSelect#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.viz.IconSelect#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.viz.IconSelect#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.integration.editor.fields.viz.IconSelect#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.viz.IconSelect#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.viz.IconSelect#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.IconSelect#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/booleanEditor/BooleanEditor","description":"Constructor for a new <code>BooleanEditor<\/code>. This allows you to set boolean values or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.ComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as a boolean or binding string to the provided callback function when the state changes.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.viz.ImageSelect":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/editor/fields/viz/ImageSelect","description":"Image Select","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAllowDefaultIcons allowDefaultIcons} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.editor.fields.viz.IconSelect#constructor sap.ui.integration.editor.fields.viz.IconSelect}\ncan be used as well.","extend":"sap.ui.integration.editor.fields.viz.IconSelect","Deprecated":false,"helpDescription":"Image Select","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_control":{"method":"#get_control,destroy_control,set_control","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#_control","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"allowFile":{"method":"#getAllowFile,setAllowFile","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#allowFile","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"editable":{"method":"#getEditable,setEditable","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#editable","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"allowNone":{"method":"#getAllowNone,setAllowNone","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#allowNone","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"allowDefaultIcons":{"method":"#getAllowDefaultIcons,setAllowDefaultIcons","Deprecated":false,"defaultValue":"false","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#allowDefaultIcons","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"defaultValue":"\"sap-icon://accept\"","Experimental":false,"fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#value","type":"string","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.viz.ImageSelect#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.viz.ImageSelect#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.viz.ImageSelect#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.integration.editor.fields.viz.ImageSelect#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.viz.ImageSelect#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.viz.ImageSelect#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.viz.ImageSelect#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap":{"filetype":"library","types":["sap.ui"],"name":"sap","version":"1.132.1"},"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/cardEditor/propertyEditor/destinationsEditor/DestinationsEditor","description":"Constructor for a new <code>DestinationsEditor<\/code>.\n\n<h3>Configuration<\/h3>\n\nConfiguration is inherited from {@link sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor}\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowedValues<\/code><\/td> <td><code>string[]<\/code><\/td> <td><code>[]<\/code><\/td> <td>Allowed destination values<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#constructor sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor} can be used.","extend":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.editor.fields.StringField":{"extend":"sap.ui.integration.editor.fields.BaseField","associations":{"_editor":{"method":"#get_editor,set_editor","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringField#_editor","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.editor.fields.StringField#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_messageIcon":{"method":"#get_messageIcon,set_messageIcon","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringField#_messageIcon","type":"sap.ui.core.Icon","DeprecatedInfo":{"isDeprecated":false}},"_messageStrip":{"method":"#get_messageStrip,set_messageStrip","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringField#_messageStrip","type":"sap.m.MessageStrip","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/StringField","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:translationPopoverOpened translationPopoverOpened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.integration.editor.fields.BaseField#constructor sap.ui.integration.editor.fields.BaseField}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_field":{"method":"#get_field,destroy_field,set_field","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringField#_field","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.editor.fields.StringField#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.editor.fields.StringField#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_dynamicField":{"method":"#get_dynamicField,destroy_dynamicField,set_dynamicField","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.editor.fields.StringField#_dynamicField","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.editor.fields.StringField#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.editor.fields.StringField#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.editor.fields.StringField#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.StringField#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringField#visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"configuration":{"method":"#getConfiguration,setConfiguration","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringField#configuration","type":"object","DeprecatedInfo":{"isDeprecated":false}},"allowPopover":{"method":"#getAllowPopover,setAllowPopover","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringField#allowPopover","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.StringField#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.editor.fields.StringField#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"specialButton":{"method":"#getSpecialButton,setSpecialButton","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringField#specialButton","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.editor.fields.StringField#metadataContexts","type":"object"},"mode":{"method":"#getMode,setMode","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringField#mode","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.editor.fields.StringField#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.editor.fields.StringField#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.editor.fields.StringField#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.StringField#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringField#host","type":"object","DeprecatedInfo":{"isDeprecated":false}},"parameterKey":{"method":"#getParameterKey,setParameterKey","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.editor.fields.StringField#parameterKey","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.editor.fields.StringField#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.editor.fields.StringField#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.integration.editor.fields.StringField#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.StringField#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFailed":{"method":"sap.ui.integration.editor.fields.StringField#event:validateFailed","Deprecated":false,"Experimental":false,"name":"validateFailed","description":"Fired when validation failed.","fullName":"sap.ui.integration.editor.fields.StringField#validateFailed","helpDescription":"Fired when validation failed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterInit":{"method":"sap.ui.integration.editor.fields.StringField#event:afterInit","Deprecated":false,"Experimental":false,"name":"afterInit","fullName":"sap.ui.integration.editor.fields.StringField#afterInit","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"settingsPanelOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:settingsPanelOpened","Deprecated":false,"Experimental":true,"name":"settingsPanelOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#settingsPanelOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.editor.fields.StringField#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.StringField#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.editor.fields.StringField#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.editor.fields.StringField#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","Deprecated":false,"Experimental":true,"name":"translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.editor.fields.StringField#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.editor.fields.StringField#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.editor.fields.StringField#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.editor.fields.StringField#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.editor.fields.StringField#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.editor.fields.StringField#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.util.SkeletonCard":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.util.SkeletonCard#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dialogHeader":{"method":"#getDialogHeader,setDialogHeader","Deprecated":false,"Experimental":false,"multiple":"false","description":"The opener card.","fullName":"sap.ui.integration.util.SkeletonCard#dialogHeader","helpDescription":"The opener card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"host":{"method":"#getHost,setHost","Deprecated":false,"Experimental":false,"multiple":"false","description":"The host.","fullName":"sap.ui.integration.util.SkeletonCard#host","helpDescription":"The host.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"openerReference":{"method":"#getOpenerReference,setOpenerReference","Deprecated":false,"Experimental":false,"multiple":"false","description":"The opener card.","fullName":"sap.ui.integration.util.SkeletonCard#openerReference","helpDescription":"The opener card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/ui/integration/util/SkeletonCard","description":"Represents a card which can work without being rendered.","constructorDescription":"Constructor for a new <code>SkeletonCard<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.widgets.Card#constructor sap.ui.integration.widgets.Card} can be used.","extend":"sap.ui.integration.widgets.Card","Deprecated":false,"helpDescription":"Represents a card which can work without being rendered.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.util.SkeletonCard#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"_loadingProvider":{"method":"#get_loadingProvider,destroy_loadingProvider,set_loadingProvider","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the internally used LoadingProvider.","fullName":"sap.ui.integration.util.SkeletonCard#_loadingProvider","helpDescription":"Defines the internally used LoadingProvider.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.util.SkeletonCard#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"_oInvisibleCardBadgeText":{"method":"#get_oInvisibleCardBadgeText,destroy_oInvisibleCardBadgeText,set_oInvisibleCardBadgeText","Deprecated":false,"Experimental":false,"multiple":"false","description":"Holds the text used for announcing the card badges to the screen reader.","fullName":"sap.ui.integration.util.SkeletonCard#_oInvisibleCardBadgeText","helpDescription":"Holds the text used for announcing the card badges to the screen reader.","type":"sap.ui.core.InvisibleText","DeprecatedInfo":{"isDeprecated":false}},"_header":{"method":"#get_header,destroy_header,set_header","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the header of the card.","fullName":"sap.ui.integration.util.SkeletonCard#_header","helpDescription":"Defines the header of the card.","type":"sap.f.cards.IHeader","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.util.SkeletonCard#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"_filterBar":{"method":"#get_filterBar,destroy_filterBar,set_filterBar","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the filters section of the card.","fullName":"sap.ui.integration.util.SkeletonCard#_filterBar","helpDescription":"Defines the filters section of the card.","type":"sap.ui.integration.cards.filters.FilterBar","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.util.SkeletonCard#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_cardBadges":{"method":"#get_cardBadges,destroy_cardBadges,insert_cardBadge,add_cardBadge,remove_cardBadge,indexOf_cardBadge,removeAll_cardBadges","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the internally used <code>sap.m.ObjectStatus<\/code>.","fullName":"sap.ui.integration.util.SkeletonCard#_cardBadges","helpDescription":"Defines the internally used <code>sap.m.ObjectStatus<\/code>.","type":"sap.m.ObjectStatus","DeprecatedInfo":{"isDeprecated":false}},"_footer":{"method":"#get_footer,destroy_footer,set_footer","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the footer of the card.","fullName":"sap.ui.integration.util.SkeletonCard#_footer","helpDescription":"Defines the footer of the card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.util.SkeletonCard#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_content":{"method":"#get_content,destroy_content,set_content","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the content of the card.","fullName":"sap.ui.integration.util.SkeletonCard#_content","helpDescription":"Defines the content of the card.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"_extension":{"method":"#get_extension,destroy_extension,set_extension","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the Extension of the card.","fullName":"sap.ui.integration.util.SkeletonCard#_extension","helpDescription":"Defines the Extension of the card.","type":"sap.ui.integration.Extension","DeprecatedInfo":{"isDeprecated":false}},"actionDefinitions":{"method":"#getActionDefinitions,destroyActionDefinitions,insertActionDefinition,addActionDefinition,removeActionDefinition,indexOfActionDefinition,removeAllActionDefinitions","Deprecated":false,"Experimental":true,"multiple":"true","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.util.SkeletonCard#actionDefinitions","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"sap.ui.integration.ActionDefinition","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"useProgressiveDisclosure":{"method":"#getUseProgressiveDisclosure,setUseProgressiveDisclosure","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"If the card should change depending on its size. This property is temporary. Should be used to enable the feature for cards where it is needed.","fullName":"sap.ui.integration.util.SkeletonCard#useProgressiveDisclosure","helpDescription":"If the card should change depending on its size. This property is temporary. Should be used to enable the feature for cards where it is needed.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.SkeletonCard#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.util.SkeletonCard#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"interactive":{"method":"#getInteractive,setInteractive","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Defines if the card is interactive.","fullName":"sap.ui.integration.util.SkeletonCard#interactive","helpDescription":"Defines if the card is interactive.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"semanticRole":{"method":"#getSemanticRole,setSemanticRole","Deprecated":false,"defaultValue":"Region","Experimental":false,"description":"Defines the role of the Card Header.","fullName":"sap.ui.integration.util.SkeletonCard#semanticRole","helpDescription":"Defines the role of the Card Header.","type":"sap.f.cards.SemanticRole","DeprecatedInfo":{"isDeprecated":false}},"displayVariant":{"method":"#getDisplayVariant,setDisplayVariant","Deprecated":false,"defaultValue":"Standard","Experimental":true,"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.util.SkeletonCard#displayVariant","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"sap.ui.integration.CardDisplayVariant","DeprecatedInfo":{"isDeprecated":false}},"previewMode":{"method":"#getPreviewMode,setPreviewMode","Deprecated":false,"defaultValue":"Off","Experimental":false,"description":"Preview mode of the <code>Card<\/code>. Helpful in scenarios when the end user is choosing or configuring a card. <ul> <li>When set to \"MockData\", the card data is loaded, using a data request, as configured in the \"data/mockData\" in the manifest. If such configuration is missing, then the Abstract mode will be used instead.<\/li> <li>When set to \"Abstract\", the card shows abstract placeholder without loading data.<\/li> <li>When set to \"Off\", the card displays real data.<\/li> <\/ul>","fullName":"sap.ui.integration.util.SkeletonCard#previewMode","helpDescription":"Preview mode of the <code>Card<\/code>. Helpful in scenarios when the end user is choosing or configuring a card. <ul> <li>When set to \"MockData\", the card data is loaded, using a data request, as configured in the \"data/mockData\" in the manifest. If such configuration is missing, then the Abstract mode will be used instead.<\/li> <li>When set to \"Abstract\", the card shows abstract placeholder without loading data.<\/li> <li>When set to \"Off\", the card displays real data.<\/li> <\/ul>","type":"sap.ui.integration.CardPreviewMode","DeprecatedInfo":{"isDeprecated":false}},"referenceId":{"method":"#getReferenceId,setReferenceId","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"description":"Optional property which can be used by the host to reference the card. It will be forwarded to any children cards. Does not affect the card behavior.","fullName":"sap.ui.integration.util.SkeletonCard#referenceId","helpDescription":"Optional property which can be used by the host to reference the card. It will be forwarded to any children cards. Does not affect the card behavior.","type":"string","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.util.SkeletonCard#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.util.SkeletonCard#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"manifestChanges":{"method":"#getManifestChanges,setManifestChanges","Deprecated":false,"Experimental":true,"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.util.SkeletonCard#manifestChanges","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"object[]","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.util.SkeletonCard#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"design":{"method":"#getDesign,setDesign","Deprecated":false,"defaultValue":"Solid","Experimental":false,"description":"Defines the design of the <code>Card<\/code>.","fullName":"sap.ui.integration.util.SkeletonCard#design","helpDescription":"Defines the design of the <code>Card<\/code>.","type":"sap.ui.integration.CardDesign","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.util.SkeletonCard#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"showCloseButton":{"method":"#getShowCloseButton,setShowCloseButton","Deprecated":false,"defaultValue":"false","Experimental":false,"fullName":"sap.ui.integration.util.SkeletonCard#showCloseButton","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.util.SkeletonCard#id","type":"sap.ui.core.ID"},"height":{"method":"#getHeight,setHeight","Deprecated":false,"defaultValue":"\"auto\"","Experimental":false,"description":"Defines the height of the card.","fullName":"sap.ui.integration.util.SkeletonCard#height","helpDescription":"Defines the height of the card.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.SkeletonCard#bindingContexts","type":"object"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.util.SkeletonCard#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.util.SkeletonCard#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"manifest":{"method":"#getManifest,setManifest","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"description":"The URL of the manifest or an object.","fullName":"sap.ui.integration.util.SkeletonCard#manifest","helpDescription":"The URL of the manifest or an object.","type":"any","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.util.SkeletonCard#metadataContexts","type":"object"},"dataMode":{"method":"#getDataMode,setDataMode","Deprecated":false,"defaultValue":"Auto","Experimental":false,"description":"Defines the state of the <code>Card<\/code>. When set to <code>Inactive<\/code>, the <code>Card<\/code> doesn't make requests.","fullName":"sap.ui.integration.util.SkeletonCard#dataMode","helpDescription":"Defines the state of the <code>Card<\/code>. When set to <code>Inactive<\/code>, the <code>Card<\/code> doesn't make requests.","type":"sap.ui.integration.CardDataMode","DeprecatedInfo":{"isDeprecated":false}},"baseUrl":{"method":"#getBaseUrl,setBaseUrl","Deprecated":false,"Experimental":false,"description":"Defines the base URL of the card manifest. It should be used when manifest property is an object instead of a URL. If both manifest URL and base URL are defined - the base URL will be used for loading dependencies. If both manifest URL and base URL are not defined - relative resources might not be loaded correctly.","fullName":"sap.ui.integration.util.SkeletonCard#baseUrl","helpDescription":"Defines the base URL of the card manifest. It should be used when manifest property is an object instead of a URL. If both manifest URL and base URL are defined - the base URL will be used for loading dependencies. If both manifest URL and base URL are not defined - relative resources might not be loaded correctly.","type":"sap.ui.core.URI","DeprecatedInfo":{"isDeprecated":false}},"width":{"method":"#getWidth,setWidth","Deprecated":false,"defaultValue":"\"100%\"","Experimental":false,"description":"Defines the width of the card.","fullName":"sap.ui.integration.util.SkeletonCard#width","helpDescription":"Defines the width of the card.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"parameters":{"method":"#getParameters,setParameters","Deprecated":false,"Experimental":true,"description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.util.SkeletonCard#parameters","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"object","DeprecatedInfo":{"isDeprecated":false}},"useMockData":{"method":"#getUseMockData,setUseMockData","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.112 Use <code>previewMode<\/code> instead.<br>Defines if the card should be displayed with mock data. To be used with component cards.","fullName":"sap.ui.integration.util.SkeletonCard#useMockData","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.112 Use <code>previewMode<\/code> instead.<br>Defines if the card should be displayed with mock data. To be used with component cards.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"Use <code>previewMode<\/code> instead.","since":"1.112"}}},"events":{"manifestApplied":{"method":"sap.ui.integration.util.SkeletonCard#event:manifestApplied","Deprecated":false,"Experimental":false,"name":"manifestApplied","description":"Fired when card utilities (like <code>DataProviderFactory<\/code>) and the card elements (like header) are created and initialized.\n\nNote: The card's content may not be available yet because it may depend on other resources to load.","fullName":"sap.ui.integration.util.SkeletonCard#manifestApplied","helpDescription":"Fired when card utilities (like <code>DataProviderFactory<\/code>) and the card elements (like header) are created and initialized.\n\nNote: The card's content may not be available yet because it may depend on other resources to load.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configurationChange":{"method":"sap.ui.integration.util.SkeletonCard#event:configurationChange","Deprecated":false,"Experimental":false,"name":"configurationChange","description":"Fired when some configuration settings are changed as a result of user interaction. For example - filter value is changed.","fullName":"sap.ui.integration.util.SkeletonCard#configurationChange","helpDescription":"Fired when some configuration settings are changed as a result of user interaction. For example - filter value is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.util.SkeletonCard#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.util.SkeletonCard#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.util.SkeletonCard#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.util.SkeletonCard#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"error":{"method":"sap.ui.integration.util.DataProvider#event:error","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.message":"type: string, description: The error message.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"error","description":"Event fired when an error is thrown.","fullName":"sap.ui.integration.util.DataProvider#error","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationError":{"method":"sap.ui.integration.util.SkeletonCard#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.util.SkeletonCard#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.util.SkeletonCard#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.util.SkeletonCard#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.util.SkeletonCard#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.util.SkeletonCard#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"action":{"method":"sap.ui.integration.util.SkeletonCard#event:action","Deprecated":false,"Experimental":true,"name":"action","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.util.SkeletonCard#action","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"press":{"method":"sap.ui.integration.util.SkeletonCard#event:press","Deprecated":false,"Experimental":false,"name":"press","description":"Fired when action is added on card level. Note: Can be used only if <code>semanticRole<\/code> is <code>sap.f.cards.SemanticRole.ListItem<\/code>.","fullName":"sap.ui.integration.util.SkeletonCard#press","helpDescription":"Fired when action is added on card level. Note: Can be used only if <code>semanticRole<\/code> is <code>sap.f.cards.SemanticRole.ListItem<\/code>.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"stateChanged":{"method":"sap.ui.integration.util.SkeletonCard#event:stateChanged","Deprecated":false,"Experimental":false,"name":"stateChanged","description":"Fired when the state of the card is changed. For example - the card is ready, new page is selected, a filter is changed or data is refreshed.","fullName":"sap.ui.integration.util.SkeletonCard#stateChanged","helpDescription":"Fired when the state of the card is changed. For example - the card is ready, new page is selected, a filter is changed or data is refreshed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.util.SkeletonCard#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.util.SkeletonCard#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"manifestReady":{"method":"sap.ui.integration.util.SkeletonCard#event:manifestReady","Deprecated":false,"Experimental":false,"name":"manifestReady","description":"Fired when the manifest is loaded.","fullName":"sap.ui.integration.util.SkeletonCard#manifestReady","helpDescription":"Fired when the manifest is loaded.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/textAreaEditor/TextAreaEditor","description":"Constructor for a new <code>TextAreaEditor<\/code>. This allows to set a code editor or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.TextArea}.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>type<\/code><\/td> <td><code>string<\/code><\/td> <td><code>json<\/code><\/td> <td>The type of the code in the editor used for syntax highlighting<\/td> <\/tr> <tr> <td><code>allowBindings<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether binding strings can be set instead of selecting items<\/td> <\/tr> <tr> <td><code>maxLength<\/code><\/td> <td><code>number<\/code><\/td> <td><\/td> <td>Maximum number of characters<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/cardEditor/propertyEditor/filtersEditor/FiltersEditor","description":"Constructor for a new <code>FiltersEditor<\/code>.\n\n<h3>Configuration<\/h3>\n\nConfiguration is inherited from {@link sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor}\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowedTypes<\/code><\/td> <td><code>string[]<\/code><\/td> <td><code>[]<\/code><\/td> <td>Allowed filter types<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#constructor sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor} can be used.","extend":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.filtersEditor.FiltersEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor.propertyEditor":{"filetype":"library","types":["sap.ui.integration.designtime.baseEditor.propertyEditor.PropertyEditorFactory"],"controls":["sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor"],"typesWithClasses":["sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.codeEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.multiSelectEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.objectArrayEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.separatorEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor","sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor"],"name":"sap.ui.integration.designtime.baseEditor.propertyEditor","version":"1.132.1"},"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/dateTimeEditor/DateTimeEditor","description":"Constructor for a new <code>DateTimeEditor<\/code>. This allows to set datetime values for a specified property of a JSON object. The editor is rendered as a {@link sap.m.DateTimePicker}.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.util.CsrfTokenHandler":{"associations":{},"filetype":"class","Experimental":false,"module":"sap/ui/integration/util/CsrfTokenHandler","description":"Fetches and provides CSRF tokens for data requests. Tokens are shared between cards per user session.","constructorDescription":"Constructor for a new <code>CsrfTokenHandler<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.base.Object#constructor sap.ui.base.Object} can be used.","extend":"sap.ui.base.Object","Deprecated":false,"helpDescription":"Fetches and provides CSRF tokens for data requests. Tokens are shared between cards per user session.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/listEditor/ListEditor","description":"Constructor for a new <code>ListEditor<\/code>. This editor allows to add items to and remove items from string arrays. The editor is rendered as a {@link sap.m.MultiInput}.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.baseEditor":{"filetype":"library","types":["sap.ui.integration.designtime.baseEditor.validator","sap.ui.integration.designtime.baseEditor.layout"],"controls":["sap.ui.integration.designtime.baseEditor.BaseEditor","sap.ui.integration.designtime.baseEditor.PropertyEditor","sap.ui.integration.designtime.baseEditor.PropertyEditors"],"typesWithClasses":["sap.ui.integration.designtime.baseEditor.propertyEditor"],"name":"sap.ui.integration.designtime.baseEditor","version":"1.132.1"},"sap.ui.integration.designtime.cardEditor":{"filetype":"library","types":["sap.ui.integration.designtime.cardEditor.propertyEditor"],"name":"sap.ui.integration.designtime.cardEditor","version":"1.132.1"},"sap.ui.integration.editor.fields.fragment.Controller":{"extend":"sap.ui.core.mvc.Controller","associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/ui/integration/editor/fields/fragment/Controller","description":"Visualization Fragment Control","helpDescription":"Visualization Fragment Control","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{"translationPopoverOpened":{"method":"sap.ui.integration.editor.fields.StringField#event:translationPopoverOpened","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"translationPopoverOpened","description":"<strong style=\"color: red;\">Experimental! <\/strong>","fullName":"sap.ui.integration.editor.fields.StringField#translationPopoverOpened","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"}}},"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/baseEditor/propertyEditor/jsonEditor/JsonEditor","description":"Constructor for a new <code>JsonEditor<\/code>. This allows to set json text values for a specified property of a JSON object. The editor is rendered as a {@link sap.ui.codeeditor.CodeEditor} inside a {@link sap.m.Dialog}. To get notified about changes made with the editor, you can use the <code>attachValueChange<\/code> method, which passes the current property state as an object to the provided callback function when the user saves changes in the dialog.","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/integration/designtime/cardEditor/propertyEditor/complexMapEditor/ComplexMapEditor","description":"Constructor for a new <code>ComplexMapEditor<\/code> for editing key-value pairs with object values.\n\n<h3>Configuration<\/h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option<\/th> <th>Type<\/th> <th>Default<\/th> <th>Description<\/th> <\/tr> <tr> <td><code>allowKeyChange<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to render an editor for the key attribute of map entries<\/td> <\/tr> <tr> <td><code>allowAddAndRemove<\/code><\/td> <td><code>boolean<\/code><\/td> <td><code>true<\/code><\/td> <td>Whether to allow adding and removing map entries<\/td> <\/tr> <tr> <td><code>keyLabel<\/code><\/td> <td><code>string<\/code><\/td> <td><code>\"Key\"<\/code><\/td> <td>The label to show for the <code>key<\/code> field. Default is the localized string \"Key\".<\/td> <\/tr> <\/table>","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor#constructor sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor} can be used.","extend":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"_label":{"method":"#get_label,destroy_label,set_label","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#_label","type":"sap.m.Label","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,setContent","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#content","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"renderLabel":{"method":"#getRenderLabel,setRenderLabel","Deprecated":false,"defaultValue":"true","Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#renderLabel","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#id","type":"sap.ui.core.ID"},"value":{"method":"#getValue,setValue","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#value","type":"any","DeprecatedInfo":{"isDeprecated":false}},"config":{"method":"#getConfig,setConfig","Deprecated":false,"Experimental":false,"fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#config","type":"object","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#bindingContexts","type":"object"}},"events":{"init":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:init","Deprecated":false,"Experimental":false,"name":"init","description":"Fires when init is finished","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#init","helpDescription":"Fires when init is finished","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"designtimeMetadataChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:designtimeMetadataChange","Deprecated":false,"Experimental":false,"name":"designtimeMetadataChange","description":"Fires when designtime metadata is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#designtimeMetadataChange","helpDescription":"Fires when designtime metadata is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"valueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:valueChange","Deprecated":false,"Experimental":false,"name":"valueChange","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.path":"type:string","oControlEvent.getParameters.value":"type:any","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.previousValue":"type:any"},"description":"Fires when value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#valueChange","helpDescription":"Fires when value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"ready":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:ready","Deprecated":false,"Experimental":false,"name":"ready","description":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#ready","helpDescription":"Fired when the editor fragment was loaded and the <code>asyncInit<\/code> method was executed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationErrorChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:validationErrorChange","Deprecated":false,"Experimental":false,"name":"validationErrorChange","description":"Fires when the error state of the editor changes","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#validationErrorChange","helpDescription":"Fires when the error state of the editor changes","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeValueChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:beforeValueChange","Deprecated":false,"Experimental":false,"name":"beforeValueChange","description":"Fires before value is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#beforeValueChange","helpDescription":"Fires before value is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"configChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:configChange","Deprecated":false,"Experimental":false,"name":"configChange","description":"Fires when config is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#configChange","helpDescription":"Fires when config is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fragmentChange":{"method":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#event:fragmentChange","Deprecated":false,"Experimental":false,"name":"fragmentChange","description":"Fires when fragment is changed","fullName":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor#fragmentChange","helpDescription":"Fires when fragment is changed","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}}},"!version":"1.21.1"}