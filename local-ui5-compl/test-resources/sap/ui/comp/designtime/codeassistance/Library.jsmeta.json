{"!name":"sap.ui.comp","!version":"1.21.1","!define":{"sap.ui.comp.smartfield.ControlProposal":{"!description":"Proposes a control to be rendered. The smart field may ignore the proposal.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.ControlProposal.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setObjectStatus":{"!description":"Sets the aggregated {@link #getObjectStatus objectStatus}.","!static":false,"!category":"function","!type":"fn(oObjectStatus: sap.ui.comp.smartfield.ObjectStatus) -> sap.ui.comp.smartfield.ControlProposal","parameters":{"oObjectStatus":"type: sap.ui.comp.smartfield.ObjectStatus, description: The objectStatus to set"}},"!proto":"sap.ui.core.Element","!category":"class","setControlType":{"!description":"Sets a new value for property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some extent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sControlType?: sap.ui.comp.smartfield.ControlProposalType) -> sap.ui.comp.smartfield.ControlProposal","parameters":{"sControlType":"type: sap.ui.comp.smartfield.ControlProposalType, description: New value for property <code>controlType<\/code>"}},"getObjectStatus":{"!description":"Gets content of aggregation {@link #getObjectStatus objectStatus}.\n\nOptional definition to further qualify how an object status control should be rendered.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ObjectStatus"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ControlProposal with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>smartfield/ControlProposal<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getControlType controlType} : sap.ui.comp.smartfield.ControlProposalType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getObjectStatus objectStatus} : sap.ui.comp.smartfield.ObjectStatus<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfield/ControlProposal","!helpDescription":"Proposes a control to be rendered. The smart field may ignore the proposal.","getControlType":{"!description":"Gets current value of property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some extent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposalType"},"destroyObjectStatus":{"!description":"Destroys the objectStatus in the aggregation {@link #getObjectStatus objectStatus}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposal"}},"sap.ui.comp.smartform.GroupElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.GroupElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.GroupElement"},"sap.ui.comp.smartform.Layout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Layout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.Layout"},"sap.ui.comp.smartmicrochart.SmartBulletMicroChart":{"!description":"The SmartBulletMicroChart control creates a <code>sap.suite.ui.microchart.BulletMicroChart<\/code> based on OData metadata and the configuration specified by <code>mSettings<\/code>. The entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and annotation information from the given default OData model. Based on this, the BulletMicroChart UI is created. <br> <b><i>Note:<\/i><\/b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartBulletMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smartmicrochart.SmartBulletMicroChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartBulletMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartBulletMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase}\ncan be used as well.","!module":"sap/ui/comp/smartmicrochart/SmartBulletMicroChart","getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"The SmartBulletMicroChart control creates a <code>sap.suite.ui.microchart.BulletMicroChart<\/code> based on OData metadata and the configuration specified by <code>mSettings<\/code>. The entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and annotation information from the given default OData model. Based on this, the BulletMicroChart UI is created. <br> <b><i>Note:<\/i><\/b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class"},"sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart":{"!description":"The SmartHarveyBallMicroChart control creates a {@link sap.suite.ui.microchart.HarveyBallMicroChart} based on OData metadata and the configuration specified in the <code>mSettings<\/code> of the {@link sap.ui.base.ManagedObject}. <br>The <code>entitySet<\/code> property is required. The entity set is used to fetch OData metadata and annotation information from the provided default OData model. The chart's UI is created based on this data. <br> <b><i>Note:<\/i><\/b><br> Most of the properties are not dynamic and cannot be changed once the control has been initialized.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, the chart is automatically bound using the <code>chartBindingPath<\/code> property, if it is specified.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SmartHarveyBallMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFreeText freeText} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase}\ncan be used as well.","!module":"sap/ui/comp/smartmicrochart/SmartHarveyBallMicroChart","getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, the chart is automatically bound using the <code>chartBindingPath<\/code> property, if it is specified.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"The SmartHarveyBallMicroChart control creates a {@link sap.suite.ui.microchart.HarveyBallMicroChart} based on OData metadata and the configuration specified in the <code>mSettings<\/code> of the {@link sap.ui.base.ManagedObject}. <br>The <code>entitySet<\/code> property is required. The entity set is used to fetch OData metadata and annotation information from the provided default OData model. The chart's UI is created based on this data. <br> <b><i>Note:<\/i><\/b><br> Most of the properties are not dynamic and cannot be changed once the control has been initialized.","getFreeText":{"!description":"ID of the element which is the current target of the association {@link #getFreeText freeText}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class","setFreeText":{"!description":"Sets the associated {@link #getFreeText freeText}.","!static":false,"!category":"function","!type":"fn(oFreeText: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart","parameters":{"oFreeText":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this freeText association; alternatively, an element instance may be given"}}},"sap.ui.comp.config.ControlConfigurationBase":{"!description":"An abstract class for configuration of filters in the smart filter bar or in the smart table","extend":{"!description":"Creates a new subclass of class sap.ui.comp.config.ControlConfigurationBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getConditionType":{"!description":"Gets current value of property {@link #getConditionType conditionType}.\n\nThe <code>conditionType<\/code> class name to be used for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type","!static":false,"!category":"function","!type":"fn() -> Object"},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nThe <code>key<\/code> property corresponds to the field name from the OData service $metadata document.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.config.ControlConfigurationBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ControlConfigurationBase<\/code>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getConditionType conditionType} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/config/ControlConfigurationBase","!helpDescription":"An abstract class for configuration of filters in the smart filter bar or in the smart table","setConditionType":{"!description":"Sets a new value for property {@link #getConditionType conditionType}.\n\nThe <code>conditionType<\/code> class name to be used for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oConditionType?: Object) -> sap.ui.comp.config.ControlConfigurationBase","parameters":{"oConditionType":"type: any, description: New value for property <code>conditionType<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nThe <code>key<\/code> property corresponds to the field name from the OData service $metadata document.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey?: String) -> sap.ui.comp.config.ControlConfigurationBase","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}}},"sap.ui.comp.smartchart":{"persistencyKey":{"!description":"Key used to access personalization data.","!category":"enum","!type":"String"},"showZoomButtons":{"!description":"Controls the visibility of the Zoom In and Zoom Out buttons.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showLegendButton":{"!description":"Controls the visibility of the Navigation button","!category":"enum","!type":"Boolean"},"showDrillBreadcrumbs":{"!description":"Controls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true<\/code>, the toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.","!category":"enum","!type":"Boolean"},"alignContent":{"!description":"Determines the layout behavior of container lines when there's extra space along the cross-axis.","!category":"enum","!type":"sap.m.FlexAlignContent"},"showToolbar":{"!description":"Controls the visibility of the toolbar.","!category":"enum","!type":"Boolean"},"ignoredChartTypes":{"!description":"CSV of fields that is not shown in the list of available chart types.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"useTooltip":{"!description":"Specifies weather an instance of {@link sap.viz.ui5.controls.VizTooltip} or {@link sap.viz.ui5.controls.Popover} is used. If set to <code>true<\/code>, a tooltip will be displayed, a popover otherwise.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"ignoreFromPersonalisation":{"!description":"CSV of fields that is not shown in the personalization dialog.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"activateTimeSeries":{"!description":"Enables the use of timeseries on the inner chart when corresponding annotation is given\n\n<b>Note:<\/b> This timeseries is only supported for the following {@link sap.chart.TimeUnitType TimeUnitTypes} and the following chart types {@link sap.viz.ui5.controls.VizFrame#getVizType}.","!category":"enum","!type":"Boolean"},"showDimensionsTitle":{"!description":"Controls the visibility of the title in the dimension area of the chart.","!category":"enum","!type":"Boolean"},"height":{"!description":"The height of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"showDrillButtons":{"!description":"Controls the visibility of the Drill Up and Drill Down buttons.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"useListForChartTypeSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Setting the property to <code>false<\/code> will have no effect on the visualization of chart type selection. <code>SmartChart<\/code> will always show a list of chart types.<br>Controls the visualization for chart type selection. If set to <code>true<\/code>, the list of available chart types will be displayed. If set to <code>false<\/code> and there are three or fewer available chart types, the chart types will be displayed as separate buttons in the toolbar. If there are more than three chart types, a list will be shown.","!category":"enum","!type":"Boolean"},"alignItems":{"!description":"Determines the layout behavior of items along the cross-axis.","!category":"enum","!type":"sap.m.FlexAlignItems"},"entitySet":{"!description":"The entity set name from which to fetch data and generate the columns.<br> <b>Note<\/b> This is not a dynamic property.","!category":"enum","!type":"String"},"smartFilterId":{"!description":"ID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the closest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.","!category":"enum","!type":"String"},"SmartChart":"sap.ui.comp.smartchart.SmartChart_obj","justifyContent":{"!description":"Determines the layout behavior along the main axis.","!category":"enum","!type":"sap.m.FlexJustifyContent"},"showChartTypeSelectionButton":{"!description":"Controls the visibility of the chart type selection button.","!category":"enum","!type":"Boolean"},"header":{"!description":"Specifies header text that is shown in the chart.","!category":"enum","!type":"String"},"showDownloadButton":{"!description":"Controls the visibility of the chart download button.","!category":"enum","!type":"Boolean"},"selectionMode":{"!description":"Chart selection mode. Supported values are {@link sap.ui.comp.smartchart.SelectionMode.Single} or {@link sap.ui.comp.smartchart.SelectionMode.Multi}, case insensitive, always return in upper case. Unsupported values will be ignored.","!category":"enum","!type":"sap.ui.comp.smartchart.SelectionMode"},"SelectionMode":"sap.ui.comp.smartchart.SelectionMode","fitContainer":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.","!category":"enum","!type":"Boolean"},"displayInline":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.","!category":"enum","!type":"Boolean"},"!category":"namespace","notAssignedText":{"!description":"Text that is shown for values of an empty string. <b>Note:<\/b> The property does not change the behavior for charts of type <code>timeseries<\/code>. <b>Note:<\/b> Can only be changed in the XML/JS view. It cannot be changed once the control has been initialized.","!category":"enum","!type":"String"},"headerStyle":{"!description":"Defines style of the header.<br> For more information, see {@link sap.m.Title#setTitle}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"useVariantManagement":{"!description":"If set to <code>true<\/code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.","!category":"enum","!type":"Boolean"},"ignoredFields":{"!description":"CSV of fields that must be ignored in the OData metadata by the SmartChart control.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"chartBindingPath":{"!description":"Specifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)","!category":"enum","!type":"String"},"renderType":{"!description":"Determines whether the layout is rendered as a series of divs or as an unordered list (ul).<br> <br> <b>Note:<\/b> We recommend to use <code>Bare<\/code> in most cases to avoid layout issues due to browser inconsistencies.","!category":"enum","!type":"sap.m.FlexRendertype"},"direction":{"!description":"Determines the direction of the layout of child elements.","!category":"enum","!type":"sap.m.FlexDirection"},"showChartTooltip":{"!description":"Controls the visibility of the chart tooltip. If set to <code>true <\/code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.","!category":"enum","!type":"Boolean"},"requestAtLeastFields":{"!description":"CSV of fields that must be always requested by the backend system.<br> This property is mainly meant to be used if there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters. Also, setting this property during runtime, will delete the current drill-stack and lead to a loss of the drill history.","!category":"enum","!type":"String"},"showMeasuresTitle":{"!description":"Controls the visibility of the title in the measure area of the chart.","!category":"enum","!type":"Boolean"},"showVariantManagement":{"!description":"Controls the visibility of the Variant Management.","!category":"enum","!type":"Boolean"},"legendVisible":{"!description":"Set chart's legend properties.","!category":"enum","!type":"Boolean"},"showFullScreenButton":{"!description":"Controls the visibility of the FullScreen button.","!category":"enum","!type":"Boolean"},"toolbarStyle":{"!description":"Defines the visual style of the smart charts <code>Toolbar<\/code>. <b>Note:<\/b> The visual styles are theme-dependent.","!category":"enum","!type":"sap.m.ToolbarStyle"},"headerLevel":{"!description":"Semantic level of the header.<br> For more information, see {@link sap.m.Title#setLevel}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"enableAutoBinding":{"!description":"If set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property. This happens right after the <code>initialise<\/code> event has been fired.","!category":"enum","!type":"Boolean"},"showSemanticNavigationButton":{"!description":"Controls the visibility of the Navigation button","!category":"enum","!type":"Boolean"},"useChartPersonalisation":{"!description":"If set to <code>true<\/code>, personalized chart settings are defined. If you want to persist the chart personalization, you need to specify the persistencyKey property.","!category":"enum","!type":"Boolean"},"width":{"!description":"The width of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"chartType":{"!description":"Specifies the type of chart to be created by the SmartChart control.","!category":"enum","!type":"String"},"noData":{"!description":"Defines the custom text that will be displayed in case no data is found for the current binding.","!category":"enum","!type":"String"},"currentVariantId":{"!description":"Retrieves or applies the current variant.","!category":"enum","!type":"String"},"wrap":{"!description":"Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.","!category":"enum","!type":"sap.m.FlexWrap"},"backgroundDesign":{"!description":"Defines the background style of the <code>sap.m.FlexBox<\/code>.","!category":"enum","!type":"sap.m.BackgroundDesign"},"showDetailsButton":{"!description":"Controls the visibility of the Details button. If set to <code>true<\/code>, the datapoint tooltip will be disabled as the information of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smarttable":{"persistencyKey":{"!description":"Key used to access personalization data.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showTablePersonalisation":{"!description":"The showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation button.","!category":"enum","!type":"Boolean"},"initiallyVisibleFields":{"!description":"Comma-separated value of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br> This property is mainly meant to be used when no LineItem annotation exists.<br> If you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and finally based on this property.<br> <b>Note:<\/b><br> <ul> <li>If both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<\/li> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!category":"enum","!type":"String"},"alignContent":{"!description":"Determines the layout behavior of container lines when there's extra space along the cross-axis.","!category":"enum","!type":"sap.m.FlexAlignContent"},"useColumnLabelsAsTooltips":{"!description":"If no tooltips have been provided, neither by the <code>QuickInfo<\/code> annotation nor for custom columns directly via property, the column label will automatically be applied as a tooltip for the column.\n\nTo enable this mechanism for custom columns, a <code>sap.m.Label<\/code> or <code>sap.m.Text<\/code> must be used as header label. Custom tooltips are not affected by this functionality when they are provided on the column header label for tables of type <code>ResponsiveTable<\/code> and on the column for other table types.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"ignoreFromPersonalisation":{"!description":"Comma-separated value of fields that is not shown in the personalization dialog.<br> This property must only be used for use cases where a technical field/column is required to fetch some data from the backend but is hidden in the table personalization and on the UI.\n\n<b>Note:<\/b><br> <ul> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>Visible fields/columns cannot be included in this property as this is not supported by the <code>SmartTable<\/code> control.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!category":"enum","!type":"String"},"height":{"!description":"The height of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"useTablePersonalisation":{"!description":"The <code>useTablePersonalisation<\/code> attribute can be set to true or false depending on whether you want to define personalized table settings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"alignItems":{"!description":"Determines the layout behavior of items along the cross-axis.","!category":"enum","!type":"sap.m.FlexAlignItems"},"entitySet":{"!description":"The entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property.\n\n<b>Note:<\/b> It is not allowed to have one of the following strings as field names for your OData entity: <ul> <li><code>btnEditToggle<\/code><\/li> <li><code>btnExcelExport<\/code><\/li> <li><code>btnFullScreen<\/code><\/li> <li><code>btnPersonalisation<\/code><\/li> <li><code>header<\/code><\/li> <li><code>infoToolbarText<\/code><\/li> <li><code>persoController<\/code><\/li> <li><code>toolbarSeperator<\/code><\/li> <li><code>toolbarSpacer<\/code><\/li> <li><code>ui5table<\/code><\/li> <li><code>variant<\/code><\/li> <\/ul>\n\nThis is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"String"},"smartFilterId":{"!description":"ID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest parent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"String"},"enablePaste":{"!description":"Determines whether the Paste button is enabled.","!category":"enum","!type":"Boolean"},"justifyContent":{"!description":"Determines the layout behavior along the main axis.","!category":"enum","!type":"sap.m.FlexJustifyContent"},"SmartTable":"sap.ui.comp.smarttable.SmartTable_obj","showRowCount":{"!description":"The number of rows is shown along with the header text if the property <code>showRowCount<\/code> is set to <code>true<\/code>.\n\n<b>Note:<\/b><br> <ul> <li>To improve your application's performance, activate the inline count for OData bindings to avoid sending dedicated OData requests.<\/li> <li>If no stable overall count can be retrieved from the binding, the count will not be displayed. This is currently the case for TreeBinding or if no count is requested by the binding.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"header":{"!description":"Specifies header text that is shown in table","!category":"enum","!type":"String"},"customizeConfig":{"!description":"Provides customization to the columns/cell templates generated by the <code>SmartTable<\/code> control.\n\nList of supported settings for the <code>customizeConfig<\/code> property: <ul> <li><code>textInEditModeSource<\/code>: For more information, see {@link sap.ui.comp.smartfield.SmartField#setTextInEditModeSource}<\/li> <li><code>insertIgnoreRestrictions<\/code>: The <code>customData<\/code> setting for the <code>sap.ui.comp.smartfield.SmartField<\/code> control. Supported as of version 1.103.<\/li> <li><code>autoColumnWidth<\/code>: This property can be used to influence the column width calculation for columns generated by the <code>SmartTable<\/code> control itself. The supported configuration settings are <code>truncateLabel<\/code>, <code>min<\/code>, <code>max<\/code>, and <code>gap<\/code>. Supported as of version 1.108. For more information, see {@link sap.ui.comp.smarttable.SmartTable#getEnableAutoColumnWidth}.<\/li> <li><code>clientSideMandatoryCheck<\/code>: For more information, see {@link sap.ui.comp.smartfield.SmartField#setClientSideMandatoryCheck}. Supported as of version 1.111<\/li> <\/ul> <br /> <i>Examples for the <code>customizeConfig<\/code> property to change the <code>textInEditModeSource<\/code> for the default <code>smartField<\/code><\/i> <pre>\n&lt;!-- Sets the <code>textInEditModeSource<\/code> property of all the <code>SmartField<\/code> controls to <code<>ValueList<\/code> --&gt;\n&lt;SmartTable customizeConfig=\"{'textInEditModeSource': {'*': 'ValueList'}}\" &gt;\n<\/pre> <pre>\n&lt;!-- Sets the <code>textInEditModeSource<\/code> property of the <code>smartField<\/code> with path \"Bukrs\" to <code>NavigationProperty<\/code> and\nothers to <code<>ValueList<\/code>  --&gt;\n&lt;SmartTable customizeConfig=\"{'textInEditModeSource': {'*': 'ValueList','Bukrs':'NavigationProperty'}}\" &gt;\n<\/pre> <pre>\n&lt;!-- Sets the <code>autoColumnWidth<\/code> property of all the columns --&gt;\n&lt;SmartTable customizeConfig=\"{'autoColumnWidth': {'*': {'min': 5, 'max': 10, 'gap': 2, 'truncateLabel': false}}}\" &gt;\n<\/pre>","!category":"enum","!type":"Object"},"fitContainer":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.","!category":"enum","!type":"Boolean"},"enableCustomFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 After personalization dialog has been introduced in SmartTable the property <code>enableCustomFilter<\/code> does not make sense. When setting the property to <code>false<\/code>, the entered custom filter value will not be shown in personalization dialog and will also not be persisted in variant management. The custom filter will also be overwritten when rebindTable is called on the SmartTable.<br>Can be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When pressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.","!category":"enum","!type":"Boolean"},"displayInline":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.","!category":"enum","!type":"Boolean"},"enableCopy":{"!description":"Enables the copy-to-clipboard functionality of the <code>SmartTable<\/code> control.\n\nWhen set to <code>true<\/code>, a {@link sap.m.plugins.CopyProvider} and a {@link sap.m.plugins.CellSelector} are automatically created and added to the <code>SmartTable<\/code> control if a custom <code>CopyProvider<\/code> or <code>CellSelector<\/code> are not already used by the application. When set to <code>false<\/code>, these created code>CopyProvider<\/code> and <code>CellSelector<\/code> plugins are removed again.\n\n<b>Note:<\/b><br> We recommend that you set the <code>enableCopy<\/code> property to <code>false<\/code> in the following cases: <ul> <li>The copy-to-clipboard functionality is not desired<\/li> <li>Plugins with property settings other than the default ones should be used<\/li> <li>Only one of the plugins should be used<\/li> <li>The functionality conflicts with the concrete application scenario, for example, custom columns with special content<\/li> <li>The functionality conflicts with the known restrictions of the <code>CopyProvider<\/code> and <code>CellSelector<\/code> plugins<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"useOnlyOneSolidToolbar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 This property has no effect<br>If set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid style.","!category":"enum","!type":"Boolean"},"!category":"namespace","headerStyle":{"!description":"Defines style of the header. For more information, see {@link sap.m.Title#setTitle}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"detailsButtonSetting":{"!description":"Defines which columns should be hidden instead of moved into the pop-in area depending on their importance. See {@link sap.m.Column#getImportance} and {@link sap.m.Table#getHiddenInPopin} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton=\"true\"<\/code>. If no priority is given, the default configuration of {@link sap.ui.comp.smarttable.SmartTable#getShowDetailsButton} is used. If this property is changed after the <code>SmartTable<\/code> has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.","!category":"enum","!type":"[sap.ui.core.Priority]"},"tableType":{"!description":"Specifies the type of table to be created in the SmartTable control.<br> <b>Note:<\/b><br> <ul> <li>If you add a table to the content of the SmartTable in the view, this property has no effect.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!category":"enum","!type":"sap.ui.comp.smarttable.TableType"},"useExportToExcel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.100 replaced by <code>enableExport<\/code> property.<br>Can be set to true or false depending on whether you want to export data to a spreadsheet application, for example Microsoft Excel.<br> <b>Note:<\/b><br> If <code>exportType<\/code> is <code>sap.ui.comp.smarttable.ExportType.GW<\/code>, any $expand parameters are removed when sending the request to generate the spreadsheet.<br> As of UI5 version 1.56: If <code>exportType<\/code> is <code>sap.ui.comp.smarttable.ExportType.UI5Client<\/code> and <code>TreeTable<\/code> is used, the <code>worksheet.hierarchyLevel<\/code> property (see {@link sap.ui.export.Spreadsheet}) is filled from the binding, if the relevant information is available there for exporting hierarchical data in the spreadsheet.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"useVariantManagement":{"!description":"The useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you need to specify the persistencyKey property.","!category":"enum","!type":"Boolean"},"enableExport":{"!description":"Enables the export of data from the <code>SmartTable<\/code> control to another file, for example, a spreadsheet. If <code>exportType<\/code> is <code>sap.ui.comp.smarttable.ExportType.GW<\/code>, any <code>$expand<\/code> parameters are removed when sending the request to generate the file.<br> To use the export functionality, the {@link sap.ui.export} library is required.","!category":"enum","!type":"Boolean"},"showPasteButton":{"!description":"Controls the visibility of the Paste button.","!category":"enum","!type":"Boolean"},"initialNoDataText":{"!description":"The text shown initially before the control is bound and initialized. The special values <code>$FILTERBAR<\/code> or <code>$NO_FILTERBAR<\/code> can be specified to make the <code>SmartTable<\/code> control show the initial text as if the <code>SmartFilterBar<\/code> control were associated with it. If nothing is specified, the default behavior is to show the initial text based on whether the <code>SmartFilterBar<\/code> control is actually associated with the <code>SmartTable<\/code> control.","!category":"enum","!type":"String"},"ignoredFields":{"!description":"Comma-separated value of fields that must be ignored in the OData metadata by the <code>SmartTable<\/code> control.<br> The <code>SmartTable<\/code> control will not create built-in columns for the fields defined by this property and will not offer these fields in table personalization.\n\n<b>Note:<\/b><br> <ul> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"demandPopin":{"!description":"The demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive table","!category":"enum","!type":"Boolean"},"useInfoToolbar":{"!description":"Shows an info toolbar.<br> Filters that are applied using the table personalization dialog are shown in the info toolbar.<br> <b>Note:<\/b><br> <ul> <li>The default value for the property is <code>Auto<\/code>, which means that the info toolbar is shown by default if table type is <code>ResponsiveTable<\/code>.<\/li> <li>The info toolbar is hidden if the property is set to <code>Off<\/code>.<\/li> <li>The info toolbar is visible if the property is set to <code>On<\/code>. Currently the info toolbar is only available for the table type <code>ResponsiveTable<\/code>.<\/li> <li>If multiple filters are applied to the same column, then the info toolbar contains the column name only once.<\/li> <li>In case there is a custom info toolbar used for the responsive table control, then the property must be set to <code>Off<\/code>. Otherwise, an error is logged in the browser console.<\/li> <\/ul>","!category":"enum","!type":"sap.ui.comp.smarttable.InfoToolbarBehavior"},"useDateRangeType":{"!description":"If set to <code>true<\/code>, all date fields in the Filter Panel of the settings dialog with filter restriction <code>interval<\/code> will be treated as <code>DateTimeRange<\/code> filters. The <code>useDateRangeType<\/code> can be set only once during initialization. <b>Note:<\/b> If this property is set to <code>true<\/code> and any date filters with filter restriction <code>interval<\/code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false<\/code>, any previously stored filters which were treated as type <code>DateTimeRange<\/code> based on the former setting, cannot be converted back to the standard date interval.","!category":"enum","!type":"Boolean"},"renderType":{"!description":"Determines whether the layout is rendered as a series of divs or as an unordered list (ul).<br> <br> <b>Note:<\/b> We recommend to use <code>Bare<\/code> in most cases to avoid layout issues due to browser inconsistencies.","!category":"enum","!type":"sap.m.FlexRendertype"},"direction":{"!description":"Determines the direction of the layout of child elements.","!category":"enum","!type":"sap.m.FlexDirection"},"requestAtLeastFields":{"!description":"Comma-separated value of fields that must be always requested from the backend<br> This property is mainly meant to be used when there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:<\/b><br> For <code>AnalyticalTable<\/code> (supported since 1.54), the following restrictions apply: <ul> <li>The property name(s) must not point to a new dimension or a measure.<\/li> <li>The property name(s) must not point to a navigationProperty/association path, as this might not supported by analytical services.<\/li> <\/ul> Please ensure that you do not add spaces or special characters as no validation is done for this property.","!category":"enum","!type":"String"},"editable":{"!description":"This attribute can be used to specify if the controls created by the SmartTable control are editable. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)","!category":"enum","!type":"Boolean"},"showVariantManagement":{"!description":"The showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.","!category":"enum","!type":"Boolean"},"editTogglable":{"!description":"Specifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)","!category":"enum","!type":"Boolean"},"showFullScreenButton":{"!description":"Controls the visibility of the FullScreen button.","!category":"enum","!type":"Boolean"},"placeToolbarInTable":{"!description":"Specifies whether the <code>Toolbar<\/code> control of the <code>SmartTable<\/code> is placed inside the corresponding aggregation of the inner UI5 table control.","!category":"enum","!type":"Boolean"},"enableAutoColumnWidth":{"!description":"Enables heuristic column width calculation for all supported table types based on metadata information when set to <code>true<\/code>. The column width calculation takes OData type, column label, text arrangement, possible cell templates, additional fields and many other metadata parameters into account. Providing more precise <code>MaxLength<\/code> value for the <code>Edm.String<\/code> type or <code>precision<\/code> value for numeric OData types can help this algorithm to produce better results. The calculated column widths can have a minimum of 3rem and a maximum of 20rem. To avoid the heuristic column width calculation for a particular column, the {@link #annotation:CssDefaults CssDefaults} annotation can be used.\n\nIf <code>tableType=\"ResponsiveTable\"<\/code>, the following changes are applied: <ul> <li>{@link #getDemandPopin demandPopin} property of the <code>SmartTable<\/code> is set to <code>true<\/code>.<\/li> <li>{@link sap.m.Table#getFixedLayout fixedLayout} property of the inner table is set to <code>Strict<\/code>.<\/li> <li>{@link sap.m.Table#getContextualWidth contextualWidth} property of the inner table is set to <code>Auto<\/code>.<\/li> <li>Column resizing feature gets enabled and the wrapping of column headers get disabled for all columns, including custom columns.<\/li> <\/ul> Those properties must not be managed by the application.<br><br>\n\nBy default, this feature has no effect on custom columns. To enable heuristic column width calculation also for custom columns, the <code>autoColumnWidth<\/code> property must be specified in the <code>p13nData<\/code> custom data.<br> <b>Note:<\/b> The automatic column width calculation for custom columns works only when the <code>width<\/code> property of the custom column is not set.<br> <b>Note:<\/b> The custom columns can have unexpected cell templates that might affect the result of the column width calculation, for example, an <code>Edm.Byte<\/code> field that can only have three digits might be visualized as a <code>sap.m.RatingIndicator<\/code> that requires more space.<br> <b>Note:<\/b> Defining the <code>leadingProperty<\/code> and a unique <code>columnKey<\/code> in the <code>p13nData<\/code> custom data is a prerequisite for all other <code>p13nData<\/code> properties, including the <code>autoColumnWidth<\/code> property.<br> <i>Examples with <code>autoColumnWidth<\/code> property of the <code>p13nData<\/code> custom data<\/i> <pre>\n&lt;!-- Enable the automatic column width calculation for a custom column --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: true, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Restrict the automatic width calculation to a minimum of 5rem and a maximum of 15rem --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;min&quot;: 5, &quot;max&quot;: 15 }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Define extra 3rem space to the automatic content width calculation --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;gap&quot;: 3 }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Define the visible properties that should be considered for the calculation. Multiple property names can be specified here as comma-separated values. The first property is the leading property. --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;visibleProperty&quot;: &quot;PropC&quot; }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;additionalProperty&quot;: &quot;PropB,PropC&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- The calculated column width must not be smaller than the column header --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;truncateLabel&quot;: false }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre>\n\n<b>Note:<\/b><br> The <code>enableAutoColumnWidth<\/code> is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"Boolean"},"headerLevel":{"!description":"Defines the semantic level of the header. For more information, see {@link sap.m.Title#setLevel}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"exportType":{"!description":"Specifies the type of export to be used in the <code>SmartTable<\/code> control.","!category":"enum","!type":"sap.ui.comp.smarttable.ExportType"},"enableAutoBinding":{"!description":"When set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This happens just after the <code>initialise<\/code> event has been fired.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"Boolean"},"width":{"!description":"The width of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"toolbarStyleClass":{"!description":"A style class which is defined for the toolbar of the table.","!category":"enum","!type":"String"},"currentVariantId":{"!description":"Retrieves or sets the current variant.","!category":"enum","!type":"String"},"tableBindingPath":{"!description":"This attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet attribute is used instead. (used only if binding is established after setting this property: initially due to enableAutoBinding -or- by subsequently calling rebindTable)","!category":"enum","!type":"String"},"wrap":{"!description":"Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.","!category":"enum","!type":"sap.m.FlexWrap"},"backgroundDesign":{"!description":"Defines the background style of the <code>sap.m.FlexBox<\/code>.","!category":"enum","!type":"sap.m.BackgroundDesign"},"showDetailsButton":{"!description":"Controls the visibility of the Show / Hide Details button for the <code>ResponsiveTable<\/code> scenario.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area while the columns with <code>Low<\/code> importance are hidden. On mobile phones, the columns with <code>Medium<\/code> importance are also hidden. As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!category":"enum","!type":"Boolean"},"showDetails":{"!description":"Determines the state of showDetailsButton button.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartform.SmartFormLayout":{"!description":"Marker interface for SmartForm layouts.","!module":"sap/ui/comp/library","!category":"static class"},"sap.ui.comp.smartfilterbar.GroupConfiguration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.GroupConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.GroupConfiguration"},"sap.ui.comp.smartmicrochart.SmartMicroChartBase":{"getChartTitle":{"!description":"ID of the element which is the current target of the association {@link #getChartTitle chartTitle}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe OData entity set bound to the smart line micro chart.<br> This entity set is used to pull data into the micro chart and create its internal representation.<br> Please note that this property cannot be updated dynamically.","!static":false,"!category":"function","!type":"fn() -> String"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"!proto":"sap.ui.core.Control","fireInitialize":{"!description":"Fires event {@link #event:initialize initialize} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!category":"class","detachInitialize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getUnitOfMeasure":{"!description":"ID of the element which is the current target of the association {@link #getUnitOfMeasure unitOfMeasure}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowLabel":{"!description":"Sets a new value for property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel?: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"getChartDescription":{"!description":"ID of the element which is the current target of the association {@link #getChartDescription chartDescription}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartMicroChartBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getChartType chartType} : string<\/li>\n<li>{@link #getChartBindingPath chartBindingPath} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: \"Auto\")<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getChartTitle chartTitle} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<li>{@link #getChartDescription chartDescription} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<li>{@link #getUnitOfMeasure unitOfMeasure} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialize initialize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Auto\"<\/code>.","!static":false,"!category":"function","!type":"fn(sSize?: sap.m.Size) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62 the concept has been discarded.<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase<\/code> itself.\n\nThis event is fired after the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartMicroChartBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUnitOfMeasure":{"!description":"Sets the associated {@link #getUnitOfMeasure unitOfMeasure}.","!static":false,"!category":"function","!type":"fn(oUnitOfMeasure: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"oUnitOfMeasure":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"}},"!description":"This is an abstract base class for Smart Micro Charts.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID | null","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setChartDescription":{"!description":"Sets the associated {@link #getChartDescription chartDescription}.","!static":false,"!category":"function","!type":"fn(oChartDescription: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"oChartDescription":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"}},"setEntitySet":{"!description":"Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe OData entity set bound to the smart line micro chart.<br> This entity set is used to pull data into the micro chart and create its internal representation.<br> Please note that this property cannot be updated dynamically.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet?: String) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartMicroChartBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowLabel":{"!description":"Gets current value of property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChartBindingPath":{"!description":"Sets a new value for property {@link #getChartBindingPath chartBindingPath}.\n\nThis property can be used to specify a relative path (without '/') to an entity set (not a single entity) that is used during the binding of the chart.<br> For example, it can be a navigation property that will be added to the context path.<br> If not specified, the <code>entitySet<\/code> property is used instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartBindingPath?: String) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"sChartBindingPath":"type: string, description: New value for property <code>chartBindingPath<\/code>"}},"setChartTitle":{"!description":"Sets the associated {@link #getChartTitle chartTitle}.","!static":false,"!category":"function","!type":"fn(oChartTitle: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"oChartTitle":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"}},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62 the concept has been discarded.<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive?: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart. Note that this property is read-only.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartMicroChartBase","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getChartBindingPath":{"!description":"Gets current value of property {@link #getChartBindingPath chartBindingPath}.\n\nThis property can be used to specify a relative path (without '/') to an entity set (not a single entity) that is used during the binding of the chart.<br> For example, it can be a navigation property that will be added to the context path.<br> If not specified, the <code>entitySet<\/code> property is used instead.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChartBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nDefault value is <code>\"Auto\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/ui/comp/smartmicrochart/SmartMicroChartBase","!helpDescription":"This is an abstract base class for Smart Micro Charts."},"sap.ui.comp":{"TextArrangementType":"sap.ui.comp.TextArrangementType","DisplayBehaviour":"sap.ui.comp.smartfilterbar.DisplayBehaviour","ControlProposalType":"sap.ui.comp.smartfield.ControlProposalType","MandatoryType":"sap.ui.comp.smartfilterbar.MandatoryType","smartmicrochart":"sap.ui.comp.smartmicrochart","ColumnType":"sap.ui.comp.personalization.ColumnType","AggregationRole":"sap.ui.comp.personalization.AggregationRole","!category":"namespace","variants":"sap.ui.comp.variants","ValueHelpRangeOperation":"sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation","Importance":"sap.ui.comp.smartform.Importance","odata":"sap.ui.comp.odata","ValueHelpTitleSource":"sap.ui.comp.smartfield.ValueHelpTitleSource","IFormGroupElement":"sap.ui.comp.IFormGroupElement","ChangeHandlerType":"sap.ui.comp.smartvariants.ChangeHandlerType","ChangeType":"sap.ui.comp.personalization.ChangeType","ListType":"sap.ui.comp.smartlist.ListType","ResetType":"sap.ui.comp.personalization.ResetType","state":"sap.ui.comp.state","smartmultiinput":"sap.ui.comp.smartmultiinput","smarttable":"sap.ui.comp.smarttable","smartlist":"sap.ui.comp.smartlist","InfoToolbarBehavior":"sap.ui.comp.smarttable.InfoToolbarBehavior","!description":"SAPUI5 library with smart controls.<br> <b>Note:<\/b> The controls in this library only support OData V2 (see {@link sap.ui.model.odata.v2.ODataModel}) and a default model (named <code>undefined<\/code>). <br/> <b>Note:<\/b> Properties of a complex type (used in an OData entity type) cannot be bound by or used with controls of this library. <br/> <b>Note:<\/b> Most controls in this library do not support key user adaptation. Please see {@link topic:f1430c0337534d469da3a56307ff76af Key User Adaptation: Enable Your App} for a list of supported controls.","smartfilterbar":"sap.ui.comp.smartfilterbar","TableType":"sap.ui.comp.smarttable.TableType","ExportType":"sap.ui.comp.smarttable.ExportType","smartmultiedit":"sap.ui.comp.smartmultiedit","SmartFormValidationMode":"sap.ui.comp.smartform.SmartFormValidationMode","SmartChart":"sap.ui.comp.SmartChart","navpopover":"sap.ui.comp.navpopover","smartfield":"sap.ui.comp.smartfield","filterbar":"sap.ui.comp.filterbar","CriticalityRepresentationType":"sap.ui.comp.smartfield.CriticalityRepresentationType","SelectOptionSign":"sap.ui.comp.smartfilterbar.SelectOptionSign","ControlContextType":"sap.ui.comp.smartfield.ControlContextType","FilterType":"sap.ui.comp.smartfilterbar.FilterType","util":"sap.ui.comp.util","!module":"sap/ui/comp/library","smartvariants":"sap.ui.comp.smartvariants","!helpDescription":"SAPUI5 library with smart controls.<br> <b>Note:<\/b> The controls in this library only support OData V2 (see {@link sap.ui.model.odata.v2.ODataModel}) and a default model (named <code>undefined<\/code>). <br/> <b>Note:<\/b> Properties of a complex type (used in an OData entity type) cannot be bound by or used with controls of this library. <br/> <b>Note:<\/b> Most controls in this library do not support key user adaptation. Please see {@link topic:f1430c0337534d469da3a56307ff76af Key User Adaptation: Enable Your App} for a list of supported controls.","smartform":"sap.ui.comp.smartform","smartchart":"sap.ui.comp.smartchart","ControlType":"sap.ui.comp.smartfilterbar.ControlType","valuehelpdialog":"sap.ui.comp.valuehelpdialog","JSONType":"sap.ui.comp.smartfield.JSONType","config":"sap.ui.comp.config","TextInEditModeSource":"sap.ui.comp.smartfield.TextInEditModeSource"},"sap.ui.comp.smartmicrochart.SmartLineMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartLineMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartLineMicroChart"},"sap.ui.comp.smarttable.TableType":{"!description":"Provides enumeration sap.ui.comp.smarttable.TableType. A subset of table types that fit to a simple API returning one string.","AnalyticalTable":{"!description":"An analytical table (sap.ui.table.AnalyticalTable) control shall be created as the content of the SmartTable, if no table already exists","!category":"enum","!type":"String"},"Table":{"!description":"A table (sap.ui.table.Table) control shall be created as the content of the SmartTable, if no table already exists (default)","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","TreeTable":{"!description":"A tree table (sap.ui.table.TreeTable) control shall be created as the content of the SmartTable, if no table already exists","!category":"enum","!type":"String"},"!category":"static class","ResponsiveTable":{"!description":"A responsive table (sap.m.Table) control that can be used on mobile devices shall be created as the content of the SmartTable, if no table already exists","!category":"enum","!type":"String"}},"sap.ui.comp.smartfield.Configuration":{"!description":"The configuration allows to further define the behavior of a <code>SmartField<\/code>.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.Configuration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getCriticalityQualifier":{"!description":"Gets current value of property {@link #getCriticalityQualifier criticalityQualifier}.\n\nThe property specifies the qualifier of the <code>DataPoint<\/code> or <code>FieldGroup<\/code> annotation from which the criticality annotation information should be taken.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","setPreventInitialDataFetchInValueHelpDialog":{"!description":"Sets a new value for property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>false<\/code>, which means the table will be filled as the data fetch is not prevented. <b>Note:<\/b> As of version 1.78 the default value has been changed from <code>true<\/code> to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreventInitialDataFetchInValueHelpDialog?: Boolean) -> sap.ui.comp.smartfield.Configuration","parameters":{"bPreventInitialDataFetchInValueHelpDialog":"type: boolean, description: New value for property <code>preventInitialDataFetchInValueHelpDialog<\/code>"}},"!category":"class","setControlType":{"!description":"Sets a new value for property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the default behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as a combo box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sControlType?: sap.ui.comp.smartfield.ControlType) -> sap.ui.comp.smartfield.Configuration","parameters":{"sControlType":"type: sap.ui.comp.smartfield.ControlType, description: New value for property <code>controlType<\/code>"}},"getPreventInitialDataFetchInValueHelpDialog":{"!description":"Gets current value of property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIf there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>false<\/code>, which means the table will be filled as the data fetch is not prevented. <b>Note:<\/b> As of version 1.78 the default value has been changed from <code>true<\/code> to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.Configuration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setDisplayBehaviour":{"!description":"Sets a new value for property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the descriptions of the values shown in the result after a query are displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayBehaviour?: sap.ui.comp.smartfield.DisplayBehaviour) -> sap.ui.comp.smartfield.Configuration","parameters":{"sDisplayBehaviour":"type: sap.ui.comp.smartfield.DisplayBehaviour, description: New value for property <code>displayBehaviour<\/code>"}},"!constructorDescription":"Constructor for a new <code>Smartfield<\/code>/<code>Configuration<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getControlType controlType} : sap.ui.comp.smartfield.ControlType<\/li>\n<li>{@link #getDisplayBehaviour displayBehaviour} : sap.ui.comp.smartfield.DisplayBehaviour<\/li>\n<li>{@link #getCriticalityQualifier criticalityQualifier} : string<\/li>\n<li>{@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfield/Configuration","!helpDescription":"The configuration allows to further define the behavior of a <code>SmartField<\/code>.","getControlType":{"!description":"Gets current value of property {@link #getControlType controlType}.\n\nBy default the SmartField chooses the controls it hosts by interpreting OData metadata. This property allows to overwrite the default behavior to some extent. For example makes it possible to define that an OData property of type Edm.Boolean is displayed as a combo box.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlType"},"setCriticalityQualifier":{"!description":"Sets a new value for property {@link #getCriticalityQualifier criticalityQualifier}.\n\nThe property specifies the qualifier of the <code>DataPoint<\/code> or <code>FieldGroup<\/code> annotation from which the criticality annotation information should be taken.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCriticalityQualifier?: String) -> sap.ui.comp.smartfield.Configuration","parameters":{"sCriticalityQualifier":"type: string, description: New value for property <code>criticalityQualifier<\/code>"}},"getDisplayBehaviour":{"!description":"Gets current value of property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the descriptions of the values shown in the result after a query are displayed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.DisplayBehaviour"}},"sap.ui.comp.smartfilterbar.SmartFilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterBar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.SmartFilterBar"},"sap.ui.comp.smartfilterbar.SelectOption":{"!description":"A Select Option can be used to specify default filter values for a control configuration of the SmartFilterBar.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.SelectOption.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","!category":"class","setHigh":{"!description":"Sets a new value for property {@link #getHigh high}.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHigh?: String) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sHigh":"type: string, description: New value for property <code>high<\/code>"}},"setSign":{"!description":"Sets a new value for property {@link #getSign sign}.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'I'<\/code>.","!static":false,"!category":"function","!type":"fn(sSign?: sap.ui.comp.smartfilterbar.SelectOptionSign) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sSign":"type: sap.ui.comp.smartfilterbar.SelectOptionSign, description: New value for property <code>sign<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SelectOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setLow":{"!description":"Sets a new value for property {@link #getLow low}.\n\nThe low value for a select option.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLow?: String) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sLow":"type: string, description: New value for property <code>low<\/code>"}},"!constructorDescription":"Constructor for a new smartfilterbar/SelectOption.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSign sign} : sap.ui.comp.smartfilterbar.SelectOptionSign (default: 'I')<\/li>\n<li>{@link #getOperator operator} : sap.ui.model.FilterOperator (default: 'EQ')<\/li>\n<li>{@link #getLow low} : string<\/li>\n<li>{@link #getHigh high} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfilterbar/SelectOption","!helpDescription":"A Select Option can be used to specify default filter values for a control configuration of the SmartFilterBar.","getLow":{"!description":"Gets current value of property {@link #getLow low}.\n\nThe low value for a select option.","!static":false,"!category":"function","!type":"fn() -> String"},"getSign":{"!description":"Gets current value of property {@link #getSign sign}.\n\nThe sign for a Select Option. Possible values are I for include or E for exclude.\n\nDefault value is <code>'I'<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.SelectOptionSign"},"getHigh":{"!description":"Gets current value of property {@link #getHigh high}.\n\nThe high value for a select option. The high value is only required for a few operators, e.g. BT (between).","!static":false,"!category":"function","!type":"fn() -> String"},"setOperator":{"!description":"Sets a new value for property {@link #getOperator operator}.\n\nThe operator for a select option. The default value is EQ \"for equals\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'EQ'<\/code>.","!static":false,"!category":"function","!type":"fn(sOperator?: sap.ui.model.FilterOperator) -> sap.ui.comp.smartfilterbar.SelectOption","parameters":{"sOperator":"type: sap.ui.model.FilterOperator, description: New value for property <code>operator<\/code>"}},"getOperator":{"!description":"Gets current value of property {@link #getOperator operator}.\n\nThe operator for a select option. The default value is EQ \"for equals\".\n\nDefault value is <code>'EQ'<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.FilterOperator"}},"sap.ui.comp.variants.EditableVariantItem":{"getLifecyclePackage":{"!description":"Gets current value of property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP Package the variant is assigned. Used for transport functionality","!static":false,"!category":"function","!type":"fn() -> String"},"getAuthor":{"!description":"Gets current value of property {@link #getAuthor author}.\n\nAuthor of the variant","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Sets a new value for property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessOptions?: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sAccessOptions":"type: string, description: New value for property <code>accessOptions<\/code>"}},"!proto":"sap.m.ColumnListItem","!category":"class","setLifecyclePackage":{"!description":"Sets a new value for property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP Package the variant is assigned. Used for transport functionality\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecyclePackage?: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sLifecyclePackage":"type: string, description: New value for property <code>lifecyclePackage<\/code>"}},"setGlobal":{"!description":"Sets a new value for property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bGlobal?: Boolean) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"bGlobal":"type: boolean, description: New value for property <code>global<\/code>"}},"!constructorDescription":"Constructor for a new variants/EditableVariantItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getGlobal global} : boolean<\/li>\n<li>{@link #getLifecyclePackage lifecyclePackage} : string<\/li>\n<li>{@link #getLifecycleTransportId lifecycleTransportId} : string<\/li>\n<li>{@link #getNamespace namespace} : string<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<li>{@link #getAccessOptions accessOptions} : string<\/li>\n<li>{@link #getLabelReadOnly labelReadOnly} : boolean (default: false)<\/li>\n<li>{@link #getAuthor author} : string<\/li>\n<li>{@link #getFavorite favorite} : boolean (default: false)<\/li>\n<li>{@link #get_contexts _contexts} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ColumnListItem#constructor sap.m.ColumnListItem}\ncan be used as well.","getGlobal":{"!description":"Gets current value of property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nKey of the List Item\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey?: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>The EditableVariantItem class describes an editable variant list item for the Manage Variants popup.","setLabelReadOnly":{"!description":"Sets a new value for property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant label can be changed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLabelReadOnly?: Boolean) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"bLabelReadOnly":"type: boolean, description: New value for property <code>labelReadOnly<\/code>"}},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nKey of the List Item","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.variants.EditableVariantItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Gets current value of property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only","!static":false,"!category":"function","!type":"fn() -> String"},"setFavorite":{"!description":"Sets a new value for property {@link #getFavorite favorite}.\n\nIndicates if favorites can be created.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFavorite?: Boolean) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"bFavorite":"type: boolean, description: New value for property <code>favorite<\/code>"}},"setLifecycleTransportId":{"!description":"Sets a new value for property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecycleTransportId?: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sLifecycleTransportId":"type: string, description: New value for property <code>lifecycleTransportId<\/code>"}},"getFavorite":{"!description":"Gets current value of property {@link #getFavorite favorite}.\n\nIndicates if favorites can be created.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.EditableVariantItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ColumnListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/variants/EditableVariantItem","getLifecycleTransportId":{"!description":"Gets current value of property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to.","!static":false,"!category":"function","!type":"fn() -> String"},"setAuthor":{"!description":"Sets a new value for property {@link #getAuthor author}.\n\nAuthor of the variant\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAuthor?: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sAuthor":"type: string, description: New value for property <code>author<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>The EditableVariantItem class describes an editable variant list item for the Manage Variants popup.","getNamespace":{"!description":"Gets current value of property {@link #getNamespace namespace}.\n\nVariant namespace","!static":false,"!category":"function","!type":"fn() -> String"},"getReadOnly":{"!description":"Gets current value of property {@link #getReadOnly readOnly}.\n\nIndication if variant can be changed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabelReadOnly":{"!description":"Gets current value of property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant label can be changed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNamespace":{"!description":"Sets a new value for property {@link #getNamespace namespace}.\n\nVariant namespace\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNamespace?: String) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"sNamespace":"type: string, description: New value for property <code>namespace<\/code>"}},"setReadOnly":{"!description":"Sets a new value for property {@link #getReadOnly readOnly}.\n\nIndication if variant can be changed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadOnly?: Boolean) -> sap.ui.comp.variants.EditableVariantItem","parameters":{"bReadOnly":"type: boolean, description: New value for property <code>readOnly<\/code>"}}},"sap.ui.comp.smartvariants.PersonalizableInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.PersonalizableInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.PersonalizableInfo"},"sap.ui.comp.smartvariants":{"initialSelectionKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.103 replaced by property <code>selectionKey<\/code><br>Enables the setting of the initially selected variant.","!category":"enum","!type":"String"},"persistencyKey":{"!description":"Key used to access personalization data.","!category":"enum","!type":"String"},"SmartVariantManagementMediator":"sap.ui.comp.smartvariants.SmartVariantManagementMediator_obj","selectionPresentationVariants":{"!description":"assign an array of selectionPresentationVariants annotations.","!category":"enum","!type":"Object"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showCreateTile":{"!description":"Indicates that a Create Tile is visible in the Save As dialog.","!category":"enum","!type":"Boolean"},"!category":"namespace","type":{"!description":"Describes the type of variant management.","!category":"enum","!type":"String"},"SmartVariantManagementBase":"sap.ui.comp.smartvariants.SmartVariantManagementBase_obj","enabled":{"!description":"Can be set to true or false depending on whether you want to enable or disable the control.","!category":"enum","!type":"Boolean"},"SmartVariantManagement":"sap.ui.comp.smartvariants.SmartVariantManagement_obj","defaultVariantKey":{"!description":"Provides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"selectionKey":{"!description":"The key of the currently selected item.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"showExecuteOnSelection":{"!description":"Indicates that Execute on Selection is visible in the Save As and the Manage Views dialogs.","!category":"enum","!type":"Boolean"},"titleStyle":{"!description":"Defines the style of the title. For more information, see {@link sap.m.Title#setTitleStyle}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"executeOnSelectionForStandardDefault":{"!description":"Determines the behavior for Apply Automatically if the standard variant is marked as the default variant.","!category":"enum","!type":"Boolean"},"maxWidth":{"!description":"Sets the maximum width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"SmartVariantManagementAdapter":"sap.ui.comp.smartvariants.SmartVariantManagementAdapter_obj","showSetAsDefault":{"!description":"Indicates whether the functionality of setting a default variant is enabled. The Default column in Manage Views and the Set as Default checkbox in Save View will be disabled if set to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"useFavorites":{"!description":"Indicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.","!category":"enum","!type":"Boolean"},"displayTextForExecuteOnSelectionForStandardVariant":{"!description":"Defines the Apply Automatically text for the standard variant in the Manage Views dialog if the application controls this behavior. <p> <b>Note:<\/b> The usage of this property is restricted to <code>sap.fe<\/code> components only.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The v2 oData entity set whose metadata is used to create the variant items based on the <code>SelectionPresentationVariant<\/code> annotation. <br><b>Note:<\/b>This property may be set only once during the initialization phase and may not be changed afterwords.","!category":"enum","!type":"String"},"editable":{"!description":"Indicates whether the buttons on My Views are visible.","!category":"enum","!type":"Boolean"},"PersonalizableInfo":"sap.ui.comp.smartvariants.PersonalizableInfo_obj","keyName":{"!description":"Defines the property name of the personalization key.","!category":"enum","!type":"String"},"lifecycleSupport":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.103 life-cycle handling of views is done internally by the SAPUI5 flexibility service.<br>Enables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.","!category":"enum","!type":"Boolean"},"standardItemAuthor":{"!description":"Defines the author of the standard variant, for example, the name of the own company.","!category":"enum","!type":"String"},"modelName":{"!description":"The name of the model containing the data.","!category":"enum","!type":"String"},"standardItemText":{"!description":"Overwrites the default Standard variant title.","!category":"enum","!type":"String"},"SmartVariantManagementUi2":"sap.ui.comp.smartvariants.SmartVariantManagementUi2_obj","headerLevel":{"!description":"Semantic level of the header. For more information, see {@link sap.m.Title#setLevel}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"variantCreationByUserAllowed":{"!description":"Indicates that end users are allowed to create variants <b>Note<\/b>: this property is controlled by the SAPUI5 flexibility service.","!category":"enum","!type":"Boolean"},"showShare":{"!description":"Indicates that the Public checkbox is visible in the Save As and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users. <b>Note<\/b>: this property is controlled by the SAPUI5 flexibility service.","!category":"enum","!type":"Boolean"},"dataSource":{"!description":"Name of the data service","!category":"enum","!type":"String"},"inErrorState":{"!description":"Indicates whether the control is in error state. If set to <code>true<\/code>, an error message will be displayed when the variant is opened.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartchart.SmartChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartchart.SmartChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartchart.SmartChart"},"sap.ui.comp.smartmultiedit":{"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The entity set name to fetch metadata for. This entity set should have <code>sap:creatable<\/code> annotation set to <code>true<\/code> as this control needs to create an entry internally for a short period of time.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in an update of the property.","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"applyToEmptyOnly":{"!description":"Indicates whether to check for an existing value in the data model before applying the changes.<br> Please note that this property does not automatically update the model. It is up to you as the app developer to decide whether you want to consider this property when updating the model or not.","!category":"enum","!type":"Boolean"},"description":{"!description":"Optional description of the field.","!category":"enum","!type":"String"},"!category":"namespace","contexts":{"!description":"The binding contexts relevant to this mass editing operation.","!category":"enum","!type":"Array.<sap.ui.model.Context>"},"Field":"sap.ui.comp.smartmultiedit.Field_obj","Container":"sap.ui.comp.smartmultiedit.Container_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"propertyName":{"!description":"The OData property name to fetch metadata for.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in a new binding.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"useApplyToEmptyOnly":{"!description":"Indicates whether to display applyToEmptyOnly flag.","!category":"enum","!type":"Boolean"},"validateTokenExistence":{"!description":"Defines whether the existence of the selected token should be validated. <br>If you set this property to <code>true<\/code>, you should use the {@link sap.ui.comp.smartmultiedit.Container#getErroneousFieldsAndTokens} method, as the validation becomes asynchronous.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartfield.JSONType":{"!description":"Enumeration of the different data types supported by the SmartField control, if it is using a JSON model.","Integer":{"!description":"Integer type","!category":"enum","!type":"String"},"Float":{"!description":"Float type","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","String":{"!description":"The JavaScript primary type String","!category":"enum","!type":"String"},"Boolean":{"!description":"Boolean Type","!category":"enum","!type":"String"},"Date":{"!description":"The JavaScript Date Object","!category":"enum","!type":"String"},"DateTime":{"!description":"Date Time Type","!category":"enum","!type":"String"}},"sap.ui.comp.SmartChart":{"!category":"namespace"},"sap.ui.comp.smartfield":{"criticalityRepresentationType":{"!description":"Optional attribute, which can be set to control how the criticality is visualized.","!category":"enum","!type":"sap.ui.comp.smartfield.CriticalityRepresentationType"},"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>, <code>Information<\/code>.\n\n<b>Note:<\/b> This method is public because of an implementation side effect and should not be used for validation purposes as it may conflict with the <code>SmartField<\/code> control's own binding type validation logic based on the underlying metadata of the bound Entity Data Model (EDM) property. Invoking the <code>.setValueState()<\/code> and/or <code>.setValueStateText()<\/code> methods in a <code>change<\/code> event handle to set an error state does not prevent an invalid value from being stored in the binding/model in two-way data binding scenarios. In addition, it does not fire the <code>validationError<\/code> event, which is usually required by some upstream modules, for example, the message manager.\n\nCustom validation logic must be implemented in a custom binding type rather than in a <code>change<\/code> event handler.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text of the value state message popup.\n\n<b>Note:<\/b> This method is public because of an implementation side effect and should not be used for validation purposes as it may conflict with the <code>SmartField<\/code> control's own binding type validation logic based on the underlying metadata of the bound Entity Data Model (EDM) property. Invoking the <code>.setValueState()<\/code> and/or <code>.setValueStateText()<\/code> methods in a <code>change<\/code> event handle to set an error state does not prevent an invalid value from being stored in the binding/model in two-way data binding scenarios. In addition, it does not fire the <code>validationError<\/code> event, which is usually required by some upstream modules, for example, the message manager.\n\nCustom validation logic must be implemented in a custom binding type rather than in a <code>change<\/code> event handler.","!category":"enum","!type":"String"},"preventInitialDataFetchInValueHelpDialog":{"!description":"If there are value help annotations for a smart field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>false<\/code>, which means the table will be filled as the data fetch is not prevented. <b>Note:<\/b> As of version 1.78 the default value has been changed from <code>true<\/code> to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"Configuration":"sap.ui.comp.smartfield.Configuration_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showSuggestion":{"!description":"If set to <code>true<\/code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.","!category":"enum","!type":"Boolean"},"criticality":{"!description":"Optional attribute to determine the rendered state. Possible values are the numeric representations of the enum members of annotation <code>com.sap.vocabularies.UI.v1.CriticalityType<\/code>: 0: None 1: Error 2: Warning 3: Success","!category":"enum","!type":"Object"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between the field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established (e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"showLabel":{"!description":"If set to <code>false<\/code> the label is not displayed.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"SmartField":"sap.ui.comp.smartfield.SmartField_obj","maxWidth":{"!description":"Sets the maximum width of the text field.","!category":"enum","!type":"sap.ui.core.CSSSize"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"valueTextArrangement":{"!description":"Sets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.","!category":"enum","!type":"String"},"entitySet":{"!description":"The name of an entity set for which the control manages values. This is an optional property.\n\nIf this property is left empty, the entity set is computed by parsing the binding context path, for example, <code>Tasks('id-1428419016778-51')<\/code> is parsed to <code>Tasks<\/code>.","!category":"enum","!type":"String"},"textAlign":{"!description":"Horizontal alignment of the text.","!category":"enum","!type":"sap.ui.core.TextAlign"},"textInEditModeSource":{"!description":"Sets the source from which text descriptions for <code>IDs<\/code> are fetched in edit mode, for example, for LT (Laptop).\n\n<b>Note<\/b>: The <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> and <code>sap.ui.comp.smartfield.TextInEditModeSource.ValueList<\/code> enumeration members are only supported if the following applies:\n\n<ul> <li>The <code>value<\/code> property of the <code>SmartField<\/code> control instance is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code> or <code>Edm.Guid<\/code>.<\/li> <li>The <code>com.sap.vocabularies.UI.v1.TextArrangement<\/code> annotation for the bound EDM property or entity type is specified in the service metadata document or annotation file.<\/li> <li>The binding mode for the <code>value<\/code> property of the <code>SmartField<\/code> control is the two-way binding mode.<\/li> <li>The field from which the description is fetched is filterable.<\/li> <\/ul>\n\n<b>Note<\/b>: In addition, the <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> enumeration member is only supported if the following applies:\n\n<ul> <li>The EDM navigation property association is defined in the service metadata document.<\/li> <li>The <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation for the bound EDM property is specified in the service metadata document or annotation file whose <code>Path<\/code> attribute points to a EDM navigation property of a lookup entity set/type whose single key property is the <code>ID<\/code>, which contains (among other properties) the descriptive value.<\/li> <li>The lookup entity must be loaded. The lookup entity can be loaded by expanding the EDM navigation property via a <code>$expand<\/code> query parameter.<\/li> <li>The EDM navigation property association defines a referential constraint that ties values of the dependent editable entity type/set to the lookup entity type/set in the service metadata document.<\/li> <li>The EDM navigation property association end multiplicity of the lookup entity type/set is defined as <code>1<\/code> in the service metadata document. There must be a single-valued navigation from the editable entity set/type to the lookup entity set/type.<\/li> <li>The lookup entity type/set from which the descriptive value is fetched contains a single-key EDM property.<\/li> <\/ul>\n\n<b>Note<\/b>: As of version 1.82, if <code>SmartField<\/code> is used inside a <code>SmartForm<\/code>, <code>defaultTextInEditModeSource<\/code> can be added as custom data to the form and it will be propagated to all smart fields that cover the above criteria. However, if <code>textInEditModeSource<\/code> is added to the <code>SmartField<\/code> as property, it will override the <code>defaultTextInEditModeSource<\/code> propagated from the <code>SmartForm<\/code> custom data.\n\n<b>Note<\/b>: As of version 1.107 the property will be used to configure the validation for fixed list fields of type <code>ComboBox<\/code>. The values that will be considered: <ul> <li>ValueList - strict validation<\/li> <li>ValueListWarning - non-strict validation<\/li> <\/ul>","!category":"enum","!type":"sap.ui.comp.smartfield.TextInEditModeSource"},"ComboBox":"sap.ui.comp.smartfield.ComboBox_obj","showSecondaryValues":{"!description":"Indicates whether the text values of the <code>additionalText<\/code> property of a {@link sap.ui.core.ListItem} are shown.","!category":"enum","!type":"Boolean"},"wrapping":{"!description":"Indicates whether the control break lines (in display mode) to prevent overflow.","!category":"enum","!type":"Boolean"},"realValue":{"!description":"Property works the same as sap.m.Input control <code>value<\/code>","!category":"enum","!type":"String"},"showButton":{"!description":"Indicates whether the dropdown downward-facing arrow button is shown.","!category":"enum","!type":"Boolean"},"name":{"!description":"To be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').","!category":"enum","!type":"String"},"criticalityQualifier":{"!description":"The property specifies the qualifier of the <code>DataPoint<\/code> or <code>FieldGroup<\/code> annotation from which the criticality annotation information should be taken.","!category":"enum","!type":"String"},"maxLength":{"!description":"Defines the highest possible number of permitted input characters that the user can enter into the text input field.\n\n<h3>Computed <code>maxLength<\/code><\/h3> If the specified <code>maxLength<\/code> value is greater than the <code>maxLength<\/code> value specified for the underlying bound Entity Data Model (EDM) property in the service metadata document, the <code>maxLength<\/code> value of the EDM property takes precedence. Likewise, if the application code provides a binding data type for the <code>value<\/code> property of the <code>SmartField<\/code> control and the binding data type has <code>maxLength<\/code> constraints defined, this <code>maxLength<\/code> is also taken into consideration to compute the final <code>maxLength<\/code> value.\n\n<h3>Validation Behavior<\/h3> By design, the <code>SmartField<\/code> control does not restrict/validate the highest number of permitted input characters for every keystroke, but only when the text input field has changed, and the browser focus leaves the text input field or the ENTER key is pressed. The <code>SmartField<\/code> control is used more generically in broader contexts, and adding a <code>maxLength<\/code> attribute to the HTML text input control may break data type formatting in two-way data-binding scenarios. Let's say the <code>maxLength<\/code> property is set to 3, but the text input control has a formatter function attached to it to format the entered value \"DE\" to \"Germany (DE)\". In this case, the formatted value will be truncated by the <code>maxLength<\/code> setting.","!category":"enum","!type":"Number"},"proposedControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Proposes a control to be rendered. The <code>SmartField<\/code> control can ignore the proposal.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlProposalType"},"historyEnabled":{"!description":"If the property is set to <code>false<\/code>, history values are disabled. Changes at runtime are not reflected. The <code>historyEnabled<\/code> property is not applied to custom controls.\n\n<b>Note:<\/b> For {@link sap.m.ComboBox} and {@link sap.m.MultiComboBox} the history values are disabled by default. To enable them for these controls, you need to set the <code>historyEnabled<\/code> property to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"importance":{"!description":"Specifies the importance of the field. Applicable only when the <code>SmartField<\/code> is used inside <code>SmartForm<\/code>.","!category":"enum","!type":"sap.ui.comp.smartfield.Importance"},"_open":{"!description":"Indicates whether the picker is opened.","!category":"enum","!type":"Boolean"},"showValueHelp":{"!description":"If set to <code>true<\/code>, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.","!category":"enum","!type":"Boolean"},"controlContext":{"!description":"Defines the context in which the layout of the <code>SmartField<\/code> control has to be interpreted.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlContextType"},"uomEditable":{"!description":"Indicates whether the unit of measure field is in display or edit mode.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"!category":"namespace","uomEnabled":{"!description":"Enabled state of the unit, if the <code>SmartField<\/code> control addresses unit of measure use cases, for example, an amount and its associated currency.","!category":"enum","!type":"Boolean"},"mandatory":{"!description":"Indicates whether user input is required.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven and this property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property is annotated with the <code>Nullable<\/code> annotation. The <code>Nullable<\/code> annotation is a capability of the OData service that specifies whether a value is mandatory, hence it overrules the control's API settings. Therefore, if the <code>Nullable<\/code> attribute is specified as <code>Nullable=\"false\"<\/code>, a value is mandatory.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"clientSideMandatoryCheck":{"!description":"Determines if the mandatory check of whether the field has a value happens on the client side - <code>true<\/code> or on the server side - <code>false<\/code>.\n\n<b>Note:<\/b> If the {@link sap.ui.comp.smartfield.SmartField#value} property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property of type different from Edm.String annotated as <code>Nullable=\"false\"<\/code>, the mandatory validation is performed on the client side regardless of the <code>clientSideMandatoryCheck<\/code> setting.\n\n<i>Example:<\/i>\n\n<pre>\n    &lt;Property Name=&quot;CategoryID&quot; Type=&quot;Edm.Decimal&quot; Nullable=&quot;false&quot;/&gt;\n<\/pre>","!category":"enum","!type":"Boolean"},"_internalFieldGroupIds":{"!description":"Providing value here will overwrite the internally assigned FieldGroupIds calculated from the service metadata. This property accepts comma delimited list of FieldGroupIds.","!category":"enum","!type":"[String]"},"enabled":{"!description":"Indicates whether the user can interact with the control or not. <b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab order.","!category":"enum","!type":"Boolean"},"ObjectStatus":"sap.ui.comp.smartfield.ObjectStatus_obj","textDirection":{"!description":"The available text direction options are LTR and RTL. By default, the control inherits the text direction from its parent control.\n\nThe <code>textDirection<\/code> property can be used when, for example, the text direction in the application is LTR but you want a specific field to have RTL text direction.\n\n<b>Note:<\/b> The <code>textDirection<\/code> property is not applicable for the <code>SmartField<\/code> control for units of measure use cases.","!category":"enum","!type":"sap.ui.core.TextDirection"},"ControlProposal":"sap.ui.comp.smartfield.ControlProposal_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"textLabel":{"!description":"This property contains the text of an associated <code>SmartLabel<\/code>.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fetchValueListReadOnly":{"!description":"Indicates whether the value list collection is fetched in display mode from the resource path specified in the <code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotation.\n\nThis collection data is used to infer a descriptive text for the value of the <code>SmartField<\/code> control. However, fetching the value list collection for every <code>SmartField<\/code> instance individually may not be ideal in some performance-critical scenarios. To optimize this default behavior, you can set this property to <code>false<\/code> and provide the <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation, which is used to specify the URL path name to the Entity Data Model (EDM) property from which the descriptive text for the value of the <code>SmartField<\/code> control is fetched, for example, LT (Laptop).\n\n<b>Note:<\/b> Setting this property to <code>false<\/code> only has an effect if the <code>value<\/code> property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code>. In addition, applications or frameworks have to make sure the descriptive text is fetched, for example, by expanding a navigation property.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Text shown when no value available.","!category":"enum","!type":"String"},"selectedItemId":{"!description":"ID of the selected item.","!category":"enum","!type":"String"},"value":{"!description":"The binding path expression used to determine the bound Entity Data Model (EDM) property.\n\n<b>Note:<\/b> Composite binding expressions for this property are not supported. <b>Note:<\/b> Custom formatters for this property are not supported. The <code>SmartField<\/code> control usually creates its own data type based on the service metadata for the formatting of values. Also, when a custom formatter is specified for a property, the binding mode is automatically switched to one-way binding mode. <b>Note:<\/b> Named models are not supported, only the default model (named undefined) is supported. For example, when the binding path expression contains a <code>&gt;<\/code> sign, the string preceding it is a named model and the remainder after the <code>&gt;<\/code> is the binding path.","!category":"enum","!type":"Object"},"effectiveShowClearIcon":{"!description":"Specifies whether the clear icon should be shown/hidden on user interaction.","!category":"enum","!type":"Boolean"},"selectedKey":{"!description":"Key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!category":"enum","!type":"String"},"tooltipLabel":{"!description":"This property contains the tool tip of the associated <code>SmartLabel<\/code> control.","!category":"enum","!type":"String"},"fixedValueListValidationEnabled":{"!description":"If the property is set to <code>true<\/code>, a standard validation for {@link sap.m.ComboBox} is performed. An inner control {@link sap.m.ComboBox} is created and the binding is to <code>selectedKey<\/code>. Changes at runtime are not reflected.\n\n<b>Note:<\/b> This property switches the control in legacy mode. If set to <code>true<\/code> this will override any setting to <code>textInEditModeSource<\/code> property regarding ComboBox validation.\n\n<b>Note:<\/b> If the property is set to <code>false<\/code>, the inner control is {@link sap.ui.comp.smartfield.ComboBox} and the binding is to <code>enteredValue<\/code>. In this case, any entered value is valid irrespective of whether it's in the predefined list or not.\n\n<b>Note:<\/b> This property is applicable only for fixed-value scenarios.","!category":"enum","!type":"Boolean"},"contextEditable":{"!description":"Notifies the control whether controls using the <code>SmartField<\/code> control are editable.","!category":"enum","!type":"Boolean"},"editable":{"!description":"Indicates whether the control is in display or edit mode.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"showClearIcon":{"!description":"Specifies whether clear icon is shown. Pressing the icon will clear input's value.","!category":"enum","!type":"Boolean"},"displayBehaviour":{"!description":"The property specifies how value help, that is available for input fields, is presented. For example, it specifies whether the descriptions of the values shown in the result after a query are displayed.","!category":"enum","!type":"sap.ui.comp.smartfield.DisplayBehaviour"},"valueHelpTitleSource":{"!description":"Controls if the title is taken from the label of the main property or from the label of the value list.","!category":"enum","!type":"sap.ui.comp.smartfield.ValueHelpTitleSource"},"url":{"!description":"Contains a URL which is used to render a link. The link is rendered, if the OData property, to which the value property of the control is bound, is of type <code>Edm.String<\/code> and the <code>SmartField<\/code> is in display mode.","!category":"enum","!type":"String"},"suppressEmptyStringRequest":{"!description":"Controls if a query is sent to the backend in case of an empty string.","!category":"enum","!type":"Boolean"},"showValueStateMessage":{"!description":"Defines whether the value state message is shown or not.","!category":"enum","!type":"Boolean"},"enteredValue":{"!description":"enteredValue : String","!category":"enum","!type":"String"},"controlType":{"!description":"By default the SmartField chooses the controls it hosts by interpreting OData meta data. This property allows to overwrite the default behavior to some extent; for example this property allows to define that an OData property of type Edm.Boolean is displayed as combo box.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlProposalType"},"expandNavigationProperties":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.117 It is recommended the expand to be using the OData Model.<br>Indicates if entities related to navigation properties inside the metadata are requested. If set to <code>true<\/code>, then these related entities are loaded with an <code>$expand<\/code> request.\n\nAnnotations that can have navigation properties are the following: <ul> <li> <code>com.sap.vocabularies.Common.v1.Text<\/code> for text arrangements <li> <code>Org.OData.Measures.V1.Unit<\/code> and <code>Org.OData.Measures.V1.ISOCurrency<\/code> for units <li> <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> for field control <\/ul>\n\n<b>Note:<\/b> Independent of the <code>fetchValueListReadOnly<\/code> value, setting this flag to <code>true<\/code> requests data from the backend.\n\n<b>Note:<\/b> The back-end request to expand the navigation properties is sent only if the entity to which <code>SmartField<\/code> is bound is persisted. For transient entities, there is no back-end request since no such data is available.","!category":"enum","!type":"Boolean"},"jsontype":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31.0 with no replacement.<br>Data types to be used, if the <code>SmartField<\/code> control is interacting with a JSON model. If the value property of the control is bound to a property of an OData entity set, this property is not taken into consideration.","!category":"enum","!type":"sap.ui.comp.smartfield.JSONType"},"width":{"!description":"Defines the width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"uomVisible":{"!description":"Indicates whether the unit of measure field is visible.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this property can be ignored if the bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.","!category":"enum","!type":"Boolean"},"uomEditState":{"!description":"This property is for internal use only.","!category":"enum","!type":"Number"},"filterSecondaryValues":{"!description":"Indicates whether the filter should check in both the <code>text<\/code> and the <code>additionalText<\/code> property of the {@link sap.ui.core.ListItem} for the suggestion.","!category":"enum","!type":"Boolean"},"open":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.110 Please check the <code>showItems<\/code> functionality if you need to open the picker programmatically.<br>Indicates whether the picker is opened.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartmicrochart.SmartDeltaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartDeltaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartDeltaMicroChart"},"sap.ui.comp.smartmicrochart.SmartMicroChart":{"getChartTitle":{"!description":"ID of the element which is the current target of the association {@link #getChartTitle chartTitle}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name to fetch data and create the internal chart representation from. Note that this is not a dynamic UI5 property.","!static":false,"!category":"function","!type":"fn() -> String"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFreeText":{"!description":"ID of the element which is the current target of the association {@link #getFreeText freeText}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!proto":"sap.ui.core.Control","fireInitialize":{"!description":"Fires event {@link #event:initialize initialize} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!category":"class","detachInitialize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getUnitOfMeasure":{"!description":"ID of the element which is the current target of the association {@link #getUnitOfMeasure unitOfMeasure}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowLabel":{"!description":"Sets a new value for property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel?: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"getChartDescription":{"!description":"ID of the element which is the current target of the association {@link #getChartDescription chartDescription}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getChartBindingPath chartBindingPath} : string<\/li>\n<li>{@link #getChartType chartType} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: \"Auto\")<\/li>\n<li>{@link #getIsResponsive isResponsive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getChartTitle chartTitle} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<li>{@link #getChartDescription chartDescription} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<li>{@link #getUnitOfMeasure unitOfMeasure} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<li>{@link #getFreeText freeText} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialize initialize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Auto\"<\/code>.","!static":false,"!category":"function","!type":"fn(sSize?: sap.m.Size) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62 the concept has been discarded.<br>Gets current value of property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialize initialize} event of this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code> itself.\n\nEvent fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmicrochart.SmartMicroChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFreeText":{"!description":"Sets the associated {@link #getFreeText freeText}.","!static":false,"!category":"function","!type":"fn(oFreeText: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oFreeText":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this freeText association; alternatively, an element instance may be given"}},"setUnitOfMeasure":{"!description":"Sets the associated {@link #getUnitOfMeasure unitOfMeasure}.","!static":false,"!category":"function","!type":"fn(oUnitOfMeasure: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oUnitOfMeasure":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this unitOfMeasure association; alternatively, an element instance may be given"}},"!description":"The SmartMicroChart control creates a chart based on OData metadata and the configuration specified by <code>mSettings<\/code>. <br>The <code>entitySet<\/code> property is required. This property is used to fetch metadata and annotation information from the specified default OData model. Depending on the UI/ChartType annotation, the control creates a corresponding {@link sap.ui.comp.smartmicrochart.SmartAreaMicroChart SmartAreaMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartBulletMicroChart SmartBulletMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart SmartStackedBarMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartLineMicroChart SmartLineMicroChart}, or {@link sap.ui.comp.smartmicrochart.SmartRadialMicroChart SmartRadialMicroChart} instance and delegates it to the internal control. <br> <b><i>Note:<\/i><\/b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID | null","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setChartDescription":{"!description":"Sets the associated {@link #getChartDescription chartDescription}.","!static":false,"!category":"function","!type":"fn(oChartDescription: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oChartDescription":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this chartDescription association; alternatively, an element instance may be given"}},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"setEntitySet":{"!description":"Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe entity set name to fetch data and create the internal chart representation from. Note that this is not a dynamic UI5 property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet?: String) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowLabel":{"!description":"Gets current value of property {@link #getShowLabel showLabel}.\n\nDetermines if any label is shown or not\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChartBindingPath":{"!description":"Sets a new value for property {@link #getChartBindingPath chartBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the chart. If not specified, the entitySet attribute is used instead and also stored in this property. Calling <code>bindElement<\/code> binds the control and sets this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartBindingPath?: String) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sChartBindingPath":"type: string, description: New value for property <code>chartBindingPath<\/code>"}},"setChartTitle":{"!description":"Sets the associated {@link #getChartTitle chartTitle}.","!static":false,"!category":"function","!type":"fn(oChartTitle: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"oChartTitle":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this chartTitle association; alternatively, an element instance may be given"}},"setIsResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62 the concept has been discarded.<br>Sets a new value for property {@link #getIsResponsive isResponsive}.\n\nIf this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsResponsive?: Boolean) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"bIsResponsive":"type: boolean, description: New value for property <code>isResponsive<\/code>"}},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart. Note that this property is read-only.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the chart. Overrides the height specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the chart. Overrides the width specified in the <code>size<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.comp.smartmicrochart.SmartMicroChart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getChartBindingPath":{"!description":"Gets current value of property {@link #getChartBindingPath chartBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the chart. If not specified, the entitySet attribute is used instead and also stored in this property. Calling <code>bindElement<\/code> binds the control and sets this property.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.\n\nDefault value is <code>\"Auto\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/ui/comp/smartmicrochart/SmartMicroChart","!helpDescription":"The SmartMicroChart control creates a chart based on OData metadata and the configuration specified by <code>mSettings<\/code>. <br>The <code>entitySet<\/code> property is required. This property is used to fetch metadata and annotation information from the specified default OData model. Depending on the UI/ChartType annotation, the control creates a corresponding {@link sap.ui.comp.smartmicrochart.SmartAreaMicroChart SmartAreaMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartBulletMicroChart SmartBulletMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart SmartStackedBarMicroChart}, {@link sap.ui.comp.smartmicrochart.SmartLineMicroChart SmartLineMicroChart}, or {@link sap.ui.comp.smartmicrochart.SmartRadialMicroChart SmartRadialMicroChart} instance and delegates it to the internal control. <br> <b><i>Note:<\/i><\/b> Most of the attributes are not dynamic and cannot be changed once the control has been initialized."},"sap.ui.comp.variants.VariantItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VariantItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.variants.VariantItem"},"sap.ui.comp.variants":{"lifecycleTransportId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Identifier of the transport object the variant is assigned to.","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showCreateTile":{"!description":"Indicates that a Create Tile is visible in the Create dialog.","!category":"enum","!type":"Boolean"},"contexts":{"!description":"Contains the contexts information of the item.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"executeOnSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Attribute for usage in <code>SmartFilterBar<\/code>","!category":"enum","!type":"Boolean"},"type":{"!description":"Defines the visual indication and behavior of the list items, e.g. <code>Active<\/code>, <code>Navigation<\/code>, <code>Detail<\/code>.","!category":"enum","!type":"sap.m.ListType"},"vAlign":{"!description":"Sets the vertical alignment of all the cells within the table row (including selection and navigation). <b>Note:<\/b> <code>vAlign<\/code> property of <code>sap.m.Column<\/code> overrides the property for cell vertical alignment if both are set.","!category":"enum","!type":"sap.ui.core.VerticalAlign"},"_originalExecuteOnSelect":{"!description":"Contains the initial value of the property <code>executeOnSelect<\/code>. Is used for cancel operations.","!category":"enum","!type":"Boolean"},"_originalFavorite":{"!description":"Contains the initial value of the property <code>favorite<\/code>. Is used for cancel operations.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"_contexts":{"!description":"Assigned contexts.","!category":"enum","!type":"Object"},"showExecuteOnSelection":{"!description":"Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.","!category":"enum","!type":"Boolean"},"text":{"!description":"The text to be displayed for the item.","!category":"enum","!type":"String"},"EditableVariantItem":"sap.ui.comp.variants.EditableVariantItem_obj","selected":{"!description":"Defines the selected state of the list items. <b>Note:<\/b> Binding the <code>selected<\/code> property in single selection modes may cause unwanted results if you have more than one selected items in your binding.","!category":"enum","!type":"Boolean"},"showSetAsDefault":{"!description":"Indicates that set as default is visible in the Save Variant and the Manage Variants dialogs.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"author":{"!description":"Contains the author information of the item.","!category":"enum","!type":"String"},"readOnly":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>If set to <code>false<\/code>, the user is allowed to change the item's data","!category":"enum","!type":"Boolean"},"sharing":{"!description":"Contains the information is the item is public or private.","!category":"enum","!type":"sap.m.SharingMode"},"VariantManagement":"sap.ui.comp.variants.VariantManagement_obj","lifecycleSupport":{"!description":"Enables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.","!category":"enum","!type":"Boolean"},"standardItemAuthor":{"!description":"Defines the author of the standard variant, for example, the name of the own company.","!category":"enum","!type":"String"},"_originalTitle":{"!description":"Contains the initial value of the property <code>title<\/code>. Is used for cancel operations.","!category":"enum","!type":"String"},"variantCreationByUserAllowed":{"!description":"Indicates that end users are allowed to create variants.","!category":"enum","!type":"Boolean"},"showShare":{"!description":"Indicates that the Public checkbox is visible in the Save View and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users.","!category":"enum","!type":"Boolean"},"favorite":{"!description":"Indicates if the item is marked as favorite.","!category":"enum","!type":"Boolean"},"inErrorState":{"!description":"Indicates that the control is in error state. If set to <code>true<\/code> error message will be displayed whenever the variant is opened.","!category":"enum","!type":"Boolean"},"initialSelectionKey":{"!description":"Enables the setting of the initially selected variant.","!category":"enum","!type":"String"},"unread":{"!description":"Activates the unread indicator for the list item, if set to <code>true<\/code>. <b>Note:<\/b> This flag is ignored when the <code>showUnread<\/code> property of the parent is set to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"!category":"namespace","global":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Indicator if a variant is visible for all users.","!category":"enum","!type":"Boolean"},"navigated":{"!description":"The navigated state of the list item.\n\nIf set to <code>true<\/code>, a navigation indicator is displayed at the end of the list item. <b>Note:<\/b> This property must be set for <b>one<\/b> list item only.","!category":"enum","!type":"Boolean"},"title":{"!description":"Contains the title if the item.","!category":"enum","!type":"String"},"highlightText":{"!description":"Defines the semantics of the {@link sap.m.ListItemBase#setHighlight highlight} property for accessibility purposes.","!category":"enum","!type":"String"},"enabled":{"!description":"Can be set to true or false depending on whether you want to enable or disable the control.","!category":"enum","!type":"Boolean"},"remove":{"!description":"Indicates if the item is removable.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!category":"enum","!type":"sap.ui.core.TextDirection"},"highlight":{"!description":"Defines the highlight state of the list items.\n\nValid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor} (only values of <code>Indication01<\/code> to <code>Indication10<\/code> are supported for accessibility contrast reasons).\n\nAccessibility support is provided through the associated {@link sap.m.ListItemBase#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.","!category":"enum","!type":"String"},"defaultVariantKey":{"!description":"Provides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"selectionKey":{"!description":"The key of the currently selected item. Returns null if the default item list is selected. This property is calculated when accessing it via the getSelectionKey method. The corresponding setSelectionKey method is not supported. The access via the standard set/getProperty is also not supported.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"executeOnSelect":{"!description":"Indicates if the item is marked as apply automatically.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"key":{"!description":"Can be used as input for subsequent actions.","!category":"enum","!type":"String"},"useFavorites":{"!description":"Indicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.","!category":"enum","!type":"Boolean"},"lifecyclePackage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>ABAP package the variant is assigned to. Used for transport functionality.","!category":"enum","!type":"String"},"VariantItem":"sap.ui.comp.variants.VariantItem_obj","counter":{"!description":"Defines the counter value of the list items.","!category":"enum","!type":"Number"},"labelReadOnly":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Indicates if the variant title can be changed.","!category":"enum","!type":"Boolean"},"standardItemText":{"!description":"Overwrites the default Standard variant title.","!category":"enum","!type":"String"},"rename":{"!description":"Indicates if the item is renamable.","!category":"enum","!type":"Boolean"},"namespace":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Variant namespace","!category":"enum","!type":"String"},"changeable":{"!description":"Indicates if the item is changeable.","!category":"enum","!type":"Boolean"},"accessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Flags for a variant to indicate why it might be read-only.","!category":"enum","!type":"String"},"_originalContexts":{"!description":"Contains the initial value of the property <code>contexts<\/code>. Is used for cancel operations.","!category":"enum","!type":"Object"}},"sap.ui.comp.smartform.SmartForm":{"setCheckButton":{"!description":"Sets a new value for property {@link #getCheckButton checkButton}.\n\nSpecifies whether a check button is added to the toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCheckButton?: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bCheckButton":"type: boolean, description: New value for property <code>checkButton<\/code>"}},"fireEditToggled":{"!description":"Fires event {@link #event:editToggled editToggled} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getUseHorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.86 replaced by {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} in the <code>layout<\/code> aggregation.<br>Gets current value of property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above the field. Each group is rendered in a new line.\n\n<b>Note:<\/b> This property should no longer be used. To arrange the fields in columns, {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} should be used in the <code>layout<\/code> aggregation.\n\n<b>Note:<\/b> The value of this property will be passed on to the <code>useHorizontalLayout<\/code> property of all <code>Group<\/code> and <code>GroupElement<\/code> elements.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySemanticObjectController":{"!description":"Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nApplies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content. If set, all (not only the editable) rows of the form will get the line height of editable fields.\n\nThe labels inside the form will be rendered by default in the according mode.\n\n<b>Note:<\/b> The setting of this property will be passed to all <code>SmartField<\/code> controls inside the form, so they will be editable if the form is editable.\n\n<b>Warning:<\/b> The setting of this property will not be passed to controls other than <code>SmartField<\/code>. For example, <code>Input<\/code> controls in a form with <code>editable<\/code> set to <code>false<\/code> are still editable.\n\nIf controls other than <code>SmartField<\/code> controls are used, and the edit mode of their control is not set correctly, this might lead to visual issues. The labels and fields might be misaligned, the labels might be rendered in the wrong mode, and the spacing between the single controls might be wrong. Also, controls that do not fit the mode might be rendered incorrectly.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLayout":{"!description":"Sets the aggregated {@link #getLayout layout}.","!static":false,"!category":"function","!type":"fn(oLayout: sap.ui.comp.smartform.SmartFormLayout) -> sap.ui.comp.smartform.SmartForm","parameters":{"oLayout":"type: sap.ui.comp.smartform.SmartFormLayout, description: The layout to set"}},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of the form.\n\n<b>Note:<\/b> The title is rendered with a theme-dependent default level. As the <code>SmartForm<\/code> control cannot know the structure of the page, this might not fit the page structure. In this case provide the title using a {@link sap.m.Title Title} control and set its {@link sap.m.Title#setLevel level} to the required value. Add this title to a {@link sap.m.Toolbar Toolbar} control and assign it to the <code>SmartForm<\/code> using the <code>customToolbar<\/code> aggregation.","!static":false,"!category":"function","!type":"fn() -> String"},"setHorizontalLayoutGroupElementMinWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please do not use this property as it does not have any effect on the current layout of the <code>SmartForm<\/code> control.<br>Sets a new value for property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iHorizontalLayoutGroupElementMinWidth?: Number) -> sap.ui.comp.smartform.SmartForm","parameters":{"iHorizontalLayoutGroupElementMinWidth":"type: int, description: New value for property <code>horizontalLayoutGroupElementMinWidth<\/code>"}},"getFlexEnabled":{"!description":"Gets current value of property {@link #getFlexEnabled flexEnabled}.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireChecked":{"!description":"Fires event {@link #event:checked checked} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getCheckButton":{"!description":"Gets current value of property {@link #getCheckButton checkButton}.\n\nSpecifies whether a check button is added to the toolbar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getExpandable":{"!description":"Gets current value of property {@link #getExpandable expandable}.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getImportance":{"!description":"Gets current value of property {@link #getImportance importance}.\n\nSpecifies which smart fields will be visible inside the <code>SmartForm<\/code>.\n\nIf set to <b>high<\/b>, only smart fields with high importance will be visible.\n\nIf set to <b>medium<\/b>, only smart fields with high and medium importance will be visible.\n\nIf set to <b>low<\/b> (default), all the smart fields will be visible regardless of their importance.\n\n<b>Note<b>: If a smart field is annotated as mandatory or hidden, its visibility will not be affected by the <code>importance<\/code> property.\n\nDefault value is <code>Low<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.Importance"},"getCustomToolbar":{"!description":"Gets content of aggregation {@link #getCustomToolbar customToolbar}.\n\nAn additional toolbar that can be added by the users, which can contain further custom buttons, controls, etc.\n\n<b>Note:<\/b> If a special title is required inside the <code>Toolbar<\/code>, it must be added as content to the <code>Toolbar<\/code>. In this case add the <code>Title<\/code> to the <code>ariaLabelledBy<\/code> association. Use the required title level to meet the visual requirements. This might be theme-dependent.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"getGroups":{"!description":"Gets content of aggregation {@link #getGroups groups}.\n\nGroups are used to group form elements.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.Group]"},"!description":"The <code>SmartForm<\/code> control renders a form (<code>sap.ui.layout.form.Form<\/code>). When used with the <code>SmartField<\/code> control the label is taken from the metadata annotation <code>sap:label<\/code> if not specified directly.\n\n<b>Warning:<\/b> Do not put any layout or other container controls into the <code>GroupElement<\/code>. Views are also not supported. This could damage the visual layout, keyboard support and screen-reader support.","attachEditToggled":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself.\n\nThis event is fired when the editable property is toggled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfGroup":{"!description":"Checks for the provided <code>sap.ui.comp.smartform.Group<\/code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroup: sap.ui.comp.smartform.Group) -> Number","parameters":{"oGroup":"type: sap.ui.comp.smartform.Group, description: The group whose index is looked for"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.SmartForm.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachChecked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:checked checked} event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself.\n\nThis event is fired after check was performed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SmartForm<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEditTogglable":{"!description":"Sets a new value for property {@link #getEditTogglable editTogglable}.\n\nIf set to <code>true<\/code>, a button to toggle the <code>editable<\/code> property is shown in the toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditTogglable?: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bEditTogglable":"type: boolean, description: New value for property <code>editTogglable<\/code>"}},"getIgnoredFields":{"!description":"Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nA list of fields that must not be available in the key-user adaptation dialog. Listed field names are separated by commas.\n\nThe property is designed to be used by SAP Fiori elements, and it\u2019s not evaluated by the <code>SmartForm<\/code> control itself.\n\n<b>Note:<\/b><br> Please ensure that you do not add spaces or special characters as no validation is done for this property.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of the form.\n\n<b>Note:<\/b> The title is rendered with a theme-dependent default level. As the <code>SmartForm<\/code> control cannot know the structure of the page, this might not fit the page structure. In this case provide the title using a {@link sap.m.Title Title} control and set its {@link sap.m.Title#setLevel level} to the required value. Add this title to a {@link sap.m.Toolbar Toolbar} control and assign it to the <code>SmartForm<\/code> using the <code>customToolbar<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.comp.smartform.SmartForm","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"check":{"!description":"Checks smart fields for client errors.\n\nThis method is typically used to check whether the value of every text input field in edit mode is subject to data type constraints and whether the constraints are fulfilled.\n\nA data type constraint for a bound Entity Data Model (EDM) property can be violated in many ways, for example:\n\n<ul> <li>The <code>Nullable<\/code> constraint for an EDM property typed as <code>Edm.String<\/code> is violated.<\/li> <li>A user input is invalid for the bound EDM property typed as <code>Edm.DateTime<\/code>.<\/li> <\/ul>\n\nIf this happens, the following applies:\n\n<ul> <li>A validation error state is set on the text input field.<\/li> <li>A validation error message is displayed for the text input field.<\/li> <li>The validation error message (possibly generated by a user input) is added to a <code>sap.ui.core.message.MessageManager<\/code> object instance if, for example, a view object instance is registered to it.<\/li> <li>The text input field fires a {@link sap.ui.base.EventProvider#event:validationError}, or {@link sap.ui.base.EventProvider#event:parseError} event.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn(vSettings?: Boolean | Object) -> [string[] | Promise<Object]","parameters":{"vSettings":"type: boolean|Object, description: Settings object or a boolean which determines if only visible fields in visible groups should be considered"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.SmartForm with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"destroyLayout":{"!description":"Destroys the layout in the aggregation {@link #getLayout layout}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"!module":"sap/ui/comp/smartform/SmartForm","setFocusOnEditableControl":{"!description":"Sets the focus on the first editable control.","!static":false,"!category":"function","!type":"fn()"},"!helpDescription":"The <code>SmartForm<\/code> control renders a form (<code>sap.ui.layout.form.Form<\/code>). When used with the <code>SmartField<\/code> control the label is taken from the metadata annotation <code>sap:label<\/code> if not specified directly.\n\n<b>Warning:<\/b> Do not put any layout or other container controls into the <code>GroupElement<\/code>. Views are also not supported. This could damage the visual layout, keyboard support and screen-reader support.","detachChecked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:checked checked} event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"destroyGroups":{"!description":"Destroys all the groups in the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"removeAllGroups":{"!description":"Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartform.Group]"},"getSemanticObjectController":{"!description":"Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"setEntityType":{"!description":"Sets a new value for property {@link #getEntityType entityType}.\n\nCSV of entity types for which the flexibility features are available.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntityType?: String) -> sap.ui.comp.smartform.SmartForm","parameters":{"sEntityType":"type: string, description: New value for property <code>entityType<\/code>"}},"insertGroup":{"!description":"Inserts a group into the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn(oGroup: sap.ui.comp.smartform.Group, iIndex: Number) -> sap.ui.comp.smartform.SmartForm","parameters":{"oGroup":"type: sap.ui.comp.smartform.Group, description: The group to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the group should be inserted at; for a negative value of <code>iIndex<\/code>, the group is inserted at position 0; for a value greater than the current size of the aggregation, the group is inserted at the last position"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setExpanded":{"!description":"Sets a new value for property {@link #getExpanded expanded}.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the content is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bExpanded?: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"propagateGridDataSpan":{"!description":"Sets default span for <code>GridData<\/code> layout of group elements when used with horizontal layout.\n\n<b>Note:<\/b> There is no need to call this function as the update of all <code>GroupElement<\/code> elements inside the <code>SmartForm<\/code> control is triggered automatically if the <code>GridDataSpan<\/code> property of the <code>Layout<\/code> aggregation changes or the <code>Layout<\/code> aggregation is added.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"!proto":"sap.ui.core.Control","!category":"class","getEditTogglable":{"!description":"Gets current value of property {@link #getEditTogglable editTogglable}.\n\nIf set to <code>true<\/code>, a button to toggle the <code>editable<\/code> property is shown in the toolbar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLayout":{"!description":"Gets content of aggregation {@link #getLayout layout}.\n\nLayout settings to adjust the used layout.\n\nUse {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} to have the current UI.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartFormLayout"},"!constructorDescription":"Constructor for a new smartform/SmartForm.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getUseHorizontalLayout useHorizontalLayout} : boolean<\/li>\n<li>{@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth} : int<\/li>\n<li>{@link #getCheckButton checkButton} : boolean (default: false)<\/li>\n<li>{@link #getEntityType entityType} : string<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<li>{@link #getExpanded expanded} : boolean<\/li>\n<li>{@link #getEditTogglable editTogglable} : boolean (default: false)<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getFlexEnabled flexEnabled} : boolean (default: true)<\/li>\n<li>{@link #getValidationMode validationMode} : sap.ui.comp.smartform.SmartFormValidationMode (default: Standard)<\/li>\n<li>{@link #getImportance importance} : sap.ui.comp.smartform.Importance (default: Low)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroups groups} : sap.ui.comp.smartform.Group[] (default)<\/li>\n<li>{@link #getLayout layout} : sap.ui.comp.smartform.SmartFormLayout<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : sap.ui.comp.navpopover.SemanticObjectController<\/li>\n<li>{@link #getCustomToolbar customToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:editToggled editToggled} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:checked checked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartform.SmartForm","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setSemanticObjectController":{"!description":"Sets the aggregated {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: sap.ui.comp.navpopover.SemanticObjectController) -> sap.ui.comp.smartform.SmartForm","parameters":{"oSemanticObjectController":"type: sap.ui.comp.navpopover.SemanticObjectController, description: The semanticObjectController to set"}},"getValidationMode":{"!description":"Gets current value of property {@link #getValidationMode validationMode}.\n\nControls the SmartForm validation mode. The default mode handles only nested <code>SmartField<\/code> controls with synchronous validation. If the <code>SmartForm<\/code> should also handle controls with asynchronous validation the property should be set to <code>Async<\/code> mode which is the recommended mode to be used as all types of nested fields validation are handled.\n\nNote: Using <code>Async<\/code> mode the method <code>check<\/code> will return a promise instead of an array.\n\nNote: Using <code>Async<\/code> mode the event <code>checked<\/code> will be called asynchronously when all the nested <code>SmartField<\/code> validations are executed.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartFormValidationMode"},"setIgnoredFields":{"!description":"Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nA list of fields that must not be available in the key-user adaptation dialog. Listed field names are separated by commas.\n\nThe property is designed to be used by SAP Fiori elements, and it\u2019s not evaluated by the <code>SmartForm<\/code> control itself.\n\n<b>Note:<\/b><br> Please ensure that you do not add spaces or special characters as no validation is done for this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields?: String) -> sap.ui.comp.smartform.SmartForm","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"destroyCustomToolbar":{"!description":"Destroys the customToolbar in the aggregation {@link #getCustomToolbar customToolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"addGroup":{"!description":"Adds some group to the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn(oGroup: sap.ui.comp.smartform.Group) -> sap.ui.comp.smartform.SmartForm","parameters":{"oGroup":"type: sap.ui.comp.smartform.Group, description: The group to add; if empty, nothing is inserted"}},"getVisibleProperties":{"!description":"Returns the array of properties currently visible on the UI.","!static":false,"!category":"function","!type":"fn() -> [String]"},"addCustomData":{"!description":"Adds some customData into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>Group<\/code> elements, <code>GroupElement<\/code> elements and the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.comp.smartform.SmartForm","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to add; if empty, nothing is added"}},"detachEditToggled":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smartform.SmartForm<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.SmartForm","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setExpandable":{"!description":"Sets a new value for property {@link #getExpandable expandable}.\n\nSpecifies whether the control is expandable. Per default the control is not rendered as expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandable?: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bExpandable":"type: boolean, description: New value for property <code>expandable<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID | null","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setImportance":{"!description":"Sets a new value for property {@link #getImportance importance}.\n\nSpecifies which smart fields will be visible inside the <code>SmartForm<\/code>.\n\nIf set to <b>high<\/b>, only smart fields with high importance will be visible.\n\nIf set to <b>medium<\/b>, only smart fields with high and medium importance will be visible.\n\nIf set to <b>low<\/b> (default), all the smart fields will be visible regardless of their importance.\n\n<b>Note<b>: If a smart field is annotated as mandatory or hidden, its visibility will not be affected by the <code>importance<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Low<\/code>.","!static":false,"!category":"function","!type":"fn(sImportance?: sap.ui.comp.smartform.Importance) -> sap.ui.comp.smartform.SmartForm","parameters":{"sImportance":"type: sap.ui.comp.smartform.Importance, description: New value for property <code>importance<\/code>"}},"setValidationMode":{"!description":"Sets a new value for property {@link #getValidationMode validationMode}.\n\nControls the SmartForm validation mode. The default mode handles only nested <code>SmartField<\/code> controls with synchronous validation. If the <code>SmartForm<\/code> should also handle controls with asynchronous validation the property should be set to <code>Async<\/code> mode which is the recommended mode to be used as all types of nested fields validation are handled.\n\nNote: Using <code>Async<\/code> mode the method <code>check<\/code> will return a promise instead of an array.\n\nNote: Using <code>Async<\/code> mode the event <code>checked<\/code> will be called asynchronously when all the nested <code>SmartField<\/code> validations are executed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sValidationMode?: sap.ui.comp.smartform.SmartFormValidationMode) -> sap.ui.comp.smartform.SmartForm","parameters":{"sValidationMode":"type: sap.ui.comp.smartform.SmartFormValidationMode, description: New value for property <code>validationMode<\/code>"}},"getSmartFields":{"!description":"Retrieves all the smart fields of the form.\n\n<b>Note:<\/b> Even invisible <code>SmartField<\/code> controls are returned if the <code>group<\/code> or <code>groupElement<\/code> is visible.","!static":false,"!category":"function","!type":"fn(bConsiderOnlyVisibleGroups?: Boolean, bConsiderOnlyVisibleGroupElements?: Boolean) -> [sap.ui.comp.smartfield.SmartField]","parameters":{"bConsiderOnlyVisibleGroups":"type: boolean, description: Determines if only visible <code>groups<\/code> are taken into account","bConsiderOnlyVisibleGroupElements":"type: boolean, description: Determines if only visible <code>groupElement<\/code> elements are taken into account"}},"getEntityType":{"!description":"Gets current value of property {@link #getEntityType entityType}.\n\nCSV of entity types for which the flexibility features are available.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nIf expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the content is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFlexEnabled":{"!description":"Sets a new value for property {@link #getFlexEnabled flexEnabled}.\n\nSpecifies whether the form enables flexibility features, such as adding new fields.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFlexEnabled?: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bFlexEnabled":"type: boolean, description: New value for property <code>flexEnabled<\/code>"}},"setCustomToolbar":{"!description":"Sets the aggregated {@link #getCustomToolbar customToolbar}.","!static":false,"!category":"function","!type":"fn(oCustomToolbar: sap.m.Toolbar) -> sap.ui.comp.smartform.SmartForm","parameters":{"oCustomToolbar":"type: sap.m.Toolbar, description: The customToolbar to set"}},"getHorizontalLayoutGroupElementMinWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please do not use this property as it does not have any effect on the current layout of the <code>SmartForm<\/code> control.<br>Gets current value of property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setUseHorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.86 replaced by {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} in the <code>layout<\/code> aggregation.<br>Sets a new value for property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above the field. Each group is rendered in a new line.\n\n<b>Note:<\/b> This property should no longer be used. To arrange the fields in columns, {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} should be used in the <code>layout<\/code> aggregation.\n\n<b>Note:<\/b> The value of this property will be passed on to the <code>useHorizontalLayout<\/code> property of all <code>Group<\/code> and <code>GroupElement<\/code> elements.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUseHorizontalLayout?: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bUseHorizontalLayout":"type: boolean, description: New value for property <code>useHorizontalLayout<\/code>"}},"setEditable":{"!description":"Sets a new value for property {@link #getEditable editable}.\n\nApplies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content. If set, all (not only the editable) rows of the form will get the line height of editable fields.\n\nThe labels inside the form will be rendered by default in the according mode.\n\n<b>Note:<\/b> The setting of this property will be passed to all <code>SmartField<\/code> controls inside the form, so they will be editable if the form is editable.\n\n<b>Warning:<\/b> The setting of this property will not be passed to controls other than <code>SmartField<\/code>. For example, <code>Input<\/code> controls in a form with <code>editable<\/code> set to <code>false<\/code> are still editable.\n\nIf controls other than <code>SmartField<\/code> controls are used, and the edit mode of their control is not set correctly, this might lead to visual issues. The labels and fields might be misaligned, the labels might be rendered in the wrong mode, and the spacing between the single controls might be wrong. Also, controls that do not fit the mode might be rendered incorrectly.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable?: Boolean) -> sap.ui.comp.smartform.SmartForm","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"removeGroup":{"!description":"Removes a group from the aggregation {@link #getGroups groups}.","!static":false,"!category":"function","!type":"fn(vGroup: Number | String | sap.ui.comp.smartform.Group) -> sap.ui.comp.smartform.Group | null","parameters":{"vGroup":"type: int|string|sap.ui.comp.smartform.Group, description: The group to remove or its index or id"}},"insertCustomData":{"!description":"Inserts some customData into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>Group<\/code> elements, <code>GroupElement<\/code> elements and the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData, iIndex: Number) -> sap.ui.comp.smartform.SmartForm","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to insert; if empty, nothing is inserted","iIndex":"type: int, description: the 0-based index the customData should be inserted at; for a negative value of iIndex, the customData is inserted at position 0; for a value greater than the current size of the aggregation, the customData is inserted at the last position"}}},"sap.ui.comp.filterbar.FilterItem":{"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nName of the filter. This is an identifier for the filter and has to be unique.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.comp.filterbar.FilterItem","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"destroyControl":{"!description":"Destroys the control in the aggregation {@link #getControl control}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterItem"},"setMandatory":{"!description":"Setter for mandatory flag.","!static":false,"!category":"function","!type":"fn(bValue: String)","parameters":{"bValue":"type: string, description: Mandatory state"}},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel of the filter.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nName of the filter. This is an identifier for the filter and has to be unique.","!static":false,"!category":"function","!type":"fn() -> String"},"getVisibleInFilterBar":{"!description":"Gets current value of property {@link #getVisibleInFilterBar visibleInFilterBar}.\n\nControls the visibility of a filter item in the filter bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLabelTooltip":{"!description":"Setter for tooltip.","!static":false,"!category":"function","!type":"fn(sText: String)","parameters":{"sText":"type: string, description: Tooltip text"}},"getEntityTypeName":{"!description":"Gets current value of property {@link #getEntityTypeName entityTypeName}.\n\nEntityType name to which the filter belongs","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","getLabelTooltip":{"!description":"Gets current value of property {@link #getLabelTooltip labelTooltip}.\n\nTooltip for the filter.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.comp.filterbar.FilterItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new FilterBar/FilterItem.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getMandatory mandatory} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getLabelTooltip labelTooltip} : string<\/li>\n<li>{@link #getControlTooltip controlTooltip} : string<\/li>\n<li>{@link #getPartOfCurrentVariant partOfCurrentVariant} : boolean (default: true)<\/li>\n<li>{@link #getVisibleInFilterBar visibleInFilterBar} : boolean (default: true)<\/li>\n<li>{@link #getHiddenFilter hiddenFilter} : boolean (default: false)<\/li>\n<li>{@link #getEntitySetName entitySetName} : string<\/li>\n<li>{@link #getEntityTypeName entityTypeName} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControl control} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setControlTooltip":{"!description":"Sets a new value for property {@link #getControlTooltip controlTooltip}.\n\nTooltip for the filter'c control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sControlTooltip?: String) -> sap.ui.comp.filterbar.FilterItem","parameters":{"sControlTooltip":"type: string, description: New value for property <code>controlTooltip<\/code>"}},"setHiddenFilter":{"!description":"Sets a new value for property {@link #getHiddenFilter hiddenFilter}.\n\nA hidden filter will never be visible in the filter bar control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHiddenFilter?: Boolean) -> sap.ui.comp.filterbar.FilterItem","parameters":{"bHiddenFilter":"type: boolean, description: New value for property <code>hiddenFilter<\/code>"}},"getControlTooltip":{"!description":"Gets current value of property {@link #getControlTooltip controlTooltip}.\n\nTooltip for the filter'c control.","!static":false,"!category":"function","!type":"fn() -> String"},"setEntitySetName":{"!description":"Sets a new value for property {@link #getEntitySetName entitySetName}.\n\nEntitySet name to which the filter belongs\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySetName?: String) -> sap.ui.comp.filterbar.FilterItem","parameters":{"sEntitySetName":"type: string, description: New value for property <code>entitySetName<\/code>"}},"!description":"Represents a filter belonging to the basic group.","setVisible":{"!description":"Setter for visible property.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: State of visibility"}},"getMandatory":{"!description":"Gets current value of property {@link #getMandatory mandatory}.\n\nMandatory flag.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"init":{"!description":"Initializes the filter item.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.filterbar.FilterItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"Always returns the initially added control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control | null"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nVisibility state of the filter.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPartOfCurrentVariant":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89 This property is treated as always set to <code>true<\/code>.<br>Setter for partOfCurrentVariant in filter bar.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: State of visibility in filter bar"}},"setEntityTypeName":{"!description":"Sets a new value for property {@link #getEntityTypeName entityTypeName}.\n\nEntityType name to which the filter belongs\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntityTypeName?: String) -> sap.ui.comp.filterbar.FilterItem","parameters":{"sEntityTypeName":"type: string, description: New value for property <code>entityTypeName<\/code>"}},"destroy":{"!description":"Destroys this element.","!static":false,"!category":"function","!type":"fn()"},"getEntitySetName":{"!description":"Gets current value of property {@link #getEntitySetName entitySetName}.\n\nEntitySet name to which the filter belongs","!static":false,"!category":"function","!type":"fn() -> String"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.comp.filterbar.FilterItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterItem<\/code> itself.\n\nThis event is fired when one of the properties is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPartOfCurrentVariant":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Will be internally treated as if always set to <code>true<code><br>Gets current value of property {@link #getPartOfCurrentVariant partOfCurrentVariant}.\n\nDetermines if a filter is part of the currently selected variant. <br> <b>Note:<\/b> This property can also be changed using the <code>visibleInFilterBar<\/code> property and by user interaction in the Select Filters dialog or the variant handling.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisibleInFilterBar":{"!description":"Setter for visible in filter bar.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: State of visibility in filter bar"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setControl":{"!description":"Sets the corresponding control. The control may not be overwritten by the application, once the filter item is assigned to the FilterBar.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control)","parameters":{"oControl":"type: sap.ui.core.Control, description: associated with the filter."}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHiddenFilter":{"!description":"Gets current value of property {@link #getHiddenFilter hiddenFilter}.\n\nA hidden filter will never be visible in the filter bar control\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/comp/filterbar/FilterItem","!helpDescription":"Represents a filter belonging to the basic group.","setLabel":{"!description":"Setter for label.","!static":false,"!category":"function","!type":"fn(sValue: String)","parameters":{"sValue":"type: string, description: Label text"}}},"sap.ui.comp.smartmicrochart.SmartColumnMicroChart":{"!description":"The SmartColumnMicroChart control creates a {@link sap.suite.ui.microchart.ColumnMicroChart ColumnMicroChart} based on OData metadata and the configuration specified. <br>The <code>entitySet<\/code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most properties are not dynamic and cannot be changed, once the control has been initialized.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartColumnMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartColumnMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartColumnMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase} can be used.","!module":"sap/ui/comp/smartmicrochart/SmartColumnMicroChart","!helpDescription":"The SmartColumnMicroChart control creates a {@link sap.suite.ui.microchart.ColumnMicroChart ColumnMicroChart} based on OData metadata and the configuration specified. <br>The <code>entitySet<\/code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most properties are not dynamic and cannot be changed, once the control has been initialized.","!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class"},"sap.ui.comp.smartmicrochart.SmartDeltaMicroChart":{"!description":"The SmartDeltaMicroChart control creates a {@link sap.suite.ui.microchart.DeltaMicroChart DeltaMicroChart} based on OData metadata and the configuration specified. The delta micro chart represents the delta of two values as a chart.<br> The <code>entitySet<\/code> property is required to use the control. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual data.<br> <b><i>Notes:<\/i><\/b><br> <ul><li>Most properties are not dynamic and cannot be changed once the control has been initialized.<\/li><li> SmartDeltaMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartDeltaMicroChart cannot be created with a <code>SmartMicroChart<\/code>.<\/li><\/ul>","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartDeltaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic data binding using the <code>chartBindingPath<\/code> property , if such a property exists.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smartmicrochart.SmartDeltaMicroChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartDeltaMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartDeltaMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase}\ncan be used as well.","!module":"sap/ui/comp/smartmicrochart/SmartDeltaMicroChart","getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic data binding using the <code>chartBindingPath<\/code> property , if such a property exists.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"The SmartDeltaMicroChart control creates a {@link sap.suite.ui.microchart.DeltaMicroChart DeltaMicroChart} based on OData metadata and the configuration specified. The delta micro chart represents the delta of two values as a chart.<br> The <code>entitySet<\/code> property is required to use the control. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual data.<br> <b><i>Notes:<\/i><\/b><br> <ul><li>Most properties are not dynamic and cannot be changed once the control has been initialized.<\/li><li> SmartDeltaMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartDeltaMicroChart cannot be created with a <code>SmartMicroChart<\/code>.<\/li><\/ul>","!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class"},"sap.ui.comp.config.ControlConfigurationBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.config.ControlConfigurationBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.comp.config.ControlConfigurationBase"},"sap.ui.comp.navpopover.NavigationPopover_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ResponsivePopover.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.NavigationPopover"},"sap.ui.comp.filterbar.FilterGroupItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.filterbar.FilterGroupItem"},"sap.ui.comp.smarttable.InfoToolbarBehavior":{"!description":"Enumeration <code>sap.ui.comp.smarttable.InfoToolbarBehavior<\/code> determines the behavior of the info toolbar in the <code>SmartTable<\/code> control.\n\nThe info toolbar represents the filters that are applied using the table personalization dialog.","Auto":{"!description":"The info toolbar is rendered for the <code>SmartTable<\/code> control of table type <code>ResponsiveTable<\/code> only.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","Off":{"!description":"The info toolbar is not rendered.","!category":"enum","!type":"String"},"On":{"!description":"The info toolbar is rendered for the <code>SmartTable<\/code> control regardless of the table type.","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.GroupElement":{"setElementForLabel":{"!description":"Sets a new value for property {@link #getElementForLabel elementForLabel}.\n\nIndex of element to be used for label determination\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iElementForLabel?: Number) -> sap.ui.comp.smartform.GroupElement","parameters":{"iElementForLabel":"type: int, description: New value for property <code>elementForLabel<\/code>"}},"getDataSourceLabel":{"!description":"Try to return label from data source from SmartField from which label is generated","!static":false,"!category":"function","!type":"fn() -> String | undefined"},"getUseHorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.86 replaced by {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} in the <code>layout<\/code> aggregation of the <code>SmartForm<\/code> control.<br>Gets current value of property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups shall be rendered in a <code>ResponsiveLayout<\/code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm<\/code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm<\/code> control when creating the <code>GroupElement<\/code> element.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEditMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.74.0 please do not change the edit mode on groupElement level, let the SmartForm inheritance do it<br>Setter for property editable of all smart fields in children hierarchy.","!static":false,"!category":"function","!type":"fn(bEditMode: Boolean) -> sap.ui.comp.smartform.GroupElement","parameters":{"bEditMode":"type: boolean, description: new value for editable property of smart fields."}},"!proto":"sap.ui.layout.form.FormElement","!category":"class","getVisibleBasedOnElements":{"!description":"Determines the visibility of a <code>GroupElement<\/code> based on elements","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new smartform/GroupElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUseHorizontalLayout useHorizontalLayout} : boolean<\/li>\n<li>{@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth} : int<\/li>\n<li>{@link #getElementForLabel elementForLabel} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getElements elements} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:visibleChanged visibleChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.layout.form.FormElement#constructor sap.ui.layout.form.FormElement}\ncan be used as well.","setHorizontalLayoutGroupElementMinWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please do not use this property as it does not have any effect on the current layout of the <code>SmartForm<\/code> control.<br>Sets a new value for property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control. So don't set it manually.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iHorizontalLayoutGroupElementMinWidth?: Number) -> sap.ui.comp.smartform.GroupElement","parameters":{"iHorizontalLayoutGroupElementMinWidth":"type: int, description: New value for property <code>horizontalLayoutGroupElementMinWidth<\/code>"}},"removeAllElements":{"!description":"Removes all the controls from the aggregation {@link #getElements elements}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addCustomData":{"!description":"Adds some customData into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.comp.smartform.GroupElement","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to add; if empty, nothing is added"}},"!description":"A GroupElement is a combination of one label and different controls associated to this label.","getFormElement":{"!description":"Returns the from element.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.FormElement"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.GroupElement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyElements":{"!description":"Destroys all the elements in the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.GroupElement"},"insertElement":{"!description":"Inserts a element into the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control, iIndex: Number) -> sap.ui.comp.smartform.GroupElement","parameters":{"oElement":"type: sap.ui.core.Control, description: The element to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the element should be inserted at; for a negative value of <code>iIndex<\/code>, the element is inserted at position 0; for a value greater than the current size of the aggregation, the element is inserted at the last position"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.GroupElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachVisibleChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartform.GroupElement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.GroupElement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"indexOfElement":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getElements elements}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control) -> Number","parameters":{"oElement":"type: sap.ui.core.Control, description: The element whose index is looked for"}},"getHorizontalLayoutGroupElementMinWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please do not use this property as it does not have any effect on the current layout of the <code>SmartForm<\/code> control.<br>Gets current value of property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control. So don't set it manually.","!static":false,"!category":"function","!type":"fn() -> Number"},"setUseHorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.86 replaced by {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} in the <code>layout<\/code> aggregation of the <code>SmartForm<\/code> control.<br>Sets a new value for property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups shall be rendered in a <code>ResponsiveLayout<\/code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm<\/code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm<\/code> control when creating the <code>GroupElement<\/code> element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUseHorizontalLayout?: Boolean) -> sap.ui.comp.smartform.GroupElement","parameters":{"bUseHorizontalLayout":"type: boolean, description: New value for property <code>useHorizontalLayout<\/code>"}},"!module":"sap/ui/comp/smartform/GroupElement","!helpDescription":"A GroupElement is a combination of one label and different controls associated to this label.","getElements":{"!description":"Gets content of aggregation {@link #getElements elements}.\n\nAggregation of controls to be displayed together with a label.\n\n<b>Warning:<\/b> Do not put any layout or other container controls in here. This could damage the visual layout, keyboard support and screen-reader support. Only form controls are allowed. Views are also not supported. Allowed controls implement the interface <code>sap.ui.core.IFormContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireVisibleChanged":{"!description":"Fires event {@link #event:visibleChanged visibleChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartform.GroupElement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addElement":{"!description":"Adds some element to the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control) -> sap.ui.comp.smartform.GroupElement","parameters":{"oElement":"type: sap.ui.core.Control, description: The element to add; if empty, nothing is inserted"}},"insertCustomData":{"!description":"Inserts some customData into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData, iIndex: Number) -> sap.ui.comp.smartform.GroupElement","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to insert; if empty, nothing is inserted","iIndex":"type: int, description: the 0-based index the customData should be inserted at; for a negative value of iIndex, the customData is inserted at position 0; for a value greater than the current size of the aggregation, the customData is inserted at the last position"}},"removeElement":{"!description":"Removes a element from the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn(vElement: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vElement":"type: int|string|sap.ui.core.Control, description: The element to remove or its index or id"}},"attachVisibleChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartform.GroupElement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartform.GroupElement<\/code> itself.\n\nThe event is fired after the visibility of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.GroupElement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.GroupElement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getElementForLabel":{"!description":"Gets current value of property {@link #getElementForLabel elementForLabel}.\n\nIndex of element to be used for label determination\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLabelText":{"!description":"Returns the text of the label.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.personalization.ResetType":{"!description":"Provides enumeration sap.ui.comp.personalization.ResetType. A subset of reset types used in table personalization.","ResetFull":{"!description":"Reset back to Restore (i.e. the version of the table with which the controller was instantiated or via setter updated) was triggered (either via API or via reset button)","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","ResetPartial":{"!description":"Reset back to the CurrentVariant was triggered","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.SemanticGroupElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.SemanticGroupElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.SemanticFormElement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.SemanticGroupElement"},"sap.ui.comp.smartmicrochart.SmartComparisonMicroChart":{"!description":"The SmartComparisonMicroChart control creates a ComparisonMicroChart based on OData metadata and the configuration specified. The <code>entitySet<\/code> property is required to use the control. The entity set you specify in this property is used to feetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual data.<br> <b><i>Notes:<\/i><\/b><br> <ol><li>Most properties are not dynamic and cannot be changed, once the control has been initialized.<\/li><li> SmartComparisonMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartComparisonMicroChart cannot be created with a <code>SmartMicroChart<\/code>.<\/li><\/ol>","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartComparisonMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartComparisonMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SmartComparisonMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase} can be used.","!module":"sap/ui/comp/smartmicrochart/SmartComparisonMicroChart","!helpDescription":"The SmartComparisonMicroChart control creates a ComparisonMicroChart based on OData metadata and the configuration specified. The <code>entitySet<\/code> property is required to use the control. The entity set you specify in this property is used to feetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual data.<br> <b><i>Notes:<\/i><\/b><br> <ol><li>Most properties are not dynamic and cannot be changed, once the control has been initialized.<\/li><li> SmartComparisonMicroChart does not have its own ChartType/Enum annotation. This means that ChartType annotation is not specified and SmartComparisonMicroChart cannot be created with a <code>SmartMicroChart<\/code>.<\/li><\/ol>","!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class"},"sap.ui.comp.smartvariants.ChangeHandlerType":{"!description":"Enumeration for changes for personalization of variant favorites.","addFavorite":{"!description":"Change handler creating a change for an added favorite.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","removeFavorite":{"!description":"Change handler creating a change for a removed favorite.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.comp.smartfield.ControlType":{"!description":"The available control types to configure the internal control selection of a SmartField control.","input":{"!description":"The <code>SmartField<\/code> control displays a text input field control.","!category":"enum","!type":"String"},"auto":{"!description":"The <code>SmartField<\/code> control chooses the control to be displayed.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","dropDownList":{"!description":"The <code>SmartField<\/code> control displays a combo box control.","!category":"enum","!type":"String"},"selection":{"!description":"The <code>SmartField<\/code> control displays a select control.","!category":"enum","!type":"String"},"checkBox":{"!description":"The <code>SmartField<\/code> control displays a check box control.","!category":"enum","!type":"String"},"datePicker":{"!description":"The <code>SmartField<\/code> control displays a date picker control.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.comp.navpopover.NavigationPopoverHandler":{"fireNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Fires event {@link #event:navigationTargetsObtained navigationTargetsObtained} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMapFieldToSemanticObject":{"!description":"Gets current value of property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false<\/code>, the NavigationPopoverHandler control will not replace its field name with the according <code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several NavigationPopoverHandler on the same semantic object. *\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMapFieldToSemanticObject":{"!description":"Sets a new value for property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false<\/code>, the NavigationPopoverHandler control will not replace its field name with the according <code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several NavigationPopoverHandler on the same semantic object. *\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bMapFieldToSemanticObject?: Boolean) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"bMapFieldToSemanticObject":"type: boolean, description: New value for property <code>mapFieldToSemanticObject<\/code>"}},"setFieldName":{"!description":"Sets a new value for property {@link #getFieldName fieldName}.\n\nThe metadata field name for this NavigationPopoverHandler control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFieldName?: String) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sFieldName":"type: string, description: New value for property <code>fieldName<\/code>"}},"detachBeforePopoverOpens":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.base.ManagedObject","!category":"class","getSemanticObject":{"!description":"Gets current value of property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to determine target navigations.","!static":false,"!category":"function","!type":"fn() -> String"},"setContactAnnotationPath":{"!description":"Sets a new value for property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'<\/code>. An empty string means that the related entity type is the current one.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sContactAnnotationPath?: String) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sContactAnnotationPath":"type: string, description: New value for property <code>contactAnnotationPath<\/code>"}},"getSemanticObjectValue":{"!description":"Gets the current value assigned to the field with the NavigationPopoverHandler's semantic object name.","!static":false,"!category":"function","!type":"fn() -> Object"},"getNavigationTargetsObtainedCallback":{"!description":"Gets current value of property {@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback}.\n\nFunction that is called when the navigation targets provided by the SAP Fiori launchpad are obtained. The function is called with one <code>oNavigationTargets<\/code> parameter of type {@link sap.ui.comp.navpopover.NavigationTargets}. This function has to return a <code>Promise<\/code> resolving into an <code>Object<\/code> of type {@link sap.ui.comp.navpopover.NavigationTargets}. The provided <code>oNavigationTargets<\/code> can be manipulated in this callback before being returned to the <code>NavigationPopoverHandler<\/code>. The <code>Popover<\/code> will open after the <code>Promise<\/code> has been resolved. This function replaces the <code>navigationTargetsObtained<\/code> event. The event handling is ignored if this callback is set.","!static":false,"!category":"function","!type":"fn() -> fn()"},"attachInnerNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new navpopover/NavigationPopoverHandler.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSemanticObject semanticObject} : string<\/li>\n<li>{@link #getAdditionalSemanticObjects additionalSemanticObjects} : string[] (default: [])<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : any<\/li>\n<li>{@link #getFieldName fieldName} : string<\/li>\n<li>{@link #getSemanticObjectLabel semanticObjectLabel} : string<\/li>\n<li>{@link #getMapFieldToSemanticObject mapFieldToSemanticObject} : boolean (default: true)<\/li>\n<li>{@link #getContactAnnotationPath contactAnnotationPath} : string (default: undefined)<\/li>\n<li>{@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization} : boolean (default: true)<\/li>\n<li>{@link #getBeforeNavigationCallback beforeNavigationCallback} : function<\/li>\n<li>{@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback} : function<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getControl control} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforePopoverOpens beforePopoverOpens} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigationTargetsObtained navigationTargetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerNavigate innerNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","setAdditionalSemanticObjects":{"!description":"Sets a new value for property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nNames of additional semantic objects which are used to determine target navigations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalSemanticObjects?: [String]) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sAdditionalSemanticObjects":"type: string[], description: New value for property <code>additionalSemanticObjects<\/code>"}},"getSemanticObjectLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 Title section with <code>semanticObjectLabel<\/code> has been removed due to new UI design<br>Gets current value of property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown title of semantic object.","!static":false,"!category":"function","!type":"fn() -> String"},"setSemanticObjectController":{"!description":"Sets a new value for property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oSemanticObjectController":"type: any, description: New value for property <code>semanticObjectController<\/code>"}},"getContactAnnotationPath":{"!description":"Gets current value of property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'<\/code>. An empty string means that the related entity type is the current one.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getAdditionalSemanticObjects":{"!description":"Gets current value of property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nNames of additional semantic objects which are used to determine target navigations.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setSemanticObjectLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 Title section with <code>semanticObjectLabel<\/code> has been removed due to new UI design<br>Sets a new value for property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown title of semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObjectLabel?: String) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sSemanticObjectLabel":"type: string, description: New value for property <code>semanticObjectLabel<\/code>"}},"attachNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained<\/code> is fired and provides the possibility to change the targets.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEnableAvailableActionsPersonalization":{"!description":"Sets a new value for property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAvailableActionsPersonalization?: Boolean) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"bEnableAvailableActionsPersonalization":"type: boolean, description: New value for property <code>enableAvailableActionsPersonalization<\/code>"}},"fireInnerNavigate":{"!description":"Fires event {@link #event:innerNavigate innerNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121 SmartLink no longer uses the NavigationPopoverHandler, it got replaced by a sap.ui.mdc.Link implementation. All event handlings can be done directly on the SmartLink / SemanticObjectController.<br>The NavigationPopoverHandler control determines navigation targets for a semantic object and shows them together with further information in a Popover.<br> <b>Note:<\/b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.","setSemanticObject":{"!description":"Sets a new value for property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to determine target navigations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObject?: String) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"sSemanticObject":"type: string, description: New value for property <code>semanticObject<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopoverHandler.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"ID of the element which is the current target of the association {@link #getControl control}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getBeforeNavigationCallback":{"!description":"Gets current value of property {@link #getBeforeNavigationCallback beforeNavigationCallback}.\n\nFunction that is called before the actual navigation happens. This function has to return a <code>Promise<\/code> resolving into a Boolean value for which the navigation will wait. If the Boolean value is <code>true<\/code>, the navigation will be processed. The <code>beforeNavigationCallback(oNavigationInfo)<\/code> parameter contains the following data: <ul> <li>{String} text: Text of the navigation intent<\/li> <li>{String} href: HREF of the navigation intent<\/li> <li>{String} originalId: ID of the control that fires the navigation intent<\/li> <li>{String} semanticObject: Name of the <code>SemanticObject<\/code> of the navigation intent<\/li> <li>{Object} semanticAttributes: Object containing the <code>SemanticAttributes<\/code> of the navigation intent<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> fn()"},"setBeforeNavigationCallback":{"!description":"Sets a new value for property {@link #getBeforeNavigationCallback beforeNavigationCallback}.\n\nFunction that is called before the actual navigation happens. This function has to return a <code>Promise<\/code> resolving into a Boolean value for which the navigation will wait. If the Boolean value is <code>true<\/code>, the navigation will be processed. The <code>beforeNavigationCallback(oNavigationInfo)<\/code> parameter contains the following data: <ul> <li>{String} text: Text of the navigation intent<\/li> <li>{String} href: HREF of the navigation intent<\/li> <li>{String} originalId: ID of the control that fires the navigation intent<\/li> <li>{String} semanticObject: Name of the <code>SemanticObject<\/code> of the navigation intent<\/li> <li>{Object} semanticAttributes: Object containing the <code>SemanticAttributes<\/code> of the navigation intent<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnBeforeNavigationCallback: fn()) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"fnBeforeNavigationCallback":"type: function, description: New value for property <code>beforeNavigationCallback<\/code>"}},"fireBeforePopoverOpens":{"!description":"Fires event {@link #event:beforePopoverOpens beforePopoverOpens} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setControl":{"!description":"Sets the associated {@link #getControl control}.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oControl":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this control association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopoverHandler with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setNavigationTargetsObtainedCallback":{"!description":"Sets a new value for property {@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback}.\n\nFunction that is called when the navigation targets provided by the SAP Fiori launchpad are obtained. The function is called with one <code>oNavigationTargets<\/code> parameter of type {@link sap.ui.comp.navpopover.NavigationTargets}. This function has to return a <code>Promise<\/code> resolving into an <code>Object<\/code> of type {@link sap.ui.comp.navpopover.NavigationTargets}. The provided <code>oNavigationTargets<\/code> can be manipulated in this callback before being returned to the <code>NavigationPopoverHandler<\/code>. The <code>Popover<\/code> will open after the <code>Promise<\/code> has been resolved. This function replaces the <code>navigationTargetsObtained<\/code> event. The event handling is ignored if this callback is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnNavigationTargetsObtainedCallback: fn()) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"fnNavigationTargetsObtainedCallback":"type: function, description: New value for property <code>navigationTargetsObtainedCallback<\/code>"}},"!module":"sap/ui/comp/navpopover/NavigationPopoverHandler","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121 SmartLink no longer uses the NavigationPopoverHandler, it got replaced by a sap.ui.mdc.Link implementation. All event handlings can be done directly on the SmartLink / SemanticObjectController.<br>The NavigationPopoverHandler control determines navigation targets for a semantic object and shows them together with further information in a Popover.<br> <b>Note:<\/b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.","detachInnerNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getEnableAvailableActionsPersonalization":{"!description":"Gets current value of property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforePopoverOpens":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of NavigationPopoverHandler, the <code>beforePopoverOpens<\/code> is fired after the link has been clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopoverHandler","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopoverHandler<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFieldName":{"!description":"Gets current value of property {@link #getFieldName fieldName}.\n\nThe metadata field name for this NavigationPopoverHandler control.","!static":false,"!category":"function","!type":"fn() -> String"},"openPopover":{"!description":"Opens the <code>sap.m.Popover<\/code> with navigation targets in an asynchronous manner.","!static":false,"!category":"function","!type":"fn(oDomRef: Object) -> Promise","parameters":{"oDomRef":"type: object, description: Optional DOM reference to which the popover is attached. By default the <code>control<\/code> association is used as DOM reference."}},"getSemanticObjectController":{"!description":"Gets current value of property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several NavigationPopoverHandler controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.comp.odata":{"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"_open":{"!description":"Indicates whether the picker is opened.","!category":"enum","!type":"Boolean"},"textArrangement":{"!description":"Sets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.","!category":"enum","!type":"String"},"!category":"namespace","enabled":{"!description":"Indicates whether the user can interact with the control or not. <b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab-chain.","!category":"enum","!type":"Boolean"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between the field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established (e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"Defines the text directionality of the input field, e.g. <code>RTL<\/code>, <code>LTR<\/code>","!category":"enum","!type":"sap.ui.core.TextDirection"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value.","!category":"enum","!type":"String"},"selectedItemId":{"!description":"ID of the selected item.","!category":"enum","!type":"String"},"value":{"!description":"Defines the value of the control.","!category":"enum","!type":"String"},"maxWidth":{"!description":"Sets the maximum width of the text field.","!category":"enum","!type":"sap.ui.core.CSSSize"},"effectiveShowClearIcon":{"!description":"Specifies whether the clear icon should be shown/hidden on user interaction.","!category":"enum","!type":"Boolean"},"selectedKey":{"!description":"Key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.","!category":"enum","!type":"sap.ui.core.TextAlign"},"ComboBox":"sap.ui.comp.odata.ComboBox_obj","editable":{"!description":"Defines whether the control can be modified by the user or not. <b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.","!category":"enum","!type":"Boolean"},"showSecondaryValues":{"!description":"Indicates whether the text values of the <code>additionalText<\/code> property of a {@link sap.ui.core.ListItem} are shown.","!category":"enum","!type":"Boolean"},"showClearIcon":{"!description":"Specifies whether clear icon is shown. Pressing the icon will clear input's value.","!category":"enum","!type":"Boolean"},"showValueStateMessage":{"!description":"Indicates whether the value state message should be shown or not.","!category":"enum","!type":"Boolean"},"showButton":{"!description":"Indicates whether the dropdown downward-facing arrow button is shown.","!category":"enum","!type":"Boolean"},"width":{"!description":"Defines the width of the control.\n\n<b>Note:<\/b> If the provided width is too small, the control gets stretched to its min width, which is needed in order for the control to be usable and well aligned.","!category":"enum","!type":"sap.ui.core.CSSSize"},"name":{"!description":"The name to be used in the HTML code (for example, for HTML forms that send data to the server via submission).","!category":"enum","!type":"String"},"filterSecondaryValues":{"!description":"Indicates whether the filter should check in both the <code>text<\/code> and the <code>additionalText<\/code> property of the {@link sap.ui.core.ListItem} for the suggestion.","!category":"enum","!type":"Boolean"},"open":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.110 Please check the <code>showItems<\/code> functionality if you need to open the picker programmatically.<br>Indicates whether the picker is opened.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartvariants.SmartVariantManagementBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartvariants.SmartVariantManagementMediator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.SmartVariantManagementBase"},"sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart"},"sap.ui.comp.smartfield.ObjectStatus_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ObjectStatus with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.ObjectStatus"},"sap.ui.comp.smartvariants.SmartVariantManagementMediator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementMediator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.SmartVariantManagementMediator"},"sap.ui.comp.state.UIState_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.state.UIState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.state.UIState"},"sap.ui.comp.smartvariants.SmartVariantManagementBase":{"openSaveAsDialogForKeyUser":{"!description":"Opens the Save As dialog when in Ui Adaptation mode.","!static":false,"!category":"function","!type":"fn(sStyleClass: String, fCallBack: Object, oRolesComponentContainer: Object)","parameters":{"oRolesComponentContainer":"type: object, description: representing the component responsible for role assignment","sStyleClass":"type: string, description: rta specific style for dialog","fCallBack":"type: object, description: which gets executed, once the dialog is left via OK button"}},"activateVariant":{"!description":"Selects a variant.","!static":false,"!category":"function","!type":"fn(sVariantId: String)","parameters":{"sVariantId":"type: string, description: variant to be selected"}},"getViewIdByName":{"!description":"Retrieves view id for a given view name. The first match will be returned.","!static":false,"!category":"function","!type":"fn(sViewName: String) -> String","parameters":{"sViewName":"type: string, description: the look-up view name"}},"!proto":"sap.ui.comp.smartvariants.SmartVariantManagementMediator","!category":"class","updateVariant":{"!description":"Updates a variant.","!static":false,"!category":"function","!type":"fn(oVariant: Object)","parameters":{"oVariant":"type: object, description: inner flex variant"}},"getPresentVariantId":{"!description":"Retrieves the currently active variant id.","!static":false,"!category":"function","!type":"fn() -> String"},"getPresentVariantContent":{"!description":"Retrieves the actual variant content.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!constructorDescription":"Constructor for a new <code>SmartVariantManagementBase<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStandardItemAuthor standardItemAuthor} : string (default: \"SAP\")<\/li>\n<li>{@link #getInitialSelectionKey initialSelectionKey} : string<\/li>\n<li>{@link #getLifecycleSupport lifecycleSupport} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartvariants.SmartVariantManagementMediator#constructor sap.ui.comp.smartvariants.SmartVariantManagementMediator}\ncan be used as well.","getTitle":{"!description":"Retrieves the title of the current variant.","!static":false,"!category":"function","!type":"fn() -> sap.m.Title"},"getStandardItemAuthor":{"!description":"Gets current value of property {@link #getStandardItemAuthor standardItemAuthor}.\n\nDefines the author of the standard variant, for example, the name of the own company.\n\nDefault value is <code>\"SAP\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"openManageViewsDialogForKeyUser":{"!description":"Opens the Manage Views dialog when in Ui Adaptation mode.","!static":false,"!category":"function","!type":"fn(mProperties: map, fCallBack: Object, bTesting: Boolean)","parameters":{"fCallBack":"type: object, description: which gets executed, once the dialog is left via OK button","bTesting":"type: boolean, description: only relevant for unit tests","mProperties":"type: map, description: describing rta related information"}},"getDefaultVariantId":{"!description":"Retrieves the default variant id.","!static":false,"!category":"function","!type":"fn() -> String"},"removeWeakVariant":{"!description":"Removes a variant.","!static":false,"!category":"function","!type":"fn(mProperties: map)","parameters":{"mProperties":"type: map, description: describes the deleted variant"}},"setInitialSelectionKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.103 replaced by property <code>selectionKey<\/code><br>Sets a new value for property {@link #getInitialSelectionKey initialSelectionKey}.\n\nEnables the setting of the initially selected variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitialSelectionKey?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementBase","parameters":{"sInitialSelectionKey":"type: string, description: New value for property <code>initialSelectionKey<\/code>"}},"!description":"<h3>Overview<\/h3> The <code>SmartVariantManagementBase<\/code> control embeds {@link sap.m.VariantManagement VariantManagement} control and communicates with the flexibility library that offers SAPUI5 flexibility to manage the variants for the UI Adaptation scenarios.<br>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getManageDialog":{"!description":"Retrieves the Manage Views dialog instance.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog"},"_getPersoController":{"!description":"Retrieves the control which personalization is handled by the current variant management.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setDefaultVariantId":{"!description":"Sets the default variant id.","!static":false,"!category":"function","!type":"fn(sVariantId: String)","parameters":{"sVariantId":"type: string, description: is the current default variant id"}},"getInitialSelectionKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.103 replaced by property <code>selectionKey<\/code><br>Gets current value of property {@link #getInitialSelectionKey initialSelectionKey}.\n\nEnables the setting of the initially selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"getPersonalizableControlPersistencyKey":{"!description":"Retrieves the persistency key of the current variant management control.","!static":false,"!category":"function","!type":"fn()"},"leavingDesignMode":{"!description":"Indicates the design mode was left.","!static":false,"!category":"function","!type":"fn()"},"getAllVariants":{"!description":"Retrieves all variant ids.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setStandardItemAuthor":{"!description":"Sets a new value for property {@link #getStandardItemAuthor standardItemAuthor}.\n\nDefines the author of the standard variant, for example, the name of the own company.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"SAP\"<\/code>.","!static":false,"!category":"function","!type":"fn(sStandardItemAuthor?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementBase","parameters":{"sStandardItemAuthor":"type: string, description: New value for property <code>standardItemAuthor<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartvariants.SmartVariantManagementMediator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/smartvariants/SmartVariantManagementBase","!helpDescription":"<h3>Overview<\/h3> The <code>SmartVariantManagementBase<\/code> control embeds {@link sap.m.VariantManagement VariantManagement} control and communicates with the flexibility library that offers SAPUI5 flexibility to manage the variants for the UI Adaptation scenarios.<br>","enteringDesignMode":{"!description":"Indicates the design mode was entered.","!static":false,"!category":"function","!type":"fn()"},"getLifecycleSupport":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.103 life-cycle handling of views is done internally by the SAPUI5 flexibility service.<br>Gets current value of property {@link #getLifecycleSupport lifecycleSupport}.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLifecycleSupport":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.103 life-cycle handling of views is done internally by the SAPUI5 flexibility service.<br>Sets a new value for property {@link #getLifecycleSupport lifecycleSupport}.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLifecycleSupport?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementBase","parameters":{"bLifecycleSupport":"type: boolean, description: New value for property <code>lifecycleSupport<\/code>"}},"addVariant":{"!description":"Adds a variant.","!static":false,"!category":"function","!type":"fn(oVariant: map, bIsDefault: String)","parameters":{"bIsDefault":"type: string, description: describes if the the newly added variant is defualted","oVariant":"type: map, description: inner flex variant describes the newly added variant"}},"removeVariant":{"!description":"Removes a variant.","!static":false,"!category":"function","!type":"fn(mProperties: map)","parameters":{"mProperties":"type: map, description: describes the deleted variant"}}},"sap.ui.comp.smartfilterbar.SmartFilterBarFilterGroupItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBarFilterGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterGroupItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.SmartFilterBarFilterGroupItem"},"sap.ui.comp.smartfield.ControlContextType":{"!description":"Enumeration of the different contexts supported by the SmartField, if it is using an OData model.","Table":{"!description":"If this is selected the UoM layout is influenced.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","Form":{"!description":"Behaves currently exactly like <code>sap.ui.comp.smartfield.ControlContextType.None<\/code>.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"No special context is selected. The Smart Field applies its internal defaults.","!category":"enum","!type":"String"},"ResponsiveTable":{"!description":"Also the UoM layout is influenced.","!category":"enum","!type":"String"},"SmartFormGrid":{"!description":"If this is selected the UoM layout is influenced.","!category":"enum","!type":"String"}},"sap.ui.comp.smartmultiinput":{"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>, <code>Information<\/code>.\n\n<b>Note:<\/b> This method is public because of an implementation side effect and should not be used for validation purposes as it may conflict with the <code>SmartField<\/code> control's own binding type validation logic based on the underlying metadata of the bound Entity Data Model (EDM) property. Invoking the <code>.setValueState()<\/code> and/or <code>.setValueStateText()<\/code> methods in a <code>change<\/code> event handle to set an error state does not prevent an invalid value from being stored in the binding/model in two-way data binding scenarios. In addition, it does not fire the <code>validationError<\/code> event, which is usually required by some upstream modules, for example, the message manager.\n\nCustom validation logic must be implemented in a custom binding type rather than in a <code>change<\/code> event handler.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text of the value state message popup.\n\n<b>Note:<\/b> This method is public because of an implementation side effect and should not be used for validation purposes as it may conflict with the <code>SmartField<\/code> control's own binding type validation logic based on the underlying metadata of the bound Entity Data Model (EDM) property. Invoking the <code>.setValueState()<\/code> and/or <code>.setValueStateText()<\/code> methods in a <code>change<\/code> event handle to set an error state does not prevent an invalid value from being stored in the binding/model in two-way data binding scenarios. In addition, it does not fire the <code>validationError<\/code> event, which is usually required by some upstream modules, for example, the message manager.\n\nCustom validation logic must be implemented in a custom binding type rather than in a <code>change<\/code> event handler.","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showSuggestion":{"!description":"If set to <code>true<\/code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.","!category":"enum","!type":"Boolean"},"showLabel":{"!description":"If set to <code>false<\/code> the label is not displayed.","!category":"enum","!type":"Boolean"},"SmartMultiInput":"sap.ui.comp.smartmultiinput.SmartMultiInput_obj","textSeparator":{"!description":"Denotes the separator between texts in the display mode. The default value is loaded from the component resource bundle.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The name of an entity set for which the control manages values. This is an optional property.\n\nIf this property is left empty, the entity set is computed by parsing the binding context path, for example, <code>Tasks('id-1428419016778-51')<\/code> is parsed to <code>Tasks<\/code>.","!category":"enum","!type":"String"},"textAlign":{"!description":"Horizontal alignment of the text.","!category":"enum","!type":"sap.ui.core.TextAlign"},"textInEditModeSource":{"!description":"Sets the source from which text descriptions for <code>IDs<\/code> are fetched in edit mode, for example, for LT (Laptop).\n\n<b>Note<\/b>: The <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> and <code>sap.ui.comp.smartfield.TextInEditModeSource.ValueList<\/code> enumeration members are only supported if the following applies:\n\n<ul> <li>The <code>value<\/code> property of the <code>SmartField<\/code> control instance is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code> or <code>Edm.Guid<\/code>.<\/li> <li>The <code>com.sap.vocabularies.UI.v1.TextArrangement<\/code> annotation for the bound EDM property or entity type is specified in the service metadata document or annotation file.<\/li> <li>The binding mode for the <code>value<\/code> property of the <code>SmartField<\/code> control is the two-way binding mode.<\/li> <li>The field from which the description is fetched is filterable.<\/li> <\/ul>\n\n<b>Note<\/b>: In addition, the <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> enumeration member is only supported if the following applies:\n\n<ul> <li>The EDM navigation property association is defined in the service metadata document.<\/li> <li>The <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation for the bound EDM property is specified in the service metadata document or annotation file whose <code>Path<\/code> attribute points to a EDM navigation property of a lookup entity set/type whose single key property is the <code>ID<\/code>, which contains (among other properties) the descriptive value.<\/li> <li>The lookup entity must be loaded. The lookup entity can be loaded by expanding the EDM navigation property via a <code>$expand<\/code> query parameter.<\/li> <li>The EDM navigation property association defines a referential constraint that ties values of the dependent editable entity type/set to the lookup entity type/set in the service metadata document.<\/li> <li>The EDM navigation property association end multiplicity of the lookup entity type/set is defined as <code>1<\/code> in the service metadata document. There must be a single-valued navigation from the editable entity set/type to the lookup entity set/type.<\/li> <li>The lookup entity type/set from which the descriptive value is fetched contains a single-key EDM property.<\/li> <\/ul>\n\n<b>Note<\/b>: As of version 1.82, if <code>SmartField<\/code> is used inside a <code>SmartForm<\/code>, <code>defaultTextInEditModeSource<\/code> can be added as custom data to the form and it will be propagated to all smart fields that cover the above criteria. However, if <code>textInEditModeSource<\/code> is added to the <code>SmartField<\/code> as property, it will override the <code>defaultTextInEditModeSource<\/code> propagated from the <code>SmartForm<\/code> custom data.\n\n<b>Note<\/b>: As of version 1.107 the property will be used to configure the validation for fixed list fields of type <code>ComboBox<\/code>. The values that will be considered: <ul> <li>ValueList - strict validation<\/li> <li>ValueListWarning - non-strict validation<\/li> <\/ul>","!category":"enum","!type":"sap.ui.comp.smartfield.TextInEditModeSource"},"wrapping":{"!description":"Indicates whether the control break lines (in display mode) to prevent overflow.","!category":"enum","!type":"Boolean"},"name":{"!description":"To be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').","!category":"enum","!type":"String"},"maxLength":{"!description":"Defines the highest possible number of permitted input characters that the user can enter into the text input field.\n\n<h3>Computed <code>maxLength<\/code><\/h3> If the specified <code>maxLength<\/code> value is greater than the <code>maxLength<\/code> value specified for the underlying bound Entity Data Model (EDM) property in the service metadata document, the <code>maxLength<\/code> value of the EDM property takes precedence. Likewise, if the application code provides a binding data type for the <code>value<\/code> property of the <code>SmartField<\/code> control and the binding data type has <code>maxLength<\/code> constraints defined, this <code>maxLength<\/code> is also taken into consideration to compute the final <code>maxLength<\/code> value.\n\n<h3>Validation Behavior<\/h3> By design, the <code>SmartField<\/code> control does not restrict/validate the highest number of permitted input characters for every keystroke, but only when the text input field has changed, and the browser focus leaves the text input field or the ENTER key is pressed. The <code>SmartField<\/code> control is used more generically in broader contexts, and adding a <code>maxLength<\/code> attribute to the HTML text input control may break data type formatting in two-way data-binding scenarios. Let's say the <code>maxLength<\/code> property is set to 3, but the text input control has a formatter function attached to it to format the entered value \"DE\" to \"Germany (DE)\". In this case, the formatted value will be truncated by the <code>maxLength<\/code> setting.","!category":"enum","!type":"Number"},"proposedControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Proposes a control to be rendered. The <code>SmartField<\/code> control can ignore the proposal.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlProposalType"},"historyEnabled":{"!description":"If the property is set to <code>false<\/code>, history values are disabled. Changes at runtime are not reflected. The <code>historyEnabled<\/code> property is not applied to custom controls.\n\n<b>Note:<\/b> For {@link sap.m.ComboBox} and {@link sap.m.MultiComboBox} the history values are disabled by default. To enable them for these controls, you need to set the <code>historyEnabled<\/code> property to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"importance":{"!description":"Specifies the importance of the field. Applicable only when the <code>SmartField<\/code> is used inside <code>SmartForm<\/code>.","!category":"enum","!type":"sap.ui.comp.smartfield.Importance"},"showValueHelp":{"!description":"If set to <code>true<\/code>, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.","!category":"enum","!type":"Boolean"},"controlContext":{"!description":"Defines the context in which the layout of the <code>SmartField<\/code> control has to be interpreted.","!category":"enum","!type":"sap.ui.comp.smartfield.ControlContextType"},"uomEditable":{"!description":"Indicates whether the unit of measure field is in display or edit mode.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"!category":"namespace","uomEnabled":{"!description":"Enabled state of the unit, if the <code>SmartField<\/code> control addresses unit of measure use cases, for example, an amount and its associated currency.","!category":"enum","!type":"Boolean"},"mandatory":{"!description":"Indicates whether user input is required.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven and this property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property is annotated with the <code>Nullable<\/code> annotation. The <code>Nullable<\/code> annotation is a capability of the OData service that specifies whether a value is mandatory, hence it overrules the control's API settings. Therefore, if the <code>Nullable<\/code> attribute is specified as <code>Nullable=\"false\"<\/code>, a value is mandatory.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"clientSideMandatoryCheck":{"!description":"Determines if the mandatory check of whether the field has a value happens on the client side - <code>true<\/code> or on the server side - <code>false<\/code>.\n\n<b>Note:<\/b> If the {@link sap.ui.comp.smartfield.SmartField#value} property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property of type different from Edm.String annotated as <code>Nullable=\"false\"<\/code>, the mandatory validation is performed on the client side regardless of the <code>clientSideMandatoryCheck<\/code> setting.\n\n<i>Example:<\/i>\n\n<pre>\n    &lt;Property Name=&quot;CategoryID&quot; Type=&quot;Edm.Decimal&quot; Nullable=&quot;false&quot;/&gt;\n<\/pre>","!category":"enum","!type":"Boolean"},"_internalFieldGroupIds":{"!description":"Providing value here will overwrite the internally assigned FieldGroupIds calculated from the service metadata. This property accepts comma delimited list of FieldGroupIds.","!category":"enum","!type":"[String]"},"enabled":{"!description":"Indicates whether the user can interact with the control or not. <b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab order.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"The available text direction options are LTR and RTL. By default, the control inherits the text direction from its parent control.\n\nThe <code>textDirection<\/code> property can be used when, for example, the text direction in the application is LTR but you want a specific field to have RTL text direction.\n\n<b>Note:<\/b> The <code>textDirection<\/code> property is not applicable for the <code>SmartField<\/code> control for units of measure use cases.","!category":"enum","!type":"sap.ui.core.TextDirection"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"textLabel":{"!description":"This property contains the text of an associated <code>SmartLabel<\/code>.","!category":"enum","!type":"String"},"supportMultiSelect":{"!description":"Enables multiple selection in value help dialog.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fetchValueListReadOnly":{"!description":"Indicates whether the value list collection is fetched in display mode from the resource path specified in the <code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotation.\n\nThis collection data is used to infer a descriptive text for the value of the <code>SmartField<\/code> control. However, fetching the value list collection for every <code>SmartField<\/code> instance individually may not be ideal in some performance-critical scenarios. To optimize this default behavior, you can set this property to <code>false<\/code> and provide the <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation, which is used to specify the URL path name to the Entity Data Model (EDM) property from which the descriptive text for the value of the <code>SmartField<\/code> control is fetched, for example, LT (Laptop).\n\n<b>Note:<\/b> Setting this property to <code>false<\/code> only has an effect if the <code>value<\/code> property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code>. In addition, applications or frameworks have to make sure the descriptive text is fetched, for example, by expanding a navigation property.","!category":"enum","!type":"Boolean"},"enableODataSelect":{"!description":"Enables specific properties to be provided in the select query.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Text shown when no value available.","!category":"enum","!type":"String"},"value":{"!description":"The binding path expression used to determine the bound Entity Data Model (EDM) property.\n\n<b>Note:<\/b> Composite binding expressions for this property are not supported. <b>Note:<\/b> Custom formatters for this property are not supported. The <code>SmartField<\/code> control usually creates its own data type based on the service metadata for the formatting of values. Also, when a custom formatter is specified for a property, the binding mode is automatically switched to one-way binding mode. <b>Note:<\/b> Named models are not supported, only the default model (named undefined) is supported. For example, when the binding path expression contains a <code>&gt;<\/code> sign, the string preceding it is a named model and the remainder after the <code>&gt;<\/code> is the binding path.","!category":"enum","!type":"Object"},"tooltipLabel":{"!description":"This property contains the tool tip of the associated <code>SmartLabel<\/code> control.","!category":"enum","!type":"String"},"fixedValueListValidationEnabled":{"!description":"If the property is set to <code>true<\/code>, a standard validation for {@link sap.m.ComboBox} is performed. An inner control {@link sap.m.ComboBox} is created and the binding is to <code>selectedKey<\/code>. Changes at runtime are not reflected.\n\n<b>Note:<\/b> This property switches the control in legacy mode. If set to <code>true<\/code> this will override any setting to <code>textInEditModeSource<\/code> property regarding ComboBox validation.\n\n<b>Note:<\/b> If the property is set to <code>false<\/code>, the inner control is {@link sap.ui.comp.smartfield.ComboBox} and the binding is to <code>enteredValue<\/code>. In this case, any entered value is valid irrespective of whether it's in the predefined list or not.\n\n<b>Note:<\/b> This property is applicable only for fixed-value scenarios.","!category":"enum","!type":"Boolean"},"requestAtLeastFields":{"!description":"Enables requestAtLeast properties to be added additionally when enableODataSelect is set to True. These are comma-separated value of fields that must be requested from the backend.","!category":"enum","!type":"String"},"contextEditable":{"!description":"Notifies the control whether controls using the <code>SmartField<\/code> control are editable.","!category":"enum","!type":"Boolean"},"editable":{"!description":"Indicates whether the control is in display or edit mode.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"valueHelpTitleSource":{"!description":"Controls if the title is taken from the label of the main property or from the label of the value list.","!category":"enum","!type":"sap.ui.comp.smartfield.ValueHelpTitleSource"},"url":{"!description":"Contains a URL which is used to render a link. The link is rendered, if the OData property, to which the value property of the control is bound, is of type <code>Edm.String<\/code> and the <code>SmartField<\/code> is in display mode.","!category":"enum","!type":"String"},"suppressEmptyStringRequest":{"!description":"Controls if a query is sent to the backend in case of an empty string.","!category":"enum","!type":"Boolean"},"showValueStateMessage":{"!description":"Defines whether the value state message is shown or not.","!category":"enum","!type":"Boolean"},"expandNavigationProperties":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.117 It is recommended the expand to be using the OData Model.<br>Indicates if entities related to navigation properties inside the metadata are requested. If set to <code>true<\/code>, then these related entities are loaded with an <code>$expand<\/code> request.\n\nAnnotations that can have navigation properties are the following: <ul> <li> <code>com.sap.vocabularies.Common.v1.Text<\/code> for text arrangements <li> <code>Org.OData.Measures.V1.Unit<\/code> and <code>Org.OData.Measures.V1.ISOCurrency<\/code> for units <li> <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> for field control <\/ul>\n\n<b>Note:<\/b> Independent of the <code>fetchValueListReadOnly<\/code> value, setting this flag to <code>true<\/code> requests data from the backend.\n\n<b>Note:<\/b> The back-end request to expand the navigation properties is sent only if the entity to which <code>SmartField<\/code> is bound is persisted. For transient entities, there is no back-end request since no such data is available.","!category":"enum","!type":"Boolean"},"jsontype":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31.0 with no replacement.<br>Data types to be used, if the <code>SmartField<\/code> control is interacting with a JSON model. If the value property of the control is bound to a property of an OData entity set, this property is not taken into consideration.","!category":"enum","!type":"sap.ui.comp.smartfield.JSONType"},"singleTokenMode":{"!description":"Allows only one token to be added to the SmartMultiInput. Works only in No Data Binding Scenario.","!category":"enum","!type":"Boolean"},"width":{"!description":"Defines the width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"uomVisible":{"!description":"Indicates whether the unit of measure field is visible.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this property can be ignored if the bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.","!category":"enum","!type":"Boolean"},"uomEditState":{"!description":"This property is for internal use only.","!category":"enum","!type":"Number"},"supportRanges":{"!description":"Enables value help with conditions. Can only be used without binding context. Otherwise, has no effect.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smarttable.ExportType":{"!description":"Provides the type of services available for export in the <code>SmartTable<\/code> control.","GW":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 undefined<br>Gateway backend spreadsheet export service is used","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","UI5Client":{"!description":"UI5 client-side spreadsheet export service is used","!category":"enum","!type":"String"},"UI5ClientPDF":{"!description":"UI5 client-side spreadsheet export service is used along with Gateway backend PDF export service.","!category":"enum","!type":"String"}},"sap.ui.comp.smartlist":{"selectFields":{"!description":"CSV of fields that must be selected when request is sent to the backend.<br> <i>Note:<\/i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel<\/code>.","!category":"enum","!type":"String"},"displayInline":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"listBindingPath":{"!description":"Specifies the path that is used during the binding of the list. If not specified, the <code>entitySet<\/code> property is used instead. (used only if binding is done automatically or when using <code>rebindList<\/code>)","!category":"enum","!type":"String"},"expandFields":{"!description":"CSV of fields that must be expanded when request is sent to the backend.<br> <i>Note:<\/i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel<\/code>.","!category":"enum","!type":"String"},"!category":"namespace","listType":{"!description":"Specifies the type of list to be created in the <code>SmartList<\/code> control.<br> <i>Note:<\/i><br> If you add a <code>List<\/code> or <code>Tree<\/code> to the content of the <code>SmartList<\/code> control in the view, this property has no effect.","!category":"enum","!type":"sap.ui.comp.smartlist.ListType"},"alignContent":{"!description":"Determines the layout behavior of container lines when there's extra space along the cross-axis.","!category":"enum","!type":"sap.m.FlexAlignContent"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"renderType":{"!description":"Determines whether the layout is rendered as a series of divs or as an unordered list (ul).<br> <br> <b>Note:<\/b> We recommend to use <code>Bare<\/code> in most cases to avoid layout issues due to browser inconsistencies.","!category":"enum","!type":"sap.m.FlexRendertype"},"height":{"!description":"The height of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"direction":{"!description":"Determines the direction of the layout of child elements.","!category":"enum","!type":"sap.m.FlexDirection"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"alignItems":{"!description":"Determines the layout behavior of items along the cross-axis.","!category":"enum","!type":"sap.m.FlexAlignItems"},"entitySet":{"!description":"The entity set name from which to fetch data.<br> <i>Note:<\/i><br> This is not a dynamic UI5 property.","!category":"enum","!type":"String"},"showFullScreenButton":{"!description":"Controls the visibility of the full screen button.","!category":"enum","!type":"Boolean"},"justifyContent":{"!description":"Determines the layout behavior along the main axis.","!category":"enum","!type":"sap.m.FlexJustifyContent"},"showRowCount":{"!description":"The number of rows is shown along with the header text if the property <code>showRowCount<\/code> is set to <code>true<\/code>.\n\n<b>Note:<\/b> <ul> <li>To improve your application's performance, activate the inline count for OData bindings to avoid sending dedicated OData requests.<\/li> <li>If no stable overall count can be retrieved from the binding, the count will not be displayed. This is currently the case for TreeBinding or if no count is requested by the binding.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"enableAutoBinding":{"!description":"When set to <code>true<\/code>, this enables automatic binding of the list using the <code>listBindingPath<\/code> (if it exists) or <code>entitySet<\/code> property. This happens right after the <code>initialise<\/code> event has been fired.","!category":"enum","!type":"Boolean"},"width":{"!description":"The width of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined.","!category":"enum","!type":"sap.ui.core.CSSSize"},"header":{"!description":"Specifies header text that is shown in list.","!category":"enum","!type":"String"},"SmartList":"sap.ui.comp.smartlist.SmartList_obj","wrap":{"!description":"Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.","!category":"enum","!type":"sap.m.FlexWrap"},"backgroundDesign":{"!description":"Defines the background style of the <code>sap.m.FlexBox<\/code>.","!category":"enum","!type":"sap.m.BackgroundDesign"},"fitContainer":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartvariants.SmartVariantManagementUi2":{"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself.\n\nThis event is fired when a new variant is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself.\n\nThis event is fired when the Save Variant dialog is closed with OK for a variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"clearVariantSelection":{"!description":"Removes the current variant selection and resets to default value.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","getTitleStyle":{"!description":"Gets current value of property {@link #getTitleStyle titleStyle}.\n\nDefines the style of the title. For more information, see {@link sap.m.Title#setTitleStyle}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.core.TitleLevel) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"sHeaderLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"destroyPersonalizableControl":{"!description":"Destroys the personalizableControl in the aggregation {@link #getPersonalizableControl personalizableControl}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.SmartVariantManagementUi2"},"getMaxWidth":{"!description":"Gets current value of property {@link #getMaxWidth maxWidth}.\n\nSets the maximum width of the control.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new SmartVariantManagementUi2.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getStandardItemText standardItemText} : string<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getTitleStyle titleStyle} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersonalizableControl personalizableControl} : sap.ui.comp.smartvariants.PersonalizableInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterSave afterSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:manage manage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getStandardItemText":{"!description":"Gets current value of property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title.","!static":false,"!category":"function","!type":"fn() -> String"},"setPersonalizableControl":{"!description":"Sets the aggregated {@link #getPersonalizableControl personalizableControl}.","!static":false,"!category":"function","!type":"fn(oPersonalizableControl: sap.ui.comp.smartvariants.PersonalizableInfo) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oPersonalizableControl":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: The personalizableControl to set"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCurrentVariantId":{"!description":"Sets the current variant ID. In case an invalid ID is passed, a standard variant is set.","!static":false,"!category":"function","!type":"fn(sVariantId: String, bDoNotApplyVariant: Boolean)","parameters":{"sVariantId":"type: string, description: ID of the variant","bDoNotApplyVariant":"type: boolean, description: If set to <code>true<\/code>, the <code>applyVariant<\/code> method is not executed yet. Relevant during navigation, when called before the initialise event has be executed"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"initialise":{"!description":"Initializes the UI2 personalization layer by retrieving the list of variants. Once the initialization has been completed, the control for personalization is informed via the initialise event.","!static":false,"!category":"function","!type":"fn()"},"setStandardItemText":{"!description":"Sets a new value for property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStandardItemText?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"sStandardItemText":"type: string, description: New value for property <code>standardItemText<\/code>"}},"getVariantItems":{"!description":"Returns all known variant items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.variants.VariantItem]"},"!description":"The SmartVariantManagementUi2 control communicates with the Ui2 personalization layer to manage the variants.","fireInitialise":{"!description":"Fires event {@link #event:initialise initialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementUi2.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isPageVariant":{"!description":"Determines if the control instance is a page variant.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentVariantId":{"!description":"Retrieves the current variant ID. For a standard variant, an empty string is returned.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxWidth":{"!description":"Sets a new value for property {@link #getMaxWidth maxWidth}.\n\nSets the maximum width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxWidth?: sap.ui.core.CSSSize) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"addPersonalizableControl":{"!description":"Registers all controls interested and relying on variant handling. Each control has to be registered separately.","!static":false,"!category":"function","!type":"fn(oCurrentControlInfo: sap.ui.comp.smartvariants.PersonalizableInfo) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oCurrentControlInfo":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: control providing the required aggregation for flex-layer"}},"getPersonalizableControl":{"!description":"Gets content of aggregation {@link #getPersonalizableControl personalizableControl}.\n\nAll controls that rely on variant handling have to be added to this aggregation. The only consumer currently known is the <code>FilterBar<\/code> control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.PersonalizableInfo"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementUi2 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself.\n\nOnce the <code>SmartVariantManagementUi2<\/code> control has been initialized, and especially after retrieving the variants via the UI2 personalization service and the default variant was applied, the registered consumer will be notified that this phase has completed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setTitleStyle":{"!description":"Sets a new value for property {@link #getTitleStyle titleStyle}.\n\nDefines the style of the title. For more information, see {@link sap.m.Title#setTitleStyle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleStyle?: sap.ui.core.TitleLevel) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"sTitleStyle":"type: sap.ui.core.TitleLevel, description: New value for property <code>titleStyle<\/code>"}},"!module":"sap/ui/comp/smartvariants/SmartVariantManagementUi2","!helpDescription":"The SmartVariantManagementUi2 control communicates with the Ui2 personalization layer to manage the variants.","detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireAfterSave":{"!description":"Fires event {@link #event:afterSave afterSave} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachManage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:manage manage} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachManage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:manage manage} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself.\n\nThis event is fired when users apply changes to variants in the Manage Variants dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachAfterSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself.\n\nFired after a variant is saved. This event can be used to retrieve the id of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementUi2","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementUi2<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getVariantContent":{"!description":"Retrieves the variant content.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, sKey: String) -> Object","parameters":{"sKey":"type: string, description: the variant key","oControl":"type: sap.ui.core.Control, description: current control"}}},"sap.ui.comp.smarttable.SmartTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smarttable.SmartTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smarttable.SmartTable"},"sap.ui.comp.config.FilterControlConfiguration":{"!description":"The <code>FilterControlConfiguration<\/code> can be used to generate the dynamic date range control used for filtering the smart table.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.config.FilterControlConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.config.ControlConfigurationBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.config.FilterControlConfiguration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FilterControlConfiguration<\/code>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.comp.config.ControlConfigurationBase#constructor sap.ui.comp.config.ControlConfigurationBase} can be used.","!module":"sap/ui/comp/config/FilterControlConfiguration","!helpDescription":"The <code>FilterControlConfiguration<\/code> can be used to generate the dynamic date range control used for filtering the smart table.","!proto":"sap.ui.comp.config.ControlConfigurationBase","!category":"class"},"sap.ui.comp.navpopover.NavigationPopoverHandler_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopoverHandler with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.NavigationPopoverHandler"},"sap.ui.comp.variants.VariantItem":{"setExecuteOnSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Sets a new value for property {@link #getExecuteOnSelection executeOnSelection}.\n\nAttribute for usage in <code>SmartFilterBar<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExecuteOnSelection?: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bExecuteOnSelection":"type: boolean, description: New value for property <code>executeOnSelection<\/code>"}},"getLifecyclePackage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Gets current value of property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP package the variant is assigned to. Used for transport functionality.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Sets a new value for property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessOptions?: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sAccessOptions":"type: string, description: New value for property <code>accessOptions<\/code>"}},"!proto":"sap.m.VariantItem","!category":"class","setLifecyclePackage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Sets a new value for property {@link #getLifecyclePackage lifecyclePackage}.\n\nABAP package the variant is assigned to. Used for transport functionality.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecyclePackage?: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sLifecyclePackage":"type: string, description: New value for property <code>lifecyclePackage<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.comp.variants.VariantItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setGlobal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Sets a new value for property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bGlobal?: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bGlobal":"type: boolean, description: New value for property <code>global<\/code>"}},"!constructorDescription":"Constructor for a new variants/VariantItem.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExecuteOnSelection executeOnSelection} : boolean (default: false)<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<li>{@link #getLifecycleTransportId lifecycleTransportId} : string<\/li>\n<li>{@link #getGlobal global} : boolean<\/li>\n<li>{@link #getLifecyclePackage lifecyclePackage} : string<\/li>\n<li>{@link #getNamespace namespace} : string<\/li>\n<li>{@link #getAccessOptions accessOptions} : string<\/li>\n<li>{@link #getLabelReadOnly labelReadOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.VariantItem#constructor sap.m.VariantItem}\ncan be used as well.","getGlobal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Gets current value of property {@link #getGlobal global}.\n\nIndicator if a variant is visible for all users.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The VariantItem class describes a variant item.","setLabelReadOnly":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Sets a new value for property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant title can be changed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLabelReadOnly?: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bLabelReadOnly":"type: boolean, description: New value for property <code>labelReadOnly<\/code>"}},"getExecuteOnSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Gets current value of property {@link #getExecuteOnSelection executeOnSelection}.\n\nAttribute for usage in <code>SmartFilterBar<\/code>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.variants.VariantItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>labelReadOnly<\/code><br>Gets current value of property {@link #getAccessOptions accessOptions}.\n\nFlags for a variant to indicate why it might be read-only.","!static":false,"!category":"function","!type":"fn() -> String"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.comp.variants.VariantItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantItem<\/code> itself.\n\nThis event is fired when one of the properties is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLifecycleTransportId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Sets a new value for property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLifecycleTransportId?: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sLifecycleTransportId":"type: string, description: New value for property <code>lifecycleTransportId<\/code>"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.variants.VariantItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VariantItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/variants/VariantItem","getLifecycleTransportId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Gets current value of property {@link #getLifecycleTransportId lifecycleTransportId}.\n\nIdentifier of the transport object the variant is assigned to.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The VariantItem class describes a variant item.","getNamespace":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Gets current value of property {@link #getNamespace namespace}.\n\nVariant namespace","!static":false,"!category":"function","!type":"fn() -> String"},"getReadOnly":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Gets current value of property {@link #getReadOnly readOnly}.\n\nIf set to <code>false<\/code>, the user is allowed to change the item's data\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabelReadOnly":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Gets current value of property {@link #getLabelReadOnly labelReadOnly}.\n\nIndicates if the variant title can be changed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNamespace":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Sets a new value for property {@link #getNamespace namespace}.\n\nVariant namespace\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNamespace?: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sNamespace":"type: string, description: New value for property <code>namespace<\/code>"}},"setReadOnly":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 the concept has been discarded.<br>Sets a new value for property {@link #getReadOnly readOnly}.\n\nIf set to <code>false<\/code>, the user is allowed to change the item's data\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadOnly?: Boolean) -> sap.ui.comp.variants.VariantItem","parameters":{"bReadOnly":"type: boolean, description: New value for property <code>readOnly<\/code>"}},"setText":{"!description":"Setter for text property.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.comp.variants.VariantItem","parameters":{"sText":"type: string, description: New text"}}},"sap.ui.comp.navpopover.SemanticObjectController_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SemanticObjectController with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.SemanticObjectController"},"sap.ui.comp.smartlist.SmartList":{"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data.<br> <i>Note:<\/i><br> This is not a dynamic UI5 property.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowFullScreenButton":{"!description":"Sets a new value for property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the full screen button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFullScreenButton?: Boolean) -> sap.ui.comp.smartlist.SmartList","parameters":{"bShowFullScreenButton":"type: boolean, description: New value for property <code>showFullScreenButton<\/code>"}},"isInitialised":{"!description":"Checks whether the control is initialized.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireDataReceived":{"!description":"Fires event {@link #event:dataReceived dataReceived} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to <code>true<\/code>, this enables automatic binding of the list using the <code>listBindingPath<\/code> (if it exists) or <code>entitySet<\/code> property. This happens right after the <code>initialise<\/code> event has been fired.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSelectFields":{"!description":"Sets a new value for property {@link #getSelectFields selectFields}.\n\nCSV of fields that must be selected when request is sent to the backend.<br> <i>Note:<\/i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectFields?: String) -> sap.ui.comp.smartlist.SmartList","parameters":{"sSelectFields":"type: string, description: New value for property <code>selectFields<\/code>"}},"!proto":"sap.m.VBox","setListBindingPath":{"!description":"Sets a new value for property {@link #getListBindingPath listBindingPath}.\n\nSpecifies the path that is used during the binding of the list. If not specified, the <code>entitySet<\/code> property is used instead. (used only if binding is done automatically or when using <code>rebindList<\/code>)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sListBindingPath?: String) -> sap.ui.comp.smartlist.SmartList","parameters":{"sListBindingPath":"type: string, description: New value for property <code>listBindingPath<\/code>"}},"!category":"class","attachBeforeRebindList":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeRebindList beforeRebindList} event of this <code>sap.ui.comp.smartlist.SmartList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartlist.SmartList<\/code> itself.\n\nEvent fired right before the binding is being done.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartlist.SmartList<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSelectFields":{"!description":"Gets current value of property {@link #getSelectFields selectFields}.\n\nCSV of fields that must be selected when request is sent to the backend.<br> <i>Note:<\/i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getExpandFields":{"!description":"Gets current value of property {@link #getExpandFields expandFields}.\n\nCSV of fields that must be expanded when request is sent to the backend.<br> <i>Note:<\/i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.comp.smartlist.SmartList","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in list.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowRowCount":{"!description":"Gets current value of property {@link #getShowRowCount showRowCount}.\n\nThe number of rows is shown along with the header text if the property <code>showRowCount<\/code> is set to <code>true<\/code>.\n\n<b>Note:<\/b> <ul> <li>To improve your application's performance, activate the inline count for OData bindings to avoid sending dedicated OData requests.<\/li> <li>If no stable overall count can be retrieved from the binding, the count will not be displayed. This is currently the case for TreeBinding or if no count is requested by the binding.<\/li> <\/ul>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new smartlist/SmartList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getSelectFields selectFields} : string<\/li>\n<li>{@link #getExpandFields expandFields} : string<\/li>\n<li>{@link #getShowRowCount showRowCount} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getListBindingPath listBindingPath} : string<\/li>\n<li>{@link #getListType listType} : sap.ui.comp.smartlist.ListType<\/li>\n<li>{@link #getShowFullScreenButton showFullScreenButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getListItemTemplate listItemTemplate} : sap.m.ListItemBase<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSmartFilter smartFilter} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRebindList beforeRebindList} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataReceived dataReceived} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.VBox#constructor sap.m.VBox}\ncan be used as well.","getList":{"!description":"Returns the <code>List<\/code> or <code>Tree<\/code> used internally.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachBeforeRebindList":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeRebindList beforeRebindList} event of this <code>sap.ui.comp.smartlist.SmartList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setExpandFields":{"!description":"Sets a new value for property {@link #getExpandFields expandFields}.\n\nCSV of fields that must be expanded when request is sent to the backend.<br> <i>Note:<\/i><br> No validation is done. Please ensure that you do not add spaces or special characters.<br> This property is only needed when used together with an <code>ODataModel<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sExpandFields?: String) -> sap.ui.comp.smartlist.SmartList","parameters":{"sExpandFields":"type: string, description: New value for property <code>expandFields<\/code>"}},"rebindList":{"!description":"This can be used to trigger binding on the list used in the SmartList","!static":false,"!category":"function","!type":"fn(bForceRebind: Boolean)","parameters":{"bForceRebind":"type: boolean, description: force bind call to be triggered on the inner list"}},"!description":"A smart control to simplify using the <code>sap.m.List<\/code> and <code>sap.m.Tree<\/code> controls in list patterns. <h3>Overview<\/h3> The <code>SmartList<\/code> control creates a list or tree based on the configuration specified. There is, however, a difference to other smart controls: This control does not use annotations to automatically create its content. Hence, a template must always be provided for this control. <h3>Structure<\/h3> The <code>SmartList<\/code> control consists of the following elements: <ul> <li> <code>OverflowToolbar<\/code> control: Displays the header and other action buttons. Users can add their own toolbar and buttons in the view.<\/li> <li> <code>List<\/code> or <code>Tree<\/code> control: The actual list/tree control. Users can also add this in the view with the required configuration.<\/li> <\/ul> The <code>entitySet<\/code> property must be specified to use the control. This attribute is used to fetch the actual data.<br> The <code>listItemTemplate<\/code> aggregation must also be specified with the required item template, such as <code>StandardListItem/StandardTreeItem<\/code>, which will be used during binding. <h3><b>Note:<\/b><\/h3> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","getListType":{"!description":"Gets current value of property {@link #getListType listType}.\n\nSpecifies the type of list to be created in the <code>SmartList<\/code> control.<br> <i>Note:<\/i><br> If you add a <code>List<\/code> or <code>Tree<\/code> to the content of the <code>SmartList<\/code> control in the view, this property has no effect.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartlist.ListType"},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to <code>true<\/code>, this enables automatic binding of the list using the <code>listBindingPath<\/code> (if it exists) or <code>entitySet<\/code> property. This happens right after the <code>initialise<\/code> event has been fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smartlist.SmartList","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"setEntitySet":{"!description":"Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data.<br> <i>Note:<\/i><br> This is not a dynamic UI5 property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet?: String) -> sap.ui.comp.smartlist.SmartList","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"fireInitialise":{"!description":"Fires event {@link #event:initialise initialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartlist.SmartList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartlist.SmartList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"destroyListItemTemplate":{"!description":"Destroys the listItemTemplate in the aggregation {@link #getListItemTemplate listItemTemplate}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartlist.SmartList"},"getSmartFilter":{"!description":"ID of the element which is the current target of the association {@link #getSmartFilter smartFilter}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"fireBeforeRebindList":{"!description":"Fires event {@link #event:beforeRebindList beforeRebindList} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setSmartFilter":{"!description":"Sets the associated {@link #getSmartFilter smartFilter}.","!static":false,"!category":"function","!type":"fn(oSmartFilter: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartlist.SmartList","parameters":{"oSmartFilter":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this smartFilter association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartlist.SmartList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachDataReceived":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartlist.SmartList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"exit":{"!description":"Cleans up the control","!static":false,"!category":"function","!type":"fn()"},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartlist.SmartList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartlist.SmartList<\/code> itself.\n\nEvent fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartlist.SmartList<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/comp/smartlist/SmartList","!helpDescription":"A smart control to simplify using the <code>sap.m.List<\/code> and <code>sap.m.Tree<\/code> controls in list patterns. <h3>Overview<\/h3> The <code>SmartList<\/code> control creates a list or tree based on the configuration specified. There is, however, a difference to other smart controls: This control does not use annotations to automatically create its content. Hence, a template must always be provided for this control. <h3>Structure<\/h3> The <code>SmartList<\/code> control consists of the following elements: <ul> <li> <code>OverflowToolbar<\/code> control: Displays the header and other action buttons. Users can add their own toolbar and buttons in the view.<\/li> <li> <code>List<\/code> or <code>Tree<\/code> control: The actual list/tree control. Users can also add this in the view with the required configuration.<\/li> <\/ul> The <code>entitySet<\/code> property must be specified to use the control. This attribute is used to fetch the actual data.<br> The <code>listItemTemplate<\/code> aggregation must also be specified with the required item template, such as <code>StandardListItem/StandardTreeItem<\/code>, which will be used during binding. <h3><b>Note:<\/b><\/h3> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","setListItemTemplate":{"!description":"Sets the aggregated {@link #getListItemTemplate listItemTemplate}.","!static":false,"!category":"function","!type":"fn(oListItemTemplate: sap.m.ListItemBase) -> sap.ui.comp.smartlist.SmartList","parameters":{"oListItemTemplate":"type: sap.m.ListItemBase, description: The listItemTemplate to set"}},"setShowRowCount":{"!description":"Sets a new value for property {@link #getShowRowCount showRowCount}.\n\nThe number of rows is shown along with the header text if the property <code>showRowCount<\/code> is set to <code>true<\/code>.\n\n<b>Note:<\/b> <ul> <li>To improve your application's performance, activate the inline count for OData bindings to avoid sending dedicated OData requests.<\/li> <li>If no stable overall count can be retrieved from the binding, the count will not be displayed. This is currently the case for TreeBinding or if no count is requested by the binding.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRowCount?: Boolean) -> sap.ui.comp.smartlist.SmartList","parameters":{"bShowRowCount":"type: boolean, description: New value for property <code>showRowCount<\/code>"}},"getShowFullScreenButton":{"!description":"Gets current value of property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the full screen button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getListBindingPath":{"!description":"Gets current value of property {@link #getListBindingPath listBindingPath}.\n\nSpecifies the path that is used during the binding of the list. If not specified, the <code>entitySet<\/code> property is used instead. (used only if binding is done automatically or when using <code>rebindList<\/code>)","!static":false,"!category":"function","!type":"fn() -> String"},"attachDataReceived":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartlist.SmartList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartlist.SmartList<\/code> itself.\n\nEvent fired when data is received after binding. The event is usually only fired if the binding for the list is done by the <code>SmartList<\/code> control itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartlist.SmartList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartlist.SmartList<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getListItemTemplate":{"!description":"Gets content of aggregation {@link #getListItemTemplate listItemTemplate}.\n\nSpecifies the template that is used for the inner <code>List<\/code> or <code>Tree<\/code> control.<br> <b>Note:<\/b><br> This template is used when binding the <code>items<\/code> of <code>sap.m.List<\/code> or <code>sap.m.Tree<\/code> control, and will not be available in the <code>SmartList<\/code> control once the binding has been done.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListItemBase"},"setListType":{"!description":"Sets a new value for property {@link #getListType listType}.\n\nSpecifies the type of list to be created in the <code>SmartList<\/code> control.<br> <i>Note:<\/i><br> If you add a <code>List<\/code> or <code>Tree<\/code> to the content of the <code>SmartList<\/code> control in the view, this property has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sListType?: sap.ui.comp.smartlist.ListType) -> sap.ui.comp.smartlist.SmartList","parameters":{"sListType":"type: sap.ui.comp.smartlist.ListType, description: New value for property <code>listType<\/code>"}}},"sap.ui.comp.smartvariants.SmartVariantManagementAdapter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementAdapter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.SmartVariantManagementAdapter"},"sap.ui.comp.smartmultiinput.SmartMultiInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmultiinput.SmartMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartfield.SmartField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmultiinput.SmartMultiInput"},"sap.ui.comp.smartmultiedit.Field_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmultiedit.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmultiedit.Field"},"sap.ui.comp.personalization.AggregationRole":{"!description":"Provides enumeration sap.ui.comp.personalization.AggregationRole. A subset of aggregation roles used in table personalization.","NotDimeasure":{"!description":"Role which is neither dimension nor measure.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","Measure":{"!description":"Measure role.","!category":"enum","!type":"String"},"!category":"static class","Dimension":{"!description":"Dimension role.","!category":"enum","!type":"String"}},"sap.ui.comp.util":{"!category":"namespace","TableUtil":"sap.ui.comp.util.TableUtil","SharedUtil":"sap.ui.comp.util.SharedUtil"},"sap.ui.comp.smartlist.ListType":{"!description":"Provides enumeration sap.ui.comp.smartlist.ListType. A subset of list types that fit to a simple API returning one string.","!module":"sap/ui/comp/library","Tree":{"!description":"A tree (sap.m.Tree) control shall be created as the content of the SmartList, if no list/tree already exists","!category":"enum","!type":"String"},"!category":"static class","List":{"!description":"A list (sap.m.List) control shall be created as the content of the SmartList, if no list already exists (default)","!category":"enum","!type":"String"}},"sap.ui.comp.smartfilterbar.DisplayBehaviour":{"!description":"The different options to define display behavior for fields in the SmartFilter control.","auto":{"!description":"Shows values based on metadata.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","idOnly":{"!description":"Shows only the id for values.","!category":"enum","!type":"String"},"descriptionAndId":{"!description":"Shows description and then an id in values.","!category":"enum","!type":"String"},"descriptionOnly":{"!description":"Shows only the description for values.","!category":"enum","!type":"String"},"!category":"static class","idAndDescription":{"!description":"Shows id and then a description in values.","!category":"enum","!type":"String"}},"sap.ui.comp.smartform":{"columnsXL":{"!description":"Number of columns for extra large size.<br> The number of columns for extra large size must not be smaller than the number of columns for large size.","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"checkButton":{"!description":"Specifies whether a check button is added to the toolbar.","!category":"enum","!type":"Boolean"},"singleGroupFullSize":{"!description":"If the <code>SmartForm<\/code> contains only one single Group and this property is set, the Group is displayed using the full size of the <code>SmartForm<\/code>. In this case the properties <code>columnsL<\/code> and <code>columnsM<\/code> are ignored.<br> In all other cases the Group is displayed in the size of one column.","!category":"enum","!type":"Boolean"},"delimiter":{"!description":"Delimiter symbol to separate the fields.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"horizontalLayoutGroupElementMinWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please do not use this property as it does not have any effect on the current layout of the <code>SmartForm<\/code> control.<br>Specifies the minimal size in pixels of all group elements of the form if the horizontal layout is used.","!category":"enum","!type":"Number"},"labelSpanXL":{"!description":"Default span for labels in extra large size.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"entityType":{"!description":"CSV of entity types for which the flexibility features are available.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!category":"enum","!type":"String"},"_editable":{"!description":"Internal property for the <code>editable<\/code> state of the internal <code>FormElement<\/code>.","!category":"enum","!type":"Boolean"},"labelSpanM":{"!description":"Default span for labels in medium size. This property is used for full size containers. If more than one Container is in one line, <code>labelSpanL<\/code> is used.","!category":"enum","!type":"Number"},"labelSpanL":{"!description":"Default span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in the line the <code>labelSpanM<\/code> value is used.","!category":"enum","!type":"Number"},"emptySpanXL":{"!description":"Number of grid cells that are empty at the end of each line on extra large size.","!category":"enum","!type":"Number"},"labelSpanS":{"!description":"Default span for labels in small size.","!category":"enum","!type":"Number"},"ColumnLayout":"sap.ui.comp.smartform.ColumnLayout_obj","labelCellsLarge":{"!description":"Defines how many cells a label uses if the column is large.","!category":"enum","!type":"sap.ui.layout.form.ColumnCells"},"useHorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.86 replaced by {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} in the <code>layout<\/code> aggregation.<br>Specifies whether the groups are rendered in a {@link sap.ui.layout.form.ResponsiveLayout ResponsiveLayout} with the label above the field. Each group is rendered in a new line.\n\n<b>Note:<\/b> This property should no longer be used. To arrange the fields in columns, {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} should be used in the <code>layout<\/code> aggregation.\n\n<b>Note:<\/b> The value of this property will be passed on to the <code>useHorizontalLayout<\/code> property of all <code>Group<\/code> and <code>GroupElement<\/code> elements.","!category":"enum","!type":"Boolean"},"Group":"sap.ui.comp.smartform.Group_obj","SemanticGroupElement":"sap.ui.comp.smartform.SemanticGroupElement_obj","breakpointL":{"!description":"Breakpoint (in pixel) between Medium size and Large size.","!category":"enum","!type":"Number"},"expandable":{"!description":"Specifies whether the control is expandable. Per default the control is not rendered as expanded.","!category":"enum","!type":"Boolean"},"emptySpanM":{"!description":"Number of grid cells that are empty at the end of each line on medium size.","!category":"enum","!type":"Number"},"breakpointM":{"!description":"reakpoint (in pixel) between Small size and Medium size.","!category":"enum","!type":"Number"},"emptySpanL":{"!description":"Number of grid cells that are empty at the end of each line on large size.","!category":"enum","!type":"Number"},"importance":{"!description":"Specifies which smart fields will be visible inside the <code>SmartForm<\/code>.\n\nIf set to <b>high<\/b>, only smart fields with high importance will be visible.\n\nIf set to <b>medium<\/b>, only smart fields with high and medium importance will be visible.\n\nIf set to <b>low<\/b> (default), all the smart fields will be visible regardless of their importance.\n\n<b>Note<b>: If a smart field is annotated as mandatory or hidden, its visibility will not be affected by the <code>importance<\/code> property.","!category":"enum","!type":"sap.ui.comp.smartform.Importance"},"GroupElement":"sap.ui.comp.smartform.GroupElement_obj","columnsM":{"!description":"Number of columns for medium size.","!category":"enum","!type":"Number"},"!category":"namespace","elementForLabel":{"!description":"Index of element to be used for label determination","!category":"enum","!type":"Number"},"emptyCellsLarge":{"!description":"Defines how many cells are empty at the end of a row. This could be used to keep the fields small on large screens.","!category":"enum","!type":"sap.ui.layout.form.EmptyCells"},"title":{"!description":"Title of the form.\n\n<b>Note:<\/b> The title is rendered with a theme-dependent default level. As the <code>SmartForm<\/code> control cannot know the structure of the page, this might not fit the page structure. In this case provide the title using a {@link sap.m.Title Title} control and set its {@link sap.m.Title#setLevel level} to the required value. Add this title to a {@link sap.m.Toolbar Toolbar} control and assign it to the <code>SmartForm<\/code> using the <code>customToolbar<\/code> aggregation.","!category":"enum","!type":"String"},"emptySpanS":{"!description":"Number of grid cells that are empty at the end of each line on small size.","!category":"enum","!type":"Number"},"expanded":{"!description":"If expandable, this property indicates whether the state is expanded or not. If expanded, then the toolbar (if available) and the content is rendered; if expanded is false, then only the headerText/headerToolbar is rendered.","!category":"enum","!type":"Boolean"},"gridDataSpan":{"!description":"A string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.<br> The value set here will be set to all group elements when used with horizontal layout (<code>SmartForm<\/code> property <code>useHorizontalLayout<\/code>)","!category":"enum","!type":"sap.ui.layout.GridSpan"},"SmartForm":"sap.ui.comp.smartform.SmartForm_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"SmartFormLayout":"sap.ui.comp.smartform.SmartFormLayout","ignoredFields":{"!description":"A list of fields that must not be available in the key-user adaptation dialog. Listed field names are separated by commas.\n\nThe property is designed to be used by SAP Fiori elements, and it\u2019s not evaluated by the <code>SmartForm<\/code> control itself.\n\n<b>Note:<\/b><br> Please ensure that you do not add spaces or special characters as no validation is done for this property.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"columnsL":{"!description":"Number of columns for large size.<br> The number of columns for large size must not be smaller than the number of columns for medium size.","!category":"enum","!type":"Number"},"breakpointXL":{"!description":"Breakpoint (in pixel) between large size and extra large (XL) size.","!category":"enum","!type":"Number"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"editable":{"!description":"Applies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content. If set, all (not only the editable) rows of the form will get the line height of editable fields.\n\nThe labels inside the form will be rendered by default in the according mode.\n\n<b>Note:<\/b> The setting of this property will be passed to all <code>SmartField<\/code> controls inside the form, so they will be editable if the form is editable.\n\n<b>Warning:<\/b> The setting of this property will not be passed to controls other than <code>SmartField<\/code>. For example, <code>Input<\/code> controls in a form with <code>editable<\/code> set to <code>false<\/code> are still editable.\n\nIf controls other than <code>SmartField<\/code> controls are used, and the edit mode of their control is not set correctly, this might lead to visual issues. The labels and fields might be misaligned, the labels might be rendered in the wrong mode, and the spacing between the single controls might be wrong. Also, controls that do not fit the mode might be rendered incorrectly.","!category":"enum","!type":"Boolean"},"editTogglable":{"!description":"If set to <code>true<\/code>, a button to toggle the <code>editable<\/code> property is shown in the toolbar.","!category":"enum","!type":"Boolean"},"flexEnabled":{"!description":"Specifies whether the form enables flexibility features, such as adding new fields.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.","!category":"enum","!type":"Boolean"},"label":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.88 replaced by <code>title<\/code> aggregation.<br>Label for the group.","!category":"enum","!type":"String"},"validationMode":{"!description":"Controls the SmartForm validation mode. The default mode handles only nested <code>SmartField<\/code> controls with synchronous validation. If the <code>SmartForm<\/code> should also handle controls with asynchronous validation the property should be set to <code>Async<\/code> mode which is the recommended mode to be used as all types of nested fields validation are handled.\n\nNote: Using <code>Async<\/code> mode the method <code>check<\/code> will return a promise instead of an array.\n\nNote: Using <code>Async<\/code> mode the event <code>checked<\/code> will be called asynchronously when all the nested <code>SmartField<\/code> validations are executed.","!category":"enum","!type":"sap.ui.comp.smartform.SmartFormValidationMode"},"Layout":"sap.ui.comp.smartform.Layout_obj"},"sap.ui.comp.valuehelpdialog":{"role":{"!description":"Specifies the ARIA role of the Dialog. If the state of the control is \"Error\" or \"Warning\" the role will be \"AlertDialog\" regardless of what is set.","!category":"enum","!type":"sap.m.DialogRoleType"},"horizontalScrolling":{"!description":"Indicates if the user can scroll horizontally inside the Dialog when the content is bigger than the content area. The Dialog detects if there's <code>sap.m.NavContainer<\/code>, <code>sap.m.Page<\/code>, <code>sap.m.ScrollContainer<\/code> or <code>sap.m.SplitContainer<\/code> as a direct child added to the Dialog. If there is, the Dialog will turn off <code>scrolling<\/code> by setting this property to <code>false<\/code>, automatically ignoring the existing value of the property.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"escapeHandler":{"!description":"This property expects a function with one parameter of type Promise. In the function, you should call either <code>resolve()<\/code> or <code>reject()<\/code> on the Promise object.<br/> The function allows you to define custom behavior which will be executed when the Escape key is pressed. By default, when the Escape key is pressed, the Dialog is immediately closed.","!category":"enum","!type":"fn()"},"keys":{"!description":"Defines the list of additional keys of the column used for the internal key handling.","!category":"enum","!type":"[String]"},"maxIncludeRanges":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84.1 replaced by <code>maxConditions<\/code>.<br>Defines the maximum number of include ranges. If value is 0 - the include group of operators should not be displayed.","!category":"enum","!type":"String"},"conditionPanelDefaultOperation":{"!description":"Sets default operation for Condition Panel of the value help dialog. In case the newly set default operation is not valid for the filter's EDM data type, then it is ignored. expected sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation","!category":"enum","!type":"String"},"icon":{"!description":"Icon displayed in the Dialog header. This <code>icon<\/code> is invisible on the iOS platform and it is density-aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen.","!category":"enum","!type":"sap.ui.core.URI"},"ValueHelpDialog":"sap.ui.comp.valuehelpdialog.ValueHelpDialog_obj","!category":"namespace","title":{"!description":"Title text appears in the Dialog header. <br/><b>Note:<\/b> The heading level of the Dialog is <code>H1<\/code>. Headings in the Dialog content should start with <code>H2<\/code> heading level.","!category":"enum","!type":"String"},"type":{"!description":"The <code>type<\/code> of the Dialog. In some themes, the type Message will limit the Dialog width within 480px on tablet and desktop.","!category":"enum","!type":"sap.m.DialogType"},"supportMultiselect":{"!description":"Enables multi-selection in the table used.","!category":"enum","!type":"Boolean"},"maxExcludeRanges":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84.1 replaced by <code>maxConditions<\/code>.<br>Defines the maximum number of exclude ranges. If value is 0 - the exclude group of operators should not be displayed.","!category":"enum","!type":"String"},"tokenDisplayBehaviour":{"!description":"Represents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour<\/code> values.","!category":"enum","!type":"String"},"_enhancedExcludeOperations":{"!description":"Used by the ValueHelpProvider to enable enhanced exclude operations","!category":"enum","!type":"Boolean"},"stretch":{"!description":"Determines if the Dialog will be stretched to full screen on mobile. On desktop, the Dialog will be stretched to approximately 90% of the viewport. This property is only applicable to a Standard Dialog. Message-type Dialog ignores it.","!category":"enum","!type":"Boolean"},"filterMode":{"!description":"Sets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.","!category":"enum","!type":"Boolean"},"contentWidth":{"!description":"Preferred width of the content in the Dialog. This property affects the width of the Dialog on a phone in landscape mode, a tablet or a desktop, because the Dialog has a fixed width on a phone in portrait mode. If the preferred width is less than the minimum width of the Dialog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of the Dialog width on tablet is 400px.","!category":"enum","!type":"sap.ui.core.CSSSize"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"draggable":{"!description":"Indicates whether the Dialog is draggable. If this property is set to <code>true<\/code>, the Dialog will be draggable by its header. This property has a default value <code>false<\/code>. The Dialog can be draggable only in desktop mode.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"enabledMultiSelectionPlugin":{"!description":"Sets usage of <code>MultiSelectionPlugin<\/code>. If enabled the default behaviour is changed and the <code>ValueHelpDialog<\/code> table uses the plugin which provides only \"Deselect all\" option and the ability for range selection. Also a limit of 200 items that are able to be selected as a restriction.\n\nNote: Using <code>MultiSelectionPlugin<\/code> mode the method <code>update<\/code> will return a promise.","!category":"enum","!type":"Boolean"},"state":{"!description":"Affects the <code>icon<\/code> and the <code>title<\/code> color.\n\nIf a value other than <code>None<\/code> is set, a predefined icon will be added to the Dialog. Setting the <code>icon<\/code> property will overwrite the predefined icon.","!category":"enum","!type":"sap.ui.core.ValueState"},"key":{"!description":"Defines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.","!category":"enum","!type":"String"},"maxConditions":{"!description":"Defines the maximum number of conditions allowed to be added.","!category":"enum","!type":"String"},"stretchOnPhone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.1 Please use the new stretch property instead. This enables a stretched Dialog even on tablet and desktop. If you want to achieve the same effect as <code>stretchOnPhone<\/code>, please set the stretch with <code>Device.system.phone<\/code>, then the Dialog is only stretched when it runs on a phone.<br>Determines whether the Dialog will be displayed on full screen on a phone.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"verticalScrolling":{"!description":"Indicates if the user can scroll vertically inside the Dialog when the content is bigger than the content area. The Dialog detects if there's <code>sap.m.NavContainer<\/code>, <code>sap.m.Page<\/code>, <code>sap.m.ScrollContainer<\/code> or <code>sap.m.SplitContainer<\/code> as a direct child added to the Dialog. If there is, the Dialog will turn off <code>scrolling<\/code> by setting this property to <code>false<\/code>, automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"resizable":{"!description":"Indicates whether the Dialog is resizable. If this property is set to <code>true<\/code>, the Dialog will have a resize handler in its bottom right corner. This property has a default value <code>false<\/code>. The Dialog can be resizable only in desktop mode.","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"Determines whether the header is shown inside the Dialog. If this property is set to <code>false<\/code>, the <code>text<\/code> and <code>icon<\/code> properties are ignored. This property has a default value <code>true<\/code>.","!category":"enum","!type":"Boolean"},"supportRangesOnly":{"!description":"If this property is set to <code>true<\/code>, the value help dialog only supports the ranges (conditions) feature.","!category":"enum","!type":"Boolean"},"descriptionKey":{"!description":"Defines the key of the column used for the token text.","!category":"enum","!type":"String"},"titleAlignment":{"!description":"Specifies the Title alignment (theme specific). If set to <code>TitleAlignment.Auto<\/code>, the Title will be aligned as it is set in the theme (if not set, the default value is <code>center<\/code>); Other possible values are <code>TitleAlignment.Start<\/code> (left or right depending on LTR/RTL), and <code>TitleAlignment.Center<\/code> (centered)","!category":"enum","!type":"sap.m.TitleAlignment"},"basicSearchText":{"!description":"Defines the value for the basic search field. The value is set into the basic search field of the filter bar used.","!category":"enum","!type":"String"},"displayFormat":{"!description":"Represents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.","!category":"enum","!type":"String"},"contentHeight":{"!description":"Preferred height of the content in the Dialog. If the preferred height is bigger than the available space on a screen, it will be overwritten by the maximum available height on a screen in order to make sure that the Dialog isn't cut off.","!category":"enum","!type":"sap.ui.core.CSSSize"},"closeOnNavigation":{"!description":"Indicates whether the Dialog will be closed automatically when a routing navigation occurs.","!category":"enum","!type":"Boolean"},"_conditionPanelCalendarWeekSettings":{"!description":"Used by the ValueHelpProvider to set calendar week setting to date controls in condition panel","!category":"enum","!type":"String"},"supportRanges":{"!description":"Enables the ranges (conditions) feature in the dialog.","!category":"enum","!type":"Boolean"},"_conditionPanelShowCurrentDateButton":{"!description":"Used by the <code>ValueHelpProvider<\/code> to set the <code>showCurrentDateButton<\/code> property settings to the date controls in the condition panel.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.config.FilterControlConfiguration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.config.FilterControlConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.config.ControlConfigurationBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.comp.config.FilterControlConfiguration"},"sap.ui.comp.smartvariants.SmartVariantManagement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartvariants.SmartVariantManagementBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.SmartVariantManagement"},"sap.ui.comp.smartfield.TextInEditModeSource":{"!description":"Enumeration of sources from which text values for <code>Codes<\/code>/<code>IDs<\/code> are fetched in edit mode. The text is usually visualized as description/text value for IDs, for example, for LT (Laptop).","!module":"sap/ui/comp/library","ValueList":{"!description":"The text is fetched from the OData model property specified in the <code>Path<\/code> attribute of the <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation of the associated value list entity.","!category":"enum","!type":"String"},"NavigationProperty":{"!description":"The text is fetched from the OData model property specified in the <code>Path<\/code> attribute of the <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation.","!category":"enum","!type":"String"},"!category":"static class","ValueListWarning":{"!description":"The same behavior as ValueListNoValidation but for values that are considered invalid a warning message will be created.\n\nNOTE: In this mode when the value is sent to the backend there might be 2 messages for the same field from both frontend and backend validation.","!category":"enum","!type":"String"},"None":{"!description":"The <code>com.sap.vocabularies.UI.v1.TextArrangement<\/code> annotation and the value of the <code>displayBehaviour<\/code> property of the <code>configuration<\/code> aggregation are not evaluated.","!category":"enum","!type":"String"},"ValueListNoValidation":{"!description":"The text is fetched from the OData model property specified in the <code>Path<\/code> attribute of the <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation. Could be a value which is not included in the associated value list entity.\n\n<b>Note<\/b> Note that a scenario where more than one <code>SmartField<\/code> is bound to the same property could raise a performance issue depending on the number of the smart fields.","!category":"enum","!type":"String"}},"sap.ui.comp.smartmicrochart.SmartAreaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartAreaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartAreaMicroChart"},"sap.ui.comp.smartvariants.PersonalizableInfo":{"!description":"The PersonalizableInfo class describes the personalizable control associated with the <code>SmartVariantManagement<\/code> control.","getDataSource":{"!description":"Gets current value of property {@link #getDataSource dataSource}.\n\nName of the data service","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.PersonalizableInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"ID of the element which is the current target of the association {@link #getControl control}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!proto":"sap.ui.core.Element","setKeyName":{"!description":"Sets a new value for property {@link #getKeyName keyName}.\n\nDefines the property name of the personalization key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKeyName?: String) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"sKeyName":"type: string, description: New value for property <code>keyName<\/code>"}},"!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDescribes the type of variant management.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType?: String) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"setControl":{"!description":"Sets the associated {@link #getControl control}.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"oControl":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this control association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.PersonalizableInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new smartvariants/PersonalizableInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getDataSource dataSource} : string<\/li>\n<li>{@link #getKeyName keyName} : string<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getControl control} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartvariants/PersonalizableInfo","!helpDescription":"The PersonalizableInfo class describes the personalizable control associated with the <code>SmartVariantManagement<\/code> control.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDescribes the type of variant management.","!static":false,"!category":"function","!type":"fn() -> String"},"setDataSource":{"!description":"Sets a new value for property {@link #getDataSource dataSource}.\n\nName of the data service\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDataSource?: String) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"sDataSource":"type: string, description: New value for property <code>dataSource<\/code>"}},"getKeyName":{"!description":"Gets current value of property {@link #getKeyName keyName}.\n\nDefines the property name of the personalization key.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.smartform.ColumnLayout":{"!description":"If this layout is used in a <code>SmartForm<\/code> control, a <code>ColumnLayout<\/code> control is used to render the <code>Form<\/code> control.\n\n<b>Note:<\/b> If this layout is used, the <code>useHorizontalLayout<\/code> property of the <code>SmartForm<\/code> control must not be set.","getLabelCellsLarge":{"!description":"Gets current value of property {@link #getLabelCellsLarge labelCellsLarge}.\n\nDefines how many cells a label uses if the column is large.\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.ColumnCells"},"setEmptyCellsLarge":{"!description":"Sets a new value for property {@link #getEmptyCellsLarge emptyCellsLarge}.\n\nDefines how many cells are empty at the end of a row. This could be used to keep the fields small on large screens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(sEmptyCellsLarge?: sap.ui.layout.form.EmptyCells) -> sap.ui.comp.smartform.ColumnLayout","parameters":{"sEmptyCellsLarge":"type: sap.ui.layout.form.EmptyCells, description: New value for property <code>emptyCellsLarge<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.ColumnLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setLabelCellsLarge":{"!description":"Sets a new value for property {@link #getLabelCellsLarge labelCellsLarge}.\n\nDefines how many cells a label uses if the column is large.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn(sLabelCellsLarge?: sap.ui.layout.form.ColumnCells) -> sap.ui.comp.smartform.ColumnLayout","parameters":{"sLabelCellsLarge":"type: sap.ui.layout.form.ColumnCells, description: New value for property <code>labelCellsLarge<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.ColumnLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new smartform/ColumnLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnsXL columnsXL} : sap.ui.layout.form.ColumnsXL (default: 2)<\/li>\n<li>{@link #getColumnsL columnsL} : sap.ui.layout.form.ColumnsL (default: 2)<\/li>\n<li>{@link #getColumnsM columnsM} : sap.ui.layout.form.ColumnsM (default: 1)<\/li>\n<li>{@link #getLabelCellsLarge labelCellsLarge} : sap.ui.layout.form.ColumnCells (default: 4)<\/li>\n<li>{@link #getEmptyCellsLarge emptyCellsLarge} : sap.ui.layout.form.EmptyCells (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartform/ColumnLayout","getColumnsL":{"!description":"Gets current value of property {@link #getColumnsL columnsL}.\n\nNumber of columns for large size.\n\nThe number of columns for large size must not be smaller than the number of columns for medium size.\n\nDefault value is <code>2<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.ColumnsL"},"!helpDescription":"If this layout is used in a <code>SmartForm<\/code> control, a <code>ColumnLayout<\/code> control is used to render the <code>Form<\/code> control.\n\n<b>Note:<\/b> If this layout is used, the <code>useHorizontalLayout<\/code> property of the <code>SmartForm<\/code> control must not be set.","getColumnsM":{"!description":"Gets current value of property {@link #getColumnsM columnsM}.\n\nNumber of columns for medium size.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.ColumnsM"},"setColumnsM":{"!description":"Sets a new value for property {@link #getColumnsM columnsM}.\n\nNumber of columns for medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(sColumnsM?: sap.ui.layout.form.ColumnsM) -> sap.ui.comp.smartform.ColumnLayout","parameters":{"sColumnsM":"type: sap.ui.layout.form.ColumnsM, description: New value for property <code>columnsM<\/code>"}},"getColumnsXL":{"!description":"Gets current value of property {@link #getColumnsXL columnsXL}.\n\nNumber of columns for extra-large size.\n\nThe number of columns for extra-large size must not be smaller than the number of columns for large size.\n\nDefault value is <code>2<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.ColumnsXL"},"setColumnsXL":{"!description":"Sets a new value for property {@link #getColumnsXL columnsXL}.\n\nNumber of columns for extra-large size.\n\nThe number of columns for extra-large size must not be smaller than the number of columns for large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>2<\/code>.","!static":false,"!category":"function","!type":"fn(sColumnsXL?: sap.ui.layout.form.ColumnsXL) -> sap.ui.comp.smartform.ColumnLayout","parameters":{"sColumnsXL":"type: sap.ui.layout.form.ColumnsXL, description: New value for property <code>columnsXL<\/code>"}},"setColumnsL":{"!description":"Sets a new value for property {@link #getColumnsL columnsL}.\n\nNumber of columns for large size.\n\nThe number of columns for large size must not be smaller than the number of columns for medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>2<\/code>.","!static":false,"!category":"function","!type":"fn(sColumnsL?: sap.ui.layout.form.ColumnsL) -> sap.ui.comp.smartform.ColumnLayout","parameters":{"sColumnsL":"type: sap.ui.layout.form.ColumnsL, description: New value for property <code>columnsL<\/code>"}},"getEmptyCellsLarge":{"!description":"Gets current value of property {@link #getEmptyCellsLarge emptyCellsLarge}.\n\nDefines how many cells are empty at the end of a row. This could be used to keep the fields small on large screens.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.EmptyCells"}},"sap.ui.comp.smartmicrochart.SmartLineMicroChart":{"!description":"The SmartLineMicroChart control creates a {@link sap.suite.ui.microchart.LineMicroChart LineMicroChart} based on OData metadata and the configuration specified. <br>The <code>entitySet<\/code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most properties are not dynamic and cannot be changed, once the control has been initialized.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartLineMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartLineMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartLineMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase} can be used.","!module":"sap/ui/comp/smartmicrochart/SmartLineMicroChart","!helpDescription":"The SmartLineMicroChart control creates a {@link sap.suite.ui.microchart.LineMicroChart LineMicroChart} based on OData metadata and the configuration specified. <br>The <code>entitySet<\/code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most properties are not dynamic and cannot be changed, once the control has been initialized.","!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class"},"sap.ui.comp.smartform.ColumnLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.ColumnLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.ColumnLayout"},"sap.ui.comp.valuehelpdialog.ValueHelpDialog":{"getBasicSearchText":{"!description":"Gets current value of property {@link #getBasicSearchText basicSearchText}.\n\nDefines the value for the basic search field. The value is set into the basic search field of the filter bar used.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setFilterBar":{"!description":"Sets the aggregated {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn(oFilterBar: sap.ui.comp.filterbar.FilterBar) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oFilterBar":"type: sap.ui.comp.filterbar.FilterBar, description: The filterBar to set"}},"fireTokenRemove":{"!description":"Fires event {@link #event:tokenRemove tokenRemove} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMaxConditions":{"!description":"Gets current value of property {@link #getMaxConditions maxConditions}.\n\nDefines the maximum number of conditions allowed to be added.\n\nDefault value is <code>'-1'<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"detachOk":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:ok ok} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setSupportRangesOnly":{"!description":"Sets a new value for property {@link #getSupportRangesOnly supportRangesOnly}.\n\nIf this property is set to <code>true<\/code>, the value help dialog only supports the ranges (conditions) feature.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportRangesOnly?: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bSupportRangesOnly":"type: boolean, description: New value for property <code>supportRangesOnly<\/code>"}},"setTokens":{"!description":"Sets the array of tokens. The <code>sap.m.Tokens<\/code> are added to the dialog tokenizer. Normal tokens are selected in the table. <code>new sap.m.Token({key: \"0001\", text:\"SAP A.G. (0001)\"});<\/code> Tokens with the extra data with value 'range' are handled as range tokens or exclude range tokens. <code> new sap.m.Token({key: \"i1\", text: \"ID: a..z\"}).data(\"range\", { \"exclude\": false, \"operation\": sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation.BT, \"keyField\": \"CompanyCode\", \"value1\": \"a\", \"value2\": \"z\"}); <\/code> The selected items or range tokens are returned in the event parameters of the Ok event.","!static":false,"!category":"function","!type":"fn(aTokens: [sap.m.Token])","parameters":{"aTokens":"type: sap.m.Token[], description: An array of token controls"}},"getSupportMultiselect":{"!description":"Gets current value of property {@link #getSupportMultiselect supportMultiselect}.\n\nEnables multi-selection in the table used.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSupportRanges":{"!description":"Gets current value of property {@link #getSupportRanges supportRanges}.\n\nEnables the ranges (conditions) feature in the dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the user selects an item in the items table.\n\n<b>Note:<\/b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFilterMode":{"!description":"Gets current value of property {@link #getFilterMode filterMode}.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSupportMultiselect":{"!description":"Sets a new value for property {@link #getSupportMultiselect supportMultiselect}.\n\nEnables multi-selection in the table used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportMultiselect?: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bSupportMultiselect":"type: boolean, description: New value for property <code>supportMultiselect<\/code>"}},"attachOk":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:ok ok} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the OK button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachUpdateSelection":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:updateSelection updateSelection} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sKey?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"<h3>Overview<\/h3> The <codeph>ValueHelpDialog<\/codeph> helps the user to find and select single and multiple values. The user can also define and select multiple conditions. The control is generally called from an input field or a multi-input field by clicking the selection icon (value help icon) of the input field.\n\nThis control only supports OData V2 model (see {@link sap.ui.model.odata.v2.ODataModel})\n\n<h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>The user is searching within a very large dataset <\/li> <li>The user needs to use different attributes to find an object (such as city, company name, and so on). <\/li> <li>The user needs to define conditions, such as ranges and exclusions. <\/li> <\/ul> <h4>When not to use:<\/h4> <li>There is a simpler control that fits the use case. Always start with the least complex control. For example, use the select control if the user needs to select only one item from a short list. <\/li>","getEnabledMultiSelectionPlugin":{"!description":"Gets current value of property {@link #getEnabledMultiSelectionPlugin enabledMultiSelectionPlugin}.\n\nSets usage of <code>MultiSelectionPlugin<\/code>. If enabled the default behaviour is changed and the <code>ValueHelpDialog<\/code> table uses the plugin which provides only \"Deselect all\" option and the ability for range selection. Also a limit of 200 items that are able to be selected as a restriction.\n\nNote: Using <code>MultiSelectionPlugin<\/code> mode the method <code>update<\/code> will return a promise.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFilterBar":{"!description":"Gets content of aggregation {@link #getFilterBar filterBar}.\n\nAllows you to add a {@link sap.ui.comp.filterbar.FilterBar FilterBar} or {@link sap.ui.comp.smartfilterbar.SmartFilterBar SmartFilterBar} control to the value help dialog.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar"},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireUpdateSelection":{"!description":"Fires event {@link #event:updateSelection updateSelection} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.valuehelpdialog.ValueHelpDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMaxConditions":{"!description":"Sets a new value for property {@link #getMaxConditions maxConditions}.\n\nDefines the maximum number of conditions allowed to be added.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'-1'<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxConditions?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sMaxConditions":"type: string, description: New value for property <code>maxConditions<\/code>"}},"getMaxIncludeRanges":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84.1 replaced by <code>maxConditions<\/code>.<br>Gets current value of property {@link #getMaxIncludeRanges maxIncludeRanges}.\n\nDefines the maximum number of include ranges. If value is 0 - the include group of operators should not be displayed.\n\nDefault value is <code>'-1'<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setExcludeRangeOperations":{"!description":"Sets the array for the supported exclude range operations.","!static":false,"!category":"function","!type":"fn(aOperation: [sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation], sType: String)","parameters":{"sType":"type: string, description: the type for which the operations are defined","aOperation":"type: sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[], description: An array of range operations"}},"getTableAsync":{"!description":"Gives access to the internal table instance.","!static":false,"!category":"function","!type":"fn() -> Promise<Object<(sap.m.Table | sap.ui.table.Table | sap.ui.comp.smarttable.SmartTable)>>"},"setMaxIncludeRanges":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84.1 replaced by <code>maxConditions<\/code>.<br>Sets a new value for property {@link #getMaxIncludeRanges maxIncludeRanges}.\n\nDefines the maximum number of include ranges. If value is 0 - the include group of operators should not be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'-1'<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxIncludeRanges?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sMaxIncludeRanges":"type: string, description: New value for property <code>maxIncludeRanges<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.valuehelpdialog.ValueHelpDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setConditionPanelDefaultOperation":{"!description":"Sets a new value for property {@link #getConditionPanelDefaultOperation conditionPanelDefaultOperation}.\n\nSets default operation for Condition Panel of the value help dialog. In case the newly set default operation is not valid for the filter's EDM data type, then it is ignored. expected sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sConditionPanelDefaultOperation?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sConditionPanelDefaultOperation":"type: string, description: New value for property <code>conditionPanelDefaultOperation<\/code>"}},"getDisplayFormat":{"!description":"Gets current value of property {@link #getDisplayFormat displayFormat}.\n\nRepresents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/comp/valuehelpdialog/ValueHelpDialog","!helpDescription":"<h3>Overview<\/h3> The <codeph>ValueHelpDialog<\/codeph> helps the user to find and select single and multiple values. The user can also define and select multiple conditions. The control is generally called from an input field or a multi-input field by clicking the selection icon (value help icon) of the input field.\n\nThis control only supports OData V2 model (see {@link sap.ui.model.odata.v2.ODataModel})\n\n<h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>The user is searching within a very large dataset <\/li> <li>The user needs to use different attributes to find an object (such as city, company name, and so on). <\/li> <li>The user needs to define conditions, such as ranges and exclusions. <\/li> <\/ul> <h4>When not to use:<\/h4> <li>There is a simpler control that fits the use case. Always start with the least complex control. For example, use the select control if the user needs to select only one item from a short list. <\/li>","getTable":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.60.0 replaced by {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog#getTableAsync} to prevent synchronous calls.<br>Gives access to the internal table instance.","!static":false,"!category":"function","!type":"fn() -> sap.m.Table | sap.ui.table.Table | sap.ui.comp.smarttable.SmartTable"},"setTable":{"!description":"Sets the table used in the value help dialog. If not used, the dialog creates a sap.ui.table.Table or sap.m.Table instance internally.","!static":false,"!category":"function","!type":"fn(oTable: sap.m.Table | sap.ui.table.Table | sap.ui.comp.smarttable.SmartTable)","parameters":{"oTable":"type: sap.m.Table|sap.ui.table.Table|sap.ui.comp.smarttable.SmartTable, description: The used table control instance"}},"fireOk":{"!description":"Fires event {@link #event:ok ok} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setKeys":{"!description":"Sets a new value for property {@link #getKeys keys}.\n\nDefines the list of additional keys of the column used for the internal key handling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKeys?: [String]) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sKeys":"type: string[], description: New value for property <code>keys<\/code>"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the Cancel button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setTokenDisplayBehaviour":{"!description":"Sets a new value for property {@link #getTokenDisplayBehaviour tokenDisplayBehaviour}.\n\nRepresents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour<\/code> values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTokenDisplayBehaviour?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sTokenDisplayBehaviour":"type: string, description: New value for property <code>tokenDisplayBehaviour<\/code>"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getConditionPanelDefaultOperation":{"!description":"Gets current value of property {@link #getConditionPanelDefaultOperation conditionPanelDefaultOperation}.\n\nSets default operation for Condition Panel of the value help dialog. In case the newly set default operation is not valid for the filter's EDM data type, then it is ignored. expected sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.Dialog","update":{"!description":"Updates the selection of rows in the table. This function must be called after a first binding or binding update of the table. It will set a table row as selected if a token for this row exists.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","setEnabledMultiSelectionPlugin":{"!description":"Sets a new value for property {@link #getEnabledMultiSelectionPlugin enabledMultiSelectionPlugin}.\n\nSets usage of <code>MultiSelectionPlugin<\/code>. If enabled the default behaviour is changed and the <code>ValueHelpDialog<\/code> table uses the plugin which provides only \"Deselect all\" option and the ability for range selection. Also a limit of 200 items that are able to be selected as a restriction.\n\nNote: Using <code>MultiSelectionPlugin<\/code> mode the method <code>update<\/code> will return a promise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabledMultiSelectionPlugin?: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bEnabledMultiSelectionPlugin":"type: boolean, description: New value for property <code>enabledMultiSelectionPlugin<\/code>"}},"setIncludeRangeOperations":{"!description":"Sets the array for the supported include range operations.","!static":false,"!category":"function","!type":"fn(aOperation: [sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation], sType: String)","parameters":{"sType":"type: string, description: the type for which the operations are defined","aOperation":"type: sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation[], description: An array of range operations"}},"destroyFilterBar":{"!description":"Destroys the filterBar in the aggregation {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.valuehelpdialog.ValueHelpDialog"},"!constructorDescription":"Constructor for a new valuehelpdialog/ValueHelpDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBasicSearchText basicSearchText} : string (default: \"\")<\/li>\n<li>{@link #getSupportMultiselect supportMultiselect} : boolean (default: true)<\/li>\n<li>{@link #getSupportRanges supportRanges} : boolean (default: false)<\/li>\n<li>{@link #getSupportRangesOnly supportRangesOnly} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string (default: \"\")<\/li>\n<li>{@link #getKeys keys} : string[]<\/li>\n<li>{@link #getDescriptionKey descriptionKey} : string (default: \"\")<\/li>\n<li>{@link #getMaxIncludeRanges maxIncludeRanges} : string (default: '-1')<\/li>\n<li>{@link #getMaxExcludeRanges maxExcludeRanges} : string (default: '-1')<\/li>\n<li>{@link #getMaxConditions maxConditions} : string (default: '-1')<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string (default: \"\")<\/li>\n<li>{@link #getTokenDisplayBehaviour tokenDisplayBehaviour} : string (default: \"\")<\/li>\n<li>{@link #getFilterMode filterMode} : boolean (default: false)<\/li>\n<li>{@link #get_enhancedExcludeOperations _enhancedExcludeOperations} : boolean (default: false)<\/li>\n<li>{@link #getConditionPanelDefaultOperation conditionPanelDefaultOperation} : string<\/li>\n<li>{@link #getEnabledMultiSelectionPlugin enabledMultiSelectionPlugin} : boolean (default: false)<\/li>\n<li>{@link #get_conditionPanelCalendarWeekSettings _conditionPanelCalendarWeekSettings} : string (default: \"\")<\/li>\n<li>{@link #get_conditionPanelShowCurrentDateButton _conditionPanelShowCurrentDateButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterBar filterBar} : sap.ui.comp.filterbar.FilterBar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenRemove tokenRemove} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateSelection updateSelection} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well.","setRangeKeyFields":{"!description":"Sets a RangeKeyFields array. This method allows you to specify the KeyFields for the ranges. You can set an array of objects with Key and Label properties to define the key fields.","!static":false,"!category":"function","!type":"fn(aRangeKeyFields: [Object<Object])","parameters":{"aRangeKeyFields":"type: Object<Object[]>, description: An array of range KeyFields <code>[{key: \"CompanyCode\", label: \"ID\"}, {key:\"CompanyName\", label : \"Name\"}]<\/code>"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMaxExcludeRanges":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84.1 replaced by <code>maxConditions<\/code>.<br>Gets current value of property {@link #getMaxExcludeRanges maxExcludeRanges}.\n\nDefines the maximum number of exclude ranges. If value is 0 - the exclude group of operators should not be displayed.\n\nDefault value is <code>'-1'<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxExcludeRanges":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84.1 replaced by <code>maxConditions<\/code>.<br>Sets a new value for property {@link #getMaxExcludeRanges maxExcludeRanges}.\n\nDefines the maximum number of exclude ranges. If value is 0 - the exclude group of operators should not be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'-1'<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxExcludeRanges?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sMaxExcludeRanges":"type: string, description: New value for property <code>maxExcludeRanges<\/code>"}},"getTokenDisplayBehaviour":{"!description":"Gets current value of property {@link #getTokenDisplayBehaviour tokenDisplayBehaviour}.\n\nRepresents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour<\/code> values.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachUpdateSelection":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:updateSelection updateSelection} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the table gets an update and all existing tokens must be selected in the table.\n\n<b>Note:<\/b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setBasicSearchText":{"!description":"Sets a new value for property {@link #getBasicSearchText basicSearchText}.\n\nDefines the value for the basic search field. The value is set into the basic search field of the filter bar used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sBasicSearchText?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sBasicSearchText":"type: string, description: New value for property <code>basicSearchText<\/code>"}},"attachTokenRemove":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tokenRemove tokenRemove} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the user removes one or multiple existing token(s) from the dialog.\n\n<b>Note:<\/b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getKeys":{"!description":"Gets current value of property {@link #getKeys keys}.\n\nDefines the list of additional keys of the column used for the internal key handling.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setSupportRanges":{"!description":"Sets a new value for property {@link #getSupportRanges supportRanges}.\n\nEnables the ranges (conditions) feature in the dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportRanges?: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bSupportRanges":"type: boolean, description: New value for property <code>supportRanges<\/code>"}},"setFilterMode":{"!description":"Sets a new value for property {@link #getFilterMode filterMode}.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterMode?: Boolean) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"bFilterMode":"type: boolean, description: New value for property <code>filterMode<\/code>"}},"detachTokenRemove":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tokenRemove tokenRemove} event of this <code>sap.ui.comp.valuehelpdialog.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSupportRangesOnly":{"!description":"Gets current value of property {@link #getSupportRangesOnly supportRangesOnly}.\n\nIf this property is set to <code>true<\/code>, the value help dialog only supports the ranges (conditions) feature.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDisplayFormat":{"!description":"Sets a new value for property {@link #getDisplayFormat displayFormat}.\n\nRepresents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayFormat?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sDisplayFormat":"type: string, description: New value for property <code>displayFormat<\/code>"}},"getDescriptionKey":{"!description":"Gets current value of property {@link #getDescriptionKey descriptionKey}.\n\nDefines the key of the column used for the token text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setDescriptionKey":{"!description":"Sets a new value for property {@link #getDescriptionKey descriptionKey}.\n\nDefines the key of the column used for the token text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDescriptionKey?: String) -> sap.ui.comp.valuehelpdialog.ValueHelpDialog","parameters":{"sDescriptionKey":"type: string, description: New value for property <code>descriptionKey<\/code>"}}},"sap.ui.comp.smartfield.ValueHelpTitleSource":{"!description":"Provides information about the ValueHelpTitleSource of the field","!module":"sap/ui/comp/library","ValueList":{"!description":"<code>SmartField<\/code> with ValueList ValueHelpTitleSource","!category":"enum","!type":"String"},"!category":"static class","Property":{"!description":"<code>SmartField<\/code> with Property ValueHelpTitleSource","!category":"enum","!type":"String"}},"sap.ui.comp.smartfield.SmartField":{"getUomEnabled":{"!description":"Gets current value of property {@link #getUomEnabled uomEnabled}.\n\nEnabled state of the unit, if the <code>SmartField<\/code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormValueProperty":{"!description":"Returns the name of the value-holding property of a control used in a <code>SemanticFormElement<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getFetchValueListReadOnly":{"!description":"Gets current value of property {@link #getFetchValueListReadOnly fetchValueListReadOnly}.\n\nIndicates whether the value list collection is fetched in display mode from the resource path specified in the <code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotation.\n\nThis collection data is used to infer a descriptive text for the value of the <code>SmartField<\/code> control. However, fetching the value list collection for every <code>SmartField<\/code> instance individually may not be ideal in some performance-critical scenarios. To optimize this default behavior, you can set this property to <code>false<\/code> and provide the <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation, which is used to specify the URL path name to the Entity Data Model (EDM) property from which the descriptive text for the value of the <code>SmartField<\/code> control is fetched, for example, LT (Laptop).\n\n<b>Note:<\/b> Setting this property to <code>false<\/code> only has an effect if the <code>value<\/code> property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code>. In addition, applications or frameworks have to make sure the descriptive text is fetched, for example, by expanding a navigation property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDataType":{"!description":"Returns the EDM data type of the OData property to which the value property of the control is bound. If no model or no OData property is available <code>null<\/code> is returned.","!static":false,"!category":"function","!type":"fn() -> String"},"getUnitOfMeasure":{"!description":"If the OData property to which the control's value property is bound semantically represents a unit of measure, the value of the current unit of measure is returned. Otherwise <code>null<\/code> is returned.","!static":false,"!category":"function","!type":"fn() -> Object"},"setValueStateText":{"!description":"Setter for property <code>valueStateText<\/code>. Default value is empty/<code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sText":"type: string, description: The new value for property <code>valueStateText<\/code>"}},"getExpandNavigationProperties":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.117 It is recommended the expand to be using the OData Model.<br>Gets current value of property {@link #getExpandNavigationProperties expandNavigationProperties}.\n\nIndicates if entities related to navigation properties inside the metadata are requested. If set to <code>true<\/code>, then these related entities are loaded with an <code>$expand<\/code> request.\n\nAnnotations that can have navigation properties are the following: <ul> <li> <code>com.sap.vocabularies.Common.v1.Text<\/code> for text arrangements <li> <code>Org.OData.Measures.V1.Unit<\/code> and <code>Org.OData.Measures.V1.ISOCurrency<\/code> for units <li> <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> for field control <\/ul>\n\n<b>Note:<\/b> Independent of the <code>fetchValueListReadOnly<\/code> value, setting this flag to <code>true<\/code> requests data from the backend.\n\n<b>Note:<\/b> The back-end request to expand the navigation properties is sent only if the entity to which <code>SmartField<\/code> is bound is persisted. For transient entities, there is no back-end request since no such data is available.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireContextEditableChanged":{"!description":"Fires event {@link #event:contextEditableChanged contextEditableChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowSuggestion":{"!description":"Sets a new value for property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true<\/code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSuggestion?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowSuggestion":"type: boolean, description: New value for property <code>showSuggestion<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"detachValueListChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:valueListChanged valueListChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getTextInEditModeSource":{"!description":"Gets current value of property {@link #getTextInEditModeSource textInEditModeSource}.\n\nSets the source from which text descriptions for <code>IDs<\/code> are fetched in edit mode, for example, for LT (Laptop).\n\n<b>Note<\/b>: The <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> and <code>sap.ui.comp.smartfield.TextInEditModeSource.ValueList<\/code> enumeration members are only supported if the following applies:\n\n<ul> <li>The <code>value<\/code> property of the <code>SmartField<\/code> control instance is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code> or <code>Edm.Guid<\/code>.<\/li> <li>The <code>com.sap.vocabularies.UI.v1.TextArrangement<\/code> annotation for the bound EDM property or entity type is specified in the service metadata document or annotation file.<\/li> <li>The binding mode for the <code>value<\/code> property of the <code>SmartField<\/code> control is the two-way binding mode.<\/li> <li>The field from which the description is fetched is filterable.<\/li> <\/ul>\n\n<b>Note<\/b>: In addition, the <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> enumeration member is only supported if the following applies:\n\n<ul> <li>The EDM navigation property association is defined in the service metadata document.<\/li> <li>The <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation for the bound EDM property is specified in the service metadata document or annotation file whose <code>Path<\/code> attribute points to a EDM navigation property of a lookup entity set/type whose single key property is the <code>ID<\/code>, which contains (among other properties) the descriptive value.<\/li> <li>The lookup entity must be loaded. The lookup entity can be loaded by expanding the EDM navigation property via a <code>$expand<\/code> query parameter.<\/li> <li>The EDM navigation property association defines a referential constraint that ties values of the dependent editable entity type/set to the lookup entity type/set in the service metadata document.<\/li> <li>The EDM navigation property association end multiplicity of the lookup entity type/set is defined as <code>1<\/code> in the service metadata document. There must be a single-valued navigation from the editable entity set/type to the lookup entity set/type.<\/li> <li>The lookup entity type/set from which the descriptive value is fetched contains a single-key EDM property.<\/li> <\/ul>\n\n<b>Note<\/b>: As of version 1.82, if <code>SmartField<\/code> is used inside a <code>SmartForm<\/code>, <code>defaultTextInEditModeSource<\/code> can be added as custom data to the form and it will be propagated to all smart fields that cover the above criteria. However, if <code>textInEditModeSource<\/code> is added to the <code>SmartField<\/code> as property, it will override the <code>defaultTextInEditModeSource<\/code> propagated from the <code>SmartForm<\/code> custom data.\n\n<b>Note<\/b>: As of version 1.107 the property will be used to configure the validation for fixed list fields of type <code>ComboBox<\/code>. The values that will be considered: <ul> <li>ValueList - strict validation<\/li> <li>ValueListWarning - non-strict validation<\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.TextInEditModeSource"},"!description":"The <code>SmartField<\/code> control interprets metadata that represents entity-relationship models, data types, service capabilities, and annotations in OData services to automatically generate the underlying inner controls and reduce the amount of code needed for developing applications. In some cases, the OData entity is derived from the control's binding context. The OData entity property that is changed or displayed with the control is derived from the <code>value<\/code> property of the control.\n\n<h3>Structure <\/h3> The <code>SmartField<\/code> control contains a basic UI element and an optional label. In <code>display<\/code> mode the following UI elements are available to be rendered depending on the metadata: <ul> <li>{@link sap.m.Text Text}<\/li> <li>{@link sap.m.Link Link}<\/li> <li>{@link sap.ui.comp.navpopover.SmartLink SmartLink}<\/li> <\/ul> In <code>edit<\/code> mode, the available UI elements are: <ul> <li>One or two {@link sap.m.Input Input} fields (with or without a {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog ValueHelpDialog})<\/li> <li>{@link sap.m.Select Select}<\/li> <li>{@link sap.m.ComboBox ComboBox}<\/li> <li>{@link sap.m.TextArea TextArea}<\/li> <li>{@link sap.m.Checkbox Checkbox}<\/li> <li>{@link sap.m.DatePicker DatePicker}<\/li> <li>{@link sap.m.DateTimePicker DateTimePicker}<\/li> <li>{@link sap.m.TimePicker TimePicker}<\/li> <\/ul> The <code>SmartField<\/code> comes with additional built-in features, such as autocomplete and suggestions, value help dialog, recently used and recommended values, textInEditModeSource, validation, and message handling.\n\n<h3>Usage<\/h3> <i>When to use<\/i> <ul> <li>You use an OData service for your app (only OData version 2).<\/li> <li>You use the smart table and your app is not performance critical. The <code>SmartField<\/code> control offers more flexibility than the controls provided directly by the smart table, especially for editing.<\/li> <li>You use a smart form.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>You are not using OData version 2.<\/li> <li>You need a different control for entering or displaying data, such as multi input, a multi combo box, step input, a radio button, or a title. In this case, use the corresponding control directly.<\/li> <li>You need a different dialog for offering value help, such as the select dialog or table select dialog.<\/li> <li>You use the smart table and your app is performance critical. In this case, the controls offered directly by the smart table offer less flexibility but better performance.<\/li> <li> You need custom validations.<\/li> <\/ul>\n\n<b>Important:<\/b> Keep in mind that the <code>SmartField<\/code> control, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartField<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartField<\/code> only if you have control over the metadata of your application.<\/b>","getMandatory":{"!description":"Gets current value of property {@link #getMandatory mandatory}.\n\nIndicates whether user input is required.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven and this property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property is annotated with the <code>Nullable<\/code> annotation. The <code>Nullable<\/code> annotation is a capability of the OData service that specifies whether a value is mandatory, hence it overrules the control's API settings. Therefore, if the <code>Nullable<\/code> attribute is specified as <code>Nullable=\"false\"<\/code>, a value is mandatory.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <\/ul>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValueState":{"!description":"Setter for property <code>valueState<\/code>. Default value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.comp.smartfield.SmartField","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: The new value for property <code>valueState<\/code>"}},"getShowSuggestion":{"!description":"Gets current value of property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true<\/code>, the suggestion feature for a hosted control is enabled, if the hosted control supports it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachContextEditableChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:contextEditableChanged contextEditableChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nFired when the control is rendered if the value of <code>contextEditable<\/code> property of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_getEditableForNotExpandedNavigation":{"!description":"Should control be editable in case it's bound to a not expanded navigation property.","!static":false,"!category":"function","!type":"fn()"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachModeToggled":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:modeToggled modeToggled} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the inner controls have been toggled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.SmartField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireEntitySetFound":{"!description":"Fires event {@link #event:entitySetFound entitySetFound} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachVisibleChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireEditableChanged":{"!description":"Fires event {@link #event:editableChanged editableChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nIndicates whether the user can interact with the control or not. <b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab order.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/comp/smartfield/SmartField","detachContextEditableChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:contextEditableChanged contextEditableChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachInnerControlsCreated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:innerControlsCreated innerControlsCreated} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the inner controls have been created.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_calculateFieldGroupIDs":{"!description":"Calculates field group id's based on the provided computed service metadata","!static":false,"!category":"function","!type":"fn(oMetadata: Object) -> Array","parameters":{"oMetadata":"type: object, description: computed service metadata"}},"getFocusDomRef":{"!description":"Returns the DOM element that gets the focus.","!static":false,"!category":"function","!type":"fn() -> Element"},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getDataSourceLabel":{"!description":"Returns the label computed from the SmartField annotations if available","!static":false,"!category":"function","!type":"fn() -> String | undefined"},"setTextInEditModeSource":{"!description":"Sets a new value for property {@link #getTextInEditModeSource textInEditModeSource}.\n\nSets the source from which text descriptions for <code>IDs<\/code> are fetched in edit mode, for example, for LT (Laptop).\n\n<b>Note<\/b>: The <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> and <code>sap.ui.comp.smartfield.TextInEditModeSource.ValueList<\/code> enumeration members are only supported if the following applies:\n\n<ul> <li>The <code>value<\/code> property of the <code>SmartField<\/code> control instance is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code> or <code>Edm.Guid<\/code>.<\/li> <li>The <code>com.sap.vocabularies.UI.v1.TextArrangement<\/code> annotation for the bound EDM property or entity type is specified in the service metadata document or annotation file.<\/li> <li>The binding mode for the <code>value<\/code> property of the <code>SmartField<\/code> control is the two-way binding mode.<\/li> <li>The field from which the description is fetched is filterable.<\/li> <\/ul>\n\n<b>Note<\/b>: In addition, the <code>sap.ui.comp.smartfield.TextInEditModeSource.NavigationProperty<\/code> enumeration member is only supported if the following applies:\n\n<ul> <li>The EDM navigation property association is defined in the service metadata document.<\/li> <li>The <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation for the bound EDM property is specified in the service metadata document or annotation file whose <code>Path<\/code> attribute points to a EDM navigation property of a lookup entity set/type whose single key property is the <code>ID<\/code>, which contains (among other properties) the descriptive value.<\/li> <li>The lookup entity must be loaded. The lookup entity can be loaded by expanding the EDM navigation property via a <code>$expand<\/code> query parameter.<\/li> <li>The EDM navigation property association defines a referential constraint that ties values of the dependent editable entity type/set to the lookup entity type/set in the service metadata document.<\/li> <li>The EDM navigation property association end multiplicity of the lookup entity type/set is defined as <code>1<\/code> in the service metadata document. There must be a single-valued navigation from the editable entity set/type to the lookup entity set/type.<\/li> <li>The lookup entity type/set from which the descriptive value is fetched contains a single-key EDM property.<\/li> <\/ul>\n\n<b>Note<\/b>: As of version 1.82, if <code>SmartField<\/code> is used inside a <code>SmartForm<\/code>, <code>defaultTextInEditModeSource<\/code> can be added as custom data to the form and it will be propagated to all smart fields that cover the above criteria. However, if <code>textInEditModeSource<\/code> is added to the <code>SmartField<\/code> as property, it will override the <code>defaultTextInEditModeSource<\/code> propagated from the <code>SmartForm<\/code> custom data.\n\n<b>Note<\/b>: As of version 1.107 the property will be used to configure the validation for fixed list fields of type <code>ComboBox<\/code>. The values that will be considered: <ul> <li>ValueList - strict validation<\/li> <li>ValueListWarning - non-strict validation<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sTextInEditModeSource?: sap.ui.comp.smartfield.TextInEditModeSource) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTextInEditModeSource":"type: sap.ui.comp.smartfield.TextInEditModeSource, description: New value for property <code>textInEditModeSource<\/code>"}},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nText shown when no value available.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setFetchValueListReadOnly":{"!description":"Sets a new value for property {@link #getFetchValueListReadOnly fetchValueListReadOnly}.\n\nIndicates whether the value list collection is fetched in display mode from the resource path specified in the <code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotation.\n\nThis collection data is used to infer a descriptive text for the value of the <code>SmartField<\/code> control. However, fetching the value list collection for every <code>SmartField<\/code> instance individually may not be ideal in some performance-critical scenarios. To optimize this default behavior, you can set this property to <code>false<\/code> and provide the <code>com.sap.vocabularies.Common.v1.Text<\/code> annotation, which is used to specify the URL path name to the Entity Data Model (EDM) property from which the descriptive text for the value of the <code>SmartField<\/code> control is fetched, for example, LT (Laptop).\n\n<b>Note:<\/b> Setting this property to <code>false<\/code> only has an effect if the <code>value<\/code> property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property typed as <code>Edm.String<\/code>. In addition, applications or frameworks have to make sure the descriptive text is fetched, for example, by expanding a navigation property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFetchValueListReadOnly?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bFetchValueListReadOnly":"type: boolean, description: New value for property <code>fetchValueListReadOnly<\/code>"}},"_updateInnerControlsIfRequired":{"!static":false,"!category":"function","!type":"fn()"},"checkClientError":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.64 replaced by {@link sap.ui.comp.smartfield.SmartField#checkValuesValidity}<br>Checks whether a client error has been detected in edit mode. Additionally the error message is shown, if this is not the case already.\n\nThis method is typically used to check whether the value of every inner text input field in edit mode is subject to data type constraints and whether the constraints are fulfilled.\n\nA data type constraint for a bound Entity Data Model (EDM) property can be violated in many ways, for example:\n\n<ul> <li>The <code>Nullable<\/code> constraint for an EDM property typed as <code>Edm.String<\/code> is violated.<\/li> <li>A user input is invalid for the bound EDM property typed as <code>Edm.DateTime<\/code>.<\/li> <\/ul>\n\nIf this happens, the following applies:\n\n<ul> <li>A validation error state is set on the text input field.<\/li> <li>A validation error message is displayed for the text input field.<\/li> <li>The validation error message (possibly generated by a user input) is added to a <code>sap.ui.core.message.MessageManager<\/code> object instance if, for example, a view object instance is registered to it.<\/li> <li>The inner private text input field fires a {@link sap.ui.base.EventProvider#event:validationError}, or {@link sap.ui.base.EventProvider#event:parseError} event.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn(oSettings?: Object) -> Boolean","parameters":{"oSettings":"type: object, description: Settings"}},"setJsontype":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31.0 with no replacement.<br>Sets a new value for property {@link #getJsontype jsontype}.\n\nData types to be used, if the <code>SmartField<\/code> control is interacting with a JSON model. If the value property of the control is bound to a property of an OData entity set, this property is not taken into consideration.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sJsontype?: sap.ui.comp.smartfield.JSONType) -> sap.ui.comp.smartfield.SmartField","parameters":{"sJsontype":"type: sap.ui.comp.smartfield.JSONType, description: New value for property <code>jsontype<\/code>"}},"detachChangeModelValue":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:changeModelValue changeModelValue} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireValueListChanged":{"!description":"Fires event {@link #event:valueListChanged valueListChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getInnerControls":{"!description":"Resolves the controls hosted currently by this <code>SmartField<\/code> control.","!static":false,"!category":"function","!type":"fn() -> Array"},"setValueHelpTitleSource":{"!description":"Sets a new value for property {@link #getValueHelpTitleSource valueHelpTitleSource}.\n\nControls if the title is taken from the label of the main property or from the label of the value list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Property<\/code>.","!static":false,"!category":"function","!type":"fn(sValueHelpTitleSource?: sap.ui.comp.smartfield.ValueHelpTitleSource) -> sap.ui.comp.smartfield.SmartField","parameters":{"sValueHelpTitleSource":"type: sap.ui.comp.smartfield.ValueHelpTitleSource, description: New value for property <code>valueHelpTitleSource<\/code>"}},"setTextLabel":{"!description":"Sets a new value for property {@link #getTextLabel textLabel}.\n\nThis property contains the text of an associated <code>SmartLabel<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTextLabel?: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTextLabel":"type: string, description: New value for property <code>textLabel<\/code>"}},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartfield.SmartField","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getControlProposal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 with no replacement.<br>Gets content of aggregation {@link #getControlProposal controlProposal}.\n\nProposes a control to be rendered. The <code>SmartField<\/code> control can ignore the proposal.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposal"},"detachEditableChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:editableChanged editableChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nText shown when no value available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"_setInternalFieldGroupIds":{"!description":"Sets the provided FieldGroupIds to the internally created edit controls.","!static":false,"!category":"function","!type":"fn(sFieldGroups: [String])","parameters":{"sFieldGroups":"type: string[], description: comma delimited list of FieldGroupIds"}},"setSemanticObjectController":{"!description":"Sets the aggregated {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: sap.ui.comp.navpopover.SemanticObjectController) -> sap.ui.comp.smartfield.SmartField","parameters":{"oSemanticObjectController":"type: sap.ui.comp.navpopover.SemanticObjectController, description: The semanticObjectController to set"}},"checkValuesValidity":{"!description":"Checks whether the value of every inner text input field in edit mode is valid.\n\nThis method is typically used to check whether the value of every inner text input field in edit mode is subject to data type constraints and whether the constraints are fulfilled.\n\n<b>Note:<\/b> In some scenarios, invoking this method may also trigger a back-end request to check whether the value is valid.\n\nA data type constraint for a bound Entity Data Model (EDM) property can be violated in many ways, for example:\n\n<ul> <li>The <code>Nullable<\/code> constraint for an EDM property typed as <code>Edm.String<\/code> is violated.<\/li> <li>A user input is invalid for the bound EDM property typed as <code>Edm.DateTime<\/code>.<\/li> <\/ul>\n\nIf this happens, the following applies:\n\n<ul> <li>A validation error state is set on the text input field.<\/li> <li>A validation error message is displayed for the text input field.<\/li> <li>The validation error message (possibly generated by a user input) is added to a <code>sap.ui.core.message.MessageManager<\/code> object instance if, for example, a view object instance is registered to it.<\/li> <li>The inner private text input field fires a {@link sap.ui.base.EventProvider#event:validationError}, or {@link sap.ui.base.EventProvider#event:parseError} event. Note that the events are fired synchronously if the value is validated on client side or asynchronously if, for example, the value is validated on back-end side.<\/li> <\/ul>\n\nThe inner private text input field fires a {@link sap.ui.base.EventProvider#event:validationSuccess} if its validation passes.\n\n<b>Note:<\/b> In display mode, this method always returns a fulfilled <code>Promise<\/code> object.\n\n<b>Note:<\/b> In two-way data binding scenarios, it is usually not necessary to invoke this method explicitly to validate user input, as the data type validation is done automatically when the value in the input field has changed and the focus leaves the text input field or the enter key is pressed. However, in two-way data binding scenarios, this method may be used to check whether a value is valid before submitting it to the back-end system.","!static":false,"!category":"function","!type":"fn(oSettings?: Object) -> Promise<sap.ui.comp.smartfield.checkValuesValidityInfo>","parameters":{"oSettings":"type: object, description: Settings"}},"getFormFormattedValue":{"!description":"Returns the formatted value of a control used in a <code>SemanticFormElement<\/code>.","!static":false,"!category":"function","!type":"fn() -> Promise<string>"},"getProposedControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Gets current value of property {@link #getProposedControl proposedControl}.\n\nProposes a control to be rendered. The <code>SmartField<\/code> control can ignore the proposal.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlProposalType"},"setUnitOfMeasure":{"!description":"If the OData property the control's value property is bound to semantically represents a unit of measure, the value of the current unit of measure can be changed.","!static":false,"!category":"function","!type":"fn(sUnit: String)","parameters":{"sUnit":"type: string, description: The new unit of measure to be set."}},"setImportance":{"!description":"Sets a new value for property {@link #getImportance importance}.\n\nSpecifies the importance of the field. Applicable only when the <code>SmartField<\/code> is used inside <code>SmartForm<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Low<\/code>.","!static":false,"!category":"function","!type":"fn(sImportance?: sap.ui.comp.smartfield.Importance) -> sap.ui.comp.smartfield.SmartField","parameters":{"sImportance":"type: sap.ui.comp.smartfield.Importance, description: New value for property <code>importance<\/code>"}},"getShowValueHelp":{"!description":"Gets current value of property {@link #getShowValueHelp showValueHelp}.\n\nIf set to <code>true<\/code>, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTooltipLabel":{"!description":"Gets current value of property {@link #getTooltipLabel tooltipLabel}.\n\nThis property contains the tool tip of the associated <code>SmartLabel<\/code> control.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getUomEditState":{"!description":"Gets current value of property {@link #getUomEditState uomEditState}.\n\nThis property is for internal use only.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setShowValueStateMessage":{"!description":"Sets a new value for property {@link #getShowValueStateMessage showValueStateMessage}.\n\nDefines whether the value state message is shown or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueStateMessage?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowValueStateMessage":"type: boolean, description: New value for property <code>showValueStateMessage<\/code>"}},"checkUnitValidity":{"!description":"Checks the validity of the values for the given control.","!static":false,"!category":"function","!type":"fn(oSettings?: Object) -> Boolean","parameters":{"oSettings":"type: Object, description: Additional settings"}},"attachValueListChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:valueListChanged valueListChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired when after selection of values with value help or auto-suggest, the model is updated with the selected data.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUomVisible":{"!description":"Sets a new value for property {@link #getUomVisible uomVisible}.\n\nIndicates whether the unit of measure field is visible.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this property can be ignored if the bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUomVisible?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bUomVisible":"type: boolean, description: New value for property <code>uomVisible<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.comp.smartfield.SmartField","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartfield.SmartField","parameters":{"vAriaDescribedBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to add; if empty, nothing is inserted"}},"setUomEnabled":{"!description":"Sets a new value for property {@link #getUomEnabled uomEnabled}.\n\nEnabled state of the unit, if the <code>SmartField<\/code> control addresses unit of measure use cases, for example, an amount and its associated currency.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUomEnabled?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bUomEnabled":"type: boolean, description: New value for property <code>uomEnabled<\/code>"}},"fireLinkPress":{"!description":"Fires event {@link #event:linkPress linkPress} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getRequired":{"!description":"Gets the value of the <code>mandatory<\/code> property.\n\nThis function is needed as the \"mandatory\" feature is named \"required\" in a lot of other controls (like <code>Label<\/code> or <code>Form<\/code>).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property {@link #getTextDirection textDirection}.\n\nThe available text direction options are LTR and RTL. By default, the control inherits the text direction from its parent control.\n\nThe <code>textDirection<\/code> property can be used when, for example, the text direction in the application is LTR but you want a specific field to have RTL text direction.\n\n<b>Note:<\/b> The <code>textDirection<\/code> property is not applicable for the <code>SmartField<\/code> control for units of measure use cases.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setContextEditable":{"!description":"Sets a new value for property {@link #getContextEditable contextEditable}.\n\nNotifies the control whether controls using the <code>SmartField<\/code> control are editable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bContextEditable?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bContextEditable":"type: boolean, description: New value for property <code>contextEditable<\/code>"}},"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe name of an entity set for which the control manages values. This is an optional property.\n\nIf this property is left empty, the entity set is computed by parsing the binding context path, for example, <code>Tasks('id-1428419016778-51')<\/code> is parsed to <code>Tasks<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getFixedValueListValidationEnabled":{"!description":"Gets current value of property {@link #getFixedValueListValidationEnabled fixedValueListValidationEnabled}.\n\nIf the property is set to <code>true<\/code>, a standard validation for {@link sap.m.ComboBox} is performed. An inner control {@link sap.m.ComboBox} is created and the binding is to <code>selectedKey<\/code>. Changes at runtime are not reflected.\n\n<b>Note:<\/b> This property switches the control in legacy mode. If set to <code>true<\/code> this will override any setting to <code>textInEditModeSource<\/code> property regarding ComboBox validation.\n\n<b>Note:<\/b> If the property is set to <code>false<\/code>, the inner control is {@link sap.ui.comp.smartfield.ComboBox} and the binding is to <code>enteredValue<\/code>. In this case, any entered value is valid irrespective of whether it's in the predefined list or not.\n\n<b>Note:<\/b> This property is applicable only for fixed-value scenarios.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nTo be used in the HTML code (for example, for HTML forms that send data to the server via 'submit').\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"destroySemanticObjectController":{"!description":"Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.SmartField"},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nIndicates whether the control is in display or edit mode.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"readODataLabel":{"!description":"Reads the label from the OData service. This method is introduced for RTA as the label is needed in some scenarios for non-rendered and not initialised SmartFields.","!static":false,"!category":"function","!type":"fn() -> Promise"},"attachEntitySetFound":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:entitySetFound entitySetFound} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe OData entity set is either derived from the control's binding context or from control's entity set property, if a value for it is specified. In both cases this event is fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getValueHelpTitleSource":{"!description":"Gets current value of property {@link #getValueHelpTitleSource valueHelpTitleSource}.\n\nControls if the title is taken from the label of the main property or from the label of the value list.\n\nDefault value is <code>Property<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ValueHelpTitleSource"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireModeToggled":{"!description":"Fires event {@link #event:modeToggled modeToggled} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowLabel":{"!description":"Sets a new value for property {@link #getShowLabel showLabel}.\n\nIf set to <code>false<\/code> the label is not displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"getTextLabel":{"!description":"Gets current value of property {@link #getTextLabel textLabel}.\n\nThis property contains the text of an associated <code>SmartLabel<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachChangeModelValue":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:changeModelValue changeModelValue} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nFired after the text in the field has been changed by user interaction in combination with one of the following actions:\n\n<ul> <li>The focus leaves the field<\/li> <li>The Enter key is pressed<\/li> <li>The value is selected from the suggestions list<\/li> <li>The value is selected from the <code>ValueHelpDialog<\/code><\/li> <\/ul>\n\nIf the value of the text input field is subject to data type constraints, the constraints must be fulfilled, which implies the value is stored in the binding/model before the event is fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setWrapping":{"!description":"Sets a new value for property {@link #getWrapping wrapping}.\n\nIndicates whether the control break lines (in display mode) to prevent overflow.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bWrapping?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bWrapping":"type: boolean, description: New value for property <code>wrapping<\/code>"}},"fireChangeModelValue":{"!description":"Fires event {@link #event:changeModelValue changeModelValue} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setFixedValueListValidationEnabled":{"!description":"Sets a new value for property {@link #getFixedValueListValidationEnabled fixedValueListValidationEnabled}.\n\nIf the property is set to <code>true<\/code>, a standard validation for {@link sap.m.ComboBox} is performed. An inner control {@link sap.m.ComboBox} is created and the binding is to <code>selectedKey<\/code>. Changes at runtime are not reflected.\n\n<b>Note:<\/b> This property switches the control in legacy mode. If set to <code>true<\/code> this will override any setting to <code>textInEditModeSource<\/code> property regarding ComboBox validation.\n\n<b>Note:<\/b> If the property is set to <code>false<\/code>, the inner control is {@link sap.ui.comp.smartfield.ComboBox} and the binding is to <code>enteredValue<\/code>. In this case, any entered value is valid irrespective of whether it's in the predefined list or not.\n\n<b>Note:<\/b> This property is applicable only for fixed-value scenarios.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFixedValueListValidationEnabled?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bFixedValueListValidationEnabled":"type: boolean, description: New value for property <code>fixedValueListValidationEnabled<\/code>"}},"getImportance":{"!description":"Gets current value of property {@link #getImportance importance}.\n\nSpecifies the importance of the field. Applicable only when the <code>SmartField<\/code> is used inside <code>SmartForm<\/code>.\n\nDefault value is <code>Low<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.Importance"},"getMode":{"!description":"Returns the current SmartField's edit mode","!static":false,"!category":"function","!type":"fn() -> String"},"attachPress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.116.0 with no replacement.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nFires when the user triggers the link control or taps/clicks on an active title of the object identifier control. When handler attached, the rendered control is <code>sap.m.Link<\/code>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEntitySet":{"!description":"Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe name of an entity set for which the control manages values. This is an optional property.\n\nIf this property is left empty, the entity set is computed by parsing the binding context path, for example, <code>Tasks('id-1428419016778-51')<\/code> is parsed to <code>Tasks<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sEntitySet?: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"fireInitialise":{"!description":"Fires event {@link #event:initialise initialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.SmartField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSupportedAnnotationPaths":{"!description":"Calculates the paths to the annotations used by the <code>SmartField<\/code> control.","!static":true,"!category":"function","!type":"fn(oMetaModel: sap.ui.model.odata.ODataMetaModel, oEntitySet: Object, sValueBinding: String, bNavigationPathsOnly: Boolean) -> [Object<string]","parameters":{"oEntitySet":"type: object, description: The given entity set","bNavigationPathsOnly":"type: boolean, description: If set to <code>true<\/code>, no properties are returned","sValueBinding":"type: string, description: The path identifying the OData property to which the value property of the <code>SmartField<\/code> control is bound","oMetaModel":"type: sap.ui.model.odata.ODataMetaModel, description: The given OData meta model"}},"setClientSideMandatoryCheck":{"!description":"Sets a new value for property {@link #getClientSideMandatoryCheck clientSideMandatoryCheck}.\n\nDetermines if the mandatory check of whether the field has a value happens on the client side - <code>true<\/code> or on the server side - <code>false<\/code>.\n\n<b>Note:<\/b> If the {@link sap.ui.comp.smartfield.SmartField#value} property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property of type different from Edm.String annotated as <code>Nullable=\"false\"<\/code>, the mandatory validation is performed on the client side regardless of the <code>clientSideMandatoryCheck<\/code> setting.\n\n<i>Example:<\/i>\n\n<pre>\n    &lt;Property Name=&quot;CategoryID&quot; Type=&quot;Edm.Decimal&quot; Nullable=&quot;false&quot;/&gt;\n<\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bClientSideMandatoryCheck?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bClientSideMandatoryCheck":"type: boolean, description: New value for property <code>clientSideMandatoryCheck<\/code>"}},"getShowLabel":{"!description":"Gets current value of property {@link #getShowLabel showLabel}.\n\nIf set to <code>false<\/code> the label is not displayed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTextAlign":{"!description":"Sets a new value for property {@link #getTextAlign textAlign}.\n\nHorizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign?: sap.ui.core.TextAlign) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property {@link #getTextDirection textDirection}.\n\nThe available text direction options are LTR and RTL. By default, the control inherits the text direction from its parent control.\n\nThe <code>textDirection<\/code> property can be used when, for example, the text direction in the application is LTR but you want a specific field to have RTL text direction.\n\n<b>Note:<\/b> The <code>textDirection<\/code> property is not applicable for the <code>SmartField<\/code> control for units of measure use cases.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection?: sap.ui.core.TextDirection) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getJsontype":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.31.0 with no replacement.<br>Gets current value of property {@link #getJsontype jsontype}.\n\nData types to be used, if the <code>SmartField<\/code> control is interacting with a JSON model. If the value property of the control is bound to a property of an OData entity set, this property is not taken into consideration.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.JSONType"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the text in the field has been changed and the focus leaves the field, or after the Enter key has been pressed.\n\n<b>Note:<\/b> This event is fired even if the value of the text input field is subject to data type constraints and the constraints are violated. Also, the invalid value is not stored in the binding/model.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyConfiguration":{"!description":"Destroys the configuration in the aggregation {@link #getConfiguration configuration}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.SmartField"},"setUrl":{"!description":"Sets a new value for property {@link #getUrl url}.\n\nContains a URL which is used to render a link. The link is rendered, if the OData property, to which the value property of the control is bound, is of type <code>Edm.String<\/code> and the <code>SmartField<\/code> is in display mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sUrl?: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sUrl":"type: string, description: New value for property <code>url<\/code>"}},"detachPress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.116.0 with no replacement.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.116.0 with no replacement.<br>Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUrl":{"!description":"Gets current value of property {@link #getUrl url}.\n\nContains a URL which is used to render a link. The link is rendered, if the OData property, to which the value property of the control is bound, is of type <code>Edm.String<\/code> and the <code>SmartField<\/code> is in display mode.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The <code>SmartField<\/code> control interprets metadata that represents entity-relationship models, data types, service capabilities, and annotations in OData services to automatically generate the underlying inner controls and reduce the amount of code needed for developing applications. In some cases, the OData entity is derived from the control's binding context. The OData entity property that is changed or displayed with the control is derived from the <code>value<\/code> property of the control.\n\n<h3>Structure <\/h3> The <code>SmartField<\/code> control contains a basic UI element and an optional label. In <code>display<\/code> mode the following UI elements are available to be rendered depending on the metadata: <ul> <li>{@link sap.m.Text Text}<\/li> <li>{@link sap.m.Link Link}<\/li> <li>{@link sap.ui.comp.navpopover.SmartLink SmartLink}<\/li> <\/ul> In <code>edit<\/code> mode, the available UI elements are: <ul> <li>One or two {@link sap.m.Input Input} fields (with or without a {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog ValueHelpDialog})<\/li> <li>{@link sap.m.Select Select}<\/li> <li>{@link sap.m.ComboBox ComboBox}<\/li> <li>{@link sap.m.TextArea TextArea}<\/li> <li>{@link sap.m.Checkbox Checkbox}<\/li> <li>{@link sap.m.DatePicker DatePicker}<\/li> <li>{@link sap.m.DateTimePicker DateTimePicker}<\/li> <li>{@link sap.m.TimePicker TimePicker}<\/li> <\/ul> The <code>SmartField<\/code> comes with additional built-in features, such as autocomplete and suggestions, value help dialog, recently used and recommended values, textInEditModeSource, validation, and message handling.\n\n<h3>Usage<\/h3> <i>When to use<\/i> <ul> <li>You use an OData service for your app (only OData version 2).<\/li> <li>You use the smart table and your app is not performance critical. The <code>SmartField<\/code> control offers more flexibility than the controls provided directly by the smart table, especially for editing.<\/li> <li>You use a smart form.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>You are not using OData version 2.<\/li> <li>You need a different control for entering or displaying data, such as multi input, a multi combo box, step input, a radio button, or a title. In this case, use the corresponding control directly.<\/li> <li>You need a different dialog for offering value help, such as the select dialog or table select dialog.<\/li> <li>You use the smart table and your app is performance critical. In this case, the controls offered directly by the smart table offer less flexibility but better performance.<\/li> <li> You need custom validations.<\/li> <\/ul>\n\n<b>Important:<\/b> Keep in mind that the <code>SmartField<\/code> control, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartField<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartField<\/code> only if you have control over the metadata of your application.<\/b>","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID | null","parameters":{"vAriaDescribedBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to be removed or its index or ID"}},"getIdForLabel":{"!description":"Gets the ID of the control to which the label should point.","!static":false,"!category":"function","!type":"fn() -> String"},"getUomVisible":{"!description":"Gets current value of property {@link #getUomVisible uomVisible}.\n\nIndicates whether the unit of measure field is visible.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this property can be ignored if the bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMaxLength":{"!description":"Sets a new value for property {@link #getMaxLength maxLength}.\n\nDefines the highest possible number of permitted input characters that the user can enter into the text input field.\n\n<h3>Computed <code>maxLength<\/code><\/h3> If the specified <code>maxLength<\/code> value is greater than the <code>maxLength<\/code> value specified for the underlying bound Entity Data Model (EDM) property in the service metadata document, the <code>maxLength<\/code> value of the EDM property takes precedence. Likewise, if the application code provides a binding data type for the <code>value<\/code> property of the <code>SmartField<\/code> control and the binding data type has <code>maxLength<\/code> constraints defined, this <code>maxLength<\/code> is also taken into consideration to compute the final <code>maxLength<\/code> value.\n\n<h3>Validation Behavior<\/h3> By design, the <code>SmartField<\/code> control does not restrict/validate the highest number of permitted input characters for every keystroke, but only when the text input field has changed, and the browser focus leaves the text input field or the ENTER key is pressed. The <code>SmartField<\/code> control is used more generically in broader contexts, and adding a <code>maxLength<\/code> attribute to the HTML text input control may break data type formatting in two-way data-binding scenarios. Let's say the <code>maxLength<\/code> property is set to 3, but the text input control has a formatter function attached to it to format the entered value \"DE\" to \"Germany (DE)\". In this case, the formatted value will be truncated by the <code>maxLength<\/code> setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength?: Number) -> sap.ui.comp.smartfield.SmartField","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"destroyControlProposal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 with no replacement.<br>Destroys the controlProposal in the aggregation {@link #getControlProposal controlProposal}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.SmartField"},"detachInnerControlsCreated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:innerControlsCreated innerControlsCreated} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSemanticObjectController":{"!description":"Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"setTooltipLabel":{"!description":"Sets a new value for property {@link #getTooltipLabel tooltipLabel}.\n\nThis property contains the tool tip of the associated <code>SmartLabel<\/code> control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTooltipLabel?: String) -> sap.ui.comp.smartfield.SmartField","parameters":{"sTooltipLabel":"type: string, description: New value for property <code>tooltipLabel<\/code>"}},"setShowValueHelp":{"!description":"Sets a new value for property {@link #getShowValueHelp showValueHelp}.\n\nIf set to <code>true<\/code>, a value help indicator will be displayed inside the hosted control, if the hosted control supports this.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueHelp?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bShowValueHelp":"type: boolean, description: New value for property <code>showValueHelp<\/code>"}},"attachLinkPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:linkPress linkPress} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nFires when the user triggers the link control When handler attached, the rendered control is <code>sap.m.Link<\/code>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setMandatory":{"!description":"Sets a new value for property {@link #getMandatory mandatory}.\n\nIndicates whether user input is required.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven and this property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property is annotated with the <code>Nullable<\/code> annotation. The <code>Nullable<\/code> annotation is a capability of the OData service that specifies whether a value is mandatory, hence it overrules the control's API settings. Therefore, if the <code>Nullable<\/code> attribute is specified as <code>Nullable=\"false\"<\/code>, a value is mandatory.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMandatory?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bMandatory":"type: boolean, description: New value for property <code>mandatory<\/code>"}},"getWrapping":{"!description":"Gets current value of property {@link #getWrapping wrapping}.\n\nIndicates whether the control break lines (in display mode) to prevent overflow.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContextEditable":{"!description":"Gets current value of property {@link #getContextEditable contextEditable}.\n\nNotifies the control whether controls using the <code>SmartField<\/code> control are editable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowValueStateMessage":{"!description":"Gets current value of property {@link #getShowValueStateMessage showValueStateMessage}.\n\nDefines whether the value state message is shown or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"_setVisibilityBasedOnImportance":{"!description":"Changes the visibility of the <code>SmartField<\/code> based on the <code>SmartField<\/code> and <code>SmartForm<\/code> <code>importance<\/code> property. When the <code>SmartForm<\/code> has <code>importance high<\/code>, only fields with high importance will be visible. When the <code>SmartForm<\/code> has <code>importance medium<\/code>, only fields with high or medium importance will be shown. When the <code>SmartForm<\/code> has <code>importance low<\/code>, all fields will be visible.","!static":false,"!category":"function","!type":"fn(sFormImportance: sap.ui.comp.smartform.Importance)","parameters":{"sFormImportance":"type: sap.ui.comp.smartform.Importance, description: The <code>SmartForm<\/code> <code>importance<\/code> property"}},"!proto":"sap.ui.core.Control","getDataProperty":{"!description":"Returns the OData property to which the <code>value<\/code> property of the control is bound.","!static":false,"!category":"function","!type":"fn() -> Object<string> | null"},"getTextAlign":{"!description":"Gets current value of property {@link #getTextAlign textAlign}.\n\nHorizontal alignment of the text.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","setUomEditable":{"!description":"Sets a new value for property {@link #getUomEditable uomEditable}.\n\nIndicates whether the unit of measure field is in display or edit mode.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUomEditable?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bUomEditable":"type: boolean, description: New value for property <code>uomEditable<\/code>"}},"_getComputedMetadata":{"!description":"Returns computed service metadata in smartfield internal format. The only purpose this object is exposed is to be used to calculate the FieldGroupIDs for navigation properties.","!static":false,"!category":"function","!type":"fn() -> Promise<object>"},"attachEditableChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:editableChanged editableChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nFired when the control is rendered if the value of <code>editable<\/code> property of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEntitySet entitySet} : string (default: \"\")<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getContextEditable contextEditable} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: \"\")<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string (default: \"\")<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getJsontype jsontype} : sap.ui.comp.smartfield.JSONType<\/li>\n<li>{@link #getMandatory mandatory} : boolean (default: false)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getShowSuggestion showSuggestion} : boolean (default: true)<\/li>\n<li>{@link #getShowValueHelp showValueHelp} : boolean (default: true)<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: true)<\/li>\n<li>{@link #getTextLabel textLabel} : string (default: \"\")<\/li>\n<li>{@link #getTooltipLabel tooltipLabel} : string (default: \"\")<\/li>\n<li>{@link #getUomVisible uomVisible} : boolean (default: true)<\/li>\n<li>{@link #getUomEditable uomEditable} : boolean (default: true)<\/li>\n<li>{@link #getUomEnabled uomEnabled} : boolean (default: true)<\/li>\n<li>{@link #getUrl url} : string (default: \"\")<\/li>\n<li>{@link #getUomEditState uomEditState} : int (default: -1)<\/li>\n<li>{@link #getControlContext controlContext} : sap.ui.comp.smartfield.ControlContextType (default: None)<\/li>\n<li>{@link #getProposedControl proposedControl} : sap.ui.comp.smartfield.ControlProposalType (default: None)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getClientSideMandatoryCheck clientSideMandatoryCheck} : boolean (default: true)<\/li>\n<li>{@link #getFetchValueListReadOnly fetchValueListReadOnly} : boolean (default: true)<\/li>\n<li>{@link #getExpandNavigationProperties expandNavigationProperties} : boolean (default: false)<\/li>\n<li>{@link #getTextInEditModeSource textInEditModeSource} : sap.ui.comp.smartfield.TextInEditModeSource (default: None)<\/li>\n<li>{@link #getHistoryEnabled historyEnabled} : boolean (default: true)<\/li>\n<li>{@link #getImportance importance} : sap.ui.comp.smartfield.Importance (default: Low)<\/li>\n<li>{@link #getFixedValueListValidationEnabled fixedValueListValidationEnabled} : boolean (default: false)<\/li>\n<li>{@link #get_internalFieldGroupIds _internalFieldGroupIds} : string[] (default: [])<\/li>\n<li>{@link #getSuppressEmptyStringRequest suppressEmptyStringRequest} : boolean (default: true)<\/li>\n<li>{@link #getValueHelpTitleSource valueHelpTitleSource} : sap.ui.comp.smartfield.ValueHelpTitleSource (default: Property)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getConfiguration configuration} : sap.ui.comp.smartfield.Configuration<\/li>\n<li>{@link #getControlProposal controlProposal} : sap.ui.comp.smartfield.ControlProposal<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : sap.ui.comp.navpopover.SemanticObjectController<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:entitySetFound entitySetFound} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeModelValue changeModelValue} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visibleChanged visibleChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editableChanged editableChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:contextEditableChanged contextEditableChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:modeToggled modeToggled} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerControlsCreated innerControlsCreated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueListChanged valueListChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:linkPress linkPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getConfiguration":{"!description":"Gets content of aggregation {@link #getConfiguration configuration}.\n\nOptional configuration for <code>SmartField<\/code>.\n\n<b>Note<\/b>: By default, the value of the <code>displayBehaviour<\/code> property is not evaluated in edit mode. To enable this feature in edit mode, set the <code>textInEditModeSource<\/code> control property to a non-default value.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.Configuration"},"setHistoryEnabled":{"!description":"Sets a new value for property {@link #getHistoryEnabled historyEnabled}.\n\nIf the property is set to <code>false<\/code>, history values are disabled. Changes at runtime are not reflected. The <code>historyEnabled<\/code> property is not applied to custom controls.\n\n<b>Note:<\/b> For {@link sap.m.ComboBox} and {@link sap.m.MultiComboBox} the history values are disabled by default. To enable them for these controls, you need to set the <code>historyEnabled<\/code> property to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHistoryEnabled?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bHistoryEnabled":"type: boolean, description: New value for property <code>historyEnabled<\/code>"}},"getUomEditable":{"!description":"Gets current value of property {@link #getUomEditable uomEditable}.\n\nIndicates whether the unit of measure field is in display or edit mode.\n\n<b>Note:<\/b> This control property is only valid if the <code>SmartField<\/code> control addresses a unit of measure composite field, for example, an amount field and its associated currency field. The field must then be annotated with one of the following annotations:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:unit<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.ISOCurrency<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Measures.V1.Unit<\/code> annotation.<\/li> <\/ul>\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nIndicates whether the user can interact with the control or not. <b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab order.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setProposedControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Sets a new value for property {@link #getProposedControl proposedControl}.\n\nProposes a control to be rendered. The <code>SmartField<\/code> control can ignore the proposal.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sProposedControl?: sap.ui.comp.smartfield.ControlProposalType) -> sap.ui.comp.smartfield.SmartField","parameters":{"sProposedControl":"type: sap.ui.comp.smartfield.ControlProposalType, description: New value for property <code>proposedControl<\/code>"}},"setConfiguration":{"!description":"Sets the aggregated {@link #getConfiguration configuration}.","!static":false,"!category":"function","!type":"fn(oConfiguration: sap.ui.comp.smartfield.Configuration) -> sap.ui.comp.smartfield.SmartField","parameters":{"oConfiguration":"type: sap.ui.comp.smartfield.Configuration, description: The configuration to set"}},"setSuppressEmptyStringRequest":{"!description":"Sets a new value for property {@link #getSuppressEmptyStringRequest suppressEmptyStringRequest}.\n\nControls if a query is sent to the backend in case of an empty string.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSuppressEmptyStringRequest?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bSuppressEmptyStringRequest":"type: boolean, description: New value for property <code>suppressEmptyStringRequest<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID | null","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setExpandNavigationProperties":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.117 It is recommended the expand to be using the OData Model.<br>Sets a new value for property {@link #getExpandNavigationProperties expandNavigationProperties}.\n\nIndicates if entities related to navigation properties inside the metadata are requested. If set to <code>true<\/code>, then these related entities are loaded with an <code>$expand<\/code> request.\n\nAnnotations that can have navigation properties are the following: <ul> <li> <code>com.sap.vocabularies.Common.v1.Text<\/code> for text arrangements <li> <code>Org.OData.Measures.V1.Unit<\/code> and <code>Org.OData.Measures.V1.ISOCurrency<\/code> for units <li> <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> for field control <\/ul>\n\n<b>Note:<\/b> Independent of the <code>fetchValueListReadOnly<\/code> value, setting this flag to <code>true<\/code> requests data from the backend.\n\n<b>Note:<\/b> The back-end request to expand the navigation properties is sent only if the entity to which <code>SmartField<\/code> is bound is persisted. For transient entities, there is no back-end request since no such data is available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandNavigationProperties?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bExpandNavigationProperties":"type: boolean, description: New value for property <code>expandNavigationProperties<\/code>"}},"detachModeToggled":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:modeToggled modeToggled} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getValueStateText":{"!description":"Gets current value of property {@link #getValueStateText valueStateText}.\n\nDefines the text of the value state message popup.\n\n<b>Note:<\/b> This method is public because of an implementation side effect and should not be used for validation purposes as it may conflict with the <code>SmartField<\/code> control's own binding type validation logic based on the underlying metadata of the bound Entity Data Model (EDM) property. Invoking the <code>.setValueState()<\/code> and/or <code>.setValueStateText()<\/code> methods in a <code>change<\/code> event handle to set an error state does not prevent an invalid value from being stored in the binding/model in two-way data binding scenarios. In addition, it does not fire the <code>validationError<\/code> event, which is usually required by some upstream modules, for example, the message manager.\n\nCustom validation logic must be implemented in a custom binding type rather than in a <code>change<\/code> event handler.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getHistoryEnabled":{"!description":"Gets current value of property {@link #getHistoryEnabled historyEnabled}.\n\nIf the property is set to <code>false<\/code>, history values are disabled. Changes at runtime are not reflected. The <code>historyEnabled<\/code> property is not applied to custom controls.\n\n<b>Note:<\/b> For {@link sap.m.ComboBox} and {@link sap.m.MultiComboBox} the history values are disabled by default. To enable them for these controls, you need to set the <code>historyEnabled<\/code> property to <code>true<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSuppressEmptyStringRequest":{"!description":"Gets current value of property {@link #getSuppressEmptyStringRequest suppressEmptyStringRequest}.\n\nControls if a query is sent to the backend in case of an empty string.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachLinkPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:linkPress linkPress} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getComputedTextLabel":{"!static":false,"!category":"function","!type":"fn()"},"setControlProposal":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 with no replacement.<br>Sets the aggregated {@link #getControlProposal controlProposal}.","!static":false,"!category":"function","!type":"fn(oControlProposal: sap.ui.comp.smartfield.ControlProposal) -> sap.ui.comp.smartfield.SmartField","parameters":{"oControlProposal":"type: sap.ui.comp.smartfield.ControlProposal, description: The controlProposal to set"}},"getClientSideMandatoryCheck":{"!description":"Gets current value of property {@link #getClientSideMandatoryCheck clientSideMandatoryCheck}.\n\nDetermines if the mandatory check of whether the field has a value happens on the client side - <code>true<\/code> or on the server side - <code>false<\/code>.\n\n<b>Note:<\/b> If the {@link sap.ui.comp.smartfield.SmartField#value} property of the <code>SmartField<\/code> control is bound to an Entity Data Model (EDM) property of type different from Edm.String annotated as <code>Nullable=\"false\"<\/code>, the mandatory validation is performed on the client side regardless of the <code>clientSideMandatoryCheck<\/code> setting.\n\n<i>Example:<\/i>\n\n<pre>\n    &lt;Property Name=&quot;CategoryID&quot; Type=&quot;Edm.Decimal&quot; Nullable=&quot;false&quot;/&gt;\n<\/pre>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe binding path expression used to determine the bound Entity Data Model (EDM) property.\n\n<b>Note:<\/b> Composite binding expressions for this property are not supported. <b>Note:<\/b> Custom formatters for this property are not supported. The <code>SmartField<\/code> control usually creates its own data type based on the service metadata for the formatting of values. Also, when a custom formatter is specified for a property, the binding mode is automatically switched to one-way binding mode. <b>Note:<\/b> Named models are not supported, only the default model (named undefined) is supported. For example, when the binding path expression contains a <code>&gt;<\/code> sign, the string preceding it is a named model and the remainder after the <code>&gt;<\/code> is the binding path.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the smart field has calculated its metadata.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireInnerControlsCreated":{"!description":"Fires event {@link #event:innerControlsCreated innerControlsCreated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEditable":{"!description":"Sets a new value for property {@link #getEditable editable}.\n\nIndicates whether the control is in display or edit mode.\n\n<b>Note:<\/b> The <code>SmartField<\/code> control is metadata-driven, and this control property can be ignored if the following applies:\n\n<ul> <li>The bound Entity Data Model (EDM) property or its entity set are annotated with the OData V2 <code>sap:updatable<\/code> annotation.<\/li> <li>The bound EDM property or its entity set are annotated with the <code>sap:creatable<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V2 <code>sap:updatable-path<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.InsertRestrictions<\/code> annotation.<\/li> <li>The bound EDM property is annotated with the <code>com.sap.vocabularies.Common.v1.FieldControl<\/code> annotation.<\/li> <li>The entity set of the bound EDM property is annotated with the OData V4 <code>Org.OData.Capabilities.V1.UpdateRestrictions<\/code> annotation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable?: Boolean) -> sap.ui.comp.smartfield.SmartField","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>, <code>Information<\/code>.\n\n<b>Note:<\/b> This method is public because of an implementation side effect and should not be used for validation purposes as it may conflict with the <code>SmartField<\/code> control's own binding type validation logic based on the underlying metadata of the bound Entity Data Model (EDM) property. Invoking the <code>.setValueState()<\/code> and/or <code>.setValueStateText()<\/code> methods in a <code>change<\/code> event handle to set an error state does not prevent an invalid value from being stored in the binding/model in two-way data binding scenarios. In addition, it does not fire the <code>validationError<\/code> event, which is usually required by some upstream modules, for example, the message manager.\n\nCustom validation logic must be implemented in a custom binding type rather than in a <code>change<\/code> event handler.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getMaxLength":{"!description":"Gets current value of property {@link #getMaxLength maxLength}.\n\nDefines the highest possible number of permitted input characters that the user can enter into the text input field.\n\n<h3>Computed <code>maxLength<\/code><\/h3> If the specified <code>maxLength<\/code> value is greater than the <code>maxLength<\/code> value specified for the underlying bound Entity Data Model (EDM) property in the service metadata document, the <code>maxLength<\/code> value of the EDM property takes precedence. Likewise, if the application code provides a binding data type for the <code>value<\/code> property of the <code>SmartField<\/code> control and the binding data type has <code>maxLength<\/code> constraints defined, this <code>maxLength<\/code> is also taken into consideration to compute the final <code>maxLength<\/code> value.\n\n<h3>Validation Behavior<\/h3> By design, the <code>SmartField<\/code> control does not restrict/validate the highest number of permitted input characters for every keystroke, but only when the text input field has changed, and the browser focus leaves the text input field or the ENTER key is pressed. The <code>SmartField<\/code> control is used more generically in broader contexts, and adding a <code>maxLength<\/code> attribute to the HTML text input control may break data type formatting in two-way data-binding scenarios. Let's say the <code>maxLength<\/code> property is set to 3, but the text input control has a formatter function attached to it to format the entered value \"DE\" to \"Germany (DE)\". In this case, the formatted value will be truncated by the <code>maxLength<\/code> setting.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe binding path expression used to determine the bound Entity Data Model (EDM) property.\n\n<b>Note:<\/b> Composite binding expressions for this property are not supported. <b>Note:<\/b> Custom formatters for this property are not supported. The <code>SmartField<\/code> control usually creates its own data type based on the service metadata for the formatting of values. Also, when a custom formatter is specified for a property, the binding mode is automatically switched to one-way binding mode. <b>Note:<\/b> Named models are not supported, only the default model (named undefined) is supported. For example, when the binding path expression contains a <code>&gt;<\/code> sign, the string preceding it is a named model and the remainder after the <code>&gt;<\/code> is the binding path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValue?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"}},"getControlContext":{"!description":"Gets current value of property {@link #getControlContext controlContext}.\n\nDefines the context in which the layout of the <code>SmartField<\/code> control has to be interpreted.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.ControlContextType"},"fireVisibleChanged":{"!description":"Fires event {@link #event:visibleChanged visibleChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setControlContext":{"!description":"Sets a new value for property {@link #getControlContext controlContext}.\n\nDefines the context in which the layout of the <code>SmartField<\/code> control has to be interpreted.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sControlContext?: sap.ui.comp.smartfield.ControlContextType) -> sap.ui.comp.smartfield.SmartField","parameters":{"sControlContext":"type: sap.ui.comp.smartfield.ControlContextType, description: New value for property <code>controlContext<\/code>"}},"attachVisibleChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself.\n\nThe event is fired after the visibility of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfield.SmartField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachEntitySetFound":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:entitySetFound entitySetFound} event of this <code>sap.ui.comp.smartfield.SmartField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfield.SmartField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}}},"sap.ui.comp.smartfilterbar.SelectOption_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SelectOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.SelectOption"},"sap.ui.comp.state":{"UIState":"sap.ui.comp.state.UIState_obj","presentationVariant":{"!description":"Object representing the presentation variant. The structure looks like:\n\n<pre><code>\n{\n\tContextUrl: {string},\n\tMaxItems: {int},\n SortOrder: [],\n\tGroupBy: [],\n\tTotal: [],\n\tRequestAtLeast: [],\n\tVisualizations: []\n}\n<\/code><\/pre>\n\n<b>Note:<\/b> <ul> <li> <code>PresentationVariantID<\/code> property is not provided<\/li> <li> <code>Text<\/code> property is not provided because it is translated text<\/li> <li> <code>TotalBy<\/code> is not supported yet<\/li> <li> <code>IncludeGrandTotal<\/code> is not supported yet<\/li> <li> <code>InitialExpansionLevel<\/code> is not supported yet<\/li> <li> <code>Title<\/code> of <code>Visualizations.Content<\/code> property is not provided because it is translated text<\/li> <li> <code>Description<\/code> of <code>Visualizations.Content<\/code> property is not provided because it is translated text<\/li> <li> <code>VariantName<\/code> property is not part of specified DataSuiteFormat yet <\/ul>","!category":"enum","!type":"Object"},"selectionVariant":{"!description":"Object representing the selection variant. The structure looks like:\n\n<pre><code>\n{\n SelectionVariant: {\n     SelectionVariantID: {string},\n\t\tParameters: [],\n\t\tSelectOptions: []\n}\n<\/code><\/pre>","!category":"enum","!type":"Object"},"!category":"namespace","variantName":{"!description":"Variant name.","!category":"enum","!type":"String"},"valueTexts":{"!description":"Structure containing filter value keys and its corresponding descriptions.\n\n<pre><code>\n{\n\tTexts: [\n\t\t{\n\t\t\tLanguage: string,\n\t\t\tContextUrl: string,\n\t\t\tPropertyTexts: [\n\t\t\t\t{\n\t\t\t\t\tPropertyName: string,\n\t\t\t\t\tValueTexts: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tPropertyValue: string,\n\t\t\t\t\t\t\tText: string\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n<\/code><\/pre>","!category":"enum","!type":"Object"},"semanticDates":{"!description":"Structure containing Date range semantic data of the filter value.\n\n<pre><code>\n{\n\tDates: [\n\t\t{\n\t\t\tPropertyName: string,\n\t\t\tData: {\n\t\t\t\t\tcalendarType: string,\n\t\t\t\t\tkey: string,\n\t\t\t\t\toperation: string,\n\t\t\t\t\tvalue1: int,\n\t\t\t\t\tvalue2: int\n\t\t\t\t}\n\t\t}\n\t]\n}\n<\/code><\/pre>","!category":"enum","!type":"Object"}},"sap.ui.comp.navpopover.LinkData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.LinkData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.link.LinkItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.LinkData"},"sap.ui.comp.filterbar.FilterGroupItem":{"!description":"Represents a filter belonging to a group other than basic.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.filterbar.FilterGroupItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisibleInFilterBar":{"!description":"Controls the visibility of a filter item in the filter bar.<BR> Default value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.comp.filterbar.FilterItem","destroy":{"!description":"Destroys this element.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","setGroupTitle":{"!description":"Setter for group title.","!static":false,"!category":"function","!type":"fn(sValue: String)","parameters":{"sValue":"type: string, description: Group title"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getGroupName":{"!description":"Gets current value of property {@link #getGroupName groupName}.\n\nName of the group.","!static":false,"!category":"function","!type":"fn() -> String"},"setGroupName":{"!description":"Sets a new value for property {@link #getGroupName groupName}.\n\nName of the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupName?: String) -> sap.ui.comp.filterbar.FilterGroupItem","parameters":{"sGroupName":"type: string, description: New value for property <code>groupName<\/code>"}},"!constructorDescription":"Constructor for a new FilterBar/FilterGroupItem.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupTitle groupTitle} : string<\/li>\n<li>{@link #getGroupName groupName} : string<\/li>\n<li>{@link #getVisibleInAdvancedArea visibleInAdvancedArea} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.filterbar.FilterItem#constructor sap.ui.comp.filterbar.FilterItem}\ncan be used as well.","!module":"sap/ui/comp/filterbar/FilterGroupItem","!helpDescription":"Represents a filter belonging to a group other than basic.","getGroupTitle":{"!description":"Gets current value of property {@link #getGroupTitle groupTitle}.\n\nTitle of the group.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.smartfield.ComboBox":{"!description":"Extends the functionalities in sap.m.ComboBox","setValueTextArrangement":{"!description":"Sets a new value for property {@link #getValueTextArrangement valueTextArrangement}.\n\nSets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueTextArrangement?: String) -> sap.ui.comp.smartfield.ComboBox","parameters":{"sValueTextArrangement":"type: string, description: New value for property <code>valueTextArrangement<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.ComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Sets a new value for property {@link #getSelectedKey selectedKey}.\n\nKey of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedKey?: String) -> sap.ui.comp.smartfield.ComboBox","parameters":{"sSelectedKey":"type: string, description: New value for property <code>selectedKey<\/code>"}},"!proto":"sap.m.ComboBox","!category":"class","getEnteredValue":{"!description":"Gets current value of property {@link #getEnteredValue enteredValue}.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getRealValue":{"!description":"Gets current value of property {@link #getRealValue realValue}.\n\nProperty works the same as sap.m.Input control <code>value<\/code>","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>SmartField/ComboBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getEnteredValue enteredValue} : string<\/li>\n<li>{@link #getRealValue realValue} : string<\/li>\n<li>{@link #getValueTextArrangement valueTextArrangement} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBox#constructor sap.m.ComboBox}\ncan be used as well.","setRealValue":{"!description":"Sets a new value for property {@link #getRealValue realValue}.\n\nProperty works the same as sap.m.Input control <code>value<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRealValue?: String) -> sap.ui.comp.smartfield.ComboBox","parameters":{"sRealValue":"type: string, description: New value for property <code>realValue<\/code>"}},"!module":"sap/ui/comp/smartfield/ComboBox","getSelectedKey":{"!description":"Gets current value of property {@link #getSelectedKey selectedKey}.\n\nKey of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Extends the functionalities in sap.m.ComboBox","getValueTextArrangement":{"!description":"Gets current value of property {@link #getValueTextArrangement valueTextArrangement}.\n\nSets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnteredValue":{"!description":"Sets a new value for property {@link #getEnteredValue enteredValue}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEnteredValue?: String) -> sap.ui.comp.smartfield.ComboBox","parameters":{"sEnteredValue":"type: string, description: New value for property <code>enteredValue<\/code>"}}},"sap.ui.comp.variants.VariantManagement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantManagement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.variants.VariantManagement"},"sap.ui.comp.smartfilterbar.SmartFilterBarFilterGroupItem":{"!description":"Represents a filter belonging to a group other than basic.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBarFilterGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterGroupItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.SmartFilterBarFilterGroupItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FilterBar/FilterGroupItem.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.comp.filterbar.FilterGroupItem#constructor sap.ui.comp.filterbar.FilterGroupItem} can be used.","getControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 Use {@link sap.ui.core.Core.byId} instead!<br>Returns instance of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control | null"},"!module":"sap/ui/comp/smartfilterbar/SmartFilterBarFilterGroupItem","!helpDescription":"Represents a filter belonging to a group other than basic.","!proto":"sap.ui.comp.filterbar.FilterGroupItem","!category":"class","setControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 There is no replacement as all internal controls are considered private.<br>undefined","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control)","parameters":{"oControl":"type: sap.ui.core.Control, description: associated with the filter."}}},"sap.ui.comp.smartfield.ObjectStatus":{"!description":"Defines a possible object status control to be rendered. The smart field may ignore the proposal.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ObjectStatus with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfield.ObjectStatus.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SmartField/ObjectStatus<\/code> to be used in the <code>controlProposal<\/code> configuration\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCriticality criticality} : any<\/li>\n<li>{@link #getCriticalityRepresentationType criticalityRepresentationType} : sap.ui.comp.smartfield.CriticalityRepresentationType (default: WithIcon)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfield/ObjectStatus","getCriticality":{"!description":"Gets current value of property {@link #getCriticality criticality}.\n\nOptional attribute to determine the rendered state. Possible values are the numeric representations of the enum members of annotation <code>com.sap.vocabularies.UI.v1.CriticalityType<\/code>: 0: None 1: Error 2: Warning 3: Success","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"Defines a possible object status control to be rendered. The smart field may ignore the proposal.","!proto":"sap.ui.core.Element","getCriticalityRepresentationType":{"!description":"Gets current value of property {@link #getCriticalityRepresentationType criticalityRepresentationType}.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nDefault value is <code>WithIcon<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.CriticalityRepresentationType"},"!category":"class","setCriticality":{"!description":"Sets a new value for property {@link #getCriticality criticality}.\n\nOptional attribute to determine the rendered state. Possible values are the numeric representations of the enum members of annotation <code>com.sap.vocabularies.UI.v1.CriticalityType<\/code>: 0: None 1: Error 2: Warning 3: Success\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oCriticality?: Object) -> sap.ui.comp.smartfield.ObjectStatus","parameters":{"oCriticality":"type: any, description: New value for property <code>criticality<\/code>"}},"setCriticalityRepresentationType":{"!description":"Sets a new value for property {@link #getCriticalityRepresentationType criticalityRepresentationType}.\n\nOptional attribute, which can be set to control how the criticality is visualized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>WithIcon<\/code>.","!static":false,"!category":"function","!type":"fn(sCriticalityRepresentationType?: sap.ui.comp.smartfield.CriticalityRepresentationType) -> sap.ui.comp.smartfield.ObjectStatus","parameters":{"sCriticalityRepresentationType":"type: sap.ui.comp.smartfield.CriticalityRepresentationType, description: New value for property <code>criticalityRepresentationType<\/code>"}}},"sap.ui.comp.smartfilterbar.MandatoryType":{"!description":"The different options to define mandatory state for fields in the SmartFilter control.","auto":{"!description":"Shows values based on metadata.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","notMandatory":{"!description":"Shows field as not mandatory.","!category":"enum","!type":"String"},"mandatory":{"!description":"Shows field as mandatory.","!category":"enum","!type":"String"}},"sap.ui.comp.smartmicrochart.SmartRadialMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartRadialMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartRadialMicroChart"},"sap.ui.comp.smartfield.Importance":{"!description":"Provides information about the importance of the field","High":{"!description":"<code>SmartField<\/code> with high importance","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","Low":{"!description":"<code>SmartField<\/code> with low importance","!category":"enum","!type":"String"},"Medium":{"!description":"<code>SmartField<\/code> with medium importance","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.comp.TextArrangementType":{"!description":"Enumeration of text arrangement types.","!module":"sap/ui/comp/library","TextSeparate":{"!description":"ID and description are represented separately.","!category":"enum","!type":"String"},"TextFirst":{"!description":"Text comes first, followed by the ID.","!category":"enum","!type":"String"},"TextLast":{"!description":"ID comes first, followed by the description.","!category":"enum","!type":"String"},"!category":"static class","TextOnly":{"!description":"Only description is represented, ID is hidden (for example, for <code>UUIDs<\/code>).","!category":"enum","!type":"String"}},"sap.ui.comp.smartvariants.SmartVariantManagementAdapter":{"!description":"Handles the odata metadata based information. An instance of this class will be created and used by the {@link sap.ui.comp.smartvariants.SmartVariantManagement SmartVariantManagement} control. The adapter transforms odata metadata based SelectionPresentationVariant information to UIState object. For each SelectionPresentationVariant annotation an entry will be added to the VariantManagement control. It will be called by the SmartVariantManagement whenever the user selects the corresponding entry and will provide a valid {@link sap.ui.comp.state.UIState UIState} object.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementAdapter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementAdapter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for new instance of a SmartVariantManagementAdapter control.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectionPresentationVariants selectionPresentationVariants} : object (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartvariants/SmartVariantManagementAdapter","!helpDescription":"Handles the odata metadata based information. An instance of this class will be created and used by the {@link sap.ui.comp.smartvariants.SmartVariantManagement SmartVariantManagement} control. The adapter transforms odata metadata based SelectionPresentationVariant information to UIState object. For each SelectionPresentationVariant annotation an entry will be added to the VariantManagement control. It will be called by the SmartVariantManagement whenever the user selects the corresponding entry and will provide a valid {@link sap.ui.comp.state.UIState UIState} object.","setSelectionPresentationVariants":{"!description":"Sets a new value for property {@link #getSelectionPresentationVariants selectionPresentationVariants}.\n\nassign an array of selectionPresentationVariants annotations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectionPresentationVariants?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementAdapter","parameters":{"oSelectionPresentationVariants":"type: object, description: New value for property <code>selectionPresentationVariants<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","getSelectionPresentationVariants":{"!description":"Gets current value of property {@link #getSelectionPresentationVariants selectionPresentationVariants}.\n\nassign an array of selectionPresentationVariants annotations.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.comp.config":{"!category":"namespace","conditionType":{"!description":"The <code>conditionType<\/code> class name to be used for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type","!category":"enum","!type":"Object"},"FilterControlConfiguration":"sap.ui.comp.config.FilterControlConfiguration_obj","ControlConfigurationBase":"sap.ui.comp.config.ControlConfigurationBase_obj","key":{"!description":"The <code>key<\/code> property corresponds to the field name from the OData service $metadata document.","!category":"enum","!type":"String"}},"sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart":{"!description":"The SmartStackedBarMicroChart control creates a StackedBarMicroChart based on OData metadata and the configuration specified. The <code>entitySet<\/code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most properties are not dynamic and cannot be changed, once the control has been initialised.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase} can be used.","!module":"sap/ui/comp/smartmicrochart/SmartStackedBarMicroChart","!helpDescription":"The SmartStackedBarMicroChart control creates a StackedBarMicroChart based on OData metadata and the configuration specified. The <code>entitySet<\/code> property is required. The entity set you specify in this property is used to fetch OData metadata and to generate the micro chart's UI. This property can also be used to fetch actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most properties are not dynamic and cannot be changed, once the control has been initialised.","!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class"},"sap.ui.comp.util.TableUtil":{"!description":"Utility class that provides useful functionality in the <code>SmartTable<\/code> context.","!module":"sap/ui/comp/util/TableUtil","!helpDescription":"Utility class that provides useful functionality in the <code>SmartTable<\/code> context.","getCustomColumns":{"!description":"Returns an array of all custom columns.","!static":"true","!category":"function","!type":"fn(oTable: sap.ui.comp.smarttable.SmartTable) -> [sap.ui.table.Column[] | sap.m.Column]"},"!category":"namespace"},"sap.ui.comp.smartfilterbar.SmartFilterBar":{"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe OData entity set whose metadata is used to create the <code>SmartFilterBar<\/code>. <b>Note:<\/b> Changing this value after the <code>SmartFilterBar<\/code> is initialized (<code>initialise<\/code> event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> String"},"isInitialised":{"!description":"Checks whether the control is initialised","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowMessages":{"!description":"Sets a new value for property {@link #getShowMessages showMessages}.\n\nIf set to <code>true<\/code>, any errors that occur during the search, are displayed in a message box in addition to the <code>valueState<\/code> with the error. <b>Note:<\/b> As of version 1.89, the default value has been changed from <code>true<\/code> to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMessages?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bShowMessages":"type: boolean, description: New value for property <code>showMessages<\/code>"}},"removeGroupConfiguration":{"!description":"Removes a groupConfiguration from the aggregation {@link #getGroupConfiguration groupConfiguration}.","!static":false,"!category":"function","!type":"fn(vGroupConfiguration: Number | String | sap.ui.comp.smartfilterbar.GroupConfiguration) -> sap.ui.comp.smartfilterbar.GroupConfiguration | null","parameters":{"vGroupConfiguration":"type: int|string|sap.ui.comp.smartfilterbar.GroupConfiguration, description: The groupConfiguration to remove or its index or id"}},"getParameterBindingPath":{"!description":"Returns the binding paths for the parameters. This API can be used for both analytical and non-analytical services. <b>Note<\/b>For analytical services, the API is NOT stable yet. Use at your own risk.","!static":false,"!category":"function","!type":"fn() -> String"},"openValueHelpRequestForFilterItem":{"!description":"Gets the filter by property name and opens its value help dialog","!static":false,"!category":"function","!type":"fn(sPropertyName: String)","parameters":{"sPropertyName":"type: String, description: property name from metadata"}},"setSuppressSelection":{"!description":"Sets a new value for property {@link #getSuppressSelection suppressSelection}.\n\nIf set to <code>true<\/code> all search requests will be ignored. This functionality is only intended to be used internally to enable an optimal solution when the filter bar is controlled by the smart templates. NOTE: As long as this property is set to <code>true<\/code>, all search requests will be neglected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSuppressSelection?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bSuppressSelection":"type: boolean, description: New value for property <code>suppressSelection<\/code>"}},"getUseProvidedNavigationProperties":{"!description":"Gets current value of property {@link #getUseProvidedNavigationProperties useProvidedNavigationProperties}.\n\nIf set to <code>true<\/code>, only the navigation properties mentioned in property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getNavigationProperties} are checked for further filters.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addGroupConfiguration":{"!description":"Adds some groupConfiguration to the aggregation {@link #getGroupConfiguration groupConfiguration}.","!static":false,"!category":"function","!type":"fn(oGroupConfiguration: sap.ui.comp.smartfilterbar.GroupConfiguration) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oGroupConfiguration":"type: sap.ui.comp.smartfilterbar.GroupConfiguration, description: The groupConfiguration to add; if empty, nothing is inserted"}},"setFilterData":{"!description":"Sets the data in the filter data model. The follow-on filterChange event is only triggered when none _CUSTOM data is set.","!static":false,"!category":"function","!type":"fn(oJson: Object, bReplace: Boolean)","parameters":{"oJson":"type: object, description: The JSON data in the filter bar","bReplace":"type: boolean, description: Replace existing filter data"}},"determineControlByFilterItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 Use {@link sap.ui.core.Core.byId} instead.<br>Retrieves the control associated to the filter.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem, bConsiderParameters: Boolean) -> sap.ui.core.Control","parameters":{"oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: From the aggregations","bConsiderParameters":"type: boolean, description: check also analytics parameter"}},"insertControlConfiguration":{"!description":"Inserts a controlConfiguration into the aggregation {@link #getControlConfiguration controlConfiguration}.","!static":false,"!category":"function","!type":"fn(oControlConfiguration: sap.ui.comp.smartfilterbar.ControlConfiguration, iIndex: Number) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oControlConfiguration":"type: sap.ui.comp.smartfilterbar.ControlConfiguration, description: The controlConfiguration to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the controlConfiguration should be inserted at; for a negative value of <code>iIndex<\/code>, the controlConfiguration is inserted at position 0; for a value greater than the current size of the aggregation, the controlConfiguration is inserted at the last position"}},"refreshFiltersCount":{"!description":"Recalculates the filters count and updates their number in the UI. The {@link sap.ui.comp.filterbar.FilterBar#AssignedFiltersChanged} event will be triggered.","!static":false,"!category":"function","!type":"fn() -> Promise<undefined>"},"applyVariant":{"!description":"Applies the current variant as opposed to <code>fetchVariant<\/code>. The variant is retrieved via the flex layer.","!static":false,"!category":"function","!type":"fn(oVariant: Object)","parameters":{"oVariant":"type: Object, description: The variant that must be applied. oVariant must contain a valid JSON object."}},"setBasicSearchFieldName":{"!description":"Sets a new value for property {@link #getBasicSearchFieldName basicSearchFieldName}.\n\nName of the field that is the focus of the basic search.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBasicSearchFieldName?: String) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"sBasicSearchFieldName":"type: string, description: New value for property <code>basicSearchFieldName<\/code>"}},"setDateRangeTypeOperationByKey":{"!description":"Sets the the Dynamic Date Option of condition type (if any) data in the filter data model.","!static":false,"!category":"function","!type":"fn(sKey: String, sOption: String) -> Promise<(sap.ui.comp.smartfilterbar.SmartFilterBar.DateRangeTypeByKeyResponse | undefined)>","parameters":{"sOption":"type: string, description: The key of Dynamic Date Option","sKey":"type: string, description: The key as present in the OData property name/control configuration"}},"getNavigationProperties":{"!description":"Gets current value of property {@link #getNavigationProperties navigationProperties}.\n\nThis property is only evaluated if the property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getUseProvidedNavigationProperties} is set to <code>true<\/code>. It contains a comma-separated list of <code>NavigationProperty<\/code>> names which are checked for filters. It can also contain a list of separate filters from different <code>NavigationProperty<\/code> names. <br>\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getFilters":{"!description":"Returns an array of filters (sap.ui.model.Filter instances), for visible fields, that can be used to restrict the query result from OData.<br> The result of this method can directly be used during aggregation binding or OData read.","!static":false,"!category":"function","!type":"fn(aFieldNames?: [String]) -> [sap.ui.model.Filter]","parameters":{"aFieldNames":"type: string[], description: optional array of field names that filters should be returned, if not given all visible filters are returned"}},"resumeSelection":{"!description":"Resumes calls to the <code>search<\/code> method. If it was called during the suspension, the search will be triggered once regardless of how many times it was called during suspension.","!static":false,"!category":"function","!type":"fn()"},"setUseProvidedNavigationProperties":{"!description":"Sets a new value for property {@link #getUseProvidedNavigationProperties useProvidedNavigationProperties}.\n\nIf set to <code>true<\/code>, only the navigation properties mentioned in property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getNavigationProperties} are checked for further filters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseProvidedNavigationProperties?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bUseProvidedNavigationProperties":"type: boolean, description: New value for property <code>useProvidedNavigationProperties<\/code>"}},"setEnableBasicSearch":{"!description":"Sets a new value for property {@link #getEnableBasicSearch enableBasicSearch}.\n\nEnables the basic search field. The entered value can be accessed with {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getParameters}.<br><b>Note:<\/b> When the <code>SmartFilterBar<\/code> control is used with a {@link sap.ui.comp.smarttable.SmartTable} control the parameters are handled automatically. Therefore, this must only be enabled for OData service entities that support basic search.<br><b>Note:<\/b> basic search field is restricted to 1000 characters and spaces.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableBasicSearch?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bEnableBasicSearch":"type: boolean, description: New value for property <code>enableBasicSearch<\/code>"}},"getFilterData":{"!description":"Returns the data currently set in the filter data model.","!static":false,"!category":"function","!type":"fn(bAllFilterData?: Boolean, bIgnoreErrorState?: Boolean) -> Object","parameters":{"bAllFilterData":"type: boolean, description: Also include empty/invisible fields filter data","bIgnoreErrorState":"type: boolean, description: indication if the filter valueState should be omitted"}},"getFiltersWithValues":{"!description":"Returns all filter items <ul> <li>Containing a value<\/li> <li>With the <code>visible<\/code> property set to <code>true<\/code><\/li> <li>That are either flagged as <code>partOfCurrentVariant<\/code> or <code>visibleInFilterBar<\/code><\/li> <li>That are not custom filters<\/li> <\/ul> Even hidden filters will be considered as long as the mentioned criteria is fullfilled.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.filterbar.FilterGroupItem]"},"!description":"The <code>SmartFilterBar<\/code> is a wrapper that uses the OData metadata of an entity to create a filter bar based on the content defined by the OData service. Whether a field is visible on the filter bar, supports type-ahead and value help, for example, is automatically determined.<br> Note that all internally created instances are considered as private.<br> You can use the control configuration and group configuration classes to configure the filter fields and adapt them to your needs. For example: <ul> <li>Determine the type of control \u2013 for example whether a field is shown as a {@link sap.m.MultiInput multi input} field or as a {@link sap.m.DatePicker date picker}.<\/li> <li>Enable the autocomplete suggestions feature.<\/li> <li>Enable the {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog value help dialog}.<\/li> <li>Overwrite settings from the OData service.<\/li> <li>Set custom filter groups.<\/li> <li>Add custom fields.<\/li> <li>Access the settings of the underlying {@link sap.ui.comp.filterbar.FilterBar filter bar}.<\/li> <\/ul>\n\n<b>Note:<\/b> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.\n\nThe SmartFilterBar control supports fiscal annotations, history of the recently used values and value list IN/OUT parameters.\n\n<h3>Usage<\/h3> <i>When to use<\/i> <ul> <li>You use an OData service for your app (only OData version 2).<\/li> <li>You need a metadata-driven control and the features of the SmartFilterBar control are suitable for your app.<\/li> <li>You want to develop quickly and efficiently.<\/li> <\/ul>\n\n<i>When not to use<\/i> <li>You are not using OData version 2.<\/li> <li>You need to implement extensive changes to the {@link sap.ui.comp.filterbar.FilterBar filter bar}.<\/li> <\/ul>\n\n<b>Important:<\/b> Keep in mind that <code>SmartFilterBar<\/code>, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartFilterBar<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartFilterBar<\/code> only if you have control over the metadata of your application.<\/b>","_attachValueListAnnotationLoaded":{"!static":false,"!category":"function","!type":"fn(oData: Object, fnFunction: fn(), oListener: Object)","parameters":{"oListener":"type: Object, description: The object that wants to be notified when the event occurs","fnFunction":"type: function, description: The handler function to call when the event occurs.","oData":"type: Object, description: An object that will be passed to the handler along with the event object when the event is fired"}},"getCustomFilterData":{"!description":"Returns the _CUSTOM data currently set in the filter data model.","!static":false,"!category":"function","!type":"fn() -> Object | undefined"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.SmartFilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllControlConfiguration":{"!description":"Removes all the controls from the aggregation {@link #getControlConfiguration controlConfiguration}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.ControlConfiguration]"},"getResourceUri":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 Set an ODataModel as the main model on your control/view instead<br>Gets current value of property {@link #getResourceUri resourceUri}.\n\nOptional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. <b>Note:<\/b> Changing this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> String"},"getEnableBasicSearch":{"!description":"Gets current value of property {@link #getEnableBasicSearch enableBasicSearch}.\n\nEnables the basic search field. The entered value can be accessed with {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getParameters}.<br><b>Note:<\/b> When the <code>SmartFilterBar<\/code> control is used with a {@link sap.ui.comp.smarttable.SmartTable} control the parameters are handled automatically. Therefore, this must only be enabled for OData service entities that support basic search.<br><b>Note:<\/b> basic search field is restricted to 1000 characters and spaces.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"suspendSetFilterData":{"!static":false,"!category":"function","!type":"fn()"},"getAnalyticBindingPath":{"!description":"Returns the binding paths for the parameters.","!static":false,"!category":"function","!type":"fn() -> String"},"getSuppressSelection":{"!description":"Gets current value of property {@link #getSuppressSelection suppressSelection}.\n\nIf set to <code>true<\/code> all search requests will be ignored. This functionality is only intended to be used internally to enable an optimal solution when the filter bar is controlled by the smart templates. NOTE: As long as this property is set to <code>true<\/code>, all search requests will be neglected.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"resumeSetFilterData":{"!static":false,"!category":"function","!type":"fn()"},"setUseDateRangeType":{"!description":"Sets a new value for property {@link #getUseDateRangeType useDateRangeType}.\n\nIf set to <code>true<\/code> all date fields with filter restriction <code>interval<\/code> will be treated as <code>DateTimeRange<\/code> filters. The <code>useDateRangeType<\/code> can be set only once during initialization. <b>Note:<\/b> If this property is set to <code>true<\/code> and any date filters with filter restriction <code>interval<\/code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false<\/code>, any previously stored filters which were treated as type <code>DateTimeRange<\/code> based on the former setting, cannot be converted back to the standard date interval.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUseDateRangeType?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bUseDateRangeType":"type: boolean, description: New value for property <code>useDateRangeType<\/code>"}},"detachPendingChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:pendingChange pendingChange} event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SmartFilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.filterbar.FilterBar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setCustomFilterData":{"!description":"Sets the _CUSTOM data in the filter data model. The filterChange event is not triggered.","!static":false,"!category":"function","!type":"fn(oJson: Object)","parameters":{"oJson":"type: Object, description: The JSON data in the filter bar"}},"getModelData":{"!description":"Get the model data.","!static":false,"!category":"function","!type":"fn() -> map"},"!module":"sap/ui/comp/smartfilterbar/SmartFilterBar","getBasicSearchFieldName":{"!description":"Gets current value of property {@link #getBasicSearchFieldName basicSearchFieldName}.\n\nName of the field that is the focus of the basic search.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The <code>SmartFilterBar<\/code> is a wrapper that uses the OData metadata of an entity to create a filter bar based on the content defined by the OData service. Whether a field is visible on the filter bar, supports type-ahead and value help, for example, is automatically determined.<br> Note that all internally created instances are considered as private.<br> You can use the control configuration and group configuration classes to configure the filter fields and adapt them to your needs. For example: <ul> <li>Determine the type of control \u2013 for example whether a field is shown as a {@link sap.m.MultiInput multi input} field or as a {@link sap.m.DatePicker date picker}.<\/li> <li>Enable the autocomplete suggestions feature.<\/li> <li>Enable the {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog value help dialog}.<\/li> <li>Overwrite settings from the OData service.<\/li> <li>Set custom filter groups.<\/li> <li>Add custom fields.<\/li> <li>Access the settings of the underlying {@link sap.ui.comp.filterbar.FilterBar filter bar}.<\/li> <\/ul>\n\n<b>Note:<\/b> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.\n\nThe SmartFilterBar control supports fiscal annotations, history of the recently used values and value list IN/OUT parameters.\n\n<h3>Usage<\/h3> <i>When to use<\/i> <ul> <li>You use an OData service for your app (only OData version 2).<\/li> <li>You need a metadata-driven control and the features of the SmartFilterBar control are suitable for your app.<\/li> <li>You want to develop quickly and efficiently.<\/li> <\/ul>\n\n<i>When not to use<\/i> <li>You are not using OData version 2.<\/li> <li>You need to implement extensive changes to the {@link sap.ui.comp.filterbar.FilterBar filter bar}.<\/li> <\/ul>\n\n<b>Important:<\/b> Keep in mind that <code>SmartFilterBar<\/code>, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartFilterBar<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartFilterBar<\/code> only if you have control over the metadata of your application.<\/b>","setConsiderAnalyticalParameters":{"!description":"Sets a new value for property {@link #getConsiderAnalyticalParameters considerAnalyticalParameters}.\n\nIndicates if the analytical parameters (SelectionVariant) must be taken into consideration.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bConsiderAnalyticalParameters?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bConsiderAnalyticalParameters":"type: boolean, description: New value for property <code>considerAnalyticalParameters<\/code>"}},"getConsiderPresentationVariant":{"!description":"Gets current value of property {@link #getConsiderPresentationVariant considerPresentationVariant}.\n\nIndicates if the annotation <code>com.sap.vocabularies.UI.v1.PresentationVariant<\/code> is taken into account.<br>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFilterContextUrl":{"!description":"Get the filter context url.","!static":false,"!category":"function","!type":"fn() -> String"},"getGroupConfiguration":{"!description":"Gets content of aggregation {@link #getGroupConfiguration groupConfiguration}.\n\nProvides the possibility to add additional configuration to groups. Groups are used to show fields in the advanced area of the SmartFilterBar. With additional configuration, you can for example set custom labels or change the order of groups. <b>Note:<\/b> Changing the values here after the SmartFilter is initialized (<code>initialise<\/code> event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.GroupConfiguration]"},"getSmartVariant":{"!description":"ID of the element which is the current target of the association {@link #getSmartVariant smartVariant}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"removeAllGroupConfiguration":{"!description":"Removes all the controls from the aggregation {@link #getGroupConfiguration groupConfiguration}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.GroupConfiguration]"},"determineControlByName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 Use {@link sap.ui.core.Core.byId} instead.<br>Retrieves the control based on the name and group name.","!static":false,"!category":"function","!type":"fn(sName: String, sGroupName?: String) -> sap.ui.core.Control","parameters":{"sName":"type: string, description: Name of the filter.","sGroupName":"type: string, description: Group name of the filter; <code>null<\/code> for filter that belongs to basic group."}},"getControlByKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.99 Use {@link sap.ui.core.Core.byId} for custom controls provided by you. To modify data use {@link sap.ui.comp.smartfilterbar.SmartFilterBar#setFilterData} or {@link sap.ui.comp.filterbar.FilterBar#setUiState}.<br>Returns the control (if any) with the specified key (Property name in OData entity). Use just the property name as the key when getting a control from the basic area. Example: \"CompanyCode\" & Use \"EntityName/GroupName.FieldName\" format to get controls from groups. Example:\"Account.CompanyCode\"","!static":false,"!category":"function","!type":"fn(sKey: String) -> Object | sap.ui.core.Control | undefined","parameters":{"sKey":"type: string, description: The key as present in the OData property name/control configuration"}},"setLiveMode":{"!description":"Sets a new value for property {@link #getLiveMode liveMode}.\n\nIf set the search will be automatically triggered, when a filter value was set via the <B>change<\/B> event.<br> <b>Note:<\/b> The liveMode only operates on non-mobile scenarios.<br> Additionally, if liveMode is set, the following applies: <ul> <li>The error messagebox is not displayed, and the <code>showMessages<\/code> property is ignored.<\/li> <li>The search is triggered after a variant has been selected.<\/li> <li>Execute on Select for <code>VariantManagement<\/code> is not shown and not taken into account<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLiveMode?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bLiveMode":"type: boolean, description: New value for property <code>liveMode<\/code>"}},"destroyControlConfiguration":{"!description":"Destroys all the controlConfiguration in the aggregation {@link #getControlConfiguration controlConfiguration}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.SmartFilterBar"},"setEntityType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40 Use <code>entitySet<\/code> property instead of this one, to enable V4 annotation support<br>Sets a new value for property {@link #getEntityType entityType}.\n\nThe OData entity type whose metadata is used to create the <code>SmartFilterBar<\/code>. <b>Note:<\/b> Changing this value after the <code>SmartFilterBar<\/code> is initialized (<code>initialise<\/code> event was fired) has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntityType?: String) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"sEntityType":"type: string, description: New value for property <code>entityType<\/code>"}},"getShowMessages":{"!description":"Gets current value of property {@link #getShowMessages showMessages}.\n\nIf set to <code>true<\/code>, any errors that occur during the search, are displayed in a message box in addition to the <code>valueState<\/code> with the error. <b>Note:<\/b> As of version 1.89, the default value has been changed from <code>true<\/code> to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfGroupConfiguration":{"!description":"Checks for the provided <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code> in the aggregation {@link #getGroupConfiguration groupConfiguration}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroupConfiguration: sap.ui.comp.smartfilterbar.GroupConfiguration) -> Number","parameters":{"oGroupConfiguration":"type: sap.ui.comp.smartfilterbar.GroupConfiguration, description: The groupConfiguration whose index is looked for"}},"setFilterDataAsString":{"!description":"Sets the data in the filter data model as string.","!static":false,"!category":"function","!type":"fn(sJson: String, bReplace: Boolean)","parameters":{"bReplace":"type: boolean, description: Replace existing filter data","sJson":"type: string, description: The JSON data in the filter bar"}},"addFieldToAdvancedArea":{"!description":"Searches for the filter field having the specified OData key and adds this filter field to the advanced area. If there is no corresponding field in the OData metadata, this method has no effect.","!static":false,"!category":"function","!type":"fn(sKey: String)","parameters":{"sKey":"type: string, description: The key like specified in the OData metadata"}},"setConsiderSelectionVariants":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Please use the <code>com.sap.vocabularies.UI.v1.SelectionPresentationVariant<\/code> annotation through the {@link sap.ui.comp.smartvariants.SmartVariantManagement#setEntitySet}<br>Sets a new value for property {@link #getConsiderSelectionVariants considerSelectionVariants}.\n\nIndicates if the annotation <code>com.sap.vocabularies.UI.v1.SelectionVariant<\/code> is taken into account.<br> <b>Note<\/b>: Only relevant for control level personalization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bConsiderSelectionVariants?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bConsiderSelectionVariants":"type: boolean, description: New value for property <code>considerSelectionVariants<\/code>"}},"hasDateRangeTypeFieldsWithValue":{"!description":"Returns if some <code>DateRangeType<\/code> field has a value.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"getDateRangeTypeByKey":{"!description":"Returns the condition type object (if any) with the specified key (Property name in OData entity). Use just the property name as the key when getting a control from the basic area.","!static":false,"!category":"function","!type":"fn(sKey: String) -> Promise<(sap.ui.comp.smartfilterbar.SmartFilterBar.DateRangeTypeByKeyResponse | undefined)>","parameters":{"sKey":"type: string, description: The key as present in the OData property name/control configuration"}},"!proto":"sap.ui.comp.filterbar.FilterBar","suspendSelection":{"!description":"Suspends calls to the <code>search<\/code> method when not called with the <code>bSync<\/code> parameter.","!static":false,"!category":"function","!type":"fn()"},"getUseDateRangeType":{"!description":"Gets current value of property {@link #getUseDateRangeType useDateRangeType}.\n\nIf set to <code>true<\/code> all date fields with filter restriction <code>interval<\/code> will be treated as <code>DateTimeRange<\/code> filters. The <code>useDateRangeType<\/code> can be set only once during initialization. <b>Note:<\/b> If this property is set to <code>true<\/code> and any date filters with filter restriction <code>interval<\/code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false<\/code>, any previously stored filters which were treated as type <code>DateTimeRange<\/code> based on the former setting, cannot be converted back to the standard date interval.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","isPending":{"!description":"Checks the pending state of the FilterBar control","!static":false,"!category":"function","!type":"fn() -> Boolean"},"search":{"!description":"Overwrites method from base class. Called when user clicks the search button of the FilterBar. The search is executed asynchronously per default, but can be forced to synchronously execution by providing the <code>bSync<\/code> set to <code>true<\/code>. Synchronous mode is only supported for non live mode scenarios. In the synchronous mode a mandatory check prior to the search execution is made.","!static":false,"!category":"function","!type":"fn(bSync?: Boolean) -> Boolean | undefined","parameters":{"bSync":"type: boolean, description: Indicates if the search should be triggered synchronously"}},"!constructorDescription":"Constructor for a new smartfilterbar/SmartFilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntityType entityType} : string<\/li>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getResourceUri resourceUri} : string<\/li>\n<li>{@link #getBasicSearchFieldName basicSearchFieldName} : string<\/li>\n<li>{@link #getEnableBasicSearch enableBasicSearch} : boolean (default: false)<\/li>\n<li>{@link #getLiveMode liveMode} : boolean (default: false)<\/li>\n<li>{@link #getShowMessages showMessages} : boolean (default: false)<\/li>\n<li>{@link #getConsiderAnalyticalParameters considerAnalyticalParameters} : boolean (default: false)<\/li>\n<li>{@link #getUseDateRangeType useDateRangeType} : boolean<\/li>\n<li>{@link #getSuppressSelection suppressSelection} : boolean (default: false)<\/li>\n<li>{@link #getConsiderSelectionVariants considerSelectionVariants} : boolean (default: false)<\/li>\n<li>{@link #getDefaultSelectionVariantName defaultSelectionVariantName} : string<\/li>\n<li>{@link #getUseProvidedNavigationProperties useProvidedNavigationProperties} : boolean (default: false)<\/li>\n<li>{@link #getNavigationProperties navigationProperties} : string (default: \"\")<\/li>\n<li>{@link #getConsiderPresentationVariant considerPresentationVariant} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControlConfiguration controlConfiguration} : sap.ui.comp.smartfilterbar.ControlConfiguration[]<\/li>\n<li>{@link #getGroupConfiguration groupConfiguration} : sap.ui.comp.smartfilterbar.GroupConfiguration[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSmartVariant smartVariant} : (sap.ui.core.ID | sap.ui.comp.smartvariants.SmartVariantManagement)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:pendingChange pendingChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.filterbar.FilterBar#constructor sap.ui.comp.filterbar.FilterBar}\ncan be used as well.","getConsiderAnalyticalParameters":{"!description":"Gets current value of property {@link #getConsiderAnalyticalParameters considerAnalyticalParameters}.\n\nIndicates if the analytical parameters (SelectionVariant) must be taken into consideration.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setConsiderPresentationVariant":{"!description":"Sets a new value for property {@link #getConsiderPresentationVariant considerPresentationVariant}.\n\nIndicates if the annotation <code>com.sap.vocabularies.UI.v1.PresentationVariant<\/code> is taken into account.<br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bConsiderPresentationVariant?: Boolean) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"bConsiderPresentationVariant":"type: boolean, description: New value for property <code>considerPresentationVariant<\/code>"}},"setDefaultSelectionVariantName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Please use the <code>com.sap.vocabularies.UI.v1.SelectionPresentationVariant<\/code> annotation through the {@link sap.ui.comp.smartvariants.SmartVariantManagement#setEntitySet}<br>Sets a new value for property {@link #getDefaultSelectionVariantName defaultSelectionVariantName}.\n\nDetermines one specific variant that is based on the <code>com.sap.vocabularies.UI.v1.SelectionVariant<\/code> annotation, which is then used as the default variant.<br> This property is only relevant in case <code>considerSelectionVariants<\/code> is set to <code>true<\/code> and will only be applied if there is no user-defined default variant specified.<br> <b>Note<\/b>: Only relevant for control level personalization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultSelectionVariantName?: String) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"sDefaultSelectionVariantName":"type: string, description: New value for property <code>defaultSelectionVariantName<\/code>"}},"isInUTCMode":{"!description":"Determines if the custom data 'dateFormatSettings' is set with UTC mode <code>true<\/code>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getBasicSearchControl":{"!description":"Returns an instance of the control for the basic search.","!static":false,"!category":"function","!type":"fn() -> Object<sap.m.SearchField>"},"getDescriptionForKeys":{"!description":"Reads the descriptions for given filters and value keys.","!static":false,"!category":"function","!type":"fn(aFiltersWithKeyValues: Array)","parameters":{"aFiltersWithKeyValues":"type: array, description: List of filters with value keys to be retrieved"}},"getParameterContextUrl":{"!description":"Get the parameter context url.","!static":false,"!category":"function","!type":"fn() -> String"},"validateMandatoryFields":{"!description":"Verifies if all mandatory filters or parameters have values.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeControlConfiguration":{"!description":"Removes a controlConfiguration from the aggregation {@link #getControlConfiguration controlConfiguration}.","!static":false,"!category":"function","!type":"fn(vControlConfiguration: Number | String | sap.ui.comp.smartfilterbar.ControlConfiguration) -> sap.ui.comp.smartfilterbar.ControlConfiguration | null","parameters":{"vControlConfiguration":"type: int|string|sap.ui.comp.smartfilterbar.ControlConfiguration, description: The controlConfiguration to remove or its index or id"}},"getFilterDataAsString":{"!description":"Returns the data currently set in the filter data model as string.","!static":false,"!category":"function","!type":"fn(bAllFilterData: Boolean) -> String | null","parameters":{"bAllFilterData":"type: boolean, description: Also include empty/invisible fields filter data"}},"getConsiderSelectionVariants":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Please use the <code>com.sap.vocabularies.UI.v1.SelectionPresentationVariant<\/code> annotation through the {@link sap.ui.comp.smartvariants.SmartVariantManagement#setEntitySet}<br>Gets current value of property {@link #getConsiderSelectionVariants considerSelectionVariants}.\n\nIndicates if the annotation <code>com.sap.vocabularies.UI.v1.SelectionVariant<\/code> is taken into account.<br> <b>Note<\/b>: Only relevant for control level personalization.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEntityType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40 Use <code>entitySet<\/code> property instead of this one, to enable V4 annotation support<br>Gets current value of property {@link #getEntityType entityType}.\n\nThe OData entity type whose metadata is used to create the <code>SmartFilterBar<\/code>. <b>Note:<\/b> Changing this value after the <code>SmartFilterBar<\/code> is initialized (<code>initialise<\/code> event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> String"},"getControlConfiguration":{"!description":"Gets content of aggregation {@link #getControlConfiguration controlConfiguration}.\n\nUsing control configurations you can add additional configuration to filter fields, for example set custom labels, change the order of fields, or change the filter field control type. <b>Note:<\/b> Changing the values here after the SmartFilter is initialized (<code>initialise<\/code> event was fired) has no effect.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.ControlConfiguration]"},"setSmartVariant":{"!description":"Sets the associated {@link #getSmartVariant smartVariant}.","!static":false,"!category":"function","!type":"fn(oSmartVariant: sap.ui.core.ID | sap.ui.comp.smartvariants.SmartVariantManagement) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oSmartVariant":"type: sap.ui.core.ID|sap.ui.comp.smartvariants.SmartVariantManagement, description: ID of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"}},"attachPendingChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:pendingChange pendingChange} event of this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code> itself.\n\nThis event is fired after the pending state of the <code>FilterBar<\/code> control changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.SmartFilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setResourceUri":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 Set an ODataModel as the main model on your control/view instead<br>Uses the provided resource URI to fetch the OData metadata instead of using the default ODataModel (getModel()). You should only set this if you intend to get the metadata for the filter bar from elsewhere!","!static":false,"!category":"function","!type":"fn(sResourceUri: String) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"sResourceUri":"type: string, description: The URI of the oData service from which the metadata would be read"}},"getDefaultSelectionVariantName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Please use the <code>com.sap.vocabularies.UI.v1.SelectionPresentationVariant<\/code> annotation through the {@link sap.ui.comp.smartvariants.SmartVariantManagement#setEntitySet}<br>Gets current value of property {@link #getDefaultSelectionVariantName defaultSelectionVariantName}.\n\nDetermines one specific variant that is based on the <code>com.sap.vocabularies.UI.v1.SelectionVariant<\/code> annotation, which is then used as the default variant.<br> This property is only relevant in case <code>considerSelectionVariants<\/code> is set to <code>true<\/code> and will only be applied if there is no user-defined default variant specified.<br> <b>Note<\/b>: Only relevant for control level personalization.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfControlConfiguration":{"!description":"Checks for the provided <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code> in the aggregation {@link #getControlConfiguration controlConfiguration}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oControlConfiguration: sap.ui.comp.smartfilterbar.ControlConfiguration) -> Number","parameters":{"oControlConfiguration":"type: sap.ui.comp.smartfilterbar.ControlConfiguration, description: The controlConfiguration whose index is looked for"}},"insertGroupConfiguration":{"!description":"Inserts a groupConfiguration into the aggregation {@link #getGroupConfiguration groupConfiguration}.","!static":false,"!category":"function","!type":"fn(oGroupConfiguration: sap.ui.comp.smartfilterbar.GroupConfiguration, iIndex: Number) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oGroupConfiguration":"type: sap.ui.comp.smartfilterbar.GroupConfiguration, description: The groupConfiguration to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the groupConfiguration should be inserted at; for a negative value of <code>iIndex<\/code>, the groupConfiguration is inserted at position 0; for a value greater than the current size of the aggregation, the groupConfiguration is inserted at the last position"}},"getLiveMode":{"!description":"Gets current value of property {@link #getLiveMode liveMode}.\n\nIf set the search will be automatically triggered, when a filter value was set via the <B>change<\/B> event.<br> <b>Note:<\/b> The liveMode only operates on non-mobile scenarios.<br> Additionally, if liveMode is set, the following applies: <ul> <li>The error messagebox is not displayed, and the <code>showMessages<\/code> property is ignored.<\/li> <li>The search is triggered after a variant has been selected.<\/li> <li>Execute on Select for <code>VariantManagement<\/code> is not shown and not taken into account<\/li> <\/ul>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"verifySearchAllowed":{"!description":"Verifies if search is possible.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.SmartFilterBar.SearchAllowed"},"checkSearchAllowed":{"!description":"Checks if search is possible (GO button enabled).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNavigationProperties":{"!description":"Sets a new value for property {@link #getNavigationProperties navigationProperties}.\n\nThis property is only evaluated if the property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getUseProvidedNavigationProperties} is set to <code>true<\/code>. It contains a comma-separated list of <code>NavigationProperty<\/code>> names which are checked for filters. It can also contain a list of separate filters from different <code>NavigationProperty<\/code> names. <br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sNavigationProperties?: String) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"sNavigationProperties":"type: string, description: New value for property <code>navigationProperties<\/code>"}},"firePendingChange":{"!description":"Fires event {@link #event:pendingChange pendingChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyGroupConfiguration":{"!description":"Destroys all the groupConfiguration in the aggregation {@link #getGroupConfiguration groupConfiguration}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.SmartFilterBar"},"getParameters":{"!description":"Returns a parameter object that can be used to restrict the result of an OData service request if a basic search is performed. <caption>Example of a returned object:<\/caption>\n\n<pre>\n{\n\t&quot;custom&quot;: {\n\t\t&quot;search-focus&quot;: &quot;MySearchFocusFieldName&quot;,\n\t\t&quot;search&quot;: &quot;MySearchString&quot;\n\t}\n}\n<\/pre>\n\nThese parameters can be handed over as custom parameters, for example, to the {@link sap.ui.model.odata.v2.ODataListBinding}.","!static":false,"!category":"function","!type":"fn() -> Object<Object<Object<string,string>>"},"ensureLoadedValueHelp":{"!description":"Ensures the associated ValueHelpProvider is loaded.","!static":false,"!category":"function","!type":"fn(sFieldName: String)","parameters":{"sFieldName":"type: string, description: is the name of the property from the entity type which is associated with a Value Help."}},"fetchVariant":{"!description":"Retrieves the currently visible filters and the values for storing them as variants. The result will be passed on as a JSON object to the callee smart variant control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar.fetchVariantResponse"},"addControlConfiguration":{"!description":"Adds some controlConfiguration to the aggregation {@link #getControlConfiguration controlConfiguration}.","!static":false,"!category":"function","!type":"fn(oControlConfiguration: sap.ui.comp.smartfilterbar.ControlConfiguration) -> sap.ui.comp.smartfilterbar.SmartFilterBar","parameters":{"oControlConfiguration":"type: sap.ui.comp.smartfilterbar.ControlConfiguration, description: The controlConfiguration to add; if empty, nothing is inserted"}}},"sap.ui.comp.smartform.Layout":{"setSingleGroupFullSize":{"!description":"Sets a new value for property {@link #getSingleGroupFullSize singleGroupFullSize}.\n\nIf the <code>SmartForm<\/code> contains only one single Group and this property is set, the Group is displayed using the full size of the <code>SmartForm<\/code>. In this case the properties <code>columnsL<\/code> and <code>columnsM<\/code> are ignored.<br> In all other cases the Group is displayed in the size of one column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleGroupFullSize?: Boolean) -> sap.ui.comp.smartform.Layout","parameters":{"bSingleGroupFullSize":"type: boolean, description: New value for property <code>singleGroupFullSize<\/code>"}},"getEmptySpanS":{"!description":"Gets current value of property {@link #getEmptySpanS emptySpanS}.\n\nNumber of grid cells that are empty at the end of each line on small size.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Element","!category":"class","setBreakpointL":{"!description":"Sets a new value for property {@link #getBreakpointL breakpointL}.\n\nBreakpoint (in pixel) between Medium size and Large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBreakpointL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iBreakpointL":"type: int, description: New value for property <code>breakpointL<\/code>"}},"setBreakpointM":{"!description":"Sets a new value for property {@link #getBreakpointM breakpointM}.\n\nreakpoint (in pixel) between Small size and Medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBreakpointM?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iBreakpointM":"type: int, description: New value for property <code>breakpointM<\/code>"}},"!constructorDescription":"Constructor for a new smartform/Layout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabelSpanXL labelSpanXL} : int<\/li>\n<li>{@link #getLabelSpanL labelSpanL} : int<\/li>\n<li>{@link #getLabelSpanM labelSpanM} : int<\/li>\n<li>{@link #getLabelSpanS labelSpanS} : int<\/li>\n<li>{@link #getEmptySpanXL emptySpanXL} : int<\/li>\n<li>{@link #getEmptySpanL emptySpanL} : int<\/li>\n<li>{@link #getEmptySpanM emptySpanM} : int<\/li>\n<li>{@link #getEmptySpanS emptySpanS} : int<\/li>\n<li>{@link #getColumnsXL columnsXL} : int<\/li>\n<li>{@link #getColumnsL columnsL} : int<\/li>\n<li>{@link #getColumnsM columnsM} : int<\/li>\n<li>{@link #getSingleGroupFullSize singleGroupFullSize} : boolean (default: true)<\/li>\n<li>{@link #getBreakpointXL breakpointXL} : int<\/li>\n<li>{@link #getBreakpointL breakpointL} : int<\/li>\n<li>{@link #getBreakpointM breakpointM} : int<\/li>\n<li>{@link #getGridDataSpan gridDataSpan} : sap.ui.layout.GridSpan (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getBreakpointL":{"!description":"Gets current value of property {@link #getBreakpointL breakpointL}.\n\nBreakpoint (in pixel) between Medium size and Large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getBreakpointM":{"!description":"Gets current value of property {@link #getBreakpointM breakpointM}.\n\nreakpoint (in pixel) between Small size and Medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLabelSpanXL":{"!description":"Gets current value of property {@link #getLabelSpanXL labelSpanXL}.\n\nDefault span for labels in extra large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getEmptySpanM":{"!description":"Gets current value of property {@link #getEmptySpanM emptySpanM}.\n\nNumber of grid cells that are empty at the end of each line on medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setGridDataSpan":{"!description":"Sets a new value for property {@link #getGridDataSpan gridDataSpan}.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.<br> The value set here will be set to all group elements when used with horizontal layout (<code>SmartForm<\/code> property <code>useHorizontalLayout<\/code>)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sGridDataSpan?: sap.ui.layout.GridSpan) -> sap.ui.comp.smartform.Layout","parameters":{"sGridDataSpan":"type: sap.ui.layout.GridSpan, description: New value for property <code>gridDataSpan<\/code>"}},"setLabelSpanL":{"!description":"Sets a new value for property {@link #getLabelSpanL labelSpanL}.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in the line the <code>labelSpanM<\/code> value is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanL":"type: int, description: New value for property <code>labelSpanL<\/code>"}},"getColumnsXL":{"!description":"Gets current value of property {@link #getColumnsXL columnsXL}.\n\nNumber of columns for extra large size.<br> The number of columns for extra large size must not be smaller than the number of columns for large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setColumnsXL":{"!description":"Sets a new value for property {@link #getColumnsXL columnsXL}.\n\nNumber of columns for extra large size.<br> The number of columns for extra large size must not be smaller than the number of columns for large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumnsXL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iColumnsXL":"type: int, description: New value for property <code>columnsXL<\/code>"}},"setLabelSpanM":{"!description":"Sets a new value for property {@link #getLabelSpanM labelSpanM}.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line, <code>labelSpanL<\/code> is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanM?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanM":"type: int, description: New value for property <code>labelSpanM<\/code>"}},"setBreakpointXL":{"!description":"Sets a new value for property {@link #getBreakpointXL breakpointXL}.\n\nBreakpoint (in pixel) between large size and extra large (XL) size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBreakpointXL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iBreakpointXL":"type: int, description: New value for property <code>breakpointXL<\/code>"}},"getEmptySpanL":{"!description":"Gets current value of property {@link #getEmptySpanL emptySpanL}.\n\nNumber of grid cells that are empty at the end of each line on large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setLabelSpanS":{"!description":"Sets a new value for property {@link #getLabelSpanS labelSpanS}.\n\nDefault span for labels in small size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanS?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanS":"type: int, description: New value for property <code>labelSpanS<\/code>"}},"!description":"Layout settings to adjust the <code>ResponsiveGridLayout<\/code> used inside the <code>Form<\/code>.","getLabelSpanL":{"!description":"Gets current value of property {@link #getLabelSpanL labelSpanL}.\n\nDefault span for labels in large size. This span is only used if more than 1 container is in one line, if only 1 container is in the line the <code>labelSpanM<\/code> value is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEmptySpanM":{"!description":"Sets a new value for property {@link #getEmptySpanM emptySpanM}.\n\nNumber of grid cells that are empty at the end of each line on medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanM?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanM":"type: int, description: New value for property <code>emptySpanM<\/code>"}},"getLabelSpanM":{"!description":"Gets current value of property {@link #getLabelSpanM labelSpanM}.\n\nDefault span for labels in medium size. This property is used for full size containers. If more than one Container is in one line, <code>labelSpanL<\/code> is used.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.Layout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setEmptySpanS":{"!description":"Sets a new value for property {@link #getEmptySpanS emptySpanS}.\n\nNumber of grid cells that are empty at the end of each line on small size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanS?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanS":"type: int, description: New value for property <code>emptySpanS<\/code>"}},"setEmptySpanXL":{"!description":"Sets a new value for property {@link #getEmptySpanXL emptySpanXL}.\n\nNumber of grid cells that are empty at the end of each line on extra large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanXL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanXL":"type: int, description: New value for property <code>emptySpanXL<\/code>"}},"getSingleGroupFullSize":{"!description":"Gets current value of property {@link #getSingleGroupFullSize singleGroupFullSize}.\n\nIf the <code>SmartForm<\/code> contains only one single Group and this property is set, the Group is displayed using the full size of the <code>SmartForm<\/code>. In this case the properties <code>columnsL<\/code> and <code>columnsM<\/code> are ignored.<br> In all other cases the Group is displayed in the size of one column.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getBreakpointXL":{"!description":"Gets current value of property {@link #getBreakpointXL breakpointXL}.\n\nBreakpoint (in pixel) between large size and extra large (XL) size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getGridDataSpan":{"!description":"Gets current value of property {@link #getGridDataSpan gridDataSpan}.\n\nA string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small.<br> The value set here will be set to all group elements when used with horizontal layout (<code>SmartForm<\/code> property <code>useHorizontalLayout<\/code>)\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.GridSpan"},"getEmptySpanXL":{"!description":"Gets current value of property {@link #getEmptySpanXL emptySpanXL}.\n\nNumber of grid cells that are empty at the end of each line on extra large size.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLabelSpanS":{"!description":"Gets current value of property {@link #getLabelSpanS labelSpanS}.\n\nDefault span for labels in small size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEmptySpanL":{"!description":"Sets a new value for property {@link #getEmptySpanL emptySpanL}.\n\nNumber of grid cells that are empty at the end of each line on large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iEmptySpanL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iEmptySpanL":"type: int, description: New value for property <code>emptySpanL<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Layout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/comp/smartform/Layout","getColumnsL":{"!description":"Gets current value of property {@link #getColumnsL columnsL}.\n\nNumber of columns for large size.<br> The number of columns for large size must not be smaller than the number of columns for medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"!helpDescription":"Layout settings to adjust the <code>ResponsiveGridLayout<\/code> used inside the <code>Form<\/code>.","getColumnsM":{"!description":"Gets current value of property {@link #getColumnsM columnsM}.\n\nNumber of columns for medium size.","!static":false,"!category":"function","!type":"fn() -> Number"},"setColumnsM":{"!description":"Sets a new value for property {@link #getColumnsM columnsM}.\n\nNumber of columns for medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumnsM?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iColumnsM":"type: int, description: New value for property <code>columnsM<\/code>"}},"setColumnsL":{"!description":"Sets a new value for property {@link #getColumnsL columnsL}.\n\nNumber of columns for large size.<br> The number of columns for large size must not be smaller than the number of columns for medium size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumnsL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iColumnsL":"type: int, description: New value for property <code>columnsL<\/code>"}},"setLabelSpanXL":{"!description":"Sets a new value for property {@link #getLabelSpanXL labelSpanXL}.\n\nDefault span for labels in extra large size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iLabelSpanXL?: Number) -> sap.ui.comp.smartform.Layout","parameters":{"iLabelSpanXL":"type: int, description: New value for property <code>labelSpanXL<\/code>"}}},"sap.ui.comp.util.SharedUtil":{"!description":"Utility class that provides useful functionality for Fiori Elements.","!module":"sap/ui/comp/util/SharedUtil","!helpDescription":"Utility class that provides useful functionality for Fiori Elements.","!category":"namespace"},"sap.ui.comp.smartfilterbar.GroupConfiguration":{"!description":"A GroupConfiguration can be used to add additional configurations for groups in the SmartFilterBar. A group in the SmartFilterBar is a group of filter fields in the advanced search.","getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nThe key property must correspond to the <code>EntitySet<\/code> name or <code>FieldGroup Qualifier<\/code> from the OData service $metadata document.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.GroupConfiguration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getIndex":{"!description":"Gets current value of property {@link #getIndex index}.\n\nZero based integer index. The index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.core.Element","!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code> itself.\n\nFired when the value of a property, for example label, has changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.GroupConfiguration<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.GroupConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new smartfilterbar/GroupConfiguration.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getIndex index} : any (default: undefined)<\/li>\n<li>{@link #getLabel label} : any (default: undefined)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/comp/smartfilterbar/GroupConfiguration","!helpDescription":"A GroupConfiguration can be used to add additional configurations for groups in the SmartFilterBar. A group in the SmartFilterBar is a group of filter fields in the advanced search.","setIndex":{"!description":"Sets a new value for property {@link #getIndex index}.\n\nZero based integer index. The index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(oIndex?: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oIndex":"type: any, description: New value for property <code>index<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a group in the advanced area of the SmartFilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(oLabel?: Object) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"oLabel":"type: any, description: New value for property <code>label<\/code>"}},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nThe key property must correspond to the <code>EntitySet<\/code> name or <code>FieldGroup Qualifier<\/code> from the OData service $metadata document.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey?: String) -> sap.ui.comp.smartfilterbar.GroupConfiguration","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}}},"sap.ui.comp.smartfield.DisplayBehaviour":{"!description":"The different options to define display behavior for the value help of a SmartField control.","TrueFalse":{"!description":"Shows Boolean value as True/False","!category":"enum","!type":"String"},"auto":{"!description":"The SmartField chooses the display behavior.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","idOnly":{"!description":"Shows the ID only.","!category":"enum","!type":"String"},"descriptionAndId":{"!description":"Description and ID are displayed for available values.","!category":"enum","!type":"String"},"descriptionOnly":{"!description":"Only the description of the available values is displayed.","!category":"enum","!type":"String"},"!category":"static class","idAndDescription":{"!description":"ID and description are displayed for available values.","!category":"enum","!type":"String"},"OnOff":{"!description":"Shows Boolean value as On/Off","!category":"enum","!type":"String"},"YesNo":{"!description":"Shows Boolean value as Yes/No","!category":"enum","!type":"String"}},"sap.ui.comp.smartmicrochart.SmartColumnMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartColumnMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartColumnMicroChart"},"sap.ui.comp.navpopover.SemanticObjectController":{"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe name of the entity set used. If <code>entitySet<\/code> has not been defined, the SemanticObjectController tries to retrieve the name from its parents. <b>Note:<\/b> This is not a dynamic UI5 property.","!static":false,"!category":"function","!type":"fn() -> String"},"fireNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Fires event {@link #event:navigationTargetsObtained navigationTargetsObtained} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMapFieldToSemanticObject":{"!description":"Gets current value of property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false<\/code>, the SmartLink control will not replace its field name with the according <code>semanticObject<\/code> property during the calculation of the semantic attributes.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMapFieldToSemanticObject":{"!description":"Sets a new value for property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false<\/code>, the SmartLink control will not replace its field name with the according <code>semanticObject<\/code> property during the calculation of the semantic attributes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bMapFieldToSemanticObject: Boolean) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"bMapFieldToSemanticObject":"type: boolean, description: New value for property <code>mapFieldToSemanticObject<\/code>"}},"detachPrefetchDone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The event <code>prefetchDone<\/code> is obsolete because it depends on the property <code>prefetchNavigationTargets<\/code> which has been deprecated.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:prefetchDone prefetchDone} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getPrefetchNavigationTargets":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The property <code>prefetchNavigationTargets<\/code> is obsolete as navigation targets are determined automatically. The SmartLink controls are re-rendered as soon as the asynchronous determination of navigation targets has been completed.<br>Gets current value of property {@link #getPrefetchNavigationTargets prefetchNavigationTargets}.\n\nIf set to <code>true<\/code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for which no targets were found. Setting this value to <code>true<\/code> will trigger an additional roundtrip.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachBeforePopoverOpens":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Element","!category":"class","getReplaceSmartLinkNavigationTargetsObtained":{"!description":"Gets current value of property {@link #getReplaceSmartLinkNavigationTargetsObtained replaceSmartLinkNavigationTargetsObtained}.\n\nDetermines if the <code>navigationTargetsObtained<\/code> event handling of the <code>SmartLink<\/code> should be replaced when this <code>SemanticObjectController<\/code> is set as <code>SemanticObjectController<\/code> on the SmartLink.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"hasSemanticObjectLinks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The method <code>hasSemanticObjectLinks<\/code> is obsolete because it depends on the property <code>prefetchNavigationTargets<\/code> which has been deprecated.<br>Checks if the given semantic object name has a navigation link. <b>Note<\/b>: this method returns a valid value only after the event <code>prefetchDone<\/code> has been raised. The event <code>prefetchDone<\/code> is raised if the property <code>prefetchNavigationTargets<\/code> is set to <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(sSemanticObject: String) -> Boolean","parameters":{"sSemanticObject":"type: string, description: Name of semantic object"}},"getNavigationTargetsObtainedCallback":{"!description":"Gets current value of property {@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback}.\n\nFunction that is called when the navigation targets provided by the SAP Fiori launchpad are obtained. The function is called with one <code>oNavigationTargets<\/code> parameter of type {@link sap.ui.comp.navpopover.NavigationTargets}. This function has to return a <code>Promise<\/code> resolving into an <code>Object<\/code> of type {@link sap.ui.comp.navpopover.NavigationTargets}. The provided <code>oNavigationTargets<\/code> can be manipulated in this callback before being returned to the <code>NavigationPopoverHandler<\/code>. The <code>Popover<\/code> will open after the <code>Promise<\/code> has been resolved. This function replaces the <code>navigationTargetsObtained<\/code> event. The event handling is ignored if this callback is set.","!static":false,"!category":"function","!type":"fn() -> fn()"},"detachNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"unregisterControl":{"!description":"Removes the given control from the SemanticObjectController and unregisters all relevant events.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.comp.navpopover.SmartLink | sap.ui.comp.navpopover.NavigationPopoverHandler)","parameters":{"oControl":"type: sap.ui.comp.navpopover.SmartLink|sap.ui.comp.navpopover.NavigationPopoverHandler, description: Control to be unregistered by <code>SemanticObjectController<\/code>"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getPrefetchNavigationTargets prefetchNavigationTargets} : boolean (default: false)<\/li>\n<li>{@link #getFieldSemanticObjectMap fieldSemanticObjectMap} : object<\/li>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getContactAnnotationPaths contactAnnotationPaths} : object<\/li>\n<li>{@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization} : object<\/li>\n<li>{@link #getMapFieldToSemanticObject mapFieldToSemanticObject} : boolean<\/li>\n<li>{@link #getForceLinkRendering forceLinkRendering} : object<\/li>\n<li>{@link #getBeforeNavigationCallback beforeNavigationCallback} : function<\/li>\n<li>{@link #getReplaceSmartLinkNavigationTargetsObtained replaceSmartLinkNavigationTargetsObtained} : boolean (default: false)<\/li>\n<li>{@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback} : function<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigationTargetsObtained navigationTargetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforePopoverOpens beforePopoverOpens} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:prefetchDone prefetchDone} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setFieldSemanticObjectMap":{"!description":"Sets a new value for property {@link #getFieldSemanticObjectMap fieldSemanticObjectMap}.\n\nMaps the fields to the related semantic objects. When accessing this property for the first time, the mapping will be calculated from the metadata within the provided model.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFieldSemanticObjectMap?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oFieldSemanticObjectMap":"type: object, description: New value for property <code>fieldSemanticObjectMap<\/code>"}},"getContactAnnotationPaths":{"!description":"Gets current value of property {@link #getContactAnnotationPaths contactAnnotationPaths}.\n\nNavigation property that points from the current to the related entity type where the <code>com.sap.vocabularies.Communication.v1.Contact<\/code> annotation is defined, for example, <code> '\\{\"Supplier\":\"to_Supplier\", \"CompanyName\":\"to_Company\"\\}' <\/code>. An empty string means that the related entity type is the current one.","!static":false,"!category":"function","!type":"fn() -> Object"},"setIgnoredFields":{"!description":"Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nComma-separated list of fields that must not be displayed as links.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields?: String) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"getFieldSemanticObjectMap":{"!description":"Gets current value of property {@link #getFieldSemanticObjectMap fieldSemanticObjectMap}.\n\nMaps the fields to the related semantic objects. When accessing this property for the first time, the mapping will be calculated from the metadata within the provided model.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nAfter the navigation targets have been retrieved, <code>navigationTargetsObtained<\/code> is fired and makes it possible you to change the targets.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEnableAvailableActionsPersonalization":{"!description":"Sets a new value for property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control. For example, <code> '\\{\"Supplier\":false, \"CompanyName\":true\\}' <\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oEnableAvailableActionsPersonalization?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oEnableAvailableActionsPersonalization":"type: object, description: New value for property <code>enableAvailableActionsPersonalization<\/code>"}},"setReplaceSmartLinkNavigationTargetsObtained":{"!description":"Sets a new value for property {@link #getReplaceSmartLinkNavigationTargetsObtained replaceSmartLinkNavigationTargetsObtained}.\n\nDetermines if the <code>navigationTargetsObtained<\/code> event handling of the <code>SmartLink<\/code> should be replaced when this <code>SemanticObjectController<\/code> is set as <code>SemanticObjectController<\/code> on the SmartLink.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReplaceSmartLinkNavigationTargetsObtained?: Boolean) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"bReplaceSmartLinkNavigationTargetsObtained":"type: boolean, description: New value for property <code>replaceSmartLinkNavigationTargetsObtained<\/code>"}},"!description":"The <code>SemanticObjectController<\/code> control operates as a single entry point for <code>SmartLink<\/code> controls created automatically by {@link sap.ui.comp.smarttable.SmartTable SmartTable} control, {@link sap.ui.comp.smartchart.SmartChart SmartChart} control, {@link sap.ui.comp.smartform.SmartForm SmartForm} control and {@link sap.ui.comp.smartfield.SmartField SmartField} control based on OData metadata. Additionally, all events provided by the <code>SmartLink<\/code> control are registered by the SemanticObjectController and can be consumed there in a single place. As usual, the SemanticObjectController can be defined within the XML view as well as in the code.","setEntitySet":{"!description":"Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe name of the entity set used. If <code>entitySet<\/code> has not been defined, the SemanticObjectController tries to retrieve the name from its parents. <b>Note:<\/b> This is not a dynamic UI5 property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEntitySet?: String) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.SemanticObjectController.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getBeforeNavigationCallback":{"!description":"Gets current value of property {@link #getBeforeNavigationCallback beforeNavigationCallback}.\n\nFunction that is called before the actual navigation happens. This function has to return a promise resolving into a Boolean value for which the navigation will wait. If the Boolean value is <code>true<\/code>, the navigation will be processed. The <code>beforeNavigationCallback(oNavigationInfo)<\/code> parameter contains the following data: <ul> <li>{String} text: Text of the navigation intent<\/li> <li>{String} href: HREF of the navigation intent<\/li> <li>{String} originalId: ID of the control that fires the navigation intent<\/li> <li>{String} semanticObject: Name of the <code>SemanticObject<\/code> of the navigation intent<\/li> <li>{Object} semanticAttributes: Object containing the <code>SemanticAttributes<\/code> of the navigation intent<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> fn()"},"setPrefetchNavigationTargets":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The property <code>prefetchNavigationTargets<\/code> is obsolete as navigation targets are determined automatically. The SmartLink controls are re-rendered as soon as the asynchronous determination of navigation targets has been completed.<br>Sets a new value for property {@link #getPrefetchNavigationTargets prefetchNavigationTargets}.\n\nIf set to <code>true<\/code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for which no targets were found. Setting this value to <code>true<\/code> will trigger an additional roundtrip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPrefetchNavigationTargets?: Boolean) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"bPrefetchNavigationTargets":"type: boolean, description: New value for property <code>prefetchNavigationTargets<\/code>"}},"getIgnoredFields":{"!description":"Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nComma-separated list of fields that must not be displayed as links.","!static":false,"!category":"function","!type":"fn() -> String"},"isControlRegistered":{"!description":"Returns whether the given control has been registered by the SemanticObjectController.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.comp.navpopover.SmartLink | sap.ui.comp.navpopover.NavigationPopoverHandler) -> Boolean","parameters":{"oControl":"type: sap.ui.comp.navpopover.SmartLink|sap.ui.comp.navpopover.NavigationPopoverHandler, description: Control registered by <code>SemanticObjectController<\/code>"}},"setBeforeNavigationCallback":{"!description":"Sets a new value for property {@link #getBeforeNavigationCallback beforeNavigationCallback}.\n\nFunction that is called before the actual navigation happens. This function has to return a promise resolving into a Boolean value for which the navigation will wait. If the Boolean value is <code>true<\/code>, the navigation will be processed. The <code>beforeNavigationCallback(oNavigationInfo)<\/code> parameter contains the following data: <ul> <li>{String} text: Text of the navigation intent<\/li> <li>{String} href: HREF of the navigation intent<\/li> <li>{String} originalId: ID of the control that fires the navigation intent<\/li> <li>{String} semanticObject: Name of the <code>SemanticObject<\/code> of the navigation intent<\/li> <li>{Object} semanticAttributes: Object containing the <code>SemanticAttributes<\/code> of the navigation intent<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnBeforeNavigationCallback: fn()) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"fnBeforeNavigationCallback":"type: function, description: New value for property <code>beforeNavigationCallback<\/code>"}},"fireBeforePopoverOpens":{"!description":"Fires event {@link #event:beforePopoverOpens beforePopoverOpens} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SemanticObjectController with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"firePrefetchDone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The event <code>prefetchDone<\/code> is obsolete because it depends on the property <code>prefetchNavigationTargets<\/code> which has been deprecated.<br>Fires event {@link #event:prefetchDone prefetchDone} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setContactAnnotationPaths":{"!description":"Sets a new value for property {@link #getContactAnnotationPaths contactAnnotationPaths}.\n\nNavigation property that points from the current to the related entity type where the <code>com.sap.vocabularies.Communication.v1.Contact<\/code> annotation is defined, for example, <code> '\\{\"Supplier\":\"to_Supplier\", \"CompanyName\":\"to_Company\"\\}' <\/code>. An empty string means that the related entity type is the current one.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oContactAnnotationPaths?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oContactAnnotationPaths":"type: object, description: New value for property <code>contactAnnotationPaths<\/code>"}},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setNavigationTargetsObtainedCallback":{"!description":"Sets a new value for property {@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback}.\n\nFunction that is called when the navigation targets provided by the SAP Fiori launchpad are obtained. The function is called with one <code>oNavigationTargets<\/code> parameter of type {@link sap.ui.comp.navpopover.NavigationTargets}. This function has to return a <code>Promise<\/code> resolving into an <code>Object<\/code> of type {@link sap.ui.comp.navpopover.NavigationTargets}. The provided <code>oNavigationTargets<\/code> can be manipulated in this callback before being returned to the <code>NavigationPopoverHandler<\/code>. The <code>Popover<\/code> will open after the <code>Promise<\/code> has been resolved. This function replaces the <code>navigationTargetsObtained<\/code> event. The event handling is ignored if this callback is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnNavigationTargetsObtainedCallback: fn()) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"fnNavigationTargetsObtainedCallback":"type: function, description: New value for property <code>navigationTargetsObtainedCallback<\/code>"}},"!module":"sap/ui/comp/navpopover/SemanticObjectController","!helpDescription":"The <code>SemanticObjectController<\/code> control operates as a single entry point for <code>SmartLink<\/code> controls created automatically by {@link sap.ui.comp.smarttable.SmartTable SmartTable} control, {@link sap.ui.comp.smartchart.SmartChart SmartChart} control, {@link sap.ui.comp.smartform.SmartForm SmartForm} control and {@link sap.ui.comp.smartfield.SmartField SmartField} control based on OData metadata. Additionally, all events provided by the <code>SmartLink<\/code> control are registered by the SemanticObjectController and can be consumed there in a single place. As usual, the SemanticObjectController can be defined within the XML view as well as in the code.","attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setForceLinkRendering":{"!description":"Sets a new value for property {@link #getForceLinkRendering forceLinkRendering}.\n\nObject containing fields for which the corresponding <code>SmartLink<\/code> control is rendered as a link even if <code>contactAnnotationPaths<\/code> is not set and navigation targets do not exist. Setting this property to <code>true<\/code> allows the application, for example, to modify the <code>SmartLink<\/code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\\n\n\n<b>Note:<\/b> The <code>ignoredFields<\/code> property and the <code>ignoreLinkRendering<\/code> property of the <code>SmartLink<\/code> control take precedence over <code>forceLinkRendering<\/code>.\\n\n\nExample of usage: <code> '\\{\"Supplier\":\"true\", \"CompanyName\":\"true\"\\}' <\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oForceLinkRendering?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oForceLinkRendering":"type: object, description: New value for property <code>forceLinkRendering<\/code>"}},"attachPrefetchDone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The event <code>prefetchDone<\/code> is obsolete because it depends on the property <code>prefetchNavigationTargets<\/code> which has been deprecated.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:prefetchDone prefetchDone} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nIf the property <code>prefetchNavigationTargets<\/code> is set to <code>true<\/code>, event <code>prefetchDone<\/code> is fired after all navigation targets have been retrieved.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEnableAvailableActionsPersonalization":{"!description":"Gets current value of property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control. For example, <code> '\\{\"Supplier\":false, \"CompanyName\":true\\}' <\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"registerControl":{"!description":"Adds the given control to the SemanticObjectController and registers all relevant events.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.comp.navpopover.SmartLink | sap.ui.comp.navpopover.NavigationPopoverHandler)","parameters":{"oControl":"type: sap.ui.comp.navpopover.SmartLink|sap.ui.comp.navpopover.NavigationPopoverHandler, description: Control to be registered by <code>SemanticObjectController<\/code>"}},"getForceLinkRendering":{"!description":"Gets current value of property {@link #getForceLinkRendering forceLinkRendering}.\n\nObject containing fields for which the corresponding <code>SmartLink<\/code> control is rendered as a link even if <code>contactAnnotationPaths<\/code> is not set and navigation targets do not exist. Setting this property to <code>true<\/code> allows the application, for example, to modify the <code>SmartLink<\/code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\\n\n\n<b>Note:<\/b> The <code>ignoredFields<\/code> property and the <code>ignoreLinkRendering<\/code> property of the <code>SmartLink<\/code> control take precedence over <code>forceLinkRendering<\/code>.\\n\n\nExample of usage: <code> '\\{\"Supplier\":\"true\", \"CompanyName\":\"true\"\\}' <\/code>","!static":false,"!category":"function","!type":"fn() -> Object"},"attachBeforePopoverOpens":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink, <code>beforePopoverOpens<\/code> is fired after the link has been clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.SemanticObjectController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SemanticObjectController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setIgnoredState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The method <code>setIgnoredState<\/code> is obsolete as SmartLink is processing the internal state on its own.<br>Checks if the given SmartLink has to be enabled or disabled and sets the state.","!static":false,"!category":"function","!type":"fn(oSmartLink: sap.ui.comp.navpopover.SmartLink)","parameters":{"oSmartLink":"type: sap.ui.comp.navpopover.SmartLink, description: the SmartLink which should be enabled or disabled."}}},"sap.ui.comp.variants.VariantManagement":{"setShowShare":{"!description":"Sets a new value for property {@link #getShowShare showShare}.\n\nIndicates that the Public checkbox is visible in the Save View and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowShare?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bShowShare":"type: boolean, description: New value for property <code>showShare<\/code>"}},"getShowSetAsDefault":{"!description":"Gets current value of property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates that set as default is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself.\n\nThis event is fired when a new variant is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowCreateTile":{"!description":"Sets a new value for property {@link #getShowCreateTile showCreateTile}.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCreateTile?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bShowCreateTile":"type: boolean, description: New value for property <code>showCreateTile<\/code>"}},"destroyItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 replaced by the <code>variantItems<\/code> aggregation<br>Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.variants.VariantManagement"},"setShowExecuteOnSelection":{"!description":"Sets a new value for property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowExecuteOnSelection?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bShowExecuteOnSelection":"type: boolean, description: New value for property <code>showExecuteOnSelection<\/code>"}},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:save save} event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself.\n\nThis event is fired when the Save Variant dialog is closed with OK for a variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"currentVariantGetModified":{"!description":"Gets the dirty flag of the current variant.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertVariantItem":{"!description":"Inserts a variantItem into the aggregation {@link #getVariantItems variantItems}.","!static":false,"!category":"function","!type":"fn(oVariantItem: sap.ui.comp.variants.VariantItem, iIndex: Number) -> sap.ui.comp.variants.VariantManagement","parameters":{"oVariantItem":"type: sap.ui.comp.variants.VariantItem, description: The variantItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the variantItem should be inserted at; for a negative value of <code>iIndex<\/code>, the variantItem is inserted at position 0; for a value greater than the current size of the aggregation, the variantItem is inserted at the last position"}},"replaceKey":{"!description":"Replaces the key as proposed by the <code>VariantManagement<\/code> control with the one as proposed by the control usage.","!static":false,"!category":"function","!type":"fn(sOldKey: String, sNewKey: String)","parameters":{"sOldKey":"type: string, description: Key as proposed by the <code>VariantManagement<\/code> control.","sNewKey":"type: string, description: New key which should be used instead of the sOldKey"}},"destroyVariantItems":{"!description":"Destroys all the variantItems in the aggregation {@link #getVariantItems variantItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.variants.VariantManagement"},"getItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 replaced by the <code>variantItems<\/code> aggregation<br>Gets content of aggregation {@link #getItems items}.\n\nItems displayed by the <code>VariantManagement<\/code> control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getStandardItemText":{"!description":"Gets current value of property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 replaced by the <code>variantItems<\/code> aggregation<br>Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"getOverflowToolbarConfig":{"!description":"Required by the {@link sap.m.IOverflowToolbarContent} interface. Registers invalidations event which is fired when width of the control is changed.","!static":false,"!category":"function","!type":"fn() -> [{canOverflow:boolean,invalidationEvents:string]"},"getStandardItemAuthor":{"!description":"Gets current value of property {@link #getStandardItemAuthor standardItemAuthor}.\n\nDefines the author of the standard variant, for example, the name of the own company.\n\nDefault value is <code>\"SAP\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelectionKey":{"!description":"Sets a new value for property {@link #getSelectionKey selectionKey}.\n\nThe key of the currently selected item. Returns null if the default item list is selected. This property is calculated when accessing it via the getSelectionKey method. The corresponding setSelectionKey method is not supported. The access via the standard set/getProperty is also not supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectionKey?: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sSelectionKey":"type: string, description: New value for property <code>selectionKey<\/code>"}},"getDefaultVariantKey":{"!description":"Gets current value of property {@link #getDefaultVariantKey defaultVariantKey}.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"setStandardItemText":{"!description":"Sets a new value for property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStandardItemText?: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sStandardItemText":"type: string, description: New value for property <code>standardItemText<\/code>"}},"getVariantItems":{"!description":"Gets content of aggregation {@link #getVariantItems variantItems}.\n\nVariant items displayed by the <code>VariantManagement<\/code> control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.variants.VariantItem]"},"setInitialSelectionKey":{"!description":"Sets a new value for property {@link #getInitialSelectionKey initialSelectionKey}.\n\nEnables the setting of the initially selected variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitialSelectionKey?: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sInitialSelectionKey":"type: string, description: New value for property <code>initialSelectionKey<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 replaced by the {@link sap.m.VariantManagement} control.<br>The VariantManagement control can be used to manage variants, such as filter bar variants or table variants.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.variants.VariantManagement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeVariantItem":{"!description":"Removes a variantItem from the aggregation {@link #getVariantItems variantItems}.","!static":false,"!category":"function","!type":"fn(vVariantItem: Number | String | sap.ui.comp.variants.VariantItem) -> sap.ui.comp.variants.VariantItem | null","parameters":{"vVariantItem":"type: int|string|sap.ui.comp.variants.VariantItem, description: The variantItem to remove or its index or id"}},"getShowCreateTile":{"!description":"Gets current value of property {@link #getShowCreateTile showCreateTile}.\n\nIndicates that a Create Tile is visible in the Create dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInErrorState":{"!description":"Gets current value of property {@link #getInErrorState inErrorState}.\n\nIndicates that the control is in error state. If set to <code>true<\/code> error message will be displayed whenever the variant is opened.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 replaced by the <code>variantItems<\/code> aggregation<br>Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"setStandardItemAuthor":{"!description":"Sets a new value for property {@link #getStandardItemAuthor standardItemAuthor}.\n\nDefines the author of the standard variant, for example, the name of the own company.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"SAP\"<\/code>.","!static":false,"!category":"function","!type":"fn(sStandardItemAuthor?: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sStandardItemAuthor":"type: string, description: New value for property <code>standardItemAuthor<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.VariantManagement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/comp/variants/VariantManagement","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.0 replaced by the {@link sap.m.VariantManagement} control.<br>The VariantManagement control can be used to manage variants, such as filter bar variants or table variants.","fireSave":{"!description":"Fires event {@link #event:save save} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachManage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:manage manage} event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setUseFavorites":{"!description":"Sets a new value for property {@link #getUseFavorites useFavorites}.\n\nIndicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseFavorites?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bUseFavorites":"type: boolean, description: New value for property <code>useFavorites<\/code>"}},"attachManage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:manage manage} event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself.\n\nThis event is fired when users apply changes to variants in the Manage Variants dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.variants.VariantManagement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 replaced by the <code>variantItems<\/code> aggregation<br>Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or id"}},"addVariantItem":{"!description":"Adds some variantItem to the aggregation {@link #getVariantItems variantItems}.","!static":false,"!category":"function","!type":"fn(oVariantItem: sap.ui.comp.variants.VariantItem) -> sap.ui.comp.variants.VariantManagement","parameters":{"oVariantItem":"type: sap.ui.comp.variants.VariantItem, description: The variantItem to add; if empty, nothing is inserted"}},"!proto":"sap.ui.core.Control","clearVariantSelection":{"!description":"Removes the current variant selection and resets to default value.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","currentVariantSetModified":{"!description":"Sets the dirty flag of the current variant.","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: The value indicating the dirty state of the current variant"}},"setDefaultVariantKey":{"!description":"Sets a new value for property {@link #getDefaultVariantKey defaultVariantKey}.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultVariantKey?: String) -> sap.ui.comp.variants.VariantManagement","parameters":{"sDefaultVariantKey":"type: string, description: New value for property <code>defaultVariantKey<\/code>"}},"getShowExecuteOnSelection":{"!description":"Gets current value of property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfVariantItem":{"!description":"Checks for the provided <code>sap.ui.comp.variants.VariantItem<\/code> in the aggregation {@link #getVariantItems variantItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oVariantItem: sap.ui.comp.variants.VariantItem) -> Number","parameters":{"oVariantItem":"type: sap.ui.comp.variants.VariantItem, description: The variantItem whose index is looked for"}},"addItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 replaced by the <code>variantItems<\/code> aggregation<br>Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.comp.variants.VariantManagement","parameters":{"oItem":"type: sap.ui.core.Item, description: The item to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new VariantManagement.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInitialSelectionKey initialSelectionKey} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getDefaultVariantKey defaultVariantKey} : string<\/li>\n<li>{@link #getSelectionKey selectionKey} : string<\/li>\n<li>{@link #getShowCreateTile showCreateTile} : boolean (default: false)<\/li>\n<li>{@link #getShowExecuteOnSelection showExecuteOnSelection} : boolean (default: false)<\/li>\n<li>{@link #getShowShare showShare} : boolean (default: false)<\/li>\n<li>{@link #getShowSetAsDefault showSetAsDefault} : boolean (default: true)<\/li>\n<li>{@link #getLifecycleSupport lifecycleSupport} : boolean (default: false)<\/li>\n<li>{@link #getStandardItemText standardItemText} : string<\/li>\n<li>{@link #getUseFavorites useFavorites} : boolean (default: false)<\/li>\n<li>{@link #getInErrorState inErrorState} : boolean (default: false)<\/li>\n<li>{@link #getVariantCreationByUserAllowed variantCreationByUserAllowed} : boolean (default: true)<\/li>\n<li>{@link #getStandardItemAuthor standardItemAuthor} : string (default: \"SAP\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<li>{@link #getVariantItems variantItems} : sap.ui.comp.variants.VariantItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:manage manage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowShare":{"!description":"Gets current value of property {@link #getShowShare showShare}.\n\nIndicates that the Public checkbox is visible in the Save View and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireManage":{"!description":"Fires event {@link #event:manage manage} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUseFavorites":{"!description":"Gets current value of property {@link #getUseFavorites useFavorites}.\n\nIndicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInitialSelectionKey":{"!description":"Gets current value of property {@link #getInitialSelectionKey initialSelectionKey}.\n\nEnables the setting of the initially selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllVariantItems":{"!description":"Removes all the controls from the aggregation {@link #getVariantItems variantItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.variants.VariantItem]"},"setCurrentVariantKey":{"!description":"Sets the new selected variant.","!static":false,"!category":"function","!type":"fn(sKey: String)","parameters":{"sKey":"type: string, description: Key of the variant that should be selected."}},"getSelectionKey":{"!description":"Gets current value of property {@link #getSelectionKey selectionKey}.\n\nThe key of the currently selected item. Returns null if the default item list is selected. This property is calculated when accessing it via the getSelectionKey method. The corresponding setSelectionKey method is not supported. The access via the standard set/getProperty is also not supported.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowSetAsDefault":{"!description":"Sets a new value for property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates that set as default is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSetAsDefault?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bShowSetAsDefault":"type: boolean, description: New value for property <code>showSetAsDefault<\/code>"}},"detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:save save} event of this <code>sap.ui.comp.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getVariantCreationByUserAllowed":{"!description":"Gets current value of property {@link #getVariantCreationByUserAllowed variantCreationByUserAllowed}.\n\nIndicates that end users are allowed to create variants.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setBackwardCompatibility":{"!description":"Defines the internal mode. The VariantManagement is able to support two different modes:<br> 1. the mode with standard entry displayed as 'Default' and<br> 2. the mode with standard entry displayed as 'Standard'.<br> The 'Default' display is the initial mode.<br> <code>Note:<\/code> this method has to be executed, before any items are assigned to the VariantManagement control!","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: defines the behavior: <code>false<\/code> new mode, otherwize 'old' mode."}},"getLifecycleSupport":{"!description":"Gets current value of property {@link #getLifecycleSupport lifecycleSupport}.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLifecycleSupport":{"!description":"Sets a new value for property {@link #getLifecycleSupport lifecycleSupport}.\n\nEnables the lifecycle support. If set to true, the VariantManagement control handles the transport information for shared variants.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLifecycleSupport?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bLifecycleSupport":"type: boolean, description: New value for property <code>lifecycleSupport<\/code>"}},"setInErrorState":{"!description":"Sets a new value for property {@link #getInErrorState inErrorState}.\n\nIndicates that the control is in error state. If set to <code>true<\/code> error message will be displayed whenever the variant is opened.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInErrorState?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bInErrorState":"type: boolean, description: New value for property <code>inErrorState<\/code>"}},"setVariantCreationByUserAllowed":{"!description":"Sets a new value for property {@link #getVariantCreationByUserAllowed variantCreationByUserAllowed}.\n\nIndicates that end users are allowed to create variants.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVariantCreationByUserAllowed?: Boolean) -> sap.ui.comp.variants.VariantManagement","parameters":{"bVariantCreationByUserAllowed":"type: boolean, description: New value for property <code>variantCreationByUserAllowed<\/code>"}},"insertItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 replaced by the <code>variantItems<\/code> aggregation<br>Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.comp.variants.VariantManagement","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.Item, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.comp.smartfilterbar.ControlType":{"!description":"The available control types to configure the internal control selection of a SmartFilterBar control.","date":{"!description":"Shows a date picker field.","!category":"enum","!type":"String"},"input":{"!description":"Shows an input field.","!category":"enum","!type":"String"},"auto":{"!description":"Shows field based on metadata.","!category":"enum","!type":"String"},"dateTimePicker":{"!description":"Shows a date time picker field.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","dropDownList":{"!description":"Shows a drop down list field.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.comp.state.UIState":{"!description":"Creates a new instance of an UIState class.","calcSemanticDates":{"!description":"Constructs the value state out of a given selection variant and the current model data","!static":true,"!category":"function","!type":"fn(oSelectionVariant: sap.ui.comp.state.UIState.SelectionVariantParam, mData: map) -> [Object<Object]","parameters":{"oSelectionVariant":"type: sap.ui.comp.state.UIState.SelectionVariantParam, description: selection variant object","mData":"type: map, description: the filter provider model data"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.state.UIState.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getValueTexts":{"!description":"Gets current value of property {@link #getValueTexts valueTexts}.\n\nStructure containing filter value keys and its corresponding descriptions.\n\n<pre><code>\n{\n\tTexts: [\n\t\t{\n\t\t\tLanguage: string,\n\t\t\tContextUrl: string,\n\t\t\tPropertyTexts: [\n\t\t\t\t{\n\t\t\t\t\tPropertyName: string,\n\t\t\t\t\tValueTexts: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tPropertyValue: string,\n\t\t\t\t\t\t\tText: string\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n<\/code><\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"createFromSelectionAndPresentationVariantAnnotation":{"!description":"Converts PresentationVariant annotation to UIState object.","!static":true,"!category":"function","!type":"fn(sVariantName: String, oSelectionVariantAnnotation: Object, oPresentationVariantAnnotation: Object) -> sap.ui.comp.state.UIState","parameters":{"oSelectionVariantAnnotation":"type: Object, description: Object representing the com.sap.vocabularies.UI.v1.SelectionVariant annotation provided by MetadataAnalyser","sVariantName":"type: string, description: Name of the variant","oPresentationVariantAnnotation":"type: Object, description: Object representing the com.sap.vocabularies.UI.v1.PresentationVariant annotation provided by MetadataAnalyser"}},"getSelectionVariant":{"!description":"Gets current value of property {@link #getSelectionVariant selectionVariant}.\n\nObject representing the selection variant. The structure looks like:\n\n<pre><code>\n{\n SelectionVariant: {\n     SelectionVariantID: {string},\n\t\tParameters: [],\n\t\tSelectOptions: []\n}\n<\/code><\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.base.ManagedObject","getSemanticDates":{"!description":"Gets current value of property {@link #getSemanticDates semanticDates}.\n\nStructure containing Date range semantic data of the filter value.\n\n<pre><code>\n{\n\tDates: [\n\t\t{\n\t\t\tPropertyName: string,\n\t\t\tData: {\n\t\t\t\t\tcalendarType: string,\n\t\t\t\t\tkey: string,\n\t\t\t\t\toperation: string,\n\t\t\t\t\tvalue1: int,\n\t\t\t\t\tvalue2: int\n\t\t\t\t}\n\t\t}\n\t]\n}\n<\/code><\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"setVariantName":{"!description":"Sets a new value for property {@link #getVariantName variantName}.\n\nVariant name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sVariantName: String) -> sap.ui.comp.state.UIState","parameters":{"sVariantName":"type: string, description: New value for property <code>variantName<\/code>"}},"!category":"class","setSemanticDates":{"!description":"Sets a new value for property {@link #getSemanticDates semanticDates}.\n\nStructure containing Date range semantic data of the filter value.\n\n<pre><code>\n{\n\tDates: [\n\t\t{\n\t\t\tPropertyName: string,\n\t\t\tData: {\n\t\t\t\t\tcalendarType: string,\n\t\t\t\t\tkey: string,\n\t\t\t\t\toperation: string,\n\t\t\t\t\tvalue1: int,\n\t\t\t\t\tvalue2: int\n\t\t\t\t}\n\t\t}\n\t]\n}\n<\/code><\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticDates: Object) -> sap.ui.comp.state.UIState","parameters":{"oSemanticDates":"type: object, description: New value for property <code>semanticDates<\/code>"}},"determineFiltersWithOnlyKeyValues":{"!description":"Determines the filter names with value keys where the description is not available.","!static":true,"!category":"function","!type":"fn(oValueTexts: Object, oSelectionVariant: sap.ui.comp.state.UIState.SelectionVariantParam, aIgnoreSelOptionNames: [Object]) -> [Object<string,Object]","parameters":{"oValueTexts":"type: object, description: Containing the value description for filters","oSelectionVariant":"type: sap.ui.comp.state.UIState.SelectionVariantParam, description: The selection variant containing filters and value keys","aIgnoreSelOptionNames":"type: Object[], description: Filter names to ignore"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.state.UIState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPresentationVariant presentationVariant} : object<\/li>\n<li>{@link #getSelectionVariant selectionVariant} : object<\/li>\n<li>{@link #getVariantName variantName} : string<\/li>\n<li>{@link #getValueTexts valueTexts} : object<\/li>\n<li>{@link #getSemanticDates semanticDates} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/ui/comp/state/UIState","calculateValueTexts":{"!description":"Constructs the value state out of a given selection variant and the current model data","!static":true,"!category":"function","!type":"fn(oSelectionVariant: sap.ui.comp.state.UIState.SelectionVariantParam, mData: map) -> [Object<Object]","parameters":{"oSelectionVariant":"type: sap.ui.comp.state.UIState.SelectionVariantParam, description: selection variant object","mData":"type: map, description: the filter provider model data"}},"!helpDescription":"Creates a new instance of an UIState class.","enrichWithSemanticDates":{"!description":"Enriches the internal filter bar value format with the semantic date information.","!static":true,"!category":"function","!type":"fn(sPayload: String, oSemanticDates: [Object<Object]) -> String","parameters":{"sPayload":"type: string, description: the filter bar inner data format","oSemanticDates":"type: Object<Object[]>, description: Semantic date information"}},"getVariantName":{"!description":"Gets current value of property {@link #getVariantName variantName}.\n\nVariant name.","!static":false,"!category":"function","!type":"fn() -> String"},"getPresentationVariant":{"!description":"Gets current value of property {@link #getPresentationVariant presentationVariant}.\n\nObject representing the presentation variant. The structure looks like:\n\n<pre><code>\n{\n\tContextUrl: {string},\n\tMaxItems: {int},\n SortOrder: [],\n\tGroupBy: [],\n\tTotal: [],\n\tRequestAtLeast: [],\n\tVisualizations: []\n}\n<\/code><\/pre>\n\n<b>Note:<\/b> <ul> <li> <code>PresentationVariantID<\/code> property is not provided<\/li> <li> <code>Text<\/code> property is not provided because it is translated text<\/li> <li> <code>TotalBy<\/code> is not supported yet<\/li> <li> <code>IncludeGrandTotal<\/code> is not supported yet<\/li> <li> <code>InitialExpansionLevel<\/code> is not supported yet<\/li> <li> <code>Title<\/code> of <code>Visualizations.Content<\/code> property is not provided because it is translated text<\/li> <li> <code>Description<\/code> of <code>Visualizations.Content<\/code> property is not provided because it is translated text<\/li> <li> <code>VariantName<\/code> property is not part of specified DataSuiteFormat yet <\/ul>","!static":false,"!category":"function","!type":"fn() -> Object"},"setPresentationVariant":{"!description":"Sets a new value for property {@link #getPresentationVariant presentationVariant}.\n\nObject representing the presentation variant. The structure looks like:\n\n<pre><code>\n{\n\tContextUrl: {string},\n\tMaxItems: {int},\n SortOrder: [],\n\tGroupBy: [],\n\tTotal: [],\n\tRequestAtLeast: [],\n\tVisualizations: []\n}\n<\/code><\/pre>\n\n<b>Note:<\/b> <ul> <li> <code>PresentationVariantID<\/code> property is not provided<\/li> <li> <code>Text<\/code> property is not provided because it is translated text<\/li> <li> <code>TotalBy<\/code> is not supported yet<\/li> <li> <code>IncludeGrandTotal<\/code> is not supported yet<\/li> <li> <code>InitialExpansionLevel<\/code> is not supported yet<\/li> <li> <code>Title<\/code> of <code>Visualizations.Content<\/code> property is not provided because it is translated text<\/li> <li> <code>Description<\/code> of <code>Visualizations.Content<\/code> property is not provided because it is translated text<\/li> <li> <code>VariantName<\/code> property is not part of specified DataSuiteFormat yet <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oPresentationVariant: Object) -> sap.ui.comp.state.UIState","parameters":{"oPresentationVariant":"type: object, description: New value for property <code>presentationVariant<\/code>"}},"setValueTexts":{"!description":"Sets a new value for property {@link #getValueTexts valueTexts}.\n\nStructure containing filter value keys and its corresponding descriptions.\n\n<pre><code>\n{\n\tTexts: [\n\t\t{\n\t\t\tLanguage: string,\n\t\t\tContextUrl: string,\n\t\t\tPropertyTexts: [\n\t\t\t\t{\n\t\t\t\t\tPropertyName: string,\n\t\t\t\t\tValueTexts: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tPropertyValue: string,\n\t\t\t\t\t\t\tText: string\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n<\/code><\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValueTexts: Object) -> sap.ui.comp.state.UIState","parameters":{"oValueTexts":"type: object, description: New value for property <code>valueTexts<\/code>"}},"enrichWithValueTexts":{"!description":"Enriches the internal filter bar value format with the information from the value state.","!static":true,"!category":"function","!type":"fn(sPayload: String, oValueTexts: [Object<Object]) -> String","parameters":{"sPayload":"type: string, description: the filter bar inner data format","oValueTexts":"type: Object<Object[]>, description: the value texts format containing the eventual descriptions."}},"setSelectionVariant":{"!description":"Sets a new value for property {@link #getSelectionVariant selectionVariant}.\n\nObject representing the selection variant. The structure looks like:\n\n<pre><code>\n{\n SelectionVariant: {\n     SelectionVariantID: {string},\n\t\tParameters: [],\n\t\tSelectOptions: []\n}\n<\/code><\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSelectionVariant: Object) -> sap.ui.comp.state.UIState","parameters":{"oSelectionVariant":"type: object, description: New value for property <code>selectionVariant<\/code>"}}},"sap.ui.comp.filterbar":{"persistencyKey":{"!description":"Key used to access personalization data. Only if the persistencyKey is provided, will the <code>VariantManagement<\/code> control be used.","!category":"enum","!type":"String"},"disableSearchMatchesPatternWarning":{"!description":"Disables the warning for special symbols.\n\n<b>Note:<\/b> Changing the values here after the SmartFilter is initialized (<code>initialise<\/code> event was fired) has no effect.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"isRunningInValueHelpDialog":{"!description":"Sets whether the filter bar should look like the filters area in a ValueHelpDialog. True for SmartFilterBar when used in a ValueHelpDialog. False otherwise.","!category":"enum","!type":"Boolean"},"showClearOnFB":{"!description":"Handles visibility of the Clear button on the FilterBar.","!category":"enum","!type":"Boolean"},"controlTooltip":{"!description":"Tooltip for the filter'c control.","!category":"enum","!type":"String"},"groupTitle":{"!description":"Title of the group.","!category":"enum","!type":"String"},"showAllFilters":{"!description":"If set to <code>true<\/code>, when the <code>FilterBar<\/code> is expanded it will show all filters, not only the first 7.\n\n<b>Note:<\/b> This is valid only when the <code>FilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>","!category":"enum","!type":"Boolean"},"!category":"namespace","partOfCurrentVariant":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Will be internally treated as if always set to <code>true<code><br>Determines if a filter is part of the currently selected variant. <br> <b>Note:<\/b> This property can also be changed using the <code>visibleInFilterBar<\/code> property and by user interaction in the Select Filters dialog or the variant handling.","!category":"enum","!type":"Boolean"},"mandatory":{"!description":"Mandatory flag.","!category":"enum","!type":"Boolean"},"visibleInAdvancedArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.1 Replaced by property <code>visibleInFilterBar<\/code><br>If set to true, this filter is visible on the filter bar by default. Mapped against the <code>visibleInFilterBar<\/code> property.","!category":"enum","!type":"Boolean"},"FilterGroupItem":"sap.ui.comp.filterbar.FilterGroupItem_obj","showRestoreButton":{"!description":"Handles visibility of the \"Restore\" button on the \"Filters\" dialog. <b>Note:<\/b> Restore works only automatically when a property <code>persistencyKey<\/code> is set and therefore Variant Management is used. In all other cases the \"restore\" behavior needs to be implemented by the app, based on the event <code>reset<\/code>. Since 1.84 the \"Restore\" button text is changed to \"Reset\"","!category":"enum","!type":"Boolean"},"advancedMode":{"!description":"The advanced mode is only relevant for the value help scenario. UI representation is different from the standard FilterBar.","!category":"enum","!type":"Boolean"},"expandAdvancedArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30.0 Replaced by property <code>filterBarExpanded<\/code> This property is mapped to the filterBarExpanded property.<br>Collapses/expands the advanced area.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"labelTooltip":{"!description":"Tooltip for the filter.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"hiddenFilter":{"!description":"A hidden filter will never be visible in the filter bar control","!category":"enum","!type":"Boolean"},"entitySetName":{"!description":"EntitySet name to which the filter belongs","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"showGoOnFB":{"!description":"Handles visibility of the Go button on the FilterBar.","!category":"enum","!type":"Boolean"},"useToolbar":{"!description":"Determines what design is used. Default is the design with toolbar. If the property <code>useToolbar<\/code> is set to <code>false<\/code>, the property <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b><br> If set to <code>false<\/code>, the <code>VariantManagement<\/code> control is not available at all. This scenario is only intended for the {@link sap.ui.comp.smartfilterbar.SmartFilterBar}.","!category":"enum","!type":"Boolean"},"showFilterConfiguration":{"!description":"Handles visibility of the Filters button on the FilterBar.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Visibility state of the filter.","!category":"enum","!type":"Boolean"},"showClearButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement. Users can select any Variant instead.<br>Handles visibility of the Clear button on the Filters dialog.","!category":"enum","!type":"Boolean"},"visibleInFilterBar":{"!description":"Controls the visibility of a filter item in the filter bar.","!category":"enum","!type":"Boolean"},"filterContainerWidth":{"!description":"Sets the width of the filters container.","!category":"enum","!type":"String"},"entityTypeName":{"!description":"EntityType name to which the filter belongs","!category":"enum","!type":"String"},"label":{"!description":"Label of the filter.","!category":"enum","!type":"String"},"showRestoreOnFB":{"!description":"Handles visibility of the Restore button on the FilterBar.","!category":"enum","!type":"Boolean"},"FilterItem":"sap.ui.comp.filterbar.FilterItem_obj","deltaVariantMode":{"!description":"Stores the delta as compared to the standard variant.","!category":"enum","!type":"Boolean"},"FilterBar":"sap.ui.comp.filterbar.FilterBar_obj","groupName":{"!description":"Name of the group.","!category":"enum","!type":"String"},"useSnapshot":{"!description":"Determines the behavior when <code>reset<\/code> is executed. <br> <b>Note:<\/b> This property is only relevant if no variant management is used, and the filter bar is not used in the advanced mode. A snapshot shows the current state of the filter bar, just before the Filters dialog is opened. <ul> <li><code>undefined<\/code> (default) defines the standard behavior: snapshot will be applied after <code>reset<\/code> was triggered<\/li> <li><code>false<\/code> defines that the snapshot will not be applied<\/li> <li><code>true<\/code>is not considered at all<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"considerGroupTitle":{"!description":"If this property is set, then the label for filters will be prefixed with the group title.","!category":"enum","!type":"Boolean"},"headerLevel":{"!description":"Specifies the semantic header level of the {@link #getHeader header} text property. For more information, see {@link sap.m.Title#setLevel}. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"name":{"!description":"Name of the filter. This is an identifier for the filter and has to be unique.","!category":"enum","!type":"String"},"header":{"!description":"Specifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.","!category":"enum","!type":"String"},"showGoButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>showGoOnFB<\/code><br>Handles visibility of the Go button on the FilterBar.","!category":"enum","!type":"Boolean"},"filterBarExpanded":{"!description":"Shows the filters area. When property <code>useToolbar<\/code> is set to <code>false<\/code>, <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b> When <code>SmartFilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>, it is initially collapsed. The filter bar is initially expanded in the following cases:\n\n- When there is no basic search field.\n\n- When <code>preventInitialDataFetchInValueHelpDialog<\/code> is set to <code>true<\/code> or the <code>fetchValues<\/code> property of the <code>valueList<\/code> annotation is set to <code>2<\/code>.\n\n- When there are mandatory fields, all fields are expanded (not only the first 7).","!category":"enum","!type":"Boolean"},"searchEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Enables/disables the Search button.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.navpopover.NavigationPopover":{"getExtraContent":{"!description":"ID of the element which is the current target of the association {@link #getExtraContent extraContent}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getAvailableActions":{"!description":"Gets content of aggregation {@link #getAvailableActions availableActions}.\n\nA list of available actions shown as links.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.navpopover.LinkData]"},"getMainNavigation":{"!description":"Gets content of aggregation {@link #getMainNavigation mainNavigation}.\n\nThe main navigation link. If <code>mainNavigationId<\/code> is not set then <code>text<\/code> of <code>mainNavigation<\/code> is displayed. Otherwise the <code>mainNavigationId<\/code> is displayed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.LinkData"},"addAvailableAction":{"!description":"Adds some availableAction to the aggregation {@link #getAvailableActions availableActions}.","!static":false,"!category":"function","!type":"fn(oAvailableAction: sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oAvailableAction":"type: sap.ui.comp.navpopover.LinkData, description: The availableAction to add; if empty, nothing is inserted"}},"retrieveNavTargets":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 Target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Determines the potential navigation targets for the semantical object and visualize the popover.","!static":false,"!category":"function","!type":"fn()"},"fireTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The event <code>navigationTargetsObtained<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained<\/code> is fired from NavigationPopoverHandler after navigation targets are determined.<br>Fires event {@link #event:targetsObtained targetsObtained} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSemanticAttributes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>semanticAttributes<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Gets current value of property {@link #getSemanticAttributes semanticAttributes}.\n\nDescribes the semantic attributes. The attribute has to be a map.","!static":false,"!category":"function","!type":"fn() -> Object"},"indexOfAvailableAction":{"!description":"Checks for the provided <code>sap.ui.comp.navpopover.LinkData<\/code> in the aggregation {@link #getAvailableActions availableActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAvailableAction: sap.ui.comp.navpopover.LinkData) -> Number","parameters":{"oAvailableAction":"type: sap.ui.comp.navpopover.LinkData, description: The availableAction whose index is looked for"}},"insertAvailableAction":{"!description":"Inserts a availableAction into the aggregation {@link #getAvailableActions availableActions}.","!static":false,"!category":"function","!type":"fn(oAvailableAction: sap.ui.comp.navpopover.LinkData, iIndex: Number) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oAvailableAction":"type: sap.ui.comp.navpopover.LinkData, description: The availableAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the availableAction should be inserted at; for a negative value of <code>iIndex<\/code>, the availableAction is inserted at position 0; for a value greater than the current size of the aggregation, the availableAction is inserted at the last position"}},"destroyOwnNavigation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>ownNavigation<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Destroys the ownNavigation in the aggregation {@link #getOwnNavigation ownNavigation}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.NavigationPopover"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121 SmartLink no longer opens a NavigationPopover, it got replaced by the sap.ui.mdc.link.Panel in a sap.m.ResponsivePopover<br>The NavigationPopover control is used to present information in a specific format. <b>Note<\/b>: This control is used by the {@link sap.ui.comp.navpopover.NavigationPopoverHandler NavigationPopoverHandler} and must not be used manually.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.NavigationPopover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The event <code>navigationTargetsObtained<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained<\/code> is fired from NavigationPopoverHandler after navigation targets are determined.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:targetsObtained targetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setAvailableActionsPersonalizationText":{"!description":"Sets a new value for property {@link #getAvailableActionsPersonalizationText availableActionsPersonalizationText}.\n\nDetermines the text of personalization link. If this property is set to some string, choosing the personalization link will trigger the <code>availableActionsPersonalizationPress<\/code> event. If this property is not set, the personalization link is not shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sAvailableActionsPersonalizationText?: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sAvailableActionsPersonalizationText":"type: string, description: New value for property <code>availableActionsPersonalizationText<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.NavigationPopover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ResponsivePopover.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMainNavigation":{"!description":"Sets the aggregated {@link #getMainNavigation mainNavigation}.","!static":false,"!category":"function","!type":"fn(oMainNavigation: sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oMainNavigation":"type: sap.ui.comp.navpopover.LinkData, description: The mainNavigation to set"}},"!module":"sap/ui/comp/navpopover/NavigationPopover","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121 SmartLink no longer opens a NavigationPopover, it got replaced by the sap.ui.mdc.link.Panel in a sap.m.ResponsivePopover<br>The NavigationPopover control is used to present information in a specific format. <b>Note<\/b>: This control is used by the {@link sap.ui.comp.navpopover.NavigationPopoverHandler NavigationPopoverHandler} and must not be used manually.","getSource":{"!description":"ID of the element which is the current target of the association {@link #getSource source}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself.\n\nThis event is fired when a link is chosen.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getComponent":{"!description":"ID of the element which is the current target of the association {@link #getComponent component}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"detachAvailableActionsPersonalizationPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:availableActionsPersonalizationPress availableActionsPersonalizationPress} event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachAvailableActionsPersonalizationPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:availableActionsPersonalizationPress availableActionsPersonalizationPress} event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself.\n\nThis event is fired when personalization of <code>availableActions<\/code> is chosen.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSemanticObjectName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>semanticObjectName<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Gets current value of property {@link #getSemanticObjectName semanticObjectName}.\n\nThe name of the semantic object.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAvailableAction":{"!description":"Removes a availableAction from the aggregation {@link #getAvailableActions availableActions}.","!static":false,"!category":"function","!type":"fn(vAvailableAction: Number | String | sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.LinkData | null","parameters":{"vAvailableAction":"type: int|string|sap.ui.comp.navpopover.LinkData, description: The availableAction to remove or its index or id"}},"setSource":{"!description":"Sets the associated {@link #getSource source}.","!static":false,"!category":"function","!type":"fn(oSource: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oSource":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this source association; alternatively, an element instance may be given"}},"setExtraContent":{"!description":"Sets the associated {@link #getExtraContent extraContent}.","!static":false,"!category":"function","!type":"fn(oExtraContent: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oExtraContent":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this extraContent association; alternatively, an element instance may be given"}},"!proto":"sap.m.ResponsivePopover","show":{"!description":"Displays the popover. This method should be called, once all navigation targets are adapted by the application.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","getMainNavigationId":{"!description":"Gets current value of property {@link #getMainNavigationId mainNavigationId}.\n\nSets the description of the main navigation link. If <code>mainNavigation<\/code> also contains an href description, then <code>mainNavigationId<\/code> is displayed. If <code>mainNavigationId<\/code> is set to an empty string <code>''<\/code>, neither description nor subtitle are displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"attachTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The event <code>navigationTargetsObtained<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination. The event <code>navigationTargetsObtained<\/code> is fired from NavigationPopoverHandler after navigation targets are determined.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:targetsObtained targetsObtained} event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself.\n\nThe navigation targets that are shown.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.NavigationPopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setOwnNavigation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>ownNavigation<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Sets the aggregated {@link #getOwnNavigation ownNavigation}.","!static":false,"!category":"function","!type":"fn(oOwnNavigation: sap.ui.comp.navpopover.LinkData) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oOwnNavigation":"type: sap.ui.comp.navpopover.LinkData, description: The ownNavigation to set"}},"!constructorDescription":"Constructor for a new navpopover/NavigationPopover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSemanticObjectName semanticObjectName} : string<\/li>\n<li>{@link #getSemanticAttributes semanticAttributes} : object<\/li>\n<li>{@link #getAppStateKey appStateKey} : string<\/li>\n<li>{@link #getMainNavigationId mainNavigationId} : string<\/li>\n<li>{@link #getAvailableActionsPersonalizationText availableActionsPersonalizationText} : string (default: undefined)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAvailableActions availableActions} : sap.ui.comp.navpopover.LinkData[]<\/li>\n<li>{@link #getMainNavigation mainNavigation} : sap.ui.comp.navpopover.LinkData<\/li>\n<li>{@link #getOwnNavigation ownNavigation} : sap.ui.comp.navpopover.LinkData<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSource source} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getExtraContent extraContent} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getComponent component} : (sap.ui.core.ID | sap.ui.core.Element)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:targetsObtained targetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:availableActionsPersonalizationPress availableActionsPersonalizationPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ResponsivePopover#constructor sap.m.ResponsivePopover}\ncan be used as well.","setSemanticObjectName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>semanticObjectName<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Sets a new value for property {@link #getSemanticObjectName semanticObjectName}.\n\nThe name of the semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObjectName?: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sSemanticObjectName":"type: string, description: New value for property <code>semanticObjectName<\/code>"}},"getOwnNavigation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>ownNavigation<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Gets content of aggregation {@link #getOwnNavigation ownNavigation}.\n\nThe navigation taking the user back to the source application.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.LinkData"},"getAppStateKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>appStateKey<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Gets current value of property {@link #getAppStateKey appStateKey}.\n\nThe application state key passed to retrieve the navigation targets.","!static":false,"!category":"function","!type":"fn() -> String"},"setMainNavigationId":{"!description":"Sets a new value for property {@link #getMainNavigationId mainNavigationId}.\n\nSets the description of the main navigation link. If <code>mainNavigation<\/code> also contains an href description, then <code>mainNavigationId<\/code> is displayed. If <code>mainNavigationId<\/code> is set to an empty string <code>''<\/code>, neither description nor subtitle are displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMainNavigationId?: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sMainNavigationId":"type: string, description: New value for property <code>mainNavigationId<\/code>"}},"setComponent":{"!description":"Sets the associated {@link #getComponent component}.","!static":false,"!category":"function","!type":"fn(oComponent: sap.ui.core.ID | sap.ui.core.Element) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oComponent":"type: sap.ui.core.ID|sap.ui.core.Element, description: ID of an element which becomes the new target of this component association; alternatively, an element instance may be given"}},"destroyMainNavigation":{"!description":"Destroys the mainNavigation in the aggregation {@link #getMainNavigation mainNavigation}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.NavigationPopover"},"setAppStateKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>appStateKey<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Sets a new value for property {@link #getAppStateKey appStateKey}.\n\nThe application state key passed to retrieve the navigation targets.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAppStateKey?: String) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"sAppStateKey":"type: string, description: New value for property <code>appStateKey<\/code>"}},"getDirectLink":{"!description":"Returns link for direct navigation if the NavigationPopover has only <code>mainNavigation<\/code> or one <code>availableAction<\/code> and no <code>extraContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Link | null"},"setSemanticAttributes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>semanticAttributes<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Sets a new value for property {@link #getSemanticAttributes semanticAttributes}.\n\nDescribes the semantic attributes. The attribute has to be a map.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticAttributes?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oSemanticAttributes":"type: object, description: New value for property <code>semanticAttributes<\/code>"}},"removeAllAvailableActions":{"!description":"Removes all the controls from the aggregation {@link #getAvailableActions availableActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.navpopover.LinkData]"},"getAvailableActionsPersonalizationText":{"!description":"Gets current value of property {@link #getAvailableActionsPersonalizationText availableActionsPersonalizationText}.\n\nDetermines the text of personalization link. If this property is set to some string, choosing the personalization link will trigger the <code>availableActionsPersonalizationPress<\/code> event. If this property is not set, the personalization link is not shown.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireAvailableActionsPersonalizationPress":{"!description":"Fires event {@link #event:availableActionsPersonalizationPress availableActionsPersonalizationPress} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.comp.navpopover.NavigationPopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.NavigationPopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"destroyAvailableActions":{"!description":"Destroys all the availableActions in the aggregation {@link #getAvailableActions availableActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.NavigationPopover"}},"sap.ui.comp.navpopover.SmartLink_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SmartLink with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Link.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.navpopover.SmartLink"},"sap.ui.comp.smartmicrochart.SmartAreaMicroChart":{"!description":"The SmartAreaMicroChart control creates a AreaMicroChart based on OData metadata and the configuration specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch fields from OData metadata, from which Micro Area Chart UI will be generated; it can also be used to fetch the actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialised.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartAreaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartAreaMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartAreaMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase}\ncan be used as well.","!module":"sap/ui/comp/smartmicrochart/SmartAreaMicroChart","getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nOnly <code>true<\/code> value is supported: the chart will be bound to the chartBindingPath or to the entitySet\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"The SmartAreaMicroChart control creates a AreaMicroChart based on OData metadata and the configuration specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch fields from OData metadata, from which Micro Area Chart UI will be generated; it can also be used to fetch the actual chart data.<br> <b><i>Note:<\/i><\/b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialised.","!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class"},"sap.ui.comp.smartfilterbar":{"persistencyKey":{"!description":"Key used to access personalization data. Only if the persistencyKey is provided, will the <code>VariantManagement<\/code> control be used.","!category":"enum","!type":"String"},"disableSearchMatchesPatternWarning":{"!description":"Disables the warning for special symbols.\n\n<b>Note:<\/b> Changing the values here after the SmartFilter is initialized (<code>initialise<\/code> event was fired) has no effect.","!category":"enum","!type":"Boolean"},"suppressSelection":{"!description":"If set to <code>true<\/code> all search requests will be ignored. This functionality is only intended to be used internally to enable an optimal solution when the filter bar is controlled by the smart templates. NOTE: As long as this property is set to <code>true<\/code>, all search requests will be neglected.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"conditionPanelDefaultOperation":{"!description":"Sets default operation for Condition Panel of the Value Help dialog. In case the newly set default operation is not valid for the filter's EDM data type, then it is ignored.","!category":"enum","!type":"sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation"},"showAllFilters":{"!description":"If set to <code>true<\/code>, when the <code>FilterBar<\/code> is expanded it will show all filters, not only the first 7.\n\n<b>Note:<\/b> This is valid only when the <code>FilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>","!category":"enum","!type":"Boolean"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between the field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established (e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"expandAdvancedArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30.0 Replaced by property <code>filterBarExpanded<\/code> This property is mapped to the filterBarExpanded property.<br>Collapses/expands the advanced area.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"entitySetName":{"!description":"EntitySet name to which the filter belongs","!category":"enum","!type":"String"},"maxWidth":{"!description":"Sets the maximum width of the text field.","!category":"enum","!type":"sap.ui.core.CSSSize"},"entityType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40 Use <code>entitySet<\/code> property instead of this one, to enable V4 annotation support<br>The OData entity type whose metadata is used to create the <code>SmartFilterBar<\/code>. <b>Note:<\/b> Changing this value after the <code>SmartFilterBar<\/code> is initialized (<code>initialise<\/code> event was fired) has no effect.","!category":"enum","!type":"String"},"showSecondaryValues":{"!description":"Indicates whether the text values of the <code>additionalText<\/code> property of a {@link sap.ui.core.ListItem} are shown.","!category":"enum","!type":"Boolean"},"index":{"!description":"Zero based integer index. The index can be used to specify the order of groups. If no index is specified, the order like in the OData metadata will be used.","!category":"enum","!type":"Object"},"deltaVariantMode":{"!description":"Stores the delta as compared to the standard variant.","!category":"enum","!type":"Boolean"},"groupName":{"!description":"Name of the group.","!category":"enum","!type":"String"},"useSnapshot":{"!description":"Determines the behavior when <code>reset<\/code> is executed. <br> <b>Note:<\/b> This property is only relevant if no variant management is used, and the filter bar is not used in the advanced mode. A snapshot shows the current state of the filter bar, just before the Filters dialog is opened. <ul> <li><code>undefined<\/code> (default) defines the standard behavior: snapshot will be applied after <code>reset<\/code> was triggered<\/li> <li><code>false<\/code> defines that the snapshot will not be applied<\/li> <li><code>true<\/code>is not considered at all<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"showButton":{"!description":"Indicates whether the dropdown downward-facing arrow button is shown.","!category":"enum","!type":"Boolean"},"conditionType":{"!description":"The <code>conditionType<\/code> class name to be used for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type","!category":"enum","!type":"Object"},"historyEnabled":{"!description":"If set to <code>false<\/code> history values are disabled.\n\n<b>Note:<\/b> For {@link sap.m.ComboBox} and {@link sap.m.MultiComboBox} the history values are disabled by default. To enable them for these controls, you need to set the <code>historyEnabled<\/code> property to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"considerPresentationVariant":{"!description":"Indicates if the annotation <code>com.sap.vocabularies.UI.v1.PresentationVariant<\/code> is taken into account.<br>","!category":"enum","!type":"Boolean"},"selectedKeys":{"!description":"Keys of the selected items. If the key has no corresponding item, no changes will apply. If duplicate keys exists the first item matching the key is used.","!category":"enum","!type":"[String]"},"textArrangement":{"!description":"Sets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.","!category":"enum","!type":"String"},"showClearOnFB":{"!description":"Handles visibility of the Clear button on the FilterBar.","!category":"enum","!type":"Boolean"},"SmartFilterBarFilterGroupItem":"sap.ui.comp.smartfilterbar.SmartFilterBarFilterGroupItem_obj","mandatory":{"!description":"Mandatory flag.","!category":"enum","!type":"Boolean"},"visibleInAdvancedArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.1 Replaced by property <code>visibleInFilterBar<\/code><br>If set to true, this filter is visible on the filter bar by default. Mapped against the <code>visibleInFilterBar<\/code> property.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Indicates whether the user can interact with the control or not. <b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab-chain.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"low":{"!description":"The low value for a select option.","!category":"enum","!type":"String"},"hiddenFilter":{"!description":"A hidden filter will never be visible in the filter bar control","!category":"enum","!type":"Boolean"},"key":{"!description":"The key property must correspond to the <code>EntitySet<\/code> name or <code>FieldGroup Qualifier<\/code> from the OData service $metadata document.","!category":"enum","!type":"String"},"showFilterConfiguration":{"!description":"Handles visibility of the Filters button on the FilterBar.","!category":"enum","!type":"Boolean"},"effectiveShowClearIcon":{"!description":"Specifies whether the clear icon should be shown/hidden on user interaction.","!category":"enum","!type":"Boolean"},"visibleInFilterBar":{"!description":"Controls the visibility of a filter item in the filter bar.","!category":"enum","!type":"Boolean"},"basicSearchFieldName":{"!description":"Name of the field that is the focus of the basic search.","!category":"enum","!type":"String"},"displayBehaviour":{"!description":"The displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown text) , Description and ID for MultiInput (token text)","!category":"enum","!type":"sap.ui.comp.smartfilterbar.DisplayBehaviour"},"showRestoreOnFB":{"!description":"Handles visibility of the Restore button on the FilterBar.","!category":"enum","!type":"Boolean"},"headerLevel":{"!description":"Specifies the semantic header level of the {@link #getHeader header} text property. For more information, see {@link sap.m.Title#setLevel}. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"width":{"!description":"Defines the width of the control.\n\n<b>Note:<\/b> If the provided width is too small, the control gets stretched to its min width, which is needed in order for the control to be usable and well aligned.","!category":"enum","!type":"sap.ui.core.CSSSize"},"open":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.110 Please check the <code>showItems<\/code> functionality if you need to open the picker programmatically.<br>Indicates whether the picker is opened.","!category":"enum","!type":"Boolean"},"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!category":"enum","!type":"String"},"preventInitialDataFetchInValueHelpDialog":{"!description":"In case there are value help annotations for this filter field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>false<\/code>, which means the table will be filled as the data fetch is not prevented. <b>Note:<\/b> As of version 1.78 the default value has been changed from <code>true<\/code> to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"groupId":{"!description":"The groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData metadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.","!category":"enum","!type":"String"},"sign":{"!description":"The sign for a Select Option. Possible values are I for include or E for exclude.","!category":"enum","!type":"sap.ui.comp.smartfilterbar.SelectOptionSign"},"operator":{"!description":"The operator for a select option. The default value is EQ \"for equals\".","!category":"enum","!type":"sap.ui.model.FilterOperator"},"showRestoreButton":{"!description":"Handles visibility of the \"Restore\" button on the \"Filters\" dialog. <b>Note:<\/b> Restore works only automatically when a property <code>persistencyKey<\/code> is set and therefore Variant Management is used. In all other cases the \"restore\" behavior needs to be implemented by the app, based on the event <code>reset<\/code>. Since 1.84 the \"Restore\" button text is changed to \"Reset\"","!category":"enum","!type":"Boolean"},"high":{"!description":"The high value for a select option. The high value is only required for a few operators, e.g. BT (between).","!category":"enum","!type":"String"},"labelTooltip":{"!description":"Tooltip for the filter.","!category":"enum","!type":"String"},"enableBasicSearch":{"!description":"Enables the basic search field. The entered value can be accessed with {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getParameters}.<br><b>Note:<\/b> When the <code>SmartFilterBar<\/code> control is used with a {@link sap.ui.comp.smarttable.SmartTable} control the parameters are handled automatically. Therefore, this must only be enabled for OData service entities that support basic search.<br><b>Note:<\/b> basic search field is restricted to 1000 characters and spaces.","!category":"enum","!type":"Boolean"},"navigationProperties":{"!description":"This property is only evaluated if the property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getUseProvidedNavigationProperties} is set to <code>true<\/code>. It contains a comma-separated list of <code>NavigationProperty<\/code>> names which are checked for filters. It can also contain a list of separate filters from different <code>NavigationProperty<\/code> names. <br>","!category":"enum","!type":"String"},"showGoOnFB":{"!description":"Handles visibility of the Go button on the FilterBar.","!category":"enum","!type":"Boolean"},"useToolbar":{"!description":"Determines what design is used. Default is the design with toolbar. If the property <code>useToolbar<\/code> is set to <code>false<\/code>, the property <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b><br> If set to <code>false<\/code>, the <code>VariantManagement<\/code> control is not available at all. This scenario is only intended for the {@link sap.ui.comp.smartfilterbar.SmartFilterBar}.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Visibility state of the filter.","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The OData entity set whose metadata is used to create the <code>SmartFilterBar<\/code>. <b>Note:<\/b> Changing this value after the <code>SmartFilterBar<\/code> is initialized (<code>initialise<\/code> event was fired) has no effect.","!category":"enum","!type":"String"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.","!category":"enum","!type":"sap.ui.core.TextAlign"},"hasTypeAhead":{"!description":"Property can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for DropDownListbox","!category":"enum","!type":"Boolean"},"showClearButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement. Users can select any Variant instead.<br>Handles visibility of the Clear button on the Filters dialog.","!category":"enum","!type":"Boolean"},"filterContainerWidth":{"!description":"Sets the width of the filters container.","!category":"enum","!type":"String"},"considerSelectionVariants":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Please use the <code>com.sap.vocabularies.UI.v1.SelectionPresentationVariant<\/code> annotation through the {@link sap.ui.comp.smartvariants.SmartVariantManagement#setEntitySet}<br>Indicates if the annotation <code>com.sap.vocabularies.UI.v1.SelectionVariant<\/code> is taken into account.<br> <b>Note<\/b>: Only relevant for control level personalization.","!category":"enum","!type":"Boolean"},"entityTypeName":{"!description":"EntityType name to which the filter belongs","!category":"enum","!type":"String"},"GroupConfiguration":"sap.ui.comp.smartfilterbar.GroupConfiguration_obj","defaultSelectionVariantName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Please use the <code>com.sap.vocabularies.UI.v1.SelectionPresentationVariant<\/code> annotation through the {@link sap.ui.comp.smartvariants.SmartVariantManagement#setEntitySet}<br>Determines one specific variant that is based on the <code>com.sap.vocabularies.UI.v1.SelectionVariant<\/code> annotation, which is then used as the default variant.<br> This property is only relevant in case <code>considerSelectionVariants<\/code> is set to <code>true<\/code> and will only be applied if there is no user-defined default variant specified.<br> <b>Note<\/b>: Only relevant for control level personalization.","!category":"enum","!type":"String"},"considerGroupTitle":{"!description":"If this property is set, then the label for filters will be prefixed with the group title.","!category":"enum","!type":"Boolean"},"hasValueHelpDialog":{"!description":"Specifies whether a value help dialog is available or not.","!category":"enum","!type":"Boolean"},"name":{"!description":"Name of the filter. This is an identifier for the filter and has to be unique.","!category":"enum","!type":"String"},"header":{"!description":"Specifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.","!category":"enum","!type":"String"},"filterType":{"!description":"The filter type specifies whether the filter field is of type single value, multi-value, or interval. The filter type is calculated by the {@link sap.ui.comp.smartfilterbar.SmartFilterBar} control based on the OData metadata. Using this property the filter type can be configured manually.","!category":"enum","!type":"sap.ui.comp.smartfilterbar.FilterType"},"showGoButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>showGoOnFB<\/code><br>Handles visibility of the Go button on the FilterBar.","!category":"enum","!type":"Boolean"},"filterBarExpanded":{"!description":"Shows the filters area. When property <code>useToolbar<\/code> is set to <code>false<\/code>, <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b> When <code>SmartFilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>, it is initially collapsed. The filter bar is initially expanded in the following cases:\n\n- When there is no basic search field.\n\n- When <code>preventInitialDataFetchInValueHelpDialog<\/code> is set to <code>true<\/code> or the <code>fetchValues<\/code> property of the <code>valueList<\/code> annotation is set to <code>2<\/code>.\n\n- When there are mandatory fields, all fields are expanded (not only the first 7).","!category":"enum","!type":"Boolean"},"useProvidedNavigationProperties":{"!description":"If set to <code>true<\/code>, only the navigation properties mentioned in property {@link sap.ui.comp.smartfilterbar.SmartFilterBar#getNavigationProperties} are checked for further filters.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"If set to <code>true<\/code>, any errors that occur during the search, are displayed in a message box in addition to the <code>valueState<\/code> with the error. <b>Note:<\/b> As of version 1.89, the default value has been changed from <code>true<\/code> to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"timezone":{"!description":"Sets time zone for filter of type Edm.DateTimeOffset\n\n<b>Note:<\/b> The property is IANA timezone ID, e.g. \"America/New_York\". An invalid IANA timezone ID will fall back to the UTC.","!category":"enum","!type":"String"},"isRunningInValueHelpDialog":{"!description":"Sets whether the filter bar should look like the filters area in a ValueHelpDialog. True for SmartFilterBar when used in a ValueHelpDialog. False otherwise.","!category":"enum","!type":"Boolean"},"controlTooltip":{"!description":"Tooltip for the filter'c control.","!category":"enum","!type":"String"},"groupTitle":{"!description":"Title of the group.","!category":"enum","!type":"String"},"!category":"namespace","partOfCurrentVariant":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.87 Will be internally treated as if always set to <code>true<code><br>Determines if a filter is part of the currently selected variant. <br> <b>Note:<\/b> This property can also be changed using the <code>visibleInFilterBar<\/code> property and by user interaction in the Select Filters dialog or the variant handling.","!category":"enum","!type":"Boolean"},"hasValidation":{"!description":"Specifies whether <code>sap.m.ComboBox<\/code> selectedKey has corresponding item or not.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"Defines the text directionality of the input field, e.g. <code>RTL<\/code>, <code>LTR<\/code>","!category":"enum","!type":"sap.ui.core.TextDirection"},"advancedMode":{"!description":"The advanced mode is only relevant for the value help scenario. UI representation is different from the standard FilterBar.","!category":"enum","!type":"Boolean"},"liveMode":{"!description":"If set the search will be automatically triggered, when a filter value was set via the <B>change<\/B> event.<br> <b>Note:<\/b> The liveMode only operates on non-mobile scenarios.<br> Additionally, if liveMode is set, the following applies: <ul> <li>The error messagebox is not displayed, and the <code>showMessages<\/code> property is ignored.<\/li> <li>The search is triggered after a variant has been selected.<\/li> <li>Execute on Select for <code>VariantManagement<\/code> is not shown and not taken into account<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"SelectOption":"sap.ui.comp.smartfilterbar.SelectOption_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"SmartFilterBar":"sap.ui.comp.smartfilterbar.SmartFilterBar_obj","placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value.","!category":"enum","!type":"String"},"useDateRangeType":{"!description":"If set to <code>true<\/code> all date fields with filter restriction <code>interval<\/code> will be treated as <code>DateTimeRange<\/code> filters. The <code>useDateRangeType<\/code> can be set only once during initialization. <b>Note:<\/b> If this property is set to <code>true<\/code> and any date filters with filter restriction <code>interval<\/code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false<\/code>, any previously stored filters which were treated as type <code>DateTimeRange<\/code> based on the former setting, cannot be converted back to the standard date interval.","!category":"enum","!type":"Boolean"},"value":{"!description":"Defines the value of the control.","!category":"enum","!type":"String"},"editable":{"!description":"Defines whether the control can be modified by the user or not. <b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.","!category":"enum","!type":"Boolean"},"ControlConfiguration":"sap.ui.comp.smartfilterbar.ControlConfiguration_obj","SFBMultiComboBox":"sap.ui.comp.smartfilterbar.SFBMultiComboBox_obj","showClearIcon":{"!description":"Specifies whether clear icon is shown. Pressing the icon will clear input's value.","!category":"enum","!type":"Boolean"},"hasSelection":{"!description":"Defines if there are selected items or not.","!category":"enum","!type":"Boolean"},"label":{"!description":"Label of the filter.","!category":"enum","!type":"String"},"resourceUri":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 Set an ODataModel as the main model on your control/view instead<br>Optional. The OData service URL. If it is not specified, the service URL from the OData model (this.getModel()) will be used. <b>Note:<\/b> Changing this value after the SmartFilterBar is initialized (initialise event was fired) has no effect.","!category":"enum","!type":"String"},"showValueStateMessage":{"!description":"Indicates whether the value state message should be shown or not.","!category":"enum","!type":"Boolean"},"controlType":{"!description":"The SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and annotations. Using this property it is possible to overwrite the OData metadata.","!category":"enum","!type":"sap.ui.comp.smartfilterbar.ControlType"},"showSelectAll":{"!description":"Determines if the select all checkbox is visible on top of suggestions.","!category":"enum","!type":"Boolean"},"considerAnalyticalParameters":{"!description":"Indicates if the analytical parameters (SelectionVariant) must be taken into consideration.","!category":"enum","!type":"Boolean"},"searchEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Enables/disables the Search button.","!category":"enum","!type":"Boolean"}},"sap.ui.comp.smartfilterbar.ControlConfiguration":{"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar.","!static":false,"!category":"function","!type":"fn() -> String"},"setGroupId":{"!description":"Sets a new value for property {@link #getGroupId groupId}.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData metadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupId?: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sGroupId":"type: string, description: New value for property <code>groupId<\/code>"}},"getIndex":{"!description":"Gets current value of property {@link #getIndex index}.\n\nThe index property specifies the initial order of fields without any variants. It's zero based so in order for it to be taken into account, its value must be equal to or bigger than 0. <b>Note:<\/b> To ensure the expected sorting behavior, the index property should have a unique value.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setFilterType":{"!description":"Sets a new value for property {@link #getFilterType filterType}.\n\nThe filter type specifies whether the filter field is of type single value, multi-value, or interval. The filter type is calculated by the {@link sap.ui.comp.smartfilterbar.SmartFilterBar} control based on the OData metadata. Using this property the filter type can be configured manually.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterType?: sap.ui.comp.smartfilterbar.FilterType) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sFilterType":"type: sap.ui.comp.smartfilterbar.FilterType, description: New value for property <code>filterType<\/code>"}},"destroyCustomControl":{"!description":"Destroys the customControl in the aggregation {@link #getCustomControl customControl}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.ControlConfiguration"},"setControlType":{"!description":"Sets a new value for property {@link #getControlType controlType}.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and annotations. Using this property it is possible to overwrite the OData metadata.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn(sControlType?: sap.ui.comp.smartfilterbar.ControlType) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sControlType":"type: sap.ui.comp.smartfilterbar.ControlType, description: New value for property <code>controlType<\/code>"}},"getGroupId":{"!description":"Gets current value of property {@link #getGroupId groupId}.\n\nThe groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData metadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.","!static":false,"!category":"function","!type":"fn() -> String"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getControlType":{"!description":"Gets current value of property {@link #getControlType controlType}.\n\nThe SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and annotations. Using this property it is possible to overwrite the OData metadata.\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.ControlType"},"getDefaultFilterValues":{"!description":"Gets content of aggregation {@link #getDefaultFilterValues defaultFilterValues}.\n\nDefault value for a filter field. The aggregation expects {@link sap.ui.comp.smartfilterbar.SelectOption|SelectOption} instances, where the values' format (properties <code>low<\/code> and <code>high<\/code>) match the type of the referneced property and consider also the given constraints of the property.\n\nSamples for valid formats: <code>Edm.DateTime<\/code> with constraint <code>sap:display-format='Date'<\/code>: \"2018-12-24\" (you optionally can provide a time-part and timezone, too, (2018-12-24T00:00:00Z) but this is ignored)\n\n<code>Edm.DateTimeOffset<\/code>: \"2018-12-24T13:55:59Z\"\n\n<code>Edm.Time<\/code>: \"PT12H34M56S\"\n\n<code>Edm.Boolean<\/code>: \"false\"\n\n<code>Edm.Decimal<\/code>: \"2983.12\"","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.SelectOption]"},"!description":"ControlConfiguration can be used to add additional configuration for filter fields in the SmartFilterBar control, in order to overwrite the default settings from the OData metadata. For instance, it is possible to change the label, index or control type of a filter field.","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMandatory":{"!description":"Gets current value of property {@link #getMandatory mandatory}.\n\nProperty can be used to overwrite the mandatory state of a filter field. Property can only be set during initialization. Changes at runtime will be ignored.\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.MandatoryType"},"getHasValidation":{"!description":"Gets current value of property {@link #getHasValidation hasValidation}.\n\nSpecifies whether <code>sap.m.ComboBox<\/code> selectedKey has corresponding item or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.ControlConfiguration.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nUsing this flag it is possible to hide fields from the OData metadata.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfDefaultFilterValue":{"!description":"Checks for the provided <code>sap.ui.comp.smartfilterbar.SelectOption<\/code> in the aggregation {@link #getDefaultFilterValues defaultFilterValues}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDefaultFilterValue: sap.ui.comp.smartfilterbar.SelectOption) -> Number","parameters":{"oDefaultFilterValue":"type: sap.ui.comp.smartfilterbar.SelectOption, description: The defaultFilterValue whose index is looked for"}},"setTimezone":{"!description":"Sets a new value for property {@link #getTimezone timezone}.\n\nSets time zone for filter of type Edm.DateTimeOffset\n\n<b>Note:<\/b> The property is IANA timezone ID, e.g. \"America/New_York\". An invalid IANA timezone ID will fall back to the UTC.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTimezone?: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sTimezone":"type: string, description: New value for property <code>timezone<\/code>"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code> itself.\n\nFired when the value of a property, for example isVisible, has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartfilterbar.ControlConfiguration<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeDefaultFilterValue":{"!description":"Removes a defaultFilterValue from the aggregation {@link #getDefaultFilterValues defaultFilterValues}.","!static":false,"!category":"function","!type":"fn(vDefaultFilterValue: Number | String | sap.ui.comp.smartfilterbar.SelectOption) -> sap.ui.comp.smartfilterbar.SelectOption | null","parameters":{"vDefaultFilterValue":"type: int|string|sap.ui.comp.smartfilterbar.SelectOption, description: The defaultFilterValue to remove or its index or id"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.ControlConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.config.ControlConfigurationBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setConditionPanelDefaultOperation":{"!description":"Sets a new value for property {@link #getConditionPanelDefaultOperation conditionPanelDefaultOperation}.\n\nSets default operation for Condition Panel of the Value Help dialog. In case the newly set default operation is not valid for the filter's EDM data type, then it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sConditionPanelDefaultOperation?: sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sConditionPanelDefaultOperation":"type: sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation, description: New value for property <code>conditionPanelDefaultOperation<\/code>"}},"!module":"sap/ui/comp/smartfilterbar/ControlConfiguration","!helpDescription":"ControlConfiguration can be used to add additional configuration for filter fields in the SmartFilterBar control, in order to overwrite the default settings from the OData metadata. For instance, it is possible to change the label, index or control type of a filter field.","setIndex":{"!description":"Sets a new value for property {@link #getIndex index}.\n\nThe index property specifies the initial order of fields without any variants. It's zero based so in order for it to be taken into account, its value must be equal to or bigger than 0. <b>Note:<\/b> To ensure the expected sorting behavior, the index property should have a unique value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iIndex?: Number) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"iIndex":"type: int, description: New value for property <code>index<\/code>"}},"setHasValueHelpDialog":{"!description":"Sets a new value for property {@link #getHasValueHelpDialog hasValueHelpDialog}.\n\nSpecifies whether a value help dialog is available or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHasValueHelpDialog?: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bHasValueHelpDialog":"type: boolean, description: New value for property <code>hasValueHelpDialog<\/code>"}},"destroyDefaultFilterValues":{"!description":"Destroys all the defaultFilterValues in the aggregation {@link #getDefaultFilterValues defaultFilterValues}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.ControlConfiguration"},"setMandatory":{"!description":"Sets a new value for property {@link #getMandatory mandatory}.\n\nProperty can be used to overwrite the mandatory state of a filter field. Property can only be set during initialization. Changes at runtime will be ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn(sMandatory?: sap.ui.comp.smartfilterbar.MandatoryType) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sMandatory":"type: sap.ui.comp.smartfilterbar.MandatoryType, description: New value for property <code>mandatory<\/code>"}},"setHasValidation":{"!description":"Sets a new value for property {@link #getHasValidation hasValidation}.\n\nSpecifies whether <code>sap.m.ComboBox<\/code> selectedKey has corresponding item or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHasValidation?: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bHasValidation":"type: boolean, description: New value for property <code>hasValidation<\/code>"}},"getConditionPanelDefaultOperation":{"!description":"Gets current value of property {@link #getConditionPanelDefaultOperation conditionPanelDefaultOperation}.\n\nSets default operation for Condition Panel of the Value Help dialog. In case the newly set default operation is not valid for the filter's EDM data type, then it is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation"},"!proto":"sap.ui.comp.config.ControlConfigurationBase","removeAllDefaultFilterValues":{"!description":"Removes all the controls from the aggregation {@link #getDefaultFilterValues defaultFilterValues}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartfilterbar.SelectOption]"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialization. Changes at runtime will not be reflected. The width will not be applied to custom controls.","!static":false,"!category":"function","!type":"fn() -> String"},"getCustomControl":{"!description":"Gets content of aggregation {@link #getCustomControl customControl}.\n\nIf a custom control is specified, the SmartFilterBar will not create a control but use the custom control. Additional services like TypeAhead have to implemented manually.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setVisibleInAdvancedArea":{"!description":"Sets a new value for property {@link #getVisibleInAdvancedArea visibleInAdvancedArea}.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleInAdvancedArea?: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bVisibleInAdvancedArea":"type: boolean, description: New value for property <code>visibleInAdvancedArea<\/code>"}},"setDisplayBehaviour":{"!description":"Sets a new value for property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown text) , Description and ID for MultiInput (token text)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayBehaviour?: sap.ui.comp.smartfilterbar.DisplayBehaviour) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sDisplayBehaviour":"type: sap.ui.comp.smartfilterbar.DisplayBehaviour, description: New value for property <code>displayBehaviour<\/code>"}},"!constructorDescription":"Constructor for a new smartfilterbar/ControlConfiguration.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupId groupId} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getHasValueHelpDialog hasValueHelpDialog} : boolean (default: true)<\/li>\n<li>{@link #getHasValidation hasValidation} : boolean (default: true)<\/li>\n<li>{@link #getControlType controlType} : sap.ui.comp.smartfilterbar.ControlType (default: 'auto')<\/li>\n<li>{@link #getFilterType filterType} : sap.ui.comp.smartfilterbar.FilterType (default: 'auto')<\/li>\n<li>{@link #getIndex index} : int (default: -1)<\/li>\n<li>{@link #getHasTypeAhead hasTypeAhead} : boolean (default: true)<\/li>\n<li>{@link #getMandatory mandatory} : sap.ui.comp.smartfilterbar.MandatoryType (default: 'auto')<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getVisibleInAdvancedArea visibleInAdvancedArea} : boolean (default: false)<\/li>\n<li>{@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog} : boolean (default: false)<\/li>\n<li>{@link #getDisplayBehaviour displayBehaviour} : sap.ui.comp.smartfilterbar.DisplayBehaviour (default: 'auto')<\/li>\n<li>{@link #getHistoryEnabled historyEnabled} : boolean (default: true)<\/li>\n<li>{@link #getConditionPanelDefaultOperation conditionPanelDefaultOperation} : sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation<\/li>\n<li>{@link #getTimezone timezone} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDefaultFilterValues defaultFilterValues} : sap.ui.comp.smartfilterbar.SelectOption[]<\/li>\n<li>{@link #getCustomControl customControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.config.ControlConfigurationBase#constructor sap.ui.comp.config.ControlConfigurationBase}\ncan be used as well.","setHistoryEnabled":{"!description":"Sets a new value for property {@link #getHistoryEnabled historyEnabled}.\n\nIf set to <code>false<\/code> history values are disabled.\n\n<b>Note:<\/b> For {@link sap.m.ComboBox} and {@link sap.m.MultiComboBox} the history values are disabled by default. To enable them for these controls, you need to set the <code>historyEnabled<\/code> property to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHistoryEnabled?: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bHistoryEnabled":"type: boolean, description: New value for property <code>historyEnabled<\/code>"}},"insertDefaultFilterValue":{"!description":"Inserts a defaultFilterValue into the aggregation {@link #getDefaultFilterValues defaultFilterValues}.","!static":false,"!category":"function","!type":"fn(oDefaultFilterValue: sap.ui.comp.smartfilterbar.SelectOption, iIndex: Number) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oDefaultFilterValue":"type: sap.ui.comp.smartfilterbar.SelectOption, description: The defaultFilterValue to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the defaultFilterValue should be inserted at; for a negative value of <code>iIndex<\/code>, the defaultFilterValue is inserted at position 0; for a value greater than the current size of the aggregation, the defaultFilterValue is inserted at the last position"}},"getHasTypeAhead":{"!description":"Gets current value of property {@link #getHasTypeAhead hasTypeAhead}.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for DropDownListbox\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDisplayBehaviour":{"!description":"Gets current value of property {@link #getDisplayBehaviour displayBehaviour}.\n\nThe displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown text) , Description and ID for MultiInput (token text)\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.DisplayBehaviour"},"getHasValueHelpDialog":{"!description":"Gets current value of property {@link #getHasValueHelpDialog hasValueHelpDialog}.\n\nSpecifies whether a value help dialog is available or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addDefaultFilterValue":{"!description":"Adds some defaultFilterValue to the aggregation {@link #getDefaultFilterValues defaultFilterValues}.","!static":false,"!category":"function","!type":"fn(oDefaultFilterValue: sap.ui.comp.smartfilterbar.SelectOption) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oDefaultFilterValue":"type: sap.ui.comp.smartfilterbar.SelectOption, description: The defaultFilterValue to add; if empty, nothing is inserted"}},"getHistoryEnabled":{"!description":"Gets current value of property {@link #getHistoryEnabled historyEnabled}.\n\nIf set to <code>false<\/code> history values are disabled.\n\n<b>Note:<\/b> For {@link sap.m.ComboBox} and {@link sap.m.MultiComboBox} the history values are disabled by default. To enable them for these controls, you need to set the <code>historyEnabled<\/code> property to <code>true<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFilterType":{"!description":"Gets current value of property {@link #getFilterType filterType}.\n\nThe filter type specifies whether the filter field is of type single value, multi-value, or interval. The filter type is calculated by the {@link sap.ui.comp.smartfilterbar.SmartFilterBar} control based on the OData metadata. Using this property the filter type can be configured manually.\n\nDefault value is <code>'auto'<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfilterbar.FilterType"},"getVisibleInAdvancedArea":{"!description":"Gets current value of property {@link #getVisibleInAdvancedArea visibleInAdvancedArea}.\n\nIf set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHasTypeAhead":{"!description":"Sets a new value for property {@link #getHasTypeAhead hasTypeAhead}.\n\nProperty can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for DropDownListbox\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHasTypeAhead?: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bHasTypeAhead":"type: boolean, description: New value for property <code>hasTypeAhead<\/code>"}},"setPreventInitialDataFetchInValueHelpDialog":{"!description":"Sets a new value for property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>false<\/code>, which means the table will be filled as the data fetch is not prevented. <b>Note:<\/b> As of version 1.78 the default value has been changed from <code>true<\/code> to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreventInitialDataFetchInValueHelpDialog?: Boolean) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"bPreventInitialDataFetchInValueHelpDialog":"type: boolean, description: New value for property <code>preventInitialDataFetchInValueHelpDialog<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the filter field in a CSS compatible format. The width can be set only once during initialization. Changes at runtime will not be reflected. The width will not be applied to custom controls.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sWidth":"type: string, description: New value for property <code>width<\/code>"}},"getPreventInitialDataFetchInValueHelpDialog":{"!description":"Gets current value of property {@link #getPreventInitialDataFetchInValueHelpDialog preventInitialDataFetchInValueHelpDialog}.\n\nIn case there are value help annotations for this filter field, it is possible to specify whether the table in the value help dialog for this field will be filled initially. The default value is <code>false<\/code>, which means the table will be filled as the data fetch is not prevented. <b>Note:<\/b> As of version 1.78 the default value has been changed from <code>true<\/code> to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTimezone":{"!description":"Gets current value of property {@link #getTimezone timezone}.\n\nSets time zone for filter of type Edm.DateTimeOffset\n\n<b>Note:<\/b> The property is IANA timezone ID, e.g. \"America/New_York\". An invalid IANA timezone ID will fall back to the UTC.","!static":false,"!category":"function","!type":"fn() -> String"},"setCustomControl":{"!description":"Sets the aggregated {@link #getCustomControl customControl}.","!static":false,"!category":"function","!type":"fn(oCustomControl: sap.ui.core.Control) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"oCustomControl":"type: sap.ui.core.Control, description: The customControl to set"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nUsing this property it is possible to overwrite the label of a filter field in the SmartFilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.comp.smartfilterbar.ControlConfiguration","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.ui.comp.smartmultiedit.Container_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmultiedit.Container with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmultiedit.Container"},"sap.ui.comp.personalization.ColumnType":{"!description":"Provides enumeration sap.ui.comp.personalization.ColumnType. A subset of column types that fit for table personalization.","!module":"sap/ui/comp/library","ResponsiveColumn":{"!description":"Represents <code>sap.m.Column<\/code>.","!category":"enum","!type":"String"},"ColumnWrapper":{"!description":"Represents <code>sap.ui.comp.personalization.ColumnWrapper<\/code>.","!category":"enum","!type":"String"},"!category":"static class","TableColumn":{"!description":"Represents <code>sap.ui.table.Column<\/code>.","!category":"enum","!type":"String"}},"sap.ui.comp.smartvariants.SmartVariantManagementUi2_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementUi2 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartvariants.SmartVariantManagementUi2"},"sap.ui.comp.smartfield.Configuration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.Configuration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.Configuration"},"sap.ui.comp.smartmultiedit.Field":{"getLabel":{"!description":"Returns the label associated with this field.","!static":false,"!category":"function","!type":"fn() -> sap.m.Label | sap.ui.comp.smartfield.SmartLabel"},"getRecordTextPath":{"!description":"Returns the path to the text property used by the combo box.","!static":false,"!category":"function","!type":"fn() -> String | null"},"getDataType":{"!description":"Returns the data type used by the smart field. This data type is determined from metadata.","!static":false,"!category":"function","!type":"fn() -> String"},"getUnitOfMeasure":{"!description":"Returns the unit of measurement for the underlying smart field.","!static":false,"!category":"function","!type":"fn() -> String"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.comp.smartmultiedit.Field<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiedit.Field","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isBlankSelected":{"!description":"Checks if the 'Leave blank' item is selected.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isInteger":{"!description":"Checks if the data type of the smart field is some kind of a integer number.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getApplyToEmptyOnly":{"!description":"Gets current value of property {@link #getApplyToEmptyOnly applyToEmptyOnly}.\n\nIndicates whether to check for an existing value in the data model before applying the changes.<br> Please note that this property does not automatically update the model. It is up to you as the app developer to decide whether you want to consider this property when updating the model or not.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseApplyToEmptyOnly":{"!description":"Gets current value of property {@link #getUseApplyToEmptyOnly useApplyToEmptyOnly}.\n\nIndicates whether to display applyToEmptyOnly flag.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValidateTokenExistence":{"!description":"Gets current value of property {@link #getValidateTokenExistence validateTokenExistence}.\n\nDefines whether the existence of the selected token should be validated. <br>If you set this property to <code>true<\/code>, you should use the {@link sap.ui.comp.smartmultiedit.Container#getErroneousFieldsAndTokens} method, as the validation becomes asynchronous.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setApplyToEmptyOnly":{"!description":"Sets a new value for property {@link #getApplyToEmptyOnly applyToEmptyOnly}.\n\nIndicates whether to check for an existing value in the data model before applying the changes.<br> Please note that this property does not automatically update the model. It is up to you as the app developer to decide whether you want to consider this property when updating the model or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bApplyToEmptyOnly?: Boolean) -> sap.ui.comp.smartmultiedit.Field","parameters":{"bApplyToEmptyOnly":"type: boolean, description: New value for property <code>applyToEmptyOnly<\/code>"}},"getPropertyName":{"!description":"Gets current value of property {@link #getPropertyName propertyName}.\n\nThe OData property name to fetch metadata for.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in a new binding.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelectedItem":{"!description":"Returns the item that was selected using the Select action.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"getSmartField":{"!description":"Returns the smart field that is used for selecting a new value.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.SmartField"},"isComboBox":{"!description":"Checks if the field uses a combo box. This check doesn't rely on data type but rather a certain combination of annotations.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The SmartMultiEdit.Field control enables you to edit multiple homogeneous objects simultaneously. It allows you to select a predefined item from a combo box and apply your selection to all objects being edited.<br> In addition, SmartMultiEdit.Field can handle metadata for a specific OData property when you need to enable mass editing for multiple contexts. The contexts are handled by the {@link sap.ui.comp.smartmultiedit.Container} control.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmultiedit.Field.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setUseApplyToEmptyOnly":{"!description":"Sets a new value for property {@link #getUseApplyToEmptyOnly useApplyToEmptyOnly}.\n\nIndicates whether to display applyToEmptyOnly flag.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseApplyToEmptyOnly?: Boolean) -> sap.ui.comp.smartmultiedit.Field","parameters":{"bUseApplyToEmptyOnly":"type: boolean, description: New value for property <code>useApplyToEmptyOnly<\/code>"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.comp.smartmultiedit.Field<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiedit.Field<\/code> itself.\n\nThis event is fired when the selection focus moves from one item in the combo box to another.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiedit.Field","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiedit.Field<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyConfiguration":{"!description":"Destroys the configuration in the aggregation {@link #getConfiguration configuration}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartmultiedit.Field"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartmultiedit.Field","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"hasClientError":{"!description":"Returns true if there is a client error present, false otherwise.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmultiedit.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"isComposite":{"!description":"Checks if the data type of the smart field is unit of measurement (UOM).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPropertyName":{"!description":"Sets the name of the property to bind to.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.comp.smartmultiedit.Field","parameters":{"sName":"type: string, description: Name of the property to bind to."}},"setValidateTokenExistence":{"!description":"Sets a new value for property {@link #getValidateTokenExistence validateTokenExistence}.\n\nDefines whether the existence of the selected token should be validated. <br>If you set this property to <code>true<\/code>, you should use the {@link sap.ui.comp.smartmultiedit.Container#getErroneousFieldsAndTokens} method, as the validation becomes asynchronous.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValidateTokenExistence?: Boolean) -> sap.ui.comp.smartmultiedit.Field","parameters":{"bValidateTokenExistence":"type: boolean, description: New value for property <code>validateTokenExistence<\/code>"}},"!module":"sap/ui/comp/smartmultiedit/Field","!helpDescription":"The SmartMultiEdit.Field control enables you to edit multiple homogeneous objects simultaneously. It allows you to select a predefined item from a combo box and apply your selection to all objects being edited.<br> In addition, SmartMultiEdit.Field can handle metadata for a specific OData property when you need to enable mass editing for multiple contexts. The contexts are handled by the {@link sap.ui.comp.smartmultiedit.Container} control.","isTime":{"!description":"Checks if the data type of the smart field is time.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getRawValue":{"!description":"Returns the raw value for the OData property that is determined by the <code>propertyName<\/code> property. If the 'Keep existing value' item is selected, an empty plain object is returned.","!static":false,"!category":"function","!type":"fn() -> {name:string,value:(boolean | Number | string)}"},"!category":"class","setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nOptional description of the field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription?: String) -> sap.ui.comp.smartmultiedit.Field","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nOptional description of the field.","!static":false,"!category":"function","!type":"fn() -> String"},"isBoolean":{"!description":"Checks if the data type of the smart field is boolean.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>sap.ui.comp.smartmultiedit.Field<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPropertyName propertyName} : string<\/li>\n<li>{@link #getUseApplyToEmptyOnly useApplyToEmptyOnly} : boolean (default: false)<\/li>\n<li>{@link #getApplyToEmptyOnly applyToEmptyOnly} : boolean (default: false)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getValidateTokenExistence validateTokenExistence} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getConfiguration configuration} : sap.ui.comp.smartfield.Configuration<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getConfiguration":{"!description":"Gets content of aggregation {@link #getConfiguration configuration}.\n\nOptional configuration for <code>SmartField<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartfield.Configuration"},"isDate":{"!description":"Checks if the data type of the smart field is date.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isString":{"!description":"Checks if the data type of the smart field is string.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setConfiguration":{"!description":"Sets the optional configuration aggregation.","!static":false,"!category":"function","!type":"fn(oConfig: sap.ui.comp.smartfield.Configuration) -> sap.ui.comp.smartmultiedit.Field","parameters":{"oConfig":"type: sap.ui.comp.smartfield.Configuration, description: Optional configuration to set."}},"getUnitOfMeasurePropertyName":{"!description":"Returns the name of the property used for the unit of measurement.","!static":false,"!category":"function","!type":"fn() -> String | null"},"isValueHelpSelected":{"!description":"Checks if the 'Use Value Help' item is selected.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowValueHelp":{"!description":"Checks if a {@link sap.ui.comp.smartfield.SmartField} is present, which provides a way to define an explicit value for the field.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isKeepExistingSelected":{"!description":"Checks if the 'Keep existing value' item is selected.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getNullable":{"!description":"Checks if the data type of the smart multi edit field is nullable as defined by its metadata.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isFloat":{"!description":"Checks if the data type of the smart field is some kind of a float number.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Returns the current <b>formatted<\/b> value of the smart field. To get the raw value, use <code>getRawValue<\/code> instead.","!static":false,"!category":"function","!type":"fn() -> *"},"setSelectedItem":{"!description":"Sets the item to be treated as selected in the <code>sap.m.Select<\/code> instance.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item | null) -> sap.ui.comp.smartmultiedit.Field","parameters":{"oItem":"type: sap.ui.core.Item|null, description: An {@link sap.ui.core.Item} instance or <code>null<\/code>."}},"isDateTime":{"!description":"Checks if the data type of the smart field is date with time.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSelectedIndex":{"!description":"Sets the item to be selected in the <code>sap.m.Select<\/code> instance, using its index.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ui.comp.smartmultiedit.Field","parameters":{"iIndex":"type: number, description: An index of the item inside the Select action."}}},"sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart"},"sap.ui.comp.filterbar.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.filterbar.FilterBar"},"sap.ui.comp.smartchart.SelectionMode":{"!description":"Enumeration for supported selection mode in SmartChart","!module":"sap/ui/comp/library","Single":{"!description":"Single selection mode, only one set of data points can be selected at once.","!category":"enum","!type":"String"},"!category":"static class","Multi":{"!description":"Multi selection mode, multiple sets of data points can be selected at once.","!category":"enum","!type":"String"},"None":{"!description":"None selection mode, no data points can be selected.","!category":"enum","!type":"String"}},"sap.ui.comp.navpopover.SmartLink":{"getCreateControlCallback":{"!description":"Gets current value of property {@link #getCreateControlCallback createControlCallback}.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are available. The function has no parameters and has to return an instance of sap.ui.core.Control.","!static":false,"!category":"function","!type":"fn() -> fn()"},"getExtraContent":{"!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Fires event {@link #event:navigationTargetsObtained navigationTargetsObtained} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMapFieldToSemanticObject":{"!description":"Gets current value of property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false<\/code>, the SmartLink control will not replace its field name with the according <code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several SmartLink controls on the same semantic object.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMainNavigation":{"!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.LinkData"},"setInnerControl":{"!description":"Sets the aggregated {@link #getInnerControl innerControl}.","!static":false,"!category":"function","!type":"fn(oInnerControl: sap.ui.core.Control) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oInnerControl":"type: sap.ui.core.Control, description: The innerControl to set"}},"_updateEnabled":{"!static":false,"!category":"function","!type":"fn() -> Object"},"getSemanticObject":{"!description":"Gets current value of property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to fill the navigation popover. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so the effect can be delayed.","!static":false,"!category":"function","!type":"fn() -> String"},"setContactAnnotationPath":{"!description":"Sets a new value for property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'<\/code>. An empty string means that the related entity type is the current one.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sContactAnnotationPath?: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sContactAnnotationPath":"type: string, description: New value for property <code>contactAnnotationPath<\/code>"}},"getNavigationPopoverHandler":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 The SmartLink does not use the NavigationPopoverHandler anymore due to deprecation.<br>Gets the composition NavigationPopoverHandler","!static":false,"!category":"function","!type":"fn()"},"getNavigationTargetsObtainedCallback":{"!description":"Gets current value of property {@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback}.\n\nFunction that is called when the navigation targets provided by the SAP Fiori launchpad are obtained. The function is called with one <code>oNavigationTargets<\/code> parameter of type {@link sap.ui.comp.navpopover.NavigationTargets}. This function has to return a <code>Promise<\/code> resolving into an <code>Object<\/code> of type {@link sap.ui.comp.navpopover.NavigationTargets}. The provided <code>oNavigationTargets<\/code> can be manipulated in this callback before being returned to the <code>NavigationPopoverHandler<\/code>. The <code>Popover<\/code> will open after the <code>Promise<\/code> has been resolved. This function replaces the <code>navigationTargetsObtained<\/code> event. The event handling is ignored if this callback is set.","!static":false,"!category":"function","!type":"fn() -> fn()"},"detachNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setWrapping":{"!description":"Sets a new value for property {@link #getWrapping wrapping}.\n\nDetermines whether the link text is allowed to wrap when there is no sufficient space.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bWrapping?: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bWrapping":"type: boolean, description: New value for property <code>wrapping<\/code>"}},"getContactAnnotationPath":{"!description":"Gets current value of property {@link #getContactAnnotationPath contactAnnotationPath}.\n\nNavigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'<\/code>. An empty string means that the related entity type is the current one.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"_onNavigationTargetsObtained":{"!static":false,"!category":"function","!type":"fn(oParameters: Object)","parameters":{"oParameters":"type: object, description: Contains information for the <code>navigationTargetsObtained<\/code> event"}},"getAdditionalSemanticObjects":{"!description":"Gets current value of property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nSemantic object names which can be used additional to the default <code>semanticObject<\/code> property in order to get navigation targets links.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setSemanticObjectLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 Title section with <code>semanticObjectLabel<\/code> has been removed due to new UI design<br>Sets a new value for property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown label of semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObjectLabel?: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sSemanticObjectLabel":"type: string, description: New value for property <code>semanticObjectLabel<\/code>"}},"fireInnerNavigate":{"!description":"Fires event {@link #event:innerNavigate innerNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"The <code>SmartLink<\/code> control uses a semantic object to display {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further navigation steps.<br> <b>Note:<\/b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.\n\n<b>Important:<\/b> Keep in mind that <code>SmartLink<\/code>, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartLink<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartLink<\/code> only if you have control over the metadata of your application.<\/b>","setSemanticObject":{"!description":"Sets a new value for property {@link #getSemanticObject semanticObject}.\n\nName of semantic object which is used to fill the navigation popover. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so the effect can be delayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSemanticObject?: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sSemanticObject":"type: string, description: New value for property <code>semanticObject<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.SmartLink.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"_getInnerControl":{"!description":"Gets the value of the <code>innerControl<code> aggregation which is provided by the CreateControlCallback.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"_determineEnabled":{"!static":false,"!category":"function","!type":"fn()"},"_onBeforePopoverOpens":{"!static":false,"!category":"function","!type":"fn(oParameters: Object)","parameters":{"oParameters":"type: object, description: Contains information for the <code>beforePopoverOpens<\/code> event"}},"_setSemanticAttributes":{"!static":false,"!category":"function","!type":"fn(oSemanticAttributes: Object)","parameters":{"oSemanticAttributes":"type: object, description: Object containing semantic objects"}},"setBeforeNavigationCallback":{"!description":"Sets a new value for property {@link #getBeforeNavigationCallback beforeNavigationCallback}.\n\nFunction that is called before the actual navigation happens. This function has to return a promise resolving into a Boolean value for which the navigation will wait. If the Boolean value is <code>true<\/code>, the navigation will be processed. The <code>beforeNavigationCallback(oNavigationInfo)<\/code> parameter contains the following data: <ul> <li>{String} text: Text of the navigation intent<\/li> <li>{String} href: HREF of the navigation intent<\/li> <li>{String} originalId: ID of the control that fires the navigation intent<\/li> <li>{String} semanticObject: Name of the <code>SemanticObject<\/code> of the navigation intent<\/li> <li>{Object} semanticAttributes: Object containing the <code>SemanticAttributes<\/code> of the navigation intent<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnBeforeNavigationCallback: fn()) -> sap.ui.comp.navpopover.SmartLink","parameters":{"fnBeforeNavigationCallback":"type: function, description: New value for property <code>beforeNavigationCallback<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.SmartLink with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Link.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDetermines whether the link can be triggered by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setNavigationTargetsObtainedCallback":{"!description":"Sets a new value for property {@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback}.\n\nFunction that is called when the navigation targets provided by the SAP Fiori launchpad are obtained. The function is called with one <code>oNavigationTargets<\/code> parameter of type {@link sap.ui.comp.navpopover.NavigationTargets}. This function has to return a <code>Promise<\/code> resolving into an <code>Object<\/code> of type {@link sap.ui.comp.navpopover.NavigationTargets}. The provided <code>oNavigationTargets<\/code> can be manipulated in this callback before being returned to the <code>NavigationPopoverHandler<\/code>. The <code>Popover<\/code> will open after the <code>Promise<\/code> has been resolved. This function replaces the <code>navigationTargetsObtained<\/code> event. The event handling is ignored if this callback is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnNavigationTargetsObtainedCallback: fn()) -> sap.ui.comp.navpopover.SmartLink","parameters":{"fnNavigationTargetsObtainedCallback":"type: function, description: New value for property <code>navigationTargetsObtainedCallback<\/code>"}},"!module":"sap/ui/comp/navpopover/SmartLink","!helpDescription":"The <code>SmartLink<\/code> control uses a semantic object to display {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover} for further navigation steps.<br> <b>Note:<\/b> Navigation targets are determined using {@link sap.ushell.services.CrossApplicationNavigation CrossApplicationNavigation} of the unified shell service.\n\n<b>Important:<\/b> Keep in mind that <code>SmartLink<\/code>, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartLink<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartLink<\/code> only if you have control over the metadata of your application.<\/b>","getForceLinkRendering":{"!description":"Gets current value of property {@link #getForceLinkRendering forceLinkRendering}.\n\nIf set to true, the <code>SmartLink<\/code> control is rendered as a link even if <code>contactAnnotationPath<\/code> is not set and navigation targets do not exist. Setting this property to <code>true<\/code> allows the application, for example, to modify the <code>SmartLink<\/code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\n\n<b>Note:<\/b> The <code>ignoreLinkRendering<\/code> property and the <code>ignoredFields<\/code> property of the associated <code>SemanticObjectController<\/code> take precedence over <code>forceLinkRendering<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"_isRenderingInnerControl":{"!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFieldName":{"!description":"Gets current value of property {@link #getFieldName fieldName}.\n\nThe metadata field name for this SmartLink control.","!static":false,"!category":"function","!type":"fn() -> String"},"getSemanticObjectController":{"!description":"Gets current value of property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.","!static":false,"!category":"function","!type":"fn() -> Object"},"setMapFieldToSemanticObject":{"!description":"Sets a new value for property {@link #getMapFieldToSemanticObject mapFieldToSemanticObject}.\n\nIf set to <code>false<\/code>, the SmartLink control will not replace its field name with the according <code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several SmartLink controls on the same semantic object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bMapFieldToSemanticObject?: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bMapFieldToSemanticObject":"type: boolean, description: New value for property <code>mapFieldToSemanticObject<\/code>"}},"destroyInnerControl":{"!description":"Destroys the innerControl in the aggregation {@link #getInnerControl innerControl}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SmartLink"},"getFieldInfo":{"!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SmartLinkFieldInfo"},"getIgnoreLinkRendering":{"!description":"Gets current value of property {@link #getIgnoreLinkRendering ignoreLinkRendering}.\n\nIf set to <code>true<\/code>, the SmartLink control will render the <code>innerControl<\/code> or the control provided by <code>createControlCallback<\/code> instead of the actual link. This is used for example by the SemanticObjectController if this SmartLink is listed in its <code>ignoredFields<\/code> or no navigation targets were found during prefetch.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getWrapping":{"!description":"Gets current value of property {@link #getWrapping wrapping}.\n\nDetermines whether the link text is allowed to wrap when there is no sufficient space.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFieldName":{"!description":"Sets a new value for property {@link #getFieldName fieldName}.\n\nThe metadata field name for this SmartLink control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFieldName?: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sFieldName":"type: string, description: New value for property <code>fieldName<\/code>"}},"getInnerControl":{"!description":"Gets content of aggregation {@link #getInnerControl innerControl}.\n\nControl that is displayed instead of SmartLink control, if the SmartLink is disabled (for example, if no navigation targets are available). If <code>innerControl<\/code> is not provided, the SmartLink control tries to create one with property <code>createControlCallback<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachBeforePopoverOpens":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!proto":"sap.m.Link","!category":"class","getMainNavigationId":{"!static":false,"!category":"function","!type":"fn() -> String"},"attachInnerNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself.\n\nThis event is fired after a navigation link on the navigation popover has been clicked. This event is only fired, if the user left-clicks the link. Right-clicking the link and selecting 'Open in New Window' etc. in the context menu does not fire the event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSemanticObject semanticObject} : string<\/li>\n<li>{@link #getAdditionalSemanticObjects additionalSemanticObjects} : string[] (default: [])<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : any<\/li>\n<li>{@link #getFieldName fieldName} : string<\/li>\n<li>{@link #getSemanticObjectLabel semanticObjectLabel} : string<\/li>\n<li>{@link #getCreateControlCallback createControlCallback} : function<\/li>\n<li>{@link #getMapFieldToSemanticObject mapFieldToSemanticObject} : boolean (default: true)<\/li>\n<li>{@link #getContactAnnotationPath contactAnnotationPath} : string (default: undefined)<\/li>\n<li>{@link #getIgnoreLinkRendering ignoreLinkRendering} : boolean (default: false)<\/li>\n<li>{@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization} : boolean (default: true)<\/li>\n<li>{@link #getForceLinkRendering forceLinkRendering} : boolean (default: false)<\/li>\n<li>{@link #getUom uom} : string (default: undefined)<\/li>\n<li>{@link #getBeforeNavigationCallback beforeNavigationCallback} : function<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<li>{@link #getNavigationTargetsObtainedCallback navigationTargetsObtainedCallback} : function<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getInnerControl innerControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforePopoverOpens beforePopoverOpens} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigationTargetsObtained navigationTargetsObtained} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerNavigate innerNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Link#constructor sap.m.Link}\ncan be used as well.","setAdditionalSemanticObjects":{"!description":"Sets a new value for property {@link #getAdditionalSemanticObjects additionalSemanticObjects}.\n\nSemantic object names which can be used additional to the default <code>semanticObject<\/code> property in order to get navigation targets links.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalSemanticObjects?: [String]) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sAdditionalSemanticObjects":"type: string[], description: New value for property <code>additionalSemanticObjects<\/code>"}},"setUom":{"!description":"Sets a new value for property {@link #getUom uom}.\n\nAdditionally to the <code>text<\/code> property the Unit of Measure can be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sUom?: String) -> sap.ui.comp.navpopover.SmartLink","parameters":{"sUom":"type: string, description: New value for property <code>uom<\/code>"}},"getSemanticObjectLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 Title section with <code>semanticObjectLabel<\/code> has been removed due to new UI design<br>Gets current value of property {@link #getSemanticObjectLabel semanticObjectLabel}.\n\nShown label of semantic object.","!static":false,"!category":"function","!type":"fn() -> String"},"getUom":{"!description":"Gets current value of property {@link #getUom uom}.\n\nAdditionally to the <code>text<\/code> property the Unit of Measure can be displayed.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"_onLinkPressed":{"!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: Instance of the <code>Event<\/code> element for pressing the <code>Link<\/code> control"}},"setSemanticObjectController":{"!description":"Sets a new value for property {@link #getSemanticObjectController semanticObjectController}.\n\nThe semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oSemanticObjectController":"type: any, description: New value for property <code>semanticObjectController<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDetermines whether the link can be triggered by the user.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachNavigationTargetsObtained":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.126 replaced by <code>navigationTargetsObtainedCallback<\/code> property.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigationTargetsObtained navigationTargetsObtained} event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself.\n\nAfter the navigation targets are retrieved, <code>navigationTargetsObtained<\/code> is fired and provides the possibility to change the targets.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEnableAvailableActionsPersonalization":{"!description":"Sets a new value for property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAvailableActionsPersonalization?: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bEnableAvailableActionsPersonalization":"type: boolean, description: New value for property <code>enableAvailableActionsPersonalization<\/code>"}},"getInnerControlValue":{"!description":"Gets the value of the <code>innerControl<\/code> aggregate if available, otherwise the text of SmartLink control will be returned.","!static":false,"!category":"function","!type":"fn() -> Object"},"_getSemanticObjectControllerOfParent":{"!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"getBeforeNavigationCallback":{"!description":"Gets current value of property {@link #getBeforeNavigationCallback beforeNavigationCallback}.\n\nFunction that is called before the actual navigation happens. This function has to return a promise resolving into a Boolean value for which the navigation will wait. If the Boolean value is <code>true<\/code>, the navigation will be processed. The <code>beforeNavigationCallback(oNavigationInfo)<\/code> parameter contains the following data: <ul> <li>{String} text: Text of the navigation intent<\/li> <li>{String} href: HREF of the navigation intent<\/li> <li>{String} originalId: ID of the control that fires the navigation intent<\/li> <li>{String} semanticObject: Name of the <code>SemanticObject<\/code> of the navigation intent<\/li> <li>{Object} semanticAttributes: Object containing the <code>SemanticAttributes<\/code> of the navigation intent<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> fn()"},"setCreateControlCallback":{"!description":"Sets a new value for property {@link #getCreateControlCallback createControlCallback}.\n\nFunction that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are available. The function has no parameters and has to return an instance of sap.ui.core.Control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnCreateControlCallback?: fn()) -> sap.ui.comp.navpopover.SmartLink","parameters":{"fnCreateControlCallback":"type: function, description: New value for property <code>createControlCallback<\/code>"}},"fireBeforePopoverOpens":{"!description":"Fires event {@link #event:beforePopoverOpens beforePopoverOpens} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setIgnoreLinkRendering":{"!description":"Sets a new value for property {@link #getIgnoreLinkRendering ignoreLinkRendering}.\n\nIf set to <code>true<\/code>, the SmartLink control will render the <code>innerControl<\/code> or the control provided by <code>createControlCallback<\/code> instead of the actual link. This is used for example by the SemanticObjectController if this SmartLink is listed in its <code>ignoredFields<\/code> or no navigation targets were found during prefetch.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIgnoreLinkRendering?: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bIgnoreLinkRendering":"type: boolean, description: New value for property <code>ignoreLinkRendering<\/code>"}},"_getSemanticAttributes":{"!static":false,"!category":"function","!type":"fn() -> Object"},"detachInnerNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:innerNavigate innerNavigate} event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setForceLinkRendering":{"!description":"Sets a new value for property {@link #getForceLinkRendering forceLinkRendering}.\n\nIf set to true, the <code>SmartLink<\/code> control is rendered as a link even if <code>contactAnnotationPath<\/code> is not set and navigation targets do not exist. Setting this property to <code>true<\/code> allows the application, for example, to modify the <code>SmartLink<\/code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\n\n<b>Note:<\/b> The <code>ignoreLinkRendering<\/code> property and the <code>ignoredFields<\/code> property of the associated <code>SemanticObjectController<\/code> take precedence over <code>forceLinkRendering<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bForceLinkRendering?: Boolean) -> sap.ui.comp.navpopover.SmartLink","parameters":{"bForceLinkRendering":"type: boolean, description: New value for property <code>forceLinkRendering<\/code>"}},"getEnableAvailableActionsPersonalization":{"!description":"Gets current value of property {@link #getEnableAvailableActionsPersonalization enableAvailableActionsPersonalization}.\n\nDetermines whether the personalization link is shown inside the NavigationPopover control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforePopoverOpens":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforePopoverOpens beforePopoverOpens} event of this <code>sap.ui.comp.navpopover.SmartLink<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself.\n\nEvent is fired before the navigation popover opens and before navigation target links are getting retrieved. Event can be used to change the parameters used to retrieve the navigation targets. In case of SmartLink control, the <code>beforePopoverOpens<\/code> is fired after the link has been clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.navpopover.SmartLink","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.navpopover.SmartLink<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.comp.smartfield.ComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.ComboBox"},"sap.ui.comp.smartform.SmartFormValidationMode":{"!description":"Enumeration of SmartForm validation mode.","!module":"sap/ui/comp/library","Async":{"!description":"Async validation mode. This mode handles all types of <code>SmartField<\/code> controls both with sync and async validation.\n\nNote: This is the recommended validation mode.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"Standard validation mode which handles the validation only of nested <code>SmartField<\/code> with synchronous validation.","!category":"enum","!type":"String"}},"sap.ui.comp.smartfield.SmartField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.SmartField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.SmartField"},"sap.ui.comp.smartmultiinput.SmartMultiInput":{"setEnableODataSelect":{"!description":"Sets a new value for property {@link #getEnableODataSelect enableODataSelect}.\n\nEnables specific properties to be provided in the select query.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableODataSelect?: Boolean) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"bEnableODataSelect":"type: boolean, description: New value for property <code>enableODataSelect<\/code>"}},"indexOfInitialToken":{"!description":"Checks for the provided <code>sap.m.Token<\/code> in the aggregation {@link #getInitialTokens initialTokens}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oInitialToken: sap.m.Token) -> Number","parameters":{"oInitialToken":"type: sap.m.Token, description: The initialToken whose index is looked for"}},"setRequestAtLeastFields":{"!description":"Sets a new value for property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nEnables requestAtLeast properties to be added additionally when enableODataSelect is set to True. These are comma-separated value of fields that must be requested from the backend.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sRequestAtLeastFields?: String) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"sRequestAtLeastFields":"type: string, description: New value for property <code>requestAtLeastFields<\/code>"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getTokens":{"!description":"Returns tokens selected in <code>SmartMultiInput<\/code>","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"!proto":"sap.ui.comp.smartfield.SmartField","getRangeData":{"!description":"Returns an array of token values in range format.","!static":false,"!category":"function","!type":"fn() -> Array"},"setSingleTokenMode":{"!description":"Sets a new value for property {@link #getSingleTokenMode singleTokenMode}.\n\nAllows only one token to be added to the SmartMultiInput. Works only in No Data Binding Scenario.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleTokenMode?: Boolean) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"bSingleTokenMode":"type: boolean, description: New value for property <code>singleTokenMode<\/code>"}},"!category":"class","removeAllInitialTokens":{"!description":"Removes all the controls from the aggregation {@link #getInitialTokens initialTokens}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"checkClientError":{"!description":"Checks whether a client error has been detected. In addition, this method displays an error message, if it is not already displayed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSupportMultiSelect":{"!description":"Sets a new value for property {@link #getSupportMultiSelect supportMultiSelect}.\n\nEnables multiple selection in value help dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportMultiSelect?: Boolean) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"bSupportMultiSelect":"type: boolean, description: New value for property <code>supportMultiSelect<\/code>"}},"getSupportMultiSelect":{"!description":"Gets current value of property {@link #getSupportMultiSelect supportMultiSelect}.\n\nEnables multiple selection in value help dialog.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>sap.ui.comp.smartfield.SmartMultiInput<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSupportRanges supportRanges} : boolean (default: false)<\/li>\n<li>{@link #getSupportMultiSelect supportMultiSelect} : boolean (default: true)<\/li>\n<li>{@link #getEnableODataSelect enableODataSelect} : boolean (default: false)<\/li>\n<li>{@link #getRequestAtLeastFields requestAtLeastFields} : string (default: \"\")<\/li>\n<li>{@link #getTextSeparator textSeparator} : string<\/li>\n<li>{@link #getSingleTokenMode singleTokenMode} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getInitialTokens initialTokens} : sap.m.Token[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeCreate beforeCreate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRemove beforeRemove} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenUpdate tokenUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionFinish selectionFinish} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartfield.SmartField#constructor sap.ui.comp.smartfield.SmartField}\ncan be used as well.","removeInitialToken":{"!description":"Removes a initialToken from the aggregation {@link #getInitialTokens initialTokens}.","!static":false,"!category":"function","!type":"fn(vInitialToken: Number | String | sap.m.Token) -> sap.m.Token | null","parameters":{"vInitialToken":"type: int|string|sap.m.Token, description: The initialToken to remove or its index or id"}},"attachBeforeCreate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeCreate beforeCreate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself.\n\nThis event is fired before the OData model's <code>create<\/code> method is called. Provides object with parameters of the call for editing.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachBeforeCreate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeCreate beforeCreate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachTokenUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tokenUpdate tokenUpdate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSupportRanges":{"!description":"Gets current value of property {@link #getSupportRanges supportRanges}.\n\nEnables value help with conditions. Can only be used without binding context. Otherwise, has no effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTextSeparator":{"!description":"Sets a new value for property {@link #getTextSeparator textSeparator}.\n\nDenotes the separator between texts in the display mode. The default value is loaded from the component resource bundle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTextSeparator?: String) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"sTextSeparator":"type: string, description: New value for property <code>textSeparator<\/code>"}},"getRequestAtLeastFields":{"!description":"Gets current value of property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nEnables requestAtLeast properties to be added additionally when enableODataSelect is set to True. These are comma-separated value of fields that must be requested from the backend.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself.\n\nThis event is fired when item selection is changed. It is relevant only for selection changes on <code>SmartMultiInput<\/code> elements with fixed values, such as {@link sap.m.MultiComboBox}.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSelectionFinish":{"!description":"Fires event {@link #event:selectionFinish selectionFinish} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSingleTokenMode":{"!description":"Gets current value of property {@link #getSingleTokenMode singleTokenMode}.\n\nAllows only one token to be added to the SmartMultiInput. Works only in No Data Binding Scenario.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireBeforeCreate":{"!description":"Fires event {@link #event:beforeCreate beforeCreate} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"The <code>SmartMultiInput<\/code> control is a wrapper for other controls that extends the {@link sap.ui.comp.smartfield.SmartField} control and supports the same settings and annotations.<br> It interprets OData metadata to create multi-input controls, such as {@link sap.m.MultiInput} and {@link sap.m.MultiComboBox}.<br> The OData entity property that is changed or displayed in the control is derived from the control's <code>value<\/code> property. You can use the <code>SmartMultiInput<\/code> control in two ways: <ul> <li>With data binding - the <code>value<\/code> property is bound to a navigation property (1:N relationship).<\/li> <li>Without data binding - the <code>value<\/code> property is bound to an arbitrary property of the entity set that is specified in the <code>entitySet<\/code> property.<\/li> <\/ul> Both cases are shown in the example bellow as well as in the samples. Tokens selected in <code>SmartMultiInput<\/code> can be retrieved using either the {@link #getTokens} or the {@link #getValue} method.\n\n<pre>\n&lt;sap.ui.comp.smartmultiinput.SmartMultiInput value=&quot;{Categories/CategoryId}&quot;/&gt;\n&lt;sap.ui.comp.smartmultiinput.SmartMultiInput entitySet=&quot;Categories&quot; value=&quot;{CategoryId}&quot;/&gt;\n<\/pre>\n\nFor more details, see the {@link https://ui5.sap.com/#/entity/sap.ui.comp.smartmultiinput.SmartMultiInput samples}.\n\nNote: Just as the rest of the {@link sap.ui.comp} library, this control supports only OData V2 (see {@link sap.ui.model.odata.v2.ODataModel}) and default models.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmultiinput.SmartMultiInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getEnableODataSelect":{"!description":"Gets current value of property {@link #getEnableODataSelect enableODataSelect}.\n\nEnables specific properties to be provided in the select query.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRangeData":{"!description":"Sets tokens based on given objects with range data. Can only be used without a data binding. Otherwise, has no effect.","!static":false,"!category":"function","!type":"fn(vRangeData: [Object | Object])","parameters":{"vRangeData":"type: object|object[], description: object or array of objects with range data. Tokens are created based on this data and fed into the smart multi input."}},"destroyInitialTokens":{"!description":"Destroys all the initialTokens in the aggregation {@link #getInitialTokens initialTokens}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartmultiinput.SmartMultiInput"},"fireBeforeRemove":{"!description":"Fires event {@link #event:beforeRemove beforeRemove} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachBeforeRemove":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeRemove beforeRemove} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addInitialToken":{"!description":"Adds some initialToken to the aggregation {@link #getInitialTokens initialTokens}.","!static":false,"!category":"function","!type":"fn(oInitialToken: sap.m.Token) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oInitialToken":"type: sap.m.Token, description: The initialToken to add; if empty, nothing is inserted"}},"setSupportRanges":{"!description":"Sets a new value for property {@link #getSupportRanges supportRanges}.\n\nEnables value help with conditions. Can only be used without binding context. Otherwise, has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSupportRanges?: Boolean) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"bSupportRanges":"type: boolean, description: New value for property <code>supportRanges<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmultiinput.SmartMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartfield.SmartField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getFilter":{"!description":"Returns a filter that can be applied to restrict the OData query.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.Filter"},"getValue":{"!description":"Returns tokens selected in <code>SmartMultiInput<\/code>","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"!module":"sap/ui/comp/smartmultiinput/SmartMultiInput","attachBeforeRemove":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeRemove beforeRemove} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself.\n\nThis event is fired before the OData model's <code>remove<\/code> method is called. Provides object with parameters of the call in key:value format for editing.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!helpDescription":"The <code>SmartMultiInput<\/code> control is a wrapper for other controls that extends the {@link sap.ui.comp.smartfield.SmartField} control and supports the same settings and annotations.<br> It interprets OData metadata to create multi-input controls, such as {@link sap.m.MultiInput} and {@link sap.m.MultiComboBox}.<br> The OData entity property that is changed or displayed in the control is derived from the control's <code>value<\/code> property. You can use the <code>SmartMultiInput<\/code> control in two ways: <ul> <li>With data binding - the <code>value<\/code> property is bound to a navigation property (1:N relationship).<\/li> <li>Without data binding - the <code>value<\/code> property is bound to an arbitrary property of the entity set that is specified in the <code>entitySet<\/code> property.<\/li> <\/ul> Both cases are shown in the example bellow as well as in the samples. Tokens selected in <code>SmartMultiInput<\/code> can be retrieved using either the {@link #getTokens} or the {@link #getValue} method.\n\n<pre>\n&lt;sap.ui.comp.smartmultiinput.SmartMultiInput value=&quot;{Categories/CategoryId}&quot;/&gt;\n&lt;sap.ui.comp.smartmultiinput.SmartMultiInput entitySet=&quot;Categories&quot; value=&quot;{CategoryId}&quot;/&gt;\n<\/pre>\n\nFor more details, see the {@link https://ui5.sap.com/#/entity/sap.ui.comp.smartmultiinput.SmartMultiInput samples}.\n\nNote: Just as the rest of the {@link sap.ui.comp} library, this control supports only OData V2 (see {@link sap.ui.model.odata.v2.ODataModel}) and default models.","attachTokenUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tokenUpdate tokenUpdate} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself.\n\nThis event is fired when the tokens aggregation is changed due to a user action (add / remove token). This event is fired only for token changes in <code>SmartMultiInput<\/code> elements.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireTokenUpdate":{"!description":"Fires event {@link #event:tokenUpdate tokenUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getInitialTokens":{"!description":"Gets content of aggregation {@link #getInitialTokens initialTokens}.\n\nAggregation for storing the tokens. Works only in No Data Binding Scenario.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"attachSelectionFinish":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionFinish selectionFinish} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself.\n\nEvent is fired when user has finished a selection of items in a list box and list box has been closed. It is relevant only for selection finishes on <code>SmartMultiInput<\/code> elements with fixed values, such as {@link sap.m.MultiComboBox}.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelectionFinish":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionFinish selectionFinish} event of this <code>sap.ui.comp.smartmultiinput.SmartMultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"insertInitialToken":{"!description":"Inserts a initialToken into the aggregation {@link #getInitialTokens initialTokens}.","!static":false,"!category":"function","!type":"fn(oInitialToken: sap.m.Token, iIndex: Number) -> sap.ui.comp.smartmultiinput.SmartMultiInput","parameters":{"oInitialToken":"type: sap.m.Token, description: The initialToken to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the initialToken should be inserted at; for a negative value of <code>iIndex<\/code>, the initialToken is inserted at position 0; for a value greater than the current size of the aggregation, the initialToken is inserted at the last position"}}},"sap.ui.comp.smartmicrochart.SmartBulletMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartBulletMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartBulletMicroChart"},"sap.ui.comp.smartfield.CriticalityRepresentationType":{"!description":"The different options to visualize the ObjectStatus control.","!module":"sap/ui/comp/library","WithoutIcon":{"!description":"If this is selected, the sap.m.ObjectStatus control does not visualize the criticality using an icon.","!category":"enum","!type":"String"},"!category":"static class","WithIcon":{"!description":"If this is selected, the sap.m.ObjectStatus control visualizes the criticality using an icon.","!category":"enum","!type":"String"}},"sap.ui.comp.navpopover.LinkData":{"!description":"Stores display text together with a navigation target hyperlink.<br> The LinkData class is used by {@link sap.ui.comp.navpopover.SmartLink SmartLink} and {@link sap.ui.comp.navpopover.SemanticObjectController SemanticObjectController} to define the visible links on {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover}.","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nDescribes whether the link should be visible on the screen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.comp.navpopover.LinkData","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.navpopover.LinkData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDescribes whether the link should be visible on the screen.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisibleChangedByUser":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 The SmartLink now uses information stored on {@link sap.ui.mdc.link.PanelItem}<br>Sets a new value for property {@link #getVisibleChangedByUser visibleChangedByUser}.\n\nDescribes whether the visibility is changed by end user or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bVisibleChangedByUser: Boolean) -> sap.ui.comp.navpopover.LinkData","parameters":{"bVisibleChangedByUser":"type: boolean, description: New value for property <code>visibleChangedByUser<\/code>"}},"!proto":"sap.ui.mdc.link.LinkItem","setIsSuperiorAction":{"!description":"Sets a new value for property {@link #getIsSuperiorAction isSuperiorAction}.\n\nMarker for superior action.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bIsSuperiorAction: Boolean) -> sap.ui.comp.navpopover.LinkData","parameters":{"bIsSuperiorAction":"type: boolean, description: New value for property <code>isSuperiorAction<\/code>"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.comp.navpopover.LinkData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.link.LinkItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getTarget":{"!description":"Gets current value of property {@link #getTarget target}.\n\nThe standard values for the <code>target<\/code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href<\/code> property is set.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new navpopover/LinkData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getIsSuperiorAction isSuperiorAction} : boolean<\/li>\n<li>{@link #getVisibleChangedByUser visibleChangedByUser} : boolean<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.link.LinkItem#constructor sap.ui.mdc.link.LinkItem}\ncan be used as well.","!module":"sap/ui/comp/navpopover/LinkData","!helpDescription":"Stores display text together with a navigation target hyperlink.<br> The LinkData class is used by {@link sap.ui.comp.navpopover.SmartLink SmartLink} and {@link sap.ui.comp.navpopover.SemanticObjectController SemanticObjectController} to define the visible links on {@link sap.ui.comp.navpopover.NavigationPopover NavigationPopover}.","getVisibleChangedByUser":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 The SmartLink now uses information stored on {@link sap.ui.mdc.link.PanelItem}<br>Gets current value of property {@link #getVisibleChangedByUser visibleChangedByUser}.\n\nDescribes whether the visibility is changed by end user or not.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTarget":{"!description":"Sets a new value for property {@link #getTarget target}.\n\nThe standard values for the <code>target<\/code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href<\/code> property is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTarget?: String) -> sap.ui.comp.navpopover.LinkData","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"getIsSuperiorAction":{"!description":"Gets current value of property {@link #getIsSuperiorAction isSuperiorAction}.\n\nMarker for superior action.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.comp.smartmicrochart.SmartComparisonMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartComparisonMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartComparisonMicroChart"},"sap.ui.comp.variants.EditableVariantItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.variants.EditableVariantItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ColumnListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.variants.EditableVariantItem"},"sap.ui.comp.smartform.Importance":{"!description":"Enumeration of SmartForm Importance types","High":{"!description":"Shows fields that are annotated with UI.ImportanceType/High or have importance property set to High","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","Low":{"!description":"Shows all fields","!category":"enum","!type":"String"},"Medium":{"!description":"Shows fields that are annotated with <code>UI.ImportanceType/Medium<\/code> or <code>UI.ImportanceType/High<\/code> or have the <code>importance<\/code> property set to <code>medium<\/code> or <code>high<\/code>.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.comp.smartfield.ControlProposalType":{"!description":"Enumeration of the different control proposals supported by the Smart Field, if it is using an OData model.","!module":"sap/ui/comp/library","ObjectNumber":{"!description":"If this is selected, the sap.m.ObjectNumber control is used to display units of measure. If the value property of the Smart Field is not bound to a unit of measure, the property is ignored.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"No special context is selected. The Smart Field applies its internal defaults.","!category":"enum","!type":"String"},"ObjectIdentifier":{"!description":"If this is selected, the sap.m.ObjectIdentifier control is used to display IDs, if they are not editable. The current OData property is assumed to have a text annotation. Otherwise the configuration is ignored.","!category":"enum","!type":"String"}},"sap.ui.comp.smartvariants.SmartVariantManagement":{"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe v2 oData entity set whose metadata is used to create the variant items based on the <code>SelectionPresentationVariant<\/code> annotation. <br><b>Note:<\/b>This property may be set only once during the initialization phase and may not be changed afterwords.","!static":false,"!category":"function","!type":"fn() -> String"},"setExecuteOnStandard":{"!description":"Allows the FE-based applications to set the 'apply automatically' behavior for the standard variant. If 'apply automatically' end-user changes for the standard variant exists, they will be reapplied, after the setting. So, basically existing end-user changes always overwrite the intention.","!static":false,"!category":"function","!type":"fn(bSelect: Boolean)","parameters":{"bSelect":"type: boolean, description: defines the 'apply automatically' intention for the standard variant"}},"!proto":"sap.ui.comp.smartvariants.SmartVariantManagementBase","getStandardVariant":{"!description":"Returns the standard variant.","!static":false,"!category":"function","!type":"fn(oCurrentControl: sap.ui.core.Control) -> Object","parameters":{"oCurrentControl":"type: sap.ui.core.Control, description: Current personalizable control"}},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself.\n\nThis event is fired after a variant has been saved.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"clearVariantSelection":{"!description":"Removes the current variant selection and resets to Standard. Note: this method only set the variant title to Standard; it does not trigger a view selection change and does not change the modify indicator. In case this is required, please use the corresponding method <code>setCurrentVariantId<\/code>.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","currentVariantSetModified":{"!description":"Sets the dirty flag of the current variant.","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: The value indicating the dirty state of the current variant"}},"insertPersonalizableControl":{"!description":"Inserts a personalizableControl into the aggregation {@link #getPersonalizableControls personalizableControls}.","!static":false,"!category":"function","!type":"fn(oPersonalizableControl: sap.ui.comp.smartvariants.PersonalizableInfo, iIndex: Number) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oPersonalizableControl":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: The personalizableControl to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the personalizableControl should be inserted at; for a negative value of <code>iIndex<\/code>, the personalizableControl is inserted at position 0; for a value greater than the current size of the aggregation, the personalizableControl is inserted at the last position"}},"!constructorDescription":"Constructor for a new SmartVariantManagement.<br>\nThe call sequence is as follows:<br>\nA control for which personalization is used has to be registered first via the <code>personalizableControls<\/code> association. Then it has\nto call the <code>initialise<\/code> method with the arguments <code>fCallback<\/code> function which will be called once the personalization\ndata has been retrieved and <code>oPersoControl<\/code>, the control itself.<BR>\n<b>Note:<\/b> the function callback has to be defined in the personalizable control.<BR>\nThe old behavior, where the control has to register to the <code>initialise<\/code> event, before the <code>initialise<\/code> method call,\nshould not be used any longer and is not supported at all for the page variant scenarios.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPersistencyKey persistencyKey} : string<\/li>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersonalizableControls personalizableControls} : sap.ui.comp.smartvariants.PersonalizableInfo[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterSave afterSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartvariants.SmartVariantManagementBase#constructor sap.ui.comp.smartvariants.SmartVariantManagementBase}\ncan be used as well.","setPersistencyKey":{"!description":"Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPersistencyKey?: String) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"sPersistencyKey":"type: string, description: New value for property <code>persistencyKey<\/code>"}},"setCurrentVariantId":{"!description":"Sets the current variant ID.","!static":false,"!category":"function","!type":"fn(sVariantId: String, bDoNotApplyVariant: Boolean)","parameters":{"sVariantId":"type: string, description: ID of the variant","bDoNotApplyVariant":"type: boolean, description: If set to <code>true<\/code>, the <code>applyVariant<\/code> method is not executed yet."}},"initialise":{"!description":"Initializes the control by retrieving the variants from SAPUI5 flexibility. Once the initialization has been completed, the controls for personalization are notified via the <code>initialise<\/code> event.","!static":false,"!category":"function","!type":"fn(fCallback: fn(), oPersoControl: sap.ui.core.Control)","parameters":{"fCallback":"type: function, description: Function will be called whenever the data for the personalizable control is received","oPersoControl":"type: sap.ui.core.Control, description: Current control that can be personalized"}},"!description":"<h3>Overview<\/h3> The <code>SmartVariantManagement<\/code> control communicates with the flexibility library that offers SAPUI5 flexibility to manage the variants.<br> <h3>Usage<\/h3> You can use this control in combination with the following controls: <ul> <li><code>SmartFilterBar<\/code><\/li> <li><code>SmartChart<\/code><\/li> <li><code>SmartTable<\/code><\/li> <\/ul>","setEntitySet":{"!description":"The entity set name from OData metadata, with which the smart variant control must be bound.","!static":false,"!category":"function","!type":"fn(sEntitySetName: String) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"sEntitySetName":"type: string, description: The entity set"}},"fireInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 Replaced by providing the personalizable control and the callback via the <code>initialise<\/code>-method.<br>Fires event {@link #event:initialise initialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 Replaced by providing the personalizable control and the callback via the <code>initialise<\/code>-method.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getPersistencyKey":{"!description":"Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.","!static":false,"!category":"function","!type":"fn() -> String"},"isPageVariant":{"!description":"Determines if the <code>SmartVariantManagement<\/code> instance is a page variant.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getExecuteOnStandard":{"!description":"Returns the current 'apply automatically' behavior for the standard variant. If called before the variants are completely initialized <code>undefined<\/code> is returned.","!static":false,"!category":"function","!type":"fn() -> Boolean | undefined"},"getCurrentVariantId":{"!description":"Retrieves the current variant ID. For a standard variant, an empty string is returned.","!static":false,"!category":"function","!type":"fn() -> String"},"addPersonalizableControl":{"!description":"Registers all controls interested and relying on variant handling.","!static":false,"!category":"function","!type":"fn(oCurrentControlInfo: sap.ui.comp.smartvariants.PersonalizableInfo) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oCurrentControlInfo":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: Wrapper for the personalizable control"}},"destroyPersonalizableControls":{"!description":"Destroys all the personalizableControls in the aggregation {@link #getPersonalizableControls personalizableControls}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.SmartVariantManagement"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartvariants.SmartVariantManagementBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removePersonalizableControl":{"!description":"Removes a registered personalizable control.","!static":false,"!category":"function","!type":"fn(oCurrentControlInfo: sap.ui.comp.smartvariants.PersonalizableInfo) -> sap.ui.comp.smartvariants.PersonalizableInfo","parameters":{"oCurrentControlInfo":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: Wrapper for the personalizable control"}},"attachInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 Replaced by providing the personalizable control and the callback via the <code>initialise<\/code>-method.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself.\n\nThis event is fired when the SmartVariantManagement control is initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/comp/smartvariants/SmartVariantManagement","!helpDescription":"<h3>Overview<\/h3> The <code>SmartVariantManagement<\/code> control communicates with the flexibility library that offers SAPUI5 flexibility to manage the variants.<br> <h3>Usage<\/h3> You can use this control in combination with the following controls: <ul> <li><code>SmartFilterBar<\/code><\/li> <li><code>SmartChart<\/code><\/li> <li><code>SmartTable<\/code><\/li> <\/ul>","detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireAfterSave":{"!description":"Fires event {@link #event:afterSave afterSave} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"indexOfPersonalizableControl":{"!description":"Checks for the provided <code>sap.ui.comp.smartvariants.PersonalizableInfo<\/code> in the aggregation {@link #getPersonalizableControls personalizableControls}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPersonalizableControl: sap.ui.comp.smartvariants.PersonalizableInfo) -> Number","parameters":{"oPersonalizableControl":"type: sap.ui.comp.smartvariants.PersonalizableInfo, description: The personalizableControl whose index is looked for"}},"removeAllPersonalizableControls":{"!description":"Removes all registered personalizable controls.","!static":false,"!category":"function","!type":"fn()"},"detachAfterSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removePersonalizableControlById":{"!description":"Removes a registered personalizable control.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control)","parameters":{"oControl":"type: sap.ui.core.Control, description: the personalizable control"}},"attachAfterSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterSave afterSave} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself.\n\nThis event is fired after all changes are successfully stored.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getVariantContent":{"!description":"Retrieves the variant content.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, sKey: String) -> Object","parameters":{"sKey":"type: string, description: The variant key","oControl":"type: sap.ui.core.Control, description: Current personalizable control"}},"getPersonalizableControls":{"!description":"Gets content of aggregation {@link #getPersonalizableControls personalizableControls}.\n\nAll controls that rely on variant handling have to be added to this aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartvariants.PersonalizableInfo]"}},"sap.ui.comp.personalization.TableType":{"!description":"Provides enumeration sap.ui.comp.personalization.TableType. A subset of table types that fit for table personalization.","AnalyticalTable":{"!description":"Represents <code>sap.ui.table.AnalyticalTable<\/code>.","!category":"enum","!type":"String"},"Table":{"!description":"Represents <code>sap.ui.table.Table<\/code>.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","SelectionWrapper":{"!description":"Represents <code>sap.ui.comp.personalization.SelectionWrapper<\/code>.","!category":"enum","!type":"String"},"TreeTable":{"!description":"Represents <code>sap.ui.table.TreeTable<\/code>.","!category":"enum","!type":"String"},"!category":"static class","ChartWrapper":{"!description":"Represents <code>sap.ui.comp.personalization.ChartWrapper<\/code>.","!category":"enum","!type":"String"},"ResponsiveTable":{"!description":"Represents <code>sap.m.Table<\/code>.","!category":"enum","!type":"String"}},"sap.ui.comp.filterbar.FilterBar":{"_addParameter":{"!description":"Adds a <code>FilterGroupItem<\/code> element to the aggregation <code>_parameters<\/code>.","!static":false,"!category":"function","!type":"fn(oParameter: sap.ui.comp.filterbar.FilterGroupItem) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oParameter":"type: sap.ui.comp.filterbar.FilterGroupItem, description: adding a analytical parameter"}},"getIsRunningInValueHelpDialog":{"!description":"Gets current value of property {@link #getIsRunningInValueHelpDialog isRunningInValueHelpDialog}.\n\nSets whether the filter bar should look like the filters area in a ValueHelpDialog. True for SmartFilterBar when used in a ValueHelpDialog. False otherwise.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowGoOnFB":{"!description":"Sets a new value for property {@link #getShowGoOnFB showGoOnFB}.\n\nHandles visibility of the Go button on the FilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGoOnFB?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowGoOnFB":"type: boolean, description: New value for property <code>showGoOnFB<\/code>"}},"getShowClearButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement. Users can select any Variant instead.<br>Gets current value of property {@link #getShowClearButton showClearButton}.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"showFilterDialog":{"!description":"For backward compatibility. Creates adapt filters dialog","!static":false,"!category":"function","!type":"fn()"},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.comp.filterbar.FilterBar","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"addAdaptFilterDialogCustomContent":{"!description":"Enables to add application specific content as a custom view to the new adapt filters dialog.","!static":false,"!category":"function","!type":"fn(mCustomView: Object)","parameters":{"mCustomView":"type: object, description: the setting for the custom view"}},"detachBeforeVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeVariantSave beforeVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachFiltersDialogBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersDialogBeforeOpen filtersDialogBeforeOpen} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after the filters dialog is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFilterContainerWidth":{"!description":"Gets current value of property {@link #getFilterContainerWidth filterContainerWidth}.\n\nSets the width of the filters container.\n\nDefault value is <code>\"12rem\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowGoButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>showGoOnFB<\/code><br>Gets current value of property {@link #getShowGoButton showGoButton}.\n\nHandles visibility of the Go button on the FilterBar.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllFilters":{"!description":"Removes all entries in the aggregations filterItems, filterGroupItems, basicSearch","!static":false,"!category":"function","!type":"fn()"},"restoreGoButton":{"!description":"Restores the visibility of the Go button on FilterBar. The visibility of the Go button will be set, according to the showGoOnFB property.","!static":false,"!category":"function","!type":"fn()"},"setUiStateAsVariant":{"!description":"Apply the SelectionPresentationVariant annotated information as a variant. The current UI state represents the data suite format.","!static":false,"!category":"function","!type":"fn(oUiState: sap.ui.comp.state.UIState, sContext: String)","parameters":{"oUiState":"type: sap.ui.comp.state.UIState, description: object representing the ui-state.Only the SelectionVariant part is considered","sContext":"type: string, description: Describes in which context the variant is applied. The context is passed on to the application via the afterVariantLoad event"}},"applyVariant":{"!description":"Applies the variant.","!static":false,"!category":"function","!type":"fn(oVariant: Object, sContext: String, bInitial: Boolean)","parameters":{"sContext":"type: string, description: Describes in which context the variant is applied. The context is passed on to the application via the afterVariantLoad event","oVariant":"type: Object, description: JSON object","bInitial":"type: boolean, description: indicates if the apply was executed during the initialization phase."}},"setAdvancedMode":{"!description":"Sets a new value for property {@link #getAdvancedMode advancedMode}.\n\nThe advanced mode is only relevant for the value help scenario. UI representation is different from the standard FilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAdvancedMode?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bAdvancedMode":"type: boolean, description: New value for property <code>advancedMode<\/code>"}},"setContentWidth":{"!description":"Sets the width of the content area of the dialog. The passed dimension will be interpreted as 'px'.","!static":false,"!category":"function","!type":"fn(fWidth: Number)","parameters":{"fWidth":"type: float, description: the content width of the filters dialog."}},"getInitializedPromise":{"!description":"Returns promise which will be resolve when the initialized event is fired.","!static":false,"!category":"function","!type":"fn() -> Promise<undefined>"},"fireFilterChange":{"!description":"Fires event {@link #event:filterChange filterChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUseSnapshot":{"!description":"Gets current value of property {@link #getUseSnapshot useSnapshot}.\n\nDetermines the behavior when <code>reset<\/code> is executed. <br> <b>Note:<\/b> This property is only relevant if no variant management is used, and the filter bar is not used in the advanced mode. A snapshot shows the current state of the filter bar, just before the Filters dialog is opened. <ul> <li><code>undefined<\/code> (default) defines the standard behavior: snapshot will be applied after <code>reset<\/code> was triggered<\/li> <li><code>false<\/code> defines that the snapshot will not be applied<\/li> <li><code>true<\/code>is not considered at all<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"The <code>FilterBar<\/code> displays filters in a user-friendly manner to populate values for a query. The <code>FilterBar<\/code> consists of a row containing the {@link sap.ui.comp.smartvariants.SmartVariantManagementUi2 <code>SmartVariantManagementUi2<\/code>} control, the related buttons, and an area underneath displaying the filters.\n\nThe filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The area containing the filters can be hidden or shown using the <b>Hide FilterBar<\/b> / <b>Show FilterBar<\/b> button. The <b>Go<\/b> button triggers the search event, and the <b>Adapt Filters<\/b> button shows the <code>Adapt Filters Dialog<\/code>.\n\nIn this dialog, the user has full control over the <code>FilterBar<\/code>.","detachFiltersDialogSearch":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersDialogSearch filtersDialogSearch} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"showAdaptFilterDialog":{"!description":"Opens the Adapt Filters Dialog","!static":false,"!category":"function","!type":"fn(sView: String)","parameters":{"sView":"type: string, description: initially shown view"}},"getSearchEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Gets current value of property {@link #getSearchEnabled searchEnabled}.\n\nEnables/disables the Search button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"registerGetFiltersWithValues":{"!description":"Registration of a callback function. The provided callback function is executed to obtain the filters with values.","!static":false,"!category":"function","!type":"fn(fCallBack: sap.ui.comp.filterbar.FilterBar.fGetFiltersWithValuesCallBack) -> sap.ui.comp.filterbar.FilterBar","parameters":{"fCallBack":"type: sap.ui.comp.filterbar.FilterBar.fGetFiltersWithValuesCallBack, description: Called when a variant must be applied"}},"removeFilterGroupItem":{"!description":"Removes a filterGroupItem from the aggregation {@link #getFilterGroupItems filterGroupItems}.","!static":false,"!category":"function","!type":"fn(vFilterGroupItem: Number | String | sap.ui.comp.filterbar.FilterGroupItem) -> sap.ui.comp.filterbar.FilterGroupItem | null","parameters":{"vFilterGroupItem":"type: int|string|sap.ui.comp.filterbar.FilterGroupItem, description: The filterGroupItem to remove or its index or id"}},"retrieveFiltersWithValuesAsText":{"!description":"Returns a summary string that contains information about the filters currently assigned. The string starts with the number of set filters, followed by \"filters active\" and their labels.<br> Example:<br> <i>(3) filters active: Company Code, Fiscal Year, Customer<\/i>","!static":false,"!category":"function","!type":"fn() -> String"},"getShowGoOnFB":{"!description":"Gets current value of property {@link #getShowGoOnFB showGoOnFB}.\n\nHandles visibility of the Go button on the FilterBar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"_updateToolbarText":{"!description":"Updates the 'Filters'-button text with the count of filters with values","!static":false,"!category":"function","!type":"fn()"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setShowClearOnFB":{"!description":"Sets a new value for property {@link #getShowClearOnFB showClearOnFB}.\n\nHandles visibility of the Clear button on the FilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowClearOnFB?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowClearOnFB":"type: boolean, description: New value for property <code>showClearOnFB<\/code>"}},"attachFiltersDialogClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersDialogClosed filtersDialogClosed} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after the filters dialog is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/comp/filterbar/FilterBar","detachAssignedFiltersChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:assignedFiltersChanged assignedFiltersChanged} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachAssignedFiltersChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:assignedFiltersChanged assignedFiltersChanged} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the filters information has changed. It indicates specifically that the count of assigned filters may be changed. One of the intended reaction to this event would be to call <code>retrieveFiltersWithValuesAsText<\/code> method.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireFiltersDialogClosed":{"!description":"Fires event {@link #event:filtersDialogClosed filtersDialogClosed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setUseToolbar":{"!description":"Sets a new value for property {@link #getUseToolbar useToolbar}.\n\nDetermines what design is used. Default is the design with toolbar. If the property <code>useToolbar<\/code> is set to <code>false<\/code>, the property <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b><br> If set to <code>false<\/code>, the <code>VariantManagement<\/code> control is not available at all. This scenario is only intended for the {@link sap.ui.comp.smartfilterbar.SmartFilterBar}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseToolbar?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bUseToolbar":"type: boolean, description: New value for property <code>useToolbar<\/code>"}},"setConsiderGroupTitle":{"!description":"Sets a new value for property {@link #getConsiderGroupTitle considerGroupTitle}.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bConsiderGroupTitle?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bConsiderGroupTitle":"type: boolean, description: New value for property <code>considerGroupTitle<\/code>"}},"setUseSnapshot":{"!description":"Sets a new value for property {@link #getUseSnapshot useSnapshot}.\n\nDetermines the behavior when <code>reset<\/code> is executed. <br> <b>Note:<\/b> This property is only relevant if no variant management is used, and the filter bar is not used in the advanced mode. A snapshot shows the current state of the filter bar, just before the Filters dialog is opened. <ul> <li><code>undefined<\/code> (default) defines the standard behavior: snapshot will be applied after <code>reset<\/code> was triggered<\/li> <li><code>false<\/code> defines that the snapshot will not be applied<\/li> <li><code>true<\/code>is not considered at all<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUseSnapshot: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bUseSnapshot":"type: boolean, description: New value for property <code>useSnapshot<\/code>"}},"determineControlByName":{"!description":"Retrieves the control based on the name and group name.","!static":false,"!category":"function","!type":"fn(sName: String, sGroupName?: String) -> sap.ui.core.Control","parameters":{"sName":"type: string, description: Name of the filter.","sGroupName":"type: string, description: Group name of the filter; <code>null<\/code> for filter that belongs to basic group."}},"getUseToolbar":{"!description":"Gets current value of property {@link #getUseToolbar useToolbar}.\n\nDetermines what design is used. Default is the design with toolbar. If the property <code>useToolbar<\/code> is set to <code>false<\/code>, the property <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b><br> If set to <code>false<\/code>, the <code>VariantManagement<\/code> control is not available at all. This scenario is only intended for the {@link sap.ui.comp.smartfilterbar.SmartFilterBar}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"registerFetchData":{"!description":"Registration of a callback function. The provided callback function is executed when saving a variant is triggered and must provide all relevant fields and values in JSON.","!static":false,"!category":"function","!type":"fn(fCallBack: function(string)) -> sap.ui.comp.filterbar.FilterBar","parameters":{"fCallBack":"type: function(string), description: Called when a variant must be fetched"}},"detachFilterChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filterChange filterChange} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"search":{"!description":"Executes the search event. Controls of all visible filters will be passed as event-parameters.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachFiltersDialogCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersDialogCancel filtersDialogCancel} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeFilterItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Use aggregation <code>filterGroupItems<\/code> instead.<br>Removes a filterItem from the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(vFilterItem: Number | String | sap.ui.comp.filterbar.FilterItem) -> sap.ui.comp.filterbar.FilterItem | null","parameters":{"vFilterItem":"type: int|string|sap.ui.comp.filterbar.FilterItem, description: The filterItem to remove or its index or id"}},"setDataSuiteFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 replaced by {@link sap.ui.comp.filterbar.FilterBar#setUiState}<br>Sets the selection variant for UI navigation to FilterBar.","!static":false,"!category":"function","!type":"fn(sSuiteData: String, bReplace: Boolean)","parameters":{"sSuiteData":"type: string, description: Represents the selection variants for UI navigation","bReplace":"type: boolean, description: Replaces existing filter data"}},"destroyFilterGroupItems":{"!description":"Destroys all the filterGroupItems in the aggregation {@link #getFilterGroupItems filterGroupItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar"},"setCurrentVariantId":{"!description":"Sets the current variant ID.","!static":false,"!category":"function","!type":"fn(sVariantId: String, bDoNotApplyVariant: Boolean)","parameters":{"sVariantId":"type: string, description: ID of the variant","bDoNotApplyVariant":"type: boolean, description: If set to <code>true<\/code>, the <code>applyVariant<\/code> method is not executed yet. Relevant during navigation, when called before the initialise event has been executed."}},"getDescriptionForKeys":{"!description":"Reads the descriptions for given filters and value keys.","!static":false,"!category":"function","!type":"fn(aFiltersWithValuesToBeRead: Array)","parameters":{"aFiltersWithValuesToBeRead":"type: array, description: List of filters with value keys to be retrieved"}},"attachBeforeVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeVariantSave beforeVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired before a variant is saved. The event can be used to adapt the data of the custom filters, which will be saved as variant later.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachFilterChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filterChange filterChange} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when a filter or multiple filters has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachBeforeVariantFetch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeVariantFetch beforeVariantFetch} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired before a variant is fetched.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getVariantManagement":{"!description":"Returns the associated VariantManagement control. The returned VariantManagement instance should not be cached or manipulated in any ways. It should offer the application a convenient way to verify the dirty state and to check for page variant scenario. The method may return <code>null<\/code> or a disabled VariantManagement control.","!static":false,"!category":"function","!type":"fn() -> null | sap.ui.comp.variants.VariantManagement"},"getFilterItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Use aggregation <code>filterGroupItems<\/code> instead.<br>Gets content of aggregation {@link #getFilterItems filterItems}.\n\nFilters belonging to the basic group.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.filterbar.FilterItem]"},"destroyFilterItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Use aggregation <code>filterGroupItems<\/code> instead.<br>Destroys all the filterItems in the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar"},"removeAllContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 with no replacement.<br>Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"showAdaptFilterDialogForKeyUser":{"!description":"Opens the Adapt Filters Dialog for the UI adaptation. <br><b>Note:<\/b> This function must only be used internally during the UI adaptation.","!static":false,"!category":"function","!type":"fn(sStyleClass: String, fCallBack: fn())","parameters":{"sStyleClass":"type: string, description: indicating the ui adaption area","fCallBack":"type: function, description: will be executed, once the dialog closes with 'Save'"}},"detachInitialized":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialized initialized} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Go button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireFiltersDialogSearchForFilters":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Fires event {@link #event:filtersDialogSearchForFilters filtersDialogSearchForFilters} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAllFilterGroupItems":{"!description":"Removes all entries in the aggregation filterGroupItems.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.filterbar.FilterGroupItem]"},"fireAfterVariantSave":{"!description":"Fires event {@link #event:afterVariantSave afterVariantSave} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getFilterGroupItems":{"!description":"Gets content of aggregation {@link #getFilterGroupItems filterGroupItems}.\n\nContains all FilterBar filters. <br> <code>Note:<\/code>In case a filter has to be added to the basic group <ul> <li>the property <code>groupName<\/code> has to be set to the constant <code>sap.ui.comp.filterbar.FilterBar.INTERNAL_GROUP<\/code><\/li> <li>the property <code>groupLabel<\/code> will be handled internally and will be ignored, if set<\/li> <li>the property <code>partOfCurrentVariant<\/code> has to be set to <code>true<\/code><\/li> <li>if the property <code>visibleInFilterBar<\/code> is set to <code>true<\/code>, the property <code>partOfCurrentVariant<\/code> will be set internally also to <code>true<\/code><\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.filterbar.FilterGroupItem]"},"detachBeforeVariantFetch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeVariantFetch beforeVariantFetch} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getAdvancedMode":{"!description":"Gets current value of property {@link #getAdvancedMode advancedMode}.\n\nThe advanced mode is only relevant for the value help scenario. UI representation is different from the standard FilterBar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireInitialized":{"!description":"Fires event {@link #event:initialized initialized} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowAllFilters":{"!description":"Sets a new value for property {@link #getShowAllFilters showAllFilters}.\n\nIf set to <code>true<\/code>, when the <code>FilterBar<\/code> is expanded it will show all filters, not only the first 7.\n\n<b>Note:<\/b> This is valid only when the <code>FilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAllFilters?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowAllFilters":"type: boolean, description: New value for property <code>showAllFilters<\/code>"}},"detachAfterVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getShowAllFilters":{"!description":"Gets current value of property {@link #getShowAllFilters showAllFilters}.\n\nIf set to <code>true<\/code>, when the <code>FilterBar<\/code> is expanded it will show all filters, not only the first 7.\n\n<b>Note:<\/b> This is valid only when the <code>FilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachFiltersDialogBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersDialogBeforeOpen filtersDialogBeforeOpen} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachReset":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:reset reset} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Restore button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachClear":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:clear clear} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getFilterBarExpanded":{"!description":"Gets current value of property {@link #getFilterBarExpanded filterBarExpanded}.\n\nShows the filters area. When property <code>useToolbar<\/code> is set to <code>false<\/code>, <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b> When <code>SmartFilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>, it is initially collapsed. The filter bar is initially expanded in the following cases:\n\n- When there is no basic search field.\n\n- When <code>preventInitialDataFetchInValueHelpDialog<\/code> is set to <code>true<\/code> or the <code>fetchValues<\/code> property of the <code>valueList<\/code> annotation is set to <code>2<\/code>.\n\n- When there are mandatory fields, all fields are expanded (not only the first 7).\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachFiltersDialogSearchForFilters":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersDialogSearchForFilters filtersDialogSearchForFilters} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when search field of the filter dialog is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_isTablet":{"!description":"Checks if running on tablet.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachFiltersDialogClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersDialogClosed filtersDialogClosed} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"retrieveFiltersWithValuesAsTextExpanded":{"!description":"Returns a summary string that contains information about the filters currently assigned. This string is intended to be used in expanded state. The string starts with the total number of filters set, followed by \"filters active\" and if available non-visible, the number of the non-visible with label \"hidden\" in brackets.<br> Example:<br> <i>(3) filters active (1 hidden)<\/i>","!static":false,"!category":"function","!type":"fn() -> String"},"_retrieveCurrentSelectionSet":{"!description":"Retrieves the controls for all visible filters.","!static":false,"!category":"function","!type":"fn(bWithName: Boolean, bConsiderParameters: Boolean) -> Array","parameters":{"bWithName":"type: boolean, description: determines the returning structure. Either list of controls, or list of filter name and control.","bConsiderParameters":"type: boolean, description: determines if parameters should be considered."}},"setSearchEnabled":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 with no replacement.<br>Sets a new value for property {@link #getSearchEnabled searchEnabled}.\n\nEnables/disables the Search button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSearchEnabled?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bSearchEnabled":"type: boolean, description: New value for property <code>searchEnabled<\/code>"}},"fireReset":{"!description":"Fires event {@link #event:reset reset} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nSpecifies the semantic header level of the {@link #getHeader header} text property. For more information, see {@link sap.m.Title#setLevel}. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.core.TitleLevel) -> sap.ui.comp.filterbar.FilterBar","parameters":{"sHeaderLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"getShowRestoreButton":{"!description":"Gets current value of property {@link #getShowRestoreButton showRestoreButton}.\n\nHandles visibility of the \"Restore\" button on the \"Filters\" dialog. <b>Note:<\/b> Restore works only automatically when a property <code>persistencyKey<\/code> is set and therefore Variant Management is used. In all other cases the \"restore\" behavior needs to be implemented by the app, based on the event <code>reset<\/code>. Since 1.84 the \"Restore\" button text is changed to \"Reset\"\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after a variant has been saved.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDisableSearchMatchesPatternWarning":{"!description":"Sets a new value for property {@link #getDisableSearchMatchesPatternWarning disableSearchMatchesPatternWarning}.\n\nDisables the warning for special symbols.\n\n<b>Note:<\/b> Changing the values here after the SmartFilter is initialized (<code>initialise<\/code> event was fired) has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisableSearchMatchesPatternWarning?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bDisableSearchMatchesPatternWarning":"type: boolean, description: New value for property <code>disableSearchMatchesPatternWarning<\/code>"}},"determineControlByFilterItem":{"!description":"Retrieves the control associated to the filter.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem, bConsiderParameters: Boolean) -> sap.ui.core.Control","parameters":{"oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: From the aggregations","bConsiderParameters":"type: boolean, description: check also analytics parameter"}},"determineMandatoryFilterItems":{"!description":"Retrieves the mandatory filters.","!static":false,"!category":"function","!type":"fn() -> Array"},"retrieveFiltersWithValues":{"!description":"Retrieves the labels of all visible filters that belongs to the current variant and have an assigned value.","!static":false,"!category":"function","!type":"fn() -> Array"},"getShowFilterConfiguration":{"!description":"Gets current value of property {@link #getShowFilterConfiguration showFilterConfiguration}.\n\nHandles visibility of the Filters button on the FilterBar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowRestoreOnFB":{"!description":"Gets current value of property {@link #getShowRestoreOnFB showRestoreOnFB}.\n\nHandles visibility of the Restore button on the FilterBar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPersistencyKey":{"!description":"Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data. Only if the persistencyKey is provided, will the <code>VariantManagement<\/code> control be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPersistencyKey?: String) -> sap.ui.comp.filterbar.FilterBar","parameters":{"sPersistencyKey":"type: string, description: New value for property <code>persistencyKey<\/code>"}},"setShowRestoreButton":{"!description":"Sets a new value for property {@link #getShowRestoreButton showRestoreButton}.\n\nHandles visibility of the \"Restore\" button on the \"Filters\" dialog. <b>Note:<\/b> Restore works only automatically when a property <code>persistencyKey<\/code> is set and therefore Variant Management is used. In all other cases the \"restore\" behavior needs to be implemented by the app, based on the event <code>reset<\/code>. Since 1.84 the \"Restore\" button text is changed to \"Reset\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRestoreButton?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowRestoreButton":"type: boolean, description: New value for property <code>showRestoreButton<\/code>"}},"attachFiltersDialogSearch":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersDialogSearch filtersDialogSearch} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Go button on the filters dialog is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nSpecifies the semantic header level of the {@link #getHeader header} text property. For more information, see {@link sap.m.Title#setLevel}. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"isCurrentVariantExecuteOnSelectEnabled":{"!description":"Returns the information whether the flag 'executeOnSelect' is set or not on current variant.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setContentHeight":{"!description":"Sets the height of the content area of the dialog. The passed dimension will be interpreted as 'px'.","!static":false,"!category":"function","!type":"fn(fHeight: Number)","parameters":{"fHeight":"type: float, description: the content height of the filters dialog."}},"destroyContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 with no replacement.<br>Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar"},"fireFiltersDialogCancel":{"!description":"Fires event {@link #event:filtersDialogCancel filtersDialogCancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setFilterBarExpanded":{"!description":"Sets a new value for property {@link #getFilterBarExpanded filterBarExpanded}.\n\nShows the filters area. When property <code>useToolbar<\/code> is set to <code>false<\/code>, <code>filterBarExpanded<\/code> is ignored automatically and the <code>FilterBar<\/code> is always expanded. <b>Note:<\/b> When <code>SmartFilterBar<\/code> is used inside a <code>ValueHelpDialog<\/code>, it is initially collapsed. The filter bar is initially expanded in the following cases:\n\n- When there is no basic search field.\n\n- When <code>preventInitialDataFetchInValueHelpDialog<\/code> is set to <code>true<\/code> or the <code>fetchValues<\/code> property of the <code>valueList<\/code> annotation is set to <code>2<\/code>.\n\n- When there are mandatory fields, all fields are expanded (not only the first 7).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterBarExpanded?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bFilterBarExpanded":"type: boolean, description: New value for property <code>filterBarExpanded<\/code>"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireInitialise":{"!description":"Fires event {@link #event:initialise initialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.filterbar.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isDialogOpen":{"!description":"Determines if the filters dialog is opened.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentVariantId":{"!description":"Retrieves the current variant ID.","!static":false,"!category":"function","!type":"fn() -> String"},"setBasicSearch":{"!description":"Sets the associated {@link #getBasicSearch basicSearch}.","!static":false,"!category":"function","!type":"fn(oBasicSearch: sap.ui.core.ID | sap.m.SearchField) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oBasicSearch":"type: sap.ui.core.ID|sap.m.SearchField, description: ID of an element which becomes the new target of this basicSearch association; alternatively, an element instance may be given"}},"hideGoButton":{"!description":"Hides the Go button on FilterBar. Allows to hide the Go-button for dedicated scenarios, like liveMode.","!static":false,"!category":"function","!type":"fn()"},"detachReset":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:reset reset} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 with no replacement.<br>Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"attachClear":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:clear clear} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Clear button is pressed. The consumer has to clear all filters.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addFilterDialogContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Enables to add application specific content to the filters dialog. If the content was not yet added it will be added. The content will be set to visible, all other filters dialog content will be set to invisible. Not implemented yet for the new Adapt Filters Dialog","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"oContent":"type: sap.ui.core.Control, description: to be added; if empty, nothing is inserted."}},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"indexOfFilterGroupItem":{"!description":"Checks for the provided <code>sap.ui.comp.filterbar.FilterGroupItem<\/code> in the aggregation {@link #getFilterGroupItems filterGroupItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterGroupItem: sap.ui.comp.filterbar.FilterGroupItem) -> Number","parameters":{"oFilterGroupItem":"type: sap.ui.comp.filterbar.FilterGroupItem, description: The filterGroupItem whose index is looked for"}},"getBasicSearchValue":{"!description":"Determine the value of the basic search.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The <code>FilterBar<\/code> displays filters in a user-friendly manner to populate values for a query. The <code>FilterBar<\/code> consists of a row containing the {@link sap.ui.comp.smartvariants.SmartVariantManagementUi2 <code>SmartVariantManagementUi2<\/code>} control, the related buttons, and an area underneath displaying the filters.\n\nThe filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The area containing the filters can be hidden or shown using the <b>Hide FilterBar<\/b> / <b>Show FilterBar<\/b> button. The <b>Go<\/b> button triggers the search event, and the <b>Adapt Filters<\/b> button shows the <code>Adapt Filters Dialog<\/code>.\n\nIn this dialog, the user has full control over the <code>FilterBar<\/code>.","addFilterItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Use aggregation <code>filterGroupItems<\/code> instead.<br>Adds some filterItem to the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: The filterItem to add; if empty, nothing is inserted"}},"registerApplyData":{"!description":"Registration of a callback function. The provided callback function is executed when a variant must be applied. The callback function will receive the corresponding data set containing all relevant data in JSON, as initially provided by the callback for fetchData.","!static":false,"!category":"function","!type":"fn(fCallBack: function(string,string)) -> sap.ui.comp.filterbar.FilterBar","parameters":{"fCallBack":"type: function(string,string), description: Called when a variant must be applied"}},"insertContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 with no replacement.<br>Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"variantsInitialized":{"!description":"This method will be called by the SmartVariantMangement and indicates, that the standard variant was obtained. It indicates, that the variant management is fully initialized.","!static":false,"!category":"function","!type":"fn()"},"getAllFilterItems":{"!description":"Retrieves filters belonging to the current variant.","!static":false,"!category":"function","!type":"fn(bConsiderOnlyVisibleFields: Boolean) -> Array","parameters":{"bConsiderOnlyVisibleFields":"type: boolean, description: Indicates that only visible filters are retrieved. <b>Note:<\/b> hidden filters are treated as visible filters."}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Cancel button on the Filters dialog is pressed and the variant is marked as dirty.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachFiltersDialogSearchForFilters":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersDialogSearchForFilters filtersDialogSearchForFilters} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getFilterDialogContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Returns the filter dialog content. <code>Node:<\/code>The original content is a {@link sap.ui.layout.form.Form Form}. The form may be enhanced with a toolbar to enable the inner switch to an added custom content. Besides such operations, the original content should not be manipulated in any way.","!static":false,"!category":"function","!type":"fn() -> Array"},"getDisableSearchMatchesPatternWarning":{"!description":"Gets current value of property {@link #getDisableSearchMatchesPatternWarning disableSearchMatchesPatternWarning}.\n\nDisables the warning for special symbols.\n\n<b>Note:<\/b> Changing the values here after the SmartFilter is initialized (<code>initialise<\/code> event was fired) has no effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachFiltersDialogCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersDialogCancel filtersDialogCancel} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the Cancel button on the filters dialog is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 with no replacement.<br>Gets content of aggregation {@link #getContent content}.\n\nDo NOT use this aggregation directly. The <code>FilterBar<\/code> control is not meant to be used with arbitrary content. It renders filterFields which are added by <code>filterGroupItems<\/code> aggregation. If you need to add some content below the <code>FilterBar<\/code>, this can be done by adding it as sibling of the <code>FilterBar<\/code>. For example, if <code>FilterBar<\/code> is child of <code>DynamicPageHeader<\/code>, the custom content can be added to the <code>DynamicPageHeader<\/code> as well.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","clearVariantSelection":{"!description":"Resets the current selection in the variant management control to standard.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getConsiderGroupTitle":{"!description":"Gets current value of property {@link #getConsiderGroupTitle considerGroupTitle}.\n\nIf this property is set, then the label for filters will be prefixed with the group title.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFilterContainerWidth":{"!description":"Sets a new value for property {@link #getFilterContainerWidth filterContainerWidth}.\n\nSets the width of the filters container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"12rem\"<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterContainerWidth?: String) -> sap.ui.comp.filterbar.FilterBar","parameters":{"sFilterContainerWidth":"type: string, description: New value for property <code>filterContainerWidth<\/code>"}},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in the toolbar on the first position. This property is ignored, when <code>useToolbar<\/code> is set to <code>false<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowOldFilterDialog":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Once set, the activation of the 'Adapt Filters' button will open the 'old' filters dialog. This method offers an intermediate solution for the visual filters scenario, which relies on the old filters dialog.","!static":false,"!category":"function","!type":"fn()"},"determineFilterItemByName":{"!description":"Retrieves the filter corresponding to the filter name.","!static":false,"!category":"function","!type":"fn(sName: String, sGroupName: String) -> sap.ui.comp.filterbar.FilterGroupItem","parameters":{"sName":"type: string, description: the control's name","sGroupName":"type: string, description: the filter's group name"}},"fireAssignedFiltersChanged":{"!description":"Fires event {@link #event:assignedFiltersChanged assignedFiltersChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowRestoreOnFB":{"!description":"Sets a new value for property {@link #getShowRestoreOnFB showRestoreOnFB}.\n\nHandles visibility of the Restore button on the FilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRestoreOnFB?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowRestoreOnFB":"type: boolean, description: New value for property <code>showRestoreOnFB<\/code>"}},"!constructorDescription":"Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPersistencyKey persistencyKey} : string (default: \"\")<\/li>\n<li>{@link #getAdvancedMode advancedMode} : boolean (default: false)<\/li>\n<li>{@link #getExpandAdvancedArea expandAdvancedArea} : boolean (default: false)<\/li>\n<li>{@link #getSearchEnabled searchEnabled} : boolean (default: true)<\/li>\n<li>{@link #getFilterBarExpanded filterBarExpanded} : boolean (default: true)<\/li>\n<li>{@link #getConsiderGroupTitle considerGroupTitle} : boolean (default: false)<\/li>\n<li>{@link #getShowAllFilters showAllFilters} : boolean (default: false)<\/li>\n<li>{@link #getShowClearButton showClearButton} : boolean (default: false)<\/li>\n<li>{@link #getShowRestoreButton showRestoreButton} : boolean (default: true)<\/li>\n<li>{@link #getShowGoOnFB showGoOnFB} : boolean (default: true)<\/li>\n<li>{@link #getShowRestoreOnFB showRestoreOnFB} : boolean (default: false)<\/li>\n<li>{@link #getShowClearOnFB showClearOnFB} : boolean (default: false)<\/li>\n<li>{@link #getShowGoButton showGoButton} : boolean<\/li>\n<li>{@link #getDeltaVariantMode deltaVariantMode} : boolean (default: true)<\/li>\n<li>{@link #getFilterContainerWidth filterContainerWidth} : string (default: \"12rem\")<\/li>\n<li>{@link #getUseToolbar useToolbar} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string (default: \"\")<\/li>\n<li>{@link #getShowFilterConfiguration showFilterConfiguration} : boolean (default: true)<\/li>\n<li>{@link #getUseSnapshot useSnapshot} : boolean<\/li>\n<li>{@link #getIsRunningInValueHelpDialog isRunningInValueHelpDialog} : boolean (default: false)<\/li>\n<li>{@link #getDisableSearchMatchesPatternWarning disableSearchMatchesPatternWarning} : boolean (default: false)<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.ui.comp.filterbar.FilterItem[]<\/li>\n<li>{@link #getFilterGroupItems filterGroupItems} : sap.ui.comp.filterbar.FilterGroupItem[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getBasicSearch basicSearch} : (sap.ui.core.ID | sap.m.SearchField)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeVariantSave beforeVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeVariantFetch beforeVariantFetch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantLoad afterVariantLoad} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterChange filterChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:clear clear} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantSave afterVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersDialogClosed filtersDialogClosed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersDialogBeforeOpen filtersDialogBeforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersDialogSearch filtersDialogSearch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersDialogCancel filtersDialogCancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersDialogSearchForFilters filtersDialogSearchForFilters} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:assignedFiltersChanged assignedFiltersChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireFiltersDialogSearch":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement.<br>Fires event {@link #event:filtersDialogSearch filtersDialogSearch} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireClear":{"!description":"Fires event {@link #event:clear clear} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireBeforeVariantFetch":{"!description":"Fires event {@link #event:beforeVariantFetch beforeVariantFetch} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowClearButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.84 with no replacement. Users can select any Variant instead.<br>Sets a new value for property {@link #getShowClearButton showClearButton}.\n\nHandles visibility of the Clear button on the Filters dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowClearButton?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowClearButton":"type: boolean, description: New value for property <code>showClearButton<\/code>"}},"getUiState":{"!description":"Retrieves the current UI state of the <code>FilterBar<\/code> control.<br> The current UI state represents the data suite format.","!static":false,"!category":"function","!type":"fn(mProperties: Object) -> sap.ui.comp.state.UIState","parameters":{"mProperties":"type: object, description: controls the API behavior"}},"isCurrentVariantStandard":{"!description":"Determines if the current variant is the standard variant","!static":false,"!category":"function","!type":"fn() -> Boolean | undefined"},"detachAfterVariantLoad":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantLoad afterVariantLoad} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"determineLabelByName":{"!description":"Retrieves the associated label based on the name and group name.","!static":false,"!category":"function","!type":"fn(sName: String, sGroupName: String) -> sap.m.Label","parameters":{"sName":"type: string, description: Name of the filter.","sGroupName":"type: string, description: Group name of the filter; <code>null<\/code> for filter that belongs to basic group."}},"getBasicSearchName":{"!description":"Determine the internal basic search field name.","!static":false,"!category":"function","!type":"fn() -> String"},"getPersistencyKey":{"!description":"Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data. Only if the persistencyKey is provided, will the <code>VariantManagement<\/code> control be used.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 with no replacement.<br>Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllFilterItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Use aggregation <code>filterGroupItems<\/code> instead.<br>Removes all entries in the aggregation filterItems.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.filterbar.FilterItem]"},"setDeltaVariantMode":{"!description":"Sets a new value for property {@link #getDeltaVariantMode deltaVariantMode}.\n\nStores the delta as compared to the standard variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDeltaVariantMode?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bDeltaVariantMode":"type: boolean, description: New value for property <code>deltaVariantMode<\/code>"}},"addFilterGroupItem":{"!description":"Adds some filterGroupItem to the aggregation {@link #getFilterGroupItems filterGroupItems}.","!static":false,"!category":"function","!type":"fn(oFilterGroupItem: sap.ui.comp.filterbar.FilterGroupItem) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oFilterGroupItem":"type: sap.ui.comp.filterbar.FilterGroupItem, description: The filterGroupItem to add; if empty, nothing is inserted"}},"addContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 with no replacement.<br>Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"setShowFilterConfiguration":{"!description":"Sets a new value for property {@link #getShowFilterConfiguration showFilterConfiguration}.\n\nHandles visibility of the Filters button on the FilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFilterConfiguration?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowFilterConfiguration":"type: boolean, description: New value for property <code>showFilterConfiguration<\/code>"}},"setIsRunningInValueHelpDialog":{"!description":"Sets a new value for property {@link #getIsRunningInValueHelpDialog isRunningInValueHelpDialog}.\n\nSets whether the filter bar should look like the filters area in a ValueHelpDialog. True for SmartFilterBar when used in a ValueHelpDialog. False otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsRunningInValueHelpDialog?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bIsRunningInValueHelpDialog":"type: boolean, description: New value for property <code>isRunningInValueHelpDialog<\/code>"}},"indexOfFilterItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Use aggregation <code>filterGroupItems<\/code> instead.<br>Checks for the provided <code>sap.ui.comp.filterbar.FilterItem<\/code> in the aggregation {@link #getFilterItems filterItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.comp.filterbar.FilterItem) -> Number","parameters":{"oFilterItem":"type: sap.ui.comp.filterbar.FilterItem, description: The filterItem whose index is looked for"}},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired when the FilterBar is initialized to indicate that metadata are available.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireFiltersDialogBeforeOpen":{"!description":"Fires event {@link #event:filtersDialogBeforeOpen filtersDialogBeforeOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getDataSuiteFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 replaced by {@link sap.ui.comp.filterbar.FilterBar#getUiState}<br>Retrieves the current variant as selection variant for UI navigation","!static":false,"!category":"function","!type":"fn(bConsiderAllFilters: Boolean) -> String","parameters":{"bConsiderAllFilters":"type: boolean, description: also include empty/invisible fields filter data"}},"_isPhone":{"!description":"Checks if running on phone.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialized":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialized initialized} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after the <code>FilterBar<\/code> has been initialized, the user's default variant has been applied, and a stable filter state has been achieved. With this event all relevant filter information, for example, for navigation-related actions, is available via {@link sap.ui.comp.filterbar.FilterBar#getUiState}.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowClearOnFB":{"!description":"Gets current value of property {@link #getShowClearOnFB showClearOnFB}.\n\nHandles visibility of the Clear button on the FilterBar.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterVariantLoad":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantLoad afterVariantLoad} event of this <code>sap.ui.comp.filterbar.FilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself.\n\nThis event is fired after a variant has been loaded and applied to the FilterBar. The event can be used to adapt custom filters with data from the variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.filterbar.FilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.filterbar.FilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUiState":{"!description":"Sets the current UI state of the <code>FilterBar<\/code> control.<br> The current UI state represents the data suite format.","!static":false,"!category":"function","!type":"fn(oUiState: sap.ui.comp.state.UIState, mProperties: Object)","parameters":{"oUiState":"type: sap.ui.comp.state.UIState, description: object representing the ui-state. Currently only the SelectionVariant part is considered.","mProperties":"type: object, description: controls the API behavior"}},"getBasicSearch":{"!description":"ID of the element which is the current target of the association {@link #getBasicSearch basicSearch}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"fetchVariant":{"!description":"Creates and returns the variant representation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.filterbar.FilterBar.fetchVariantResponse"},"setShowGoButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Replaced by property <code>showGoOnFB<\/code><br>Sets a new value for property {@link #getShowGoButton showGoButton}.\n\nHandles visibility of the Go button on the FilterBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowGoButton?: Boolean) -> sap.ui.comp.filterbar.FilterBar","parameters":{"bShowGoButton":"type: boolean, description: New value for property <code>showGoButton<\/code>"}},"getDeltaVariantMode":{"!description":"Gets current value of property {@link #getDeltaVariantMode deltaVariantMode}.\n\nStores the delta as compared to the standard variant.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation":{"!description":"The range operations supported by the <code>ValueHelpDialog<\/code> control.","BT":{"!description":"The Between operation for the ranges.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","Contains":{"!description":"The Contains operation for the ranges.","!category":"enum","!type":"String"},"LT":{"!description":"The Less operation for the ranges.","!category":"enum","!type":"String"},"LE":{"!description":"The Less or equals operation for the ranges.","!category":"enum","!type":"String"},"!category":"static class","EQ":{"!description":"The Equals operation for the ranges.","!category":"enum","!type":"String"},"GT":{"!description":"The Greater operation for the ranges.","!category":"enum","!type":"String"},"StartsWith":{"!description":"The StartsWith operation for the ranges.","!category":"enum","!type":"String"},"EndsWith":{"!description":"The EndsWith operation for the ranges.","!category":"enum","!type":"String"},"GE":{"!description":"The Between or equals operation for the ranges.","!category":"enum","!type":"String"}},"sap.ui.comp.smartform.SmartForm_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.SmartForm with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.SmartForm"},"sap.ui.comp.odata.ComboBox":{"!description":"Extends the functionalities in sap.m.ComboBox","getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.odata.ComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachSelectedKeyChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectedKeyChange selectedKeyChange} event of this <code>sap.ui.comp.odata.ComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.odata.ComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!proto":"sap.m.ComboBox","setTextArrangement":{"!description":"Sets a new value for property {@link #getTextArrangement textArrangement}.\n\nSets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTextArrangement?: String) -> sap.ui.comp.odata.ComboBox","parameters":{"sTextArrangement":"type: string, description: New value for property <code>textArrangement<\/code>"}},"fireSelectedKeyChange":{"!description":"Fires event {@link #event:selectedKeyChange selectedKeyChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.odata.ComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!category":"class","attachSelectedKeyChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectedKeyChange selectedKeyChange} event of this <code>sap.ui.comp.odata.ComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.odata.ComboBox<\/code> itself.\n\nThis event is fired when the selected key has changed only when: The key is valid. The control is visible There is a change when the control gets visible.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.odata.ComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.odata.ComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.odata.ComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>odata/ComboBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTextArrangement textArrangement} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectedKeyChange selectedKeyChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBox#constructor sap.m.ComboBox}\ncan be used as well.","!module":"sap/ui/comp/odata/ComboBox","!helpDescription":"Extends the functionalities in sap.m.ComboBox","getTextArrangement":{"!description":"Gets current value of property {@link #getTextArrangement textArrangement}.\n\nSets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.smartfilterbar.SFBMultiComboBox":{"!description":"Extends the functionalities in sap.m.MultiComboBox","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SFBMultiComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartfilterbar.SFBMultiComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SmartFilterBar/SFBMultiComboBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTextArrangement textArrangement} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.MultiComboBox#constructor sap.m.MultiComboBox}\ncan be used as well.","!module":"sap/ui/comp/smartfilterbar/SFBMultiComboBox","!helpDescription":"Extends the functionalities in sap.m.MultiComboBox","!proto":"sap.m.MultiComboBox","setTextArrangement":{"!description":"Sets a new value for property {@link #getTextArrangement textArrangement}.\n\nSets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTextArrangement?: String) -> sap.ui.comp.smartfilterbar.SFBMultiComboBox","parameters":{"sTextArrangement":"type: string, description: New value for property <code>textArrangement<\/code>"}},"!category":"class","getTextArrangement":{"!description":"Gets current value of property {@link #getTextArrangement textArrangement}.\n\nSets the <code>value<\/code> property formatting according to the <code>com.sap.vocabularies.UI.v1.TextArrangementType<\/code> from the ValueList property.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.smartfilterbar.SelectOptionSign":{"!description":"The different options to define Sign for Select Options used in SmartFilter control.","include":{"!description":"Sign Include","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","E":{"!description":"Sign Exclude","!category":"enum","!type":"String"},"I":{"!description":"Sign Include","!category":"enum","!type":"String"},"!category":"static class","exclude":{"!description":"Sign Exclude","!category":"enum","!type":"String"}},"sap.ui.comp.filterbar.FilterItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.filterbar.FilterItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.filterbar.FilterItem"},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.comp.smartfield.ControlProposal_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfield.ControlProposal with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartfield.ControlProposal"},"sap.ui.comp.smartform.SemanticGroupElement":{"setElementForLabel":{"!description":"Sets a new value for property {@link #getElementForLabel elementForLabel}.\n\nIndex of element to be used for label determination\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iElementForLabel?: Number) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"iElementForLabel":"type: int, description: New value for property <code>elementForLabel<\/code>"}},"getDataSourceLabel":{"!description":"Try to return label from data source from SmartField from which label is generated","!static":false,"!category":"function","!type":"fn() -> String | undefined"},"!proto":"sap.ui.layout.form.SemanticFormElement","!category":"class","getVisibleBasedOnElements":{"!description":"Determines the visibility of a <code>SemanticGroupElement<\/code> based on the inner elements","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new smartform/SemanticGroupElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getElementForLabel elementForLabel} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getElements elements} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:visibleChanged visibleChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.layout.form.SemanticFormElement#constructor sap.ui.layout.form.SemanticFormElement}\ncan be used as well.","getFieldsForRendering":{"!description":"override from sap.ui.layout.form.SemanticFormElement Determines which fields are rendered.\n\nIn edit mode, the field controls are rendered separated by the delimiters. In display mode, one text is rendered.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllElements":{"!description":"Removes all the controls from the aggregation {@link #getElements elements}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addCustomData":{"!description":"Adds some custom data into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to add; if empty, nothing is added"}},"!description":"SemanticGroupElement holds the semantically connected fields divided by a delimiter. <b>Note:<\/b> Semantically connected fields don't support the text arrangement async control functionality.","getFormElement":{"!description":"Returns the semantic form element.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.form.SemanticFormElement"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.SemanticGroupElement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyElements":{"!description":"Destroys all the elements in the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SemanticGroupElement"},"insertElement":{"!description":"Inserts a element into the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control, iIndex: Number) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"oElement":"type: sap.ui.core.Control, description: The element to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the element should be inserted at; for a negative value of <code>iIndex<\/code>, the element is inserted at position 0; for a value greater than the current size of the aggregation, the element is inserted at the last position"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.SemanticGroupElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.SemanticFormElement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachVisibleChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartform.SemanticGroupElement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"indexOfElement":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getElements elements}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control) -> Number","parameters":{"oElement":"type: sap.ui.core.Control, description: The element whose index is looked for"}},"!module":"sap/ui/comp/smartform/SemanticGroupElement","!helpDescription":"SemanticGroupElement holds the semantically connected fields divided by a delimiter. <b>Note:<\/b> Semantically connected fields don't support the text arrangement async control functionality.","getElements":{"!description":"Gets content of aggregation {@link #getElements elements}.\n\nAggregation of controls to be displayed together with a label and separated by delimiter.\n\n<b>Warning:<\/b> Do not put any layout or other container controls in here. This could damage the visual layout, keyboard support and screen-reader support. Views are also not supported. Only form controls are allowed. Allowed controls implement the interface <code>sap.ui.core.IFormContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireVisibleChanged":{"!description":"Fires event {@link #event:visibleChanged visibleChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addElement":{"!description":"Adds some element to the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn(oElement: sap.ui.core.Control) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"oElement":"type: sap.ui.core.Control, description: The element to add; if empty, nothing is inserted"}},"insertCustomData":{"!description":"Inserts some custom data into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData, iIndex: Number) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the custom data to insert; if empty, nothing is inserted","iIndex":"type: int, description: the 0-based index the custom data should be inserted at; for a negative value of iIndex, the custom data is inserted at position 0; for a value greater than the current size of the aggregation, the custom data is inserted at the last position"}},"removeElement":{"!description":"Removes a element from the aggregation {@link #getElements elements}.","!static":false,"!category":"function","!type":"fn(vElement: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vElement":"type: int|string|sap.ui.core.Control, description: The element to remove or its index or id"}},"attachVisibleChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:visibleChanged visibleChanged} event of this <code>sap.ui.comp.smartform.SemanticGroupElement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartform.SemanticGroupElement<\/code> itself.\n\nThe event is fired after the visibility of the control has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartform.SemanticGroupElement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartform.SemanticGroupElement<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getElementForLabel":{"!description":"Gets current value of property {@link #getElementForLabel elementForLabel}.\n\nIndex of element to be used for label determination\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getLabelText":{"!description":"Returns the text of the label.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.smartform.Group_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Group with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartform.Group"},"sap.ui.comp.navpopover.ChangeHandlerType":{"!description":"Type of change handler type for link personalization.","!module":"sap/ui/comp/library","moveLink":{"!description":"Change handler creating a change for a moved link.","!category":"enum","!type":"String"},"removeLink":{"!description":"Change handler creating a change for a removed link.","!category":"enum","!type":"String"},"!category":"static class","addLink":{"!description":"Change handler creating a change for an added link.","!category":"enum","!type":"String"}},"sap.ui":{"comp":"sap.ui.comp","!category":"namespace"},"sap.ui.comp.valuehelpdialog.ValueHelpDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.valuehelpdialog.ValueHelpDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.valuehelpdialog.ValueHelpDialog"},"sap.ui.comp.smartform.Group":{"getLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.88 replaced by <code>title<\/code> aggregation.<br>Gets current value of property {@link #getLabel label}.\n\nLabel for the group.","!static":false,"!category":"function","!type":"fn() -> String"},"getUseHorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.86 replaced by {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} in the <code>layout<\/code> aggregation of the <code>SmartForm<\/code> control.<br>Gets current value of property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a <code>ResponsiveLayout<\/code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm<\/code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm<\/code> control when creating the <code>Group<\/code> element.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEditMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.74.0 please do not change the edit mode on group level, let the SmartForm inheritance do it<br>Setter for property <code>editable<\/code> of all smart fields in children hierarchy.","!static":false,"!category":"function","!type":"fn(bEditMode: Boolean) -> sap.ui.comp.smartform.Group","parameters":{"bEditMode":"type: boolean, description: new value for editable property of smart fields."}},"!proto":"sap.ui.layout.form.FormContainer","!category":"class","setLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please use <code>layoutData<\/code> aggregation instead.<br>Sets the aggregated {@link #getLayout layout}.","!static":false,"!category":"function","!type":"fn(oLayout: sap.ui.layout.GridData) -> sap.ui.comp.smartform.Group","parameters":{"oLayout":"type: sap.ui.layout.GridData, description: The layout to set"}},"removeAllGroupElements":{"!description":"Removes all the controls from the aggregation {@link #getGroupElements groupElements}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.IFormGroupElement]"},"getLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please use <code>layoutData<\/code> aggregation instead.<br>Gets content of aggregation {@link #getLayout layout}.\n\nLayout to specify how the group shall be rendered (e.g. span and line-break)\n\n<b>Note:<\/b> Do not use <code>layout<\/code> and <code>layoutData<\/code> aggregations combined.","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.GridData"},"!constructorDescription":"Constructor for a new smartform/Group.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUseHorizontalLayout useHorizontalLayout} : boolean<\/li>\n<li>{@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth} : int<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroupElements groupElements} : sap.ui.comp.IFormGroupElement[] (default)<\/li>\n<li>{@link #getLayout layout} : sap.ui.layout.GridData<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.layout.form.FormContainer#constructor sap.ui.layout.form.FormContainer}\ncan be used as well.","getTitle":{"!description":"Gets content of aggregation <code>title<\/code>.\n\nCan either be a <code>Title<\/code> element or a string.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Title | String"},"setHorizontalLayoutGroupElementMinWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please do not use this property as it does not have any effect on the current layout of the <code>SmartForm<\/code> control.<br>Sets a new value for property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control. So don't set it manually.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iHorizontalLayoutGroupElementMinWidth?: Number) -> sap.ui.comp.smartform.Group","parameters":{"iHorizontalLayoutGroupElementMinWidth":"type: int, description: New value for property <code>horizontalLayoutGroupElementMinWidth<\/code>"}},"getGroupElements":{"!description":"Gets content of aggregation {@link #getGroupElements groupElements}.\n\nA <code>GroupElement<\/code> is a combination of one label and different controls associated to this label.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.IFormGroupElement]"},"addCustomData":{"!description":"Adds some CustomData into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>GroupElement<\/code> elements and the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.comp.smartform.Group","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to add; if empty, nothing is added"}},"!description":"Groups are used to group group elements.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>. If set to <code>false<\/code>, the <code>Group<\/code> is not rendered. Default value is true.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.comp.smartform.Group","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"removeGroupElement":{"!description":"Removes a groupElement from the aggregation {@link #getGroupElements groupElements}.","!static":false,"!category":"function","!type":"fn(vGroupElement: Number | String | sap.ui.comp.IFormGroupElement) -> sap.ui.comp.IFormGroupElement | null","parameters":{"vGroupElement":"type: int|string|sap.ui.comp.IFormGroupElement, description: The groupElement to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartform.Group.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTitle":{"!description":"Sets the aggregated <code>title<\/code>.\n\nCan either be a <code>Title<\/code> element or a string. If a <code>Title<\/code> element is used, the style of the title can be set.\n\n<b>Note:<\/b> If the title is provided as a string, the title is rendered with a theme-dependent default level. As the <code>SmartForm<\/code> control cannot know the structure of the page, this might not fit the page structure. In this case provide the title using a <code>Title<\/code> element and set its {@link sap.ui.core.Title#setLevel level} to the required value.","!static":false,"!category":"function","!type":"fn(vTitle: sap.ui.core.Title | String) -> sap.ui.comp.smartform.Group","parameters":{"vTitle":"type: sap.ui.core.Title|string, description: The title to set"}},"destroyGroupElements":{"!description":"Destroys all the groupElements in the aggregation {@link #getGroupElements groupElements}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.Group"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartform.Group with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addGroupElement":{"!description":"Adds some groupElement to the aggregation {@link #getGroupElements groupElements}.","!static":false,"!category":"function","!type":"fn(oGroupElement: sap.ui.comp.IFormGroupElement) -> sap.ui.comp.smartform.Group","parameters":{"oGroupElement":"type: sap.ui.comp.IFormGroupElement, description: The groupElement to add; if empty, nothing is inserted"}},"destroyLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please use <code>layoutData<\/code> aggregation instead.<br>Destroys the layout in the aggregation {@link #getLayout layout}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.Group"},"getHorizontalLayoutGroupElementMinWidth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 please do not use this property as it does not have any effect on the current layout of the <code>SmartForm<\/code> control.<br>Gets current value of property {@link #getHorizontalLayoutGroupElementMinWidth horizontalLayoutGroupElementMinWidth}.\n\nSpecifies the minimal size in pixels of all group elements of the form if horizontal Layout is used.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control. So don't set it manually.","!static":false,"!category":"function","!type":"fn() -> Number"},"setUseHorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.86 replaced by {@link sap.ui.comp.smartform.ColumnLayout ColumnLayout} in the <code>layout<\/code> aggregation of the <code>SmartForm<\/code> control.<br>Sets a new value for property {@link #getUseHorizontalLayout useHorizontalLayout}.\n\nSpecifies whether the groups are rendered in a <code>ResponsiveLayout<\/code> with label on top of the group element. Each group will be rendered in a new line.\n\n<b>Note:<\/b> If <code>Group<\/code> is assigned to a <code>SmartForm<\/code> control, this property is inherited from the <code>SmartForm<\/code> control.\n\nSo don't set it to a different value from the one in the <code>SmartForm<\/code> control. For performance reasons it might make sense to set it manually to the same value as the one in the <code>SmartForm<\/code> control when creating the <code>Group<\/code> element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUseHorizontalLayout?: Boolean) -> sap.ui.comp.smartform.Group","parameters":{"bUseHorizontalLayout":"type: boolean, description: New value for property <code>useHorizontalLayout<\/code>"}},"!module":"sap/ui/comp/smartform/Group","indexOfGroupElement":{"!description":"Checks for the provided <code>sap.ui.comp.IFormGroupElement<\/code> in the aggregation {@link #getGroupElements groupElements}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroupElement: sap.ui.comp.IFormGroupElement) -> Number","parameters":{"oGroupElement":"type: sap.ui.comp.IFormGroupElement, description: The groupElement whose index is looked for"}},"!helpDescription":"Groups are used to group group elements.","setLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.88 replaced by <code>title<\/code> aggregation.<br>Sets a new value for property {@link #getLabel label}.\n\nLabel for the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.comp.smartform.Group","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"destroyTitle":{"!description":"Destroys the title in the aggregation <code>title<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.Group"},"insertCustomData":{"!description":"Inserts some customData into the aggregation <code>customData<\/code>.\n\n<b>Note:<\/b> <code>customData<\/code> that is used by the <code>SmartField<\/code> control itself is also added to the <code>GroupElement<\/code> elements and the <code>SmartField<\/code> controls in the children hierarchy. Additional <code>customData<\/code> that is not used by the <code>SmartField<\/code> control internally might not be added.","!static":false,"!category":"function","!type":"fn(oCustomData: sap.ui.core.CustomData, iIndex: Number) -> sap.ui.comp.smartform.Group","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: the customData to insert; if empty, nothing is inserted","iIndex":"type: int, description: the 0-based index the customData should be inserted at; for a negative value of iIndex, the customData is inserted at position 0; for a value greater than the current size of the aggregation, the customData is inserted at the last position"}},"insertGroupElement":{"!description":"Inserts a groupElement into the aggregation {@link #getGroupElements groupElements}.","!static":false,"!category":"function","!type":"fn(oGroupElement: sap.ui.comp.IFormGroupElement, iIndex: Number) -> sap.ui.comp.smartform.Group","parameters":{"oGroupElement":"type: sap.ui.comp.IFormGroupElement, description: The groupElement to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the groupElement should be inserted at; for a negative value of <code>iIndex<\/code>, the groupElement is inserted at position 0; for a value greater than the current size of the aggregation, the groupElement is inserted at the last position"}}},"sap.ui.comp.odata.ComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.odata.ComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.odata.ComboBox"},"sap.ui.comp.smartfilterbar.FilterType":{"!description":"The available filter types to configure the internal control of a SmartFilterBar control.","single":{"!description":"Restrict filter to a single entry.","!category":"enum","!type":"String"},"auto":{"!description":"Restrict filter based on metadata.","!category":"enum","!type":"String"},"searchExpression":{"!description":"Restrict filter to be used as first operand in startswith, endswith, and contains clauses.","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","multiple":{"!description":"Restrict filter to multiple entries.","!category":"enum","!type":"String"},"!category":"static class","interval":{"!description":"Restrict filter to an interval.","!category":"enum","!type":"String"}},"sap.ui.comp.smartmicrochart.SmartMicroChartBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChartBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartMicroChartBase"},"sap.ui.comp.smartvariants.SmartVariantManagementMediator":{"setShowShare":{"!description":"Sets a new value for property {@link #getShowShare showShare}.\n\nIndicates that the Public checkbox is visible in the Save As and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users. <b>Note<\/b>: this property is controlled by the SAPUI5 flexibility service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowShare?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bShowShare":"type: boolean, description: New value for property <code>showShare<\/code>"}},"getShowSetAsDefault":{"!description":"Gets current value of property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates whether the functionality of setting a default variant is enabled. The Default column in Manage Views and the Set as Default checkbox in Save View will be disabled if set to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself.\n\nThis event is fired when a new variant is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nIndicates whether the buttons on My Views are visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowCreateTile":{"!description":"Sets a new value for property {@link #getShowCreateTile showCreateTile}.\n\nIndicates that a Create Tile is visible in the Save As dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCreateTile?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bShowCreateTile":"type: boolean, description: New value for property <code>showCreateTile<\/code>"}},"setShowExecuteOnSelection":{"!description":"Sets a new value for property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save As and the Manage Views dialogs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowExecuteOnSelection?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bShowExecuteOnSelection":"type: boolean, description: New value for property <code>showExecuteOnSelection<\/code>"}},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself.\n\nThis event is fired when the Save View dialog or the Save As dialog is closed with the Save button.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"currentVariantGetModified":{"!description":"Gets the dirty flag of the current variant.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.core.TitleLevel) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sHeaderLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"getModelName":{"!description":"Gets current value of property {@link #getModelName modelName}.\n\nThe name of the model containing the data.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"registerApplyAutomaticallyOnStandardVariant":{"!description":"Registration of a callback function. The provided callback function is executed to check if Apply Automatically on standard variant should be considered.","!static":false,"!category":"function","!type":"fn(fCallBack: fn()) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"fCallBack":"type: function, description: Called when standard variant must be applied. It determines if Apply Automatically on standard variant should be considered. As a convenience the current variant will be passed to the callback. This variant instance may not be changed in any ways. It is only intended to provide certain variant information."}},"getMaxWidth":{"!description":"Gets current value of property {@link #getMaxWidth maxWidth}.\n\nSets the maximum width of the control.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getDisplayTextForExecuteOnSelectionForStandardVariant":{"!description":"Gets current value of property {@link #getDisplayTextForExecuteOnSelectionForStandardVariant displayTextForExecuteOnSelectionForStandardVariant}.\n\nDefines the Apply Automatically text for the standard variant in the Manage Views dialog if the application controls this behavior. <p> <b>Note:<\/b> The usage of this property is restricted to <code>sap.fe<\/code> components only.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getStandardItemText":{"!description":"Gets current value of property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title. <b>Note<\/b>: This property has to be set during the <code>applySettings<\/code> method; it will be ignored otherwise.","!static":false,"!category":"function","!type":"fn() -> String"},"getModified":{"!description":"Determines whether the current variant is modified.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getOverflowToolbarConfig":{"!description":"Registers an invalidation event that is fired when the width of the control is changed. <b>Note:<\/b> This is required by the {@link sap.m.IOverflowToolbarContent} interface.","!static":false,"!category":"function","!type":"fn() -> [{canOverflow:boolean,invalidationEvents:string]"},"setSelectionKey":{"!description":"Sets a new value for property {@link #getSelectionKey selectionKey}.\n\nThe key of the currently selected item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectionKey?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sSelectionKey":"type: string, description: New value for property <code>selectionKey<\/code>"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"getApplyAutomaticallyOnVariant":{"!description":"Gets the Apply Automatically state for a variant.","!static":false,"!category":"function","!type":"fn(oVariant: Object) -> Boolean","parameters":{"oVariant":"type: object, description: The fl-variant object"}},"getDefaultVariantKey":{"!description":"Gets current value of property {@link #getDefaultVariantKey defaultVariantKey}.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"getFor":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getFor for}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setStandardItemText":{"!description":"Sets a new value for property {@link #getStandardItemText standardItemText}.\n\nOverwrites the default Standard variant title. <b>Note<\/b>: This property has to be set during the <code>applySettings<\/code> method; it will be ignored otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStandardItemText?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sStandardItemText":"type: string, description: New value for property <code>standardItemText<\/code>"}},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"Can be used to manage variants. You can use this control in most controls that are enabled for <i>key user adaptation<\/i>.<br> <b>Note: <\/b>On the user interface, variants are generally referred to as \"views\".","detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartvariants.SmartVariantManagementMediator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getExecuteOnSelectionForStandardDefault":{"!description":"Gets current value of property {@link #getExecuteOnSelectionForStandardDefault executeOnSelectionForStandardDefault}.\n\nDetermines the behavior for Apply Automatically if the standard variant is marked as the default variant.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowCreateTile":{"!description":"Gets current value of property {@link #getShowCreateTile showCreateTile}.\n\nIndicates that a Create Tile is visible in the Save As dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInErrorState":{"!description":"Gets current value of property {@link #getInErrorState inErrorState}.\n\nIndicates whether the control is in error state. If set to <code>true<\/code>, an error message will be displayed when the variant is opened.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMaxWidth":{"!description":"Sets a new value for property {@link #getMaxWidth maxWidth}.\n\nSets the maximum width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxWidth?: sap.ui.core.CSSSize) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"setExecuteOnSelectionForStandardDefault":{"!description":"Sets a new value for property {@link #getExecuteOnSelectionForStandardDefault executeOnSelectionForStandardDefault}.\n\nDetermines the behavior for Apply Automatically if the standard variant is marked as the default variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExecuteOnSelectionForStandardDefault?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bExecuteOnSelectionForStandardDefault":"type: boolean, description: New value for property <code>executeOnSelectionForStandardDefault<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartvariants.SmartVariantManagementMediator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setTitleStyle":{"!description":"Sets a new value for property {@link #getTitleStyle titleStyle}.\n\nDefines the style of the title. For more information, see {@link sap.m.Title#setTitleStyle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleStyle?: sap.ui.core.TitleLevel) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sTitleStyle":"type: sap.ui.core.TitleLevel, description: New value for property <code>titleStyle<\/code>"}},"!module":"sap/ui/comp/smartvariants/SmartVariantManagementMediator","!helpDescription":"Can be used to manage variants. You can use this control in most controls that are enabled for <i>key user adaptation<\/i>.<br> <b>Note: <\/b>On the user interface, variants are generally referred to as \"views\".","fireSave":{"!description":"Fires event {@link #event:save save} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachManage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:manage manage} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setUseFavorites":{"!description":"Sets a new value for property {@link #getUseFavorites useFavorites}.\n\nIndicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseFavorites?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bUseFavorites":"type: boolean, description: New value for property <code>useFavorites<\/code>"}},"attachManage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:manage manage} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself.\n\nThis event is fired when users apply changes to variants in the Manage Views dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself.\n\nThis event is fired when users press the Cancel button inside the Save As dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDisplayTextForExecuteOnSelectionForStandardVariant":{"!description":"Sets a new value for property {@link #getDisplayTextForExecuteOnSelectionForStandardVariant displayTextForExecuteOnSelectionForStandardVariant}.\n\nDefines the Apply Automatically text for the standard variant in the Manage Views dialog if the application controls this behavior. <p> <b>Note:<\/b> The usage of this property is restricted to <code>sap.fe<\/code> components only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayTextForExecuteOnSelectionForStandardVariant?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sDisplayTextForExecuteOnSelectionForStandardVariant":"type: string, description: New value for property <code>displayTextForExecuteOnSelectionForStandardVariant<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","removeFor":{"!description":"Removes an for from the association named {@link #getFor for}.","!static":false,"!category":"function","!type":"fn(vFor: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID | null","parameters":{"vFor":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The for to be removed or its index or ID"}},"getTitleStyle":{"!description":"Gets current value of property {@link #getTitleStyle titleStyle}.\n\nDefines the style of the title. For more information, see {@link sap.m.Title#setTitleStyle}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"currentVariantSetModified":{"!description":"Sets the dirty flag of the current variant.","!static":false,"!category":"function","!type":"fn(bFlag: Boolean)","parameters":{"bFlag":"type: boolean, description: The value indicating the dirty state of the current variant"}},"setDefaultVariantKey":{"!description":"Sets a new value for property {@link #getDefaultVariantKey defaultVariantKey}.\n\nProvides a string value to set the default variant. Used for the save dialog. Has no effect on the selected variant.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultVariantKey?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sDefaultVariantKey":"type: string, description: New value for property <code>defaultVariantKey<\/code>"}},"getShowExecuteOnSelection":{"!description":"Gets current value of property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save As and the Manage Views dialogs.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfVariantItem":{"!description":"Checks for the provided <code>sap.ui.comp.variants.VariantItem<\/code> in the aggregation {@link #getVariantItems variantItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oVariantItem: sap.ui.comp.variants.VariantItem) -> Number","parameters":{"oVariantItem":"type: sap.ui.comp.variants.VariantItem, description: The variantItem whose index is looked for"}},"setPopoverTitle":{"!description":"Sets the title for view list.","!static":false,"!category":"function","!type":"fn(sTitle: String)","parameters":{"sTitle":"type: string, description: of the variant list"}},"!constructorDescription":"Constructor for a new <code>SmartVariantManagementMediator<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDefaultVariantKey defaultVariantKey} : string<\/li>\n<li>{@link #getDisplayTextForExecuteOnSelectionForStandardVariant displayTextForExecuteOnSelectionForStandardVariant} : string (default: \"\")<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getExecuteOnSelectionForStandardDefault executeOnSelectionForStandardDefault} : boolean (default: false)<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getInErrorState inErrorState} : boolean (default: false)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getModelName modelName} : string (default: \"\")<\/li>\n<li>{@link #getSelectionKey selectionKey} : string<\/li>\n<li>{@link #getShowCreateTile showCreateTile} : boolean (default: false)<\/li>\n<li>{@link #getShowExecuteOnSelection showExecuteOnSelection} : boolean (default: false)<\/li>\n<li>{@link #getShowSetAsDefault showSetAsDefault} : boolean (default: true)<\/li>\n<li>{@link #getShowShare showShare} : boolean (default: false)<\/li>\n<li>{@link #getStandardItemText standardItemText} : string<\/li>\n<li>{@link #getTitleStyle titleStyle} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getUseFavorites useFavorites} : boolean (default: false)<\/li>\n<li>{@link #getVariantCreationByUserAllowed variantCreationByUserAllowed} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getVariantItems variantItems} : sap.ui.comp.variants.VariantItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFor for} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:manage manage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","_getToolbarInteractive":{"!description":"Required by the {@link sap.m.IToolbarInteractiveControl} interface. Determines whether the control is interactive.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nCan be set to true or false depending on whether you want to enable or disable the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVariants":{"!description":"Gets all variants.","!static":false,"!category":"function","!type":"fn() -> Array"},"addFor":{"!description":"Adds some for into the association {@link #getFor for}.","!static":false,"!category":"function","!type":"fn(vFor: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"vFor":"type: sap.ui.core.ID|sap.ui.core.Control, description: The for to add; if empty, nothing is inserted"}},"getShowShare":{"!description":"Gets current value of property {@link #getShowShare showShare}.\n\nIndicates that the Public checkbox is visible in the Save As and the Manage Views dialogs. Selecting this checkbox allows you to share variants with other users. <b>Note<\/b>: this property is controlled by the SAPUI5 flexibility service.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireManage":{"!description":"Fires event {@link #event:manage manage} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUseFavorites":{"!description":"Gets current value of property {@link #getUseFavorites useFavorites}.\n\nIndicates that the 'Favorites' feature is used. Only variants marked as favorites will be displayed in the variant list.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSelectionKey":{"!description":"Gets current value of property {@link #getSelectionKey selectionKey}.\n\nThe key of the currently selected item.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditable":{"!description":"Sets a new value for property {@link #getEditable editable}.\n\nIndicates whether the buttons on My Views are visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"setShowSetAsDefault":{"!description":"Sets a new value for property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates whether the functionality of setting a default variant is enabled. The Default column in Manage Views and the Set as Default checkbox in Save View will be disabled if set to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSetAsDefault?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bShowSetAsDefault":"type: boolean, description: New value for property <code>showSetAsDefault<\/code>"}},"setModelName":{"!description":"Sets a new value for property {@link #getModelName modelName}.\n\nThe name of the model containing the data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sModelName?: String) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"sModelName":"type: string, description: New value for property <code>modelName<\/code>"}},"detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:save save} event of this <code>sap.ui.comp.smartvariants.SmartVariantManagementMediator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getCurrentVariantKey":{"!description":"Gets the currently selected variant key.","!static":false,"!category":"function","!type":"fn() -> String | null"},"getVariantCreationByUserAllowed":{"!description":"Gets current value of property {@link #getVariantCreationByUserAllowed variantCreationByUserAllowed}.\n\nIndicates that end users are allowed to create variants <b>Note<\/b>: this property is controlled by the SAPUI5 flexibility service.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllFor":{"!description":"Removes all the controls in the association named {@link #getFor for}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setInErrorState":{"!description":"Sets a new value for property {@link #getInErrorState inErrorState}.\n\nIndicates whether the control is in error state. If set to <code>true<\/code>, an error message will be displayed when the variant is opened.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInErrorState?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bInErrorState":"type: boolean, description: New value for property <code>inErrorState<\/code>"}},"setVariantCreationByUserAllowed":{"!description":"Sets a new value for property {@link #getVariantCreationByUserAllowed variantCreationByUserAllowed}.\n\nIndicates that end users are allowed to create variants <b>Note<\/b>: this property is controlled by the SAPUI5 flexibility service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVariantCreationByUserAllowed?: Boolean) -> sap.ui.comp.smartvariants.SmartVariantManagementMediator","parameters":{"bVariantCreationByUserAllowed":"type: boolean, description: New value for property <code>variantCreationByUserAllowed<\/code>"}}},"sap.ui.comp.IFormGroupElement":{"!description":"Marker interface for SmartForm GroupElements.","!module":"sap/ui/comp/library","!category":"static class"},"sap.ui.comp.smartfilterbar.ControlConfiguration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.ControlConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.config.ControlConfigurationBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.comp.smartfilterbar.ControlConfiguration"},"sap.ui.comp.smartmicrochart.SmartRadialMicroChart":{"!description":"The SmartRadialMicroChart control creates a <code>sap.suite.ui.microchart.RadialMicroChart<\/code> based on OData metadata and the configuration specified by <code>mSettings<\/code>. The entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and annotation information from the given default OData model. Based on this, the RadialMicroChart UI is created. <br> <b><i>Note:<\/i><\/b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartRadialMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smartmicrochart.SmartRadialMicroChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmicrochart.SmartRadialMicroChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new sap.ui.comp.smartmicrochart.SmartRadialMicroChart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFreeText freeText} : (sap.ui.core.ID | sap.m.Label)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.comp.smartmicrochart.SmartMicroChartBase#constructor sap.ui.comp.smartmicrochart.SmartMicroChartBase}\ncan be used as well.","!module":"sap/ui/comp/smartmicrochart/SmartRadialMicroChart","getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"The SmartRadialMicroChart control creates a <code>sap.suite.ui.microchart.RadialMicroChart<\/code> based on OData metadata and the configuration specified by <code>mSettings<\/code>. The entitySet attribute must be specified to use the control. This attribute is used to fetch metadata and annotation information from the given default OData model. Based on this, the RadialMicroChart UI is created. <br> <b><i>Note:<\/i><\/b><br> Most of the attributes/properties are not dynamic and cannot be changed once the control has been initialized.","getFreeText":{"!description":"ID of the element which is the current target of the association {@link #getFreeText freeText}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!proto":"sap.ui.comp.smartmicrochart.SmartMicroChartBase","!category":"class","setFreeText":{"!description":"Sets the associated {@link #getFreeText freeText}.","!static":false,"!category":"function","!type":"fn(oFreeText: sap.ui.core.ID | sap.m.Label) -> sap.ui.comp.smartmicrochart.SmartRadialMicroChart","parameters":{"oFreeText":"type: sap.ui.core.ID|sap.m.Label, description: ID of an element which becomes the new target of this freeText association; alternatively, an element instance may be given"}}},"sap.ui.comp.smartmultiedit.Container":{"!description":"The SmartMultiEdit.Container control provides a layout for the smart multi edit fields ({@link sap.ui.comp.smartmultiedit.Field}) it includes and enables them to access the updated binding contexts.","getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name to fetch metadata for. This entity set should have <code>sap:creatable<\/code> annotation set to <code>true<\/code> as this control needs to create an entry internally for a short period of time.<br> Please note that this is not a dynamic SAP UI5 property: setting it twice will not result in an update of the property.","!static":false,"!category":"function","!type":"fn() -> String"},"setEntitySet":{"!description":"Sets the entity set to read the properties from. Setting this value twice will not result in an update of the underlining components.","!static":false,"!category":"function","!type":"fn(entitySet: String) -> sap.ui.comp.smartmultiedit.Container","parameters":{"entitySet":"type: string, description: Entity set to use."}},"getAllUpdatedContexts":{"!description":"Provides updated objects, including the values of all {@link sap.ui.comp.smartmultiedit.Field} instances in the <code>layout<\/code> aggregation.<br><br> The function returns a Promise that is resolved when each {@link sap.ui.model.Context} in the <code>contexts<\/code> property is copied and updated. The fulfilled function is called with an array that contains an object for each context in the <code>contexts<\/code> property.<br> Each object in this array contains: <ul> <li>A <code>context<\/code> property that corresponds to the respective context.<\/li> <li>A <code>data<\/code> property that contains the updated data object.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn(merge?: Boolean) -> Promise<sap.ui.model.Context>","parameters":{"merge":"type: boolean, description: If true, the returned data structure includes all entity set properties per context."}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartmultiedit.Container.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContexts":{"!description":"Sets the contexts to be updated. These contexts are required for offering possible values and are also used by the {@link sap.ui.comp.smartmultiedit.Container#getAllUpdatedContexts} method.","!static":false,"!category":"function","!type":"fn(contexts: [sap.ui.model.Context]) -> sap.ui.comp.smartmultiedit.Container","parameters":{"contexts":"type: sap.ui.model.Context[], description: Contexts to be used. This property must be an array."}},"!proto":"sap.ui.core.Control","!category":"class","indexField":{"!description":"Explicitly pushes the smart multi edit container's ({@link sap.ui.comp.smartmultiedit.Container}) custom data to the specified field ({@link sap.ui.comp.smartmultiedit.Field}). Can be useful when adding fields to a container after it has already been rendered.","!static":false,"!category":"function","!type":"fn(oField: sap.ui.comp.smartmultiedit.Field)","parameters":{"oField":"type: sap.ui.comp.smartmultiedit.Field, description: {@link sap.ui.comp.smartmultiedit.Field} to push the custom data to."}},"setLayout":{"!description":"Sets the layout to use.","!static":false,"!category":"function","!type":"fn(oSmartForm: sap.ui.comp.smartmultiedit.Field) -> sap.ui.comp.smartmultiedit.Container","parameters":{"oSmartForm":"type: sap.ui.comp.smartmultiedit.Field, description: Smart form with the layout."}},"getErroneousFields":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.61.0 replaced by <code>getErroneousFieldsAndTokens<\/code><br>Collects all fields that have currently client errors.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.smartmultiedit.Field]"},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmultiedit.Container with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"destroyLayout":{"!description":"Destroys the layout in the aggregation {@link #getLayout layout}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartmultiedit.Container"},"getErroneousFieldsAndTokens":{"!description":"Collects all fields that currently have client errors.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getLayout":{"!description":"Gets content of aggregation {@link #getLayout layout}.\n\nThe form that contains smart multi edit fields ({@link sap.ui.comp.smartmultiedit.Field} controls).","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartform.SmartForm"},"!constructorDescription":"Constructor for a new <code>sap.ui.comp.smartmultiedit.Container<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getContexts contexts} : Array.<sap.ui.model.Context> (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLayout layout} : sap.ui.comp.smartform.SmartForm (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getContexts":{"!description":"Gets current value of property {@link #getContexts contexts}.\n\nThe binding contexts relevant to this mass editing operation.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.model.Context]"},"getFields":{"!description":"Collects all instances of {@link sap.ui.comp.smartmultiedit.Field} and/or {@link sap.ui.core.Control} scattered across the smart form ({@link sap.ui.comp.smartform.SmartForm}) layout.","!static":false,"!category":"function","!type":"fn(bFetchAllControls: Boolean) -> Array","parameters":{"bFetchAllControls":"type: boolean, description: A boolean indicating whether or not to include {@link sap.ui.core.Control} in resultant array. By default or if it is set to false, only instances of {@link sap.ui.comp.smartmultiedit.Field} are included in resultant array."}},"!module":"sap/ui/comp/smartmultiedit/Container","!helpDescription":"The SmartMultiEdit.Container control provides a layout for the smart multi edit fields ({@link sap.ui.comp.smartmultiedit.Field}) it includes and enables them to access the updated binding contexts."},"sap.ui.comp.navpopover":{"highlightAccKeysRef":{"!description":"Indicates whether the access keys ref of the control should be highlighted. NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"validateUrl":{"!description":"Defines whether the link target URI should be validated.\n\nIf validation fails, the value of the <code>href<\/code> property will still be set, but will not be applied to the DOM.\n\n<b>Note:<\/b> Additional URLs are allowed through {@link module:sap/base/security/URLListValidator URLListValidator}.","!category":"enum","!type":"Boolean"},"navigationTargetsObtainedCallback":{"!description":"Function that is called when the navigation targets provided by the SAP Fiori launchpad are obtained. The function is called with one <code>oNavigationTargets<\/code> parameter of type {@link sap.ui.comp.navpopover.NavigationTargets}. This function has to return a <code>Promise<\/code> resolving into an <code>Object<\/code> of type {@link sap.ui.comp.navpopover.NavigationTargets}. The provided <code>oNavigationTargets<\/code> can be manipulated in this callback before being returned to the <code>NavigationPopoverHandler<\/code>. The <code>Popover<\/code> will open after the <code>Promise<\/code> has been resolved. This function replaces the <code>navigationTargetsObtained<\/code> event. The event handling is ignored if this callback is set.","!category":"enum","!type":"fn()"},"availableActionsPersonalizationText":{"!description":"Determines the text of personalization link. If this property is set to some string, choosing the personalization link will trigger the <code>availableActionsPersonalizationPress<\/code> event. If this property is not set, the personalization link is not shown.","!category":"enum","!type":"String"},"contactAnnotationPath":{"!description":"Navigation property that points from the current to the related entity type where the com.sap.vocabularies.Communication.v1.Contact annotation is defined, for example, <code>'to_Supplier'<\/code>. An empty string means that the related entity type is the current one.","!category":"enum","!type":"String"},"emptyIndicatorMode":{"!description":"Specifies if an empty indicator should be displayed when there is no text.","!category":"enum","!type":"sap.m.EmptyIndicatorMode"},"offsetX":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetX.","!category":"enum","!type":"Number"},"accessibleRole":{"!description":"Describes the accessibility role of the link:<ul> <li><code>LinkAccessibleRole.Default<\/code> - a navigation is expected to the location given in <code>href<\/code> property<\/li> <li><code>LinkAccessibleRole.Button<\/code> - there will be <code>role<\/code> attribute with value \"Button\" rendered. In this scenario the <code>href<\/code> property value shouldn't be set as navigation isn't expected to occur.<\/li><\/ul>","!category":"enum","!type":"sap.m.LinkAccessibleRole"},"uom":{"!description":"Additionally to the <code>text<\/code> property the Unit of Measure can be displayed.","!category":"enum","!type":"String"},"offsetY":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetY.","!category":"enum","!type":"Number"},"accesskey":{"!description":"Indicates which keyboard key should be pressed to focus the access key ref NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"mapFieldToSemanticObject":{"!description":"If set to <code>false<\/code>, the SmartLink control will not replace its field name with the according <code>semanticObject<\/code> property during the calculation of the semantic attributes. This enables the usage of several SmartLink controls on the same semantic object.","!category":"enum","!type":"Boolean"},"SmartLink":"sap.ui.comp.navpopover.SmartLink_obj","rel":{"!description":"Specifies the value of the HTML <code>rel<\/code> attribute.\n\n<b>Note:<\/b> A default value of <code>noopener noreferrer<\/code> is set only to links that have a cross-origin URL and a specified <code>target<\/code> with value other than <code>_self<\/code>.","!category":"enum","!type":"String"},"text":{"!description":"Defines the displayed link text.","!category":"enum","!type":"String"},"href":{"!description":"Defines the link target URI. Supports standard hyperlink behavior. <b>Note:<\/b> Don't set <code>href<\/code> property if an action should be triggered by the link. Instead set <code>accessibleRole<\/code> property to <code>LinkAccessibleRole.Button<\/code> and register a <code>press<\/code> event handler.","!category":"enum","!type":"sap.ui.core.URI"},"press":{"!description":"Callback for <code>press<\/code> event.","!category":"enum","!type":"Object"},"modal":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#modal.","!category":"enum","!type":"Boolean"},"contactAnnotationPaths":{"!description":"Navigation property that points from the current to the related entity type where the <code>com.sap.vocabularies.Communication.v1.Contact<\/code> annotation is defined, for example, <code> '\\{\"Supplier\":\"to_Supplier\", \"CompanyName\":\"to_Company\"\\}' <\/code>. An empty string means that the related entity type is the current one.","!category":"enum","!type":"Object"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The name of the entity set used. If <code>entitySet<\/code> has not been defined, the SemanticObjectController tries to retrieve the name from its parents. <b>Note:<\/b> This is not a dynamic UI5 property.","!category":"enum","!type":"String"},"textAlign":{"!description":"Determines the horizontal alignment of the text.","!category":"enum","!type":"sap.ui.core.TextAlign"},"SemanticObjectController":"sap.ui.comp.navpopover.SemanticObjectController_obj","initiallyVisible":{"!description":"Determines the initial visibility of the <code>LinkItem<\/code>. If set to <code>true<\/code>, the item will appear on the <code>Popover<\/code> without any personalization.","!category":"enum","!type":"Boolean"},"wrapping":{"!description":"Determines whether the link text is allowed to wrap when there is no sufficient space.","!category":"enum","!type":"Boolean"},"isSuperiorAction":{"!description":"Marker for superior action.","!category":"enum","!type":"Boolean"},"placement":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#placement.","!category":"enum","!type":"sap.m.PlacementType"},"semanticObjectController":{"!description":"The semantic object controller controls events for several SmartLink controls. If the controller is not set manually, it tries to find a SemanticObjectController in its parent hierarchy.","!category":"enum","!type":"Object"},"internalHref":{"!description":"Destination link for a navigation operation in internal format provided by the SAP Fiori launchpad (used when navigation happens programmatically). Only for internal use","!category":"enum","!type":"String"},"NavigationPopover":"sap.ui.comp.navpopover.NavigationPopover_obj","enableAvailableActionsPersonalization":{"!description":"Determines whether the personalization link is shown inside the NavigationPopover control.","!category":"enum","!type":"Boolean"},"replaceSmartLinkNavigationTargetsObtained":{"!description":"Determines if the <code>navigationTargetsObtained<\/code> event handling of the <code>SmartLink<\/code> should be replaced when this <code>SemanticObjectController<\/code> is set as <code>SemanticObjectController<\/code> on the SmartLink.","!category":"enum","!type":"Boolean"},"additionalSemanticObjects":{"!description":"Semantic object names which can be used additional to the default <code>semanticObject<\/code> property in order to get navigation targets links.","!category":"enum","!type":"[String]"},"fieldName":{"!description":"The metadata field name for this SmartLink control.","!category":"enum","!type":"String"},"horizontalScrolling":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#horizontalScrolling and sap.m.Dialog#horizontalScrolling","!category":"enum","!type":"Boolean"},"beforeNavigationCallback":{"!description":"Function that is called before the actual navigation happens. This function has to return a promise resolving into a Boolean value for which the navigation will wait. If the Boolean value is <code>true<\/code>, the navigation will be processed. The <code>beforeNavigationCallback(oNavigationInfo)<\/code> parameter contains the following data: <ul> <li>{String} text: Text of the navigation intent<\/li> <li>{String} href: HREF of the navigation intent<\/li> <li>{String} originalId: ID of the control that fires the navigation intent<\/li> <li>{String} semanticObject: Name of the <code>SemanticObject<\/code> of the navigation intent<\/li> <li>{Object} semanticAttributes: Object containing the <code>SemanticAttributes<\/code> of the navigation intent<\/li> <\/ul>","!category":"enum","!type":"fn()"},"ariaHasPopup":{"!description":"Specifies the value of the <code>aria-haspopup<\/code> attribute\n\nIf the value is <code>None<\/code>, the attribute will not be rendered. Otherwise it will be rendered according to the selected value.\n\nNOTE: Use this property only when a link is related to a popover/popup. The value needs to be equal to the main/root role of the popup - e.g. dialog, menu or list (examples: if you have dialog -> dialog, if you have menu -> menu; if you have list -> list; if you have dialog containing a list -> dialog). Do not use it, if you open a standard sap.m.Dialog, MessageBox or other type of dialogs displayed as on overlay over the application.","!category":"enum","!type":"sap.ui.core.aria.HasPopup"},"visibleChangedByUser":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.122 The SmartLink now uses information stored on {@link sap.ui.mdc.link.PanelItem}<br>Describes whether the visibility is changed by end user or not.","!category":"enum","!type":"Boolean"},"icon":{"!description":"Defines the icon to be displayed as graphical element in the beginning of the <code>Link<\/code>. It can be an icon from the icon font. <b>Note:<\/b> Usage of icon-only link is not supported, the link must always have a text. <b>Note:<\/b> We recommend using аn icon in the beginning or the end only, and always with text. <b>Note:<\/b> Using an image instead of icon is not supported.","!category":"enum","!type":"sap.ui.core.URI"},"description":{"!description":"Defines the additional text of the item.","!category":"enum","!type":"String"},"!category":"namespace","title":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#title and sap.m.Dialog#title","!category":"enum","!type":"String"},"enabled":{"!description":"Determines whether the link can be triggered by the user.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the parent DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"mainNavigationId":{"!description":"Sets the description of the main navigation link. If <code>mainNavigation<\/code> also contains an href description, then <code>mainNavigationId<\/code> is displayed. If <code>mainNavigationId<\/code> is set to an empty string <code>''<\/code>, neither description nor subtitle are displayed.","!category":"enum","!type":"String"},"semanticObjectLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 Title section with <code>semanticObjectLabel<\/code> has been removed due to new UI design<br>Shown label of semantic object.","!category":"enum","!type":"String"},"contentWidth":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#contentWidth and sap.m.Dialog#contentWidth","!category":"enum","!type":"sap.ui.core.CSSSize"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"ignoredFields":{"!description":"Comma-separated list of fields that must not be displayed as links.","!category":"enum","!type":"String"},"emphasized":{"!description":"Emphasized links look visually more important than regular links.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"showCloseButton":{"!description":"Determines if a close button should be inserted into the dialog's header dynamically to close the dialog. This property only takes effect on phone. <b>Note:<\/b> The close button could be placed only in a sap.m.Bar if a sap.m.Toolbar is passed as a header - the property will not take effect.","!category":"enum","!type":"Boolean"},"ignoreLinkRendering":{"!description":"If set to <code>true<\/code>, the SmartLink control will render the <code>innerControl<\/code> or the control provided by <code>createControlCallback<\/code> instead of the actual link. This is used for example by the SemanticObjectController if this SmartLink is listed in its <code>ignoredFields<\/code> or no navigation targets were found during prefetch.","!category":"enum","!type":"Boolean"},"endIcon":{"!description":"Defines the icon to be displayed as graphical element in the end of the <code>Link<\/code>. It can be an icon from the icon font. <b>Note:<\/b> Usage of icon-only link is not supported, the link must always have a text. <b>Note:<\/b> We recommend using аn icon in the beginning or the end only, and always with text. <b>Note:<\/b> Using an image instead of icon is not supported.","!category":"enum","!type":"sap.ui.core.URI"},"semanticObject":{"!description":"Name of semantic object which is used to fill the navigation popover. <b>Note<\/b>: Setting a value triggers an asynchronous determination, so the effect can be delayed.","!category":"enum","!type":"String"},"key":{"!description":"Unique key of the <code>LinkItem<\/code> that is used for personalization.","!category":"enum","!type":"String"},"createControlCallback":{"!description":"Function that enables the SmartLink control to create an alternative control, which is displayed if no navigation targets are available. The function has no parameters and has to return an instance of sap.ui.core.Control.","!category":"enum","!type":"fn()"},"LinkData":"sap.ui.comp.navpopover.LinkData_obj","fieldSemanticObjectMap":{"!description":"Maps the fields to the related semantic objects. When accessing this property for the first time, the mapping will be calculated from the metadata within the provided model.","!category":"enum","!type":"Object"},"verticalScrolling":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#verticalScrolling and sap.m.Dialog#verticalScrolling","!category":"enum","!type":"Boolean"},"resizable":{"!description":"Whether resize option is enabled.","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#showHeader and sap.m.Dialog#showHeader","!category":"enum","!type":"Boolean"},"showArrow":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#showArrow.","!category":"enum","!type":"Boolean"},"titleAlignment":{"!description":"Specifies the Title alignment (theme specific). If set to <code>TitleAlignment.Auto<\/code>, the Title will be aligned as it is set in the theme (if not set, the default value is <code>center<\/code>); Other possible values are <code>TitleAlignment.Start<\/code> (left or right depending on LTR/RTL), and <code>TitleAlignment.Center<\/code> (centered)","!category":"enum","!type":"sap.m.TitleAlignment"},"appStateKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>appStateKey<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>The application state key passed to retrieve the navigation targets.","!category":"enum","!type":"String"},"SmartLinkFieldInfo":{"!description":"{@link sap.ui.mdc.Link} implementation used inside the <code>SmartLink<\/code> to reduce complexity and duplicated housekeeping.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.","!module":"sap/ui/comp/navpopover/SmartLinkFieldInfo","!category":"enum","!type":"String"},"forceLinkRendering":{"!description":"If set to true, the <code>SmartLink<\/code> control is rendered as a link even if <code>contactAnnotationPath<\/code> is not set and navigation targets do not exist. Setting this property to <code>true<\/code> allows the application, for example, to modify the <code>SmartLink<\/code> control in the event handler, after the user has clicked on a link and the registered event handler has been called.\n\n<b>Note:<\/b> The <code>ignoreLinkRendering<\/code> property and the <code>ignoredFields<\/code> property of the associated <code>SemanticObjectController<\/code> take precedence over <code>forceLinkRendering<\/code>.","!category":"enum","!type":"Boolean"},"target":{"!description":"Specifies a target where the linked content will open.\n\nOptions are the standard values for window.open() supported by browsers: <code>_self<\/code>, <code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively, a frame name can be entered. This property is only used when the <code>href<\/code> property is set.","!category":"enum","!type":"String"},"contentHeight":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#contentHeight and sap.m.Dialog#contentHeight","!category":"enum","!type":"sap.ui.core.CSSSize"},"subtle":{"!description":"Subtle links look more like standard text than like links. They should only be used to help with visual hierarchy between large data lists of important and less important links. Subtle links should not be used in any other use case.","!category":"enum","!type":"Boolean"},"prefetchNavigationTargets":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42.0 The property <code>prefetchNavigationTargets<\/code> is obsolete as navigation targets are determined automatically. The SmartLink controls are re-rendered as soon as the asynchronous determination of navigation targets has been completed.<br>If set to <code>true<\/code>, the SemanticObjectController will retrieve all navigation targets once and will disable links for which no targets were found. Setting this value to <code>true<\/code> will trigger an additional roundtrip.","!category":"enum","!type":"Boolean"},"width":{"!description":"Determines the width of the link (CSS-size such as % or px). When it is set, this is the exact size. When left blank, the text defines the size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"semanticAttributes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>semanticAttributes<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>Describes the semantic attributes. The attribute has to be a map.","!category":"enum","!type":"Object"},"NavigationPopoverHandler":"sap.ui.comp.navpopover.NavigationPopoverHandler_obj","semanticObjectName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 The property <code>semanticObjectName<\/code> is obsolete as target determination is no longer done by NavigationPopover. Instead the NavigationPopoverHandler is responsible for target determination.<br>The name of the semantic object.","!category":"enum","!type":"String"}},"sap.ui.comp.smartfilterbar.SFBMultiComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartfilterbar.SFBMultiComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiComboBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.comp.smartfilterbar.SFBMultiComboBox"},"sap.ui.comp.smartmicrochart":{"SmartMicroChart":"sap.ui.comp.smartmicrochart.SmartMicroChart_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"SmartStackedBarMicroChart":"sap.ui.comp.smartmicrochart.SmartStackedBarMicroChart_obj","!category":"namespace","SmartColumnMicroChart":"sap.ui.comp.smartmicrochart.SmartColumnMicroChart_obj","showLabel":{"!description":"Determines if any label is shown or not.","!category":"enum","!type":"Boolean"},"isResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.62 the concept has been discarded.<br>If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.","!category":"enum","!type":"Boolean"},"SmartHarveyBallMicroChart":"sap.ui.comp.smartmicrochart.SmartHarveyBallMicroChart_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"SmartRadialMicroChart":"sap.ui.comp.smartmicrochart.SmartRadialMicroChart_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"chartBindingPath":{"!description":"This property can be used to specify a relative path (without '/') to an entity set (not a single entity) that is used during the binding of the chart.<br> For example, it can be a navigation property that will be added to the context path.<br> If not specified, the <code>entitySet<\/code> property is used instead.","!category":"enum","!type":"String"},"SmartBulletMicroChart":"sap.ui.comp.smartmicrochart.SmartBulletMicroChart_obj","SmartLineMicroChart":"sap.ui.comp.smartmicrochart.SmartLineMicroChart_obj","height":{"!description":"The height of the chart. Overrides the height specified in the <code>size<\/code> property.","!category":"enum","!type":"sap.ui.core.CSSSize"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"entitySet":{"!description":"The OData entity set bound to the smart line micro chart.<br> This entity set is used to pull data into the micro chart and create its internal representation.<br> Please note that this property cannot be updated dynamically.","!category":"enum","!type":"String"},"SmartDeltaMicroChart":"sap.ui.comp.smartmicrochart.SmartDeltaMicroChart_obj","SmartComparisonMicroChart":"sap.ui.comp.smartmicrochart.SmartComparisonMicroChart_obj","SmartMicroChartBase":"sap.ui.comp.smartmicrochart.SmartMicroChartBase_obj","size":{"!description":"The size of the microchart. If not set, the default size is applied based on the size of the device tile. Responsive size takes width and height of the parent container where the micro chart is included.","!category":"enum","!type":"sap.m.Size"},"enableAutoBinding":{"!description":"If set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) property.","!category":"enum","!type":"Boolean"},"chartType":{"!description":"Specifies the type of chart. Note that this property is read-only.","!category":"enum","!type":"String"},"width":{"!description":"The width of the chart. Overrides the width specified in the <code>size<\/code> property.","!category":"enum","!type":"sap.ui.core.CSSSize"},"SmartAreaMicroChart":"sap.ui.comp.smartmicrochart.SmartAreaMicroChart_obj"},"sap.ui.comp.smartlist.SmartList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartlist.SmartList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartlist.SmartList"},"sap.ui.comp.smartmicrochart.SmartMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartmicrochart.SmartMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.comp.smartmicrochart.SmartMicroChart"},"sap.ui.comp.smarttable.SmartTable":{"rebindTable":{"!description":"This can be used to trigger binding on the table used in the SmartTable","!static":false,"!category":"function","!type":"fn(bForceRebind: Boolean)","parameters":{"bForceRebind":"type: boolean, description: force bind call to be triggered on the inner table"}},"fireEditToggled":{"!description":"Fires event {@link #event:editToggled editToggled} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setRequestAtLeastFields":{"!description":"Sets a new value for property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nComma-separated value of fields that must be always requested from the backend<br> This property is mainly meant to be used when there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:<\/b><br> For <code>AnalyticalTable<\/code> (supported since 1.54), the following restrictions apply: <ul> <li>The property name(s) must not point to a new dimension or a measure.<\/li> <li>The property name(s) must not point to a navigationProperty/association path, as this might not supported by analytical services.<\/li> <\/ul> Please ensure that you do not add spaces or special characters as no validation is done for this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRequestAtLeastFields?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sRequestAtLeastFields":"type: string, description: New value for property <code>requestAtLeastFields<\/code>"}},"fireAfterVariantInitialise":{"!description":"Fires event {@link #event:afterVariantInitialise afterVariantInitialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAllFilterControlConfiguration":{"!description":"Removes all the controls from the aggregation {@link #getFilterControlConfiguration filterControlConfiguration}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.config.FilterControlConfiguration]"},"getNoData":{"!description":"Gets content of aggregation {@link #getNoData noData}.\n\nThe value for the noData aggregation can be either a string value or a control instance.<br> The control is shown, in case there is no data for the Table available. In case of a string value this will simply replace the no data text.<br> Currently the Responsive Table only supports string values.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control | String"},"getUseInfoToolbar":{"!description":"Gets current value of property {@link #getUseInfoToolbar useInfoToolbar}.\n\nShows an info toolbar.<br> Filters that are applied using the table personalization dialog are shown in the info toolbar.<br> <b>Note:<\/b><br> <ul> <li>The default value for the property is <code>Auto<\/code>, which means that the info toolbar is shown by default if table type is <code>ResponsiveTable<\/code>.<\/li> <li>The info toolbar is hidden if the property is set to <code>Off<\/code>.<\/li> <li>The info toolbar is visible if the property is set to <code>On<\/code>. Currently the info toolbar is only available for the table type <code>ResponsiveTable<\/code>.<\/li> <li>If multiple filters are applied to the same column, then the info toolbar contains the column name only once.<\/li> <li>In case there is a custom info toolbar used for the responsive table control, then the property must be set to <code>Off<\/code>. Otherwise, an error is logged in the browser console.<\/li> <\/ul>\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.InfoToolbarBehavior"},"fireFullScreenToggled":{"!description":"Fires event {@link #event:fullScreenToggled fullScreenToggled} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in table\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"openPersonalisationDialog":{"!description":"Opens the desired panel of the personalization dialog.<br> <i>Note:<\/i> Calling this for panels that are globally hidden (E.g. manually by the application, or due to unavailability of functionality) leads to an empty dialog being shown.","!static":false,"!category":"function","!type":"fn(sPanel: String)","parameters":{"sPanel":"type: string, description: The desired panel; the value is either \"Columns\", \"Sort\", \"Filter\" or \"Group\""}},"getCustomizeConfig":{"!description":"Gets current value of property {@link #getCustomizeConfig customizeConfig}.\n\nProvides customization to the columns/cell templates generated by the <code>SmartTable<\/code> control.\n\nList of supported settings for the <code>customizeConfig<\/code> property: <ul> <li><code>textInEditModeSource<\/code>: For more information, see {@link sap.ui.comp.smartfield.SmartField#setTextInEditModeSource}<\/li> <li><code>insertIgnoreRestrictions<\/code>: The <code>customData<\/code> setting for the <code>sap.ui.comp.smartfield.SmartField<\/code> control. Supported as of version 1.103.<\/li> <li><code>autoColumnWidth<\/code>: This property can be used to influence the column width calculation for columns generated by the <code>SmartTable<\/code> control itself. The supported configuration settings are <code>truncateLabel<\/code>, <code>min<\/code>, <code>max<\/code>, and <code>gap<\/code>. Supported as of version 1.108. For more information, see {@link sap.ui.comp.smarttable.SmartTable#getEnableAutoColumnWidth}.<\/li> <li><code>clientSideMandatoryCheck<\/code>: For more information, see {@link sap.ui.comp.smartfield.SmartField#setClientSideMandatoryCheck}. Supported as of version 1.111<\/li> <\/ul> <br /> <i>Examples for the <code>customizeConfig<\/code> property to change the <code>textInEditModeSource<\/code> for the default <code>smartField<\/code><\/i> <pre>\n&lt;!-- Sets the <code>textInEditModeSource<\/code> property of all the <code>SmartField<\/code> controls to <code<>ValueList<\/code> --&gt;\n&lt;SmartTable customizeConfig=\"{'textInEditModeSource': {'*': 'ValueList'}}\" &gt;\n<\/pre> <pre>\n&lt;!-- Sets the <code>textInEditModeSource<\/code> property of the <code>smartField<\/code> with path \"Bukrs\" to <code>NavigationProperty<\/code> and\nothers to <code<>ValueList<\/code>  --&gt;\n&lt;SmartTable customizeConfig=\"{'textInEditModeSource': {'*': 'ValueList','Bukrs':'NavigationProperty'}}\" &gt;\n<\/pre> <pre>\n&lt;!-- Sets the <code>autoColumnWidth<\/code> property of all the columns --&gt;\n&lt;SmartTable customizeConfig=\"{'autoColumnWidth': {'*': {'min': 5, 'max': 10, 'gap': 2, 'truncateLabel': false}}}\" &gt;\n<\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"detachAfterVariantApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireAfterVariantApply":{"!description":"Fires event {@link #event:afterVariantApply afterVariantApply} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"applyVariant":{"!description":"Interface function for SmartVariantManagement control, sets the current variant. <b>Note:<\/b> If an application default variant exists, then all other variants are extended from this application default variant.","!static":false,"!category":"function","!type":"fn(oVariantJSON: Object, sContext: String)","parameters":{"oVariantJSON":"type: object, description: The variants json","sContext":"type: string, description: Describes the context in which the apply was executed"}},"attachPaste":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:paste paste} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired when pasting is triggered.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDeactivatedColumns":{"!description":"Returns the deactivated column keys.\n\nSee {@link sap.ui.comp.smarttable.SmartTable#deactivateColumns}","!static":false,"!category":"function","!type":"fn() -> [String]"},"getCustomToolbar":{"!description":"Gets content of aggregation {@link #getCustomToolbar customToolbar}.\n\nA toolbar that can be added by the user to define their own custom buttons, icons, etc. If this is specified, the SmartTable control does not create an additional toolbar, but makes use of this one.<br> <b>Note:<\/b><br> The CSS class sapMTBHeader-CTX is applied on the given toolbar.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"getSemanticKeyAdditionalControl":{"!description":"Gets content of aggregation {@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl}.\n\nAllows users to specify an additional control that will be added to a VBox for the first semantic key field.<br> <b>Note:<\/b><br> This property is not meant for public use.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachBeforeRebindTable":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeRebindTable beforeRebindTable} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!description":"The <code>SmartTable<\/code> control creates a table based on OData metadata and the configuration specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch fields from OData metadata, from which columns will be generated; it can also be used to fetch the actual table data.<br> Based on the tableType property, this control will render a standard, analytical, tree, or responsive table.<br>\n\n<b>Note:<\/b> <ul> <li>The <code>SmartTable<\/code> control supports the <code>Currency<\/code> and <code>Unit<\/code> customization referenced by the related <code>entitySet<\/code>. The requested code list is then used for formatting the <code>Currency<\/code> and <code>Unit<\/code> cell template. See {@link sap.ui.model.odata.v4.ODataMetaModel#requestCurrencyCodes} and {@link sap.ui.model.odata.v4.ODataMetaModel#requestUnitsOfMeasure} for more information.<\/li> <li>The OData types, such as {@link sap.ui.model.odata.type.Decimal}, {@link sap.ui.model.odata.type.Currency}, and {@link sap.ui.model.odata.type.Unit}, have the format option <code>preserveDecimals=true<\/code> by default, which preserves the decimals returned by the back end. The <code>SmartTable<\/code> control offers a global <code>customData<\/code> setting called <b><code>preserveDecimals<\/code><\/b> that can be used to configure the <code>preserveDecimals<\/code> format option. The default is <code>preserveDecimals=true<\/code> for the <code>customData<\/code>. This <code>customData<\/code> is then used for formatting the <code>Edm.Decimal<\/code> type as well as the <code>Currency<\/code> and <code>Unit<\/code> cell template. If the number of decimal digits is different from the values returned by the code list, then the decimal point alignment for the <code>Currency<\/code> and <code>Unit<\/code> values cannot be guaranteed.<\/li> <li>Cell data of type <code>string<\/code> containing whitespace characters are replaced with unicode characters to visualize the whitespaces on the UI. This is enabled by default.<\/li> <li>The <code>SmartTable<\/code> must not be cloned or used as a template. Doing this might cause issues with its behavior, personalization, or <code>VariantManagement<\/code>.<\/li> <\/ul>","fireBeforePaste":{"!description":"Fires event {@link #event:beforePaste beforePaste} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEditTogglable":{"!description":"Sets a new value for property {@link #getEditTogglable editTogglable}.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditTogglable?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEditTogglable":"type: boolean, description: New value for property <code>editTogglable<\/code>"}},"setUseInfoToolbar":{"!description":"Sets a new value for property {@link #getUseInfoToolbar useInfoToolbar}.\n\nShows an info toolbar.<br> Filters that are applied using the table personalization dialog are shown in the info toolbar.<br> <b>Note:<\/b><br> <ul> <li>The default value for the property is <code>Auto<\/code>, which means that the info toolbar is shown by default if table type is <code>ResponsiveTable<\/code>.<\/li> <li>The info toolbar is hidden if the property is set to <code>Off<\/code>.<\/li> <li>The info toolbar is visible if the property is set to <code>On<\/code>. Currently the info toolbar is only available for the table type <code>ResponsiveTable<\/code>.<\/li> <li>If multiple filters are applied to the same column, then the info toolbar contains the column name only once.<\/li> <li>In case there is a custom info toolbar used for the responsive table control, then the property must be set to <code>Off<\/code>. Otherwise, an error is logged in the browser console.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sUseInfoToolbar?: sap.ui.comp.smarttable.InfoToolbarBehavior) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sUseInfoToolbar":"type: sap.ui.comp.smarttable.InfoToolbarBehavior, description: New value for property <code>useInfoToolbar<\/code>"}},"setIgnoreFromPersonalisation":{"!description":"Sets a new value for property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nComma-separated value of fields that is not shown in the personalization dialog.<br> This property must only be used for use cases where a technical field/column is required to fetch some data from the backend but is hidden in the table personalization and on the UI.\n\n<b>Note:<\/b><br> <ul> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>Visible fields/columns cannot be included in this property as this is not supported by the <code>SmartTable<\/code> control.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoreFromPersonalisation?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sIgnoreFromPersonalisation":"type: string, description: New value for property <code>ignoreFromPersonalisation<\/code>"}},"getIgnoredFields":{"!description":"Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nComma-separated value of fields that must be ignored in the OData metadata by the <code>SmartTable<\/code> control.<br> The <code>SmartTable<\/code> control will not create built-in columns for the fields defined by this property and will not offer these fields in table personalization.\n\n<b>Note:<\/b><br> <ul> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> String"},"destroyNoData":{"!description":"Destroys the noData in the aggregation {@link #getNoData noData}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"getHeaderStyle":{"!description":"Gets current value of property {@link #getHeaderStyle headerStyle}.\n\nDefines style of the header. For more information, see {@link sap.m.Title#setTitle}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"fireShowOverlay":{"!description":"Fires event {@link #event:showOverlay showOverlay} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setSemanticKeyAdditionalControl":{"!description":"Sets the aggregated {@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl}.","!static":false,"!category":"function","!type":"fn(oSemanticKeyAdditionalControl: sap.ui.core.Control) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oSemanticKeyAdditionalControl":"type: sap.ui.core.Control, description: The semanticKeyAdditionalControl to set"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smarttable.SmartTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachDataReceived":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindTable<\/code> event to attach/listen to the binding \"events\" directly<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"exit":{"!description":"Cleans up the control","!static":false,"!category":"function","!type":"fn()"},"setNoData":{"!description":"Sets the aggregated {@link #getNoData noData}.","!static":false,"!category":"function","!type":"fn(vNoData: sap.ui.core.Control | String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"vNoData":"type: sap.ui.core.Control|string, description: The noData to set"}},"!module":"sap/ui/comp/smarttable/SmartTable","getTable":{"!description":"Returns the internally used table control. Depending on the concrete scenario, the return type is a <code>sap.m.Table<\/code>, <code>sap.ui.table.Table<\/code>, <code>sap.ui.table.TreeTable<\/code>, or <code>sap.ui.table.AnalyticalTable<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getInitiallyVisibleFields":{"!description":"Gets current value of property {@link #getInitiallyVisibleFields initiallyVisibleFields}.\n\nComma-separated value of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br> This property is mainly meant to be used when no LineItem annotation exists.<br> If you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and finally based on this property.<br> <b>Note:<\/b><br> <ul> <li>If both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<\/li> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> String"},"setUseVariantManagement":{"!description":"Sets a new value for property {@link #getUseVariantManagement useVariantManagement}.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseVariantManagement?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseVariantManagement":"type: boolean, description: New value for property <code>useVariantManagement<\/code>"}},"getShowFullScreenButton":{"!description":"Gets current value of property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSmartVariant":{"!description":"ID of the element which is the current target of the association {@link #getSmartVariant smartVariant}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getEnableExport":{"!description":"Gets current value of property {@link #getEnableExport enableExport}.\n\nEnables the export of data from the <code>SmartTable<\/code> control to another file, for example, a spreadsheet. If <code>exportType<\/code> is <code>sap.ui.comp.smarttable.ExportType.GW<\/code>, any <code>$expand<\/code> parameters are removed when sending the request to generate the file.<br> To use the export functionality, the {@link sap.ui.export} library is required.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnablePaste":{"!description":"Sets a new value for the <code>enablePaste<\/code> property.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bValue":"type: boolean, description: New value for property enablePaste"}},"deactivateColumns":{"!description":"Deactivates existing columns in the personalization dialog based on the provided column keys.<br> <i>Note:<\/i> The columns are set to invisible and excluded from all panels in the table personalization. Any existing sorting, filtering or grouping in the personalization dialog for such columns will no longer be taken into account.","!static":false,"!category":"function","!type":"fn(aColumnKeys: [String])","parameters":{"aColumnKeys":"type: string[]|null|undefined, description: An array of column keys by which the corresponding columns are deactivated. If <code>null<\/code> or <code>undefined<\/code> or an empty array is passed, no column is deactivated, and all previously deactivated columns will be reset"}},"setToolbarStyleClass":{"!description":"Sets a new value for property {@link #getToolbarStyleClass toolbarStyleClass}.\n\nA style class which is defined for the toolbar of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sToolbarStyleClass?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sToolbarStyleClass":"type: string, description: New value for property <code>toolbarStyleClass<\/code>"}},"fireDataReceived":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindTable<\/code> event to attach/listen to the binding \"events\" directly<br>Fires event {@link #event:dataReceived dataReceived} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setHeaderStyle":{"!description":"Sets the value for the <code>headerSty;e<\/code> property.","!static":false,"!category":"function","!type":"fn(sStyle: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sStyle":"type: string, description: The style that is set to the header"}},"getIgnoreFromPersonalisation":{"!description":"Gets current value of property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nComma-separated value of fields that is not shown in the personalization dialog.<br> This property must only be used for use cases where a technical field/column is required to fetch some data from the backend but is hidden in the table personalization and on the UI.\n\n<b>Note:<\/b><br> <ul> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>Visible fields/columns cannot be included in this property as this is not supported by the <code>SmartTable<\/code> control.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> String"},"attachBeforeRebindTable":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeRebindTable beforeRebindTable} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired just before the binding is being done.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEnablePaste":{"!description":"Gets current value of property {@link #getEnablePaste enablePaste}.\n\nDetermines whether the Paste button is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachShowOverlay":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired just before the overlay is being shown.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditTogglable":{"!description":"Gets current value of property {@link #getEditTogglable editTogglable}.\n\nSpecifies whether the editable property can be toggled via a button on the toolbar. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setInitialNoDataText":{"!description":"Sets a new value for property {@link #getInitialNoDataText initialNoDataText}.\n\nThe text shown initially before the control is bound and initialized. The special values <code>$FILTERBAR<\/code> or <code>$NO_FILTERBAR<\/code> can be specified to make the <code>SmartTable<\/code> control show the initial text as if the <code>SmartFilterBar<\/code> control were associated with it. If nothing is specified, the default behavior is to show the initial text based on whether the <code>SmartFilterBar<\/code> control is actually associated with the <code>SmartTable<\/code> control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitialNoDataText?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sInitialNoDataText":"type: string, description: New value for property <code>initialNoDataText<\/code>"}},"attachFieldChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:fieldChange fieldChange} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired when an editable field, created internally by the SmartTable control, is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getUseVariantManagement":{"!description":"Gets current value of property {@link #getUseVariantManagement useVariantManagement}.\n\nThe useVariantManagement attribute can be set to true or false depending on whether you want to use variants. As a prerequisite you need to specify the persistencyKey property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSemanticObjectController":{"!description":"Sets the aggregated {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: sap.ui.comp.navpopover.SemanticObjectController) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oSemanticObjectController":"type: sap.ui.comp.navpopover.SemanticObjectController, description: The semanticObjectController to set"}},"fireDataRequested":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindTable<\/code> event to attach/listen to the binding \"events\" directly<br>Fires event {@link #event:dataRequested dataRequested} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getRequestAtLeastFields":{"!description":"Gets current value of property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nComma-separated value of fields that must be always requested from the backend<br> This property is mainly meant to be used when there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:<\/b><br> For <code>AnalyticalTable<\/code> (supported since 1.54), the following restrictions apply: <ul> <li>The property name(s) must not point to a new dimension or a measure.<\/li> <li>The property name(s) must not point to a navigationProperty/association path, as this might not supported by analytical services.<\/li> <\/ul> Please ensure that you do not add spaces or special characters as no validation is done for this property.","!static":false,"!category":"function","!type":"fn() -> String"},"setCurrentVariantId":{"!description":"Set the current variant according to the sVariantId. In case an empty string or null or undefined was passed the STANDARD will be set. STANDARD will also be set, in case the passed sVariantId could not be found. In case neither a flexibility variant, nor the content for the standard variant could not be obtained, nor the personalisable control obtained nothing will be executed/changed","!static":false,"!category":"function","!type":"fn(sVariantId: String) -> Object","parameters":{"sVariantId":"type: string, description: id of the currently selected variant"}},"fireBeforeExport":{"!description":"Fires event {@link #event:beforeExport beforeExport} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUseExportToExcel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.100 replaced by <code>enableExport<\/code> property.<br>Gets current value of property {@link #getUseExportToExcel useExportToExcel}.\n\nCan be set to true or false depending on whether you want to export data to a spreadsheet application, for example Microsoft Excel.<br> <b>Note:<\/b><br> If <code>exportType<\/code> is <code>sap.ui.comp.smarttable.ExportType.GW<\/code>, any $expand parameters are removed when sending the request to generate the spreadsheet.<br> As of UI5 version 1.56: If <code>exportType<\/code> is <code>sap.ui.comp.smarttable.ExportType.UI5Client<\/code> and <code>TreeTable<\/code> is used, the <code>worksheet.hierarchyLevel<\/code> property (see {@link sap.ui.export.Spreadsheet}) is filled from the binding, if the relevant information is available there for exporting hierarchical data in the spreadsheet.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireUiStateChange":{"!description":"Fires event {@link #event:uiStateChange uiStateChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachFullScreenToggled":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getColumnClipboardSettings":{"!description":"Returns the clipboard settings for a column.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.table.Column | sap.m.Column) -> sap.m.plugins.CopyProvider.ColumnClipboardSettings","parameters":{"oColumn":"type: sap.ui.table.Column|sap.m.Column, description: The column for which to get the clipboard settings"}},"getToolbarStyleClass":{"!description":"Gets current value of property {@link #getToolbarStyleClass toolbarStyleClass}.\n\nA style class which is defined for the toolbar of the table.","!static":false,"!category":"function","!type":"fn() -> String"},"getUseOnlyOneSolidToolbar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 This property has no effect<br>Gets current value of property {@link #getUseOnlyOneSolidToolbar useOnlyOneSolidToolbar}.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid style.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowDetailsButton":{"!description":"Sets a new value for property {@link #getShowDetailsButton showDetailsButton}.\n\nControls the visibility of the Show / Hide Details button for the <code>ResponsiveTable<\/code> scenario.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area while the columns with <code>Low<\/code> importance are hidden. On mobile phones, the columns with <code>Medium<\/code> importance are also hidden. As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDetailsButton?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowDetailsButton":"type: boolean, description: New value for property <code>showDetailsButton<\/code>"}},"getVariantManagement":{"!description":"Returns the associated SmartVariantManagement control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.SmartVariantManagement"},"setEnableExport":{"!description":"Sets the <code>exportEnable<\/code> property that enables the export of data. The export type can be defined using the <code>exportType<\/code> property.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bValue":"type: boolean, description: New value for property enableExport"}},"setUseExportToExcel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.100 replaced by {@link #setEnableExport}.<br>Sets the <code>useExportToExcel<\/code> property which enables export of data. The export type can be defined using <code>exportType<\/code> property.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bValue":"type: boolean, description: New value for property useExportToExcel"}},"openDialogForKeyUser":{"!description":"Opens the View Settings Dialog for the UI adaptation. <br><b>Note:<\/b> This function must only be used internally during the UI adaptation.","!static":false,"!category":"function","!type":"fn(sStyleClass: String, fCallBack: fn()) -> Promise","parameters":{"sStyleClass":"type: string, description: indicating the ui adaption area","fCallBack":"type: function, description: will be executed, once the dialog closes."}},"setCustomToolbar":{"!description":"Sets the aggregated {@link #getCustomToolbar customToolbar}.","!static":false,"!category":"function","!type":"fn(oCustomToolbar: sap.m.Toolbar) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oCustomToolbar":"type: sap.m.Toolbar, description: The customToolbar to set"}},"fireAfterVariantSave":{"!description":"Fires event {@link #event:afterVariantSave afterVariantSave} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireBeforeRebindTable":{"!description":"Fires event {@link #event:beforeRebindTable beforeRebindTable} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getPlaceToolbarInTable":{"!description":"Gets current value of property {@link #getPlaceToolbarInTable placeToolbarInTable}.\n\nSpecifies whether the <code>Toolbar<\/code> control of the <code>SmartTable<\/code> is placed inside the corresponding aggregation of the inner UI5 table control.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnableAutoColumnWidth":{"!description":"Sets a new value for property {@link #getEnableAutoColumnWidth enableAutoColumnWidth}.\n\nEnables heuristic column width calculation for all supported table types based on metadata information when set to <code>true<\/code>. The column width calculation takes OData type, column label, text arrangement, possible cell templates, additional fields and many other metadata parameters into account. Providing more precise <code>MaxLength<\/code> value for the <code>Edm.String<\/code> type or <code>precision<\/code> value for numeric OData types can help this algorithm to produce better results. The calculated column widths can have a minimum of 3rem and a maximum of 20rem. To avoid the heuristic column width calculation for a particular column, the {@link #annotation:CssDefaults CssDefaults} annotation can be used.\n\nIf <code>tableType=\"ResponsiveTable\"<\/code>, the following changes are applied: <ul> <li>{@link #getDemandPopin demandPopin} property of the <code>SmartTable<\/code> is set to <code>true<\/code>.<\/li> <li>{@link sap.m.Table#getFixedLayout fixedLayout} property of the inner table is set to <code>Strict<\/code>.<\/li> <li>{@link sap.m.Table#getContextualWidth contextualWidth} property of the inner table is set to <code>Auto<\/code>.<\/li> <li>Column resizing feature gets enabled and the wrapping of column headers get disabled for all columns, including custom columns.<\/li> <\/ul> Those properties must not be managed by the application.<br><br>\n\nBy default, this feature has no effect on custom columns. To enable heuristic column width calculation also for custom columns, the <code>autoColumnWidth<\/code> property must be specified in the <code>p13nData<\/code> custom data.<br> <b>Note:<\/b> The automatic column width calculation for custom columns works only when the <code>width<\/code> property of the custom column is not set.<br> <b>Note:<\/b> The custom columns can have unexpected cell templates that might affect the result of the column width calculation, for example, an <code>Edm.Byte<\/code> field that can only have three digits might be visualized as a <code>sap.m.RatingIndicator<\/code> that requires more space.<br> <b>Note:<\/b> Defining the <code>leadingProperty<\/code> and a unique <code>columnKey<\/code> in the <code>p13nData<\/code> custom data is a prerequisite for all other <code>p13nData<\/code> properties, including the <code>autoColumnWidth<\/code> property.<br> <i>Examples with <code>autoColumnWidth<\/code> property of the <code>p13nData<\/code> custom data<\/i> <pre>\n&lt;!-- Enable the automatic column width calculation for a custom column --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: true, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Restrict the automatic width calculation to a minimum of 5rem and a maximum of 15rem --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;min&quot;: 5, &quot;max&quot;: 15 }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Define extra 3rem space to the automatic content width calculation --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;gap&quot;: 3 }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Define the visible properties that should be considered for the calculation. Multiple property names can be specified here as comma-separated values. The first property is the leading property. --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;visibleProperty&quot;: &quot;PropC&quot; }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;additionalProperty&quot;: &quot;PropB,PropC&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- The calculated column width must not be smaller than the column header --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;truncateLabel&quot;: false }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre>\n\n<b>Note:<\/b><br> The <code>enableAutoColumnWidth<\/code> is not a dynamic property and cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoColumnWidth?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEnableAutoColumnWidth":"type: boolean, description: New value for property <code>enableAutoColumnWidth<\/code>"}},"setShowRowCount":{"!description":"Sets a new value for property {@link #getShowRowCount showRowCount}.\n\nThe number of rows is shown along with the header text if the property <code>showRowCount<\/code> is set to <code>true<\/code>.\n\n<b>Note:<\/b><br> <ul> <li>To improve your application's performance, activate the inline count for OData bindings to avoid sending dedicated OData requests.<\/li> <li>If no stable overall count can be retrieved from the binding, the count will not be displayed. This is currently the case for TreeBinding or if no count is requested by the binding.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRowCount?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowRowCount":"type: boolean, description: New value for property <code>showRowCount<\/code>"}},"attachAfterVariantInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired after variant management in the SmartTable has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachPaste":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:paste paste} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"indexOfFilterControlConfiguration":{"!description":"Checks for the provided <code>sap.ui.comp.config.FilterControlConfiguration<\/code> in the aggregation {@link #getFilterControlConfiguration filterControlConfiguration}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterControlConfiguration: sap.ui.comp.config.FilterControlConfiguration) -> Number","parameters":{"oFilterControlConfiguration":"type: sap.ui.comp.config.FilterControlConfiguration, description: The filterControlConfiguration whose index is looked for"}},"getUseColumnLabelsAsTooltips":{"!description":"Gets current value of property {@link #getUseColumnLabelsAsTooltips useColumnLabelsAsTooltips}.\n\nIf no tooltips have been provided, neither by the <code>QuickInfo<\/code> annotation nor for custom columns directly via property, the column label will automatically be applied as a tooltip for the column.\n\nTo enable this mechanism for custom columns, a <code>sap.m.Label<\/code> or <code>sap.m.Text<\/code> must be used as header label. Custom tooltips are not affected by this functionality when they are provided on the column header label for tables of type <code>ResponsiveTable<\/code> and on the column for other table types.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowDetailsButton":{"!description":"Gets current value of property {@link #getShowDetailsButton showDetailsButton}.\n\nControls the visibility of the Show / Hide Details button for the <code>ResponsiveTable<\/code> scenario.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area while the columns with <code>Low<\/code> importance are hidden. On mobile phones, the columns with <code>Medium<\/code> importance are also hidden. As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data and generate the columns. Note that this is not a dynamic UI5 property.\n\n<b>Note:<\/b> It is not allowed to have one of the following strings as field names for your OData entity: <ul> <li><code>btnEditToggle<\/code><\/li> <li><code>btnExcelExport<\/code><\/li> <li><code>btnFullScreen<\/code><\/li> <li><code>btnPersonalisation<\/code><\/li> <li><code>header<\/code><\/li> <li><code>infoToolbarText<\/code><\/li> <li><code>persoController<\/code><\/li> <li><code>toolbarSeperator<\/code><\/li> <li><code>toolbarSpacer<\/code><\/li> <li><code>ui5table<\/code><\/li> <li><code>variant<\/code><\/li> <\/ul>\n\nThis is not a dynamic property and cannot be changed once the control has been initialized.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowFullScreenButton":{"!description":"Sets a new value for property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the FullScreen button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFullScreenButton?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowFullScreenButton":"type: boolean, description: New value for property <code>showFullScreenButton<\/code>"}},"addFilterControlConfiguration":{"!description":"Adds some filterControlConfiguration to the aggregation {@link #getFilterControlConfiguration filterControlConfiguration}.","!static":false,"!category":"function","!type":"fn(oFilterControlConfiguration: sap.ui.comp.config.FilterControlConfiguration) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oFilterControlConfiguration":"type: sap.ui.comp.config.FilterControlConfiguration, description: The filterControlConfiguration to add; if empty, nothing is inserted"}},"isInitialised":{"!description":"Checks whether the control is initialised","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUseColumnLabelsAsTooltips":{"!description":"Sets a new value for property {@link #getUseColumnLabelsAsTooltips useColumnLabelsAsTooltips}.\n\nIf no tooltips have been provided, neither by the <code>QuickInfo<\/code> annotation nor for custom columns directly via property, the column label will automatically be applied as a tooltip for the column.\n\nTo enable this mechanism for custom columns, a <code>sap.m.Label<\/code> or <code>sap.m.Text<\/code> must be used as header label. Custom tooltips are not affected by this functionality when they are provided on the column header label for tables of type <code>ResponsiveTable<\/code> and on the column for other table types.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseColumnLabelsAsTooltips?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseColumnLabelsAsTooltips":"type: boolean, description: New value for property <code>useColumnLabelsAsTooltips<\/code>"}},"attachUiStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:uiStateChange uiStateChange} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired when the UI state changes either via the {@link sap.ui.comp.smarttable.SmartTable#setUiState} method or the table personalization.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroySemanticObjectController":{"!description":"Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyFilterControlConfiguration":{"!description":"Destroys all the filterControlConfiguration in the aggregation {@link #getFilterControlConfiguration filterControlConfiguration}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"setHeaderLevel":{"!description":"Sets the value for the <code>headerLevel<\/code> property.","!static":false,"!category":"function","!type":"fn(sLevel: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sLevel":"type: string, description: The level that is set to the header"}},"attachAfterVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachFullScreenToggled":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired right after the full screen mode of the SmartTable control has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDetailsButtonSetting":{"!description":"Gets current value of property {@link #getDetailsButtonSetting detailsButtonSetting}.\n\nDefines which columns should be hidden instead of moved into the pop-in area depending on their importance. See {@link sap.m.Column#getImportance} and {@link sap.m.Table#getHiddenInPopin} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton=\"true\"<\/code>. If no priority is given, the default configuration of {@link sap.ui.comp.smarttable.SmartTable#getShowDetailsButton} is used. If this property is changed after the <code>SmartTable<\/code> has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Priority]"},"getShowVariantManagement":{"!description":"Gets current value of property {@link #getShowVariantManagement showVariantManagement}.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireFieldChange":{"!description":"Fires event {@link #event:fieldChange fieldChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getTableType":{"!description":"Gets current value of property {@link #getTableType tableType}.\n\nSpecifies the type of table to be created in the SmartTable control.<br> <b>Note:<\/b><br> <ul> <li>If you add a table to the content of the SmartTable in the view, this property has no effect.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.TableType"},"setPersistencyKey":{"!description":"Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPersistencyKey?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sPersistencyKey":"type: string, description: New value for property <code>persistencyKey<\/code>"}},"setUseTablePersonalisation":{"!description":"Sets a new value for property {@link #getUseTablePersonalisation useTablePersonalisation}.\n\nThe <code>useTablePersonalisation<\/code> attribute can be set to true or false depending on whether you want to define personalized table settings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseTablePersonalisation?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseTablePersonalisation":"type: boolean, description: New value for property <code>useTablePersonalisation<\/code>"}},"getInitialNoDataText":{"!description":"Gets current value of property {@link #getInitialNoDataText initialNoDataText}.\n\nThe text shown initially before the control is bound and initialized. The special values <code>$FILTERBAR<\/code> or <code>$NO_FILTERBAR<\/code> can be specified to make the <code>SmartTable<\/code> control show the initial text as if the <code>SmartFilterBar<\/code> control were associated with it. If nothing is specified, the default behavior is to show the initial text based on whether the <code>SmartFilterBar<\/code> control is actually associated with the <code>SmartTable<\/code> control.","!static":false,"!category":"function","!type":"fn() -> String"},"setCopyProvider":{"!description":"Sets the aggregated {@link #getCopyProvider copyProvider}.","!static":false,"!category":"function","!type":"fn(oCopyProvider: sap.m.plugins.CopyProvider) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oCopyProvider":"type: sap.m.plugins.CopyProvider, description: The copyProvider to set"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nDefines the semantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"detachBeforeExport":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setDataStateIndicator":{"!description":"Sets the aggregated {@link #getDataStateIndicator dataStateIndicator}.","!static":false,"!category":"function","!type":"fn(oDataStateIndicator: sap.m.plugins.DataStateIndicator) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oDataStateIndicator":"type: sap.m.plugins.DataStateIndicator, description: The dataStateIndicator to set"}},"getDataStateIndicator":{"!description":"Gets content of aggregation {@link #getDataStateIndicator dataStateIndicator}.\n\nDefines an aggregation for the <code>DataStateIndicator<\/code> plugin that can be used to show binding-related messages. If the {@link sap.m.plugins.DataStateIndicator#getEnableFiltering enableFiltering} property of the <code>DataStateIndicator<\/code> is set to <code>true<\/code>, the <code>SmartTable<\/code> control prevents the original behavior of the <code>DataStateIndicator<\/code> and manages the filtering of binding-related messages. If a user applies or clears message filters, the <code>SmartTable<\/code> control fires the {@link #event:beforeRebindTable beforeRebindTable} event with the <code>messageFilterActive<\/code> parameter that is used to determine whether message filtering is active or not. After the binding-related messages have been filtered by the user, all the existing filters, for example, those defined using <code>SmartFilterBar<\/code> are only taken into account once the message filter has been cleared again. Therefore the message filtering should not be used in combination with a <code>SmartFilterBar<\/code>. Required additional filters must be added by applications in the {@link #event:beforeRebindTable beforeRebindTable} event.","!static":false,"!category":"function","!type":"fn() -> sap.m.plugins.DataStateIndicator"},"getShowDetails":{"!description":"Returns the value of the <code>showDetails<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getToolbar":{"!description":"Returns the <code>Toolbar<\/code> instance used inside the <code>SmartTable<\/code> control.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"insertFilterControlConfiguration":{"!description":"Inserts a filterControlConfiguration into the aggregation {@link #getFilterControlConfiguration filterControlConfiguration}.","!static":false,"!category":"function","!type":"fn(oFilterControlConfiguration: sap.ui.comp.config.FilterControlConfiguration, iIndex: Number) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oFilterControlConfiguration":"type: sap.ui.comp.config.FilterControlConfiguration, description: The filterControlConfiguration to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the filterControlConfiguration should be inserted at; for a negative value of <code>iIndex<\/code>, the filterControlConfiguration is inserted at position 0; for a value greater than the current size of the aggregation, the filterControlConfiguration is inserted at the last position"}},"getEnableCopy":{"!description":"Gets current value of property {@link #getEnableCopy enableCopy}.\n\nEnables the copy-to-clipboard functionality of the <code>SmartTable<\/code> control.\n\nWhen set to <code>true<\/code>, a {@link sap.m.plugins.CopyProvider} and a {@link sap.m.plugins.CellSelector} are automatically created and added to the <code>SmartTable<\/code> control if a custom <code>CopyProvider<\/code> or <code>CellSelector<\/code> are not already used by the application. When set to <code>false<\/code>, these created code>CopyProvider<\/code> and <code>CellSelector<\/code> plugins are removed again.\n\n<b>Note:<\/b><br> We recommend that you set the <code>enableCopy<\/code> property to <code>false<\/code> in the following cases: <ul> <li>The copy-to-clipboard functionality is not desired<\/li> <li>Plugins with property settings other than the default ones should be used<\/li> <li>Only one of the plugins should be used<\/li> <li>The functionality conflicts with the concrete application scenario, for example, custom columns with special content<\/li> <li>The functionality conflicts with the known restrictions of the <code>CopyProvider<\/code> and <code>CellSelector<\/code> plugins<\/li> <\/ul>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachEditToggled":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired when display/edit button is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEntitySet":{"!description":"The entity set name from OData metadata, with which the table should be bound to","!static":false,"!category":"function","!type":"fn(sEntitySetName: String) -> Object","parameters":{"sEntitySetName":"type: string, description: The entity set"}},"fireInitialise":{"!description":"Fires event {@link #event:initialise initialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smarttable.SmartTable.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTableBindingPath":{"!description":"Sets a new value for property {@link #getTableBindingPath tableBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet attribute is used instead. (used only if binding is established after setting this property: initially due to enableAutoBinding -or- by subsequently calling rebindTable)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTableBindingPath?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sTableBindingPath":"type: string, description: New value for property <code>tableBindingPath<\/code>"}},"attachDataRequested":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindTable<\/code> event to attach/listen to the binding \"events\" directly<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired when data is requested after binding. The event is fired if the binding for the table is done by the SmartTable itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"destroySemanticKeyAdditionalControl":{"!description":"Destroys the semanticKeyAdditionalControl in the aggregation {@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"setPlaceToolbarInTable":{"!description":"Sets a new value for property {@link #getPlaceToolbarInTable placeToolbarInTable}.\n\nSpecifies whether the <code>Toolbar<\/code> control of the <code>SmartTable<\/code> is placed inside the corresponding aggregation of the inner UI5 table control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPlaceToolbarInTable?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bPlaceToolbarInTable":"type: boolean, description: New value for property <code>placeToolbarInTable<\/code>"}},"setSmartFilterId":{"!description":"Sets a new value for property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest parent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSmartFilterId?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sSmartFilterId":"type: string, description: New value for property <code>smartFilterId<\/code>"}},"getCurrentVariantId":{"!description":"returns the id of the currently selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowTablePersonalisation":{"!description":"Sets a new value for property {@link #getShowTablePersonalisation showTablePersonalisation}.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTablePersonalisation?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowTablePersonalisation":"type: boolean, description: New value for property <code>showTablePersonalisation<\/code>"}},"setUseDateRangeType":{"!description":"Sets a new value for property {@link #getUseDateRangeType useDateRangeType}.\n\nIf set to <code>true<\/code>, all date fields in the Filter Panel of the settings dialog with filter restriction <code>interval<\/code> will be treated as <code>DateTimeRange<\/code> filters. The <code>useDateRangeType<\/code> can be set only once during initialization. <b>Note:<\/b> If this property is set to <code>true<\/code> and any date filters with filter restriction <code>interval<\/code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false<\/code>, any previously stored filters which were treated as type <code>DateTimeRange<\/code> based on the former setting, cannot be converted back to the standard date interval.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseDateRangeType?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseDateRangeType":"type: boolean, description: New value for property <code>useDateRangeType<\/code>"}},"getShowPasteButton":{"!description":"Gets current value of property {@link #getShowPasteButton showPasteButton}.\n\nControls the visibility of the Paste button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTableBindingPath":{"!description":"Gets current value of property {@link #getTableBindingPath tableBindingPath}.\n\nThis attribute can be used to specify the path that is used during the binding of the table. If not specified, the entitySet attribute is used instead. (used only if binding is established after setting this property: initially due to enableAutoBinding -or- by subsequently calling rebindTable)","!static":false,"!category":"function","!type":"fn() -> String"},"setEnableCopy":{"!description":"Sets a new value for property {@link #getEnableCopy enableCopy}.\n\nEnables the copy-to-clipboard functionality of the <code>SmartTable<\/code> control.\n\nWhen set to <code>true<\/code>, a {@link sap.m.plugins.CopyProvider} and a {@link sap.m.plugins.CellSelector} are automatically created and added to the <code>SmartTable<\/code> control if a custom <code>CopyProvider<\/code> or <code>CellSelector<\/code> are not already used by the application. When set to <code>false<\/code>, these created code>CopyProvider<\/code> and <code>CellSelector<\/code> plugins are removed again.\n\n<b>Note:<\/b><br> We recommend that you set the <code>enableCopy<\/code> property to <code>false<\/code> in the following cases: <ul> <li>The copy-to-clipboard functionality is not desired<\/li> <li>Plugins with property settings other than the default ones should be used<\/li> <li>Only one of the plugins should be used<\/li> <li>The functionality conflicts with the concrete application scenario, for example, custom columns with special content<\/li> <li>The functionality conflicts with the known restrictions of the <code>CopyProvider<\/code> and <code>CellSelector<\/code> plugins<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableCopy?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEnableCopy":"type: boolean, description: New value for property <code>enableCopy<\/code>"}},"setCustomizeConfig":{"!description":"Sets a new value for property {@link #getCustomizeConfig customizeConfig}.\n\nProvides customization to the columns/cell templates generated by the <code>SmartTable<\/code> control.\n\nList of supported settings for the <code>customizeConfig<\/code> property: <ul> <li><code>textInEditModeSource<\/code>: For more information, see {@link sap.ui.comp.smartfield.SmartField#setTextInEditModeSource}<\/li> <li><code>insertIgnoreRestrictions<\/code>: The <code>customData<\/code> setting for the <code>sap.ui.comp.smartfield.SmartField<\/code> control. Supported as of version 1.103.<\/li> <li><code>autoColumnWidth<\/code>: This property can be used to influence the column width calculation for columns generated by the <code>SmartTable<\/code> control itself. The supported configuration settings are <code>truncateLabel<\/code>, <code>min<\/code>, <code>max<\/code>, and <code>gap<\/code>. Supported as of version 1.108. For more information, see {@link sap.ui.comp.smarttable.SmartTable#getEnableAutoColumnWidth}.<\/li> <li><code>clientSideMandatoryCheck<\/code>: For more information, see {@link sap.ui.comp.smartfield.SmartField#setClientSideMandatoryCheck}. Supported as of version 1.111<\/li> <\/ul> <br /> <i>Examples for the <code>customizeConfig<\/code> property to change the <code>textInEditModeSource<\/code> for the default <code>smartField<\/code><\/i> <pre>\n&lt;!-- Sets the <code>textInEditModeSource<\/code> property of all the <code>SmartField<\/code> controls to <code<>ValueList<\/code> --&gt;\n&lt;SmartTable customizeConfig=\"{'textInEditModeSource': {'*': 'ValueList'}}\" &gt;\n<\/pre> <pre>\n&lt;!-- Sets the <code>textInEditModeSource<\/code> property of the <code>smartField<\/code> with path \"Bukrs\" to <code>NavigationProperty<\/code> and\nothers to <code<>ValueList<\/code>  --&gt;\n&lt;SmartTable customizeConfig=\"{'textInEditModeSource': {'*': 'ValueList','Bukrs':'NavigationProperty'}}\" &gt;\n<\/pre> <pre>\n&lt;!-- Sets the <code>autoColumnWidth<\/code> property of all the columns --&gt;\n&lt;SmartTable customizeConfig=\"{'autoColumnWidth': {'*': {'min': 5, 'max': 10, 'gap': 2, 'truncateLabel': false}}}\" &gt;\n<\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oCustomizeConfig?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oCustomizeConfig":"type: object, description: New value for property <code>customizeConfig<\/code>"}},"detachFieldChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:fieldChange fieldChange} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachShowOverlay":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!helpDescription":"The <code>SmartTable<\/code> control creates a table based on OData metadata and the configuration specified. The entitySet attribute must be specified to use the control. This attribute is used to fetch fields from OData metadata, from which columns will be generated; it can also be used to fetch the actual table data.<br> Based on the tableType property, this control will render a standard, analytical, tree, or responsive table.<br>\n\n<b>Note:<\/b> <ul> <li>The <code>SmartTable<\/code> control supports the <code>Currency<\/code> and <code>Unit<\/code> customization referenced by the related <code>entitySet<\/code>. The requested code list is then used for formatting the <code>Currency<\/code> and <code>Unit<\/code> cell template. See {@link sap.ui.model.odata.v4.ODataMetaModel#requestCurrencyCodes} and {@link sap.ui.model.odata.v4.ODataMetaModel#requestUnitsOfMeasure} for more information.<\/li> <li>The OData types, such as {@link sap.ui.model.odata.type.Decimal}, {@link sap.ui.model.odata.type.Currency}, and {@link sap.ui.model.odata.type.Unit}, have the format option <code>preserveDecimals=true<\/code> by default, which preserves the decimals returned by the back end. The <code>SmartTable<\/code> control offers a global <code>customData<\/code> setting called <b><code>preserveDecimals<\/code><\/b> that can be used to configure the <code>preserveDecimals<\/code> format option. The default is <code>preserveDecimals=true<\/code> for the <code>customData<\/code>. This <code>customData<\/code> is then used for formatting the <code>Edm.Decimal<\/code> type as well as the <code>Currency<\/code> and <code>Unit<\/code> cell template. If the number of decimal digits is different from the values returned by the code list, then the decimal point alignment for the <code>Currency<\/code> and <code>Unit<\/code> values cannot be guaranteed.<\/li> <li>Cell data of type <code>string<\/code> containing whitespace characters are replaced with unicode characters to visualize the whitespaces on the UI. This is enabled by default.<\/li> <li>The <code>SmartTable<\/code> must not be cloned or used as a template. Doing this might cause issues with its behavior, personalization, or <code>VariantManagement<\/code>.<\/li> <\/ul>","updateTableHeaderState":{"!description":"This can be called once data is received to update table header (count) and toolbar buttons(e.g. Excel Export) enabled state","!static":false,"!category":"function","!type":"fn()"},"detachUiStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:uiStateChange uiStateChange} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getCopyProvider":{"!description":"Gets content of aggregation {@link #getCopyProvider copyProvider}.\n\nDefines an aggregation for the <code>CopyProvider<\/code> plugin that provides copy to clipboard capabilities for the selected rows of the table and creates a Copy button for the toolbar of the table. To disable the copy function of the table, including the Copy button in the toolbar, the <code>enabled<\/code> property of the <code>CopyProvider<\/code> must be set to <code>false<\/code>. To hide the Copy button from the toolbar, the <code>visible<\/code> property of the <code>CopyProvider<\/code> must be set to <code>false<\/code>.\n\n<b>Note:<\/b> The {@link sap.m.plugins.CopyProvider#extractData extractData} property of the <code>CopyProvider<\/code> must not be managed by the application. <b>Note:<\/b> The <code>CopyProvider<\/code> requires a secure context to access the clipboard API. If the context is not secure, the plugin will not be added, and the copy button will not be generated.","!static":false,"!category":"function","!type":"fn() -> sap.m.plugins.CopyProvider"},"removeFilterControlConfiguration":{"!description":"Removes a filterControlConfiguration from the aggregation {@link #getFilterControlConfiguration filterControlConfiguration}.","!static":false,"!category":"function","!type":"fn(vFilterControlConfiguration: Number | String | sap.ui.comp.config.FilterControlConfiguration) -> sap.ui.comp.config.FilterControlConfiguration | null","parameters":{"vFilterControlConfiguration":"type: int|string|sap.ui.comp.config.FilterControlConfiguration, description: The filterControlConfiguration to remove or its index or id"}},"getExportType":{"!description":"Gets current value of property {@link #getExportType exportType}.\n\nSpecifies the type of export to be used in the <code>SmartTable<\/code> control.\n\nDefault value is <code>\"UI5ClientPDF\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.ExportType"},"attachDataReceived":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindTable<\/code> event to attach/listen to the binding \"events\" directly<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired when data is received after binding. The event is fired if the binding for the table is done by the SmartTable itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDemandPopin":{"!description":"Gets current value of property {@link #getDemandPopin demandPopin}.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive table\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachDataRequested":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindTable<\/code> event to attach/listen to the binding \"events\" directly<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSemanticObjectController":{"!description":"Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"detachBeforePaste":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforePaste beforePaste} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachBeforePaste":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforePaste beforePaste} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired just before the paste event is triggered and can be used to prevent the default paste behavior. <br><b>Note<\/b>: If no validation is desired, applications can use the <code>rawData<\/code> parameter to directly access the pasted data. <br><b>Note<\/b>: If a column contains additional properties, they are considered as separate columns for the pasting.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This happens just after the <code>initialise<\/code> event has been fired.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDemandPopin":{"!description":"Sets a new value for property {@link #getDemandPopin demandPopin}.\n\nThe demandPopin attribute can be set to true or false depending on whether you want to display columns as popins on the responsive table\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDemandPopin?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bDemandPopin":"type: boolean, description: New value for property <code>demandPopin<\/code>"}},"!proto":"sap.m.VBox","getUseDateRangeType":{"!description":"Gets current value of property {@link #getUseDateRangeType useDateRangeType}.\n\nIf set to <code>true<\/code>, all date fields in the Filter Panel of the settings dialog with filter restriction <code>interval<\/code> will be treated as <code>DateTimeRange<\/code> filters. The <code>useDateRangeType<\/code> can be set only once during initialization. <b>Note:<\/b> If this property is set to <code>true<\/code> and any date filters with filter restriction <code>interval<\/code> were stored as part of a variant, the values of these filters cannot be applied. If this property is set to <code>false<\/code>, any previously stored filters which were treated as type <code>DateTimeRange<\/code> based on the former setting, cannot be converted back to the standard date interval.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setExportType":{"!description":"Sets a new value for property {@link #getExportType exportType}.\n\nSpecifies the type of export to be used in the <code>SmartTable<\/code> control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"UI5ClientPDF\"<\/code>.","!static":false,"!category":"function","!type":"fn(sExportType?: sap.ui.comp.smarttable.ExportType) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sExportType":"type: sap.ui.comp.smarttable.ExportType, description: New value for property <code>exportType<\/code>"}},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in table","!static":false,"!category":"function","!type":"fn() -> String"},"destroyCopyProvider":{"!description":"Destroys the copyProvider in the aggregation {@link #getCopyProvider copyProvider}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"getShowRowCount":{"!description":"Gets current value of property {@link #getShowRowCount showRowCount}.\n\nThe number of rows is shown along with the header text if the property <code>showRowCount<\/code> is set to <code>true<\/code>.\n\n<b>Note:<\/b><br> <ul> <li>To improve your application's performance, activate the inline count for OData bindings to avoid sending dedicated OData requests.<\/li> <li>If no stable overall count can be retrieved from the binding, the count will not be displayed. This is currently the case for TreeBinding or if no count is requested by the binding.<\/li> <\/ul>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFilterControlConfiguration":{"!description":"Gets content of aggregation {@link #getFilterControlConfiguration filterControlConfiguration}.\n\nAllows the user to configure filters for the table personalization","!static":false,"!category":"function","!type":"fn() -> [sap.ui.comp.config.FilterControlConfiguration]"},"!constructorDescription":"Constructor for a new smarttable/SmartTable.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getSmartFilterId smartFilterId} : string<\/li>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getInitiallyVisibleFields initiallyVisibleFields} : string<\/li>\n<li>{@link #getRequestAtLeastFields requestAtLeastFields} : string<\/li>\n<li>{@link #getIgnoreFromPersonalisation ignoreFromPersonalisation} : string<\/li>\n<li>{@link #getTableType tableType} : sap.ui.comp.smarttable.TableType<\/li>\n<li>{@link #getUseVariantManagement useVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getUseColumnLabelsAsTooltips useColumnLabelsAsTooltips} : boolean (default: true)<\/li>\n<li>{@link #getShowVariantManagement showVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getUseExportToExcel useExportToExcel} : boolean (default: true)<\/li>\n<li>{@link #getEnableExport enableExport} : boolean (default: true)<\/li>\n<li>{@link #getExportType exportType} : sap.ui.comp.smarttable.ExportType (default: \"UI5ClientPDF\")<\/li>\n<li>{@link #getEnableCopy enableCopy} : boolean (default: true)<\/li>\n<li>{@link #getUseTablePersonalisation useTablePersonalisation} : boolean (default: true)<\/li>\n<li>{@link #getShowTablePersonalisation showTablePersonalisation} : boolean (default: true)<\/li>\n<li>{@link #getCustomizeConfig customizeConfig} : object<\/li>\n<li>{@link #getShowRowCount showRowCount} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getHeaderStyle headerStyle} : sap.ui.core.TitleLevel<\/li>\n<li>{@link #getToolbarStyleClass toolbarStyleClass} : string<\/li>\n<li>{@link #getEnableCustomFilter enableCustomFilter} : boolean (default: true)<\/li>\n<li>{@link #getPersistencyKey persistencyKey} : string<\/li>\n<li>{@link #getUseOnlyOneSolidToolbar useOnlyOneSolidToolbar} : boolean (default: false)<\/li>\n<li>{@link #getPlaceToolbarInTable placeToolbarInTable} : boolean (default: false)<\/li>\n<li>{@link #getCurrentVariantId currentVariantId} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getTableBindingPath tableBindingPath} : string<\/li>\n<li>{@link #getEditTogglable editTogglable} : boolean (default: false)<\/li>\n<li>{@link #getDemandPopin demandPopin} : boolean (default: false)<\/li>\n<li>{@link #getShowFullScreenButton showFullScreenButton} : boolean (default: false)<\/li>\n<li>{@link #getInitialNoDataText initialNoDataText} : string<\/li>\n<li>{@link #getUseInfoToolbar useInfoToolbar} : sap.ui.comp.smarttable.InfoToolbarBehavior (default: Auto)<\/li>\n<li>{@link #getShowDetailsButton showDetailsButton} : boolean (default: false)<\/li>\n<li>{@link #getDetailsButtonSetting detailsButtonSetting} : sap.ui.core.Priority[]<\/li>\n<li>{@link #getEnableAutoColumnWidth enableAutoColumnWidth} : boolean (default: false)<\/li>\n<li>{@link #getShowPasteButton showPasteButton} : boolean (default: false)<\/li>\n<li>{@link #getEnablePaste enablePaste} : boolean (default: true)<\/li>\n<li>{@link #getUseDateRangeType useDateRangeType} : boolean (default: false)<\/li>\n<li>{@link #getShowDetails showDetails} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomToolbar customToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : sap.ui.comp.navpopover.SemanticObjectController<\/li>\n<li>{@link #getNoData noData} : sap.ui.core.Control|string<\/li>\n<li>{@link #getSemanticKeyAdditionalControl semanticKeyAdditionalControl} : sap.ui.core.Control<\/li>\n<li>{@link #getDataStateIndicator dataStateIndicator} : sap.m.plugins.DataStateIndicator<\/li>\n<li>{@link #getCopyProvider copyProvider} : sap.m.plugins.CopyProvider<\/li>\n<li>{@link #getFilterControlConfiguration filterControlConfiguration} : sap.ui.comp.config.FilterControlConfiguration[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSmartVariant smartVariant} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRebindTable beforeRebindTable} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editToggled editToggled} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataRequested dataRequested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataReceived dataReceived} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantInitialise afterVariantInitialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantSave afterVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantApply afterVariantApply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:showOverlay showOverlay} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fieldChange fieldChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fullScreenToggled fullScreenToggled} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeExport beforeExport} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforePaste beforePaste} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:paste paste} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uiStateChange uiStateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.VBox#constructor sap.m.VBox}\ncan be used as well.","setShowPasteButton":{"!description":"Sets a new value for property {@link #getShowPasteButton showPasteButton}.\n\nControls the visibility of the Paste button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPasteButton?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowPasteButton":"type: boolean, description: New value for property <code>showPasteButton<\/code>"}},"setUseOnlyOneSolidToolbar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29 This property has no effect<br>Sets a new value for property {@link #getUseOnlyOneSolidToolbar useOnlyOneSolidToolbar}.\n\nIf set to true, the standard toolbar and custom toolbar will be merged into one toolbar. The combined toolbar will have a solid style.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseOnlyOneSolidToolbar?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bUseOnlyOneSolidToolbar":"type: boolean, description: New value for property <code>useOnlyOneSolidToolbar<\/code>"}},"setIgnoredFields":{"!description":"Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nComma-separated value of fields that must be ignored in the OData metadata by the <code>SmartTable<\/code> control.<br> The <code>SmartTable<\/code> control will not create built-in columns for the fields defined by this property and will not offer these fields in table personalization.\n\n<b>Note:<\/b><br> <ul> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"destroyDataStateIndicator":{"!description":"Destroys the dataStateIndicator in the aggregation {@link #getDataStateIndicator dataStateIndicator}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"setEnableCustomFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 After personalization dialog has been introduced in SmartTable the property <code>enableCustomFilter<\/code> does not make sense. When setting the property to <code>false<\/code>, the entered custom filter value will not be shown in personalization dialog and will also not be persisted in variant management. The custom filter will also be overwritten when rebindTable is called on the SmartTable.<br>Sets a new value for property {@link #getEnableCustomFilter enableCustomFilter}.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When pressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableCustomFilter?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEnableCustomFilter":"type: boolean, description: New value for property <code>enableCustomFilter<\/code>"}},"destroyCustomToolbar":{"!description":"Destroys the customToolbar in the aggregation {@link #getCustomToolbar customToolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smarttable.SmartTable"},"setTableType":{"!description":"Sets a new value for property {@link #getTableType tableType}.\n\nSpecifies the type of table to be created in the SmartTable control.<br> <b>Note:<\/b><br> <ul> <li>If you add a table to the content of the SmartTable in the view, this property has no effect.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTableType?: sap.ui.comp.smarttable.TableType) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sTableType":"type: sap.ui.comp.smarttable.TableType, description: New value for property <code>tableType<\/code>"}},"getUiState":{"!description":"Returns the current UI state of the <code>SmartTable<\/code> control.<br> <b>Note:<\/b><br> The following restrictions apply: <ul> <li>Visualizations can only be used to modify the visibility, order, and width of columns, the template or importance of the column cannot be changed<\/li> <li>MaxItems is not supported<\/li> <li>RequestAtLeast contains values that are combined from both the <code>SmartTable<\/code> control property and PresentationVariant annotation, but when it is updated it only affects the internal array. The property in the <code>SmartTable<\/code> stays the same as before<\/li> <li>Changes to RequestAtLeast alone will not lead to a new data request<\/li> <li>RequestAtLeast is not supported in <code>AnalyticalTable<\/code> scenario<\/li> <li>Support for column width changes is enabled as of version 1.98.<\/li> <li>Any other restrictions, like the ones mentioned in {@link sap.ui.comp.state.UIState}, also apply<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.state.UIState"},"detachEditToggled":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:editToggled editToggled} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nWhen set to true, this enables automatic binding of the table using the tableBindingPath (if it exists) or entitySet property. This happens just after the <code>initialise<\/code> event has been fired.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"attachBeforeExport":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired just before export is triggered.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterVariantInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setShowVariantManagement":{"!description":"Sets a new value for property {@link #getShowVariantManagement showVariantManagement}.\n\nThe showVariantManagement attribute can be set to true or false for controlling the visibility of VariantManagement button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowVariantManagement?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bShowVariantManagement":"type: boolean, description: New value for property <code>showVariantManagement<\/code>"}},"getPersistencyKey":{"!description":"Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!static":false,"!category":"function","!type":"fn() -> String"},"attachAfterVariantApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired after a variant has been applied.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"firePaste":{"!description":"Fires event {@link #event:paste paste} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setSmartVariant":{"!description":"Sets the associated {@link #getSmartVariant smartVariant}.","!static":false,"!category":"function","!type":"fn(oSmartVariant: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oSmartVariant":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"}},"getEnableCustomFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.0 After personalization dialog has been introduced in SmartTable the property <code>enableCustomFilter<\/code> does not make sense. When setting the property to <code>false<\/code>, the entered custom filter value will not be shown in personalization dialog and will also not be persisted in variant management. The custom filter will also be overwritten when rebindTable is called on the SmartTable.<br>Gets current value of property {@link #getEnableCustomFilter enableCustomFilter}.\n\nCan be used to override the filter behavior. If set to true (default), instead of the filter input box a button is rendered. When pressing this button, the SmartTable control opens the filter panel directly in the table personalization dialog.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseTablePersonalisation":{"!description":"Gets current value of property {@link #getUseTablePersonalisation useTablePersonalisation}.\n\nThe <code>useTablePersonalisation<\/code> attribute can be set to true or false depending on whether you want to define personalized table settings. If you want to persist the table personalization, you need to specify the persistencyKey property.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDetailsButtonSetting":{"!description":"Sets a new value for property {@link #getDetailsButtonSetting detailsButtonSetting}.\n\nDefines which columns should be hidden instead of moved into the pop-in area depending on their importance. See {@link sap.m.Column#getImportance} and {@link sap.m.Table#getHiddenInPopin} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton=\"true\"<\/code>. If no priority is given, the default configuration of {@link sap.ui.comp.smarttable.SmartTable#getShowDetailsButton} is used. If this property is changed after the <code>SmartTable<\/code> has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDetailsButtonSetting: [sap.ui.core.Priority]) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sDetailsButtonSetting":"type: sap.ui.core.Priority[], description: New value for property <code>detailsButtonSetting<\/code>"}},"getEnableAutoColumnWidth":{"!description":"Gets current value of property {@link #getEnableAutoColumnWidth enableAutoColumnWidth}.\n\nEnables heuristic column width calculation for all supported table types based on metadata information when set to <code>true<\/code>. The column width calculation takes OData type, column label, text arrangement, possible cell templates, additional fields and many other metadata parameters into account. Providing more precise <code>MaxLength<\/code> value for the <code>Edm.String<\/code> type or <code>precision<\/code> value for numeric OData types can help this algorithm to produce better results. The calculated column widths can have a minimum of 3rem and a maximum of 20rem. To avoid the heuristic column width calculation for a particular column, the {@link #annotation:CssDefaults CssDefaults} annotation can be used.\n\nIf <code>tableType=\"ResponsiveTable\"<\/code>, the following changes are applied: <ul> <li>{@link #getDemandPopin demandPopin} property of the <code>SmartTable<\/code> is set to <code>true<\/code>.<\/li> <li>{@link sap.m.Table#getFixedLayout fixedLayout} property of the inner table is set to <code>Strict<\/code>.<\/li> <li>{@link sap.m.Table#getContextualWidth contextualWidth} property of the inner table is set to <code>Auto<\/code>.<\/li> <li>Column resizing feature gets enabled and the wrapping of column headers get disabled for all columns, including custom columns.<\/li> <\/ul> Those properties must not be managed by the application.<br><br>\n\nBy default, this feature has no effect on custom columns. To enable heuristic column width calculation also for custom columns, the <code>autoColumnWidth<\/code> property must be specified in the <code>p13nData<\/code> custom data.<br> <b>Note:<\/b> The automatic column width calculation for custom columns works only when the <code>width<\/code> property of the custom column is not set.<br> <b>Note:<\/b> The custom columns can have unexpected cell templates that might affect the result of the column width calculation, for example, an <code>Edm.Byte<\/code> field that can only have three digits might be visualized as a <code>sap.m.RatingIndicator<\/code> that requires more space.<br> <b>Note:<\/b> Defining the <code>leadingProperty<\/code> and a unique <code>columnKey<\/code> in the <code>p13nData<\/code> custom data is a prerequisite for all other <code>p13nData<\/code> properties, including the <code>autoColumnWidth<\/code> property.<br> <i>Examples with <code>autoColumnWidth<\/code> property of the <code>p13nData<\/code> custom data<\/i> <pre>\n&lt;!-- Enable the automatic column width calculation for a custom column --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: true, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Restrict the automatic width calculation to a minimum of 5rem and a maximum of 15rem --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;min&quot;: 5, &quot;max&quot;: 15 }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Define extra 3rem space to the automatic content width calculation --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;gap&quot;: 3 }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- Define the visible properties that should be considered for the calculation. Multiple property names can be specified here as comma-separated values. The first property is the leading property. --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;visibleProperty&quot;: &quot;PropC&quot; }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;additionalProperty&quot;: &quot;PropB,PropC&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre><pre>\n&lt;!-- The calculated column width must not be smaller than the column header --&gt;\n&lt;Column customdata:p13nData='\\{&quot;autoColumnWidth&quot;: \\{ &quot;truncateLabel&quot;: false }, &quot;leadingProperty&quot;: &quot;PropA&quot;, &quot;columnKey&quot;: &quot;PropA&quot;}' &gt;\n<\/pre>\n\n<b>Note:<\/b><br> The <code>enableAutoColumnWidth<\/code> is not a dynamic property and cannot be changed once the control has been initialized.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smarttable.SmartTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself.\n\nThis event is fired once the control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smarttable.SmartTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smarttable.SmartTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEditable":{"!description":"Sets a new value for property {@link #getEditable editable}.\n\nThis attribute can be used to specify if the controls created by the SmartTable control are editable. (The automatic toggle of controls works only for the SmartField/SmartToggle scenario)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable?: Boolean) -> sap.ui.comp.smarttable.SmartTable","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"setShowDetails":{"!description":"Adjusts the property <code>hiddenInPopin<\/code> on the inner ResponsiveTable to hide columns based on SmartTable configuration if <code>showDetailsButton<\/code> and <code>detailsButtonSetting<\/code> if {@param bValue} is set to <code>false<\/code>.\n\nOtherwise an empty array is set to show all columns.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> undefined","parameters":{"bValue":"type: boolean, description: Indicates if all columns in the popin area are shown"}},"setInitiallyVisibleFields":{"!description":"Sets a new value for property {@link #getInitiallyVisibleFields initiallyVisibleFields}.\n\nComma-separated value of fields that must be shown initially in the SmartTable as visible columns and in the order specified.<br> This property is mainly meant to be used when no LineItem annotation exists.<br> If you have fields in the XMLView they are always shown first; then, the columns are added based on the LineItem annotation and finally based on this property.<br> <b>Note:<\/b><br> <ul> <li>If both this property and the LineItem annotation exist, the order of fields cannot be guaranteed to be as mentioned here.<\/li> <li>Please ensure that you do not add spaces or special characters as no validation is done for this property.<\/li> <li>This is not a dynamic property and cannot be changed once the control has been initialized.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitiallyVisibleFields?: String) -> sap.ui.comp.smarttable.SmartTable","parameters":{"sInitiallyVisibleFields":"type: string, description: New value for property <code>initiallyVisibleFields<\/code>"}},"setUiState":{"!description":"Replaces the current UI state of the <code>SmartTable<\/code> control with the data represented in {@link sap.ui.comp.state.UIState}.<br> <b>Note:<\/b><br> The following restrictions apply: <ul> <li>Visualizations can only be used to modify the visibility, order, and width of columns, the template or importance of the column cannot be changed<\/li> <li>MaxItems is not supported<\/li> <li>RequestAtLeast contains values that are combined from both the <code>SmartTable<\/code> control property and PresentationVariant annotation, but when it is updated it only affects the internal array. The property in the <code>SmartTable<\/code> stays the same as before<\/li> <li>Changes to RequestAtLeast alone will not lead to a new data request<\/li> <li>RequestAtLeast is not supported in <code>AnalyticalTable<\/code> scenario<\/li> <li>Support for column width changes is enabled as of version 1.98.<\/li> <li>Any other restrictions, like the ones mentioned in {@link sap.ui.comp.state.UIState}, also apply<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn(oUIState: sap.ui.comp.state.UIState)","parameters":{"oUIState":"type: sap.ui.comp.state.UIState, description: the new representation of UI state"}},"getShowTablePersonalisation":{"!description":"Gets current value of property {@link #getShowTablePersonalisation showTablePersonalisation}.\n\nThe showTablePersonalisation attribute can be set to true or false for controlling the visibility of the TablePersonalisation button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fetchVariant":{"!description":"Interface function for SmartVariantManagement control, returns the current used variant data","!static":false,"!category":"function","!type":"fn() -> Object"},"getSmartFilterId":{"!description":"Gets current value of property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control; When specified, the SmartTable searches for the SmartFilter (also in the closest parent View) and attaches to the relevant events of the SmartFilter; to fetch data, show overlay etc.\n\n<b>Note:<\/b><br> This is not a dynamic property and cannot be changed once the control has been initialized.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.comp.personalization.ChangeType":{"!description":"Provides enumeration sap.ui.comp.personalization.ChangeType. A subset of changes done during table personalization.","ModelChanged":{"!description":"Change is applied to model but not applied to table","!category":"enum","!type":"String"},"!module":"sap/ui/comp/library","!category":"static class","TableChanged":{"!description":"Change is applied to model and to table","!category":"enum","!type":"String"},"Unchanged":{"!description":"Not changed","!category":"enum","!type":"String"}},"sap.ui.comp.smartchart.SmartChart":{"setRequestAtLeastFields":{"!description":"Sets a new value for property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nCSV of fields that must be always requested by the backend system.<br> This property is mainly meant to be used if there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters. Also, setting this property during runtime, will delete the current drill-stack and lead to a loss of the drill history.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRequestAtLeastFields?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sRequestAtLeastFields":"type: string, description: New value for property <code>requestAtLeastFields<\/code>"}},"fireAfterVariantInitialise":{"!description":"Fires event {@link #event:afterVariantInitialise afterVariantInitialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getNoData":{"!description":"Gets current value of property {@link #getNoData noData}.\n\nDefines the custom text that will be displayed in case no data is found for the current binding.","!static":false,"!category":"function","!type":"fn() -> String"},"fireFullScreenToggled":{"!description":"Fires event {@link #event:fullScreenToggled fullScreenToggled} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"detachAfterVariantApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireAfterVariantApply":{"!description":"Fires event {@link #event:afterVariantApply afterVariantApply} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"applyVariant":{"!description":"Interface function for SmartVariantManagement control that applies the current variant.","!static":false,"!category":"function","!type":"fn(oVariantJSON: sap.ui.comp.SmartChart.Variant, sContext: String)","parameters":{"oVariantJSON":"type: sap.ui.comp.SmartChart.Variant, description: The variant JSON","sContext":"type: string, description: Describes the context in which the variant has been applied"}},"removeSelectionDetailsActionGroup":{"!description":"Removes a selectionDetailsActionGroup from the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.","!static":false,"!category":"function","!type":"fn(vSelectionDetailsActionGroup: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vSelectionDetailsActionGroup":"type: int|string|sap.ui.core.Item, description: The selectionDetailsActionGroup to remove or its index or id"}},"rebindChart":{"!description":"This can be used to trigger binding on the chart used in the SmartChart","!static":false,"!category":"function","!type":"fn()"},"getShowDimensionsTitle":{"!description":"Gets current value of property {@link #getShowDimensionsTitle showDimensionsTitle}.\n\nControls the visibility of the title in the dimension area of the chart.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The <code>SmartChart<\/code> control creates a chart based on the OData metadata and the provided configuration. To use the control, the <code>entitySet<\/code> property must be specified. This property is used to fetch the metadata, from which the chart UI will be generated.<br> Based on the <code>chartType<\/code> property, this control will render initially the corresponding chart.<br> <b>Note:<\/b> Most of the properties are not dynamic and cannot be changed once the control has been initialized.\n\n<b>Important:<\/b> Keep in mind that <code>SmartChart<\/code>, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartChart<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartChart<\/code> only if you have control over the metadata of your application.<\/b>","setToolbarStyle":{"!description":"Change the style of the toolbar","!static":false,"!category":"function","!type":"fn(sStyle: sap.m.ToolbarStyle)","parameters":{"sStyle":"type: sap.m.ToolbarStyle, description: The style of the toolbar."}},"indexOfSelectionDetailsItemAction":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsItemAction: sap.ui.core.Item) -> Number","parameters":{"oSelectionDetailsItemAction":"type: sap.ui.core.Item, description: The selectionDetailsItemAction whose index is looked for"}},"insertSelectionDetailsItemAction":{"!description":"Inserts a selectionDetailsItemAction into the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsItemAction: sap.ui.core.Item, iIndex: Number) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSelectionDetailsItemAction":"type: sap.ui.core.Item, description: The selectionDetailsItemAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the selectionDetailsItemAction should be inserted at; for a negative value of <code>iIndex<\/code>, the selectionDetailsItemAction is inserted at position 0; for a value greater than the current size of the aggregation, the selectionDetailsItemAction is inserted at the last position"}},"setIgnoreFromPersonalisation":{"!description":"Sets a new value for property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nCSV of fields that is not shown in the personalization dialog.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoreFromPersonalisation?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sIgnoreFromPersonalisation":"type: string, description: New value for property <code>ignoreFromPersonalisation<\/code>"}},"getIgnoredFields":{"!description":"Gets current value of property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"addSelectionDetailsActionGroup":{"!description":"Adds some selectionDetailsActionGroup to the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsActionGroup: sap.ui.core.Item) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSelectionDetailsActionGroup":"type: sap.ui.core.Item, description: The selectionDetailsActionGroup to add; if empty, nothing is inserted"}},"setShowDrillBreadcrumbs":{"!description":"Sets a new value for property {@link #getShowDrillBreadcrumbs showDrillBreadcrumbs}.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true<\/code>, the toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDrillBreadcrumbs?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowDrillBreadcrumbs":"type: boolean, description: New value for property <code>showDrillBreadcrumbs<\/code>"}},"setShowDownloadButton":{"!description":"Sets a new value for property {@link #getShowDownloadButton showDownloadButton}.\n\nControls the visibility of the chart download button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDownloadButton?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowDownloadButton":"type: boolean, description: New value for property <code>showDownloadButton<\/code>"}},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the SmartChart control.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeaderStyle":{"!description":"Gets current value of property {@link #getHeaderStyle headerStyle}.\n\nDefines style of the header.<br> For more information, see {@link sap.m.Title#setTitle}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"fireShowOverlay":{"!description":"Fires event {@link #event:showOverlay showOverlay} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireSelectionDetailsActionPress":{"!description":"Fires event {@link #event:selectionDetailsActionPress selectionDetailsActionPress} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.comp.smartchart.SmartChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachDataReceived":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindChart<\/code> event to attach/listen to the binding \"events\" directly<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"exit":{"!description":"Cleans up the control.","!static":false,"!category":"function","!type":"fn()"},"setNoData":{"!description":"Sets a new value for property {@link #getNoData noData}.\n\nDefines the custom text that will be displayed in case no data is found for the current binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNoData?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sNoData":"type: string, description: New value for property <code>noData<\/code>"}},"!module":"sap/ui/comp/smartchart/SmartChart","setUseVariantManagement":{"!description":"Sets a new value for property {@link #getUseVariantManagement useVariantManagement}.\n\nIf set to <code>true<\/code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseVariantManagement?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseVariantManagement":"type: boolean, description: New value for property <code>useVariantManagement<\/code>"}},"getShowFullScreenButton":{"!description":"Gets current value of property {@link #getShowFullScreenButton showFullScreenButton}.\n\nControls the visibility of the FullScreen button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSmartVariant":{"!description":"ID of the element which is the current target of the association {@link #getSmartVariant smartVariant}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getSelectionDetailsItemActions":{"!description":"Gets content of aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.\n\nActions on item level which can be specified for the selection details popover.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getChartAsync":{"!description":"Returns a promise which will be resolved with the internally used chart object, once all dependencies have been loaded.<br> <b>Note:<\/b> Direct changes made to the inner {@link sap.chart.Chart chart} object or its {@link sap.viz.ui5.controls.VizFrame vizFrame} might lead to inconsistencies and side effects during runtime, as the <code>SmartChart<\/code> control doesn't listen to all changes made to the inner {@link sap.chart.Chart chart} instance. To avoid this, please use the API provided by the <code>SmartChart<\/code> control itself.","!static":false,"!category":"function","!type":"fn() -> Promise<sap.chart.Chart>"},"getUseChartPersonalisation":{"!description":"Gets current value of property {@link #getUseChartPersonalisation useChartPersonalisation}.\n\nIf set to <code>true<\/code>, personalized chart settings are defined. If you want to persist the chart personalization, you need to specify the persistencyKey property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireDataReceived":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindChart<\/code> event to attach/listen to the binding \"events\" directly<br>Fires event {@link #event:dataReceived dataReceived} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setHeaderStyle":{"!description":"Sets a new value for property {@link #getHeaderStyle headerStyle}.\n\nDefines style of the header.<br> For more information, see {@link sap.m.Title#setTitle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderStyle?: sap.ui.core.TitleLevel) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sHeaderStyle":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerStyle<\/code>"}},"getShowMeasuresTitle":{"!description":"Gets current value of property {@link #getShowMeasuresTitle showMeasuresTitle}.\n\nControls the visibility of the title in the measure area of the chart.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIgnoreFromPersonalisation":{"!description":"Gets current value of property {@link #getIgnoreFromPersonalisation ignoreFromPersonalisation}.\n\nCSV of fields that is not shown in the personalization dialog.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllSelectionDetailsActionGroups":{"!description":"Removes all the controls from the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"attachShowOverlay":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired right before the overlay is shown.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroySelectionDetailsItemActions":{"!description":"Destroys all the selectionDetailsItemActions in the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SmartChart"},"getUseVariantManagement":{"!description":"Gets current value of property {@link #getUseVariantManagement useVariantManagement}.\n\nIf set to <code>true<\/code>, variants are used. As a prerequisite, you need to specify the persistencyKey property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSemanticObjectController":{"!description":"Sets the aggregated {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn(oSemanticObjectController: sap.ui.comp.navpopover.SemanticObjectController) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSemanticObjectController":"type: sap.ui.comp.navpopover.SemanticObjectController, description: The semanticObjectController to set"}},"indexOfSelectionDetailsActionGroup":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsActionGroup: sap.ui.core.Item) -> Number","parameters":{"oSelectionDetailsActionGroup":"type: sap.ui.core.Item, description: The selectionDetailsActionGroup whose index is looked for"}},"getRequestAtLeastFields":{"!description":"Gets current value of property {@link #getRequestAtLeastFields requestAtLeastFields}.\n\nCSV of fields that must be always requested by the backend system.<br> This property is mainly meant to be used if there is no PresentationVariant annotation.<br> If both this property and the PresentationVariant annotation exist, the select request sent to the backend would be a combination of both.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters. Also, setting this property during runtime, will delete the current drill-stack and lead to a loss of the drill history.","!static":false,"!category":"function","!type":"fn() -> String"},"setCurrentVariantId":{"!description":"Applies the current variant based on the sVariantId parameter. If an empty string or null or undefined have been passed, the standard variant will be used. The standard variant will also be used if the passed sVariantId cannot be found. If the flexibility variant, the content for the standard variant, or the personalizable control cannot be obtained, no changes will be made.","!static":false,"!category":"function","!type":"fn(sVariantId: String)","parameters":{"sVariantId":"type: string, description: ID of the currently selected variant"}},"fireUiStateChange":{"!description":"Fires event {@link #event:uiStateChange uiStateChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addSelectionDetailsItemAction":{"!description":"Adds some selectionDetailsItemAction to the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsItemAction: sap.ui.core.Item) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSelectionDetailsItemAction":"type: sap.ui.core.Item, description: The selectionDetailsItemAction to add; if empty, nothing is inserted"}},"detachFullScreenToggled":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addSelectionDetailsAction":{"!description":"Adds some selectionDetailsAction to the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsAction: sap.ui.core.Item) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSelectionDetailsAction":"type: sap.ui.core.Item, description: The selectionDetailsAction to add; if empty, nothing is inserted"}},"fireBeforeRebindChart":{"!description":"Fires event {@link #event:beforeRebindChart beforeRebindChart} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowDetailsButton":{"!description":"Sets a new value for property {@link #getShowDetailsButton showDetailsButton}.\n\nControls the visibility of the Details button. If set to <code>true<\/code>, the datapoint tooltip will be disabled as the information of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDetailsButton?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowDetailsButton":"type: boolean, description: New value for property <code>showDetailsButton<\/code>"}},"getVariantManagement":{"!description":"Returns the associated SmartVariantManagement control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartvariants.SmartVariantManagement"},"getChart":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.57 replaced by {@link #getChartAsync}<br>Returns the chart object used internally.<br> <b>Note:<\/b> Direct changes made to the inner {@link sap.chart.Chart chart} object or its {@link sap.viz.ui5.controls.VizFrame vizFrame} might lead to inconsistencies and side effects during runtime, as the <code>SmartChart<\/code> control doesn\"t listen to all changes made to the inner {@link sap.chart.Chart chart} instance. To avoid this, please use the API provided by the <code>SmartChart<\/code> control itself. <b>Note:<\/b> Calling this method when the chart is not yet initialized causes the inner chart to load synchronously. This does not fulfill CSP requirements. Please use <code>getChartAsync<\/code> instead.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"detachInitialized":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialized initialized} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"openDialogForKeyUser":{"!description":"Opens the View Settings Dialog for the UI adaptation. <br><b>Note:<\/b> This function must only be used internally during the UI adaptation.","!static":false,"!category":"function","!type":"fn(sStyleClass: String, fCallBack: fn())","parameters":{"sStyleClass":"type: string, description: indicating the ui adaption area","fCallBack":"type: function, description: will be executed, once the dialog closes."}},"getShowZoomButtons":{"!description":"Gets current value of property {@link #getShowZoomButtons showZoomButtons}.\n\nControls the visibility of the Zoom In and Zoom Out buttons.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIgnoredChartTypes":{"!description":"Sets a new value for property {@link #getIgnoredChartTypes ignoredChartTypes}.\n\nCSV of fields that is not shown in the list of available chart types.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredChartTypes?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sIgnoredChartTypes":"type: string, description: New value for property <code>ignoredChartTypes<\/code>"}},"fireAfterVariantSave":{"!description":"Fires event {@link #event:afterVariantSave afterVariantSave} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAllSelectionDetailsItemActions":{"!description":"Removes all the controls from the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"fireInitialized":{"!description":"Fires event {@link #event:initialized initialized} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowChartTypeSelectionButton":{"!description":"Sets a new value for property {@link #getShowChartTypeSelectionButton showChartTypeSelectionButton}.\n\nControls the visibility of the chart type selection button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowChartTypeSelectionButton?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowChartTypeSelectionButton":"type: boolean, description: New value for property <code>showChartTypeSelectionButton<\/code>"}},"attachSelectionDetailsActionPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionDetailsActionPress selectionDetailsActionPress} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired when any action in the selection details popover is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachAfterVariantInitialise":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired after the variant management in the SmartChart control has been initialized.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterVariantSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getShowChartTypeSelectionButton":{"!description":"Gets current value of property {@link #getShowChartTypeSelectionButton showChartTypeSelectionButton}.\n\nControls the visibility of the chart type selection button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getToolbarStyle":{"!description":"Gets current value of property {@link #getToolbarStyle toolbarStyle}.\n\nDefines the visual style of the smart charts <code>Toolbar<\/code>. <b>Note:<\/b> The visual styles are theme-dependent.","!static":false,"!category":"function","!type":"fn() -> sap.m.ToolbarStyle"},"getShowDetailsButton":{"!description":"Gets current value of property {@link #getShowDetailsButton showDetailsButton}.\n\nControls the visibility of the Details button. If set to <code>true<\/code>, the datapoint tooltip will be disabled as the information of selected datapoints will be found in the details popover. This will also set the drill-down button to invisible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe entity set name from which to fetch data and generate the columns.<br> <b>Note<\/b> This is not a dynamic property.","!static":false,"!category":"function","!type":"fn() -> String"},"isInitialised":{"!description":"Checks whether the control is initialized.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUseChartPersonalisation":{"!description":"Sets a new value for property {@link #getUseChartPersonalisation useChartPersonalisation}.\n\nIf set to <code>true<\/code>, personalized chart settings are defined. If you want to persist the chart personalization, you need to specify the persistencyKey property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseChartPersonalisation?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseChartPersonalisation":"type: boolean, description: New value for property <code>useChartPersonalisation<\/code>"}},"getSelectionDetailsActionGroups":{"!description":"Gets content of aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.\n\nActions on group level which can be specified for the selection details popover.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"showOverlay":{"!description":"Sets the ShowOverlay property on the inner chart, fires the ShowOverlay event","!static":false,"!category":"function","!type":"fn(bShow: Boolean)","parameters":{"bShow":"type: boolean, description: true to display the overlay, otherwise false"}},"attachUiStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:uiStateChange uiStateChange} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired when the UI state changes either via the {@link sap.ui.comp.smartchart.SmartChart#setUiState} method or the chart personalization.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroySemanticObjectController":{"!description":"Destroys the semanticObjectController in the aggregation {@link #getSemanticObjectController semanticObjectController}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SmartChart"},"getIgnoredChartTypes":{"!description":"Gets current value of property {@link #getIgnoredChartTypes ignoredChartTypes}.\n\nCSV of fields that is not shown in the list of available chart types.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.","!static":false,"!category":"function","!type":"fn() -> String"},"removeSelectionDetailsAction":{"!description":"Removes a selectionDetailsAction from the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn(vSelectionDetailsAction: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vSelectionDetailsAction":"type: int|string|sap.ui.core.Item, description: The selectionDetailsAction to remove or its index or id"}},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header.<br> For more information, see {@link sap.m.Title#setLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.core.TitleLevel) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sHeaderLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"getShowToolbar":{"!description":"Gets current value of property {@link #getShowToolbar showToolbar}.\n\nControls the visibility of the toolbar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterVariantSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantSave afterVariantSave} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired after a variant has been saved. This event can be used to retrieve the ID of the saved variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachFullScreenToggled":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:fullScreenToggled fullScreenToggled} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired right after the full screen mode of the SmartChart control has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowDrillButtons":{"!description":"Gets current value of property {@link #getShowDrillButtons showDrillButtons}.\n\nControls the visibility of the Drill Up and Drill Down buttons.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowVariantManagement":{"!description":"Gets current value of property {@link #getShowVariantManagement showVariantManagement}.\n\nControls the visibility of the Variant Management.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setActivateTimeSeries":{"!description":"Sets a new value for property {@link #getActivateTimeSeries activateTimeSeries}.\n\nEnables the use of timeseries on the inner chart when corresponding annotation is given\n\n<b>Note:<\/b> This timeseries is only supported for the following {@link sap.chart.TimeUnitType TimeUnitTypes} and the following chart types {@link sap.viz.ui5.controls.VizFrame#getVizType}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bActivateTimeSeries?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bActivateTimeSeries":"type: boolean, description: New value for property <code>activateTimeSeries<\/code>"}},"setPersistencyKey":{"!description":"Sets a new value for property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPersistencyKey?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sPersistencyKey":"type: string, description: New value for property <code>persistencyKey<\/code>"}},"setShowToolbar":{"!description":"Change the visibility of the toolbar","!static":false,"!category":"function","!type":"fn(bShowToolbar: Boolean)","parameters":{"bShowToolbar":"type: boolean, description: If set to <code>true<\/code> the toolbar is shown, if set to <code>false<\/code> it is not visible"}},"getUseListForChartTypeSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Setting the property to <code>false<\/code> will have no effect on the visualization of chart type selection. <code>SmartChart<\/code> will always show a list of chart types.<br>Gets current value of property {@link #getUseListForChartTypeSelection useListForChartTypeSelection}.\n\nControls the visualization for chart type selection. If set to <code>true<\/code>, the list of available chart types will be displayed. If set to <code>false<\/code> and there are three or fewer available chart types, the chart types will be displayed as separate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllSelectionDetailsActions":{"!description":"Removes all the controls from the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header.<br> For more information, see {@link sap.m.Title#setLevel}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"setUseListForChartTypeSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48.0 Setting the property to <code>false<\/code> will have no effect on the visualization of chart type selection. <code>SmartChart<\/code> will always show a list of chart types.<br>Sets a new value for property {@link #getUseListForChartTypeSelection useListForChartTypeSelection}.\n\nControls the visualization for chart type selection. If set to <code>true<\/code>, the list of available chart types will be displayed. If set to <code>false<\/code> and there are three or fewer available chart types, the chart types will be displayed as separate buttons in the toolbar. If there are more than three chart types, a list will be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseListForChartTypeSelection?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseListForChartTypeSelection":"type: boolean, description: New value for property <code>useListForChartTypeSelection<\/code>"}},"getToolbar":{"!description":"Gets content of aggregation {@link #getToolbar toolbar}.\n\nA custom toolbar that can be specified by the user to define their own buttons, icons, etc. If this is added, the SmartChart control does not create its own toolbar, but uses this one instead. However, if default actions, such as showSemanticNavigation, showFullScreenButton etc. are set, these actions are added at the left-hand side of the toolbar.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"setEntitySet":{"!description":"The entity set name in the OData metadata against which the chart must be bound.","!static":false,"!category":"function","!type":"fn(sEntitySetName: String)","parameters":{"sEntitySetName":"type: string, description: The entity set"}},"fireInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.65 replaced by {@link initialized}.<br>Fires event {@link #event:initialise initialise} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.comp.smartchart.SmartChart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowLegendButton":{"!description":"Gets current value of property {@link #getShowLegendButton showLegendButton}.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.65 replaced by {@link initialized}.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:initialise initialise} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getShowSemanticNavigationButton":{"!description":"Gets current value of property {@link #getShowSemanticNavigationButton showSemanticNavigationButton}.\n\nControls the visibility of the Navigation button\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getActivateTimeSeries":{"!description":"Gets current value of property {@link #getActivateTimeSeries activateTimeSeries}.\n\nEnables the use of timeseries on the inner chart when corresponding annotation is given\n\n<b>Note:<\/b> This timeseries is only supported for the following {@link sap.chart.TimeUnitType TimeUnitTypes} and the following chart types {@link sap.viz.ui5.controls.VizFrame#getVizType}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChartBindingPath":{"!description":"Sets a new value for property {@link #getChartBindingPath chartBindingPath}.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartBindingPath?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sChartBindingPath":"type: string, description: New value for property <code>chartBindingPath<\/code>"}},"setSmartFilterId":{"!description":"Sets a new value for property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the closest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSmartFilterId?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sSmartFilterId":"type: string, description: New value for property <code>smartFilterId<\/code>"}},"getCurrentVariantId":{"!description":"Returns the ID of the currently selected variant.","!static":false,"!category":"function","!type":"fn() -> String"},"insertSelectionDetailsAction":{"!description":"Inserts a selectionDetailsAction into the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsAction: sap.ui.core.Item, iIndex: Number) -> sap.ui.comp.smartchart.SmartChart","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the selectionDetailsAction should be inserted at; for a negative value of <code>iIndex<\/code>, the selectionDetailsAction is inserted at position 0; for a value greater than the current size of the aggregation, the selectionDetailsAction is inserted at the last position","oSelectionDetailsAction":"type: sap.ui.core.Item, description: The selectionDetailsAction to insert; if empty, nothing is inserted"}},"getSelectionDetailsActions":{"!description":"Gets content of aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.\n\nActions on footer level which can be specified for the selection details popover.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getChartBindingPath":{"!description":"Gets current value of property {@link #getChartBindingPath chartBindingPath}.\n\nSpecifies the path that is used during the binding of the chart. If not specified, the entitySet property is used instead. (used only if binding is established internally/automatically - See enableAutoBinding)","!static":false,"!category":"function","!type":"fn() -> String"},"setUseTooltip":{"!description":"Sets a new value for property {@link #getUseTooltip useTooltip}.\n\nSpecifies weather an instance of {@link sap.viz.ui5.controls.VizTooltip} or {@link sap.viz.ui5.controls.Popover} is used. If set to <code>true<\/code>, a tooltip will be displayed, a popover otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseTooltip?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bUseTooltip":"type: boolean, description: New value for property <code>useTooltip<\/code>"}},"indexOfSelectionDetailsAction":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsAction: sap.ui.core.Item) -> Number","parameters":{"oSelectionDetailsAction":"type: sap.ui.core.Item, description: The selectionDetailsAction whose index is looked for"}},"detachShowOverlay":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:showOverlay showOverlay} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setNotAssignedText":{"!description":"Sets a new value for property {@link #getNotAssignedText notAssignedText}.\n\nText that is shown for values of an empty string. <b>Note:<\/b> The property does not change the behavior for charts of type <code>timeseries<\/code>. <b>Note:<\/b> Can only be changed in the XML/JS view. It cannot be changed once the control has been initialized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sNotAssignedText?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sNotAssignedText":"type: string, description: New value for property <code>notAssignedText<\/code>"}},"!helpDescription":"The <code>SmartChart<\/code> control creates a chart based on the OData metadata and the provided configuration. To use the control, the <code>entitySet<\/code> property must be specified. This property is used to fetch the metadata, from which the chart UI will be generated.<br> Based on the <code>chartType<\/code> property, this control will render initially the corresponding chart.<br> <b>Note:<\/b> Most of the properties are not dynamic and cannot be changed once the control has been initialized.\n\n<b>Important:<\/b> Keep in mind that <code>SmartChart<\/code>, like all SAPUI5 smart controls, retrieves and analyzes the metadata and annotations of OData services. <b>The OData metadata is its primary API. These OData services are not part of the SAPUI5 framework and are usually maintained by the backend developers of your application.<\/b>\n\nWith time, <code>SmartChart<\/code> can evolve and acquire new features. This means that its behavior or functionalities may change if the annotations that define this change are maintained in your backend metadata. To benefit from the new functionalities, your application should be able to adapt the backend metadata. <b>Therefore, we recommend using <code>SmartChart<\/code> only if you have control over the metadata of your application.<\/b>","detachUiStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:uiStateChange uiStateChange} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachDataReceived":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use <code>beforeRebindChart<\/code> event to attach/listen to the binding \"events\" directly<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataReceived dataReceived} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired when data is received after binding. This event is fired if the binding for the chart is done by the SmartChart control itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSemanticObjectController":{"!description":"Gets content of aggregation {@link #getSemanticObjectController semanticObjectController}.\n\nThe Semantic Object Controller allows the user to specify and overwrite functionality for semantic object navigation.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.navpopover.SemanticObjectController"},"getEnableAutoBinding":{"!description":"Gets current value of property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property. This happens right after the <code>initialise<\/code> event has been fired.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.m.VBox","getSelectionMode":{"!description":"Gets current value of property {@link #getSelectionMode selectionMode}.\n\nChart selection mode. Supported values are {@link sap.ui.comp.smartchart.SelectionMode.Single} or {@link sap.ui.comp.smartchart.SelectionMode.Multi}, case insensitive, always return in upper case. Unsupported values will be ignored.\n\nDefault value is <code>Multi<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SelectionMode"},"!category":"class","getShowDownloadButton":{"!description":"Gets current value of property {@link #getShowDownloadButton showDownloadButton}.\n\nControls the visibility of the chart download button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforeRebindChart":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeRebindChart beforeRebindChart} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired right before the <code>SmartChart<\/code> control triggers the binding / rebinding of the inner chart.<br> <b>Note:<\/b> In certain cases the inner chart triggers a rebinding by itself. In these cases, the event is not fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getLegendVisible":{"!description":"Gets current value of property {@link #getLegendVisible legendVisible}.\n\nSet chart's legend properties.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowChartTooltip":{"!description":"Gets current value of property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip. If set to <code>true <\/code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in the chart.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new SmartChart instance.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<li>{@link #getSmartFilterId smartFilterId} : string<\/li>\n<li>{@link #getIgnoredFields ignoredFields} : string<\/li>\n<li>{@link #getRequestAtLeastFields requestAtLeastFields} : string<\/li>\n<li>{@link #getIgnoreFromPersonalisation ignoreFromPersonalisation} : string<\/li>\n<li>{@link #getChartType chartType} : string<\/li>\n<li>{@link #getIgnoredChartTypes ignoredChartTypes} : string<\/li>\n<li>{@link #getUseVariantManagement useVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getUseChartPersonalisation useChartPersonalisation} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getHeaderStyle headerStyle} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getPersistencyKey persistencyKey} : string<\/li>\n<li>{@link #getCurrentVariantId currentVariantId} : string<\/li>\n<li>{@link #getEnableAutoBinding enableAutoBinding} : boolean (default: false)<\/li>\n<li>{@link #getChartBindingPath chartBindingPath} : string<\/li>\n<li>{@link #getShowDrillButtons showDrillButtons} : boolean (default: true)<\/li>\n<li>{@link #getShowZoomButtons showZoomButtons} : boolean (default: true)<\/li>\n<li>{@link #getShowSemanticNavigationButton showSemanticNavigationButton} : boolean (default: true)<\/li>\n<li>{@link #getShowVariantManagement showVariantManagement} : boolean (default: true)<\/li>\n<li>{@link #getShowDownloadButton showDownloadButton} : boolean (default: false)<\/li>\n<li>{@link #getShowDetailsButton showDetailsButton} : boolean (default: false)<\/li>\n<li>{@link #getShowDrillBreadcrumbs showDrillBreadcrumbs} : boolean (default: false)<\/li>\n<li>{@link #getShowChartTooltip showChartTooltip} : boolean (default: true)<\/li>\n<li>{@link #getShowLegendButton showLegendButton} : boolean (default: true)<\/li>\n<li>{@link #getLegendVisible legendVisible} : boolean (default: true)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.ui.comp.smartchart.SelectionMode (default: Multi)<\/li>\n<li>{@link #getShowFullScreenButton showFullScreenButton} : boolean (default: true)<\/li>\n<li>{@link #getUseTooltip useTooltip} : boolean (default: true)<\/li>\n<li>{@link #getUseListForChartTypeSelection useListForChartTypeSelection} : boolean (default: true)<\/li>\n<li>{@link #getShowChartTypeSelectionButton showChartTypeSelectionButton} : boolean (default: true)<\/li>\n<li>{@link #getNoData noData} : string<\/li>\n<li>{@link #getShowToolbar showToolbar} : boolean (default: true)<\/li>\n<li>{@link #getToolbarStyle toolbarStyle} : sap.m.ToolbarStyle<\/li>\n<li>{@link #getShowDimensionsTitle showDimensionsTitle} : boolean (default: true)<\/li>\n<li>{@link #getShowMeasuresTitle showMeasuresTitle} : boolean (default: true)<\/li>\n<li>{@link #getActivateTimeSeries activateTimeSeries} : boolean (default: false)<\/li>\n<li>{@link #getNotAssignedText notAssignedText} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getToolbar toolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getSemanticObjectController semanticObjectController} : sap.ui.comp.navpopover.SemanticObjectController<\/li>\n<li>{@link #getSelectionDetailsItemActions selectionDetailsItemActions} : sap.ui.core.Item[]<\/li>\n<li>{@link #getSelectionDetailsActions selectionDetailsActions} : sap.ui.core.Item[]<\/li>\n<li>{@link #getSelectionDetailsActionGroups selectionDetailsActionGroups} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSmartVariant smartVariant} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialise initialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRebindChart beforeRebindChart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataReceived dataReceived} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantInitialise afterVariantInitialise} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantSave afterVariantSave} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterVariantApply afterVariantApply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:showOverlay showOverlay} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fullScreenToggled fullScreenToggled} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionDetailsActionPress selectionDetailsActionPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:chartDataChanged chartDataChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uiStateChange uiStateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.VBox#constructor sap.m.VBox}\ncan be used as well.","detachSelectionDetailsActionPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionDetailsActionPress selectionDetailsActionPress} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getUseTooltip":{"!description":"Gets current value of property {@link #getUseTooltip useTooltip}.\n\nSpecifies weather an instance of {@link sap.viz.ui5.controls.VizTooltip} or {@link sap.viz.ui5.controls.Popover} is used. If set to <code>true<\/code>, a tooltip will be displayed, a popover otherwise.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIgnoredFields":{"!description":"Sets a new value for property {@link #getIgnoredFields ignoredFields}.\n\nCSV of fields that must be ignored in the OData metadata by the SmartChart control.<br> <b>Note:<\/b> No validation is done. Please ensure that you do not add spaces or special characters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIgnoredFields?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sIgnoredFields":"type: string, description: New value for property <code>ignoredFields<\/code>"}},"detachChartDataChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:chartDataChanged chartDataChanged} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"insertSelectionDetailsActionGroup":{"!description":"Inserts a selectionDetailsActionGroup into the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsActionGroup: sap.ui.core.Item, iIndex: Number) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSelectionDetailsActionGroup":"type: sap.ui.core.Item, description: The selectionDetailsActionGroup to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the selectionDetailsActionGroup should be inserted at; for a negative value of <code>iIndex<\/code>, the selectionDetailsActionGroup is inserted at position 0; for a value greater than the current size of the aggregation, the selectionDetailsActionGroup is inserted at the last position"}},"getUiState":{"!description":"The method returns the current UI state of SmartChart control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.state.UIState"},"setEnableAutoBinding":{"!description":"Sets a new value for property {@link #getEnableAutoBinding enableAutoBinding}.\n\nIf set to <code>true<\/code>, this enables automatic binding of the chart using the chartBindingPath (if it exists) or entitySet property. This happens right after the <code>initialise<\/code> event has been fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoBinding?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bEnableAutoBinding":"type: boolean, description: New value for property <code>enableAutoBinding<\/code>"}},"getShowDrillBreadcrumbs":{"!description":"Gets current value of property {@link #getShowDrillBreadcrumbs showDrillBreadcrumbs}.\n\nControls the visibility of the Breadcrumbs control for drilling up within the visible dimensions. If set to <code>true<\/code>, the toolbar header will be replaced by the Breadcrumbs control. This will also set the drill-up button to invisible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachAfterVariantInitialise":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterVariantInitialise afterVariantInitialise} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setShowVariantManagement":{"!description":"Sets a new value for property {@link #getShowVariantManagement showVariantManagement}.\n\nControls the visibility of the Variant Management.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowVariantManagement?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowVariantManagement":"type: boolean, description: New value for property <code>showVariantManagement<\/code>"}},"getPersistencyKey":{"!description":"Gets current value of property {@link #getPersistencyKey persistencyKey}.\n\nKey used to access personalization data.","!static":false,"!category":"function","!type":"fn() -> String"},"attachAfterVariantApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterVariantApply afterVariantApply} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired after a variant has been applied.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroySelectionDetailsActionGroups":{"!description":"Destroys all the selectionDetailsActionGroups in the aggregation {@link #getSelectionDetailsActionGroups selectionDetailsActionGroups}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SmartChart"},"setSmartVariant":{"!description":"Sets the associated {@link #getSmartVariant smartVariant}.","!static":false,"!category":"function","!type":"fn(oSmartVariant: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oSmartVariant":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this smartVariant association; alternatively, an element instance may be given"}},"attachInitialise":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.94 replaced by {@link #event:initialized}<br>Loads the chart lib synchronously before the event is attached. That is done for compatibility reasons. <b>Note:<\/b> Attaching to this event causes the inner chart to load synchronously. This does not fulfill CSP requirements. Please use event <code>initialized<\/code> instead.","!static":false,"!category":"function","!type":"fn()"},"destroyToolbar":{"!description":"Destroys the toolbar in the aggregation {@link #getToolbar toolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SmartChart"},"destroySelectionDetailsActions":{"!description":"Destroys all the selectionDetailsActions in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.smartchart.SmartChart"},"attachInitialized":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:initialized initialized} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired once the control has been initialized, asynchronous successor of <code>initialise<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowChartTooltip":{"!description":"Sets a new value for property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip. If set to <code>true <\/code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowChartTooltip?: Boolean) -> sap.ui.comp.smartchart.SmartChart","parameters":{"bShowChartTooltip":"type: boolean, description: New value for property <code>showChartTooltip<\/code>"}},"fireChartDataChanged":{"!description":"Fires event {@link #event:chartDataChanged chartDataChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setChartType":{"!description":"Sets a new value for property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the SmartChart control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sChartType?: String) -> sap.ui.comp.smartchart.SmartChart","parameters":{"sChartType":"type: string, description: New value for property <code>chartType<\/code>"}},"setUiState":{"!description":"The method replaces the current UI state of SmartChart control with the data represented in <code>uiState<\/code>.","!static":false,"!category":"function","!type":"fn(oUiState: sap.ui.comp.state.UIState)","parameters":{"oUiState":"type: sap.ui.comp.state.UIState, description: the new representation of UI state"}},"attachChartDataChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:chartDataChanged chartDataChanged} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself.\n\nThis event is fired when <code>SmartChart<\/code> control data changes, due to changes in the personalization dialog or drill operations.<br> The data can be changed via sorters, filters or drill-ups/drill-downs.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.comp.smartchart.SmartChart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachBeforeRebindChart":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeRebindChart beforeRebindChart} event of this <code>sap.ui.comp.smartchart.SmartChart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.comp.smartchart.SmartChart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getNotAssignedText":{"!description":"Gets current value of property {@link #getNotAssignedText notAssignedText}.\n\nText that is shown for values of an empty string. <b>Note:<\/b> The property does not change the behavior for charts of type <code>timeseries<\/code>. <b>Note:<\/b> Can only be changed in the XML/JS view. It cannot be changed once the control has been initialized.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeSelectionDetailsItemAction":{"!description":"Removes a selectionDetailsItemAction from the aggregation {@link #getSelectionDetailsItemActions selectionDetailsItemActions}.","!static":false,"!category":"function","!type":"fn(vSelectionDetailsItemAction: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vSelectionDetailsItemAction":"type: int|string|sap.ui.core.Item, description: The selectionDetailsItemAction to remove or its index or id"}},"fetchVariant":{"!description":"Function for the {@link sap.ui.comp.smartvariants.SmartVariantManagement} control that returns the currently used variant data in an internal format. <b>Note:<\/b> This function must not be used by applications.","!static":false,"!category":"function","!type":"fn() -> sap.ui.comp.SmartChart.Variant"},"getSmartFilterId":{"!description":"Gets current value of property {@link #getSmartFilterId smartFilterId}.\n\nID of the corresponding SmartFilter control. If specified, the SmartChart control searches for the SmartFilter control (also in the closest parent view) and attaches to the relevant events of the SmartFilter control to fetch data, show overlay etc.","!static":false,"!category":"function","!type":"fn() -> String"}}}}