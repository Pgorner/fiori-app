{"!name":"sap.ui.rta","!version":"1.21.1","!define":{"sap.ui.rta":{"enablement":"sap.ui.rta.enablement","util":"sap.ui.rta.util","plugin":"sap.ui.rta.plugin","service":"sap.ui.rta.service","origin":{"!description":"Receiving window origin; a valid origin has to be specified, see {@link https://html.spec.whatwg.org/multipage/origin.html#origin}","!category":"enum","!type":"String"},"!category":"namespace","window":{"!description":"Receiving window object; has to be a different window than the window in which this client is used","!category":"enum","!type":"Object"},"Client":"sap.ui.rta.Client_obj"},"sap.ui.rta.plugin":{"annotations":"sap.ui.rta.plugin.annotations","!category":"namespace"},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.rta.Client_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.rta.Client with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.rta.Client"},"sap.ui.rta.enablement":{"TestDelegate":"sap.ui.rta.enablement.TestDelegate","!category":"namespace"},"sap.ui.rta.enablement.TestDelegate":{"!description":"sap.ui.fl Delegate to be used in elementActionTests.","!module":"sap/ui/rta/enablement/TestDelegate","!helpDescription":"sap.ui.fl Delegate to be used in elementActionTests.","!category":"namespace"},"sap.ui":{"!category":"namespace","rta":"sap.ui.rta"},"sap.ui.rta.service.Action":{"!description":"Provides necessary functionality to get and execute actions on controls. Actions are UI operations available in key user adaptation such as rename, remove, move etc.","!module":"sap/ui/rta/service/Action","!helpDescription":"Provides necessary functionality to get and execute actions on controls. Actions are UI operations available in key user adaptation such as rename, remove, move etc.","get":{"!description":"Returns a list of available actions for the specified control(s) wrapped in a promise.\n\nExample:\n\n<pre>\n[\n    {\n        \"id\": \"CTX_RENAME\",\n        \"text\": \"Rename\",\n        \"enabled\": false,\n        \"rank\": 10,\n        \"icon\": \"sap-icon://edit\"\n    },\n    {\n        \"id\": \"CTX_ADD_ELEMENTS_AS_SIBLING\",\n        \"text\": \"Add Field\",\n        \"enabled\": false,\n        \"rank\": 20,\n        \"icon\": \"sap-icon://add\",\n        \"group\": \"Add\"\n    },\n    {\n        \"id\": \"CTX_REMOVE\",\n        \"text\": \"Remove\",\n        \"enabled\": true,\n        \"rank\": 60,\n        \"icon\": \"sap-icon://decline\"\n    },\n    {\n        \"id\": \"CTX_CUT\",\n        \"text\": \"Cut\",\n        \"enabled\": false,\n        \"rank\": 70,\n        \"icon\": \"sap-icon://scissors\"\n    },\n    {\n        \"id\": \"CTX_PASTE\",\n        \"text\": \"Paste\",\n        \"enabled\": false,\n        \"rank\": 80,\n        \"icon\": \"sap-icon://paste\"\n    }\n]\n<\/pre>","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String]) -> [Promise<sap.ui.rta.service.Action.ActionObject]"},"!category":"namespace","execute":{"!description":"Returns a list of available actions for the specified control(s).","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String], sActionId: String) -> Promise<any>"}},"sap.ui.rta.service":{"Action":"sap.ui.rta.service.Action","SupportTools":"sap.ui.rta.service.SupportTools","Selection":"sap.ui.rta.service.Selection","ControllerExtension":"sap.ui.rta.service.ControllerExtension","Outline":"sap.ui.rta.service.Outline","!category":"namespace","Property":"sap.ui.rta.service.Property"},"sap.ui.rta.Client":{"!description":"<h3>Overview<\/h3> This client is used to access the <code>sap.ui.RuntimeAuthoring<\/code> instance that is running in a separate window.\n\n<h4>Example:<\/h4> <pre>\nsap.ui.require(['sap/ui/rta/Client'], function (RTAClient) {\n    var oRTAClient = new RTAClient({\n        window: <Receiving window>,\n        origin: <Origin of receiving window>\n    });\n\n    oRTAClient.getService('selection').then(function (oSelectionService) {\n        oSelectionService.add('__button0').then(\n            function (vResult) {\n                // vResult contains response from add() function of sap.ui.rta.service.Selection\n            },\n            function (vError) {\n                // Error that happens during the operation\n            }\n        );\n    });\n});\n<\/pre>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.rta.Client.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getOrigin":{"!description":"Gets current value of property {@link #getOrigin origin}.\n\nReceiving window origin; a valid origin has to be specified, see {@link https://html.spec.whatwg.org/multipage/origin.html#origin}","!static":false,"!category":"function","!type":"fn() -> String"},"getWindow":{"!description":"Gets current value of property {@link #getWindow window}.\n\nReceiving window object; has to be a different window than the window in which this client is used","!static":false,"!category":"function","!type":"fn() -> Object"},"setOrigin":{"!description":"Sets a new value for property {@link #getOrigin origin}.\n\nReceiving window origin; a valid origin has to be specified, see {@link https://html.spec.whatwg.org/multipage/origin.html#origin}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sOrigin: String) -> sap.ui.rta.Client","parameters":{"sOrigin":"type: string, description: New value for property <code>origin<\/code>"}},"!proto":"sap.ui.base.ManagedObject","destroy":{"!description":"Destroys the client. After an object has been destroyed, it can no longer be used.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","setWindow":{"!description":"Sets a new value for property {@link #getWindow window}.\n\nReceiving window object; has to be a different window than the window in which this client is used\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oWindow: Object) -> sap.ui.rta.Client","parameters":{"oWindow":"type: object, description: New value for property <code>window<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.rta.Client with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWindow window} : object<\/li>\n<li>{@link #getOrigin origin} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/ui/rta/Client","!helpDescription":"<h3>Overview<\/h3> This client is used to access the <code>sap.ui.RuntimeAuthoring<\/code> instance that is running in a separate window.\n\n<h4>Example:<\/h4> <pre>\nsap.ui.require(['sap/ui/rta/Client'], function (RTAClient) {\n    var oRTAClient = new RTAClient({\n        window: <Receiving window>,\n        origin: <Origin of receiving window>\n    });\n\n    oRTAClient.getService('selection').then(function (oSelectionService) {\n        oSelectionService.add('__button0').then(\n            function (vResult) {\n                // vResult contains response from add() function of sap.ui.rta.service.Selection\n            },\n            function (vError) {\n                // Error that happens during the operation\n            }\n        );\n    });\n});\n<\/pre>"},"sap.ui.rta.service.Outline":{"!description":"Provides necessary functionality to get tree model data for an outline. Takes into consideration different design time root elements.","!module":"sap/ui/rta/service/Outline","!helpDescription":"Provides necessary functionality to get tree model data for an outline. Takes into consideration different design time root elements.","get":{"!description":"Returns an outline model data associated with the key user adaptation instance, starting from the passed control. If no control is passed, the root control(s) of the respective key user adaptation instance is taken as the initial control. Throws an error if the control ID parameter is not a valid control with a stable ID.","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String], sId: String, iDepth?: Number) -> sap.ui.rta.service.Outline.OutlineObject"},"!category":"namespace"},"sap.ui.rta.service.Property":{"!description":"Provides necessary functionality to retrieve design time metadata properties. Takes into consideration control metadata properties, design time metadata properties, annotations, label and name.","!module":"sap/ui/rta/service/Property","!helpDescription":"Provides necessary functionality to retrieve design time metadata properties. Takes into consideration control metadata properties, design time metadata properties, annotations, label and name.","get":{"!description":"Returns an object containing design time properties for the passed control's ID. Throws an error if the control ID parameter is not a valid control with a stable ID.\n\nExample:\n\n<pre>\n\t{\n\t\t\"properties\": {\n\t\t\t<...>,\n\t\t\t\"virtualProperty1\": {\n\t\t\t\t<...>\n\t\t\t},\n\t\t\t\"metadataProperty1\": {\n\t\t\t\t<...>\n\t\t\t}\n\t\t},\n\t\t\"annotations\": {\n\t\t\t\"annotation1\": {\n\t\t\t\t<...>\n\t\t\t},\n\t\t\t<...>\n\t\t},\n\t\t\"links\": {\n\t\t\t<...>\n\t\t},\n\t\t<...>\n\t}\n<\/pre>","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String], sId: String, iDepth?: Number, sControlId: String) -> sap.ui.rta.service.Property.PropertyObject"},"!category":"namespace"},"sap.ui.rta.plugin.annotations":{"!category":"namespace"},"sap.ui.rta.util.ReloadManager":{"!description":"Static class to handle all the reload related functionality for UI Adaptation","!module":"sap/ui/rta/util/ReloadManager","!helpDescription":"Static class to handle all the reload related functionality for UI Adaptation","!category":"namespace"},"sap.ui.rta.service.ControllerExtension":{"!description":"Provides functionality to create <code>ControllerExtensions<\/code>.","add":{"!description":"Creates a change that adds an extension to the controller associated with the given view. Throws an error if the information is not complete. As of now, this only creates the change with a reference to a file. The consumer has to take care of creating that file and adding it to the backend.","!static":"true","!category":"function","!type":"fn(sCodeRef: String, sViewId: String) -> Object"},"!module":"sap/ui/rta/service/ControllerExtension","!helpDescription":"Provides functionality to create <code>ControllerExtensions<\/code>.","getTemplate":{"!description":"Gets the controller extension template from the <code>DesignTimeMetadata<\/code> of the given view and returns it as a string wrapped in a promise. If there is no template specified, a default template will be returned.","!static":"true","!category":"function","!type":"fn(sViewId: String) -> Promise<string>"},"!category":"namespace"},"sap.ui.rta.service.Selection":{"!description":"Provides functionality to get and set selection on controls.","add":{"!description":"Adds the specified controls to the current selection.","!static":"true","!category":"function","!type":"fn(sCodeRef: String, sViewId: String, vControlIds: [String | String]) -> Boolean"},"removeHover":{"!description":"Removes hover effect from the specified controls.","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String])"},"set":{"!description":"Deselects the current selection and selects the specified list of controls.","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String]) -> Boolean"},"!module":"sap/ui/rta/service/Selection","!helpDescription":"Provides functionality to get and set selection on controls.","get":{"!description":"Gets list of currently selected controls.","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String], sId: String, iDepth?: Number, sControlId: String) -> [String]"},"reset":{"!description":"Resets the current selection.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"!category":"namespace","addHover":{"!description":"Adds hover effect to the specified controls.","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String])"},"remove":{"!description":"Removes the selection from the specified controls.","!static":"true","!category":"function","!type":"fn(vControlIds: [String | String]) -> Boolean"}},"sap.ui.rta.service.SupportTools":{"!description":"Service to register message event listeners for the communication with the Flex Support web extension.\n\nThis is implemented as a service and not as part of the injected script because there is no easy way to retrieve the RuntimeAuthoring instance otherwise.","!module":"sap/ui/rta/service/SupportTools","!helpDescription":"Service to register message event listeners for the communication with the Flex Support web extension.\n\nThis is implemented as a service and not as part of the injected script because there is no easy way to retrieve the RuntimeAuthoring instance otherwise.","!category":"namespace"},"sap.ui.rta.util":{"ReloadManager":"sap.ui.rta.util.ReloadManager","!category":"namespace"}}}