{"enums":{"sap.ui.vtm.PredefinedView":{"Left":{"Deprecated":false,"Experimental":false,"description":"The view from the left.","helpDescription":"The view from the left.","DeprecatedInfo":{"isDeprecated":false},"value":"Left"},"Top":{"Deprecated":false,"Experimental":false,"description":"The view from the top.","helpDescription":"The view from the top.","DeprecatedInfo":{"isDeprecated":false},"value":"Top"},"Front":{"Deprecated":false,"Experimental":false,"description":"The view from the front.","helpDescription":"The view from the front.","DeprecatedInfo":{"isDeprecated":false},"value":"Front"},"Back":{"Deprecated":false,"Experimental":false,"description":"The view from the back.","helpDescription":"The view from the back.","DeprecatedInfo":{"isDeprecated":false},"value":"Back"},"Right":{"Deprecated":false,"Experimental":false,"description":"The view from the right.","helpDescription":"The view from the right.","DeprecatedInfo":{"isDeprecated":false},"value":"Right"},"Bottom":{"Deprecated":false,"Experimental":false,"description":"The view from the bottom.","helpDescription":"The view from the bottom.","DeprecatedInfo":{"isDeprecated":false},"value":"Bottom"}},"sap.ui.vtm.ChildCollectionType":{"IncludedAndExcluded":{"Deprecated":false,"Experimental":false,"description":"The operation should apply to the <code>includedChildren<\/code> and the <code>excludedChildren<\/code> collection of the tree item.","helpDescription":"The operation should apply to the <code>includedChildren<\/code> and the <code>excludedChildren<\/code> collection of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"IncludedAndExcluded"},"Included":{"Deprecated":false,"Experimental":false,"description":"The operation should apply to the <code>includedChildren<\/code> collection of the tree item only.","helpDescription":"The operation should apply to the <code>includedChildren<\/code> collection of the tree item only.","DeprecatedInfo":{"isDeprecated":false},"value":"Included"},"None":{"Deprecated":false,"Experimental":false,"description":"The operation should not apply to either the <code>includedChildren<\/code> or <code>excludedChildren<\/code> collection of the tree item.","helpDescription":"The operation should not apply to either the <code>includedChildren<\/code> or <code>excludedChildren<\/code> collection of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"None"},"Excluded":{"Deprecated":false,"Experimental":false,"description":"The operation should apply to the <code>excludedChildren<\/code> collection of the tree item only.","helpDescription":"The operation should apply to the <code>excludedChildren<\/code> collection of the tree item only.","DeprecatedInfo":{"isDeprecated":false},"value":"Excluded"}},"sap.ui.vtm.InternalColumnDescriptor":{"MessageStatus":{"Deprecated":false,"Experimental":false,"description":"The column that is used to provide an indication of the messages that apply to the tree item and its descendants.","helpDescription":"The column that is used to provide an indication of the messages that apply to the tree item and its descendants.","DeprecatedInfo":{"isDeprecated":false},"value":"MessageStatus"},"Tree":{"Deprecated":false,"Experimental":false,"description":"The column that contains the tree item name and the tree type icon. This must always be the first column.","helpDescription":"The column that contains the tree item name and the tree type icon. This must always be the first column.","DeprecatedInfo":{"isDeprecated":false},"value":"Tree"},"AbsoluteMatrix":{"Deprecated":false,"Experimental":false,"description":"A column showing the <code>absoluteMatrix<\/code> field of the tree item.","helpDescription":"A column showing the <code>absoluteMatrix<\/code> field of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"AbsoluteMatrix"},"HighlightColor":{"Deprecated":false,"Experimental":false,"description":"A column showing the <code>highlightColor<\/code> field of the tree item.","helpDescription":"A column showing the <code>highlightColor<\/code> field of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"HighlightColor"},"Visibility":{"Deprecated":false,"Experimental":false,"description":"The column that is used to indicate and control visibility of the scene nodes associated with the tree item.","helpDescription":"The column that is used to indicate and control visibility of the scene nodes associated with the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"Visibility"},"Opacity":{"Deprecated":false,"Experimental":false,"description":"A column showing the <code>opacity<\/code> field of the tree item.","helpDescription":"A column showing the <code>opacity<\/code> field of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"Opacity"},"SceneNodeIds":{"Deprecated":false,"Experimental":false,"description":"A column showing the <code>sceneNodeIds<\/code> field of the tree item.","helpDescription":"A column showing the <code>sceneNodeIds<\/code> field of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"SceneNodeIds"},"RelativeMatrix":{"Deprecated":false,"Experimental":false,"description":"A column showing the <code>relativeMatrix<\/code> field of the tree item.","helpDescription":"A column showing the <code>relativeMatrix<\/code> field of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"RelativeMatrix"},"TreeItemId":{"Deprecated":false,"Experimental":false,"description":"A column containing the <code>id<\/code> field of the tree item.","helpDescription":"A column containing the <code>id<\/code> field of the tree item.","DeprecatedInfo":{"isDeprecated":false},"value":"TreeItemId"}},"sap.ui.vtm.SelectionMode":{"Single":{"Deprecated":false,"Experimental":false,"description":"Single selection mode.","helpDescription":"Single selection mode.","DeprecatedInfo":{"isDeprecated":false},"value":"Single"},"MultiToggle":{"Deprecated":false,"Experimental":false,"description":"A multiple selection mode that toggles the selection state of a row when it is clicked.","helpDescription":"A multiple selection mode that toggles the selection state of a row when it is clicked.","DeprecatedInfo":{"isDeprecated":false},"value":"MultiToggle"}},"sap.ui.vtm.ColumnType":{"Identifier":{"Deprecated":false,"Experimental":false,"description":"The Identifier column type. This type of column represents identifiers retrieved from viewables (or metadata values supplied by the application which will be present in exported viewables).","helpDescription":"The Identifier column type. This type of column represents identifiers retrieved from viewables (or metadata values supplied by the application which will be present in exported viewables).","DeprecatedInfo":{"isDeprecated":false},"value":"Identifier"},"AppData":{"Deprecated":false,"Experimental":false,"description":"The AppData (application data) column type. This type of column represents application data that is neither metadata nor identifier data.","helpDescription":"The AppData (application data) column type. This type of column represents application data that is neither metadata nor identifier data.","DeprecatedInfo":{"isDeprecated":false},"value":"AppData"},"Internal":{"Deprecated":false,"Experimental":false,"description":"The Internal column type. Columns of this type: <ul> <li>Should not be used for application data (all columns of this type are defined by VTM).<\/li> <li>Is not normally expected to be used by end users (columns of this type are typically expected to be used for development/debugging).<\/li> <\/ul>","helpDescription":"The Internal column type. Columns of this type: <ul> <li>Should not be used for application data (all columns of this type are defined by VTM).<\/li> <li>Is not normally expected to be used by end users (columns of this type are typically expected to be used for development/debugging).<\/li> <\/ul>","DeprecatedInfo":{"isDeprecated":false},"value":"Internal"},"Metadata":{"Deprecated":false,"Experimental":false,"description":"The Metadata column type. This type of column represents metadata retrieved from viewables (or metadata values supplied by the application which will be present in exported viewables).","helpDescription":"The Metadata column type. This type of column represents metadata retrieved from viewables (or metadata values supplied by the application which will be present in exported viewables).","DeprecatedInfo":{"isDeprecated":false},"value":"Metadata"}},"sap.ui.vtm.TextColor":{"Gray":{"Deprecated":false,"Experimental":false,"description":"Gray.","helpDescription":"Gray.","DeprecatedInfo":{"isDeprecated":false},"value":"Gray"},"Default":{"Deprecated":false,"Experimental":false,"description":"The default text color.","helpDescription":"The default text color.","DeprecatedInfo":{"isDeprecated":false},"value":"Default"},"Grey":{"Deprecated":false,"Experimental":false,"description":"Grey. A synonym for Gray.","helpDescription":"Grey. A synonym for Gray.","DeprecatedInfo":{"isDeprecated":false},"value":"Grey"}},"sap.ui.vtm.TreeItemType":{"Included":{"Deprecated":false,"Experimental":false,"description":"A tree item that can be shown in the tree. A tree item is an included tree item when it is a root tree item or is included in the <code>includedChildren<\/code> collection of its parent.","helpDescription":"A tree item that can be shown in the tree. A tree item is an included tree item when it is a root tree item or is included in the <code>includedChildren<\/code> collection of its parent.","DeprecatedInfo":{"isDeprecated":false},"value":"Included"},"IncludedOrExcluded":{"Deprecated":false,"Experimental":false,"description":"Matches either included or excluded tree items.","helpDescription":"Matches either included or excluded tree items.","DeprecatedInfo":{"isDeprecated":false},"value":"IncludedOrExcluded"},"Excluded":{"Deprecated":false,"Experimental":false,"description":"A tree item that is in the object hierarchy of the tree model, but cannot be shown in the tree. A tree item is an excluded tree item when any ancestor of the tree item is included in the <code>excludedChildren<\/code> collection of its parent.","helpDescription":"A tree item that is in the object hierarchy of the tree model, but cannot be shown in the tree. A tree item is an excluded tree item when any ancestor of the tree item is included in the <code>excludedChildren<\/code> collection of its parent.","DeprecatedInfo":{"isDeprecated":false},"value":"Excluded"}},"sap.ui.vtm.ViewableLoadStatus":{"DownloadFailed":{"Deprecated":false,"Experimental":false,"description":"The attempt to download the {@link sap.ui.vtm.Viewable} failed.","helpDescription":"The attempt to download the {@link sap.ui.vtm.Viewable} failed.","DeprecatedInfo":{"isDeprecated":false},"value":"DownloadFailed"},"Downloading":{"Deprecated":false,"Experimental":false,"description":"The {@link sap.ui.vtm.Viewable} is being downloaded.","helpDescription":"The {@link sap.ui.vtm.Viewable} is being downloaded.","DeprecatedInfo":{"isDeprecated":false},"value":"Downloading"},"LoadFailed":{"Deprecated":false,"Experimental":false,"description":"The attempt to load the {@link sap.ui.vtm.Viewable} failed.","helpDescription":"The attempt to load the {@link sap.ui.vtm.Viewable} failed.","DeprecatedInfo":{"isDeprecated":false},"value":"LoadFailed"},"Loading":{"Deprecated":false,"Experimental":false,"description":"The {@link sap.ui.vtm.Viewable} is being loaded.","helpDescription":"The {@link sap.ui.vtm.Viewable} is being loaded.","DeprecatedInfo":{"isDeprecated":false},"value":"Loading"},"Downloaded":{"Deprecated":false,"Experimental":false,"description":"The {@link sap.ui.vtm.Viewable} was downloaded successfully.","helpDescription":"The {@link sap.ui.vtm.Viewable} was downloaded successfully.","DeprecatedInfo":{"isDeprecated":false},"value":"Downloaded"},"Loaded":{"Deprecated":false,"Experimental":false,"description":"The {@link sap.ui.vtm.Viewable} was loaded successfully.","helpDescription":"The {@link sap.ui.vtm.Viewable} was loaded successfully.","DeprecatedInfo":{"isDeprecated":false},"value":"Loaded"}}},"metadatas":{"sap.ui.vtm.ProgressDialog":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.ProgressDialog#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/ProgressDialog","description":"A progress control to show viewable download and load progress.","constructorDescription":"Constructor for a new ProgressDialog.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getProgressText progressText} : string<\/li>\n<li>{@link #getPercentComplete percentComplete} : int (default: 0)<\/li>\n<li>{@link #getProgressBarVisible progressBarVisible} : boolean (default: \"true\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.ProgressDialog#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.ProgressDialog#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.ProgressDialog#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.ProgressDialog#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.ProgressDialog#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.ProgressDialog#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.vtm.ProgressDialog#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.ProgressDialog#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.vtm.ProgressDialog#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"progressBarVisible":{"method":"#getProgressBarVisible,setProgressBarVisible","Deprecated":false,"defaultValue":"\"true\"","Experimental":false,"description":"Whether the progress bar is visible.","fullName":"sap.ui.vtm.ProgressDialog#progressBarVisible","helpDescription":"Whether the progress bar is visible.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"percentComplete":{"method":"#getPercentComplete,setPercentComplete","Deprecated":false,"defaultValue":"0","Experimental":false,"description":"The percentage (0-100) to show in the progress bar (if visible).","fullName":"sap.ui.vtm.ProgressDialog#percentComplete","helpDescription":"The percentage (0-100) to show in the progress bar (if visible).","type":"int","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.ProgressDialog#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.vtm.ProgressDialog#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.vtm.ProgressDialog#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.vtm.ProgressDialog#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.ProgressDialog#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.ProgressDialog#id","type":"sap.ui.core.ID"},"progressText":{"method":"#getProgressText,setProgressText","Deprecated":false,"Experimental":false,"description":"The text to display in the progress dialog.","fullName":"sap.ui.vtm.ProgressDialog#progressText","helpDescription":"The text to display in the progress dialog.","type":"string","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.ProgressDialog#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.ProgressDialog#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.ProgressDialog#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.ProgressDialog#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.ProgressDialog#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.ProgressDialog#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.ProgressDialog#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.Panel#event:initialized","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"initialized","description":"Raised when the panel is initialized.","fullName":"sap.ui.vtm.Panel#initialized","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.vtm.ProgressDialog#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.ProgressDialog#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.vtm.ProgressDialog#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.ProgressDialog#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.ProgressDialog#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.ProgressDialog#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.SelectColumnsDialog":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.SelectColumnsDialog#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/SelectColumnsDialog","description":"A dialog used to select the columns to display in a {@link sap.ui.vtm.Tree}.","constructorDescription":"Constructor for a new SelectColumnsDialog.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTree tree} : object<\/li>\n<li>{@link #getSelectableColumns selectableColumns} : sap.ui.vtm.Column[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.SelectColumnsDialog#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.SelectColumnsDialog#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.SelectColumnsDialog#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.SelectColumnsDialog#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.SelectColumnsDialog#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.SelectColumnsDialog#models","type":"object"},"selectableColumns":{"method":"#getSelectableColumns,setSelectableColumns","Deprecated":false,"Experimental":false,"description":"The set of columns that should be shown in the dialog that may be selected for display.","fullName":"sap.ui.vtm.SelectColumnsDialog#selectableColumns","helpDescription":"The set of columns that should be shown in the dialog that may be selected for display.","type":"sap.ui.vtm.Column[]","DeprecatedInfo":{"isDeprecated":false}},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.vtm.SelectColumnsDialog#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.SelectColumnsDialog#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.vtm.SelectColumnsDialog#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"tree":{"method":"#getTree,setTree","Deprecated":false,"Experimental":false,"description":"The {@link sap.ui.vtm.Tree} that column selection is being performed for.","fullName":"sap.ui.vtm.SelectColumnsDialog#tree","helpDescription":"The {@link sap.ui.vtm.Tree} that column selection is being performed for.","type":"object","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.SelectColumnsDialog#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.vtm.SelectColumnsDialog#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.vtm.SelectColumnsDialog#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.vtm.SelectColumnsDialog#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.SelectColumnsDialog#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.SelectColumnsDialog#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.SelectColumnsDialog#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.SelectColumnsDialog#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.SelectColumnsDialog#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"loadStarted":{"method":"sap.ui.vtm.Scene#event:loadStarted","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.viewableLoadInfos":"type: sap.ui.vtm.ViewableLoadInfo[], description: A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."},"name":"loadStarted","description":"Raised when starting to load a set of viewables.","fullName":"sap.ui.vtm.Scene#loadStarted","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"parseError":{"method":"sap.ui.vtm.SelectColumnsDialog#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.SelectColumnsDialog#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.SelectColumnsDialog#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.SelectColumnsDialog#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.SelectColumnsDialog#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.SelectColumnsDialog#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.vtm.SelectColumnsDialog#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.SelectColumnsDialog#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.SelectColumnsDialog#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.SelectColumnsDialog#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/ViewportSelectionLinkingExtension","description":"Adds a behavior that links the selection state of tree items in a {@link sap.ui.vtm.Tree} with their corresponding scene nodes in the {@link sap.ui.vtm.Viewport} in the same {@link sap.ui.vtm.Panel}.","constructorDescription":"Constructor for a new ViewportSelectionLinkingExtension.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.ViewportSelectionLinkingExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/SceneNodeHoverTooltipExtension","description":"Adds a behaviour in which a tooltip (which can be specified by application code using a callback function) is displayed when the mouse is hovering over a scene node.","constructorDescription":"Constructor for a new SceneNodeHoverTooltipExtension.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTooltipCallback tooltipCallback} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.vtm.Extension#constructor sap.ui.vtm.Extension}\ncan be used as well.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#objectBindings","type":"object"},"tooltipCallback":{"method":"#getTooltipCallback,setTooltipCallback","Deprecated":false,"Experimental":false,"description":"A callback function that gets a tooltip for a given {@link sap.ui.vtm.SceneNode}. If unspecified, the scene node name is used for the tooltip text.\n\nThe first parameter is the {@link sap.ui.vtm.SceneNode} under cursor.<br> The function should return an object containing a tooltip text for the specified scene node. <pre>\n  {\n    text: [string]\n  }\n<\/pre> If function returns null no tooltip will be displayed.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#tooltipCallback","helpDescription":"A callback function that gets a tooltip for a given {@link sap.ui.vtm.SceneNode}. If unspecified, the scene node name is used for the tooltip text.\n\nThe first parameter is the {@link sap.ui.vtm.SceneNode} under cursor.<br> The function should return an object containing a tooltip text for the specified scene node. <pre>\n  {\n    text: [string]\n  }\n<\/pre> If function returns null no tooltip will be displayed.","type":"any","DeprecatedInfo":{"isDeprecated":false},"group":"Behavior"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Panel":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Panel#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"vtmId":{"method":"#getVtmId,setVtmId","Deprecated":false,"Experimental":false,"multiple":"false","description":"The {@link sap.ui.vtm.Vtm} instance this panel is associated with.","fullName":"sap.ui.vtm.Panel#vtmId","helpDescription":"The {@link sap.ui.vtm.Vtm} instance this panel is associated with.","type":"sap.ui.vtm.Vtm","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Panel","description":"A control that represents a VTM panel. Contains: <ul> <li>A header area containing a title and optionally a set of application controls<\/li> <li>A sap.ui.vtm.Tree and a sap.ui.vtm.Viewport separated by a splitter<\/li> <\/ul>","constructorDescription":"Constructor for a new Panel.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowViewport showViewport} : boolean (default: true)<\/li>\n<li>{@link #getTreeWidth treeWidth} : sap.ui.core.CSSSize (default: \"50%\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: \"inherit\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitleControls titleControls} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTreeHeaderControls treeHeaderControls} : sap.ui.core.Control[]<\/li>\n<li>{@link #getViewportHeaderControls viewportHeaderControls} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getVtmId vtmId} : (sap.ui.core.ID | sap.ui.vtm.Vtm)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:contextMenu contextMenu} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Panel#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"_panel":{"method":"#get_panel,destroy_panel,set_panel","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.vtm.Panel#_panel","type":"sap.m.VBox","DeprecatedInfo":{"isDeprecated":false}},"treeHeaderControls":{"method":"#getTreeHeaderControls,destroyTreeHeaderControls,insertTreeHeaderControl,addTreeHeaderControl,removeTreeHeaderControl,indexOfTreeHeaderControl,removeAllTreeHeaderControls","Deprecated":false,"Experimental":false,"multiple":"true","description":"The set of controls to render in the tree header area.","fullName":"sap.ui.vtm.Panel#treeHeaderControls","helpDescription":"The set of controls to render in the tree header area.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Panel#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"titleControls":{"method":"#getTitleControls,destroyTitleControls,insertTitleControl,addTitleControl,removeTitleControl,indexOfTitleControl,removeAllTitleControls","Deprecated":false,"Experimental":false,"multiple":"true","description":"The set of controls to render in the title bar area.","fullName":"sap.ui.vtm.Panel#titleControls","helpDescription":"The set of controls to render in the title bar area.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Panel#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Panel#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"viewportHeaderControls":{"method":"#getViewportHeaderControls,destroyViewportHeaderControls,insertViewportHeaderControl,addViewportHeaderControl,removeViewportHeaderControl,indexOfViewportHeaderControl,removeAllViewportHeaderControls","Deprecated":false,"Experimental":false,"multiple":"true","description":"The set of controls to render in the viewport header area.","fullName":"sap.ui.vtm.Panel#viewportHeaderControls","helpDescription":"The set of controls to render in the viewport header area.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Panel#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Panel#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.vtm.Panel#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Panel#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.vtm.Panel#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"showViewport":{"method":"#getShowViewport,setShowViewport","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the viewport will be shown for this panel.","fullName":"sap.ui.vtm.Panel#showViewport","helpDescription":"Controls whether the viewport will be shown for this panel.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"title":{"method":"#getTitle,setTitle","Deprecated":false,"Experimental":false,"description":"The text to show in the title bar for this panel.","fullName":"sap.ui.vtm.Panel#title","helpDescription":"The text to show in the title bar for this panel.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Panel#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.vtm.Panel#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"},"group":"Misc"},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.vtm.Panel#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.vtm.Panel#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.Panel#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"treeWidth":{"method":"#getTreeWidth,setTreeWidth","Deprecated":false,"defaultValue":"\"50%\"","Experimental":false,"description":"The width of the tree.","fullName":"sap.ui.vtm.Panel#treeWidth","helpDescription":"The width of the tree.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Panel#id","type":"sap.ui.core.ID"},"height":{"method":"#getHeight,setHeight","Deprecated":false,"defaultValue":"\"inherit\"","Experimental":false,"description":"The height of the panel.","fullName":"sap.ui.vtm.Panel#height","helpDescription":"The height of the panel.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Panel#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.Panel#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Panel#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"contextMenu":{"method":"sap.ui.vtm.Panel#event:contextMenu","Deprecated":false,"Experimental":false,"name":"contextMenu","description":"Raised when the web browser <code>contextmenu<\/code> event is raised. To prevent the default browser context menu from being shown call preventDefault() on the event.","fullName":"sap.ui.vtm.Panel#contextMenu","helpDescription":"Raised when the web browser <code>contextmenu<\/code> event is raised. To prevent the default browser context menu from being shown call preventDefault() on the event.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Panel#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Panel#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Panel#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Panel#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.Panel#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Raised when the panel is initialized.","fullName":"sap.ui.vtm.Panel#initialized","helpDescription":"Raised when the panel is initialized.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Panel#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Panel#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.vtm.Panel#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.Panel#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Panel#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Panel#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Extension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Extension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Extension","description":"A base class for extensions.\n\nExtensions provide an extensibility mechanism through which behaviors can be added, allowing for a default set of behaviors that can be overridden by application developers. Extensions react to events raised by VTM elements/controls or other extensions.\n\nDerived classes should provide their own {@link #initialize} implementation. Extensions are expected to be as independent from one another as possible.\n\nExtensions implement interfaces to indicate the functional role(s) that they fulfill. Extensions can be found by interface calling {@link sap.ui.vtm.Vtm#getExtensionByInterface getExtensionByInterface}. Specific extensions can be found using {@link sap.ui.vtm.Vtm#getExtensionByName getExtensionByName}. Typically extensions are retrieved using these methods in order to get or set their <code>enabled<\/code> property.","constructorDescription":"This class is an abstract class that is not intended to be instantiated directly.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:enabledChanged enabledChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Extension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Extension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Extension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Extension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Extension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Extension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Extension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Extension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.Extension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Extension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Extension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.Extension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Extension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Extension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Extension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Extension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Extension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.Extension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.Extension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Extension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Extension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.Extension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.Extension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Extension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Extension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Viewable":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Viewable#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Viewable","description":"A viewable containing 3D content that can be loaded into a {@link sap.ui.vtm.Scene}.","constructorDescription":"Constructor for a new Viewable.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSource source} : any<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getRootNodeIds rootNodeIds} : string[]<\/li>\n<li>{@link #getRelativeMatrix relativeMatrix} : sap.ui.vtm.Matrix<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Viewable#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Viewable#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Viewable#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Viewable#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Viewable#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"rootNodeIds":{"method":"#getRootNodeIds,setRootNodeIds","Deprecated":false,"Experimental":false,"description":"The root scene node IDs for this viewable.","fullName":"sap.ui.vtm.Viewable#rootNodeIds","helpDescription":"The root scene node IDs for this viewable.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Viewable#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Viewable#objectBindings","type":"object"},"relativeMatrix":{"method":"#getRelativeMatrix,setRelativeMatrix","Deprecated":false,"Experimental":false,"description":"The relative transformation matrix to apply to the scene node created to wrap the contents of the loaded viewable.","fullName":"sap.ui.vtm.Viewable#relativeMatrix","helpDescription":"The relative transformation matrix to apply to the scene node created to wrap the contents of the loaded viewable.","type":"sap.ui.vtm.Matrix","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"name":{"method":"#getName,setName","Deprecated":false,"Experimental":false,"description":"The name for this Viewable.","fullName":"sap.ui.vtm.Viewable#name","helpDescription":"The name for this Viewable.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"source":{"method":"#getSource,setSource","Deprecated":false,"Experimental":false,"description":"The source URL (string) or File for this Viewable.","fullName":"sap.ui.vtm.Viewable#source","helpDescription":"The source URL (string) or File for this Viewable.","type":"any","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Viewable#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Viewable#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Viewable#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.Viewable#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Viewable#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"visibilityIconClicked":{"method":"sap.ui.vtm.Tree#event:visibilityIconClicked","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.item":"type: object, description: The tree item whose visibility icon was clicked.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.visibility":"type: boolean, description: The visibility state of the tree item.","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.control":"type: sap.ui.core.Control, description: The visibility icon control that was clicked."},"name":"visibilityIconClicked","description":"Raised when an icon in the visibility column is clicked.","fullName":"sap.ui.vtm.Tree#visibilityIconClicked","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"parseError":{"method":"sap.ui.vtm.Viewable#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Viewable#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Viewable#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Viewable#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Viewable#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Viewable#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Viewable#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Viewable#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.ViewableLoadInfo":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.ViewableLoadInfo#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/ViewableLoadInfo","description":"Contains information about the result of an attempt to download/load a viewable.\n\nThe {@link sap.ui.vtm.Scene.downloadCompleted} and {@link sap.ui.vtm.Scene.loadCompleted} events have a <code>results<\/code> parameter that is passed an array of {@link sap.ui.vtm.ViewableLoadInfo} objects. {@link sap.ui.vtm.Scene#getViewableLoadInfos} also returns a array of {@link sap.ui.vtm.ViewableLoadInfo} objects for all viewables that have been passed into calls to {@link sap.ui.vtm.Scene#loadViewablesAsync}.","constructorDescription":"This class is not intended to be instantiated directly by application code.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getViewable viewable} : object<\/li>\n<li>{@link #getStatus status} : sap.ui.vtm.ViewableLoadStatus<\/li>\n<li>{@link #getErrorCode errorCode} : string<\/li>\n<li>{@link #getErrorText errorText} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.ViewableLoadInfo#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.ViewableLoadInfo#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.ViewableLoadInfo#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.ViewableLoadInfo#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.ViewableLoadInfo#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"errorText":{"method":"#getErrorText,setErrorText","Deprecated":false,"Experimental":false,"description":"The error text describing why the Viewable failed to load. This is an untranslated technical message. Use when {@link #getSucceeded} returns false.","fullName":"sap.ui.vtm.ViewableLoadInfo#errorText","helpDescription":"The error text describing why the Viewable failed to load. This is an untranslated technical message. Use when {@link #getSucceeded} returns false.","type":"string","DeprecatedInfo":{"isDeprecated":false}},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.ViewableLoadInfo#models","type":"object"},"viewable":{"method":"#getViewable,setViewable","Deprecated":false,"Experimental":false,"description":"The {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.","fullName":"sap.ui.vtm.ViewableLoadInfo#viewable","helpDescription":"The {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.","type":"object","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.ViewableLoadInfo#objectBindings","type":"object"},"errorCode":{"method":"#getErrorCode,setErrorCode","Deprecated":false,"Experimental":false,"description":"The error code describing why the Viewable failed to load.\n\nUse when {@link #getSucceeded} returns false.","fullName":"sap.ui.vtm.ViewableLoadInfo#errorCode","helpDescription":"The error code describing why the Viewable failed to load.\n\nUse when {@link #getSucceeded} returns false.","type":"string","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.ViewableLoadInfo#id","type":"sap.ui.core.ID"},"status":{"method":"#getStatus,setStatus","Deprecated":false,"Experimental":false,"description":"The download/load status of the {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.","fullName":"sap.ui.vtm.ViewableLoadInfo#status","helpDescription":"The download/load status of the {@link sap.ui.vtm.Viewable} this {@link sap.ui.vtm.ViewableLoadInfo} relates to.","type":"sap.ui.vtm.ViewableLoadStatus","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.ViewableLoadInfo#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.ViewableLoadInfo#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.ViewableLoadInfo#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.ViewableLoadInfo#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"visibilityIconClicked":{"method":"sap.ui.vtm.Tree#event:visibilityIconClicked","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.item":"type: object, description: The tree item whose visibility icon was clicked.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.visibility":"type: boolean, description: The visibility state of the tree item.","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.control":"type: sap.ui.core.Control, description: The visibility icon control that was clicked."},"name":"visibilityIconClicked","description":"Raised when an icon in the visibility column is clicked.","fullName":"sap.ui.vtm.Tree#visibilityIconClicked","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"parseError":{"method":"sap.ui.vtm.ViewableLoadInfo#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.ViewableLoadInfo#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.ViewableLoadInfo#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.ViewableLoadInfo#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.ViewableLoadInfo#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.ViewableLoadInfo#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.ViewableLoadInfo#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.ViewableLoadInfo#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Vtm":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Vtm#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Vtm","description":"The main entry point for constructing VTM controls.","constructorDescription":"Constructor for a new Vtm.\nThis constructor can be used to construct an instance of {@link sap.ui.vtm.Vtm} with a specific set of extensions.\nAlternatively {@link sap.ui.vtm.createVtm} can be used to create a {@link sap.ui.vtm.Vtm} instance with a default set of extensions.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAddDefaultExtensions addDefaultExtensions} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getExtensions extensions} : sap.ui.vtm.Extension[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:panelAdded panelAdded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:activePanelChanged activePanelChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:initialized initialized} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"defaultAggregation":"extensions","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Vtm#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"extensions":{"method":"#getExtensions,destroyExtensions,insertExtension,addExtension,removeExtension,indexOfExtension,removeAllExtensions","Deprecated":false,"Experimental":false,"multiple":"true","description":"The set of VTM extensions. Extensions are used to provide extensibility. Default behaviors are implemented as extensions that can be replaced.","fullName":"sap.ui.vtm.Vtm#extensions","helpDescription":"The set of VTM extensions. Extensions are used to provide extensibility. Default behaviors are implemented as extensions that can be replaced.","type":"sap.ui.vtm.Extension","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Vtm#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Vtm#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Vtm#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Vtm#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Vtm#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Vtm#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Vtm#id","type":"sap.ui.core.ID"},"addDefaultExtensions":{"method":"#getAddDefaultExtensions,setAddDefaultExtensions","Deprecated":false,"Experimental":false,"description":"When true populates the <code>extensions<\/code> aggregation with the default set of extensions in the default configuration.","fullName":"sap.ui.vtm.Vtm#addDefaultExtensions","helpDescription":"When true populates the <code>extensions<\/code> aggregation with the default set of extensions in the default configuration.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Vtm#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Vtm#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.Vtm#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Vtm#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"activePanelChanged":{"method":"sap.ui.vtm.Vtm#event:activePanelChanged","Deprecated":false,"Experimental":false,"name":"activePanelChanged","description":"Raised when the active panel has changed.","fullName":"sap.ui.vtm.Vtm#activePanelChanged","helpDescription":"Raised when the active panel has changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Vtm#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Vtm#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","Deprecated":false,"Experimental":false,"name":"panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","helpDescription":"Raised when a panel has been added.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Vtm#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Vtm#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.Vtm#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Raised when this {@link sap.ui.vtm.Vtm} instance and its extensions have been initialized.\n\nApplications should add event handlers after the {@link sap.ui.vtm.Vtm} instance has initialized so that the extensions can attach event handlers before the application attempts to attach event handlers to the same events.","fullName":"sap.ui.vtm.Vtm#initialized","helpDescription":"Raised when this {@link sap.ui.vtm.Vtm} instance and its extensions have been initialized.\n\nApplications should add event handlers after the {@link sap.ui.vtm.Vtm} instance has initialized so that the extensions can attach event handlers before the application attempts to attach event handlers to the same events.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Vtm#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Vtm#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Vtm#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Vtm#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.SceneNode":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.SceneNode#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/SceneNode","description":"This class provides access to the data for a scene node. Objects of this type are transient. Long lived references to such objects should not be kept. A single {@link sap.ui.vtm.SceneNode} object can be reused to refer to a different scene node by changing the value of the <code>sceneNodeId<\/code> property. Scene traversal methods typically reuse a single {@link sap.ui.vtm.SceneNode} object to avoid construction and destruction. Applications are expected to use their own data structures to store data extracted from scene nodes that needs to be accessed efficiently.","constructorDescription":"This class is not intended to be directly instantiated by application code.\nThe scene traversal methods ({@link sap.ui.vtm.Scene#traverseTree traverseTree}, {@link sap.ui.vtm.Scene#traverseBranch traverseBranch}, {@link sap.ui.vtm.Scene#traverseNodes traverseNodes}) should be used to access scene nodes\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSceneNodeId sceneNodeId} : string<\/li>\n<li>{@link #getScene scene} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.SceneNode#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.SceneNode#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.SceneNode#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.SceneNode#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.SceneNode#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.SceneNode#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.SceneNode#objectBindings","type":"object"},"sceneNodeId":{"method":"#getSceneNodeId,setSceneNodeId","Deprecated":false,"Experimental":false,"description":"The scene node id.\n\nThis is a transient identifier that exists in the context of the current scene. It should not be persisted.","fullName":"sap.ui.vtm.SceneNode#sceneNodeId","helpDescription":"The scene node id.\n\nThis is a transient identifier that exists in the context of the current scene. It should not be persisted.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.SceneNode#id","type":"sap.ui.core.ID"},"scene":{"method":"#getScene,setScene","Deprecated":false,"Experimental":false,"description":"The {@link sap.ui.vtm.Scene} for the scene node.","fullName":"sap.ui.vtm.SceneNode#scene","helpDescription":"The {@link sap.ui.vtm.Scene} for the scene node.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.SceneNode#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.SceneNode#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.SceneNode#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.SceneNode#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"loadStarted":{"method":"sap.ui.vtm.Scene#event:loadStarted","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.viewableLoadInfos":"type: sap.ui.vtm.ViewableLoadInfo[], description: A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."},"name":"loadStarted","description":"Raised when starting to load a set of viewables.","fullName":"sap.ui.vtm.Scene#loadStarted","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"parseError":{"method":"sap.ui.vtm.SceneNode#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.SceneNode#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.SceneNode#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.SceneNode#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.SceneNode#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.SceneNode#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.SceneNode#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.SceneNode#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.LoadProgressExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/LoadProgressExtension","description":"Adds a behavior that shows a progress dialog when downloading/loading of viewables is occurring.","constructorDescription":"Constructor for a new LoadProgressExtension.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.LoadProgressExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.LoadProgressExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.LoadProgressExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.LoadProgressExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.LoadProgressExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.LoadProgressExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.LoadProgressExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.LoadProgressExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Viewport":{"associations":{"headerControls":{"method":"#getHeaderControls,addHeaderControl,removeHeaderControl,removeAllHeaderControls","Deprecated":false,"Experimental":false,"multiple":"true","description":"A set of controls such as toolbars to appear above the 3D viewport.","fullName":"sap.ui.vtm.Viewport#headerControls","helpDescription":"A set of controls such as toolbars to appear above the 3D viewport.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Viewport#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Viewport","description":"A control that contains a 3D viewport.","constructorDescription":"This class is not intended to be instantiated directly by application code.\nA {@link sap.ui.vtm.Viewport} object is created when a {@link sap.ui.vtm.Panel} object is instantiated.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundGradientTopColor backgroundGradientTopColor} : sap.ui.core.CSSColor (default: \"black\")<\/li>\n<li>{@link #getBackgroundGradientBottomColor backgroundGradientBottomColor} : sap.ui.core.CSSColor (default: \"white\")<\/li>\n<li>{@link #getOverrideDisplayGroups overrideDisplayGroups} : object[] (default: [])<\/li>\n<li>{@link #getContextDisplayGroups contextDisplayGroups} : object[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getHeaderControls headerControls} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:nodeClicked nodeClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visibilityChanged visibilityChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:viewChanged viewChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:refreshRequested refreshRequested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:hover hover} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beginGesture beginGesture} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:endGesture endGesture} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"_container":{"method":"#get_container,destroy_container,set_container","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.vtm.Viewport#_container","type":"sap.m.VBox","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Viewport#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Viewport#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Viewport#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Viewport#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Viewport#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Viewport#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.vtm.Viewport#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Viewport#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.vtm.Viewport#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"backgroundGradientBottomColor":{"method":"#getBackgroundGradientBottomColor,setBackgroundGradientBottomColor","Deprecated":false,"defaultValue":"\"white\"","Experimental":false,"description":"The background gradient bottom color","fullName":"sap.ui.vtm.Viewport#backgroundGradientBottomColor","helpDescription":"The background gradient bottom color","type":"sap.ui.core.CSSColor","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Viewport#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.vtm.Viewport#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.vtm.Viewport#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"contextDisplayGroups":{"method":"#getContextDisplayGroups,setContextDisplayGroups","Deprecated":false,"Experimental":false,"description":"Allows the calculated display state for scene nodes whose display state is not determined by tree item associations or override display groups to be specified.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects objects that describe display states to apply to scene nodes. Precedence is inherent in the array ordering. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.","fullName":"sap.ui.vtm.Viewport#contextDisplayGroups","helpDescription":"Allows the calculated display state for scene nodes whose display state is not determined by tree item associations or override display groups to be specified.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects objects that describe display states to apply to scene nodes. Precedence is inherent in the array ordering. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.","type":"object[]","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.vtm.Viewport#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.Viewport#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"backgroundGradientTopColor":{"method":"#getBackgroundGradientTopColor,setBackgroundGradientTopColor","Deprecated":false,"defaultValue":"\"black\"","Experimental":false,"description":"The background gradient top color.","fullName":"sap.ui.vtm.Viewport#backgroundGradientTopColor","helpDescription":"The background gradient top color.","type":"sap.ui.core.CSSColor","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Viewport#id","type":"sap.ui.core.ID"},"overrideDisplayGroups":{"method":"#getOverrideDisplayGroups,setOverrideDisplayGroups","Deprecated":false,"Experimental":false,"description":"Allows the calculated display state of scene nodes in the viewport o be overridden.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects that each specify the display state for a set of scene nodes. Precedence is inherent in the array ordering. Any display state specified in this way takes precedence over display states specified for geometry associated with tree items or specified using {@link #contextGroups}. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.","fullName":"sap.ui.vtm.Viewport#overrideDisplayGroups","helpDescription":"Allows the calculated display state of scene nodes in the viewport o be overridden.\n\nA set of {@link sap.ui.vtm.DisplayGroup} objects that each specify the display state for a set of scene nodes. Precedence is inherent in the array ordering. Any display state specified in this way takes precedence over display states specified for geometry associated with tree items or specified using {@link #contextGroups}. Call {@link #refresh} to recalculate the display state in the viewport after modifying override display groups.","type":"object[]","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Viewport#bindingContexts","type":"object"}},"events":{"refreshRequested":{"method":"sap.ui.vtm.Viewport#event:refreshRequested","Deprecated":false,"Experimental":false,"name":"refreshRequested","description":"Raised when {@link sap.ui.vk.dvl.Viewport#refresh refresh} is called. This event can be used by code that is managing the viewport display state.","fullName":"sap.ui.vtm.Viewport#refreshRequested","helpDescription":"Raised when {@link sap.ui.vk.dvl.Viewport#refresh refresh} is called. This event can be used by code that is managing the viewport display state.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Viewport#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Viewport#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Viewport#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Viewport#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Viewport#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Viewport#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.vtm.Viewport#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Viewport#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"hover":{"method":"sap.ui.vtm.Viewport#event:hover","Deprecated":false,"Experimental":false,"name":"hover","description":"Raised on mouse move over viewport.","fullName":"sap.ui.vtm.Viewport#hover","helpDescription":"Raised on mouse move over viewport.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"selectionChanged":{"method":"sap.ui.vtm.Viewport#event:selectionChanged","Deprecated":false,"Experimental":false,"name":"selectionChanged","description":"Raised when the selection is changed due to a click in the viewport (either on a node or in empty space).","fullName":"sap.ui.vtm.Viewport#selectionChanged","helpDescription":"Raised when the selection is changed due to a click in the viewport (either on a node or in empty space).","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"viewChanged":{"method":"sap.ui.vtm.Viewport#event:viewChanged","Deprecated":false,"Experimental":false,"name":"viewChanged","description":"Raised when viewport's camera view changed.","fullName":"sap.ui.vtm.Viewport#viewChanged","helpDescription":"Raised when viewport's camera view changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"nodeClicked":{"method":"sap.ui.vtm.Viewport#event:nodeClicked","Deprecated":false,"Experimental":false,"name":"nodeClicked","description":"Raised when a node in the viewport is clicked.","fullName":"sap.ui.vtm.Viewport#nodeClicked","helpDescription":"Raised when a node in the viewport is clicked.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Viewport#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Viewport#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beginGesture":{"method":"sap.ui.vtm.Viewport#event:beginGesture","Deprecated":false,"Experimental":false,"name":"beginGesture","description":"Raised when a gesture begins.","fullName":"sap.ui.vtm.Viewport#beginGesture","helpDescription":"Raised when a gesture begins.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"endGesture":{"method":"sap.ui.vtm.Viewport#event:endGesture","Deprecated":false,"Experimental":false,"name":"endGesture","description":"Raised when a gesture ends.","fullName":"sap.ui.vtm.Viewport#endGesture","helpDescription":"Raised when a gesture ends.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.vtm.Viewport#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.Viewport#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"visibilityChanged":{"method":"sap.ui.vtm.Viewport#event:visibilityChanged","Deprecated":false,"Experimental":false,"name":"visibilityChanged","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.visibleIds":"type: string[], description: The IDs of newly shown nodes.","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.hiddenIds":"type: string[], description: The IDs of newly hidden nodes.","oControlEvent.getParameters.userInteraction":"type: boolean, description: <code>true<\/code> if this event is raised as a result of a user clicking in the viewport."},"description":"Raised when the visibility of scene nodes changed in the viewport.","fullName":"sap.ui.vtm.Viewport#visibilityChanged","helpDescription":"Raised when the visibility of scene nodes changed in the viewport.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Lookup":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Lookup#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Lookup","description":"A map that can contain multiple values per key value. This is a utility class that can be used as a data structure for: <ul> <li>Maintaining a lookup containing scene nodes keyed by a particular value in order to determine the scene nodes that should be associated with a particular tree item<\/li> <li>Maintaining lookups (one for each tree) of tree items keyed by a particular value in order to determine the tree items in one tree that are associated with tree items in another tree<\/li> <\/ul> A typical usage would be to use a {@link sap.ui.vtm.Lookup} that is keyed using a hash code constructed from some or all of the information needed to match a particular tree item or scene node. In this scenario the {@link sap.ui.vtm.Lookup} is used to return a set of possible matches which are then filtered to find the actual matches. The usage of the {@link sap.ui.vtm.Lookup} with a suitable key can drastically reduces the number of items that need to be compared when performing a search. This is important when there are large numbers of searches that need to be performed within a large set of items.","constructorDescription":"Constructor for a new Lookup.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Lookup#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Lookup#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Lookup#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Lookup#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Lookup#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Lookup#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Lookup#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Lookup#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Lookup#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Lookup#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.Lookup#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Lookup#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Lookup#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Lookup#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Lookup#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Lookup#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.Extension#event:initialized","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.Extension#initialized","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.vtm.Lookup#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Lookup#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Lookup#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Lookup#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Scene":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Scene#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Scene","description":"Allows access to scene nodes in the scene. A single {@link sap.ui.vtm.Scene} is shared by the {@link sap.ui.vtm.Viewport} objects in all the {@link sap.ui.vtm.Panel} objects associated with a {@link sap.ui.vtm.Vtm} instance. Visibility, selection, highlighting and opacity can be controlled for each scene node separately in each {@link sap.ui.vtm.Viewport}.","constructorDescription":"This class is not intended to be directly instantiated by application code.\nA {@link sap.ui.vtm.Scene} object is created when a {@link sap.ui.vtm.Vtm} object is created.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:downloadProgress downloadProgress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:downloadStarted downloadStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:downloadCompleted downloadCompleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:loadStarted loadStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:loadProgress loadProgress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:loadCompleted loadCompleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:hierarchyChanged hierarchyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Scene#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Scene#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Scene#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Scene#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Scene#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Scene#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Scene#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Scene#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Scene#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Scene#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.Scene#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Scene#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"loadStarted":{"method":"sap.ui.vtm.Scene#event:loadStarted","Deprecated":false,"Experimental":false,"name":"loadStarted","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.viewableLoadInfos":"type: sap.ui.vtm.ViewableLoadInfo[], description: A set of {@link sap.ui.vtm.ViewableLoadInfo} objects that describe the status of each {@link sap.ui.vtm.Viewable} passed to the {@link #loadViewablesAsync} call."},"description":"Raised when starting to load a set of viewables.","fullName":"sap.ui.vtm.Scene#loadStarted","helpDescription":"Raised when starting to load a set of viewables.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Scene#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Scene#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"hierarchyChanged":{"method":"sap.ui.vtm.Scene#event:hierarchyChanged","Deprecated":false,"Experimental":false,"name":"hierarchyChanged","description":"Raised when the scene hierarchy has been modified.","fullName":"sap.ui.vtm.Scene#hierarchyChanged","helpDescription":"Raised when the scene hierarchy has been modified.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Scene#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Scene#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"downloadProgress":{"method":"sap.ui.vtm.Scene#event:downloadProgress","Deprecated":false,"Experimental":false,"name":"downloadProgress","description":"Raised to indicate download progress of a viewable while viewables are being downloaded","fullName":"sap.ui.vtm.Scene#downloadProgress","helpDescription":"Raised to indicate download progress of a viewable while viewables are being downloaded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"loadProgress":{"method":"sap.ui.vtm.Scene#event:loadProgress","Deprecated":false,"Experimental":false,"name":"loadProgress","description":"Raised to provide progress information for a viewable that is being loaded.","fullName":"sap.ui.vtm.Scene#loadProgress","helpDescription":"Raised to provide progress information for a viewable that is being loaded.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Scene#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Scene#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"loadCompleted":{"method":"sap.ui.vtm.Scene#event:loadCompleted","Deprecated":false,"Experimental":false,"name":"loadCompleted","description":"Raised when all viewables specified in a call to {@link #loadViewablesAsync} have either loaded or failed to load.","fullName":"sap.ui.vtm.Scene#loadCompleted","helpDescription":"Raised when all viewables specified in a call to {@link #loadViewablesAsync} have either loaded or failed to load.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Scene#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Scene#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"downloadStarted":{"method":"sap.ui.vtm.Scene#event:downloadStarted","Deprecated":false,"Experimental":false,"name":"downloadStarted","description":"Raised when starting a download of a set of viewables.","fullName":"sap.ui.vtm.Scene#downloadStarted","helpDescription":"Raised when starting a download of a set of viewables.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"downloadCompleted":{"method":"sap.ui.vtm.Scene#event:downloadCompleted","Deprecated":false,"Experimental":false,"name":"downloadCompleted","description":"Raised when viewables have been downloaded (successfully or unsuccessfully) as a result of a call to {@link #loadViewablesAsync}.\n\nIf no viewables have been successfully downloaded, none of the viewables will be loaded, so no subsequent {@link sap.ui.vtm.Scene.loadStarted}, {@link sap.ui.vtm.Scene.loadProgress} or {@link sap.ui.vtm.Scene.loadCompleted} will occur as a result of the call to {@link #loadViewablesAsync} that resulted in the {@link sap.ui.vtm.Scene.downloadCompleted} event being raised.","fullName":"sap.ui.vtm.Scene#downloadCompleted","helpDescription":"Raised when viewables have been downloaded (successfully or unsuccessfully) as a result of a call to {@link #loadViewablesAsync}.\n\nIf no viewables have been successfully downloaded, none of the viewables will be loaded, so no subsequent {@link sap.ui.vtm.Scene.loadStarted}, {@link sap.ui.vtm.Scene.loadProgress} or {@link sap.ui.vtm.Scene.loadCompleted} will occur as a result of the call to {@link #loadViewablesAsync} that resulted in the {@link sap.ui.vtm.Scene.downloadCompleted} event being raised.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.MessageStatusIconClickExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/MessageStatusIconClickExtension","description":"Adds a behavior that shows a {@link sap.ui.vtm.MessagesPopover} when a message status icon is clicked.","constructorDescription":"Constructor for a new MessageStatusIconClickExtension.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.MessageStatusIconClickExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.MessageStatusCalculationExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/MessageStatusCalculationExtension","description":"Adds a behavior that calculates the properties of the message status icons. The behavior: <ul> <li>Allows for error, warning and information messages.<\/li> <li>Uses red icons for error related indications.<\/li> <li>Uses yellow icons for warning related indications.<\/li> <li>Uses grey informational icons for informational indications.<\/li> <li>Uses solid icons to indicate errors or warnings that apply directly to a tree item.<\/li> <li>Uses hollow icons to indicate that an error or warning applies to a descendant of a tree item.<\/li> <li>The highest priority status that applies to a tree item or a descendant tree item is indicated on each tree item.<\/li> <li>When the highest priority status that applies to a tree item is the same as the highest priority status that applies to any descendant tree, the highest priority message that applies directly to the tree item is indicated.<\/li> <li>Error messages on descendants are given higher priority than warning or information messages that apply to the tree item itself<\/li> <li>Warning messages on descendants are given a higher priority than information messages that apply to the tree item<\/li> <li>Information messages are not cascaded up the tree<\/li> <\/ul>","constructorDescription":"Constructor for a new MessageStatusCalculationExtension.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.MessageStatusCalculationExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.ViewLinkingExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/ViewLinkingExtension","description":"Adds a behavior that links the camera views for all the {@link sap.ui.vtm.Viewport} instances associated with a {@link sap.ui.vtm.Vtm} instance.","constructorDescription":"Constructor for the ViewLinkingExtension.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.ViewLinkingExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.ViewLinkingExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.ViewLinkingExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.ViewLinkingExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.ViewLinkingExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.ViewLinkingExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.ViewLinkingExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.ViewLinkingExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Column":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Column#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Column","description":"Represents a data column for a {@link sap.ui.vtm.Tree}.","constructorDescription":"Constructor for a new Column.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.vtm.ColumnType<\/li>\n<li>{@link #getDescriptor descriptor} : string<\/li>\n<li>{@link #getTooltip tooltip} : string<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.core.HorizontalAlign (default: \"Left\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: \"200px\")<\/li>\n<li>{@link #getResizable resizable} : boolean (default: true)<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getLabelControl labelControl} : object<\/li>\n<li>{@link #getValueFormatter valueFormatter} : any<\/li>\n<li>{@link #getTooltipFormatter tooltipFormatter} : any<\/li>\n<li>{@link #getTemplate template} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Column#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Column#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Column#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Column#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Column#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"tooltipFormatter":{"method":"#getTooltipFormatter,setTooltipFormatter","Deprecated":false,"Experimental":false,"description":"If defined, this is a function that specifies the formatting of cell content tooltips for this column (overriding the default behaviour).<br/> Not used if a custom template is specified.<br/> The function must return a string containing the text to display in the tooltip (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.","fullName":"sap.ui.vtm.Column#tooltipFormatter","helpDescription":"If defined, this is a function that specifies the formatting of cell content tooltips for this column (overriding the default behaviour).<br/> Not used if a custom template is specified.<br/> The function must return a string containing the text to display in the tooltip (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.","type":"any","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"template":{"method":"#getTemplate,setTemplate","Deprecated":false,"Experimental":false,"description":"If defined, overrides the cell template for the column.<br/> If this is defined, the <code>valueFormatter<\/code> and <code>tooltipFormatter<\/code> properties are ignored.","fullName":"sap.ui.vtm.Column#template","helpDescription":"If defined, overrides the cell template for the column.<br/> If this is defined, the <code>valueFormatter<\/code> and <code>tooltipFormatter<\/code> properties are ignored.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Column#models","type":"object"},"hAlign":{"method":"#getHAlign,setHAlign","Deprecated":false,"defaultValue":"Left","Experimental":false,"description":"The horizontal alignment for the tree column.","fullName":"sap.ui.vtm.Column#hAlign","helpDescription":"The horizontal alignment for the tree column.","type":"sap.ui.core.HorizontalAlign","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"resizable":{"method":"#getResizable,setResizable","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"If set to true, the column can be resized.","fullName":"sap.ui.vtm.Column#resizable","helpDescription":"If set to true, the column can be resized.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Column#objectBindings","type":"object"},"valueFormatter":{"method":"#getValueFormatter,setValueFormatter","Deprecated":false,"Experimental":false,"description":"If defined, this is a function that specifies the formatting of cell content text for this column.<br/> The function must return a string containing the text to display in the cell (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.","fullName":"sap.ui.vtm.Column#valueFormatter","helpDescription":"If defined, this is a function that specifies the formatting of cell content text for this column.<br/> The function must return a string containing the text to display in the cell (or null) for a given tree item.<br/> The first parameter to the function (which may not always be defined) is the tree item for the tree table row.","type":"any","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"tooltip":{"method":"#getTooltip,setTooltip","Deprecated":false,"Experimental":false,"description":"A localized string to show in the column header tooltip. If unspecified, the label value will be used as the column header tooltip.","fullName":"sap.ui.vtm.Column#tooltip","helpDescription":"A localized string to show in the column header tooltip. If unspecified, the label value will be used as the column header tooltip.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"descriptor":{"method":"#getDescriptor,setDescriptor","Deprecated":false,"Experimental":false,"description":"The descriptor is a JSON string identifying the column.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Metadata} the descriptor property has the following form: <code>'{\"category\":\"SAP\",\"field\":\"MATERIAL\"}'<\/code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createMetadataDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Identifier} the descriptor property has the following form: <code>'{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}'<\/code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createIdentifierDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.AppData} the descriptor property has the following form: <code>'bomId'<\/code>","fullName":"sap.ui.vtm.Column#descriptor","helpDescription":"The descriptor is a JSON string identifying the column.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Metadata} the descriptor property has the following form: <code>'{\"category\":\"SAP\",\"field\":\"MATERIAL\"}'<\/code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createMetadataDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.Identifier} the descriptor property has the following form: <code>'{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}'<\/code><br> Such descriptors can be constructed using {@link sap.ui.vtm.DescriptorUtilities.createIdentifierDescriptor}.\n\nWhen the type property has a value of {@link sap.ui.vtm.ColumnType.AppData} the descriptor property has the following form: <code>'bomId'<\/code>","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"label":{"method":"#getLabel,setLabel","Deprecated":false,"Experimental":false,"description":"A textual name for the column. This is also used in the {@link sap.ui.vtm.ColumnSelectionDialog}, so it should be included whether or not the <code>labelControl<\/code> property is used.","fullName":"sap.ui.vtm.Column#label","helpDescription":"A textual name for the column. This is also used in the {@link sap.ui.vtm.ColumnSelectionDialog}, so it should be included whether or not the <code>labelControl<\/code> property is used.","type":"string","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"type":{"method":"#getType,setType","Deprecated":false,"Experimental":false,"description":"The type of column.","fullName":"sap.ui.vtm.Column#type","helpDescription":"The type of column.","type":"sap.ui.vtm.ColumnType","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"labelControl":{"method":"#getLabelControl,setLabelControl","Deprecated":false,"Experimental":false,"description":"A {@link sap.ui.core.Control} that is used in the column header. When specified, this is used in preference to the <code>label<\/code> property as the column header content. However the <code>label<\/code> property should also be specified since it is used in the used in the {@link sap.ui.vtm.ColumnSelectionDialog}.","fullName":"sap.ui.vtm.Column#labelControl","helpDescription":"A {@link sap.ui.core.Control} that is used in the column header. When specified, this is used in preference to the <code>label<\/code> property as the column header content. However the <code>label<\/code> property should also be specified since it is used in the used in the {@link sap.ui.vtm.ColumnSelectionDialog}.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Column#metadataContexts","type":"object"},"width":{"method":"#getWidth,setWidth","Deprecated":false,"defaultValue":"\"200px\"","Experimental":false,"description":"The width of the tree column.","fullName":"sap.ui.vtm.Column#width","helpDescription":"The width of the tree column.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Column#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Column#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.Column#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Column#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Column#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Column#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Column#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Column#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Column#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Column#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Column#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Column#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.DisplayStateCalculationExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/DisplayStateCalculationExtension","description":"Adds a behavior that calculates display state (visibility, opacity, highlight color) for the scene nodes in a viewport using information in the tree items, context display groups and override display groups.\n\nExcluded tree items are ignored when calculating display state since visible scene nodes that are not visible due to a context or override display group should relate to one or more selectable tree items in the tree.","constructorDescription":"Constructor for a new DisplayStateCalculationExtension.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.DisplayStateCalculationExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap":{"filetype":"library","types":["sap.ui"],"name":"sap","version":"1.132.0"},"sap.ui.vtm.DisplayGroup":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.DisplayGroup#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/DisplayGroup","description":"This class is used to represent display states for a set of scene nodes. The same display state need not be used for all of the scene nodes in the set.","constructorDescription":"Constructor for a new DisplayGroup.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayStatesBySceneNodeId displayStatesBySceneNodeId} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extend":"sap.ui.core.Element","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.DisplayGroup#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.DisplayGroup#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.DisplayGroup#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.DisplayGroup#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.DisplayGroup#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"displayStatesBySceneNodeId":{"method":"#getDisplayStatesBySceneNodeId,setDisplayStatesBySceneNodeId","Deprecated":false,"defaultValue":"[object Object]","Experimental":false,"description":"A plain object map that uses scene node id as the key and a display state object as the value. The display state is a plain JavaScript object that can contain the following properties: <ul> <li>visibility - If defined, this boolean value specifies the scene node visibility<\/li> <li>opacity - If defined, this numeric value between 0 and 100 inclusive defines the scene node opacity.<br/> <\/li> <li>highlightColor - If defined, this string value defines the scene node highlight color.<\/li> If an empty string (<code>\"\"<\/code>) is used, the highlight color is cleared, otherwise the value is expected to be a {@link sap.ui.core.CSSColor}.<\/li> <li>recursive - If <code>true<\/code> this display state will be applied to the scene node and its descendants.<\/li> <\/ul> For example: <code><pre>\n{\n  visibility: true,\n  opacity: 100,\n  highlightColor: \"red\",\n  recursive: false\n}<\/pre><\/code> Display state objects can be reused multiple times in the map to reduce memory usage.","fullName":"sap.ui.vtm.DisplayGroup#displayStatesBySceneNodeId","helpDescription":"A plain object map that uses scene node id as the key and a display state object as the value. The display state is a plain JavaScript object that can contain the following properties: <ul> <li>visibility - If defined, this boolean value specifies the scene node visibility<\/li> <li>opacity - If defined, this numeric value between 0 and 100 inclusive defines the scene node opacity.<br/> <\/li> <li>highlightColor - If defined, this string value defines the scene node highlight color.<\/li> If an empty string (<code>\"\"<\/code>) is used, the highlight color is cleared, otherwise the value is expected to be a {@link sap.ui.core.CSSColor}.<\/li> <li>recursive - If <code>true<\/code> this display state will be applied to the scene node and its descendants.<\/li> <\/ul> For example: <code><pre>\n{\n  visibility: true,\n  opacity: 100,\n  highlightColor: \"red\",\n  recursive: false\n}<\/pre><\/code> Display state objects can be reused multiple times in the map to reduce memory usage.","type":"object","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.DisplayGroup#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.DisplayGroup#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.DisplayGroup#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.DisplayGroup#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.DisplayGroup#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.DisplayGroup#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.DisplayGroup#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.DisplayGroup#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.DisplayGroup#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.DisplayGroup#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.DisplayGroup#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.DisplayGroup#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.DisplayGroup#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.DisplayGroup#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.DisplayGroup#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions":{"filetype":"library","elements":["sap.ui.vtm.extensions.DisplayStateCalculationExtension","sap.ui.vtm.extensions.InitialViewExtension","sap.ui.vtm.extensions.LoadProgressExtension","sap.ui.vtm.extensions.MessageStatusCalculationExtension","sap.ui.vtm.extensions.MessageStatusIconClickExtension","sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension","sap.ui.vtm.extensions.SceneNodeHoverTooltipExtension","sap.ui.vtm.extensions.SelectionLinkingExtension","sap.ui.vtm.extensions.ViewLinkingExtension","sap.ui.vtm.extensions.ViewportSelectionLinkingExtension","sap.ui.vtm.extensions.VisibilityIconClickExtension"],"module":"sap/ui/vtm/library","name":"sap.ui.vtm.extensions","description":"Namespace for extensions that are provided with the sap.ui.vtm library.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.96.10 undefined<br>Namespace for extensions that are provided with the sap.ui.vtm library.","version":"1.132.0"},"sap.ui.vtm.extensions.VisibilityIconClickExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/VisibilityIconClickExtension","description":"Adds a behavior that updates visibility in the {@link sap.ui.vtm.Tree} when a visibility checkbox (eye) is clicked.","constructorDescription":"Constructor for a new VisibilityIconClickExtension.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.VisibilityIconClickExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.VisibilityIconClickExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.VisibilityIconClickExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.VisibilityIconClickExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.VisibilityIconClickExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.VisibilityIconClickExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.VisibilityIconClickExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.VisibilityIconClickExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.MessagesPopover":{"associations":{"initialFocus":{"method":"#getInitialFocus,setInitialFocus","Deprecated":false,"Experimental":false,"multiple":"false","description":"Focus on the popover is set in the sequence of <code>beginButton<\/code> and <code>endButton<\/code>, when available. But if a control other than these two buttons needs to get the focus, set the <code>initialFocus<\/code> with the control which should be focused on.","fullName":"sap.ui.vtm.MessagesPopover#initialFocus","helpDescription":"Focus on the popover is set in the sequence of <code>beginButton<\/code> and <code>endButton<\/code>, when available. But if a control other than these two buttons needs to get the focus, set the <code>initialFocus<\/code> with the control which should be focused on.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"ariaLabelledBy":{"method":"#getAriaLabelledBy,addAriaLabelledBy,removeAriaLabelledBy,removeAllAriaLabelledBy","Deprecated":false,"Experimental":false,"multiple":"true","description":"Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","fullName":"sap.ui.vtm.MessagesPopover#ariaLabelledBy","helpDescription":"Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"ariaDescribedBy":{"method":"#getAriaDescribedBy,addAriaDescribedBy,removeAriaDescribedBy,removeAllAriaDescribedBy","Deprecated":false,"Experimental":false,"multiple":"true","description":"Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","fullName":"sap.ui.vtm.MessagesPopover#ariaDescribedBy","helpDescription":"Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.MessagesPopover#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"leftButton":{"method":"#getLeftButton,setLeftButton","Deprecated":true,"Experimental":false,"multiple":"false","description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 This property has been deprecated since 1.15.1. Please use the beginButton instead.<br>LeftButton is shown at the left edge of the bar in iOS, and at the right side of the bar for the other platforms. Please set this to null if you want to remove the left button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored.","fullName":"sap.ui.vtm.MessagesPopover#leftButton","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 This property has been deprecated since 1.15.1. Please use the beginButton instead.<br>LeftButton is shown at the left edge of the bar in iOS, and at the right side of the bar for the other platforms. Please set this to null if you want to remove the left button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored.","type":"sap.m.Button","DeprecatedInfo":{"isDeprecated":true,"description":"This property has been deprecated since 1.15.1. Please use the beginButton instead.","since":"1.15.1"}},"rightButton":{"method":"#getRightButton,setRightButton","Deprecated":true,"Experimental":false,"multiple":"false","description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 This property has been deprecated since 1.15.1. Please use the endButton instead.<br>RightButton is always shown at the right edge of the bar. Please set this to null if you want to remove the right button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored.","fullName":"sap.ui.vtm.MessagesPopover#rightButton","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 This property has been deprecated since 1.15.1. Please use the endButton instead.<br>RightButton is always shown at the right edge of the bar. Please set this to null if you want to remove the right button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored.","type":"sap.m.Button","DeprecatedInfo":{"isDeprecated":true,"description":"This property has been deprecated since 1.15.1. Please use the endButton instead.","since":"1.15.1"}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/MessagesPopover","description":"A control that can be used to show messages applied to a tree item.","constructorDescription":"Constructor for a new MessagesPopover.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMessages messages} : object[]<\/li>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Popover#constructor sap.m.Popover}\ncan be used as well.","extend":"sap.m.Popover","Deprecated":false,"defaultAggregation":"content","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.MessagesPopover#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"customHeader":{"method":"#getCustomHeader,destroyCustomHeader,setCustomHeader","Deprecated":false,"Experimental":false,"multiple":"false","description":"Any control that needed to be displayed in the header area. When this is set, the showHeader property is ignored, and only this customHeader is shown on the top of popover.","fullName":"sap.ui.vtm.MessagesPopover#customHeader","helpDescription":"Any control that needed to be displayed in the header area. When this is set, the showHeader property is ignored, and only this customHeader is shown on the top of popover.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"footer":{"method":"#getFooter,destroyFooter,setFooter","Deprecated":false,"Experimental":false,"multiple":"false","description":"This is optional footer which is shown on the bottom of the popover.","fullName":"sap.ui.vtm.MessagesPopover#footer","helpDescription":"This is optional footer which is shown on the bottom of the popover.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"beginButton":{"method":"#getBeginButton,destroyBeginButton,setBeginButton","Deprecated":false,"Experimental":false,"multiple":"false","description":"BeginButton is shown at the left side (right side in RTL mode) inside the header. When showHeader is set to false, the property is ignored.","fullName":"sap.ui.vtm.MessagesPopover#beginButton","helpDescription":"BeginButton is shown at the left side (right side in RTL mode) inside the header. When showHeader is set to false, the property is ignored.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.MessagesPopover#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.MessagesPopover#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.MessagesPopover#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"_internalHeader":{"method":"#get_internalHeader,destroy_internalHeader,set_internalHeader","Deprecated":false,"Experimental":false,"multiple":"false","description":"This is the hidden aggregation for managing the internally created header.","fullName":"sap.ui.vtm.MessagesPopover#_internalHeader","helpDescription":"This is the hidden aggregation for managing the internally created header.","type":"sap.m.Bar","DeprecatedInfo":{"isDeprecated":false}},"endButton":{"method":"#getEndButton,destroyEndButton,setEndButton","Deprecated":false,"Experimental":false,"multiple":"false","description":"EndButton is always shown at the right side (left side in RTL mode) inside the header. When showHeader is set to false, the property is ignored.","fullName":"sap.ui.vtm.MessagesPopover#endButton","helpDescription":"EndButton is always shown at the right side (left side in RTL mode) inside the header. When showHeader is set to false, the property is ignored.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.MessagesPopover#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}},"content":{"method":"#getContent,destroyContent,insertContent,addContent,removeContent,indexOfContent,removeAllContent","Deprecated":false,"Experimental":false,"multiple":"true","description":"The content inside the popover.","fullName":"sap.ui.vtm.MessagesPopover#content","helpDescription":"The content inside the popover.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"subHeader":{"method":"#getSubHeader,destroySubHeader,setSubHeader","Deprecated":false,"Experimental":false,"multiple":"false","description":"When subHeader is assigned to Popover, it's rendered directly after the main header if there is, or at the beginning of Popover when there's no main header. SubHeader is out of the content area and won't be scrolled when content's size is bigger than the content area's size.","fullName":"sap.ui.vtm.MessagesPopover#subHeader","helpDescription":"When subHeader is assigned to Popover, it's rendered directly after the main header if there is, or at the beginning of Popover when there's no main header. SubHeader is out of the content area and won't be scrolled when content's size is bigger than the content area's size.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"horizontalScrolling":{"method":"#getHorizontalScrolling,setHorizontalScrolling","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"This property indicates if user can scroll horizontally inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly. Popover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","fullName":"sap.ui.vtm.MessagesPopover#horizontalScrolling","helpDescription":"This property indicates if user can scroll horizontally inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly. Popover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"bounce":{"method":"#getBounce,setBounce","Deprecated":true,"Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42 This parameter is obsolete and has no effect.<br>Whether bouncing is enabled.","fullName":"sap.ui.vtm.MessagesPopover#bounce","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42 This parameter is obsolete and has no effect.<br>Whether bouncing is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"This parameter is obsolete and has no effect.","since":"1.42"}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.MessagesPopover#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.vtm.MessagesPopover#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"title":{"method":"#getTitle,setTitle","Deprecated":false,"Experimental":false,"description":"Title text appears in the header. This property will be ignored when <code>showHeader<\/code> is set to <code>false<\/code>. If you want to show a header in the <code>sap.m.Popover<\/code>, don't forget to set the {@link #setShowHeader showHeader} property to <code>true<\/code>.","fullName":"sap.ui.vtm.MessagesPopover#title","helpDescription":"Title text appears in the header. This property will be ignored when <code>showHeader<\/code> is set to <code>false<\/code>. If you want to show a header in the <code>sap.m.Popover<\/code>, don't forget to set the {@link #setShowHeader showHeader} property to <code>true<\/code>.","type":"string","DeprecatedInfo":{"isDeprecated":false}},"offsetX":{"method":"#getOffsetX,setOffsetX","Deprecated":false,"defaultValue":"0","Experimental":false,"description":"The offset for the popover placement in the x axis. It's with unit pixel.","fullName":"sap.ui.vtm.MessagesPopover#offsetX","helpDescription":"The offset for the popover placement in the x axis. It's with unit pixel.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"offsetY":{"method":"#getOffsetY,setOffsetY","Deprecated":false,"defaultValue":"0","Experimental":false,"description":"The offset for the popover placement in the y axis. It's with unit pixel.","fullName":"sap.ui.vtm.MessagesPopover#offsetY","helpDescription":"The offset for the popover placement in the y axis. It's with unit pixel.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"contentWidth":{"method":"#getContentWidth,setContentWidth","Deprecated":false,"Experimental":false,"description":"Set the width of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","fullName":"sap.ui.vtm.MessagesPopover#contentWidth","helpDescription":"Set the width of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.vtm.MessagesPopover#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"maxHeight":{"method":"#getMaxHeight,setMaxHeight","Deprecated":false,"Experimental":false,"description":"Maximum height of status window.","fullName":"sap.ui.vtm.MessagesPopover#maxHeight","helpDescription":"Maximum height of status window.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.vtm.MessagesPopover#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.vtm.MessagesPopover#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.MessagesPopover#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"contentMinWidth":{"method":"#getContentMinWidth,setContentMinWidth","Deprecated":false,"defaultValue":"\"\"","Experimental":false,"description":"Sets the minimum width of the content area inside popover.","fullName":"sap.ui.vtm.MessagesPopover#contentMinWidth","helpDescription":"Sets the minimum width of the content area inside popover.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.MessagesPopover#id","type":"sap.ui.core.ID"},"modal":{"method":"#getModal,setModal","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"If the popover will not be closed when tapping outside the popover. It also blocks any interaction with the background. The default value is false.","fullName":"sap.ui.vtm.MessagesPopover#modal","helpDescription":"If the popover will not be closed when tapping outside the popover. It also blocks any interaction with the background. The default value is false.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.MessagesPopover#bindingContexts","type":"object"},"enableScrolling":{"method":"#getEnableScrolling,setEnableScrolling","Deprecated":true,"defaultValue":"true","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 replaced by verticalScrolling and horizontalScrolling properties.<br>This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.","fullName":"sap.ui.vtm.MessagesPopover#enableScrolling","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 replaced by verticalScrolling and horizontalScrolling properties.<br>This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"replaced by verticalScrolling and horizontalScrolling properties.","since":"1.15.0"}},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.MessagesPopover#models","type":"object"},"ariaRoleApplication":{"method":"#getAriaRoleApplication,setAriaRoleApplication","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Specifies if the Popover should be set ARIA role 'application'. This property does not respect the avoidAriaApplicationRole core configuration, because it is expected to be used explicitly when role application is required for a specific Popover instance, no matter if the application role is present on the html body.\n\n<b>Note:<\/b> If this property should become public in the future, the property will have to be set on a level that will encapsulate the header and the footer of the popover as well.","fullName":"sap.ui.vtm.MessagesPopover#ariaRoleApplication","helpDescription":"Specifies if the Popover should be set ARIA role 'application'. This property does not respect the avoidAriaApplicationRole core configuration, because it is expected to be used explicitly when role application is required for a specific Popover instance, no matter if the application role is present on the html body.\n\n<b>Note:<\/b> If this property should become public in the future, the property will have to be set on a level that will encapsulate the header and the footer of the popover as well.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.vtm.MessagesPopover#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"verticalScrolling":{"method":"#getVerticalScrolling,setVerticalScrolling","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"This property indicates if user can scroll vertically inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly. Popover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","fullName":"sap.ui.vtm.MessagesPopover#verticalScrolling","helpDescription":"This property indicates if user can scroll vertically inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly. Popover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"resizable":{"method":"#getResizable,setResizable","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether resize option is enabled. NOTE: This property is effective only on Desktop","fullName":"sap.ui.vtm.MessagesPopover#resizable","helpDescription":"Whether resize option is enabled. NOTE: This property is effective only on Desktop","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"showHeader":{"method":"#getShowHeader,setShowHeader","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"If a header should be shown at the top of the popover. *Note:* The heading level of the popover is H1. Headings in the popover content should start with H2 heading level.","fullName":"sap.ui.vtm.MessagesPopover#showHeader","helpDescription":"If a header should be shown at the top of the popover. *Note:* The heading level of the popover is H1. Headings in the popover content should start with H2 heading level.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"showArrow":{"method":"#getShowArrow,setShowArrow","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether Popover arrow should be visible","fullName":"sap.ui.vtm.MessagesPopover#showArrow","helpDescription":"Whether Popover arrow should be visible","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"titleAlignment":{"method":"#getTitleAlignment,setTitleAlignment","Deprecated":false,"defaultValue":"Auto","Experimental":false,"description":"Specifies the Title alignment (theme specific). If set to <code>TitleAlignment.Auto<\/code>, the Title will be aligned as it is set in the theme (if not set, the default value is <code>center<\/code>); Other possible values are <code>TitleAlignment.Start<\/code> (left or right depending on LTR/RTL), and <code>TitleAlignment.Center<\/code> (centered)","fullName":"sap.ui.vtm.MessagesPopover#titleAlignment","helpDescription":"Specifies the Title alignment (theme specific). If set to <code>TitleAlignment.Auto<\/code>, the Title will be aligned as it is set in the theme (if not set, the default value is <code>center<\/code>); Other possible values are <code>TitleAlignment.Start<\/code> (left or right depending on LTR/RTL), and <code>TitleAlignment.Center<\/code> (centered)","type":"sap.m.TitleAlignment","DeprecatedInfo":{"isDeprecated":false}},"contentHeight":{"method":"#getContentHeight,setContentHeight","Deprecated":false,"Experimental":false,"description":"Set the height of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","fullName":"sap.ui.vtm.MessagesPopover#contentHeight","helpDescription":"Set the height of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","type":"sap.ui.core.CSSSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.MessagesPopover#metadataContexts","type":"object"},"messages":{"method":"#getMessages,setMessages","Deprecated":false,"Experimental":false,"description":"The set of {@link sap.ui.core.Message} objects to display.\n\nOnly the following properties of each message will be used: <ul> <li><code>level<\/code><\/li> <li><code>text<\/code><\/li> <li><code>icon<\/code><\/li> <\/ul>","fullName":"sap.ui.vtm.MessagesPopover#messages","helpDescription":"The set of {@link sap.ui.core.Message} objects to display.\n\nOnly the following properties of each message will be used: <ul> <li><code>level<\/code><\/li> <li><code>text<\/code><\/li> <li><code>icon<\/code><\/li> <\/ul>","type":"object[]","DeprecatedInfo":{"isDeprecated":false}},"placement":{"method":"#getPlacement,setPlacement","Deprecated":false,"defaultValue":"Right","Experimental":false,"description":"This is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferredLeft, sap.m.PlacementType.HorizontalPreferredRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferredTop, sap.m.PlacementType.VerticalPreferredBottom, sap.m.PlacementType.Auto. The default value is sap.m.PlacementType.Right. Setting this property while popover is open won't cause any rerendering of the popover, but it will take effect when it's opened again.","fullName":"sap.ui.vtm.MessagesPopover#placement","helpDescription":"This is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferredLeft, sap.m.PlacementType.HorizontalPreferredRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferredTop, sap.m.PlacementType.VerticalPreferredBottom, sap.m.PlacementType.Auto. The default value is sap.m.PlacementType.Right. Setting this property while popover is open won't cause any rerendering of the popover, but it will take effect when it's opened again.","type":"sap.m.PlacementType","DeprecatedInfo":{"isDeprecated":false}},"ariaModal":{"method":"#getAriaModal,setAriaModal","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Specifies the aria-modal of the Popover.","fullName":"sap.ui.vtm.MessagesPopover#ariaModal","helpDescription":"Specifies the aria-modal of the Popover.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}}},"events":{"formatError":{"method":"sap.ui.vtm.MessagesPopover#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.MessagesPopover#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeClose":{"method":"sap.ui.vtm.MessagesPopover#event:beforeClose","Deprecated":false,"Experimental":false,"name":"beforeClose","description":"This event will be fired before the popover is closed.","fullName":"sap.ui.vtm.MessagesPopover#beforeClose","helpDescription":"This event will be fired before the popover is closed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.MessagesPopover#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.MessagesPopover#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterOpen":{"method":"sap.ui.vtm.MessagesPopover#event:afterOpen","Deprecated":false,"Experimental":false,"name":"afterOpen","description":"This event will be fired after the popover is opened.","fullName":"sap.ui.vtm.MessagesPopover#afterOpen","helpDescription":"This event will be fired after the popover is opened.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.MessagesPopover#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.MessagesPopover#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.Extension#event:initialized","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.Extension#initialized","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"modelContextChange":{"method":"sap.ui.vtm.MessagesPopover#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.MessagesPopover#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.vtm.MessagesPopover#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.MessagesPopover#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"afterClose":{"method":"sap.ui.vtm.MessagesPopover#event:afterClose","Deprecated":false,"Experimental":false,"name":"afterClose","description":"This event will be fired after the popover is closed.","fullName":"sap.ui.vtm.MessagesPopover#afterClose","helpDescription":"This event will be fired after the popover is closed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.MessagesPopover#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.MessagesPopover#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeOpen":{"method":"sap.ui.vtm.MessagesPopover#event:beforeOpen","Deprecated":false,"Experimental":false,"name":"beforeOpen","description":"This event will be fired before the popover is opened.","fullName":"sap.ui.vtm.MessagesPopover#beforeOpen","helpDescription":"This event will be fired before the popover is opened.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm":{"filetype":"library","types":["sap.ui.vtm.ArrayUtilities","sap.ui.vtm.DescriptorUtilities","sap.ui.vtm.HashUtilities","sap.ui.vtm.InternalColumns","sap.ui.vtm.Matrix","sap.ui.vtm.MatrixUtilities","sap.ui.vtm.TreeItemUtilities","sap.ui.vtm.interfaces","sap.ui.vtm.ChildCollectionType","sap.ui.vtm.ColumnType","sap.ui.vtm.InternalColumnDescriptor","sap.ui.vtm.PredefinedView","sap.ui.vtm.SelectionMode","sap.ui.vtm.TextColor","sap.ui.vtm.TreeItemType","sap.ui.vtm.ViewableLoadStatus"],"controls":["sap.ui.vtm.MessagesPopover","sap.ui.vtm.Panel","sap.ui.vtm.ProgressDialog","sap.ui.vtm.SelectColumnsDialog","sap.ui.vtm.Tree","sap.ui.vtm.Viewport"],"typesWithClasses":["sap.ui.vtm.extensions"],"elements":["sap.ui.vtm.Column","sap.ui.vtm.DisplayGroup","sap.ui.vtm.Extension","sap.ui.vtm.Lookup","sap.ui.vtm.Scene","sap.ui.vtm.SceneNode","sap.ui.vtm.Viewable","sap.ui.vtm.ViewableLoadInfo","sap.ui.vtm.Vtm"],"module":"sap/ui/vtm/library","name":"sap.ui.vtm","description":"SAPUI5 library with controls to visualize, map and restructure hierarchical business data that maps to 3D objects.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.96.10 undefined<br>SAPUI5 library with controls to visualize, map and restructure hierarchical business data that maps to 3D objects.","version":"1.132.0"},"sap.ui.vtm.extensions.SelectionLinkingExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/SelectionLinkingExtension","description":"Adds a behavior that links items the visibility of tree items in a {@link sap.ui.vtm.Tree} with the visibility of their associated scene nodes in the {@link sap.ui.vtm.Viewport} in the same {@link sap.ui.vtm.Panel}.","constructorDescription":"Constructor for a new SelectionLinkingExtension.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFindMatchingTreeItems findMatchingTreeItems} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.vtm.Extension#constructor sap.ui.vtm.Extension}\ncan be used as well.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#id","type":"sap.ui.core.ID"},"findMatchingTreeItems":{"method":"#getFindMatchingTreeItems,setFindMatchingTreeItems","Deprecated":false,"Experimental":false,"description":"The value is a callback function that finds tree items in a particular tree that match a given tree item.\n\nThe first parameter is the tree item to match against.<br> The second parameter is the {@link sap.ui.vtm.Tree} containing the specified tree item being matched against.<br> The third parameter is the {@link sap.ui.vtm.Tree} to search for matches in.<br> The function returns an array of tree items that match the specified tree item.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#findMatchingTreeItems","helpDescription":"The value is a callback function that finds tree items in a particular tree that match a given tree item.\n\nThe first parameter is the tree item to match against.<br> The second parameter is the {@link sap.ui.vtm.Tree} containing the specified tree item being matched against.<br> The third parameter is the {@link sap.ui.vtm.Tree} to search for matches in.<br> The function returns an array of tree items that match the specified tree item.","type":"any","DeprecatedInfo":{"isDeprecated":false},"group":"Behavior"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.SelectionLinkingExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.SelectionLinkingExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.SelectionLinkingExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.SelectionLinkingExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.SelectionLinkingExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.SelectionLinkingExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.SelectionLinkingExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SelectionLinkingExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/SceneNodeHoverHighlightExtension","description":"Adds a behaviour which highlights a scene node when the mouse hovers over it.","constructorDescription":"Constructor for a new SceneNodeHoverTooltipExtension.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHighlightColor highlightColor} : sap.ui.core.CSSColor (default: \"rgba(0, 0, 255, 0.7)\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.vtm.Extension#constructor sap.ui.vtm.Extension}\ncan be used as well.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"highlightColor":{"method":"#getHighlightColor,setHighlightColor","Deprecated":false,"defaultValue":"\"rgba(0, 0, 255, 0.7)\"","Experimental":false,"description":"The highlight color to use for the scene node being hovered over.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#highlightColor","helpDescription":"The highlight color to use for the scene node being hovered over.","type":"sap.ui.core.CSSColor","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#id","type":"sap.ui.core.ID"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.SceneNodeHoverHighlightExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.extensions.InitialViewExtension":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/extensions/InitialViewExtension","description":"Adds a behavior that zooms to all (or a specific view) after the first viewable has loaded successfully.","constructorDescription":"Constructor for a new InitialViewExtension.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPredefinedView predefinedView} : sap.ui.vtm.PredefinedView<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.vtm.Extension#constructor sap.ui.vtm.Extension}\ncan be used as well.","extend":"sap.ui.vtm.Extension","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#models","type":"object"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#objectBindings","type":"object"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#id","type":"sap.ui.core.ID"},"predefinedView":{"method":"#getPredefinedView,setPredefinedView","Deprecated":false,"Experimental":false,"description":"Specifies a predefined view to use. If a specific view is not specified this extension will zoom to fit all geometry without changing the camera angle.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#predefinedView","helpDescription":"Specifies a predefined view to use. If a specific view is not specified this extension will zoom to fit all geometry without changing the camera angle.","type":"sap.ui.vtm.PredefinedView","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"enabled":{"method":"#getEnabled,setEnabled,bindEnabled,unbindEnabled","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Controls whether the extension is enabled.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#enabled","helpDescription":"Controls whether the extension is enabled.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#metadataContexts","type":"object"}},"events":{"formatError":{"method":"sap.ui.vtm.extensions.InitialViewExtension#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.extensions.InitialViewExtension#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"panelAdded":{"method":"sap.ui.vtm.Vtm#event:panelAdded","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.panel":"type:sap.ui.vtm.Panel","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent":"sap.ui.base.Event"},"name":"panelAdded","description":"Raised when a panel has been added.","fullName":"sap.ui.vtm.Vtm#panelAdded","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]"},"validationSuccess":{"method":"sap.ui.vtm.extensions.InitialViewExtension#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"initialized":{"method":"sap.ui.vtm.extensions.InitialViewExtension#event:initialized","Deprecated":false,"Experimental":false,"name":"initialized","description":"Fired when initialization has completed.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#initialized","helpDescription":"Fired when initialization has completed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.extensions.InitialViewExtension#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.extensions.InitialViewExtension#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"enabledChanged":{"method":"sap.ui.vtm.extensions.InitialViewExtension#event:enabledChanged","Deprecated":false,"Experimental":false,"name":"enabledChanged","description":"Fired when the enabled property is changed.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#enabledChanged","helpDescription":"Fired when the enabled property is changed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.extensions.InitialViewExtension#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.extensions.InitialViewExtension#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.ui.vtm.Tree":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.ui.vtm.Tree#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":true,"module":"sap/ui/vtm/Tree","description":"A control that contains a tree and associated data columns and provides helper methods for tree manipulation. <br/> Call {@link #setRootItems} to provide a tree model.<br/> Call {@link #updateCollections} after making changes to the tree hierarchy.<br/> Call {@link #updateModel} after making changes to the tree model (either changes to the the tree hierarchy or changes to properties of tree items).<br/>\n\nItems in the tree are plain JavaScript objects that have the following set of properties: <ul> <li><code>id<\/code> - The unique id for the tree item. This is the only required field in the tree item object.<\/li> <li><code>name<\/code> - The tree item name.<\/li> <li><code>iconUrl<\/code> - The URL string for the icon to show in the \"tree\" column.<\/li> <li><code>iconColor<\/code> - The color for the icon to show in the \"tree\" column.<\/li> <li><code>iconTooltip<\/code> - A tooltip for the icon to show in the \"tree\" column.<\/li> <li><code>absoluteMatrix<\/code> - An array of 13 numbers in ISO 10303-42 format representing an absolute transformation matrix.<\/li> <li><code>relativeMatrix<\/code> - An array of 13 numbers in ISO 10303-42 format representing a relative transformation matrix.<\/li> <li><code>includedChildren<\/code> - An array of tree items containing the children of this tree item that can be displayed in the tree.<\/li> <li><code>excludedChildren<\/code> - An array of tree items containing the children of this tree item that are not displayed in the tree.<\/li> <li><code>metadata<\/code> - A plain JavaScript object map containing metadata values for the tree item.<br/> Keys are JSON strings that can be parsed using JSON.parse() to get an object with category and field string properties.<br/> Values can be of the following types: <code>string, <code>string[]<\/code>, <code>number<\/code>, <code>number[]<\/code>, <code>boolean<\/code>, <code>boolean[]<\/code>, <code>object<\/code>, <code>object[]<\/code>.<\/li> <li><code>identifiers<\/code> - A plain JavaScript object map containing VE9 identifier values for the tree item.<br/> Keys are JSON strings that can be parsed using JSON.parse() to get an object with source and type string properties.<br/> Values can be of the following types: string, string[].<br/> Each value string is a JSON string that can be parsed using JSON.parse to get an array of name/value pairs.<br/> The value in each name/value pair is optional.<\/li> <li><code>appData<\/code> - A plain JavaScript object map containing application data values for the tree item.<br/> Keys are application defined strings.<br/> Values can be of the following types: <code>string, <code>string[]<\/code>, <code>number<\/code>, <code>number[]<\/code>, <code>boolean<\/code>, <code>boolean[]<\/code>, <code>object<\/code>, <code>object[]<\/code>.<\/li> <li><code>textColor<\/code> - A {@link sap.ui.vtm.TextColor} value that specifies the color of the text for the tree item in the Name data column (defaults to {@link sap.ui.vtm.TextColor.Default}).<\/li> <li><code>sceneNodeIds<\/code> - A string or array of strings containing the IDs of scene nodes to associate with this tree item.<\/li> <li><code>visibility<\/code> - Used to determine visibility of associated scene nodes and control a visibility icon shown in the {@link sap.ui.vtm.InternalColumnDescriptor.Visibility} column.<br/> When <code>true<\/code> associated scene nodes should be visible in the viewport (when their visibility is not overridden).<br/> When <code>false<\/code> associated scene nodes should not be visible in the viewport (when their visibility is not overridden).<br/> When <code>null<\/code> or <code>undefined<\/code> no visibility icon is shown for the tree item and associated scene nodes should not be visible in the viewport (when their visibility is not overridden).<\/li> <li><code>opacity<\/code> - A numeric value between 0 and 1 (inclusive) that specifies the opacity to apply to associated scene nodes (when their opacity is not overridden).<\/li> <li><code>highlightColor<\/code> - A sap.ui.core.CSSColor that specifies a highlight color to apply to associated scene nodes (when their highlight color is not overridden). The alpha component specifies the blend ratio between the highlight color and the scene node color.<\/li> <li><code>messages<\/code> A string that can be parsed using JSON.parse() to produce an array of objects that can be used to construct {@link sap.ui.core.Message} objects.<br/> Refer to the documentation for the <code>mSettings<\/code> parameter of the {@link sap.ui.core.Message} constructor for valid values.<\/li> <li><code>messageStatusIconUrl<\/code> The URL of the icon to display in the message status column. If an extension implementing {@link sap.ui.vtm.interfaces.IMessageStatusCalculationExtension} is being used, only that extension should set values for this field.<\/li> <li><code>messageStatusIconColor<\/code> The {@link sap.ui.core.CSSColor} color of the icon to display in the message status column. If an extension implementing {@link sap.ui.vtm.interfaces.IMessageStatusCalculationExtension} is being used, only that extension should set values for this field.<\/li> <li><code>messageStatusIconTooltip<\/code> The tooltip for the icon in the message status column. If an extension implementing {@link sap.ui.vtm.interfaces.IMessageStatusCalculationExtension} is being used, only that extension should set values for this field.<\/li> <\/ul>\n\nThe <code>sceneNodeIds<\/code>, <code>visibility<\/code>, <code>opacity<\/code> and <code>highlightColor<\/code> properties are used by the extension implementing {@link sap.ui.vtm.interfaces.IDisplayStateCalculationExtension} to determine the display state of scene nodes shown in the {@link sap.ui.vtm.Viewport} associated with the {@link sap.ui.vtm.Tree}.\n\nExample: <pre><code>{\n     id: jQuery.sap.uid(),\n     name: \"Tree item name\",\n     iconUrl: \"sap-icon://tree\",\n     iconTooltip: \"Group\"\n     absoluteMatrix: [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\n     relativeMatrix: [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\n     includedChildren: [],\n     metadata:{\n        '{\"category\":\"SAP\",\"field\":\"MATERIAL\"}': [\"mat1\", \"mat2\"]]\n     },\n     identifiers: {\n         '{\"source\":\"SAP\",\"type\":\"VE_COMPONENT\"}': '[{\"name\":\"ID\", \"value\":\"_moto_x_asm\"},{\"name\":\"version\", \"value\": \"00\"},{\"name\": \"timestamp\", \"value\":\"2016-05-18 03:44:53.93\"}]',\n         '{\"source\":\"SAP\",\"type\":\"MATERIAL\"}': ['[{\"name\":\"ID\", \"value\":\"mat1\"}]', '[{\"name\":\"ID\", \"value\":\"mat2\"}]']\n     },\n     appData:{\n         \"bomId: \"bom1\",\n         \"bomItemId: \"bomItem1\",\n     },\n     textColor: sap.ui.vtm.TextColor.Gray,\n     sceneNodeIds: [\"iffffffff01021520\", \"iffffffff01021528\"],\n     visibility: true,\n     opacity: 0.3,\n     highlightColor: \"rgba(0,255,0,0.8)\"\n     messages: '[{\"level\":\"Error\",\"text\":\"some error\"},{\"level\":\"Error\",\"text\":\"Another error\"},{\"level\":\"Warning\",\"A warning\"}]',\n     messageStatusIconUrl: \"sap-icon://error\",\n     messageStatusIconColor: \"red\",\n     messageStatusIconTooltip: \"Error\"\n }<\/code><\/pre>","constructorDescription":"This class is not intended to be instantiated directly by application code.\nA {@link sap.ui.vtm.Tree} object is created when a {@link sap.ui.vtm.Panel} object is instantiated.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectionMode selectionMode} : sap.ui.vtm.SelectionMode (default: \"Single\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeaderControls headerControls} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragStart dragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragOver dragOver} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drop drop} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visibilityHeaderIconClicked visibilityHeaderIconClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visibilityIconClicked visibilityIconClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expandedChanged expandedChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fixedColumnsChanged fixedColumnsChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataColumnsChanged dataColumnsChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeModelUpdated beforeModelUpdated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:modelUpdated modelUpdated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:messageStatusIconClicked messageStatusIconClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:messageStatusHeaderIconClicked messageStatusHeaderIconClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:hierarchyChanged hierarchyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"headerControls":{"method":"#getHeaderControls,destroyHeaderControls,insertHeaderControl,addHeaderControl,removeHeaderControl,indexOfHeaderControl,removeAllHeaderControls","Deprecated":false,"Experimental":false,"multiple":"true","description":"A set of controls such as toolbars to show above the tree.","fullName":"sap.ui.vtm.Tree#headerControls","helpDescription":"A set of controls such as toolbars to show above the tree.","type":"sap.ui.core.Control","DeprecatedInfo":{"isDeprecated":false}},"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.ui.vtm.Tree#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"_treeTable":{"method":"#get_treeTable,destroy_treeTable,set_treeTable","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.ui.vtm.Tree#_treeTable","type":"sap.ui.table.TreeTable","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.ui.vtm.Tree#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.ui.vtm.Tree#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.ui.vtm.Tree#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.ui.vtm.Tree#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Tree#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.ui.vtm.Tree#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Appearance"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.ui.vtm.Tree#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"},"group":"Misc"},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Tree#objectBindings","type":"object"},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.ui.vtm.Tree#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.ui.vtm.Tree#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.ui.vtm.Tree#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.Tree#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.ui.vtm.Tree#id","type":"sap.ui.core.ID"},"selectionMode":{"method":"#getSelectionMode,setSelectionMode","Deprecated":false,"defaultValue":"Single","Experimental":false,"description":"The tree selection mode.","fullName":"sap.ui.vtm.Tree#selectionMode","helpDescription":"The tree selection mode.","type":"sap.ui.vtm.SelectionMode","DeprecatedInfo":{"isDeprecated":false},"group":"Misc"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.ui.vtm.Tree#bindingContexts","type":"object"},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.ui.vtm.Tree#metadataContexts","type":"object"}},"events":{"drop":{"method":"sap.ui.vtm.Tree#event:drop","Deprecated":false,"Experimental":false,"name":"drop","description":"Raised when a tree item is dropped on a tree item or an unpopulated row in a tree. A drop cannot occur unless preventDefault() is called on the sap.ui.base.Event object in the preceding dragOver event.","fullName":"sap.ui.vtm.Tree#drop","helpDescription":"Raised when a tree item is dropped on a tree item or an unpopulated row in a tree. A drop cannot occur unless preventDefault() is called on the sap.ui.base.Event object in the preceding dragOver event.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"dataColumnsChanged":{"method":"sap.ui.vtm.Tree#event:dataColumnsChanged","Deprecated":false,"Experimental":false,"name":"dataColumnsChanged","description":"Raised when the data columns are updated.","fullName":"sap.ui.vtm.Tree#dataColumnsChanged","helpDescription":"Raised when the data columns are updated.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"expandedChanged":{"method":"sap.ui.vtm.Tree#event:expandedChanged","Deprecated":false,"Experimental":false,"name":"expandedChanged","description":"Raised when a tree item entry is expanded or collapsed.","fullName":"sap.ui.vtm.Tree#expandedChanged","helpDescription":"Raised when a tree item entry is expanded or collapsed.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"dragStart":{"method":"sap.ui.vtm.Tree#event:dragStart","Deprecated":false,"Experimental":false,"name":"dragStart","description":"Raised when a tree item drag is initiated. To prevent a drag from being initiated call preventDefault() on the event.","fullName":"sap.ui.vtm.Tree#dragStart","helpDescription":"Raised when a tree item drag is initiated. To prevent a drag from being initiated call preventDefault() on the event.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.ui.vtm.Tree#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.ui.vtm.Tree#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"messageStatusIconClicked":{"method":"sap.ui.vtm.Tree#event:messageStatusIconClicked","Deprecated":false,"Experimental":false,"name":"messageStatusIconClicked","description":"Raised when a tree item message status icon is clicked.","fullName":"sap.ui.vtm.Tree#messageStatusIconClicked","helpDescription":"Raised when a tree item message status icon is clicked.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelUpdated":{"method":"sap.ui.vtm.Tree#event:modelUpdated","Deprecated":false,"Experimental":false,"name":"modelUpdated","description":"Raised after the model has been updated.","fullName":"sap.ui.vtm.Tree#modelUpdated","helpDescription":"Raised after the model has been updated.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"beforeModelUpdated":{"method":"sap.ui.vtm.Tree#event:beforeModelUpdated","Deprecated":false,"Experimental":false,"name":"beforeModelUpdated","description":"Raised before the model is updated.","fullName":"sap.ui.vtm.Tree#beforeModelUpdated","helpDescription":"Raised before the model is updated.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.ui.vtm.Tree#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.ui.vtm.Tree#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.ui.vtm.Tree#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.ui.vtm.Tree#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"fixedColumnsChanged":{"method":"sap.ui.vtm.Tree#event:fixedColumnsChanged","Deprecated":false,"Experimental":false,"name":"fixedColumnsChanged","description":"Raised when the fixed columns are updated.","fullName":"sap.ui.vtm.Tree#fixedColumnsChanged","helpDescription":"Raised when the fixed columns are updated.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"formatError":{"method":"sap.ui.vtm.Tree#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.ui.vtm.Tree#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"visibilityIconClicked":{"method":"sap.ui.vtm.Tree#event:visibilityIconClicked","Deprecated":false,"Experimental":false,"name":"visibilityIconClicked","eventParams":{"oControlEvent.getParameters":"type: object","oControlEvent.getParameters.item":"type: object, description: The tree item whose visibility icon was clicked.","oControlEvent.getSource":"type: sap.ui.base.EventProvider","oControlEvent.getParameters.visibility":"type: boolean, description: The visibility state of the tree item.","oControlEvent":"sap.ui.base.Event","oControlEvent.getParameters.control":"type: sap.ui.core.Control, description: The visibility icon control that was clicked."},"description":"Raised when an icon in the visibility column is clicked.","fullName":"sap.ui.vtm.Tree#visibilityIconClicked","helpDescription":"Raised when an icon in the visibility column is clicked.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"selectionChanged":{"method":"sap.ui.vtm.Tree#event:selectionChanged","Deprecated":false,"Experimental":false,"name":"selectionChanged","description":"Raised when the set of selected tree items for a tree changes.","fullName":"sap.ui.vtm.Tree#selectionChanged","helpDescription":"Raised when the set of selected tree items for a tree changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"hierarchyChanged":{"method":"sap.ui.vtm.Tree#event:hierarchyChanged","Deprecated":false,"Experimental":false,"name":"hierarchyChanged","description":"Raised when the tree hierarchy (the set of parent child relationships) changes.","fullName":"sap.ui.vtm.Tree#hierarchyChanged","helpDescription":"Raised when the tree hierarchy (the set of parent child relationships) changes.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.ui.vtm.Tree#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.ui.vtm.Tree#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"dragOver":{"method":"sap.ui.vtm.Tree#event:dragOver","Deprecated":false,"Experimental":false,"name":"dragOver","description":"Raised when a tree item is dragged over a tree item or an unpopulated row in a tree. To allow a drop to occur call preventDefault() on the event.","fullName":"sap.ui.vtm.Tree#dragOver","helpDescription":"Raised when a tree item is dragged over a tree item or an unpopulated row in a tree. To allow a drop to occur call preventDefault() on the event.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"messageStatusHeaderIconClicked":{"method":"sap.ui.vtm.Tree#event:messageStatusHeaderIconClicked","Deprecated":false,"Experimental":false,"name":"messageStatusHeaderIconClicked","description":"Raised when a tree item message status icon is clicked.","fullName":"sap.ui.vtm.Tree#messageStatusHeaderIconClicked","helpDescription":"Raised when a tree item message status icon is clicked.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.ui.vtm.Tree#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.ui.vtm.Tree#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"visibilityHeaderIconClicked":{"method":"sap.ui.vtm.Tree#event:visibilityHeaderIconClicked","Deprecated":false,"Experimental":false,"name":"visibilityHeaderIconClicked","description":"Raised when the icon in the visibility column header is clicked.","fullName":"sap.ui.vtm.Tree#visibilityHeaderIconClicked","helpDescription":"Raised when the icon in the visibility column header is clicked.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}}},"!version":"1.21.1"}