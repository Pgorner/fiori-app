{"!name":"sap.ui.mdc","!version":"1.21.1","!define":{"sap.ui.mdc.enums.ProcessingStrategy":{"!description":"Defines the delta types of the <code>sap.ui.mdc.p13n.Engine<\/code>.","!module":"sap/ui/mdc/enums/ProcessingStrategy","!category":"static class"},"sap.ui.mdc.SelectionMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.TableSelectionMode}<br>Defines the mode of the table.","!module":"sap/ui/mdc/library","Single":{"!description":"Only one row/item can be selected at a time.","!category":"enum","!type":"String"},"SingleMaster":{"!description":"Only one row/item can be selected at a time. Should be used for navigation scenarios to indicate the navigated row/item. If this selection mode is used, no <code>rowPress<\/code> event is fired.","!category":"enum","!type":"String"},"!category":"static class","Multi":{"!description":"Multiple rows/items can be selected at a time.","!category":"enum","!type":"String"},"None":{"!description":"No rows/items can be selected (default).","!category":"enum","!type":"String"}},"sap.ui.mdc.table.CreationRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.CreationRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.CreationRow"},"sap.ui.mdc.enum.LinkType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.LinkType}<br>Defines the behavior of the {@link sap.ui.mdc.Link}.","!module":"sap/ui/mdc/enum/LinkType","DirectLink":{"!description":"{@link sap.ui.mdc.Link} is rendered as a {@link sap.m.Link} that works as a direct link","!category":"enum","!type":"Number"},"!category":"static class","Text":{"!description":"{@link sap.ui.mdc.Link} is rendered as a {@link sap.m.Text}","!category":"enum","!type":"Number"},"Popover":{"!description":"{@link sap.ui.mdc.Link} is rendered as a {@link sap.m.Link} that opens a popover when pressed","!category":"enum","!type":"Number"}},"sap.ui.mdc.chart.Item_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.Item with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chart.Item"},"sap.ui.mdc.field.FieldInfoBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInfoBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldInfoBase"},"sap.ui.mdc.enum.SelectType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ValueHelpSelectionType}<br>Enumeration of the possible selection types","Add":{"!description":"The given conditions are just added to the existing ones, if they don't already exist.","!category":"enum","!type":"String"},"Set":{"!description":"The given conditions are set and replace the existing ones.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/SelectType","!category":"static class","Remove":{"!description":"The given conditions are removed.","!category":"enum","!type":"String"}},"sap.ui.mdc.util.DensityHelper":{"!description":"Utility class used by mdc controls to set/copy density configuration from a source control/DOM (or document body) to a control target. <b>Note<\/b>: Will also set a default density (cozy) if nothing else is found.","!module":"sap/ui/mdc/util/DensityHelper","!helpDescription":"Utility class used by mdc controls to set/copy density configuration from a source control/DOM (or document body) to a control target. <b>Note<\/b>: Will also set a default density (cozy) if nothing else is found.","!category":"namespace"},"sap.ui.mdc.enum.ProcessingStrategy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ProcessingStrategy}<br>Defines the delta types of the <code>sap.ui.mdc.p13n.Engine<\/code>.","!module":"sap/ui/mdc/enum/ProcessingStrategy","!category":"static class"},"sap.ui.mdc.valuehelp.CollectiveSearchSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VariantManagement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.CollectiveSearchSelect"},"sap.ui.mdc.valuehelp.base.DialogTab_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.DialogTab with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.DialogTab"},"module:sap/ui/mdc/odata/v4/vizChart/ChartDelegate":{"!description":"Example Delegate for {@link sap.ui.mdc.Chart Chart}. This class extends the {@link sap.ui.mdc.ChartDelegate ChartDelegate} object und make use of the {@link sap.ui.chart.Chart Chart}.<br>","_performInitialBind":{"!description":"Performs the initial binding of the inner chart. It is used for the <code>vizFrame<\/code> to make sure that the inner chart is correctly initialized upon creation. Otherwise the chart will go into an error loop. <br><b>Note:<\/b> You must not override this setting.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oBindingInfo: Object)"},"_updateColoring":{"!description":"Updates the coloring on the inner chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, aVisibleDimensions: Array, aVisibleMeasures: Array)"},"formatText":{"!description":"This allows formatting for axis labels of the inner sap.chart.Chart. Note: As the inner chart has no association to the propertyInfo, <code>this<\/code> will be bound to the propertyInfo object when calling this method.","!category":"function","!type":"fn(sKey: String, sDesc: String) -> String"},"!category":"namespace","createInnerDimension":{"!description":"Creates and adds a dimension for the inner chart for a given chart item.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oItem: sap.ui.mdc.chart.Item)"},"_getSorterForItem":{"!description":"Creates a Sorter for a given property.","!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item, oSortProperty: Object) -> sap.ui.model.Sorter"},"_prepareColoringForItem":{"!description":"Prepares the internal vizFrame coloring for given chart Item.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oItem: sap.ui.mdc.chart.Item) -> Promise"},"getSorters":{"!description":"Gets currently available sorters based on the visualized data.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oChart: sap.ui.mdc.Chart) -> Array"},"createInnerMeasure":{"!description":"Creates and adds a measure for the inner chart for given chart item.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oItem: sap.ui.mdc.chart.Item)"},"!module":"sap/ui/mdc/odata/v4/vizChart/ChartDelegate","_addCriticality":{"!description":"Adds criticality to an item.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oItem: sap.ui.mdc.chart.Item) -> Promise"},"module:sap/ui/mdc/odata/v4/vizChart/ChartDelegate":"module:sap/ui/mdc/odata/v4/vizChart/ChartDelegate","!helpDescription":"Example Delegate for {@link sap.ui.mdc.Chart Chart}. This class extends the {@link sap.ui.mdc.ChartDelegate ChartDelegate} object und make use of the {@link sap.ui.chart.Chart Chart}.<br>","_createContentFromItems":{"!description":"This function creates the content defined by the chart for the inner chart instance. For vizFrame, coloring dimensions/measures are set up here too.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> Promise"},"fetchConfigurationForVizchart":{"!description":"Returns attributes of a configuration.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, sPropertyInfoKey: String, sAttributeName: String) -> String | null"},"getAdaptionUI":{"!description":"This function returns a UI which is then shown inside the p13n Items panel. Depending on which chart is used, the panel might offer different functionality.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> sap.ui.core.Control"},"_createMDCChartItem":{"!description":"Creates an chart Item for given property.","!category":"function","!type":"fn(sPropertyName: String, oChart: sap.ui.mdc.Chart, sRole: String) -> Promise<sap.ui.mdc.chart.Item>"},"_createMDCItemFromProperty":{"!description":"Creates an Item from given property info.","!category":"function","!type":"fn(oPropertyInfo: Object, idPrefix: String, sRole: String) -> sap.ui.mdc.chart.Item"},"_updateSemanticalPattern":{"!description":"Updates the semantical pattern for given measures.","!category":"function","!type":"fn(oChart: sap.chart.Chart)"}},"sap.ui.mdc.condition.ConditionModelPropertyBinding":{"!description":"Property binding implementation for Conditions.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModelPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONPropertyBinding.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.ConditionModelPropertyBinding.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Creates a new <code>ConditionModelPropertyBinding<\/code>.\n\nThis constructor must only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.mdc.condition.ConditionModel#bindProperty ConditionModel.bindProperty} on the corresponding model instance instead.","!module":"sap/ui/mdc/condition/ConditionModelPropertyBinding","!helpDescription":"Property binding implementation for Conditions.","!proto":"sap.ui.model.json.JSONPropertyBinding","!category":"class"},"module:sap/ui/mdc/ValueHelpDelegate":{"updateBindingInfo":{"!description":"Adjustable filtering for list-based contents.<br/>By default, this method updates a given {@link sap.ui.base.ManagedObject.AggregationBindingInfo AggregationBindingInfo} with the return value from the delegate's own {@link module:sap/ui/mdc/ValueHelpDelegate.getFilters getFilters}.","!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo)"},"createConditionPayload":{"!description":"Provides the possibility to convey custom data in conditions. This enables an application to enhance conditions with data relevant for combined key or out parameter scenarios.<br/>By default, this method returns <code>undefined<\/code>.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, aValues: [Object], oContext?: sap.ui.model.Context) -> undefined | Object"},"!category":"namespace","compareConditions":{"!description":"Allows control to customize selection behavior in valuelist scenarios","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oConditionA: sap.ui.mdc.condition.ConditionObject, oConditionB: sap.ui.mdc.condition.ConditionObject) -> Boolean"},"getFirstMatch":{"!description":"Returns the content that is used for the autocomplete feature and for user input, if the entered text leads to more than one filter result.\n\nBy default, this method searches and returns an entry from a set of relevant contexts of the given {@link sap.ui.mdc.valuehelp.base.ListContent ListContent}.\n\nTo determine which columns are relevant for the search, the currently active displayMode {@link sap.ui.mdc.enums.FieldDisplay Display} of the connected control will be used. While a <code>Value<\/code> configuration will lead to a 'key'-only search, <code>DescriptionValue<\/code> leads to searching the description first and the key afterwards. Other modes work the same way.\n\nFor each relevant column all items are searched for an exact match first and again with a startsWith filter afterwards, if necessary.\n\nIf the <code>caseSensitive<\/code> property is disabled, whichever entry comes first, wins, whether the user's input is in lowercase or uppercase letters.\n\n{@link sap.ui.mdc.valuehelp.base.ListContent ListContent}","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.ListContent, oConfig: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration) -> sap.ui.model.Context"},"getTypesForConditions":{"!description":"Provides type information for list content filtering.<br/>By default, this method returns an object of types per binding path, extracted from a binding template of the given {@link sap.ui.mdc.valuehelp.base.FilterableListContent FilterableListContent}.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oConditions: Object) -> sap.ui.mdc.util.FilterTypeConfig"},"retrieveContent":{"!description":"Requests additional content for the value help.\n\nThis function is called when the value help is opened or a key or description is requested.\n\nSo depending on the value help {@link sap.ui.mdc.valuehelp.base.Content Content} used, all content controls and data need to be assigned. Once they are assigned and the data is set, the returned <code>Promise<\/code> needs to be resolved. Only then does the value help continue opening or reading data.<br/>By default, this method returns a <code>Promise<\/code> that resolves into <code>undefined<\/code>.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContainer: sap.ui.mdc.valuehelp.base.Container, sContentId: String) -> Promise"},"findConditionsForContext":{"!description":"Finds all conditions that are represented by the given context for 'Select from list' scenarios.<br/>By default, this method only takes {@link sap.ui.mdc.condition.ConditionObject Condition} keys into consideration. This can be extended with payload-dependent filters.\n\n<b>Note:<\/b> This method replaces the former <code>isFilterableListItemSelected<\/code>.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oContext: sap.ui.model.Context, aConditions: [sap.ui.mdc.condition.ConditionObject]) -> [sap.ui.mdc.condition.ConditionObject]"},"module:sap/ui/mdc/ValueHelpDelegate":"module:sap/ui/mdc/ValueHelpDelegate","getFilters":{"!description":"Returns filters that are used when updating the binding of the <code>ValueHelp<\/code>.<br/>By default, this method returns a set of {@link sap.ui.model.Filter Filters} originating from an available {@link sap.ui.mdc.FilterBar FilterBar}, the delegate's own {@link module:sap/ui/mdc/ValueHelpDelegate.getFilterConditions getFilterConditions}, and/or the {@link sap.ui.mdc.valuehelp.base.FilterableListContent#getFilterFields filterFields} configuration of the given {@link sap.ui.mdc.valuehelp.base.FilterableListContent FilterableListContent}.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oTable: sap.ui.mdc.Table, oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent) -> [sap.ui.model.Filter]"},"shouldOpenOnClick":{"!description":"Determines if the value help is opened when the user clicks into the connected control. <br/>By default, the value of the {@link sap.ui.mdc.valuehelp.Popover#getOpensOnClick opensOnClick} property is returned, if set, or the content configuration is checked.\n\nCurrently this is only supported for the type-ahead container.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContainer: sap.ui.mdc.valuehelp.base.Container) -> Promise<boolean>"},"isFilterableListItemSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.118 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.findConditionsForContext findConditionsForContext}.<br>Provides the possibility to customize selections in 'Select from list' scenarios.<br/>By default, this method only takes {@link sap.ui.mdc.condition.ConditionObject Condition} keys into consideration. This might be extended with payload-dependent filters.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oItem: Object, aConditions: [sap.ui.mdc.condition.ConditionObject]) -> Boolean"},"showTypeahead":{"!description":"Controls if a type-ahead is opened or closed.<br/>By default, this method returns <code>false<\/code> if a given content is a {@link sap.ui.mdc.valuehelp.base.FilterableListContent FilterableListContent} but no (truthy) <code>filterValue<\/code> is applied. Otherwise, if the given content is either a {@link sap.ui.mdc.valuehelp.base.ListContent ListContent} with available contexts or any other type of {@link sap.ui.mdc.valuehelp.base.Content Content}, <code>true<\/code> is returned.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.Content) -> Promise<boolean> | Boolean"},"shouldOpenOnFocus":{"!description":"Determines if the value help is opened when the user focuses on the connected control. <br/>By default, the value of the {@link sap.ui.mdc.valuehelp.Popover#getOpensOnFocus opensOnFocus} property is returned.\n\nCurrently this is only supported for the type-ahead container.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContainer: sap.ui.mdc.valuehelp.base.Container) -> Promise<boolean>"},"updateBinding":{"!description":"Executes a filter in a <code>ListBinding<\/code> and resumes it, if suspended.<br/>By default, this method applies <code>filters<\/code> found in the given {@link sap.ui.base.ManagedObject.AggregationBindingInfo AggregationBindingInfo} to the given {@link sap.ui.model.ListBinding ListBinding}. A suspended <code>ListBinding<\/code> is also resumed afterwards.","!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent)"},"!description":"Delegate for {@link sap.ui.mdc.ValueHelp}.","executeFilter":{"!description":"Executes a filter in a <code>ListBinding<\/code>.<br/>By default, this method returns a <code>Promise<\/code> that resolves into the given <code>ListBinding<\/code>.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oListBinding: sap.ui.model.ListBinding, iRequestedItems: Number) -> Promise<sap.ui.model.ListBinding>"},"checkListBindingPending":{"!description":"Checks if the <code>ListBinding<\/code> is waiting for an update. As long as the context has not been set for <code>ListBinding<\/code>, the <code>ValueHelp<\/code> needs to wait.<br/>By default, this method returns <code>false<\/code> if no {@link sap.ui.model.ListBinding ListBinding} is available or the given <code>ListBinding<\/code> is suspended. Otherwise, it returns a <code>Promise<\/code> that resolves into a <code>boolean<\/code> value indicating that at least one context is available after retrieval.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oListBinding: sap.ui.model.ListBinding, iRequestedItems: Number) -> Boolean | Promise<boolean>"},"modifySelectionBehaviour":{"!description":"Provides the possibility to customize selection events in 'Select from list' scenarios. This enables an application to reuse conditions in collective search scenarios, instead of always creating new ones.<br/>By default, this method returns given changes without modification.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oChange: Object) -> Object"},"getFilterConditions":{"!description":"Provides an object of conditions per binding path.<br/>By default, this method returns an empty <code>object<\/code>.\n\nThis method provides the initial set of conditions applied every time value help content is shown for the first time after opening its container. It is also relevant for <code>getItemForValue<\/code> scenarios that allow you to find a specific value help item (indicated by the availability of the <code>oConfig<\/code> argument).","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oConfig?: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration) -> Promise<sap.ui.mdc.util.FilterConditionMap> | sap.ui.mdc.util.FilterConditionMap"},"onConditionPropagation":{"!description":"Callback invoked every time a {@link sap.ui.mdc.ValueHelp ValueHelp} fires a <code>select<\/code> event or the value of the corresponding field changes. This callback can be used to update external fields.<br/>By default, this method is empty.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, sReason: sap.ui.mdc.enums.ValueHelpPropagationReason, oConfig: Object)"},"!module":"sap/ui/mdc/ValueHelpDelegate","!helpDescription":"Delegate for {@link sap.ui.mdc.ValueHelp}.","isFilteringCaseSensitive":{"!description":"Determines is the filtering used for type-ahead is case sensitive. <br/>By default the value of the {@link sap.ui.mdc.valuehelp.base.ListContent#getCaseSensitive CaseSensitive} property of the content instance is returned. If <code>$search<\/code> or other methods are used this might depend on the backend logic.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.ListContent) -> Boolean"},"adjustSearch":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined (since 1.110.0) - replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.updateBindingInfo updateBindingInfo}<br>Changes the search string.\n\nIf <code>$search<\/code> is used, depending on which back-end service is used, the search string might need to be escaped.<br/>By default, this method returns the given <code>sSearch<\/code> string without modification.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, bTypeahead: Boolean, sSearch: String) -> String"},"getInitialFilterConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined (since 1.106.0) - replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.getFilterConditions getFilterConditions}<br>Provides an initial condition configuration every time value help content is shown.<br/>By default, this method returns an empty <code>object<\/code>.\n\n<b>Note:<\/b> Make sure to provide the type information of the corresponding properties of the <code>FilterBar<\/code>.\n\n<b>Note:<\/b> Be aware that setting the condition for the search field or type-ahead could lead to unwanted side effects.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oControl: sap.ui.core.Control) -> Promise<sap.ui.mdc.util.FilterConditionMap> | sap.ui.mdc.util.FilterConditionMap"},"isSearchSupported":{"!description":"Checks if a <code>ListBinding<\/code> supports <code>$search<\/code>.<br/>By default, this method returns <code>false<\/code>.","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, oContent: sap.ui.mdc.valuehelp.base.Content, oListBinding: sap.ui.model.ListBinding) -> Boolean"}},"sap.ui.mdc.enums.TableGrowingMode":{"!description":"Growing mode of the table.","Basic":{"!description":"A More button is shown with which the user can request to load more rows","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/TableGrowingMode","Scroll":{"!description":"Either the user requests to load more rows by scrolling down, or the More button is displayed if no scrolling is required because the table is fully visible","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"A fixed number of rows is shown","!category":"enum","!type":"String"}},"sap.ui.mdc.table.GridTableType":{"!description":"The table type info class for the metadata-driven table.","getSelectionLimit":{"!description":"Gets current value of property {@link #getSelectionLimit selectionLimit}.\n\nNumber of indices which can be selected in a range. Accepts positive integer values. If set to 0, the selection limit is disabled, and the Select All checkbox appears instead of the Deselect All button.\n\n<b>Note:<\/b> To avoid severe performance problems, the limit should only be set to 0 in the following cases: <ul> <li>With client-side models<\/li> <li>With server-side models if they are used in client mode<\/li> <li>If the entity set is small<\/li> <\/ul>\n\nIn other cases, we recommend to set the limit to at least double the value of the {@link sap.ui.mdc.Table#getThreshold threshold} property of the table.\n\nDefault value is <code>200<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.GridTableType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getRowCount":{"!description":"Gets current value of property {@link #getRowCount rowCount}.\n\nRow count of the inner table.<br> This property specifies the minimum row count if <code>sap.ui.mdc.enums.TableRowCountMode.Auto<\/code> is used.<br> This property specifies the row count if <code>sap.ui.mdc.enums.TableRowCountMode.Interactive<\/code> or <code>sap.ui.mdc.enums.TableRowCountMode.Fixed<\/code> is used.<br>\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setScrollThreshold":{"!description":"Sets a new value for property {@link #getScrollThreshold scrollThreshold}.\n\nNumber of records to be requested from the model when the user scrolls through the table.\n\nThe property defines how many additional (not yet visible) data records from the back-end system are pre-fetched during scrolling. If the <code>scrollThreshold<\/code> is lower than the number of visible rows, the number of visible rows is used as the <code>scrollThreshold<\/code>. If the value is 0, thresholding is disabled.\n\n<b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the <code>threshold<\/code> property is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iScrollThreshold?: Number) -> sap.ui.mdc.table.GridTableType","parameters":{"iScrollThreshold":"type: int, description: New value for property <code>scrollThreshold<\/code>"}},"getFixedColumnCount":{"!description":"Gets current value of property {@link #getFixedColumnCount fixedColumnCount}.\n\nDefines the number of fixed columns.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.mdc.table.TableTypeBase","!category":"class","getScrollThreshold":{"!description":"Gets current value of property {@link #getScrollThreshold scrollThreshold}.\n\nNumber of records to be requested from the model when the user scrolls through the table.\n\nThe property defines how many additional (not yet visible) data records from the back-end system are pre-fetched during scrolling. If the <code>scrollThreshold<\/code> is lower than the number of visible rows, the number of visible rows is used as the <code>scrollThreshold<\/code>. If the value is 0, thresholding is disabled.\n\n<b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the <code>threshold<\/code> property is used.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setSelectionLimit":{"!description":"Sets a new value for property {@link #getSelectionLimit selectionLimit}.\n\nNumber of indices which can be selected in a range. Accepts positive integer values. If set to 0, the selection limit is disabled, and the Select All checkbox appears instead of the Deselect All button.\n\n<b>Note:<\/b> To avoid severe performance problems, the limit should only be set to 0 in the following cases: <ul> <li>With client-side models<\/li> <li>With server-side models if they are used in client mode<\/li> <li>If the entity set is small<\/li> <\/ul>\n\nIn other cases, we recommend to set the limit to at least double the value of the {@link sap.ui.mdc.Table#getThreshold threshold} property of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200<\/code>.","!static":false,"!category":"function","!type":"fn(iSelectionLimit?: Number) -> sap.ui.mdc.table.GridTableType","parameters":{"iSelectionLimit":"type: int, description: New value for property <code>selectionLimit<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.GridTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getShowHeaderSelector":{"!description":"Gets current value of property {@link #getShowHeaderSelector showHeaderSelector}.\n\nDetermines whether the header selector is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowHeaderSelector":{"!description":"Sets a new value for property {@link #getShowHeaderSelector showHeaderSelector}.\n\nDetermines whether the header selector is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeaderSelector?: Boolean) -> sap.ui.mdc.table.GridTableType","parameters":{"bShowHeaderSelector":"type: boolean, description: New value for property <code>showHeaderSelector<\/code>"}},"getRowCountMode":{"!description":"Gets current value of property {@link #getRowCountMode rowCountMode}.\n\nDefines how the table handles the row count.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.TableRowCountMode"},"!constructorDescription":"Constructor for a new <code>GridTableType<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRowCountMode rowCountMode} : sap.ui.mdc.enums.TableRowCountMode (default: Auto)<\/li>\n<li>{@link #getRowCount rowCount} : int (default: 10)<\/li>\n<li>{@link #getSelectionLimit selectionLimit} : int (default: 200)<\/li>\n<li>{@link #getShowHeaderSelector showHeaderSelector} : boolean (default: true)<\/li>\n<li>{@link #getFixedColumnCount fixedColumnCount} : int (default: 0)<\/li>\n<li>{@link #getScrollThreshold scrollThreshold} : int (default: -1)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.table.TableTypeBase#constructor sap.ui.mdc.table.TableTypeBase}\ncan be used as well.","!module":"sap/ui/mdc/table/GridTableType","!helpDescription":"The table type info class for the metadata-driven table.","setRowCount":{"!description":"Sets a new value for property {@link #getRowCount rowCount}.\n\nRow count of the inner table.<br> This property specifies the minimum row count if <code>sap.ui.mdc.enums.TableRowCountMode.Auto<\/code> is used.<br> This property specifies the row count if <code>sap.ui.mdc.enums.TableRowCountMode.Interactive<\/code> or <code>sap.ui.mdc.enums.TableRowCountMode.Fixed<\/code> is used.<br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn(iRowCount?: Number) -> sap.ui.mdc.table.GridTableType","parameters":{"iRowCount":"type: int, description: New value for property <code>rowCount<\/code>"}},"setFixedColumnCount":{"!description":"Sets a new value for property {@link #getFixedColumnCount fixedColumnCount}.\n\nDefines the number of fixed columns.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iFixedColumnCount?: Number) -> sap.ui.mdc.table.GridTableType","parameters":{"iFixedColumnCount":"type: int, description: New value for property <code>fixedColumnCount<\/code>"}},"setRowCountMode":{"!description":"Sets a new value for property {@link #getRowCountMode rowCountMode}.\n\nDefines how the table handles the row count.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sRowCountMode?: sap.ui.mdc.enums.TableRowCountMode) -> sap.ui.mdc.table.GridTableType","parameters":{"sRowCountMode":"type: sap.ui.mdc.enums.TableRowCountMode, description: New value for property <code>rowCountMode<\/code>"}}},"sap.ui.mdc.Link":{"!description":"A <code>Link<\/code> element can be used inside a <code>fieldInfo<\/code> aggregation of {@link sap.ui.mdc.Field} to enable navigation scenarios with one or more targets through direct navigation or by opening a <code>Panel<\/code>.<br> It can also be used to display additional content, such as <code>ContactDetails<\/code> on the <code>Panel<\/code>.<br> <b>Note:<\/b> The navigation targets and the behavior of the control are determined by the implementation of a {@link module:sap/ui/mdc/LinkDelegate LinkDelegate}.","_getContent":{"!description":"Internal function to calculate the content of the <code>Popover<\/code>","!static":false,"!category":"function","!type":"fn(aLinkItems: [sap.ui.mdc.link.LinkItem], aAdditionalContent: [sap.ui.core.Control], fnGetAutoClosedControl: fn(), PanelClass: sap.ui.mdc.link.Panel | sap.ui.comp.navpopover.Panel) -> Promise<sap.ui.mdc.link.Panel>","parameters":{"aAdditionalContent":"type: sap.ui.core.Control[], description: The <code>AdditionalContent<\/code> that is displayed on the <code>Popover<\/code>.","PanelClass":"type: sap.ui.mdc.link.Panel|sap.ui.comp.navpopover.Panel, description: Class of the <code>Panel<\/code> that is to be created","fnGetAutoClosedControl":"type: function, description: Function returning the <code>Popover<\/code> instance","aLinkItems":"type: sap.ui.mdc.link.LinkItem[], description: The <code>LinkItem<\/code> instances that are displayed on the <code>Popover<\/code>."}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Link.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"retrieveLinkType":{"!description":"Determines the <code>LinkType<\/code> object depending on the given <code>LinkDelegate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Promise<(undefined | sap.ui.mdc.link.LinkType)>"},"!proto":"sap.ui.mdc.field.FieldInfoBase","!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>LinkDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>LinkDelegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/LinkDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"retrieveLinkItems":{"!description":"Calls the <code>modifyLinkItems<\/code> function of <code>Delegate<\/code> before returning the <code>LinkItem<\/code> objects.","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ui.mdc.link.LinkItem]"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>LinkDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>LinkDelegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/LinkDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Link","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setSourceControl":{"!description":"Sets the associated {@link #getSourceControl sourceControl}.","!static":false,"!category":"function","!type":"fn(oSourceControl: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.mdc.Link","parameters":{"oSourceControl":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this sourceControl association; alternatively, an element instance may be given"}},"!constructorDescription":"Constructor for the new <code>Link<\/code>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnablePersonalization enablePersonalization} : boolean (default: true)<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSourceControl sourceControl} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldInfoBase#constructor sap.ui.mdc.field.FieldInfoBase}\ncan be used as well.","!module":"sap/ui/mdc/Link","!helpDescription":"A <code>Link<\/code> element can be used inside a <code>fieldInfo<\/code> aggregation of {@link sap.ui.mdc.Field} to enable navigation scenarios with one or more targets through direct navigation or by opening a <code>Panel<\/code>.<br> It can also be used to display additional content, such as <code>ContactDetails<\/code> on the <code>Panel<\/code>.<br> <b>Note:<\/b> The navigation targets and the behavior of the control are determined by the implementation of a {@link module:sap/ui/mdc/LinkDelegate LinkDelegate}.","getSourceControl":{"!description":"ID of the element which is the current target of the association {@link #getSourceControl sourceControl}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"setEnablePersonalization":{"!description":"Sets a new value for property {@link #getEnablePersonalization enablePersonalization}.\n\nEnables/disables the personalization settings for users and key users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnablePersonalization?: Boolean) -> sap.ui.mdc.Link","parameters":{"bEnablePersonalization":"type: boolean, description: New value for property <code>enablePersonalization<\/code>"}},"retrieveAdditionalContent":{"!description":"Retrieves the <code>AdditionalContent<\/code> objects depending on the given <code>LinkDelegate<\/code>. Caches the returned objects for further usage.","!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ui.core.Control]"},"getEnablePersonalization":{"!description":"Gets current value of property {@link #getEnablePersonalization enablePersonalization}.\n\nEnables/disables the personalization settings for users and key users.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.chart.SelectionDetailsActions_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.SelectionDetailsActions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chart.SelectionDetailsActions"},"sap.ui.mdc.field.ConditionsType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.ConditionsType"},"sap.ui.mdc.util.PromiseCache_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.util.PromiseCache with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.util.PromiseCache"},"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124.0 Please use the <code>sap.ui.mdc.valuehelp.CollectiveSearchSelect<\/code> control instead.<br>Can be used to manage the <code>CollectiveSearchSelect<\/code> control search items.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.CollectiveSearchSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CollectiveSearchSelect<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.valuehelp.CollectiveSearchSelect#constructor sap.ui.mdc.valuehelp.CollectiveSearchSelect} can be used.","!module":"sap/ui/mdc/filterbar/vh/CollectiveSearchSelect","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124.0 Please use the <code>sap.ui.mdc.valuehelp.CollectiveSearchSelect<\/code> control instead.<br>Can be used to manage the <code>CollectiveSearchSelect<\/code> control search items.","!proto":"sap.ui.mdc.valuehelp.CollectiveSearchSelect","!category":"class"},"sap.ui.mdc.filterbar.FilterBarBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.FilterBarBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.FilterBarBase"},"sap.ui.mdc.enum.ActionToolbarActionAlignment":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ActionToolbarActionAlignment}<br>Defines the alignment of the <code>ActionToolbarAction<\/code> action control.","!module":"sap/ui/mdc/enum/ActionToolbarActionAlignment","Begin":{"!category":"enum","!type":"String"},"!category":"static class","End":{"!category":"enum","!type":"String"}},"sap.ui.mdc.table.RowSettings_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.RowSettings"},"sap.ui.mdc.IxState":{"!description":"Interface for controls or entities which support the appliance of an externalized state representation. The controls or entities have to implement the following APIs: <code>getCurrentState<\/code> & <code>initialized<\/code> methods.","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.enum.EditMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.FieldEditMode}<br>Defines in what mode a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered.","ReadOnly":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in read-only mode","!category":"enum","!type":"String"},"EditableReadOnly":{"!description":"If more than one control is rendered by the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} control, the first part is editable, and the other parts are read-only.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/EditMode","EditableDisplay":{"!description":"If more than one control is rendered by the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} control, the first part is editable, and the other parts are in display mode.","!category":"enum","!type":"String"},"Editable":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in editable mode","!category":"enum","!type":"String"},"!category":"static class","Disabled":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in disabled mode","!category":"enum","!type":"String"},"Display":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in display mode","!category":"enum","!type":"String"}},"sap.ui.mdc.MultiValueField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.MultiValueField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.MultiValueField"},"sap.ui.mdc.valuehelp.base.IDialogContainer":{"!description":"Interface for valuehelp containers shown on a dialog","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.field.content.SearchContent":{"!description":"Object-based definition of the search content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!module":"sap/ui/mdc/field/content/SearchContent","!helpDescription":"Object-based definition of the search content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!category":"namespace"},"sap.ui.mdc.ChartToolbarActionType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ChartToolbarActionType}<br>Defines the types of chart actions in the toolbar.<br> Can be used to remove some of the default <code>ToolbarAction<\/code>. For more information, see {@link sap.ui.mdc.Chart#ignoreToolbarActions}.","Legend":{"!description":"Legend action.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class","DrillDownUp":{"!description":"Drill-down and drill-up action.","!category":"enum","!type":"String"},"ZoomInOut":{"!description":"Zoom-in and zoom-out action.","!category":"enum","!type":"String"}},"sap.ui.mdc.table.TreeTableType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.TreeTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.GridTableType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.TreeTableType"},"sap.ui.mdc.field.DynamicDateRangeConditionsType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DynamicDateRangeConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.ConditionsType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.DynamicDateRangeConditionsType"},"sap.ui.mdc.valuehelp.content":{"descriptionPath":{"!description":"The path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.","!category":"enum","!type":"String"},"useFirstMatch":{"!description":"If set, <code>getItemForValue<\/code> returns the first item that matches the text.\n\nIn the default implementation, this is the first item that matches the entered text. Which item is used can be determined by implementing {@link module:sap/ui/mdc/ValueHelpDelegate.getFirstMatch getFirstMatch}.\n\nThe matching item is returned in the <code>typeaheadSuggested<\/code> event and used for the autocomplete feature in the connected field.","!category":"enum","!type":"Boolean"},"forceBind":{"!description":"This property will lead to a rebind on newly inserted tables after initial filters are set, immediately before the table is shown for the first time.\n\n<b>Note:<\/b> This only takes effect if autoBindOnInit is disabled on the <code>Table<\/code>","!category":"enum","!type":"Boolean"},"additionalText":{"!description":"Some additional text of type string, optionally to be displayed along with this item.","!category":"enum","!type":"String"},"keyPath":{"!description":"The path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.","!category":"enum","!type":"String"},"icon":{"!description":"The icon belonging to this list item instance. This can be a URI to an image or an icon font URI.","!category":"enum","!type":"String"},"!category":"namespace","shortTitle":{"!description":"Title text that appears in the dialog header.","!category":"enum","!type":"String"},"filterFields":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.2 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.isSearchSupported isSearchSupported}<br>The fields based on which the table data is filtered. For filtering, the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code>, and if the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.","!category":"enum","!type":"String"},"title":{"!description":"Title text that appears in the tab header.","!category":"enum","!type":"String"},"Conditions":"sap.ui.mdc.valuehelp.content.Conditions_obj","enabled":{"!description":"Enabled items can be selected.","!category":"enum","!type":"Boolean"},"groupKey":{"!description":"Key of the group for what the items are grouped","!category":"enum","!type":"Object"},"textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!category":"enum","!type":"sap.ui.core.TextDirection"},"Bool":"sap.ui.mdc.valuehelp.content.Bool_obj","groupText":{"!description":"Text of the group for what the items are grouped","!category":"enum","!type":"String"},"text":{"!description":"The text to be displayed for the item.","!category":"enum","!type":"String"},"filterList":{"!description":"If set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists, all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.","!category":"enum","!type":"Boolean"},"useAsValueHelp":{"!description":"If set, the list is opened whenever the value help icon is pressed.","!category":"enum","!type":"Boolean"},"key":{"!description":"Can be used as input for subsequent actions.","!category":"enum","!type":"String"},"group":{"!description":"If set, all contents with the same group are arranged together on one tab.\n\nThe label of the groups can be defined on the container via {@link sap.ui.mdc.valuehelp.Dialog#setGroupConfig setGroupConfig}.","!category":"enum","!type":"String"},"!description":"Content modules that are used in {@link sap.ui.mdc.valuehelp.Popover Popover} or {@link sap.ui.mdc.valuehelp.Dialog Dialog}\n\nThese modules must not be used stand-alone.","visible":{"!description":"Hide content temporary.","!category":"enum","!type":"Boolean"},"FixedListItem":"sap.ui.mdc.valuehelp.content.FixedListItem_obj","MDCTable":"sap.ui.mdc.valuehelp.content.MDCTable_obj","caseSensitive":{"!description":"If this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"tokenizerTitle":{"!description":"Title text that appears in the dialog tokenizer panel if only one content exists.","!category":"enum","!type":"String"},"label":{"!description":"Label shown on condition panel.","!category":"enum","!type":"String"},"FixedList":"sap.ui.mdc.valuehelp.content.FixedList_obj","MTable":"sap.ui.mdc.valuehelp.content.MTable_obj","!module":"sap/ui/mdc/ValueHelp","filterValue":{"!description":"Value for filtering ($search).\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.","!category":"enum","!type":"String"},"!helpDescription":"Content modules that are used in {@link sap.ui.mdc.valuehelp.Popover Popover} or {@link sap.ui.mdc.valuehelp.Dialog Dialog}\n\nThese modules must not be used stand-alone.","groupable":{"!description":"If set, the items of the list can be grouped","!category":"enum","!type":"Boolean"},"conditions":{"!description":"Conditions of the value help.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.","!category":"enum","!type":"[Object]"},"config":{"!description":"Internal configuration.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.","!category":"enum","!type":"Object"}},"sap.ui.mdc.Table_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Table with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Table"},"sap.ui.mdc.field.CustomFieldInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.CustomFieldInfo"},"sap.ui.mdc.valuehelp.base":{"descriptionPath":{"!description":"The path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.","!category":"enum","!type":"String"},"useFirstMatch":{"!description":"If set, <code>getItemForValue<\/code> returns the first item that matches the text.\n\nIn the default implementation, this is the first item that matches the entered text. Which item is used can be determined by implementing {@link module:sap/ui/mdc/ValueHelpDelegate.getFirstMatch getFirstMatch}.\n\nThe matching item is returned in the <code>typeaheadSuggested<\/code> event and used for the autocomplete feature in the connected field.","!category":"enum","!type":"Boolean"},"DefineConditionPanel":"sap.ui.mdc.valuehelp.base.DefineConditionPanel_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"keyPath":{"!description":"The path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.","!category":"enum","!type":"String"},"IDialogContainer":"sap.ui.mdc.valuehelp.base.IDialogContainer","IDialogContent":"sap.ui.mdc.valuehelp.base.IDialogContent","!category":"namespace","shortTitle":{"!description":"Title text that appears in the dialog header.","!category":"enum","!type":"String"},"filterFields":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.2 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.isSearchSupported isSearchSupported}<br>The fields based on which the table data is filtered. For filtering, the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code>, and if the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.","!category":"enum","!type":"String"},"title":{"!description":"Title text that appears in the tab header.","!category":"enum","!type":"String"},"_pagination":{"!description":"Indicates if pagination is active","!category":"enum","!type":"Boolean"},"content":{"!description":"Content control","!category":"enum","!type":"Object"},"DialogTab":"sap.ui.mdc.valuehelp.base.DialogTab_obj","Container":"sap.ui.mdc.valuehelp.base.Container_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"_nextButtonActive":{"!description":"Indicates if next button is active","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"ITypeaheadContent":"sap.ui.mdc.valuehelp.base.ITypeaheadContent","useAsValueHelp":{"!description":"If set, the list is opened whenever the value help icon is pressed.","!category":"enum","!type":"Boolean"},"group":{"!description":"If set, all contents with the same group are arranged together on one tab.\n\nThe label of the groups can be defined on the container via {@link sap.ui.mdc.valuehelp.Dialog#setGroupConfig setGroupConfig}.","!category":"enum","!type":"String"},"!description":"Base modules for {@link sap.ui.mdc.ValueHelp ValueHelp}\n\nThese modules must not be used stand-alone.","ListContent":"sap.ui.mdc.valuehelp.base.ListContent_obj","FilterableListContent":"sap.ui.mdc.valuehelp.base.FilterableListContent_obj","inputOK":{"!description":"If set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling value help and automatically update it.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Hide content temporary.","!category":"enum","!type":"Boolean"},"caseSensitive":{"!description":"If this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"ITypeaheadContainer":"sap.ui.mdc.valuehelp.base.ITypeaheadContainer","tokenizerTitle":{"!description":"Title text that appears in the dialog tokenizer panel if only one content exists.","!category":"enum","!type":"String"},"label":{"!description":"The <code>label<\/code> for the <code>DefineConditionPanel<\/code> used as panel headerText.","!category":"enum","!type":"String"},"localFilterValue":{"!description":"This property may be used by <code>FilterableListContents<\/code> to share basic search states in collective search scenarios.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/ValueHelp","filterValue":{"!description":"Value for filtering ($search).\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.","!category":"enum","!type":"String"},"!helpDescription":"Base modules for {@link sap.ui.mdc.ValueHelp ValueHelp}\n\nThese modules must not be used stand-alone.","Content":"sap.ui.mdc.valuehelp.base.Content_obj","conditions":{"!description":"Conditions of the value help.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.","!category":"enum","!type":"[Object]"},"config":{"!description":"Internal configuration.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.","!category":"enum","!type":"Object"},"_prevButtonActive":{"!description":"Indicates if previous button is active","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.Control":{"!description":"The base class for controls in the <code>sap.ui.mdc<\/code> library providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Control.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPropertyHelper":{"!description":"Returns the property helper instance, if available.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.util.PropertyHelper"},"initControlDelegate":{"!description":"Loads and initializes the delegate module related to the enhanced control.","!static":false,"!category":"function","!type":"fn(oPreloadedModule?: module:sap/ui/mdc/BaseDelegate) -> Promise<module:sap/ui/mdc/BaseDelegate>","parameters":{"oPreloadedModule":"type: module:sap/ui/mdc/BaseDelegate, description: Preloaded delegate module"}},"!proto":"sap.ui.core.Control","isPropertyHelperFinal":{"!description":"Indicates if the control's propertyHelper already contains all available properties","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","initPropertyHelper":{"!description":"Loads and initializes the property helper related to the enhanced control.","!static":false,"!category":"function","!type":"fn(PropertyHelperClass?: sap.ui.mdc.util.PropertyHelper, aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"PropertyHelperClass":"type: sap.ui.mdc.util.PropertyHelper, description: Custom property helper class","bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Control with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getPayload":{"!description":"Returns the payload object set for the delegate property.","!static":false,"!category":"function","!type":"fn() -> Object"},"finalizePropertyHelper":{"!description":"Finalize the propertyHelper using the control's delegate.","!static":false,"!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"!constructorDescription":"Creates and initializes a new control with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/mdc/Control","!helpDescription":"The base class for controls in the <code>sap.ui.mdc<\/code> library providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getTypeUtil":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link #getTypeMap}<br>Returns the <code>typeUtil<\/code> made available by a delegate module.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.util.TypeUtil | module:sap/ui/mdc/util/TypeMap"},"awaitPropertyHelper":{"!description":"Provides access to the property helper initialization <code>Promise<\/code>.","!static":false,"!category":"function","!type":"fn() -> Promise<sap.ui.mdc.util.PropertyHelper>"},"getControlDelegate":{"!description":"Returns the delegate instance, if available.","!static":false,"!category":"function","!type":"fn() -> module:sap/ui/mdc/BaseDelegate"},"awaitControlDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code>. <b>Note:<\/b> <code>initControlDelegate<\/code> must be called to start the delegate initialization","!static":false,"!category":"function","!type":"fn() -> Promise<module:sap/ui/mdc/BaseDelegate>"},"getTypeMap":{"!description":"Returns the <code>TypeMap<\/code> made available by a delegate module.","!static":false,"!category":"function","!type":"fn() -> module:sap/ui/mdc/util/TypeMap"}},"sap.ui.mdc.table.DragDropConfig":{"attachDragEnd":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dragEnd dragEnd} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself.\n\nThis event is fired when the row drag operation is ended, if the <code>draggable<\/code> property is set to <code>true<code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDropEffect":{"!description":"Gets current value of property {@link #getDropEffect dropEffect}.\n\nDefines the visual drop effect.\n\nDefault value is <code>\"Move\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.dnd.DropEffect"},"detachDragOver":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dragOver dragOver} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.dnd.DragDropBase","fireDragOver":{"!description":"Fires event {@link #event:dragOver dragOver} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!category":"class","getDropPosition":{"!description":"Gets current value of property {@link #getDropPosition dropPosition}.\n\nDefines the position for the drop action, visualized by a rectangle.\n\nDefault value is <code>\"On\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.dnd.DropPosition"},"getDraggable":{"!description":"Gets current value of property {@link #getDraggable draggable}.\n\nDetermines whether the rows of the table are draggable.\n\n<b>Note:<\/b> Setting this property to <code>true<\/code> may expose the rows of the table in other <code>DropInfo<\/code> event parameters. In this case, only the binding context of the row is allowed to be used. Internal controls and their types are subject to change without notice.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDraggable":{"!description":"Sets a new value for property {@link #getDraggable draggable}.\n\nDetermines whether the rows of the table are draggable.\n\n<b>Note:<\/b> Setting this property to <code>true<\/code> may expose the rows of the table in other <code>DropInfo<\/code> event parameters. In this case, only the binding context of the row is allowed to be used. Internal controls and their types are subject to change without notice.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDraggable?: Boolean) -> sap.ui.mdc.table.DragDropConfig","parameters":{"bDraggable":"type: boolean, description: New value for property <code>draggable<\/code>"}},"!constructorDescription":"Constructor for a new DragDropConfig.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDraggable draggable} : boolean (default: false)<\/li>\n<li>{@link #getDroppable droppable} : boolean (default: false)<\/li>\n<li>{@link #getDropEffect dropEffect} : sap.ui.core.dnd.DropEffect (default: \"Move\")<\/li>\n<li>{@link #getDropPosition dropPosition} : sap.ui.core.dnd.DropPosition (default: \"On\")<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragStart dragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragEnd dragEnd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragEnter dragEnter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragOver dragOver} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drop drop} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DragDropBase#constructor sap.ui.core.dnd.DragDropBase}\ncan be used as well.","setDropEffect":{"!description":"Sets a new value for property {@link #getDropEffect dropEffect}.\n\nDefines the visual drop effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Move\"<\/code>.","!static":false,"!category":"function","!type":"fn(sDropEffect?: sap.ui.core.dnd.DropEffect) -> sap.ui.mdc.table.DragDropConfig","parameters":{"sDropEffect":"type: sap.ui.core.dnd.DropEffect, description: New value for property <code>dropEffect<\/code>"}},"detachDragEnd":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dragEnd dragEnd} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setDropPosition":{"!description":"Sets a new value for property {@link #getDropPosition dropPosition}.\n\nDefines the position for the drop action, visualized by a rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"On\"<\/code>.","!static":false,"!category":"function","!type":"fn(sDropPosition?: sap.ui.core.dnd.DropPosition) -> sap.ui.mdc.table.DragDropConfig","parameters":{"sDropPosition":"type: sap.ui.core.dnd.DropPosition, description: New value for property <code>dropPosition<\/code>"}},"attachDragStart":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dragStart dragStart} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself.\n\nThis event is fired when the user starts dragging a table row, if the <code>draggable<\/code> property is set to <code>true<code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireDrop":{"!description":"Fires event {@link #event:drop drop} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachDrop":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:drop drop} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachDragStart":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dragStart dragStart} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!description":"Provides the configuration for the drag-and-drop operations of the rows of the table.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.DragDropConfig.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireDragStart":{"!description":"Fires event {@link #event:dragStart dragStart} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachDragEnter":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dragEnter dragEnter} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachDrop":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:drop drop} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself.\n\nThis event is fired when an element is dropped on a table row, if the <code>droppable<\/code> property is set to <code>true<code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.DragDropConfig with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.dnd.DragDropBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/mdc/table/DragDropConfig","attachDragEnter":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dragEnter dragEnter} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself.\n\nThis event is fired when a dragged element enters a table row, if the <code>droppable<\/code> property is set to <code>true<code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireDragEnd":{"!description":"Fires event {@link #event:dragEnd dragEnd} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"Provides the configuration for the drag-and-drop operations of the rows of the table.","setDroppable":{"!description":"Sets a new value for property {@link #getDroppable droppable}.\n\nDetermines whether the rows of the table are droppable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDroppable?: Boolean) -> sap.ui.mdc.table.DragDropConfig","parameters":{"bDroppable":"type: boolean, description: New value for property <code>droppable<\/code>"}},"fireDragEnter":{"!description":"Fires event {@link #event:dragEnter dragEnter} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getDroppable":{"!description":"Gets current value of property {@link #getDroppable droppable}.\n\nDetermines whether the rows of the table are droppable.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachDragOver":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dragOver dragOver} event of this <code>sap.ui.mdc.table.DragDropConfig<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself.\n\nThis event is fired when an element is being dragged over a table row, if the <code>droppable<\/code> property is set to <code>true<code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.DragDropConfig","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.DragDropConfig<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.mdc.filterbar.IFilterContainer_obj":{"!type":"fn()","prototype":"sap.ui.mdc.filterbar.IFilterContainer"},"sap.ui.mdc.valuehelp.content.Bool":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element to provide a value help for boolean fields.","removeItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Removes a item from the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not change items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.valuehelp.content.FixedListItem) -> sap.ui.mdc.valuehelp.content.FixedListItem | null","parameters":{"vItem":"type: int|string|sap.ui.mdc.valuehelp.content.FixedListItem, description: The item to remove or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.Bool.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.valuehelp.content.FixedList","destroyItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Destroys all the items in the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not change items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.Bool"},"!category":"class","removeAllItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Removes all the controls from the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not change items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.valuehelp.content.FixedListItem]"},"setUseFirstMatch":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>useFirstMatch<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bUseFirstMatch?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bUseFirstMatch":"type: boolean, description: New value for property <code>useFirstMatch<\/code>"}},"setUseAsValueHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>useAsValueHelp<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bUseAsValueHelp?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bUseAsValueHelp":"type: boolean, description: New value for property <code>useAsValueHelp<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Bool with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.content.FixedList.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Adds some item to the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not add items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.valuehelp.content.FixedListItem) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"oItem":"type: sap.ui.mdc.valuehelp.content.FixedListItem, description: The item to add; if empty, nothing is inserted"}},"setCaseSensitive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>caseSensitive<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bCaseSensitive?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bCaseSensitive":"type: boolean, description: New value for property <code>caseSensitive<\/code>"}},"!constructorDescription":"Constructor for a new <code>Bool<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.valuehelp.content.FixedList#constructor sap.ui.mdc.valuehelp.content.FixedList} can be used.","!module":"sap/ui/mdc/valuehelp/content/Bool","!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element to provide a value help for boolean fields.","setFilterList":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>filterList<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bFilterList?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bFilterList":"type: boolean, description: New value for property <code>filterList<\/code>"}},"insertItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Inserts a item to the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not add items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.valuehelp.content.FixedListItem, iIndex: Number) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"iIndex":"type: int, description: The 0-based index the item should be inserted at; for a negative value of iIndex, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.valuehelp.content.FixedListItem, description: The item to add; if empty, nothing is inserted"}}},"sap.ui.mdc.Chart":{"setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options available for the chart.<br> <b>Note:<\/b> The order of the provided options does not influence the arrangement of the icons on the UI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sP13nMode?: [sap.ui.mdc.enums.ChartP13nMode]) -> sap.ui.mdc.Chart","parameters":{"sP13nMode":"type: sap.ui.mdc.enums.ChartP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"detachSelectionDetailsActionPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSelectionHandler":{"!description":"Retrieves the selection handler of the inner chart.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAllowedRolesForKinds":{"!description":"Retrieves the allowed chart roles for the chart types. <b>Note:<\/b> This is only used inside the personalization.","!static":false,"!category":"function","!type":"fn() -> Object"},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nDefines the minimum width of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"getNoData":{"!description":"Gets content of aggregation {@link #getNoData noData}.\n\nDefines the custom visualization if there is no data available.<br> This control will be displayed on top of the chart when no data is visible inside the chart.<br> <b>Note:<\/b> If both a <code>noDataText<\/code> property and a <code>noData<\/code> aggregation are provided, the <code>noData<\/code> aggregation takes priority.<br> If the <code>noData<\/code> aggregation is undefined or set to null, the <code>noDataText<\/code> property is used instead.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"zoomOut":{"!description":"Zooms out from the inner chart.","!static":false,"!category":"function","!type":"fn()"},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header.<br> For more information, see {@link sap.m.Title#setLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.core.TitleLevel) -> sap.ui.mdc.Chart","parameters":{"sHeaderLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.mdc.Chart","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThis property describes the measures and dimensions visible in the chart. Changes in the personalization are also reflected here.\n\n<b>Note:<\/b> This aggregation is managed by the control, can only be populated during the definition in the XML view, and is not bindable. Any changes of the initial aggregation content might result in undesired effects. Changes of the aggregation have to be made with the {@link sap.ui.mdc.p13n.StateUtil StateUtil}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.chart.Item]"},"getIgnoreToolbarActions":{"!description":"Gets current value of property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions must not be available in the chart's toolbar.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.enums.ChartToolbarActionType]"},"getMinHeight":{"!description":"Gets current value of property {@link #getMinHeight minHeight}.\n\nDefines the minimum height of the chart.\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.chart.Item<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item) -> Number","parameters":{"oItem":"type: sap.ui.mdc.chart.Item, description: The item whose index is looked for"}},"setVariant":{"!description":"Sets the aggregated {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn(oVariant: sap.ui.fl.variants.VariantManagement) -> sap.ui.mdc.Chart","parameters":{"oVariant":"type: sap.ui.fl.variants.VariantManagement, description: The variant to set"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header.<br> For more information, see {@link sap.m.Title#setLevel}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"innerChartBound":{"!description":"Can be used to check whether the inner chart is initialized and bound.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setLegendVisible":{"!description":"Sets a new value for property {@link #getLegendVisible legendVisible}.\n\nEnables the legend of the chart.<br> <b>Note:<\/b> The setter calls <code>setLegendVisible<\/code> of the delegate class.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bLegendVisible?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bLegendVisible":"type: boolean, description: New value for property <code>legendVisible<\/code>"}},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"setMinHeight":{"!description":"Sets a new value for property {@link #getMinHeight minHeight}.\n\nDefines the minimum height of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sMinHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>minHeight<\/code>"}},"!description":"The <code>Chart<\/code> control creates a chart based on metadata and the configuration specified.<br> <b>Note:<\/b> The inner chart needs to be created inside the <code>ChartDelegate<\/code>.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Chart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"zoomIn":{"!description":"Zooms in from the inner chart.","!static":false,"!category":"function","!type":"fn()"},"destroyNoData":{"!description":"Destroys the noData in the aggregation {@link #getNoData noData}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"getChartTypeLayoutConfig":{"!description":"Retrieves the chart type layout configuration. <b>Note:<\/b> This is only used inside personalization.","!static":false,"!category":"function","!type":"fn() -> Object"},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the <code>Chart<\/code> control.\n\nDefault value is <code>\"column\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeaderStyle":{"!description":"Gets current value of property {@link #getHeaderStyle headerStyle}.\n\nDefines style of the header. For more information, see {@link sap.m.Title#setTitleStyle}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"getSelectionDetailsActions":{"!description":"Gets content of aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.\n\nFeeds details popover actions for data point selection in the chart.<br> For more information, see {@link sap.ui.mdc.chart.SelectionDetailsActions SelectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setFilter":{"!description":"Sets the associated {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.ID | sap.ui.mdc.IFilter) -> sap.ui.mdc.Chart","parameters":{"oFilter":"type: sap.ui.core.ID|sap.ui.mdc.IFilter, description: ID of an element which becomes the new target of this filter association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setNoData":{"!description":"Sets the aggregated {@link #getNoData noData}.","!static":false,"!category":"function","!type":"fn(oNoData: sap.ui.core.Control) -> sap.ui.mdc.Chart","parameters":{"oNoData":"type: sap.ui.core.Control, description: The noData to set"}},"!module":"sap/ui/mdc/Chart","!helpDescription":"The <code>Chart<\/code> control creates a chart based on metadata and the configuration specified.<br> <b>Note:<\/b> The inner chart needs to be created inside the <code>ChartDelegate<\/code>.","rebind":{"!description":"Executes a rebind considering the provided external and inbuilt filtering.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDefines the no data text shown in the chart.\n\nDefault value is <code>\"No data\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeaderVisible":{"!description":"Gets current value of property {@link #getHeaderVisible headerVisible}.\n\nDetermines whether the header text is shown in the chart. Regardless of its value, the given header text is used to label the chart correctly for accessibility purposes.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIgnoreToolbarActions":{"!description":"Sets a new value for property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions must not be available in the chart's toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sIgnoreToolbarActions?: [sap.ui.mdc.enums.ChartToolbarActionType]) -> sap.ui.mdc.Chart","parameters":{"sIgnoreToolbarActions":"type: sap.ui.mdc.enums.ChartToolbarActionType[], description: New value for property <code>ignoreToolbarActions<\/code>"}},"attachSelectionDetailsActionPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Chart<\/code> itself.\n\nThis event is fired when a <code>SelectionDetailsAction<\/code> is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Chart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setHeaderStyle":{"!description":"Sets a new value for property {@link #getHeaderStyle headerStyle}.\n\nDefines style of the header. For more information, see {@link sap.m.Title#setTitleStyle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderStyle: sap.ui.core.TitleLevel) -> sap.ui.mdc.Chart","parameters":{"sHeaderStyle":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerStyle<\/code>"}},"!proto":"sap.ui.mdc.Control","!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nThis aggregation describes actions that are added to the chart toolbar.<br> For more information, see {@link sap.ui.mdc.actiontoolbar.ActionToolbarAction}.\n\n<b>Note:<\/b> This aggregation is managed by the control, can only be populated during the definition in the XML view, and is not bindable. Any changes of the initial aggregation content might result in undesired effects. Changes of the aggregation have to be made with the {@link sap.ui.mdc.p13n.StateUtil StateUtil}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getChartTypeInfo":{"!description":"Gets the information about the current chart type.","!static":false,"!category":"function","!type":"fn() -> Object"},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/BaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the chart.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeaderVisible":{"!description":"Sets a new value for property {@link #getHeaderVisible headerVisible}.\n\nDetermines whether the header text is shown in the chart. Regardless of its value, the given header text is used to label the chart correctly for accessibility purposes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderVisible?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bHeaderVisible":"type: boolean, description: New value for property <code>headerVisible<\/code>"}},"destroyVariant":{"!description":"Destroys the variant in the aggregation {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"getLegendVisible":{"!description":"Gets current value of property {@link #getLegendVisible legendVisible}.\n\nEnables the legend of the chart.<br> <b>Note:<\/b> The setter calls <code>setLegendVisible<\/code> of the delegate class.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowChartTooltip":{"!description":"Gets current value of property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip.<br> <b>Note:<\/b> If set to <code>true<\/code>, a call of the <code>delegate.setChartTooltipVisibility<\/code> is triggered and can be used to make the <code>Chart<\/code> tooltip visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in the chart.","!static":false,"!category":"function","!type":"fn() -> String"},"getAdaptationUI":{"!description":"Gets the adaptation panel for the p13n dialog. <b>Note:<\/b> This is only used for personalization, do not use it otherwise.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the chart.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nDefines the minimum width of the chart.\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string (default: \"No data\")<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.enums.ChartP13nMode[] (default: [])<\/li>\n<li>{@link #getLegendVisible legendVisible} : boolean (default: true)<\/li>\n<li>{@link #getIgnoreToolbarActions ignoreToolbarActions} : sap.ui.mdc.enums.ChartToolbarActionType[] (default: [])<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize (default: \"240px\")<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize (default: \"400px\")<\/li>\n<li>{@link #getSortConditions sortConditions} : object<\/li>\n<li>{@link #getFilterConditions filterConditions} : object (default: {})<\/li>\n<li>{@link #getShowChartTooltip showChartTooltip} : boolean (default: true)<\/li>\n<li>{@link #getAutoBindOnInit autoBindOnInit} : boolean (default: true)<\/li>\n<li>{@link #getChartType chartType} : string (default: \"column\")<\/li>\n<li>{@link #getShowSelectionDetails showSelectionDetails} : boolean (default: true)<\/li>\n<li>{@link #getPropertyInfo propertyInfo} : object (default: [])<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getHeaderStyle headerStyle} : sap.ui.core.TitleLevel<\/li>\n<li>{@link #getHeaderVisible headerVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.mdc.chart.Item[] (default)<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSelectionDetailsActions selectionDetailsActions} : sap.ui.mdc.chart.SelectionDetailsActions<\/li>\n<li>{@link #getVariant variant} : sap.ui.fl.variants.VariantManagement<\/li>\n<li>{@link #getNoData noData} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFilter filter} : (sap.ui.core.ID | sap.ui.mdc.IFilter)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","getShowSelectionDetails":{"!description":"Gets current value of property {@link #getShowSelectionDetails showSelectionDetails}.\n\nEnables the Details button in the chart toolbar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"initialized":{"!description":"Checks whether the chart is initialized. After initialization the delegate is loaded and (in case of <code>autoBindOnInit=true<\/code>) the inner chart is created. The inner chart is not bound yet. Use <code>innerChartBound<\/code> for it.","!static":false,"!category":"function","!type":"fn() -> Promise"},"fireSelectionDetailsActionPressed":{"!description":"Fires event {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowSelectionDetails":{"!description":"Sets a new value for property {@link #getShowSelectionDetails showSelectionDetails}.\n\nEnables the Details button in the chart toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSelectionDetails?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bShowSelectionDetails":"type: boolean, description: New value for property <code>showSelectionDetails<\/code>"}},"setSelectionDetailsActions":{"!description":"Sets the aggregated {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsActions: sap.ui.mdc.chart.SelectionDetailsActions) -> sap.ui.mdc.Chart","parameters":{"oSelectionDetailsActions":"type: sap.ui.mdc.chart.SelectionDetailsActions, description: The selectionDetailsActions to set"}},"getConditions":{"!description":"Getter for <code>Conditions<\/code> set in the personalization settings.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAutoBindOnInit":{"!description":"Gets current value of property {@link #getAutoBindOnInit autoBindOnInit}.\n\nIf set to <code>true<\/code>, the chart is automatically bound after initialization.<br> If set to <code>false<\/code>, the chart is bound after the first call to <code>rebind<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setAutoBindOnInit":{"!description":"Sets a new value for property {@link #getAutoBindOnInit autoBindOnInit}.\n\nIf set to <code>true<\/code>, the chart is automatically bound after initialization.<br> If set to <code>false<\/code>, the chart is bound after the first call to <code>rebind<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoBindOnInit?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bAutoBindOnInit":"type: boolean, description: New value for property <code>autoBindOnInit<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/BaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Chart","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getFilter":{"!description":"ID of the element which is the current target of the association {@link #getFilter filter}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"destroySelectionDetailsActions":{"!description":"Destroys the selectionDetailsActions in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"setShowChartTooltip":{"!description":"Sets a new value for property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip.<br> <b>Note:<\/b> If set to <code>true<\/code>, a call of the <code>delegate.setChartTooltipVisibility<\/code> is triggered and can be used to make the <code>Chart<\/code> tooltip visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowChartTooltip?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bShowChartTooltip":"type: boolean, description: New value for property <code>showChartTooltip<\/code>"}},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options available for the chart.<br> <b>Note:<\/b> The order of the provided options does not influence the arrangement of the icons on the UI.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.enums.ChartP13nMode]"}},"sap.ui.mdc.enums.ReasonMode":{"!description":"Enumeration of the possible reasons for the search event.","Variant":{"!description":"The applied variant is marked as Apply Automatically.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/ReasonMode","Enter":{"!description":"Enter pressed in filter field.","!category":"enum","!type":"String"},"Go":{"!description":"Go button pressed.","!category":"enum","!type":"String"},"Unclear":{"!description":"Used if the mentioned reasons are not applicable.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.enums.ValueHelpPropagationReason":{"!description":"Enumeration of the propagation reason in the {@link sap.ui.mdc.ValueHelpDelegate#onConditionPropagation condition propagation callback} of the {@link sap.ui.mdc.ValueHelp ValueHelp}","!module":"sap/ui/mdc/enums/ValueHelpPropagationReason","Select":{"!description":"Triggered by <code>ValueHelp<\/code> itself on selection","!category":"enum","!type":"String"},"!category":"static class","ControlChange":{"!description":"Triggered by connected control after processing valuehelp output","!category":"enum","!type":"String"},"Info":{"!description":"Triggered by <code>ValueHelp<\/code> itself on <code>getItemForValue<\/code>","!category":"enum","!type":"String"}},"sap.ui.mdc.util.InfoBar":{"!description":"The <code>InfoBar<\/code> control provides an easy way of displaying filter information inside an <code>sap.ui.mdc.Chart<\/code> and an <code>sap.ui.mdc.Table<\/code>.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.util.InfoBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getInfoText":{"!description":"Gets current value of property {@link #getInfoText infoText}.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","detachRemoveAllFilters":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:removeAllFilters removeAllFilters} event of this <code>sap.ui.mdc.util.InfoBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.util.InfoBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.util.InfoBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setInfoText":{"!description":"Sets a new value for property {@link #getInfoText infoText}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInfoText: String) -> sap.ui.mdc.util.InfoBar","parameters":{"sInfoText":"type: string, description: New value for property <code>infoText<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.mdc.util.InfoBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.util.InfoBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.util.InfoBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new InfoBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInfoText infoText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeAllFilters removeAllFilters} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/mdc/util/InfoBar","!helpDescription":"The <code>InfoBar<\/code> control provides an easy way of displaying filter information inside an <code>sap.ui.mdc.Chart<\/code> and an <code>sap.ui.mdc.Table<\/code>.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.mdc.util.InfoBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.util.InfoBar<\/code> itself.\n\nThis event is fired when the user clicks on the infobar.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.util.InfoBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.util.InfoBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachRemoveAllFilters":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:removeAllFilters removeAllFilters} event of this <code>sap.ui.mdc.util.InfoBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.util.InfoBar<\/code> itself.\n\nThis event is fired when the user presses the <code>RemoveAllfilters<\/code> button.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.util.InfoBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.util.InfoBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireRemoveAllFilters":{"!description":"Fires event {@link #event:removeAllFilters removeAllFilters} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.util.InfoBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ui.mdc.link":{"icon":{"!description":"Defines the icon of the item.","!category":"enum","!type":"sap.ui.core.URI"},"description":{"!description":"Defines the additional text of the item.","!category":"enum","!type":"String"},"!category":"namespace","text":{"!description":"Text of the <code>Link<\/code> that is displayed.","!category":"enum","!type":"String"},"href":{"!description":"Destination link for a navigation operation in external format (used when opening in new tab) using the <code>hrefForExternal<\/code> method of the CrossApplicationNavigation service.","!category":"enum","!type":"String"},"initiallyVisible":{"!description":"Determines the initial visibility of the <code>LinkItem<\/code>. If set to <code>true<\/code>, the item will appear on the <code>Popover<\/code> without any personalization.","!category":"enum","!type":"Boolean"},"press":{"!description":"Callback for <code>press<\/code> event.","!category":"enum","!type":"Object"},"LinkItem":"sap.ui.mdc.link.LinkItem_obj","key":{"!description":"Unique key of the <code>LinkItem<\/code> that is used for personalization.","!category":"enum","!type":"String"},"internalHref":{"!description":"Destination link for a navigation operation in internal format provided by the SAP Fiori launchpad (used when navigation happens programmatically). Only for internal use","!category":"enum","!type":"String"},"target":{"!description":"Determines the target of the <code>Link<\/code> and has to be used as the <code>target<\/code> of an html anchor. The standard values for the <code>target<\/code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href<\/code> property is set.","!category":"enum","!type":"String"}},"sap.ui.mdc.RowCountMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.TableRowCountMode}<br>Defines the row count mode of the GridTable.","Auto":{"!description":"The table automatically fills the height of the surrounding container.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class","Fixed":{"!description":"The table always has as many rows as defined in the <code>rowCount<\/code> property of <code>GridTableType<\/code>.","!category":"enum","!type":"String"}},"sap.ui.mdc.mixin":{"PromiseMixin":"sap.ui.mdc.mixin.PromiseMixin","DelegateMixin":"sap.ui.mdc.mixin.DelegateMixin","FilterIntegrationMixin":"sap.ui.mdc.mixin.FilterIntegrationMixin","!module":"sap/ui/mdc/library","!category":"namespace","PropertyHelperMixin":"sap.ui.mdc.mixin.PropertyHelperMixin","AdaptationMixin":"sap.ui.mdc.mixin.AdaptationMixin"},"sap.ui.mdc.valuehelp.base.Container":{"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachTypeaheadSuggested":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:typeaheadSuggested typeaheadSuggested} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"hasDialog":{"!description":"Determines if the container parent has a dialog inside the value help.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"handleCanceled":{"!description":"Handles the <code>cancelled<\/code> event of the content.\n\nHere the {@link #event:cancel cancel} event needs to be fired.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"navigateInContent":{"!description":"Triggers navigation in the content of the container.","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"handleSelect":{"!description":"Handles the <code>select<\/code> event of the content.\n\nHere the {@link #event:select select} event needs to be fired.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"getRetrieveDelegateContentPromise":{"!description":"Returns the <code>Promise<\/code> for content creation.","!static":false,"!category":"function","!type":"fn() -> Promise"},"openContainer":{"!description":"Opens the container control or element.","!static":false,"!category":"function","!type":"fn(oContainer: sap.ui.core.Element, bTypeahead: Boolean)","parameters":{"oContainer":"type: sap.ui.core.Element, description: container","bTypeahead":"type: boolean, description: if set, container is opened for typeahead"}},"isTypeaheadSupported":{"!description":"Determines if the content of the container supports typeahead.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element.","navigate":{"!description":"Navigates the typeaheads values (optional)\n\nAs this could be asyncronous as data might be loaded a promise is returned.","!static":false,"!category":"function","!type":"fn(iStep: Number) -> Promise<object>","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"removeVisualFocus":{"!description":"The focus visualization of the field help needs to be removed as the user starts typing into the source control.","!static":false,"!category":"function","!type":"fn()"},"handleRequestSwitchToDialog":{"!description":"Handles the <code>requestSwitchToDialog<\/code> event of the content.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"isSingleSelect":{"!description":"Returns if the value help is used for single selection.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if the value help is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Container with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireVisualFocusSet":{"!description":"Fires event {@link #event:visualFocusSet visualFocusSet} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isOpen":{"!description":"Determines if the container is open.\n\n<b>Note:<\/b> This function must only be called by the <code>ValueHelp<\/code> element.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/mdc/valuehelp/base/Container","attachRequestSwitchToDialog":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if the value help should switch to dialog mode.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"placeContent":{"!description":"Places the content into the container control or element.","!static":false,"!category":"function","!type":"fn(oContainer: sap.ui.core.Element) -> sap.ui.core.Element","parameters":{"oContainer":"type: sap.ui.core.Element, description: container"}},"detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isClosing":{"!description":"Determines if the container is closing.\n\n<b>Note:<\/b> This function must only be called by the <code>ValueHelp<\/code> element.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindContentToContainer":{"!description":"Binds the content to the container.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content)","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: content"}},"fireTypeaheadSuggested":{"!description":"Fires event {@link #event:typeaheadSuggested typeaheadSuggested} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setLocalFilterValue":{"!description":"Sets a new value for property {@link #getLocalFilterValue localFilterValue}.\n\nThis property may be used by <code>FilterableListContents<\/code> to share basic search states in collective search scenarios.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLocalFilterValue: String) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"sLocalFilterValue":"type: string, description: New value for property <code>localFilterValue<\/code>"}},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:opened opened} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSelectedContent":{"!description":"Returns the currently used content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.Content"},"getAriaAttributes":{"!description":"Returns the aria attributes the field needs from the value help.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> Object","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as <code>ValueHelp<\/code> might not be connected to a field)"}},"fireNavigated":{"!description":"Fires event {@link #event:navigated navigated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValueHelp":{"!description":"Determines the value help instance.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ValueHelp"},"shouldOpenOnClick":{"!description":"Defines if the typeahead container desires to be opened whenever a user clicks on a connected control","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"getLocalFilterValue":{"!description":"Gets current value of property {@link #getLocalFilterValue localFilterValue}.\n\nThis property may be used by <code>FilterableListContents<\/code> to share basic search states in collective search scenarios.","!static":false,"!category":"function","!type":"fn() -> String"},"close":{"!description":"Closes the container","!static":false,"!category":"function","!type":"fn()"},"setHighlightId":{"!description":"Temporarily highlights a typeahead item identified by it's id. Navigation events or other updates may lead to the item no longer being highlighted.","!static":false,"!category":"function","!type":"fn(sHighlightId: String)","parameters":{"sHighlightId":"type: string, description: control id of the item to be highlighted"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.valuehelp.base.Content]"},"handleNavigated":{"!description":"Handles the <code>navigated<\/code> event of the content.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"getValueHelpDelegate":{"!description":"Determines the delegate of the value help.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> module:sap/ui/mdc/BaseDelegate"},"fireRequestSwitchToDialog":{"!description":"Fires event {@link #event:requestSwitchToDialog requestSwitchToDialog} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isValueHelpDelegateInitialized":{"!description":"Determines if delegate of the value help is initialized.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"providesScrolling":{"!description":"Determines if the container provides a own scroll functionality. If not, the <code>Content<\/code> needs to provide a scrolling solution like a {@link sap.m.ScrollContainer ScrollContainer}.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachRequestDelegateContent":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:requestDelegateContent requestDelegateContent} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"open":{"!description":"Opens the container","!static":false,"!category":"function","!type":"fn(oValueHelpContentPromise: Promise, bTypeahead: Boolean) -> Promise","parameters":{"oValueHelpContentPromise":"type: Promise, description: Promise for content request","bTypeahead":"type: boolean, description: Flag indicating whether the container is opened as type-ahead or dialog-like help"}},"getMaxConditions":{"!description":"Returns the maximum allowed number of conditions, -1 if no limit is set.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if the selected condition has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"shouldOpenOnNavigate":{"!description":"Defines if the typeahead containers values can be navigated without visibly opening the help","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachVisualFocusSet":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:visualFocusSet visualFocusSet} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isNavigationEnabled":{"!description":"Determines if navigation via arrow keys should be possible.\n\nIn ComboBox-like case keyboard-navigation should be anabled if closed and if open. If only typeahead is used (and maybe an value help dialog) keyboard-navigation schould be enabled only if typeahed is open.\n\nAs not all rowas might be loaded navigation with home, end, page up or dowm might be disabled, depending of the used content.","!static":false,"!category":"function","!type":"fn(iStep: Number) -> Boolean","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"getContainerConfig":{"!description":"Gets the configuration for a specific content.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content) -> Object","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: content"}},"getUseAsValueHelp":{"!description":"If the container is used for type-ahead it might be wanted that the same content should also be shown as valuehelp. If not, the field should not show a valuehelp icon.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears in the dialog or tab header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"isMultiSelect":{"!description":"Determines if multiselection is active.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUIAreaForContent":{"!description":"Returns the <code>UIArea<\/code> of the content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.UIArea | null"},"awaitValueHelpDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code> of the value help.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Promise"},"fireRequestDelegateContent":{"!description":"Fires event {@link #event:requestDelegateContent requestDelegateContent} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.Container"},"handleVisualFocusSet":{"!description":"Handles the <code>visualFocusSet<\/code> event of the content.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.Container.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"Returns control connected to value help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachVisualFocusSet":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:visualFocusSet visualFocusSet} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if the visual focus is set to the value help.\n\nIn this case the visual focus needs to be removed from the opening field, but the real focus must stay there.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachNavigated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if a navigation has been executed in the content of the container.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireOpened":{"!description":"Fires event {@link #event:opened opened} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"handleOpened":{"!description":"Handles the <code>opened<\/code> event of the container control or element.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears in the dialog or tab header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"attachTypeaheadSuggested":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:typeaheadSuggested typeaheadSuggested} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired after a suggested item has been found for a type-ahead.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.mdc.valuehelp.base.Content) -> sap.ui.mdc.valuehelp.base.Content | null","parameters":{"vContent":"type: int|string|sap.ui.mdc.valuehelp.base.Content, description: The content to remove or its index or id"}},"observeChanges":{"!description":"Observes property and aggregation changes.","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Change"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe value help checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValuedHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oConfig: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration) -> Promise<sap.ui.mdc.valuehelp.base.ValueHelpItem>","parameters":{"oConfig":"type: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration, description: Configuration"}},"!helpDescription":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element.","setVisualFocus":{"!description":"The focus visualization of the field help needs to be set as the user starts naigation into the value help items.","!static":false,"!category":"function","!type":"fn()"},"unbindContentFromContainer":{"!description":"Unbinds the content from the container.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content)","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: content"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content, iIndex: Number) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachNavigated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if the change is cancelled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"handleConfirmed":{"!description":"Handles the <code>confirmed<\/code> event of the content.\n\nHere the {@link #event:confirm confirm} event needs to be fired.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"handleTypeaheadSuggested":{"!description":"Handles the <code>typeaheadSuggested<\/code> event of the content.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the container. This aggregation holds the actual controls enabling the user to select items or create conditions (for example, tables or condition panels).","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.valuehelp.base.Content]"},"handleClose":{"!description":"Handles the <code>close<\/code> event of the container control or element.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"!proto":"sap.ui.core.Element","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if a change of the value help is confirmed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","isValidationSupported":{"!description":"Defines if the typeahead can be used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"closeContainer":{"!description":"Closes the container control or element.","!static":false,"!category":"function","!type":"fn()"},"fireConfirm":{"!description":"Fires event {@link #event:confirm confirm} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>Container<\/code>.\n\nThis is the basis for various value help containers. It cannot be used directly.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<li>{@link #getLocalFilterValue localFilterValue} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.mdc.valuehelp.base.Content[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:opened opened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:requestDelegateContent requestDelegateContent} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:requestSwitchToDialog requestSwitchToDialog} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigated navigated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:typeaheadSuggested typeaheadSuggested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visualFocusSet visualFocusSet} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","isDialog":{"!description":"Determines if the container is used as dialog inside the value help.\n\nThe container is also used as dialog if <code>useAsValueHelp<\/code> is set on content and no other dialog is set.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueHelpDelegatePayload":{"!description":"Determines the delegate payload of the value help.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Object"},"getValueHelpIcon":{"!description":"Return the value help icon that should be used for the field.","!static":false,"!category":"function","!type":"fn() -> null | String"},"getScrollDelegate":{"!description":"Returns the sap.ui.core.delegate.ScrollEnablement delegate which is used with this control.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> sap.ui.core.delegate.ScrollEnablement","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as <code>ValueHelp<\/code> might not be connected to a field)"}},"shouldOpenOnFocus":{"!description":"Defines if the typeahead container desires to be opened whenever a user focuses a connected control","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"detachRequestSwitchToDialog":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"handleClosed":{"!description":"Handles the <code>closed<\/code> event of the container control or element.","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: event"}},"getContainerControl":{"!description":"Returns the container control or element that is opened (for example, a popover or dialog).","!static":false,"!category":"function","!type":"fn()"},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:opened opened} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if the value help is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachRequestDelegateContent":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:requestDelegateContent requestDelegateContent} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nThis event is fired if the container requests the delegate content.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.mdc.valuehelp.base.Content<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content) -> Number","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: The content whose index is looked for"}},"isOpening":{"!description":"Determines if the container is opening.\n\n<b>Note:<\/b> This function must only be called by the <code>ValueHelp<\/code> element.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: The content to add; if empty, nothing is inserted"}},"isTypeahead":{"!description":"Determines if the container is used as typeahead inside the value help.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"onConnectionChange":{"!description":"Called if <code>ValueHelp<\/code> connection to a control has changed.","!static":false,"!category":"function","!type":"fn()"}},"sap.ui.mdc.valuehelp.content.Conditions_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Conditions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.Conditions"},"sap.ui.mdc.enums.ChartToolbarActionType":{"!description":"Defines the types of chart actions in the toolbar.<br> Can be used to remove some of the default <code>ToolbarAction<\/code>. For more information, see {@link sap.ui.mdc.Chart#ignoreToolbarActions}.","Legend":{"!description":"Legend action.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/ChartToolbarActionType","!category":"static class","DrillDownUp":{"!description":"Drill-down and drill-up action.","!category":"enum","!type":"String"},"ZoomInOut":{"!description":"Zoom-in and zoom-out action.","!category":"enum","!type":"String"}},"sap.ui.mdc.enums":{"ChartP13nMode":"sap.ui.mdc.enums.ChartP13nMode","ValueHelpSelectionType":"sap.ui.mdc.enums.ValueHelpSelectionType","FieldDisplay":"sap.ui.mdc.enums.FieldDisplay","OperatorValueType":"sap.ui.mdc.enums.OperatorValueType","ReasonMode":"sap.ui.mdc.enums.ReasonMode","TableMultiSelectMode":"sap.ui.mdc.enums.TableMultiSelectMode","!category":"namespace","FilterBarP13nMode":"sap.ui.mdc.enums.FilterBarP13nMode","ProcessingStrategy":"sap.ui.mdc.enums.ProcessingStrategy","TableP13nMode":"sap.ui.mdc.enums.TableP13nMode","TableGrowingMode":"sap.ui.mdc.enums.TableGrowingMode","ActionToolbarActionAlignment":"sap.ui.mdc.enums.ActionToolbarActionAlignment","TableRowActionType":"sap.ui.mdc.enums.TableRowActionType","ValueHelpPropagationReason":"sap.ui.mdc.enums.ValueHelpPropagationReason","TableRowCountMode":"sap.ui.mdc.enums.TableRowCountMode","!description":"Enumerations for <code>sap.ui.mdc<\/code> library","OperatorName":"sap.ui.mdc.enums.OperatorName","ConditionValidated":"sap.ui.mdc.enums.ConditionValidated","TableType":"sap.ui.mdc.enums.TableType","ContentMode":"sap.ui.mdc.enums.ContentMode","ChartToolbarActionType":"sap.ui.mdc.enums.ChartToolbarActionType","FieldEditMode":"sap.ui.mdc.enums.FieldEditMode","!module":"sap/ui/mdc/library","!helpDescription":"Enumerations for <code>sap.ui.mdc<\/code> library","BaseType":"sap.ui.mdc.enums.BaseType","TableSelectionMode":"sap.ui.mdc.enums.TableSelectionMode","OperatorOverwrite":"sap.ui.mdc.enums.OperatorOverwrite","LinkType":"sap.ui.mdc.enums.LinkType","FilterBarValidationStatus":"sap.ui.mdc.enums.FilterBarValidationStatus"},"sap.ui.mdc.field.FieldInfoBase":{"!description":"A <code>FieldInfoBase<\/code> element is a base class that shows any kind of information related to the <code>Field<\/code> control, for example, navigation targets or contact details. This is the basis for link-features. If the link is pressed a popover might be opened.","detachDataUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"checkDirectNavigation":{"!description":"Checks if there is a direct navigation or if there is a popover to be opened.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldInfoBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireDataUpdate":{"!description":"Fires event {@link #event:dataUpdate dataUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getContent":{"!description":"Returns the content of the popover.","!static":false,"!category":"function","!type":"fn(fnGetAutoClosedControl?: fn()) -> Promise<sap.ui.core.Control>","parameters":{"fnGetAutoClosedControl":"type: function, description: Function returning the <code>Popover<\/code> control that is created in <code>createPopover<\/code>"}},"!proto":"sap.ui.mdc.Element","!category":"class","isTriggerable":{"!description":"Returns <code>true<\/code> as a <code>Promise<\/code> result if the control created by <code>Field<\/code> can be triggered.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"detachPopoverAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:popoverAfterOpen popoverAfterOpen} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInfoBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>FieldInfoBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:dataUpdate dataUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:popoverAfterOpen popoverAfterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Element#constructor sap.ui.mdc.Element}\ncan be used as well.","attachDataUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself.\n\nThis event is fired if the data was updated.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/mdc/field/FieldInfoBase","!helpDescription":"A <code>FieldInfoBase<\/code> element is a base class that shows any kind of information related to the <code>Field<\/code> control, for example, navigation targets or contact details. This is the basis for link-features. If the link is pressed a popover might be opened.","getDirectLinkHrefAndTarget":{"!description":"Returns a <code>Promise<\/code> resolving into an {@link sap.ui.mdc.link.DirectLinkObject} containing the <code>href<\/code> and <code>target<\/code> of a direct navigation link. Returns a <code>Promise<\/code> resolving into null if there is no direct link.","!static":false,"!category":"function","!type":"fn() -> Promise<(sap.ui.mdc.link.DirectLinkObject | null)>"},"getSourceControl":{"!description":"Returns the parent control.","!static":false,"!category":"function","!type":"fn() -> [String | String]"},"getTriggerHref":{"!description":"Returns href as a <code>Promise<\/code> that defines the target navigation of the <code>Link<\/code> control created by <code>Field<\/code>. If direct navigation is used, href is returned. If the information panel contains more content than only one link, <code>null<\/code> is returned.","!static":false,"!category":"function","!type":"fn() -> Promise<(string | null)>"},"attachPopoverAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:popoverAfterOpen popoverAfterOpen} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself.\n\nThis event is fired after the popover is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"firePopoverAfterOpen":{"!description":"Fires event {@link #event:popoverAfterOpen popoverAfterOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"open":{"!description":"Opens the info panel in the control created by <code>Field<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, oEvent: sap.ui.base.Event) -> Promise","parameters":{"oEvent":"type: sap.ui.base.Event, description: Object of the event that gets fired by the <code>onPress<\/code> event of the link in <code>Field<\/code> attached. By default the parent is used as reference.","oControl":"type: sap.ui.core.Control, description: Optional control reference to which the popover is"}}},"module:sap/ui/mdc/odata/v4/TypeMap":{"!description":"ODataV4-specific {@link module:sap/ui/mdc/util/TypeMap TypeMap} configuration.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.<br> <b>Note:<\/b> This <code>TypeMap<\/code> implementation contains the following types including ODataV4-specific configuration:\n\n<ul> <li>{@link sap.ui.model.type.Boolean} (alias <code>Boolean<\/code><\/code>)<\/li> <li>{@link sap.ui.model.type.Currency} (alias <code>Currency<\/code>)<\/li> <li>{@link sap.ui.model.type.Date} (alias <code>Date<\/code>)<\/li> <li>{@link sap.ui.model.type.DateTime} (alias <code>DateTime<\/code>)<\/li> <li>{@link sap.ui.model.type.Float} (alias <code>Float<\/code>)<\/li> <li>{@link sap.ui.model.type.Integer} (alias <code>Integer<\/code>)<\/li> <li>{@link sap.ui.model.type.String} (alias <code>String<\/code>)<\/li> <li>{@link sap.ui.model.type.Time} (alias <code>Time<\/code>)<\/li> <li>{@link sap.ui.model.type.Unit} (alias <code>Unit<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Binary<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Boolean} (alias <code>Edm.Boolean<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Byte} (alias <code>Edm.Byte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Date} (alias <code>Edm.Date<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTime} (alias <code>Edm.DateTime<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTimeOffset} (alias <code>Edm.DateTimeOffset<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Decimal} (alias <code>Edm.Decimal<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Double} (alias <code>Edm.Double<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Float<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Guid} (alias <code>Edm.Guid<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int16} (alias <code>Edm.Int16<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int32} (alias <code>Edm.Int32<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int64} (alias <code>Edm.Int64<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.SByte} (alias <code>Edm.SByte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Single<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Stream<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.String} (alias <code>Edm.String<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Time} (alias <code>Edm.Time<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.TimeOfDay} (alias <code>Edm.TimeOfDay<\/code>)<\/li> <\/ul>","!module":"sap/ui/mdc/odata/v4/TypeMap","!helpDescription":"ODataV4-specific {@link module:sap/ui/mdc/util/TypeMap TypeMap} configuration.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.<br> <b>Note:<\/b> This <code>TypeMap<\/code> implementation contains the following types including ODataV4-specific configuration:\n\n<ul> <li>{@link sap.ui.model.type.Boolean} (alias <code>Boolean<\/code><\/code>)<\/li> <li>{@link sap.ui.model.type.Currency} (alias <code>Currency<\/code>)<\/li> <li>{@link sap.ui.model.type.Date} (alias <code>Date<\/code>)<\/li> <li>{@link sap.ui.model.type.DateTime} (alias <code>DateTime<\/code>)<\/li> <li>{@link sap.ui.model.type.Float} (alias <code>Float<\/code>)<\/li> <li>{@link sap.ui.model.type.Integer} (alias <code>Integer<\/code>)<\/li> <li>{@link sap.ui.model.type.String} (alias <code>String<\/code>)<\/li> <li>{@link sap.ui.model.type.Time} (alias <code>Time<\/code>)<\/li> <li>{@link sap.ui.model.type.Unit} (alias <code>Unit<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Binary<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Boolean} (alias <code>Edm.Boolean<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Byte} (alias <code>Edm.Byte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Date} (alias <code>Edm.Date<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTime} (alias <code>Edm.DateTime<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTimeOffset} (alias <code>Edm.DateTimeOffset<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Decimal} (alias <code>Edm.Decimal<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Double} (alias <code>Edm.Double<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Float<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Guid} (alias <code>Edm.Guid<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int16} (alias <code>Edm.Int16<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int32} (alias <code>Edm.Int32<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int64} (alias <code>Edm.Int64<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.SByte} (alias <code>Edm.SByte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Single<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Stream<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.String} (alias <code>Edm.String<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Time} (alias <code>Edm.Time<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.TimeOfDay} (alias <code>Edm.TimeOfDay<\/code>)<\/li> <\/ul>","module:sap/ui/mdc/odata/v4/TypeMap":"module:sap/ui/mdc/odata/v4/TypeMap","!category":"namespace"},"sap.ui.mdc.util":{"!description":"Utilities for <code>sap.ui.mdc<\/code> library","infoText":{"!description":"infoText : String","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"DateUtil":"sap.ui.mdc.util.DateUtil","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"DensityHelper":"sap.ui.mdc.util.DensityHelper","InfoBar":"sap.ui.mdc.util.InfoBar_obj","!category":"namespace","PromiseCache":"sap.ui.mdc.util.PromiseCache_obj","!module":"sap/ui/mdc/library","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"!helpDescription":"Utilities for <code>sap.ui.mdc<\/code> library","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"TypeUtil":"sap.ui.mdc.util.TypeUtil","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"FilterUtil":"sap.ui.mdc.util.FilterUtil"},"sap.ui.mdc.table.RowSettings":{"!description":"The <code>RowSettings<\/code> control is used to configure a row. This control can only be used in the context of the <code>sap.ui.mdc.Table<\/code> control to define row settings.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.RowSettings.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getHighlightText":{"!description":"Gets current value of property {@link #getHighlightText highlightText}.\n\nDefines the semantics of the {@link sap.ui.mdc.table.RowSettings#setHighlight highlight} property for accessibility purposes.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","!category":"class","getHighlight":{"!description":"Gets current value of property {@link #getHighlight highlight}.\n\nThe highlight state of the rows.\n\nIf the highlight is set to {@link sap.ui.core.MessageType sap.ui.core.MessageType.None} (default), no highlights are visible. Valid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor} (only values of <code>Indication01<\/code> to <code>Indication10<\/code> are supported for accessibility contrast reasons).\n\nAccessibility support is provided with the {@link sap.ui.mdc.table.RowSettings#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllRowActions":{"!description":"Removes all the controls from the aggregation {@link #getRowActions rowActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.table.RowActionItem]"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getNavigated":{"!description":"Gets current value of property {@link #getNavigated navigated}.\n\nThe navigated state of a row. The navigation indicator is displayed at the end of a row.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNavigated":{"!description":"Sets a new value for property {@link #getNavigated navigated}.\n\nThe navigated state of a row. The navigation indicator is displayed at the end of a row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bNavigated?: Boolean) -> sap.ui.mdc.table.RowSettings","parameters":{"bNavigated":"type: boolean, description: New value for property <code>navigated<\/code>"}},"addRowAction":{"!description":"Adds some rowAction to the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn(oRowAction: sap.ui.mdc.table.RowActionItem) -> sap.ui.mdc.table.RowSettings","parameters":{"oRowAction":"type: sap.ui.mdc.table.RowActionItem, description: The rowAction to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for new <code>RowSettings<\/code>.\n\n<b>Note:<\/b> Only use bindings that are bound against the rows, as working functionality cannot be ensured for other binding types.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHighlight highlight} : string (default: \"None\")<\/li>\n<li>{@link #getHighlightText highlightText} : string (default: \"\")<\/li>\n<li>{@link #getNavigated navigated} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRowActions rowActions} : sap.ui.mdc.table.RowActionItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","insertRowAction":{"!description":"Inserts a rowAction into the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn(oRowAction: sap.ui.mdc.table.RowActionItem, iIndex: Number) -> sap.ui.mdc.table.RowSettings","parameters":{"oRowAction":"type: sap.ui.mdc.table.RowActionItem, description: The rowAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the rowAction should be inserted at; for a negative value of <code>iIndex<\/code>, the rowAction is inserted at position 0; for a value greater than the current size of the aggregation, the rowAction is inserted at the last position"}},"!module":"sap/ui/mdc/table/RowSettings","indexOfRowAction":{"!description":"Checks for the provided <code>sap.ui.mdc.table.RowActionItem<\/code> in the aggregation {@link #getRowActions rowActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRowAction: sap.ui.mdc.table.RowActionItem) -> Number","parameters":{"oRowAction":"type: sap.ui.mdc.table.RowActionItem, description: The rowAction whose index is looked for"}},"setHighlight":{"!description":"Sets a new value for property {@link #getHighlight highlight}.\n\nThe highlight state of the rows.\n\nIf the highlight is set to {@link sap.ui.core.MessageType sap.ui.core.MessageType.None} (default), no highlights are visible. Valid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor} (only values of <code>Indication01<\/code> to <code>Indication10<\/code> are supported for accessibility contrast reasons).\n\nAccessibility support is provided with the {@link sap.ui.mdc.table.RowSettings#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHighlight?: String) -> sap.ui.mdc.table.RowSettings","parameters":{"sHighlight":"type: string, description: New value for property <code>highlight<\/code>"}},"!helpDescription":"The <code>RowSettings<\/code> control is used to configure a row. This control can only be used in the context of the <code>sap.ui.mdc.Table<\/code> control to define row settings.","setHighlightText":{"!description":"Sets a new value for property {@link #getHighlightText highlightText}.\n\nDefines the semantics of the {@link sap.ui.mdc.table.RowSettings#setHighlight highlight} property for accessibility purposes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHighlightText?: String) -> sap.ui.mdc.table.RowSettings","parameters":{"sHighlightText":"type: string, description: New value for property <code>highlightText<\/code>"}},"destroyRowActions":{"!description":"Destroys all the rowActions in the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.RowSettings"},"getRowActions":{"!description":"Gets content of aggregation {@link #getRowActions rowActions}.\n\nThe actions that appear at the end of a row.\n\n<b>Note:<\/b> This aggregation cannot be bound with a factory.<br> If the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, only the <code>Navigation<\/code> row action type is supported.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.table.RowActionItem]"},"removeRowAction":{"!description":"Removes a rowAction from the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn(vRowAction: Number | String | sap.ui.mdc.table.RowActionItem) -> sap.ui.mdc.table.RowActionItem | null","parameters":{"vRowAction":"type: int|string|sap.ui.mdc.table.RowActionItem, description: The rowAction to remove or its index or id"}}},"sap.ui.mdc.util.TypeUtil":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap}<br>Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage.","externalizeValue":{"!description":"converts a value into a string using a designated type\n\nThe value is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(vValue: Object, vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> String"},"initializeInternalType":{"!description":"This function initializes the internal (\"cloned\") Type.","!static":"true","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType, oTypeInitialization: Object)"},"!category":"namespace","internalizeValue":{"!description":"converts a string into a type-based value\n\nThe value is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(sValue: String, vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> Object"},"getTypeConfig":{"!description":"returns a type mapping configuration object for a given type string or simpleType","!static":"true","!category":"function","!type":"fn(vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> sap.ui.mdc.TypeConfig"},"initializeTypeFromValue":{"!description":"If the <code>Field<\/code> control is used, the used data type comes from the binding. Some data types (like Currency or Unit) might need some initialization. To initialize To initialize the internal (\"cloned\") Type later on, the result of this function is provided to <code>initializeInternalType<\/code>.","!static":"true","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType, vValue: Object) -> null | Object"},"!module":"sap/ui/mdc/util/TypeUtil","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap}<br>Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage.","getDataTypeClass":{"!description":"Returns a dataType class based on given object path, formatoptions and constraints\n\n<b>Note:<\/b> The module of the data type needs to be loaded before.","!static":"true","!category":"function","!type":"fn(sDataType: String) -> function(sap.ui.model.SimpleType)"},"getBaseType":{"!description":"To know what control is rendered the <code>Field<\/code> or <\/code>FilterField<\/code> needs to know if the type represents a date, a number or something else in a normalized way.\n\nAs default <code>string<\/code> is returned.","!static":"true","!category":"function","!type":"fn(sType: String, oFormatOptions: Object, oConstraints: Object) -> sap.ui.mdc.enums.BaseType"},"getDataTypeInstance":{"!description":"Returns a dataType instance based on given object path, formatoptions and constraints","!static":"true","!category":"function","!type":"fn(sDataType: String, oFormatOptions?: Object, oConstraints?: Object) -> sap.ui.model.SimpleType"},"getUnitTypeInstance":{"!description":"Returns a instance of a unit or currency type based on an existing type.\n\nThis type is used fur the number and unit part of a field if the field itself is using a unit or currency type.","!static":"true","!category":"function","!type":"fn(oOriginalType: sap.ui.model.CompositeType, bShowNumber?: Boolean, bShowMeasure?: Boolean) -> sap.ui.model.CompositeType"}},"sap.ui.mdc.TableDelegate":{"!category":"namespace"},"sap.ui.mdc.enums.TableRowCountMode":{"!description":"Row count mode of the table.","Auto":{"!description":"The table automatically fills the height of the surrounding container","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/TableRowCountMode","Interactive":{"!description":"The user can change the number of displayed rows by dragging a resizer","!category":"enum","!type":"String"},"!category":"static class","Fixed":{"!description":"A fixed number of rows is shown","!category":"enum","!type":"String"}},"sap.ui.mdc.table.RowActionItem":{"!description":"The <code>RowActionItem<\/code> control represents a action for a row. This control can only be used in the context of <code>sap.ui.mdc.Table<\/code> control to define row actions.","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nWhether the item should be visible on the screen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.mdc.table.RowActionItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.RowActionItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nWhether the item should be visible on the screen.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nText for the row action item.\n\n<b>Note:<\/b> A custom text cannot be set when the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nType of the row action item.\n\nSetting the type ensures default values for the properties <code>icon<\/code> and <code>text<\/code>. If an icon or text is set explicitly, this setting is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.mdc.enums.TableRowActionType) -> sap.ui.mdc.table.RowActionItem","parameters":{"sType":"type: sap.ui.mdc.enums.TableRowActionType, description: New value for property <code>type<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon for the row action item.\n\n<b>Note:<\/b> A custom icon cannot be set when the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowActionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon for the row action item.\n\n<b>Note:<\/b> A custom icon cannot be set when the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.mdc.table.RowActionItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.mdc.table.RowActionItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.RowActionItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.table.RowActionItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for new RowActionItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.mdc.enums.TableRowActionType<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/table/RowActionItem","!helpDescription":"The <code>RowActionItem<\/code> control represents a action for a row. This control can only be used in the context of <code>sap.ui.mdc.Table<\/code> control to define row actions.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nType of the row action item.\n\nSetting the type ensures default values for the properties <code>icon<\/code> and <code>text<\/code>. If an icon or text is set explicitly, this setting is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.TableRowActionType"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.mdc.table.RowActionItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.RowActionItem<\/code> itself.\n\nFired when the row action item is pressed.\n\nIf the table type is {@link sap.ui.mdc.table.GridTableType GridTable}, the <code>press<\/code> event is fired when a row action item is pressed.\n\nIf the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, the <code>press<\/code> event and the table's <code>rowPress<\/code> event are fired when a row with a row action item is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.RowActionItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.RowActionItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nText for the row action item.\n\n<b>Note:<\/b> A custom text cannot be set when the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.mdc.table.RowActionItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.mdc.condition.FilterConverter":{"!description":"Utility to convert {@link sap.ui.mdc.condition.ConditionObject conditions} of a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} into {@link sap.ui.model.Filter Filter}","createConditionTypesMapFromFilterBar":{"!description":"creates a map with the types of the conditions.","!static":"true","!category":"function","!type":"fn(oConditions: Object, oFilterBar: sap.ui.mdc.FilterBar) -> Object"},"!module":"sap/ui/mdc/condition/FilterConverter","!helpDescription":"Utility to convert {@link sap.ui.mdc.condition.ConditionObject conditions} of a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} into {@link sap.ui.model.Filter Filter}","createFilters":{"!description":"Converts all conditions given in a oConditions map into a {@link sap.ui.model.Filter Filter} object.","!static":"true","!category":"function","!type":"fn(oConditions: Object, oConditionTypes: Object, fConvert2FilterCallback?: fn(), bCaseSensitive?: Boolean) -> sap.ui.model.Filter"},"!category":"namespace"},"sap.ui.mdc.table.TableTypeBase":{"!description":"The table type info base class for the metadata-driven table. Base class with no implementation.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.TableTypeBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.TableTypeBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TableTypeBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","!module":"sap/ui/mdc/table/TableTypeBase","!helpDescription":"The table type info base class for the metadata-driven table. Base class with no implementation.","!proto":"sap.ui.core.Element","!category":"class"},"sap.ui.mdc.enum.ReasonMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ReasonMode}<br>Enumeration of the possible reasons for the search event.","Variant":{"!description":"The applied variant is marked as Apply Automatically.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/ReasonMode","Enter":{"!description":"Enter pressed in filter field.","!category":"enum","!type":"String"},"Go":{"!description":"Go button pressed.","!category":"enum","!type":"String"},"Unclear":{"!description":"Used if the mentioned reasons are not applicable.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.field.FieldInput":{"!description":"The <code>FieldInput<\/code> control is used to render an input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.Input Input} control to add ARIA attributes and other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldInput<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAriaAttributes ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Input#constructor sap.m.Input}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldInput","!helpDescription":"The <code>FieldInput<\/code> control is used to render an input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.Input Input} control to add ARIA attributes and other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.","setAriaAttributes":{"!description":"Sets a new value for property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>Input<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAriaAttributes?: Object) -> sap.ui.mdc.field.FieldInput","parameters":{"oAriaAttributes":"type: object, description: New value for property <code>ariaAttributes<\/code>"}},"!proto":"sap.m.Input","getAriaAttributes":{"!description":"Gets current value of property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>Input<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.p13n":{"!category":"namespace","StateUtil":"sap.ui.mdc.p13n.StateUtil_obj"},"sap.ui.mdc.odata.TypeUtil":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap}<br>Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage.","!module":"sap/ui/mdc/odata/TypeUtil","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap}<br>Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage.","!category":"namespace"},"sap.ui.mdc.field.DynamicDateRangeConditionsType":{"!description":"This class represents a type to map an array of conditions used in a {@link sap.ui.mdc.FilterField FilterField} control to a value of a {@link sap.m.DynamicDateRange DynamicDateRange} control.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DynamicDateRangeConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.ConditionsType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.DynamicDateRangeConditionsType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a <code>ConditionsType<\/code> to be used in <code>DynamicDateRange<\/code> control.","!module":"sap/ui/mdc/field/DynamicDateRangeConditionsType","!helpDescription":"This class represents a type to map an array of conditions used in a {@link sap.ui.mdc.FilterField FilterField} control to a value of a {@link sap.m.DynamicDateRange DynamicDateRange} control.","!proto":"sap.ui.mdc.field.ConditionsType","!category":"class"},"sap.ui.mdc.mixin.AdaptationMixin":{"!description":"Enhances a given control prototype with consolidated handling for adaptation.\n\nThe following methods are available:\n\n<ul> <li><code>getEngine<\/code> - Provides access to the adaptation engine singleton instance.<\/li> <li><code>retrieveInbuiltFilter<\/code> - Provides access to the AdaptationFilterBar initialization<\/li> <li><code>getInbuiltFilter<\/code> - Returns the AdaptationFilterBar instance, if available.<\/li> <li><code>getAdaptationConfigAttribute<\/code> - Returns an adaptationConfig attribute.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>exit<\/code><\/li> <\/ul>","!module":"sap/ui/mdc/mixin/AdaptationMixin","!helpDescription":"Enhances a given control prototype with consolidated handling for adaptation.\n\nThe following methods are available:\n\n<ul> <li><code>getEngine<\/code> - Provides access to the adaptation engine singleton instance.<\/li> <li><code>retrieveInbuiltFilter<\/code> - Provides access to the AdaptationFilterBar initialization<\/li> <li><code>getInbuiltFilter<\/code> - Returns the AdaptationFilterBar instance, if available.<\/li> <li><code>getAdaptationConfigAttribute<\/code> - Returns an adaptationConfig attribute.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>exit<\/code><\/li> <\/ul>","!category":"namespace"},"sap.ui.mdc.odata.v4":{"TableDelegate":"sap.ui.mdc.odata.v4.TableDelegate","TypeUtil":"sap.ui.mdc.odata.v4.TypeUtil","!category":"namespace","vizChart":"sap.ui.mdc.odata.v4.vizChart"},"sap.ui.mdc.valuehelp":{"filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"opensOnClick":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121.0 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.shouldOpenOnClick shouldOpenOnClick}<br>Controls the possibility to open this popover container by clicking on a connected control, even if no content enforces it.\n\n<b>Note:<\/b> By default, a type-ahead is only shown to provide suggestions when users enter input in a connected control. This property enables scenarios where popovers need to be shown earlier (for example, recommendations or recently entered values). See also {@link module:sap/ui/mdc/ValueHelpDelegate.showTypeahead showTypeahead}","!category":"enum","!type":"Boolean"},"supportDefault":{"!description":"Indicates that default of variants is supported","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"groupConfig":{"!description":"Configuration for groups (collective search).\n\nThe object needs to contain an entry for every possible group. The labels of every group need to have a structure of {@link sap.ui.mdc.valuehelp.content.GroupLabel}. If no configuration is provided a standard text \"search and select\" is used.\n\n<b>Sample:<\/b> <pre>\n{\ngroup1: {label: \"Label 1 ({0})\", nnLabel: \"Label 1\"},\ngroup2: {label: \"Label 2 ({0})\", nnLabel: \"Label 2\"}\n}\n<\/pre>","!category":"enum","!type":"Object"},"supportFavorites":{"!description":"Indicates that favorite handling is supported","!category":"enum","!type":"Boolean"},"_selectStategyForSameItem":{"!description":"Defines the behavior, when the same list item is selected If set to <code>false<\/code> the <code>select<\/code> event will be omitted.","!category":"enum","!type":"Boolean"},"Dialog":"sap.ui.mdc.valuehelp.Dialog_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"modified":{"!description":"Indicates if the current variant is modified.","!category":"enum","!type":"Boolean"},"popoverTitle":{"!description":"The title in the My Views popover.","!category":"enum","!type":"String"},"titleStyle":{"!description":"Defines the style of the title. For more information, see {@link sap.m.Title#setTitleStyle}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"maxWidth":{"!description":"Sets the maximum width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"Modules for {@link sap.ui.mdc.ValueHelp ValueHelp}","_displayTextForExecuteOnSelectionForStandardVariant":{"!description":"Defines the Apply Automatically text for the standard variant in the Manage Views dialog if the application controls this behavior.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"level":{"!description":"Semantic level of the header. For more information, see {@link sap.m.Title#setLevel}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"_quickSelectEnabled":{"!description":"_quickSelectEnabled : Boolean","!category":"enum","!type":"Boolean"},"_standardKey":{"!description":"Defines the standard variant key.","!category":"enum","!type":"String"},"defaultKey":{"!description":"Identifies the defaulted item","!category":"enum","!type":"String"},"CollectiveSearchSelect":"sap.ui.mdc.valuehelp.CollectiveSearchSelect_obj","localFilterValue":{"!description":"This property may be used by <code>FilterableListContents<\/code> to share basic search states in collective search scenarios.","!category":"enum","!type":"String"},"FilterBar":"sap.ui.mdc.valuehelp.FilterBar_obj","!module":"sap/ui/mdc/ValueHelp","!helpDescription":"Modules for {@link sap.ui.mdc.ValueHelp ValueHelp}","filterFieldThreshold":{"!description":"Number of FilterItems which will be shown via Show Filters.<br>","!category":"enum","!type":"Number"},"supportPublic":{"!description":"Indicates that public functionality is supported","!category":"enum","!type":"Boolean"},"showGoButton":{"!description":"Indicates whether the Go button is visible in the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"inErrorState":{"!description":"Indicates that the control is in error state. If set to <code>true<\/code>, an error message will be displayed whenever the variant is opened.","!category":"enum","!type":"Boolean"},"Popover":"sap.ui.mdc.valuehelp.Popover_obj","_showAsText":{"!description":"Renders the name of the variant as a text. The name of the variant is usually rendered as {@link sap.m.Title} but there are use cases - related to accessibility requirements - where the rendering should be done using {@link sap.m.Text} instead.<br> <b>Note:<\/b> If the name of the variant is rendered as <code>sap.m.Text<\/code>, all the <code>sap.m.Title<\/code> specific information like <code>level<\/code> and <code>titleStyle<\/code> is ignored.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"Indicates whether possible errors during the search in a message box are displayed.","!category":"enum","!type":"Boolean"},"selectedItemKey":{"!description":"The key of the selected item of the <code>CollectiveSearchSelect<\/code> control.\n\nThe <code>selectedItemKey<\/code> property must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.","!category":"enum","!type":"String"},"_selectedContentKey":{"!description":"_selectedContentKey : String","!category":"enum","!type":"String"},"_selectableContents":{"!description":"_selectableContents : [Object]","!category":"enum","!type":"[Object]"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"expandFilterFields":{"!description":"Determines whether the Show/Hide Filters button is in the state show or hide.<br>","!category":"enum","!type":"Boolean"},"!category":"namespace","title":{"!description":"Title text that appears in the dialog or tab header.","!category":"enum","!type":"String"},"content":"sap.ui.mdc.valuehelp.content","showFooter":{"!description":"Indicates if the buttons and the complete footer in the My Views dialog are visible.","!category":"enum","!type":"Boolean"},"supportApplyAutomatically":{"!description":"Indicates that apply automatically functionality is supported","!category":"enum","!type":"Boolean"},"showSaveAs":{"!description":"Controls the visibility of the Save As button.","!category":"enum","!type":"Boolean"},"delegate":{"!description":"Object related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/valuehelp/FilterBarDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.<br> <b>Node<\/b>: Please check {@link sap.ui.mdc.filterbar.PropertyInfo} for more information about the supported inner elements. <b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.filterbar.FilterBarBase#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/FilterBarDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"enum","!type":"Object"},"liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"selectedKey":{"!description":"Identifies the currently selected item","!category":"enum","!type":"String"},"_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"supportContexts":{"!description":"Indicates that contexts functionality is supported.<br> <b>Note:<\/b> This property is used internally by the SAPUI5 flexibility layer.","!category":"enum","!type":"Boolean"},"creationAllowed":{"!description":"If set to <code>false<\/code>, neither the Save As nor the Save button in the My Views dialog is visible.","!category":"enum","!type":"Boolean"},"opensOnFocus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121.0 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.shouldOpenOnFocus shouldOpenOnFocus}<br>Controls the possibility to open this popover container by focussing on a connected control.\n\n<b>Note:<\/b> By default, a type-ahead is only shown to provide suggestions when users enter input in a connected control. This property enables scenarios where popovers need to be shown earlier (for example, recommendations or recently entered values). See also {@link module:sap/ui/mdc/ValueHelpDelegate.showTypeahead showTypeahead}","!category":"enum","!type":"Boolean"},"base":"sap.ui.mdc.valuehelp.base"},"module:sap/ui/mdc/DefaultTypeMap":{"!description":"Generic {@link module:sap/ui/mdc/util/TypeMap TypeMap} configuration for simple use cases.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.<br> <b>Note:<\/b> This {@link module:sap/ui/mdc/util/TypeMap TypeMap} implementation contains the following types:\n\n<ul> <li>{@link sap.ui.model.type.Boolean} (alias <code>Boolean<\/code>)<\/li> <li>{@link sap.ui.model.type.Currency} (alias <code>Currency<\/code>)<\/li> <li>{@link sap.ui.model.type.Date} (alias <code>Date<\/code>)<\/li> <li>{@link sap.ui.model.type.DateTime} (alias <code>DateTime<\/code>)<\/li> <li>{@link sap.ui.model.type.Float} (alias <code>Float<\/code>)<\/li> <li>{@link sap.ui.model.type.Integer} (alias <code>Integer<\/code>)<\/li> <li>{@link sap.ui.model.type.String} (alias <code>String<\/code>)<\/li> <li>{@link sap.ui.model.type.Time} (alias <code>Time<\/code>)<\/li> <li>{@link sap.ui.model.type.Unit} (alias <code>Unit<\/code>)<\/li> <\/ul>","!module":"sap/ui/mdc/DefaultTypeMap","!helpDescription":"Generic {@link module:sap/ui/mdc/util/TypeMap TypeMap} configuration for simple use cases.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.<br> <b>Note:<\/b> This {@link module:sap/ui/mdc/util/TypeMap TypeMap} implementation contains the following types:\n\n<ul> <li>{@link sap.ui.model.type.Boolean} (alias <code>Boolean<\/code>)<\/li> <li>{@link sap.ui.model.type.Currency} (alias <code>Currency<\/code>)<\/li> <li>{@link sap.ui.model.type.Date} (alias <code>Date<\/code>)<\/li> <li>{@link sap.ui.model.type.DateTime} (alias <code>DateTime<\/code>)<\/li> <li>{@link sap.ui.model.type.Float} (alias <code>Float<\/code>)<\/li> <li>{@link sap.ui.model.type.Integer} (alias <code>Integer<\/code>)<\/li> <li>{@link sap.ui.model.type.String} (alias <code>String<\/code>)<\/li> <li>{@link sap.ui.model.type.Time} (alias <code>Time<\/code>)<\/li> <li>{@link sap.ui.model.type.Unit} (alias <code>Unit<\/code>)<\/li> <\/ul>","!category":"namespace","module:sap/ui/mdc/DefaultTypeMap":"module:sap/ui/mdc/DefaultTypeMap"},"sap.ui.mdc.table.GridTableType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.GridTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.GridTableType"},"sap.ui.mdc.chart":{"propertyKey":{"!description":"The unique identifier of the chart item that reflects the name of property in the PropertyInfo.","!category":"enum","!type":"String"},"ChartSelectionDetails":"sap.ui.mdc.chart.ChartSelectionDetails_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"role":{"!description":"Specifies the role of the item for the chart (category, axis1...). This is specific for the used chart library.<br> <b>Note:<\/b> This property must not be changed after initialization.","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showNoDataStruct":{"!description":"Toggles the visibility of the noDataContent & content","!category":"enum","!type":"Boolean"},"!category":"namespace","label":{"!description":"Label for the item, either as a string literal or by a pointer, using the binding to some property containing the label.","!category":"enum","!type":"String"},"type":{"!description":"Specifies the type of the item for the chart (groupable and aggregatable). This is specific for the used chart library.","!category":"enum","!type":"String"},"SelectionDetailsActions":"sap.ui.mdc.chart.SelectionDetailsActions_obj","ChartImplementationContainer":"sap.ui.mdc.chart.ChartImplementationContainer_obj","Item":"sap.ui.mdc.chart.Item_obj","!module":"sap/ui/mdc/library","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"enableNavCallback":{"!description":"Callback function that is called for each <code>SelectionDetailsItem<\/code> to determine if the navigation is enabled. The callback is called with the following parameters: <ul> <li><code>oSelectionDetails<\/code> {@link sap.ui.mdc.chart.ChartSelectionDetails}: Instance of this <code>ChartSelectionDetails<\/code><\/li> <li><code>oContext<\/code> {@link sap.ui.model.Context}: Binding context of the <code>SelectionDetailsItem<\/code><\/li> <\/ul> The return value of the callback has to be of type <code>boolean<\/code>.","!category":"enum","!type":"fn()"},"name":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 Please use <code>propertyKey<\/code> instead.<br>The unique identifier of the chart item that reflects the name of the property in the PropertyInfo.","!category":"enum","!type":"String"},"fetchFieldInfosCallback":{"!description":"Callback function that is called to determine navigation targets when clicking on a <code>SelectionDetailsItem<\/code>. The callback is called with the following parameters: <ul> <li><code>oSelectionDetails<\/code> {@link sap.ui.mdc.chart.ChartSelectionDetails}: Instance of this <code>ChartSelectionDetails<\/code><\/li> <li><code>oContext<\/code> {@link sap.ui.model.Context}: Binding context of the <code>SelectionDetailsItem<\/code><\/li> <\/ul> The return value of the callback has to be of type <code>Promise<\/code> resolving in a <code>Map<\/code> containing a <code>string<\/code> as key and a {@link sap.ui.mdc.field.FieldInfoBase} as value.","!category":"enum","!type":"fn()"}},"sap.ui.mdc.enums.OperatorOverwrite":{"!description":"Enumeration of the {@link sap.ui.mdc.condition.Operator#OperatorOverwrite OperatorOverwrite} in {@link sap.ui.mdc.condition.Operator Operator}.","!module":"sap/ui/mdc/enums/OperatorOverwrite","getModelFilter":{"!description":"Overwrites the <code>getModelFilter<\/code> function of the operator.","!category":"enum","!type":"String"},"!category":"static class","getLongText":{"!description":"Overwrites the <code>getLongText<\/code> function of the operator.","!category":"enum","!type":"String"}},"sap.ui.mdc.field.ConditionType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.ConditionType"},"sap.ui.mdc.field.FieldBase":{"destroyInternalContent":{"!description":"Destroys the internal content controls.","!static":false,"!category":"function","!type":"fn()"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nIndicates that user input is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getDataType":{"!description":"Gets current value of property {@link #getDataType dataType}.\n\nThe type of data handled by the field. This type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> The module of the data type should be loaded before it is assigned to the field. Otherwise the asynchronous loading of the module might lead to unwanted side effects.\n\nDefault value is <code>'sap.ui.model.type.String'<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueHelp":{"!description":"Sets the associated {@link #getValueHelp valueHelp}.","!static":false,"!category":"function","!type":"fn(oValueHelp: sap.ui.core.ID | sap.ui.mdc.ValueHelp) -> sap.ui.mdc.field.FieldBase","parameters":{"oValueHelp":"type: sap.ui.core.ID|sap.ui.mdc.ValueHelp, description: ID of an element which becomes the new target of this valueHelp association; alternatively, an element instance may be given"}},"focus":{"!description":"Sets the focus on the stored focus DOM reference.","!static":false,"!category":"function","!type":"fn(oFocusInfo?: Object)","parameters":{"oFocusInfo":"type: object, description: Options for setting the focus"}},"setValueStateText":{"!description":"Sets a new value for property {@link #getValueStateText valueStateText}.\n\nDefines the text that appears in the value state message pop-up. If this has not been specified, a default text from the resource bundle is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueStateText?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sValueStateText":"type: string, description: New value for property <code>valueStateText<\/code>"}},"getOverflowToolbarConfig":{"!description":"Required by the {@link sap.m.IOverflowToolbarContent} interface. Registers invalidations event that is fired when width of the control is changed.","!static":false,"!category":"function","!type":"fn() -> Object"},"getEditMode":{"!description":"Gets current value of property {@link #getEditMode editMode}.\n\nDetermines whether the field is editable, read-only, or disabled.\n\nDefault value is <code>Editable<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.FieldEditMode"},"handleModelContextChange":{"!description":"Handler of the <code>ModelContextChange<\/code> event.","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: event"}},"getBaseType":{"!description":"Determines the <code>BaseType<\/code> of the currently used data type.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.BaseType"},"!description":"The <code>FieldBase<\/code> control is the base class for the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField} controls. It must not be used stand-alone.","setMaxConditions":{"!description":"Sets a new value for property {@link #getMaxConditions maxConditions}.\n\nSets the maximum number of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited number of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxConditions?: Number) -> sap.ui.mdc.field.FieldBase","parameters":{"iMaxConditions":"type: int, description: New value for property <code>maxConditions<\/code>"}},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, for example, <code>Error<\/code>, <code>Warning<\/code> or <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.mdc.field.FieldBase","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"connectLabel":{"!description":"Assigns a <code>Label<\/code> control to the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, or {@link sap.ui.mdc.FilterField FilterField} controls.\n\nThe text of the label is taken from the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, or {@link sap.ui.mdc.FilterField FilterField} controls. The <code>labelFor<\/code> association is set to the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, or {@link sap.ui.mdc.FilterField FilterField} control.","!static":false,"!category":"function","!type":"fn(oLabel: sap.ui.core.Label) -> sap.ui.mdc.field.FieldBase","parameters":{"oLabel":"type: sap.ui.core.Label, description: Label control"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"hasPendingUserInput":{"!description":"Returns the user interaction state of the control.\n\nIf the user starts typing or navigates via arrow keys in a value help, the shown value might be updated. But as long as the user has not left the field or pressed the Enter key, the current user input will not be validated or updated or an event fired.\n\nAs long as the user is interacting with the field, this function returns <code>true<\/code>. If the user interaction has been completed because the user has left the field, pressed the Enter key, or chosen a value from the value help, the function returns <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/mdc/field/FieldBase","checkCreateInternalContent":{"!description":"Checks if all needed information is provided to create the internal content control. If possible create internal controls.","!static":false,"!category":"function","!type":"fn()"},"detachSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:submit submit} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"unbindConditions":{"!description":"Unbinds property {@link #getConditions conditions} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"setFieldHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link #setValueHelp valueHelp} association<br>Sets the associated {@link #getFieldHelp fieldHelp}.","!static":false,"!category":"function","!type":"fn(oFieldHelp: sap.ui.core.ID | sap.ui.mdc.ValueHelp) -> sap.ui.mdc.field.FieldBase","parameters":{"oFieldHelp":"type: sap.ui.core.ID|sap.ui.mdc.ValueHelp, description: ID of an element which becomes the new target of this fieldHelp association; alternatively, an element instance may be given"}},"getCurrentContent":{"!description":"Gets the currently used content controls.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to help the user with the data entry when the control has no value. If the value is <code>null<\/code>, no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditMode":{"!description":"Sets a new value for property {@link #getEditMode editMode}.\n\nDetermines whether the field is editable, read-only, or disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Editable<\/code>.","!static":false,"!category":"function","!type":"fn(sEditMode?: sap.ui.mdc.enums.FieldEditMode) -> sap.ui.mdc.field.FieldBase","parameters":{"sEditMode":"type: sap.ui.mdc.enums.FieldEditMode, description: New value for property <code>editMode<\/code>"}},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/field/FieldBaseDelegate FieldBaseDelegate}<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/field/FieldBaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowEmptyIndicator":{"!description":"Gets current value of property {@link #getShowEmptyIndicator showEmptyIndicator}.\n\nIf set, an empty <code>Field<\/code> renders an empty indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>ValueHelp<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowEmptyIndicator":{"!description":"Sets a new value for property {@link #getShowEmptyIndicator showEmptyIndicator}.\n\nIf set, an empty <code>Field<\/code> renders an empty indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>ValueHelp<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEmptyIndicator?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bShowEmptyIndicator":"type: boolean, description: New value for property <code>showEmptyIndicator<\/code>"}},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"destroyContentDisplay":{"!description":"Destroys the contentDisplay in the aggregation {@link #getContentDisplay contentDisplay}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the values of the field.\n\nThese should be bound to a {@link sap.ui.mdc.FilterBar FilterBar} using the corresponding <code>propertyPath<\/code>.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property is used to bind {@link sap.ui.mdc.FilterField FilterField} to its parent {@link @link sap.ui.mdc.FilterBar FilterBar}.<\/br> If this property is not explicitly configured, the {@link @link sap.ui.mdc.FilterBar FilterBar} sets a default binding. For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control, the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.FieldBase","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"getAdditionalDataTypeConfiguration":{"!description":"Returns the configuration for the additional data type.\n\nFor a {@link sap.ui.mdc.Field Field}, the data type is determined from the binding of the <code>additionalValue<\/code>. For a {@link sap.ui.mdc.MultiValueField MultiValueField}, the data type is determined from the binding of the <code>description<\/code> of an item. For a {@link sap.ui.mdc.FilterField FilterField}, the data type is provided via the <code>additionalDataType<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.Type | Object"},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to help the user with the data entry when the control has no value. If the value is <code>null<\/code>, no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"updateInternalContent":{"!description":"Triggers an update of the internal content controls.\n\nShould be called if properties are changed that might influence the content control.","!static":false,"!category":"function","!type":"fn()"},"getValueHelp":{"!description":"ID of the element which is the current target of the association {@link #getValueHelp valueHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getResultForChangePromise":{"!description":"Determines, based on conditions, the value returned by the <code>change<\/code> event.","!static":false,"!category":"function","!type":"fn(aConditions: [sap.ui.mdc.field.ConditionType]) -> Object","parameters":{"aConditions":"type: sap.ui.mdc.field.ConditionType[], description: Array of conditions"}},"getFieldPath":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 replaced by {@link #setPropertyKey propertyKey} property<br>Gets <code>fieldPath<\/code>.\n\nIf the <code>conditions<\/code> are bound to a <code>ConditionModel<\/code>, the <code>FieldPath<\/code> is determined from this binding.","!static":false,"!category":"function","!type":"fn() -> String"},"getDataTypeFormatOptions":{"!description":"Gets current value of property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"fireSubmit":{"!description":"Fires event {@link #event:submit submit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getUnitFormatOptions":{"!description":"Provides some internals of the unit part of the field to be used in {@link sap.ui.mdc.field.ConditionsType ConditionsType} for format and parse the conditions.","!static":false,"!category":"function","!type":"fn() -> Object"},"setContentEdit":{"!description":"Sets the aggregated {@link #getContentEdit contentEdit}.","!static":false,"!category":"function","!type":"fn(oContentEdit: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContentEdit":"type: sap.ui.core.Control, description: The contentEdit to set"}},"destroyContentEdit":{"!description":"Destroys the contentEdit in the aggregation {@link #getContentEdit contentEdit}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the values of the field.\n\nThese should be bound to a {@link sap.ui.mdc.FilterBar FilterBar} using the corresponding <code>propertyPath<\/code>.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property is used to bind {@link sap.ui.mdc.FilterField FilterField} to its parent {@link @link sap.ui.mdc.FilterBar FilterBar}.<\/br> If this property is not explicitly configured, the {@link @link sap.ui.mdc.FilterBar FilterBar} sets a default binding. For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control, the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setContentDisplay":{"!description":"Sets the aggregated {@link #getContentDisplay contentDisplay}.","!static":false,"!category":"function","!type":"fn(oContentDisplay: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContentDisplay":"type: sap.ui.core.Control, description: The contentDisplay to set"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.field.FieldBase","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"checkValueInitial":{"!description":"If the value is the initial value of the type (String types) and the field does not show tokens or operators, no condition must be set as the field is then empty.","!static":false,"!category":"function","!type":"fn(vValue: Object) -> Boolean","parameters":{"vValue":"type: any, description: Value to be checked"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/field/FieldBaseDelegate FieldBaseDelegate}<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/field/FieldBaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"bindConditions":{"!description":"Binds property {@link #getConditions conditions} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.PropertyBindingInfo) -> sap.ui.mdc.field.FieldBase","parameters":{"oBindingInfo":"type: sap.ui.base.ManagedObject.PropertyBindingInfo, description: The binding information"}},"getContentEdit":{"!description":"Gets content of aggregation {@link #getContentEdit contentEdit}.\n\nOptional content to be rendered if the <code>editMode<\/code> property is not set to <code>Display<\/code>.\n\nPer default, depending on <code>multipleLines<\/code> and the used data type, a content control is rendered in edit mode. For simple string types, an {@link sap.m.Input Input} control is rendered in edit mode. If a control is assigned in the <code>contentEdit<\/code> aggregation, this will be rendered instead.\n\n<b>Note:<\/b> If a control is assigned to the <code>content<\/code> aggregation, this one is ignored.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getFieldHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link #setValueHelp valueHelp} association<br>ID of the element which is the current target of the association {@link #getFieldHelp fieldHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nIndicates that user input is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property {@link #getTextDirection textDirection}.\n\nDefines the text directionality of the input field, for example, <code>RTL<\/code> or <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"getDataTypeConstraints":{"!description":"Gets current value of property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nDefines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMaxConditions":{"!description":"Gets current value of property {@link #getMaxConditions maxConditions}.\n\nSets the maximum number of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited number of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireChangeEvent":{"!description":"Here inheriting controls need to fire the control-specific change event.","!static":false,"!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject], bValid: Boolean, vWrongValue: Object, oPromise: Promise)","parameters":{"oPromise":"type: Promise, description: <code>Promise<\/code> that is resolved if the changed value is determined, as user might enter some description, and the key neeeds to be determined via back-end request.","aConditions":"type: sap.ui.mdc.condition.ConditionObject[], description: Current conditions after change","bValid":"type: boolean, description: If <code>false<\/code>, the user input is not valid and leads to an error","vWrongValue":"type: any, description: wrong user input (only set if known)"}},"isInvalidInput":{"!description":"Checks if there is invalid input.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMultipleLines":{"!description":"Gets current value of property {@link #getMultipleLines multipleLines}.\n\nIf set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines, an error is thrown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContentDisplay":{"!description":"Gets content of aggregation {@link #getContentDisplay contentDisplay}.\n\nOptional content to be rendered if the <code>editMode<\/code> property is set to <code>Display<\/code>.\n\nPer default, depending on <code>multipleLines<\/code> and the used data type, a content control is rendered in display mode. For simple string types, a {@link sap.m.Text Text} control is rendered in display mode. If a control is assigned in the <code>contentDisplay<\/code> aggregation, this will be rendered instead.\n\n<b>Note:<\/b> If a control is assigned to the <code>content<\/code> aggregation, this one is ignored.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"hasLabelableHTMLElement":{"!description":"Returns if the control can be bound to a label","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormatOptions":{"!description":"Provides some internals of the field to be used in {@link sap.ui.mdc.field.ConditionsType ConditionsType} for format and parse the conditions.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired if the inner control has a <\/code>press<\/code> event and this is fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"resetInvalidInput":{"!description":"Resets invalid input information.\n\nMight be called if Binding changes or field is initialized.","!static":false,"!category":"function","!type":"fn(bRemoveUIMessage: Boolean)","parameters":{"bRemoveUIMessage":"type: boolean, description: If set to <code>true<\/code> the <code>ValueState<\/code> and <code>ValueStateText<\/code> is removed"}},"setFieldInfo":{"!description":"Sets the aggregated {@link #getFieldInfo fieldInfo}.","!static":false,"!category":"function","!type":"fn(oFieldInfo: sap.ui.mdc.field.FieldInfoBase) -> sap.ui.mdc.field.FieldBase","parameters":{"oFieldInfo":"type: sap.ui.mdc.field.FieldInfoBase, description: The fieldInfo to set"}},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:liveChange liveChange} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setTextAlign":{"!description":"Sets a new value for property {@link #getTextAlign textAlign}.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign?: sap.ui.core.TextAlign) -> sap.ui.mdc.field.FieldBase","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property {@link #getTextDirection textDirection}.\n\nDefines the text directionality of the input field, for example, <code>RTL<\/code> or <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection?: sap.ui.core.TextDirection) -> sap.ui.mdc.field.FieldBase","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getFocusElementForValueHelp":{"!description":"Returns the control the value help should focus (or popover should open on)\n\nIn the case that number and unit are shown in different controls, this is the unit control, not the number control.","!static":false,"!category":"function","!type":"fn(bTypeahead: Boolean) -> sap.ui.core.Control","parameters":{"bTypeahead":"type: boolean, description: Flag that determines whether value help is opened for type-ahead or for complex help"}},"destroyFieldInfo":{"!description":"Destroys the fieldInfo in the aggregation {@link #getFieldInfo fieldInfo}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"observeChanges":{"!description":"Observes changes.\n\nTo be enhanced by {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, {@link sap.ui.mdc.FilterField FilterField}, or other inherited controls.","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Changes"}},"setDataType":{"!description":"Sets a new value for property {@link #getDataType dataType}.\n\nThe type of data handled by the field. This type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> The module of the data type should be loaded before it is assigned to the field. Otherwise the asynchronous loading of the module might lead to unwanted side effects.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'sap.ui.model.type.String'<\/code>.","!static":false,"!category":"function","!type":"fn(sDataType?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sDataType":"type: string, description: New value for property <code>dataType<\/code>"}},"!helpDescription":"The <code>FieldBase<\/code> control is the base class for the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField} controls. It must not be used stand-alone.","getFormattingPromise":{"!description":"Allows fields to wait for async formatting result processing","!static":false,"!category":"function","!type":"fn() -> undefined | Promise"},"setDataTypeConstraints":{"!description":"Sets a new value for property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDataTypeConstraints":"type: object, description: New value for property <code>dataTypeConstraints<\/code>"}},"attachSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:submit submit} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired when the user presses <kbd>Enter<\/kbd>. It allows the application to implement some submit logic.\n\n<b>Note<\/b> This event is only triggered if the field is editable.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireLiveChange":{"!description":"Fires event {@link #event:liveChange liveChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getFieldInfo":{"!description":"Gets content of aggregation {@link #getFieldInfo fieldInfo}.\n\nOptional <code>FieldInfo<\/code> used for detail information. This is only active in display mode. Especially {@link sap.ui.mdc.Link} can be used to activate link features.\n\n<b>Note:<\/b> If a special data type is defined or a content control is set, this is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldInfoBase"},"isSearchField":{"!description":"Checks if the field is configured to be a <code>SearchField<\/code>\n\nNeeds to be overwritten by {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField}","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nOptional content that can be rendered.\n\nPer default, depending on <code>editMode<\/code>, <code>multipleLines<\/code> and the used data type, a content control is rendered. For simple string types, a {@link sap.m.Text Text} control is rendered in display mode and a {@link sap.m.Input Input} control in edit mode. If a control is assigned in the <code>content<\/code> aggregation, this will be rendered instead.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.Control","getTextAlign":{"!description":"Gets current value of property {@link #getTextAlign textAlign}.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:liveChange liveChange} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired when the value of the field is changed, for example, each time a key is pressed.\n\n<b>Note<\/b> This event is only triggered if the used content control has a <code>liveChange<\/code> event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new <code>FieldBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDataType dataType} : string (default: 'sap.ui.model.type.String')<\/li>\n<li>{@link #getDataTypeConstraints dataTypeConstraints} : object<\/li>\n<li>{@link #getDataTypeFormatOptions dataTypeFormatOptions} : object<\/li>\n<li>{@link #getEditMode editMode} : sap.ui.mdc.enums.FieldEditMode (default: Editable)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getDisplay display} : sap.ui.mdc.enums.FieldDisplay (default: Value)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMultipleLines multipleLines} : boolean (default: false)<\/li>\n<li>{@link #getMaxConditions maxConditions} : int (default: -1)<\/li>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getShowEmptyIndicator showEmptyIndicator} : boolean (default: false)<\/li>\n<li>{@link #get_valueHelpEnabled _valueHelpEnabled} : boolean (default: false)<\/li>\n<li>{@link #get_ariaAttributes _ariaAttributes} : object (default: {})<\/li>\n<li>{@link #get_operators _operators} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getContentEdit contentEdit} : sap.ui.core.Control<\/li>\n<li>{@link #getContentDisplay contentDisplay} : sap.ui.core.Control<\/li>\n<li>{@link #getFieldInfo fieldInfo} : sap.ui.mdc.field.FieldInfoBase<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFieldHelp fieldHelp} : (sap.ui.core.ID | sap.ui.mdc.ValueHelp)<\/li>\n<li>{@link #getValueHelp valueHelp} : (sap.ui.core.ID | sap.ui.mdc.ValueHelp)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:submit submit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","triggerCheckCreateInternalContent":{"!description":"Triggers a check if all relevant properties are set to create the internal content control.\n\nTo be sure that the check is not called multiple times, it needs to be checked if there is a pending check. Multiple calls might happen if properties are changed often or the check is triggered during a <code>BindingContext<\/code> update (which is often called in propagation).","!static":false,"!category":"function","!type":"fn()"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID | null","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setDisplay":{"!description":"Sets a new value for property {@link #getDisplay display}.\n\nDefines whether the value and/or description of the field is shown and in which order.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Value<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplay?: sap.ui.mdc.enums.FieldDisplay) -> sap.ui.mdc.field.FieldBase","parameters":{"sDisplay":"type: sap.ui.mdc.enums.FieldDisplay, description: New value for property <code>display<\/code>"}},"getValueStateText":{"!description":"Gets current value of property {@link #getValueStateText valueStateText}.\n\nDefines the text that appears in the value state message pop-up. If this has not been specified, a default text from the resource bundle is shown.","!static":false,"!category":"function","!type":"fn() -> String"},"isFieldPropertyInitial":{"!description":"Returns whether the given property value is initial and has not been explicitly set or no binding exist. Even after setting the default value or setting null/undefined (which also causes the default value to be set), the property is no longer initial. A property can be reset to initial state by calling <code>resetProperty(sPropertyName)<\/code>.","!static":false,"!category":"function","!type":"fn(sPropertyName: String) -> Boolean","parameters":{"sPropertyName":"type: string, description: the name of the property"}},"getSupportedOperators":{"!description":"Returns the supported operators.\n\nNeeds to be overwritten by {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField} and {@link sap.ui.mdc.FilterField FilterField}","!static":false,"!category":"function","!type":"fn() -> [String]"},"setDataTypeFormatOptions":{"!description":"Sets a new value for property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDataTypeFormatOptions":"type: object, description: New value for property <code>dataTypeFormatOptions<\/code>"}},"isFieldDestroyed":{"!description":"Checks if the field is already destoyed or destruction has started.\n\nIn this casse creation of internal content or binding must be prevented.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMultipleLines":{"!description":"Sets a new value for property {@link #getMultipleLines multipleLines}.\n\nIf set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines, an error is thrown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMultipleLines?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bMultipleLines":"type: boolean, description: New value for property <code>multipleLines<\/code>"}},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, for example, <code>Error<\/code>, <code>Warning<\/code> or <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"initDataType":{"!description":"Initializes internal data-types and dependent objects.","!static":false,"!category":"function","!type":"fn()"},"getContentFactory":{"!description":"Returns the <code>ContentFactory<\/code> used to manage the internal content control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.content.ContentFactory"},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nDefines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"getDisplay":{"!description":"Gets current value of property {@link #getDisplay display}.\n\nDefines whether the value and/or description of the field is shown and in which order.\n\nDefault value is <code>Value<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.FieldDisplay"}},"sap.ui.mdc.table.TableTypeBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.TableTypeBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.TableTypeBase"},"sap.ui.mdc.condition.ConditionModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.condition.ConditionModel"},"sap.ui.mdc.table.ColumnSettings_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.ColumnSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.ColumnSettings"},"sap.ui.mdc":{"filterConditions":{"!description":"Defines the filter conditions.\n\n<b>Note:<\/b> This property must not be bound.<br> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!category":"enum","!type":"Object"},"showSelectionDetails":{"!description":"Enables the Details button in the chart toolbar.","!category":"enum","!type":"Boolean"},"insertAction":{"!description":"insertAction : String","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"_valueHelpEnabled":{"!description":"Internal property to bind the <code>showValueHelp<\/code> property of the internal <code>Input<\/code> control.","!category":"enum","!type":"Boolean"},"hideToolbar":{"!description":"Determines whether the toolbar is visible.\n\n<b>Note:<\/b> Hiding the toolbar limits the functionality of the table in the following ways:<br> <ul> <li>The <code>showRowCount<\/code> property <b>must<\/b> be set to <code>false<\/code>.<\/li> <li>The export <b>must<\/b> be disabled by setting the <code>enableExport<\/code> property to <code>false<\/code>.<\/li> <li>For {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, show and hide details won't be visible as the table will always run in \"Show Details\" mode.<\/li> <li>Copy and paste will only work via keyboard.<\/li> <li>For {@link sap.ui.mdc.table.TreeTableType TreeTable}, \"Collapse All\" and \"Expand All\" won't be possible.<\/li> <li>The <code>actions<\/code> and the <code>quickFilter<\/code> aggregations and a table-related {@link sap.ui.fl.variants.VariantManagement} <b>must not<\/b> be used.<\/li> <li>The table title will not be displayed but will be replaced by an <code>InvisibleText<\/code>. The <code>header<\/code> property <b>must<\/b> be set. In addition, <code>headerVisible<\/code> <b>must<\/b> be set to <code>false<\/code> to ensure accessibility compatibility.<\/li> <li>Personalization (<code>p13nMode<\/code>) can still be used via the column headers. If the option to show or hide columns is activated, it is recommended to use an {@link sap.m.IllustratedMessage} for the <code>nodata<\/code> display. It ensures that columns can be made visible again when the user has accidentally hidden them all.<\/li> <\/ul>","!category":"enum","!type":"Boolean"},"setPropertyInfo":{"!description":"setPropertyInfo : String","!category":"enum","!type":"String"},"_ariaAttributes":{"!description":"Sets the ARIA attributes added to the inner control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"required":{"!description":"Indicates that user input is required.","!category":"enum","!type":"Boolean"},"minHeight":{"!description":"Defines the minimum height of the chart.","!category":"enum","!type":"sap.ui.core.CSSSize"},"useColumnLabelsAsTooltips":{"!description":"If no tooltip has been provided for a column, the column header text will automatically be applied as a tooltip for the column.","!category":"enum","!type":"Boolean"},"p13nMode":{"!description":"Personalization options for the table.\n\n<b>Note:<\/b> Whether a personalization option is supported depends on the used delegate. Please refer to the documentation of the individual delegates. The order of the provided options does not influence their order on the UI.","!category":"enum","!type":"[sap.ui.mdc.enums.TableP13nMode]"},"validateInput":{"!description":"If this property is set, the user input of the corresponding field is validated against the value help. If no entry is found for the user input, an error is shown on the field.\n\nIf this property is not set, the user input is still checked against the value help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\n<b>Note:<\/b> The input is validated and compared against the content assigned to the <code>typeahead<\/code> aggregation. If no content is assigned to the <code>typeahead<\/code> aggregation, the input is not validated.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds after which the busy indicator is shown.","!category":"enum","!type":"Number"},"additionalDataType":{"!description":"The type of data for the description part of an \"equal to\" condition. This type is used to parse, format, and validate the value.\n\nHere a data type instance can be provided or an object containing <code>name<\/code>, <code>formatOptions<\/code>, and <code>constraints<\/code>.","!category":"enum","!type":"Object"},"height":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 the concept has been discarded.<br>This property has no effect and will be removed soon.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"OpenUI5 library that contains metadata-driven composite controls, which can be extended for use with any SAPUI5 model and data protocol.","addColumn":{"!description":"addColumn : String","!category":"enum","!type":"String"},"MultiValueField":"sap.ui.mdc.MultiValueField_obj","destroyActions":{"!description":"destroyActions : String","!category":"enum","!type":"String"},"enablePaste":{"!description":"Determines whether the Paste button is enabled.","!category":"enum","!type":"Boolean"},"enum":"sap.ui.mdc.enum","p13n":"sap.ui.mdc.p13n","field":"sap.ui.mdc.field","util":"sap.ui.mdc.util","!module":"sap/ui/mdc/library","showRowCount":{"!description":"Determines whether the number of rows is shown along with the header text.\n\n<b>Note:<\/b> Whether this feature can be used depends on whether the model used and the data service can provide a count. Please refer to the documentation of the used model for information on requesting the count, for example, {@link sap.ui.model.odata.v4.ODataModel}.","!category":"enum","!type":"Boolean"},"insertColumn":{"!description":"insertColumn : String","!category":"enum","!type":"String"},"_valid":{"!description":"Internal property to allow to bind the valid state to OK Button or make it available for all content controls","!category":"enum","!type":"Boolean"},"IFilter":"sap.ui.mdc.IFilter","conditions":{"!description":"The conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.","!category":"enum","!type":"[Object]"},"Link":"sap.ui.mdc.Link_obj","defaultOperator":{"!description":"Default operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.","!category":"enum","!type":"String"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"FilterBarP13nMode":"sap.ui.mdc.FilterBarP13nMode","getDelegate":{"!description":"getDelegate : String","!category":"enum","!type":"String"},"delegate":{"!description":"Object related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/ValueHelpDelegate ValueHelpDelegate}<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/ValueHelpDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the table metadata.\n\nWhenever the <code>TableDelegate<\/code> needs to wait for, for example, server-side information to provide the <code>PropertyInfo<\/code> objects, specifying an array of {@link sap.ui.mdc.table.PropertyInfo PropertyInfo} objects here enables the table to speed up the initial setup.\n\nInstead of requesting the <code>PropertyInfo<\/code> objects from the <code>TableDelegate<\/code> and waiting for them, the table will use the <code>PropertyInfo<\/code> objects specified here for rendering-specific tasks, e.g. automatic column width calculation, and to trigger the initial data request.\n\nTo enable the table for these tasks, certain attributes of a <code>PropertyInfo<\/code> must be specified. You can find the list of required attributes in the documentation of the <code>PropertyInfo<\/code>, for example, in {@link sap.ui.mdc.table.PropertyInfo}.\n\nThis property is processed only once during the instantiation of the table. Any subsequent changes have no effect.\n\n<b>Note<\/b>: This property must not be bound. <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility / Fiori Elements. Do not use it otherwise. <b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.Table#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/TableDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"enum","!type":"Object"},"addAction":{"!description":"addAction : String","!category":"enum","!type":"String"},"enums":"sap.ui.mdc.enums","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"showPasteButton":{"!description":"Determines whether the Paste button is visible.","!category":"enum","!type":"Boolean"},"operators":{"!description":"Supported operator names for conditions.\n\nIf empty, default operators depending on used data type are taken. The standard operators are mentioned in {@link sap.ui.mdc.enums.OperatorName OperatorName}.\n\n<b>Note:<\/b> If a custom control is used as {@link sap.ui.mdc.field.FieldBase#setContent Content}, {@link sap.ui.mdc.field.FieldBase#setContentEdit ContentEdit}, or {@link sap.ui.mdc.field.FieldBase#setContentDisplay ContentDisplay}, and the custom control only supports one operator (as no operator can be shown), only the required operator must be set. So the user input into the custom control creates a condition with the set operator, and a condition with this operator provides the value the custom control needs.","!category":"enum","!type":"[String]"},"valuehelp":"sap.ui.mdc.valuehelp","ignoreToolbarActions":{"!description":"Specifies which actions must not be available in the chart's toolbar.","!category":"enum","!type":"[sap.ui.mdc.enums.ChartToolbarActionType]"},"Chart":"sap.ui.mdc.Chart_obj","table":"sap.ui.mdc.table","showChartTooltip":{"!description":"Controls the visibility of the chart tooltip.<br> <b>Note:<\/b> If set to <code>true<\/code>, a call of the <code>delegate.setChartTooltipVisibility<\/code> is triggered and can be used to make the <code>Chart<\/code> tooltip visible.","!category":"enum","!type":"Boolean"},"Table":"sap.ui.mdc.Table_obj","dataTypeFormatOptions":{"!description":"The format options of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"dataTypeConstraints":{"!description":"The constraints of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"legendVisible":{"!description":"Enables the legend of the chart.<br> <b>Note:<\/b> The setter calls <code>setLegendVisible<\/code> of the delegate class.","!category":"enum","!type":"Boolean"},"display":{"!description":"Defines whether the value and/or description of the field is shown and in which order.","!category":"enum","!type":"sap.ui.mdc.enums.FieldDisplay"},"minWidth":{"!description":"Defines the minimum width of the chart.","!category":"enum","!type":"sap.ui.core.CSSSize"},"noDataText":{"!description":"Defines the no data text shown in the chart.","!category":"enum","!type":"String"},"setDelegate":{"!description":"setDelegate : String","!category":"enum","!type":"String"},"removeColumn":{"!description":"removeColumn : String","!category":"enum","!type":"String"},"sortConditions":{"!description":"Defines the sort conditions.\n\n<b>Note:<\/b> This property must not be bound.<br> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!category":"enum","!type":"Object"},"headerLevel":{"!description":"Semantic level of the header. For more information, see {@link sap.m.Title#setLevel}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"width":{"!description":"Width of the table.","!category":"enum","!type":"sap.ui.core.CSSSize"},"chartType":{"!description":"Specifies the type of chart to be created by the <code>Chart<\/code> control.","!category":"enum","!type":"String"},"chart":"sap.ui.mdc.chart","_p13nModeItem":{"!description":"Specifies if the personalization mode for filter items is supported.","!category":"enum","!type":"Boolean"},"setGroupConditions":{"!description":"setGroupConditions : String","!category":"enum","!type":"String"},"GrowingMode":"sap.ui.mdc.GrowingMode","autoBindOnInit":{"!description":"Determines whether to bind the table automatically after the initial creation or re-creation of the table.","!category":"enum","!type":"Boolean"},"valueState":{"!description":"Visualizes the validation state of the control, for example, <code>Error<\/code>, <code>Warning<\/code> or <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this has not been specified, a default text from the resource bundle is shown.","!category":"enum","!type":"String"},"destroyItems":{"!description":"destroyItems : String","!category":"enum","!type":"String"},"threshold":{"!description":"Number of records to be requested from the model.\n\nIf the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, the threshold defines the number of rows that are displayed initially, and the number of rows that are added when the table grows ({@link sap.ui.mdc.table.ResponsiveTableType#getGrowingMode growingMode}).\n\nIf the table type is {@link sap.ui.mdc.table.GridTableType GridTable}, the threshold defines how many additional (not yet visible) data records from the back-end system are pre-fetched. If the <code>threshold<\/code> is lower than the number of visible rows, the number of visible rows is used as the <code>threshold<\/code>. If the value is 0, thresholding is disabled.\n\n<b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the table uses a type-dependent default value.","!category":"enum","!type":"Number"},"_operators":{"!description":"Internal property to bind the operators to the internal <code>DynamicDateRange<\/code> (or other) control.","!category":"enum","!type":"[String]"},"RowCountMode":"sap.ui.mdc.RowCountMode","setAggregateConditions":{"!description":"setAggregateConditions : String","!category":"enum","!type":"String"},"IFilterSource":"sap.ui.mdc.IFilterSource","removeAllColumns":{"!description":"removeAllColumns : String","!category":"enum","!type":"String"},"removeAllActions":{"!description":"removeAllActions : String","!category":"enum","!type":"String"},"maxConditions":{"!description":"Sets the maximum number of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited number of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.","!category":"enum","!type":"Number"},"propertyKey":{"!description":"Key of the property the <code>FilterField<\/code> represents.","!category":"enum","!type":"String"},"removeAction":{"!description":"removeAction : String","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"sap.ui.core.TextAlign"},"showClearButton":{"!description":"Determines whether the Clear button is visible in the <code>FilterBar<\/code>.","!category":"enum","!type":"Boolean"},"dataType":{"!description":"The type of data handled by the field. This type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> The module of the data type should be loaded before it is assigned to the field. Otherwise the asynchronous loading of the module might lead to unwanted side effects.","!category":"enum","!type":"String"},"enablePersonalization":{"!description":"Enables/disables the personalization settings for users and key users.","!category":"enum","!type":"Boolean"},"removeAllItems":{"!description":"removeAllItems : String","!category":"enum","!type":"String"},"multiSelectMode":{"!description":"Defines the multi-selection mode.\n\n<b>Note:<\/b> This property has no effect in the following cases: <ul> <li>Table type is not {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}. This is subject to change in the future.<\/li> <li>Selection mode is not <code>Multi<\/code>.<\/li> <\/ul>","!category":"enum","!type":"sap.ui.mdc.enums.TableMultiSelectMode"},"mixin":"sap.ui.mdc.mixin","MultiSelectMode":"sap.ui.mdc.MultiSelectMode","enableColumnResize":{"!description":"Determines whether column resizing is enabled.","!category":"enum","!type":"Boolean"},"FilterBar":"sap.ui.mdc.FilterBar_obj","condition":"sap.ui.mdc.condition","getGroupConditions":{"!description":"getGroupConditions : String","!category":"enum","!type":"String"},"filterValue":{"!description":"The value by which the help is filtered. Here the field provides the typed value to allow the value help to filter for it.\n\n<b>Note:<\/b> This only takes effect if the <code>ValueHelp<\/code> elements content supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!category":"enum","!type":"String"},"!helpDescription":"OpenUI5 library that contains metadata-driven composite controls, which can be extended for use with any SAPUI5 model and data protocol.","IxState":"sap.ui.mdc.IxState","RowAction":"sap.ui.mdc.RowAction","editMode":{"!description":"Determines whether the field is editable, read-only, or disabled.","!category":"enum","!type":"sap.ui.mdc.enums.FieldEditMode"},"header":{"!description":"Header text that is shown in the table. The header must always be set to comply with accessibility standards, even if other settings make the header invisible.","!category":"enum","!type":"String"},"FilterField":"sap.ui.mdc.FilterField_obj","showGoButton":{"!description":"Indicates whether the Go button is visible in the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"selectionMode":{"!description":"Selection mode of the table. Specifies whether single or multiple rows can be selected and how the selection can be extended. It may also influence the visual appearance.\n\n<b>Note:<\/b> With the {@link sap.ui.mdc.table.GridTableType GridTable} and server-side models, range selections, including Select All, only work properly if the count is known. Please refer to the documentation of the used model for information on requesting the count, for example, {@link sap.ui.model.odata.v4.ODataModel}.","!category":"enum","!type":"sap.ui.mdc.enums.TableSelectionMode"},"SelectionMode":"sap.ui.mdc.SelectionMode","ChartP13nMode":"sap.ui.mdc.ChartP13nMode","removeItem":{"!description":"removeItem : String","!category":"enum","!type":"String"},"showAdaptFiltersButton":{"!description":"Determines whether the Adapt Filters button is visible in the <code>FilterBar<\/code>.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"Indicates whether possible errors during the search in a message box are displayed.","!category":"enum","!type":"Boolean"},"Element":"sap.ui.mdc.Element_obj","aggregateConditions":{"!description":"Defines the aggregate conditions.\n\n<b>Note:<\/b> This property must not be bound.<br> This property is exclusively used for handling SAPUI5 flexibility changes. Do not use it otherwise.","!category":"enum","!type":"Object"},"link":"sap.ui.mdc.link","!category":"namespace","_config":{"!description":"internal configuration","!category":"enum","!type":"Object"},"headerStyle":{"!description":"Defines style of the header. For more information, see {@link sap.m.Title#setTitleStyle}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"textDirection":{"!description":"Defines the text directionality of the input field, for example, <code>RTL<\/code> or <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"sap.ui.core.TextDirection"},"Field":"sap.ui.mdc.Field_obj","addItem":{"!description":"addItem : String","!category":"enum","!type":"String"},"Control":"sap.ui.mdc.Control_obj","odata":"sap.ui.mdc.odata","TableP13nMode":"sap.ui.mdc.TableP13nMode","liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"enableExport":{"!description":"Determines whether the data export is enabled.\n\nThe delegate can customize the export result with the <code>exportSettings<\/code> field in the {@link sap.ui.mdc.table.PropertyInfo PropertyInfo}.\n\n<b>Note:<\/b> To use the export functionality, the {@link sap.ui.export} library is required, otherwise an error message is displayed when the user presses the Export button.","!category":"enum","!type":"Boolean"},"TableDelegate":"sap.ui.mdc.TableDelegate","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Defines a short hint intended to help the user with the data entry when the control has no value. If the value is <code>null<\/code>, no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"String"},"headerVisible":{"!description":"Determines whether the header text is shown in the table. Regardless of its value, the given header text is used to label the table correctly for accessibility purposes.","!category":"enum","!type":"Boolean"},"value":{"!description":"The value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.","!category":"enum","!type":"Object"},"getAggregateConditions":{"!description":"getAggregateConditions : String","!category":"enum","!type":"String"},"multipleLines":{"!description":"If set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines, an error is thrown.","!category":"enum","!type":"Boolean"},"TableType":"sap.ui.mdc.TableType","destroyColumns":{"!description":"destroyColumns : String","!category":"enum","!type":"String"},"groupConditions":{"!description":"Defines the group conditions.\n\n<b>Note:<\/b> This property must not be bound.<br> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!category":"enum","!type":"Object"},"setSortConditions":{"!description":"setSortConditions : String","!category":"enum","!type":"String"},"label":{"!description":"Defines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.","!category":"enum","!type":"String"},"filterbar":"sap.ui.mdc.filterbar","_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"ChartToolbarActionType":"sap.ui.mdc.ChartToolbarActionType","getFilterConditions":{"!description":"getFilterConditions : String","!category":"enum","!type":"String"},"enableAutoColumnWidth":{"!description":"Enables automatic column width calculation. The column width calculation takes the type, column label, referenced properties, and other information into account. The calculated column widths can have a minimum of 3rem and a maximum of 20rem.\n\nThe delegate can customize the automatic column width calculation with the <code>visualSettings.widthSettings<\/code> field in the {@link sap.ui.mdc.table.PropertyInfo PropertyInfo}. To disable the heuristic column width calculation for a particular column, the <code>visualSettings.widthSettings<\/code> field can be set to <code>null<\/code>. Providing a more precise <code>maxLength<\/code> value for the <code>String<\/code> type or <code>precision<\/code> value for numeric types can help the algorithm to produce better results.\n\n<b>Note:<\/b> The column width is not calculated if the <code>width<\/code> property of the column is bound or its value is set.","!category":"enum","!type":"Boolean"},"showEmptyIndicator":{"!description":"If set, an empty <code>Field<\/code> renders an empty indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>ValueHelp<\/code>.","!category":"enum","!type":"Boolean"},"getSortConditions":{"!description":"getSortConditions : String","!category":"enum","!type":"String"},"setFilterConditions":{"!description":"setFilterConditions : String","!category":"enum","!type":"String"},"ValueHelp":"sap.ui.mdc.ValueHelp_obj","additionalValue":{"!description":"The additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.","!category":"enum","!type":"Object"},"insertItem":{"!description":"insertItem : String","!category":"enum","!type":"String"},"getPropertyInfo":{"!description":"getPropertyInfo : String","!category":"enum","!type":"String"}},"sap.ui.mdc.enums.FieldDisplay":{"!description":"Defines the output of a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control.\n\nFor the {@link sap.ui.mdc.Field Field} control, this enumeration defines how the <code>value<\/code> and <code>additionalValue<\/code> properties are formatted.\n\nFor the {@link sap.ui.mdc.MultiValueField MultiValueField} control, this enumeration defines how the <code>key<\/code> and <code>description<\/code> properties of the items are formatted.\n\nFor the {@link sap.ui.mdc.FilterField FilterField} control, this enumeration defines how key and description of equal conditions are formatted.","DescriptionValue":{"!description":"The description and the value (key) are displayed in the field. The value (key) is displayed after the description in brackets.","!category":"enum","!type":"String"},"Description":{"!description":"Only the description is displayed","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/FieldDisplay","ValueDescription":{"!description":"The value (key) and the description are displayed in the field. The description is displayed after the value (key) in brackets.","!category":"enum","!type":"String"},"Value":{"!description":"Only the value (key) is displayed","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.enum.ContentMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ContentMode}<br>Defines in which mode the content of a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered.","EditOperator":{"!description":"Edit mode for operator dependent controls This is used for single value and only one operator.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/ContentMode","DisplayMultiLine":{"!description":"Display mode for multiline single value","!category":"enum","!type":"String"},"EditMultiLine":{"!description":"Edit mode for multiple lines single value","!category":"enum","!type":"String"},"EditForHelp":{"!description":"Edit mode for single value field if a field help is assigned To support field help, in some cases a different control needs to be rendered.","!category":"enum","!type":"String"},"!category":"static class","DisplayMultiValue":{"!description":"Display mode for multiple values","!category":"enum","!type":"String"},"Edit":{"!description":"Edit mode for single value","!category":"enum","!type":"String"},"EditMultiValue":{"!description":"Edit mode for multiple values","!category":"enum","!type":"String"},"Display":{"!description":"Display mode for single value","!category":"enum","!type":"String"}},"sap.ui.mdc.condition.OperatorDynamicDateOption_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.OperatorDynamicDateOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DynamicDateOption.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.condition.OperatorDynamicDateOption"},"sap.ui.mdc.condition.FilterOperatorUtil":{"!category":"namespace","compareConditions":{"!description":"Compares two conditions.\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).","!static":"true","!category":"function","!type":"fn(oCondition1: sap.ui.mdc.condition.ConditionObject, oCondition2: sap.ui.mdc.condition.ConditionObject) -> Boolean"},"addOperators":{"!description":"Adds an array of operators to the list of known operators.","!static":"true","!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator])"},"checkConditionValidated":{"!description":"Checks if a condition is validated and sets the <code>validated<\/code> property.\n\nFor EQ set <code>validated<\/code> flag if a description is given.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)"},"updateConditionValues":{"!description":"Updates the value range to have the right number of entries for one condition.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)"},"getDynamicDateOptionForOperator":{"!description":"Determines the corresponding <code>DynamicDateOption<\/code> for an <code>Operator<\/code> from a map of known keys","!static":"true","!category":"function","!type":"fn(oOperator: sap.ui.mdc.condition.Operator, oDynamicDateRangeKeys: Object, sBaseType: sap.ui.mdc.enums.BaseType) -> String"},"removeOperators":{"!description":"Removes all given operators from the list of known operators.\n\n<b>Note<\/b>: <code>aOperators<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator}, the instance itself, or multiple operators inside an array.","!static":"true","!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator[] | sap.ui.mdc.condition.Operator | String])"},"getOperator":{"!description":"Returns the operator object for the given operator name.","!static":"true","!category":"function","!type":"fn(sOperator: sap.ui.mdc.enums.OperatorName | String) -> sap.ui.mdc.condition.Operator | undefined"},"updateConditionsValues":{"!description":"Updates the value range to have the correct number of entries for an array of conditions","!static":"true","!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject])"},"!description":"Utilities to handle {@link sap.ui.mdc.condition.Operator Operators} and {@link sap.ui.mdc.condition.ConditionObject conditions}.","getEQOperator":{"!description":"Returns the \"equal to\" (EQ) operator object.\n\nIf an array of operators is given, and an EQ-like operator exists there, this is returned. Otherwise the EQ operator is returned.\n\nThis is required for {@link sap.ui.mdc.Field Field}.","!static":"true","!category":"function","!type":"fn(aOperators?: [String]) -> sap.ui.mdc.condition.Operator"},"compareConditionsArray":{"!description":"Compares two arrays of conditions\n\nFor EQ conditions only the key part of the values is compared as the text part might be different (translation missing...)","!static":"true","!category":"function","!type":"fn(aConditions1: [sap.ui.mdc.condition.ConditionObject], aConditions2: [sap.ui.mdc.condition.ConditionObject]) -> Boolean"},"getCustomDynamicDateOptionForOperator":{"!description":"Determines the corresponding custom <code>DynamicDateOption<\/code> for an <code>Operator<\/code>","!static":"true","!category":"function","!type":"fn(oOperator: sap.ui.mdc.condition.Operator, sBaseType: sap.ui.mdc.enums.BaseType) -> String"},"getMatchingOperators":{"!description":"Returns the possible operators for the given value from the given array of operators.\n\n<b>Note<\/b> The value must be valid for the current type as this function only checks the operator against values. No type check is performed.","!static":"true","!category":"function","!type":"fn(aOperators: [String], sValue?: String) -> [sap.ui.mdc.condition.Operator]"},"removeOperator":{"!description":"Removes an operator from the list of known operators.","!static":"true","!category":"function","!type":"fn(vOperator: sap.ui.mdc.condition.Operator | String)"},"addOperatorForType":{"!description":"Adds an operator to the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enums.BaseType, vOperator: sap.ui.mdc.condition.Operator | String)"},"getDefaultOperator":{"!description":"Returns the default operator for the given basic type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enums.BaseType) -> sap.ui.mdc.condition.Operator"},"removeOperatorForType":{"!description":"Removes an operator from the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enums.BaseType, vOperator: sap.ui.mdc.condition.Operator | String)"},"getOperatorsForType":{"!description":"Returns all available default operators for the given type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enums.BaseType) -> [String]"},"addOperator":{"!description":"Adds an operator to the list of known operators.","!static":"true","!category":"function","!type":"fn(oOperator: sap.ui.mdc.condition.Operator)"},"checkConditionsEmpty":{"!description":"Checks if conditions are empty.\n\nModifies the <code>isEmpty<\/code> parameter of the conditions.","!static":"true","!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject])"},"onlyEQ":{"!description":"Checks if only EQ is supported. ({@link sap.ui.mdc.Field Field} case)","!static":"true","!category":"function","!type":"fn(aOperators: [String]) -> Boolean"},"insertOperatorForType":{"!description":"Inserts an operator into the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enums.BaseType, vOperator: sap.ui.mdc.condition.Operator | String, idx: Number)"},"!module":"sap/ui/mdc/condition/FilterOperatorUtil","setOperatorsForType":{"!description":"Adds operators to the list of valid operators for a type.\n\n<b>Note<\/b>: <code>aOperators<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator}, the instance itself, or multiple operators inside an array.\n\n<b>Note<\/b>: <code>vDefaultOperator<\/code> must exist as a valid operator for the type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enums.BaseType, aOperators: [sap.ui.mdc.condition.Operator[] | sap.ui.mdc.condition.Operator | String], vDefaultOperator: sap.ui.mdc.condition.Operator | String)"},"!helpDescription":"Utilities to handle {@link sap.ui.mdc.condition.Operator Operators} and {@link sap.ui.mdc.condition.ConditionObject conditions}.","indexOfCondition":{"!description":"Returns the index of a condition in an array of conditions.\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).\n\n<b>Note:<\/b> If two or more identical conditions are in the array, the index is the first one is used.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, aConditions: [sap.ui.mdc.condition.ConditionObject]) -> Number"},"setDefaultOperatorForType":{"!description":"Sets the default operator for the list of operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enums.BaseType, vDefaultOperator: sap.ui.mdc.condition.Operator | String)"},"getOperatorForDynamicDateOption":{"!description":"Returns the operator object for the given <code>DynamicDateOption<\/code> name.","!static":"true","!category":"function","!type":"fn(sOption: String, sBaseType?: sap.ui.mdc.enums.BaseType) -> sap.ui.mdc.condition.Operator | undefined"}},"sap.ui.mdc.condition.Operator":{"!description":"Creates an <code>sap.ui.mdc.condition.Operator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.Operator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"checkValidated":{"!description":"Checks if a condition is validated and sets the <code>validated<\/code> flag.\n\nFor EQ set <code>validated<\/code> flag if a description is given.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)","parameters":{"oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check"}},"getModelFilter":{"!description":"Creates a filter object for a condition.\n\nThis function can be overwritten see <code>overwrite(\"getModelFilter\", ...)<\/code>","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, sFieldPath: String, oType: sap.ui.model.Type, bCaseSensitive?: Boolean, sBaseType?: sap.ui.mdc.enums.BaseType) -> sap.ui.model.Filter","parameters":{"bCaseSensitive":"type: boolean, description: creates a caseSensitive filter","sBaseType":"type: sap.ui.mdc.enums.BaseType, description: Basic type","sFieldPath":"type: string, description: Path of filter","oType":"type: sap.ui.model.Type, description: Data type of the used filter field","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"getValues":{"!description":"Returns the real values without operator symbol.\n\nIn this function no type validation takes place.","!static":false,"!category":"function","!type":"fn(sText: String, sDisplayFormat: sap.ui.mdc.enums.FieldDisplay, bDefaultOperator: Boolean, bHideOperator?: Boolean) -> [String]","parameters":{"sDisplayFormat":"type: sap.ui.mdc.enums.FieldDisplay, description: Display format","bHideOperator":"type: boolean, description: If set, the operator must not be visible for the user, so if the user enters it, it is part of the text","sText":"type: string, description: Text","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"test":{"!description":"Checks if a text is suitable for an operator.","!static":false,"!category":"function","!type":"fn(sText: String) -> Boolean","parameters":{"sText":"type: string, description: Text"}},"!proto":"sap.ui.base.Object","format":{"!description":"Formats a condition.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oType?: sap.ui.model.Type, sDisplay?: sap.ui.mdc.enums.FieldDisplay, bHideOperator?: Boolean, aCompositeTypes?: [sap.ui.model.Type], oAdditionalType?: sap.ui.model.Type, aAdditionalCompositeTypes?: [sap.ui.model.Type], sCustomFormat?: String) -> String","parameters":{"aAdditionalCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code> (if <code>oAdditionalType<\/code> is a <code>CompositeType<\/code>)","aCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code>","sCustomFormat":"type: string, description: Custom text format which should be formatted","bHideOperator":"type: boolean, description: If set, the operator must not be visible for the user, so only the formatted value is shown","sDisplay":"type: sap.ui.mdc.enums.FieldDisplay, description: Display mode","oAdditionalType":"type: sap.ui.model.Type, description: Data type for additional value","oType":"type: sap.ui.model.Type, description: Data type","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"isEmpty":{"!description":"Checks if a condition is empty.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oType: sap.ui.model.Type) -> Boolean","parameters":{"oType":"type: sap.ui.model.Type, description: Data type","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"getTextForCopy":{"!description":"Determines the text that is copied to clipboard.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oType?: sap.ui.model.Type, sDisplay?: sap.ui.mdc.enums.FieldDisplay, bHideOperator?: Boolean, aCompositeTypes?: [sap.ui.model.Type], oAdditionalType?: sap.ui.model.Type, aAdditionalCompositeTypes?: [sap.ui.model.Type]) -> String","parameters":{"aAdditionalCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code> (if <code>oAdditionalType<\/code> is a <code>CompositeType<\/code>)","aCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code>","bHideOperator":"type: boolean, description: If set, the operator must not be visible for the user, so only the formatted value is shown","sDisplay":"type: sap.ui.mdc.enums.FieldDisplay, description: Display mode","oAdditionalType":"type: sap.ui.model.Type, description: Data type for additional value","oType":"type: sap.ui.model.Type, description: Data type","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"!category":"class","getLongText":{"!description":"Gets the long text for an operator.\n\nThis function can be overwritten see <code>overwrite(\"getLongText\", ...)<\/code>","!static":false,"!category":"function","!type":"fn(sBaseType: sap.ui.mdc.enums.BaseType) -> String","parameters":{"sBaseType":"type: sap.ui.mdc.enums.BaseType, description: Basic type"}},"isSingleValue":{"!description":"Checks if an <code>Operator<\/code> contains only one value or not.\n\nFor example, an equal Operator has only one value, a between operator two.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"compareConditions":{"!description":"Compares two conditions\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).","!static":false,"!category":"function","!type":"fn(oCondition1: sap.ui.mdc.condition.ConditionObject, oCondition2: sap.ui.mdc.condition.ConditionObject) -> Boolean","parameters":{"oCondition2":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check","oCondition1":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check"}},"parse":{"!description":"Parses a text.\n\nParsing doesn't check operator validity. For checking if the text is valid for the operator use the {@link #test} function. Parsing just extracts the real text(s) from the given text and removes the operator information.","!static":false,"!category":"function","!type":"fn(sText: String, oType: sap.ui.model.Type, sDisplayFormat: sap.ui.mdc.enums.FieldDisplay, bDefaultOperator: Boolean, aCompositeTypes?: [sap.ui.model.Type], oAdditionalType?: sap.ui.model.Type, aAdditionalCompositeTypes?: [sap.ui.model.Type], bHideOperator?: Boolean) -> [Object]","parameters":{"aAdditionalCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code> (if <code>oAdditionalType<\/code> is a <code>CompositeType<\/code>)","aCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code>","sDisplayFormat":"type: sap.ui.mdc.enums.FieldDisplay, description: Display format","bHideOperator":"type: boolean, description: If set, the operator must not be visible for the user, so if the user enters it, it is part of the text","sText":"type: string, description: Text","oAdditionalType":"type: sap.ui.model.Type, description: Data type for additional value","oType":"type: sap.ui.model.Type, description: Data type","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"_formatValue":{"!description":"Formats a value using the data type.\n\nif a <code>CompositeType is used<\/code> and it needs internal values, the corresponding data types are used to provide these values.","!static":false,"!category":"function","!type":"fn(vValue: Object, oType?: sap.ui.model.Type, aCompositeTypes?: [sap.ui.model.Type]) -> String","parameters":{"aCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code>","oType":"type: sap.ui.model.Type, description: Data type","vValue":"type: any, description: value"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.Operator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getCondition":{"!description":"Creates a condition for a given text.","!static":false,"!category":"function","!type":"fn(sText: String, oType: sap.ui.model.Type, sDisplayFormat: sap.ui.mdc.enums.FieldDisplay, bDefaultOperator: Boolean, aCompositeTypes?: [sap.ui.model.Type], oAdditionalType?: sap.ui.model.Type, aAdditionalCompositeTypes?: [sap.ui.model.Type], bHideOperator?: Boolean) -> sap.ui.mdc.condition.ConditionObject","parameters":{"aAdditionalCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code> (if <code>oAdditionalType<\/code> is a <code>CompositeType<\/code>)","aCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code>","sDisplayFormat":"type: sap.ui.mdc.enums.FieldDisplay, description: Display format","bHideOperator":"type: boolean, description: If set, the operator must not be visible for the user, so if the user enters it, it is part of the text","sText":"type: string, description: Text","oAdditionalType":"type: sap.ui.model.Type, description: Data type for additional value","oType":"type: sap.ui.model.Type, description: Data type","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"!module":"sap/ui/mdc/condition/Operator","!helpDescription":"Creates an <code>sap.ui.mdc.condition.Operator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","_createLocalType":{"!description":"Creates a local type.","!static":false,"!category":"function","!type":"fn(vType: String | Object, oType: sap.ui.model.Type) -> sap.ui.model.SimpleType","parameters":{"vType":"type: string|object, description: Type name or object with type information","oType":"type: sap.ui.model.Type, description: original data type"}},"overwrite":{"!description":"Sets an overwrite function for some of the <code>operator<\/code> functions.","!static":false,"!category":"function","!type":"fn(sMethodName: sap.ui.mdc.enums.OperatorOverwrite, fnOverwrite: fn()) -> fn()","parameters":{"fnOverwrite":"type: function, description: new callback function","sMethodName":"type: sap.ui.mdc.enums.OperatorOverwrite, description: name of the function which will be overwritten"}},"_parseValue":{"!description":"Parses a text based on the data type.","!static":false,"!category":"function","!type":"fn(sValue: String, oType: sap.ui.model.Type, aCompositeTypes?: [sap.ui.model.Type]) -> String","parameters":{"aCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code>","sValue":"type: string, description: Text","oType":"type: sap.ui.model.Type, description: Data type"}},"validate":{"!description":"Validates a value.","!static":false,"!category":"function","!type":"fn(aValues: Object, oType: sap.ui.model.Type, aCompositeTypes?: [sap.ui.model.Type], iCompositePart?: Number, oAdditionalType?: sap.ui.model.Type, aAdditionalCompositeTypes?: [sap.ui.model.Type])","parameters":{"aAdditionalCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code> (if <code>oAdditionalType<\/code> is a <code>CompositeType<\/code>)","iCompositePart":"type: int, description: part of the composite type that needs to be validated against it's type","aValues":"type: any, description: Values","aCompositeTypes":"type: sap.ui.model.Type[], description: Additional types used for each part of a <code>CompositeType<\/code>","oAdditionalType":"type: sap.ui.model.Type, description: Data type for additional value","oType":"type: sap.ui.model.Type, description: Data type"}}},"sap.ui.mdc.RowAction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 replaced by {@link sap.ui.mdc.enums.TableRowActionType}<br>Defines the actions that can be used in the table.","Navigation":{"!description":"Navigation arrow (chevron) is shown in the table rows/items.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.filterbar.p13n.AdaptationFilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.p13n.AdaptationFilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.p13n.AdaptationFilterBar"},"sap.ui.mdc.condition.Operator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.Operator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oConfiguration: Object)","prototype":"sap.ui.mdc.condition.Operator"},"sap.ui.mdc.valuehelp.Popover_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Popover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.Popover"},"sap.ui.mdc.mixin.PromiseMixin":{"!description":"Enhances a given control prototype with a management mechanism for lifecycle related promises. Calling any of the enhanced methods after control exit will result in a no-op.","!module":"sap/ui/mdc/mixin/PromiseMixin","!helpDescription":"Enhances a given control prototype with a management mechanism for lifecycle related promises. Calling any of the enhanced methods after control exit will result in a no-op.","!category":"namespace"},"sap.ui.mdc.valuehelp.Dialog":{"!description":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a dialog.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Dialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.Dialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>Dialog<\/code> container.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #get_selectedContentKey _selectedContentKey} : string<\/li>\n<li>{@link #get_quickSelectEnabled _quickSelectEnabled} : boolean (default: false)<\/li>\n<li>{@link #get_selectableContents _selectableContents} : object[] (default: [])<\/li>\n<li>{@link #getGroupConfig groupConfig} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.Container#constructor sap.ui.mdc.valuehelp.base.Container}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/Dialog","!helpDescription":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a dialog.","setGroupConfig":{"!description":"Sets a new value for property {@link #getGroupConfig groupConfig}.\n\nConfiguration for groups (collective search).\n\nThe object needs to contain an entry for every possible group. The labels of every group need to have a structure of {@link sap.ui.mdc.valuehelp.content.GroupLabel}. If no configuration is provided a standard text \"search and select\" is used.\n\n<b>Sample:<\/b> <pre>\n{\ngroup1: {label: \"Label 1 ({0})\", nnLabel: \"Label 1\"},\ngroup2: {label: \"Label 2 ({0})\", nnLabel: \"Label 2\"}\n}\n<\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oGroupConfig?: Object) -> sap.ui.mdc.valuehelp.Dialog","parameters":{"oGroupConfig":"type: object, description: New value for property <code>groupConfig<\/code>"}},"!proto":"sap.ui.mdc.valuehelp.base.Container","getGroupConfig":{"!description":"Gets current value of property {@link #getGroupConfig groupConfig}.\n\nConfiguration for groups (collective search).\n\nThe object needs to contain an entry for every possible group. The labels of every group need to have a structure of {@link sap.ui.mdc.valuehelp.content.GroupLabel}. If no configuration is provided a standard text \"search and select\" is used.\n\n<b>Sample:<\/b> <pre>\n{\ngroup1: {label: \"Label 1 ({0})\", nnLabel: \"Label 1\"},\ngroup2: {label: \"Label 2 ({0})\", nnLabel: \"Label 2\"}\n}\n<\/pre>\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.chart.ChartSelectionDetails":{"!description":"The <code>ChartSelectionDetails<\/code> control creates a <code>sap.m.SelectionDetails<\/code> popover based on metadata and the configuration specified.","init":{"!description":"Initialises the MDC Chart Selection Details","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chart.ChartSelectionDetails.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFetchFieldInfosCallback":{"!description":"Gets current value of property {@link #getFetchFieldInfosCallback fetchFieldInfosCallback}.\n\nCallback function that is called to determine navigation targets when clicking on a <code>SelectionDetailsItem<\/code>. The callback is called with the following parameters: <ul> <li><code>oSelectionDetails<\/code> {@link sap.ui.mdc.chart.ChartSelectionDetails}: Instance of this <code>ChartSelectionDetails<\/code><\/li> <li><code>oContext<\/code> {@link sap.ui.model.Context}: Binding context of the <code>SelectionDetailsItem<\/code><\/li> <\/ul> The return value of the callback has to be of type <code>Promise<\/code> resolving in a <code>Map<\/code> containing a <code>string<\/code> as key and a {@link sap.ui.mdc.field.FieldInfoBase} as value.","!static":false,"!category":"function","!type":"fn() -> fn()"},"setEnableNavCallback":{"!description":"Sets a new value for property {@link #getEnableNavCallback enableNavCallback}.\n\nCallback function that is called for each <code>SelectionDetailsItem<\/code> to determine if the navigation is enabled. The callback is called with the following parameters: <ul> <li><code>oSelectionDetails<\/code> {@link sap.ui.mdc.chart.ChartSelectionDetails}: Instance of this <code>ChartSelectionDetails<\/code><\/li> <li><code>oContext<\/code> {@link sap.ui.model.Context}: Binding context of the <code>SelectionDetailsItem<\/code><\/li> <\/ul> The return value of the callback has to be of type <code>boolean<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnEnableNavCallback: fn()) -> sap.ui.mdc.chart.ChartSelectionDetails","parameters":{"fnEnableNavCallback":"type: function, description: New value for property <code>enableNavCallback<\/code>"}},"!proto":"sap.m.SelectionDetails","setFetchFieldInfosCallback":{"!description":"Sets a new value for property {@link #getFetchFieldInfosCallback fetchFieldInfosCallback}.\n\nCallback function that is called to determine navigation targets when clicking on a <code>SelectionDetailsItem<\/code>. The callback is called with the following parameters: <ul> <li><code>oSelectionDetails<\/code> {@link sap.ui.mdc.chart.ChartSelectionDetails}: Instance of this <code>ChartSelectionDetails<\/code><\/li> <li><code>oContext<\/code> {@link sap.ui.model.Context}: Binding context of the <code>SelectionDetailsItem<\/code><\/li> <\/ul> The return value of the callback has to be of type <code>Promise<\/code> resolving in a <code>Map<\/code> containing a <code>string<\/code> as key and a {@link sap.ui.mdc.field.FieldInfoBase} as value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnFetchFieldInfosCallback: fn()) -> sap.ui.mdc.chart.ChartSelectionDetails","parameters":{"fnFetchFieldInfosCallback":"type: function, description: New value for property <code>fetchFieldInfosCallback<\/code>"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.ChartSelectionDetails with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectionDetails.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ChartSelectionDetails.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableNavCallback enableNavCallback} : function<\/li>\n<li>{@link #getFetchFieldInfosCallback fetchFieldInfosCallback} : function<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.SelectionDetails#constructor sap.m.SelectionDetails}\ncan be used as well.","!module":"sap/ui/mdc/chart/ChartSelectionDetails","setModal":{"!description":"Sets the <code>modal<\/code> property of the <code>popover<\/code>.","!static":false,"!category":"function","!type":"fn(bModal: Boolean)","parameters":{"bModal":"type: boolean, description: undefined"}},"!helpDescription":"The <code>ChartSelectionDetails<\/code> control creates a <code>sap.m.SelectionDetails<\/code> popover based on metadata and the configuration specified.","getEnableNavCallback":{"!description":"Gets current value of property {@link #getEnableNavCallback enableNavCallback}.\n\nCallback function that is called for each <code>SelectionDetailsItem<\/code> to determine if the navigation is enabled. The callback is called with the following parameters: <ul> <li><code>oSelectionDetails<\/code> {@link sap.ui.mdc.chart.ChartSelectionDetails}: Instance of this <code>ChartSelectionDetails<\/code><\/li> <li><code>oContext<\/code> {@link sap.ui.model.Context}: Binding context of the <code>SelectionDetailsItem<\/code><\/li> <\/ul> The return value of the callback has to be of type <code>boolean<\/code>.","!static":false,"!category":"function","!type":"fn() -> fn()"}},"sap.ui.mdc.odata.v4.TableDelegate":{"!category":"namespace"},"sap.ui.mdc.table.ColumnSettings":{"!description":"The table type info class for the metadata-driven table.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.ColumnSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.ColumnSettings.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ColumnSettings<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","!module":"sap/ui/mdc/table/ColumnSettings","!helpDescription":"The table type info class for the metadata-driven table.","!proto":"sap.ui.core.Element","!category":"class"},"sap.ui.mdc.valuehelp.content.FixedList":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a list with fixed values.","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.valuehelp.content.FixedListItem) -> sap.ui.mdc.valuehelp.content.FixedListItem | null","parameters":{"vItem":"type: int|string|sap.ui.mdc.valuehelp.content.FixedListItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.FixedList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFilterList":{"!description":"Gets current value of property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists, all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.mdc.valuehelp.base.ListContent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.FixedList"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.valuehelp.content.FixedListItem]"},"getGroupable":{"!description":"Gets current value of property {@link #getGroupable groupable}.\n\nIf set, the items of the list can be grouped\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.FixedList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.valuehelp.content.FixedListItem) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"oItem":"type: sap.ui.mdc.valuehelp.content.FixedListItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems of the value help.\n\nThe <code>key<\/code> of the items is not shown in the list, but is used as a value of the connected field.\n\nIf the <code>additionalText<\/code> for all the items is not used, the column will not be displayed.\n\n<b>Note:<\/b> Icons are currently not supported.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.valuehelp.content.FixedListItem]"},"!constructorDescription":"Constructor for a new <code>FixedList<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupable groupable} : boolean (default: false)<\/li>\n<li>{@link #getFilterList filterList} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.mdc.valuehelp.content.FixedListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.ListContent#constructor sap.ui.mdc.valuehelp.base.ListContent}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/FixedList","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.valuehelp.content.FixedListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.valuehelp.content.FixedListItem) -> Number","parameters":{"oItem":"type: sap.ui.mdc.valuehelp.content.FixedListItem, description: The item whose index is looked for"}},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a list with fixed values.","setGroupable":{"!description":"Sets a new value for property {@link #getGroupable groupable}.\n\nIf set, the items of the list can be grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bGroupable?: Boolean) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"bGroupable":"type: boolean, description: New value for property <code>groupable<\/code>"}},"setFilterList":{"!description":"Sets a new value for property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists, all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterList?: Boolean) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"bFilterList":"type: boolean, description: New value for property <code>filterList<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.valuehelp.content.FixedListItem, iIndex: Number) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.valuehelp.content.FixedListItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.FilterBarP13nMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.FilterBarP13nMode}<br>Defines the personalization mode of the filter bar.","Item":{"!description":"Filter item personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Value":{"!description":"Condition personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.filterbar.IFilterContainer":{"!description":"The <code>IFilterContainer<\/code> is the base container for the visualization of the filter items in the {@link sap.ui.mdc.FilterBar FilterBar} control.","exit":{"!description":"Overwrites the default exit to clean up the created layout properly.","!static":false,"!category":"function","!type":"fn()"},"init":{"!description":"Creates the inner layout for the <code>IFilterContainer<\/code>.","!static":false,"!category":"function","!type":"fn()"},"insertFilterField":{"!description":"Inserts the inner content into the layout item.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.FilterField, iIndex: Number)","parameters":{"oControl":"type: sap.ui.mdc.FilterField, description: to be inserted","iIndex":"type: int, description: Position where the control is added"}},"removeFilterField":{"!description":"Removes the inner content from the layout item.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.FilterField)","parameters":{"oControl":"type: sap.ui.mdc.FilterField, description: Control that is removed"}},"!module":"sap/ui/mdc/filterbar/IFilterContainer","!helpDescription":"The <code>IFilterContainer<\/code> is the base container for the visualization of the filter items in the {@link sap.ui.mdc.FilterBar FilterBar} control.","!proto":"sap.ui.base.Object","getInner":{"!description":"Gets the inner layout item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!category":"class","getFilterFields":{"!description":"Gets the inner controls of the layout item.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterField]"}},"sap.ui.mdc.field.FieldInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldInput"},"sap.ui.mdc.link.LinkItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.link.LinkItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.link.LinkItem"},"sap.ui.mdc.chart.ChartImplementationContainer":{"!description":"The <code>ChartImplementationContainer<\/code> creates a container for the <code>content<\/code> (chart) and <code>noDataContent<\/code>. Based on the <code>showNoDataStruct<\/code> the <code>content<\/code> or <code>noDataContent<\/code> will be shown.","init":{"!description":"Initialises the ChartImplementationContainer.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chart.ChartImplementationContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets a new control to be displayed inside the container.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.chart.ChartImplementationContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: new content to display"}},"showOverlay":{"!description":"Adds/Removes the overlay shown above the inner chart.","!static":false,"!category":"function","!type":"fn(bShow: Boolean)","parameters":{"bShow":"type: boolean, description: <code>true<\/code> to show overlay, <code>false<\/code> to hide"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent/Chart to be visualized.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","!category":"class","getChartNoDataContent":{"!description":"ID of the element which is the current target of the association {@link #getChartNoDataContent chartNoDataContent}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"setChartNoDataContent":{"!description":"Updates the association to a control which is used instead of {@link sap.ui.mdc.chart.ChartImplementationContainer#noDataContent noDataContent}. This can be used when the noDataContent should still be an aggregation of another control (e.g. the {@link sap.ui.mdc.Chart Chart}).","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.chart.ChartImplementationContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to show when {@link sap.ui.mdc.chart.ChartImplementationContainer#showNoDataStruct showNoDataStruct} is set to <code>true<\/code>"}},"setNoDataContent":{"!description":"Sets a new control for {@link sap.ui.mdc.chart.ChartImplementationContainer#noDataContent noDataContent}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.chart.ChartImplementationContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to show when {@link sap.ui.mdc.chart.ChartImplementationContainer#showNoDataStruct showNoDataStruct} is set to <code>true<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.ChartImplementationContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getNoDataContent":{"!description":"Gets content of aggregation {@link #getNoDataContent noDataContent}.\n\nControl that is shown when there is no data available inside the chart.<br> This can be used if the standard behavior of the used chart control needs to be overriden.<br> To show this <code>noDataContent<\/code>, set {@link #getShowNoDataStruct showNoDataStruct}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!constructorDescription":"Constructor for a new ChartImplementationContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowNoDataStruct showNoDataStruct} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<li>{@link #getNoDataContent noDataContent} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getChartNoDataContent chartNoDataContent} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","destroyNoDataContent":{"!description":"Destroys the noDataContent in the aggregation {@link #getNoDataContent noDataContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.ChartImplementationContainer"},"!module":"sap/ui/mdc/chart/ChartImplementationContainer","!helpDescription":"The <code>ChartImplementationContainer<\/code> creates a container for the <code>content<\/code> (chart) and <code>noDataContent<\/code>. Based on the <code>showNoDataStruct<\/code> the <code>content<\/code> or <code>noDataContent<\/code> will be shown.","setShowNoDataStruct":{"!description":"Defines the <code>noDataStructs<\/code> visibility.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.ui.mdc.chart.ChartImplementationContainer","parameters":{"bValue":"type: boolean, description: visibility of the noDataStruct"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.ChartImplementationContainer"},"getShowNoDataStruct":{"!description":"Gets current value of property {@link #getShowNoDataStruct showNoDataStruct}.\n\nToggles the visibility of the noDataContent & content\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.condition.ConditionConverter":{"!description":"Utilities for condition conversion","toType":{"!description":"converts a stringified condition into a type based condition\n\nThe condition is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, vType: sap.ui.model.SimpleType | sap.ui.mdc.TypeConfig, oTypeUtil: module:sap/ui/mdc/util/TypeMap) -> sap.ui.mdc.condition.ConditionObject"},"!module":"sap/ui/mdc/condition/ConditionConverter","!helpDescription":"Utilities for condition conversion","!category":"namespace","toString":{"!description":"Converts a condition into a unified String\n\nThe condition is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, vType: sap.ui.model.SimpleType | sap.ui.mdc.TypeConfig, oTypeUtil: module:sap/ui/mdc/util/TypeMap) -> sap.ui.mdc.condition.ConditionObject"}},"sap.ui.mdc.condition.ConditionModelPropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModelPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONPropertyBinding.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oModel: sap.ui.mdc.condition.ConditionModel, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.mdc.condition.ConditionModelPropertyBinding"},"sap.ui.mdc.odata":{"TypeUtil":"sap.ui.mdc.odata.TypeUtil","!category":"namespace","v4":"sap.ui.mdc.odata.v4"},"sap.ui.mdc.field.TokenDisplay":{"!description":"The <code>TokenDisplay<\/code> control is used to render a field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.Token Token} control to add ARIA attributes and other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Token.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.TokenDisplay.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TokenDisplay<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #get_delimiter _delimiter} : string (default: \"·\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Token#constructor sap.m.Token}\ncan be used as well.","!module":"sap/ui/mdc/field/TokenDisplay","!helpDescription":"The <code>TokenDisplay<\/code> control is used to render a field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.Token Token} control to add ARIA attributes and other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.","!proto":"sap.m.Token","!category":"class"},"sap.ui.mdc.Field_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Field"},"sap.ui.mdc.Field":{"getAdditionalValue":{"!description":"Gets current value of property {@link #getAdditionalValue additionalValue}.\n\nThe additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Object"},"bindAdditionalValue":{"!description":"Binds property {@link #getAdditionalValue additionalValue} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.PropertyBindingInfo) -> sap.ui.mdc.Field","parameters":{"oBindingInfo":"type: sap.ui.base.ManagedObject.PropertyBindingInfo, description: The binding information"}},"getDataType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. The type in the binding to the <code>value<\/code> property is used.<br>Gets current value of property {@link #getDataType dataType}.\n\nThe type of data handled by the field. The type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the value of the <code>dataType<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.mdc.field.FieldBase","!category":"class","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.Field<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Field","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>Field<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any (default)<\/li>\n<li>{@link #getAdditionalValue additionalValue} : any<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","setConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. Use the <code>value<\/code> property and <code>additionalValue<\/code> property to bind the control.<br>Sets a new value for property {@link #getConditions conditions}.\n\nDo not use the <code>conditions<\/code> property, use the <code>value<\/code> and <code>additionalValue<\/code> properties instead.","!static":false,"!category":"function","!type":"fn(aConditions: [Object]) -> sap.ui.mdc.Field","parameters":{"aConditions":"type: object[], description: Conditions that are set"}},"getDataTypeFormatOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. The <code>FormatOptions<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Gets current value of property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeFormatOptions<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn() -> Object"},"!description":"The <code>Field<\/code> control is used to bind its value to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>Field<\/code> as follows:\n\n<ul> <li>In display mode, usually a {@link sap.m.Text Text} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, an {@link sap.m.ExpandableText ExpandableText} control is rendered.<\/li> <li>If <code>fieldInfo<\/code> is set and it is configured to be triggerable, a {@link sap.m.Link Link} control is rendered. The <code>multipleLines<\/code> property is forwarded to the <code>wrapping<\/code> property of the {@link sap.m.Link Link} control.<\/li> <li>In edit mode, usually an {@link sap.m.Input Input} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, a {@link sap.m.TextArea TextArea} control is rendered.<\/li> <li>If a date type is used, a {@link sap.m.DatePicker DatePicker} control is rendered.<\/li> <li>If a date/time type is used, a {@link sap.m.DateTimePicker DateTimePicker} control is rendered.<\/li> <li>If a time type is used, a {@link sap.m.TimePicker TimePicker} control is rendered.<\/li> <li>If a currency or unit type is used, two {@link sap.m.Input Input} controls are rendered, one for number and one for unit.<\/li> <\/ul>","setAdditionalValue":{"!description":"Sets a new value for property {@link #getAdditionalValue additionalValue}.\n\nThe additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAdditionalValue?: Object) -> sap.ui.mdc.Field","parameters":{"oAdditionalValue":"type: any, description: New value for property <code>additionalValue<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Field.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMaxConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>.<br>This property must not be set for the <code>Field<\/code>","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> sap.ui.mdc.Field","parameters":{"iMaxConditions":"type: int, description: Only 1 condition allowed in <code>Field<\/code>"}},"unbindValue":{"!description":"Unbinds property {@link #getValue value} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Field"},"setDataTypeFormatOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. The <code>FormatOptions<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Sets a new value for property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeFormatOptions<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions: Object | undefined) -> sap.ui.mdc.Field","parameters":{"oDataTypeFormatOptions":"type: object|undefined, description: Format options that are set"}},"unbindAdditionalValue":{"!description":"Unbinds property {@link #getAdditionalValue additionalValue} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Field"},"getConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. Use the <code>value<\/code> property and <code>additionalValue<\/code> property to bind the control.<br>Gets current value of property {@link #getConditions conditions}.\n\nDo not use the <code>conditions<\/code> property, use the <code>value<\/code> and <code>additionalValue<\/code> properties instead.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.Field<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Field<\/code> itself.\n\nThis event is fired when the <code>value<\/code> property of the field is changed by user interaction.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Field","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Field<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Field","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"bindConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. Use the <code>value<\/code> property and <code>additionalValue<\/code> property to bind the control.<br>Binds property {@link #getConditions conditions} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of oBindingInfo\n\nDo not use the <code>conditions<\/code> property, use the <code>value<\/code> and <code>additionalValue<\/code> properties instead.","!static":false,"!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.PropertyBindingInfo) -> sap.ui.mdc.Field","parameters":{"oBindingInfo":"type: sap.ui.base.ManagedObject.PropertyBindingInfo, description: The binding information"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Object"},"setDataType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. The type in the binding to the <code>value<\/code> property is used.<br>Sets a new value for property {@link #getDataType dataType}.\n\nThe type of data handled by the field. The type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the value of the <code>dataType<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn(sDataType: String | undefined) -> sap.ui.mdc.Field","parameters":{"sDataType":"type: string|undefined, description: DataType that is set"}},"!module":"sap/ui/mdc/Field","!helpDescription":"The <code>Field<\/code> control is used to bind its value to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>Field<\/code> as follows:\n\n<ul> <li>In display mode, usually a {@link sap.m.Text Text} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, an {@link sap.m.ExpandableText ExpandableText} control is rendered.<\/li> <li>If <code>fieldInfo<\/code> is set and it is configured to be triggerable, a {@link sap.m.Link Link} control is rendered. The <code>multipleLines<\/code> property is forwarded to the <code>wrapping<\/code> property of the {@link sap.m.Link Link} control.<\/li> <li>In edit mode, usually an {@link sap.m.Input Input} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, a {@link sap.m.TextArea TextArea} control is rendered.<\/li> <li>If a date type is used, a {@link sap.m.DatePicker DatePicker} control is rendered.<\/li> <li>If a date/time type is used, a {@link sap.m.DateTimePicker DateTimePicker} control is rendered.<\/li> <li>If a time type is used, a {@link sap.m.TimePicker TimePicker} control is rendered.<\/li> <li>If a currency or unit type is used, two {@link sap.m.Input Input} controls are rendered, one for number and one for unit.<\/li> <\/ul>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValue?: Object) -> sap.ui.mdc.Field","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"}},"setDataTypeConstraints":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. The <code>Constraints<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Sets a new value for property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeConstraints<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints: Object | undefined) -> sap.ui.mdc.Field","parameters":{"oDataTypeConstraints":"type: object|undefined, description: Constraints that are set"}},"unbindConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. Use the <code>value<\/code> property and <code>additionalValue<\/code> property to bind the control.<br>Unbinds property {@link #getConditions conditions} from model data.\n\nDo not use the <code>conditions<\/code> property, use the <code>value<\/code> and <code>additionalValue<\/code> properties instead.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Field"},"bindValue":{"!description":"Binds property {@link #getValue value} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.PropertyBindingInfo) -> sap.ui.mdc.Field","parameters":{"oBindingInfo":"type: sap.ui.base.ManagedObject.PropertyBindingInfo, description: The binding information"}},"getDataTypeConstraints":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>Field<\/code>. The <code>Constraints<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Gets current value of property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeConstraints<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.enums.FilterBarP13nMode":{"!description":"Defines the personalization mode of the filter bar.","Item":{"!description":"Filter item personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/FilterBarP13nMode","Value":{"!description":"Condition personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.condition.OperatorDynamicDateOption":{"!description":"Maps an {@link sap.ui.mdc.condition.Operator Operator} to a {@link sap.m.DynamicDateOption DynamicDateOption}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.OperatorDynamicDateOption.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.DynamicDateOption","!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nData type of the corresponding filter field.\n\n<b>Note:<\/b> A type must be an instance of {@link sap.ui.model.Type Type}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oType: Object) -> sap.ui.mdc.condition.OperatorDynamicDateOption","parameters":{"oType":"type: object, description: New value for property <code>type<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.OperatorDynamicDateOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DynamicDateOption.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new OperatorDynamicDateOption.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperator operator} : object<\/li>\n<li>{@link #getType type} : object<\/li>\n<li>{@link #getBaseType baseType} : sap.ui.mdc.enums.BaseType<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DynamicDateOption#constructor sap.m.DynamicDateOption}\ncan be used as well.","!module":"sap/ui/mdc/condition/OperatorDynamicDateOption","!helpDescription":"Maps an {@link sap.ui.mdc.condition.Operator Operator} to a {@link sap.m.DynamicDateOption DynamicDateOption}.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nData type of the corresponding filter field.\n\n<b>Note:<\/b> A type must be an instance of {@link sap.ui.model.Type Type}.","!static":false,"!category":"function","!type":"fn() -> Object"},"setOperator":{"!description":"Sets a new value for property {@link #getOperator operator}.\n\nOperator used in the corresponding filter field.\n\n<b>Note:<\/b> An operator must be an instance of {@link sap.ui.mdc.condition.Operator Operator}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oOperator: Object) -> sap.ui.mdc.condition.OperatorDynamicDateOption","parameters":{"oOperator":"type: object, description: New value for property <code>operator<\/code>"}},"setBaseType":{"!description":"Sets a new value for property {@link #getBaseType baseType}.\n\nBasic type of the corresponding filter field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBaseType: sap.ui.mdc.enums.BaseType) -> sap.ui.mdc.condition.OperatorDynamicDateOption","parameters":{"sBaseType":"type: sap.ui.mdc.enums.BaseType, description: New value for property <code>baseType<\/code>"}},"getOperator":{"!description":"Gets current value of property {@link #getOperator operator}.\n\nOperator used in the corresponding filter field.\n\n<b>Note:<\/b> An operator must be an instance of {@link sap.ui.mdc.condition.Operator Operator}.","!static":false,"!category":"function","!type":"fn() -> Object"},"getBaseType":{"!description":"Gets current value of property {@link #getBaseType baseType}.\n\nBasic type of the corresponding filter field.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.BaseType"}},"sap.ui.mdc.table.ResponsiveColumnSettings":{"!description":"The table type info class for the metadata-driven table.","setImportance":{"!description":"Sets a new value for property {@link #getImportance importance}.\n\nDefines the column importance.\n\nColumns are moved to the pop-in area in the following order: <ul> <li>With importance <code>High<\/code>: moved last<\/li> <li>With importance <code>Medium<\/code> or <code>None<\/code>: moved second<\/li> <li>With importance <code>Low<\/code>: moved first<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn(sImportance?: sap.ui.core.Priority) -> sap.ui.mdc.table.ResponsiveColumnSettings","parameters":{"sImportance":"type: sap.ui.core.Priority, description: New value for property <code>importance<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.ResponsiveColumnSettings.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ResponsiveColumnSettings<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getImportance importance} : sap.ui.core.Priority (default: \"None\")<\/li>\n<li>{@link #getMergeFunction mergeFunction} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.table.ColumnSettings#constructor sap.ui.mdc.table.ColumnSettings}\ncan be used as well.","!module":"sap/ui/mdc/table/ResponsiveColumnSettings","!helpDescription":"The table type info class for the metadata-driven table.","getMergeFunction":{"!description":"Gets current value of property {@link #getMergeFunction mergeFunction}.\n\nDefines the control serialization function to merge duplicate cells into one cell block. This function is used to compare values of two cells.\n\n<b>Note:<\/b> Don't set this property for cells for which the content provides a user interaction, such as <code>sap.m.Link<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.mdc.table.ColumnSettings","getImportance":{"!description":"Gets current value of property {@link #getImportance importance}.\n\nDefines the column importance.\n\nColumns are moved to the pop-in area in the following order: <ul> <li>With importance <code>High<\/code>: moved last<\/li> <li>With importance <code>Medium<\/code> or <code>None<\/code>: moved second<\/li> <li>With importance <code>Low<\/code>: moved first<\/li> <\/ul>\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Priority"},"!category":"class","setMergeFunction":{"!description":"Sets a new value for property {@link #getMergeFunction mergeFunction}.\n\nDefines the control serialization function to merge duplicate cells into one cell block. This function is used to compare values of two cells.\n\n<b>Note:<\/b> Don't set this property for cells for which the content provides a user interaction, such as <code>sap.m.Link<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMergeFunction: String) -> sap.ui.mdc.table.ResponsiveColumnSettings","parameters":{"sMergeFunction":"type: string, description: New value for property <code>mergeFunction<\/code>"}}},"module:sap/ui/mdc/util/TypeMap":{"!description":"Configuration class for type handling in delegates. Allows mapping of model types to {@link sap.ui.mdc.enums.BaseType} and enables model-specific type configuration.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.","module:sap/ui/mdc/util/TypeMap":"module:sap/ui/mdc/util/TypeMap","set":{"!description":"Sets a {@link sap.ui.mdc.enums.BaseType BaseType} and an optional model- or scenario-specific configuration method for a given {@link sap.ui.model.SimpleType} <code>ObjectPath<\/code> <code>string<\/code>.\n\nAs default, <code>string<\/code> is returned.","!category":"function","!type":"fn(sType: String, vBaseType: sap.ui.mdc.enums.BaseType | fn(), fnOptions?: fn())"},"import":{"!description":"Imports the data of a <code>TypeMap<\/code> into another <code>TypeMap<\/code>.","!category":"function","!type":"fn(oTypeMap: module:sap/ui/mdc/util/TypeMap)"},"externalizeValue":{"!description":"Converts a value into a <code>string<\/code> using a designated type.\n\nThe value is not checked for validity. The used values must be compatible with the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the SAPUI5 flexibility handling.","!category":"function","!type":"fn(vValue: Object, vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> String"},"initializeInternalType":{"!description":"This function initializes the internal (\"cloned\") type.","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType, oTypeInitialization: Object)"},"!category":"namespace","getDataTypeClassName":{"!description":"Gets the data type class name for a given name or alias.","!category":"function","!type":"fn(sType: String) -> String"},"internalizeValue":{"!description":"Converts a <code>string<\/code> into a type-based value.\n\nThe value is not checked for validity. The used values must be compatible with the used basic type.\n\n<b>Note:<\/b> Number types are not converted. The number conversion is done by the SAPUI5 flexibility handling.","!category":"function","!type":"fn(vValue: String, vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> Object"},"getTypeConfig":{"!description":"Gets a type mapping configuration <code>object<\/code> for a given type <code>string<\/code> or {@link sap.ui.model.SimpleType SimpleType}.","!category":"function","!type":"fn(vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> sap.ui.mdc.TypeConfig"},"freeze":{"!description":"Prevents further modification of the data of a <code>TypeMap<\/code>.","!category":"function","!type":"fn()"},"getBaseTypeForType":{"!description":"Convenience method to retrieve the <code>BaseType<\/code> for a given {@link sap.ui.model.SimpleType SimpleType}.","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType) -> sap.ui.mdc.enums.BaseType"},"initializeTypeFromValue":{"!description":"If the {@link sap.ui.mdc.Field Field} control is used, the used data type comes from the binding. Some data types (like <code>Currency<\/code> or <code>Unit<\/code>) might need some initialization. To initialize the internal (\"cloned\") type later on, the result of this function is provided to <code>initializeInternalType<\/code>.","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType, vValue: Object) -> null | Object"},"!module":"sap/ui/mdc/util/TypeMap","!helpDescription":"Configuration class for type handling in delegates. Allows mapping of model types to {@link sap.ui.mdc.enums.BaseType} and enables model-specific type configuration.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.","getDataTypeClass":{"!description":"Gets a data type class based on a given name.","!category":"function","!type":"fn(sDataType: String) -> function(sap.ui.model.SimpleType)"},"setAlias":{"!description":"Allows alternative identifiers for types, such as a Boolean for {@link sap.ui.model.type.Boolean}.","!category":"function","!type":"fn(sType: String, sAlias: String)"},"export":{"!description":"Exports the current data of the <code>TypeMap<\/code>.","!category":"function","!type":"fn() -> Array"},"getBaseType":{"!description":"To determine which internal controls to render, either the {@link sap.ui.mdc.Field Field}, the {@link sap.ui.mdc.MultiValueField MultiValueField}, or the {@link sap.ui.mdc.FilterField FilterField} control needs information about whether the type represents a <code>date<\/code>, a <code>number<\/code>, or another {@link sap.ui.mdc.enums.BaseType BaseType}.\n\nAs default, <code>string<\/code> is returned.","!category":"function","!type":"fn(sType: String, oFormatOptions: Object, oConstraints: Object) -> sap.ui.mdc.enums.BaseType"},"getDataTypeInstance":{"!description":"Gets a data type instance based on a given <code>ObjectPath<\/code>, <code>FormatOptions<\/code>, and <code>Constraints<\/code>.","!category":"function","!type":"fn(sDataType: String, oFormatOptions?: Object, oConstraints?: Object, oOptions?: Object) -> sap.ui.model.SimpleType"}},"sap.ui.mdc.ValueHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.ValueHelp"},"sap.ui.mdc.enum.BaseType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.BaseType}<br>Enumeration of the possible basic data types\n\nIn {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField}, different data types can be used. These data types might be model-dependent. To handle them model-independently, basic types are used internally.","Numeric":{"!description":"Data type represents a number. (This can be integer, float or any other numeric type.)","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/BaseType","!category":"static class","Time":{"!description":"Data type represents a time","!category":"enum","!type":"String"},"String":{"!description":"Data type represents a string","!category":"enum","!type":"String"},"Boolean":{"!description":"Data type represents a Boolean","!category":"enum","!type":"String"},"Unit":{"!description":"Data type represents a unit. A composite type with a number and a unit part is used.","!category":"enum","!type":"String"},"Date":{"!description":"Data type represents a date","!category":"enum","!type":"String"},"DateTime":{"!description":"Data type represents a date with time","!category":"enum","!type":"String"}},"module:sap/ui/mdc/FilterBarDelegate":{"!description":"Base Delegate for {@link sap.ui.mdc.FilterBar FilterBar}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.FilterBar FilterBar}. This class provides method calls, which are called by the <code>FilterBar<\/code> at specific operations and allows to overwrite an internal behaviour..","removeItem":{"!description":"Triggers any necessary follow-up steps that need to be taken after the removal of created items via <code>removeItem<\/code>. The returned Boolean value inside the <code>Promise<\/code> can be used to prevent the default follow-up behavior of the SAPUI5 flexibility handling.\n\n<b>Note:<\/b>The <code>removeItem<\/code> hook can be used during the processing of an SAPUI5 flexibility change. Consequently the parameter <code>mPropertyBag<\/code> is only passed during preprocessing. In runtime scenarios (such as opening a personalization dialog), this method can be called without the parameter <code>mPropertyBag<\/code>.","!category":"function","!type":"fn(mPropertyBag?: Object) -> Promise<boolean>"},"module:sap/ui/mdc/FilterBarDelegate":"module:sap/ui/mdc/FilterBarDelegate","!category":"namespace","visualizeValidationState":{"!description":"Visualizes the <code>FilterBar<\/code> validation state.","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar, mValidation: map)"},"addCondition":{"!description":"This method is called during the appliance of the add condition change. The intention is to update the {@link sap.ui.mdc.FilterBarBase#setPropertyInfo propertyInfo} property.","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar, sPropertyName: String, mPropertyBag: Object) -> Promise"},"clearFilters":{"!description":"This method is called when the Clear button is pressed.","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar) -> Promise"},"fetchProperties":{"!description":"Retrieves the relevant metadata for a given payload and returns the property info array.\n\n<b>Note:<\/b> The result of this function must be kept stable throughout the lifecycle of your application. Any changes of the returned values might result in undesired effects.\n\n<b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.filterbar.FilterBarBase#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/FilterBarDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oChart: sap.ui.mdc.Chart, oFilterBar: sap.ui.mdc.FilterBar) -> [Promise<sap.ui.mdc.filterbar.PropertyInfo]"},"addItem":{"!description":"Creates an instance of a filter field control. <b>Note:<\/b> The <code>addItem<\/code> hook can be used during the processing of an SAPUI5 flexibility change. Consequently the parameter <code>mPropertyBag<\/code> is only passed during preprocessing. In runtime scenarios (such as opening a personalization dialog), this method might be called without the parameter <code>mPropertyBag<\/code>.","!category":"function","!type":"fn(sPropertyName: String, mPropertyBag?: Object) -> Promise<sap.ui.mdc.FilterField>"},"removeCondition":{"!description":"propertyInfo This method is called during the appliance of the remove condition change. The intention is to update the {@link sap.ui.mdc.FilterBarBase#setPropertyInfo propertyInfo} property.","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar, sPropertyName: String, mPropertyBag: Object) -> Promise"},"determineValidationState":{"!description":"A validator to evaluate the <code>FilterBar<\/code> state.","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar, mValidation?: map) -> sap.ui.mdc.enums.FilterBarValidationStatus"},"!module":"sap/ui/mdc/FilterBarDelegate","!helpDescription":"Base Delegate for {@link sap.ui.mdc.FilterBar FilterBar}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.FilterBar FilterBar}. This class provides method calls, which are called by the <code>FilterBar<\/code> at specific operations and allows to overwrite an internal behaviour.."},"sap.ui.mdc.mixin.FilterIntegrationMixin":{"!description":"Enhances a given control prototype with consolidated handling for external IFilter integration\n\nThe following methods are available:\n\n<ul> <li><code>setFilter<\/code> - The setter for the <code>filter<\/code> association<\/li> <li><code>_validateFilter<\/code> - Validates the provided <code>IFilter<\/code> control instance and may return an error<\/li> <li><code>rebind<\/code> - Executes a the <code>rebind<\/code> method for the given control instance.<\/li> <\/ul>\n\nTo use the FilterIntegrationMixin, the implementing Control requires the <code>filter<\/code> associaton.\n\nAdditionally, the following methods are necessary to be implemented:\n\n<ul> <li><code>_rebind<\/code><\/li> <li><code>isFilteringEnabled<\/code><\/li> <\/ul>\n\nHooks that are called by the FilterIntegrationMixin if implemented in the control.\n\n<ul> <li><code>_onFilterProvided(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that a valid <code>filter<\/code> association has been provided. The provided filter instance is passed.<\/li> <li><code>_onFilterRemoved(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that the <code>filter<\/code> association has been removed. The removed filter instance is passed.<\/li> <li><code>_onFilterSearch(oEvent)<\/code> - Called when the <code>search<\/code> event of the filter is fired. The event object is passed.<\/li> <li><code>_onFiltersChanged(oEvent)<\/code> - Called when the <code>filtersChanged<\/code> event of the filter is fired. The event object is passed.<\/li> <\/ul>","!module":"sap/ui/mdc/mixin/FilterIntegrationMixin","!helpDescription":"Enhances a given control prototype with consolidated handling for external IFilter integration\n\nThe following methods are available:\n\n<ul> <li><code>setFilter<\/code> - The setter for the <code>filter<\/code> association<\/li> <li><code>_validateFilter<\/code> - Validates the provided <code>IFilter<\/code> control instance and may return an error<\/li> <li><code>rebind<\/code> - Executes a the <code>rebind<\/code> method for the given control instance.<\/li> <\/ul>\n\nTo use the FilterIntegrationMixin, the implementing Control requires the <code>filter<\/code> associaton.\n\nAdditionally, the following methods are necessary to be implemented:\n\n<ul> <li><code>_rebind<\/code><\/li> <li><code>isFilteringEnabled<\/code><\/li> <\/ul>\n\nHooks that are called by the FilterIntegrationMixin if implemented in the control.\n\n<ul> <li><code>_onFilterProvided(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that a valid <code>filter<\/code> association has been provided. The provided filter instance is passed.<\/li> <li><code>_onFilterRemoved(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that the <code>filter<\/code> association has been removed. The removed filter instance is passed.<\/li> <li><code>_onFilterSearch(oEvent)<\/code> - Called when the <code>search<\/code> event of the filter is fired. The event object is passed.<\/li> <li><code>_onFiltersChanged(oEvent)<\/code> - Called when the <code>filtersChanged<\/code> event of the filter is fired. The event object is passed.<\/li> <\/ul>","rebind":{"!description":"Executes a rebind considering the provided external and inbuilt filtering.","!static":"true","!category":"function","!type":"fn() -> Promise"},"!category":"namespace","setFilter":{"!description":"Set an external IFilter source to connect it with the given control instance.","!static":"true","!category":"function","!type":"fn(vFilter: sap.ui.mdc.IFilter | String) -> sap.ui.mdc.Control"}},"sap.ui.mdc.enums.OperatorName":{"FIRSTDAYQUARTER":{"!description":"\"First Day in This Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTYEARSINCLUDED":{"!description":"\"Last X Years\" operator including current year\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"SPECIFICMONTHINYEAR":{"!description":"\"Month in Year\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTQUARTERS":{"!description":"\"Last X Quarters\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTQUARTERS":{"!description":"\"Next X Quarters\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTHOURSINCLUDED":{"!description":"\"Next X Hours\" operator including current hour\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"},"NEXTWEEKSINCLUDED":{"!description":"\"Next X Weeks\" operator including current week\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTMINUTESINCLUDED":{"!description":"\"Next X Minutes\" operator including current minute\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"},"LT":{"!description":"\"less than\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.","!category":"enum","!type":"String"},"YESTERDAY":{"!description":"\"Yesterday\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTQUARTER":{"!description":"\"Last Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTMINUTES":{"!description":"\"Last X Minutes\" operator\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"},"NOTLT":{"!description":"\"not less than\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.","!category":"enum","!type":"String"},"LASTHOURS":{"!description":"\"Last X Hours\" operator\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"},"NEXTMONTHS":{"!description":"\"Next X Months\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NOTGT":{"!description":"\"not greater than\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.","!category":"enum","!type":"String"},"YEARTODATE":{"!description":"\"Year to Date\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTMONTHS":{"!description":"\"Last X Months\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NOTLE":{"!description":"\"not less than or equal to\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.","!category":"enum","!type":"String"},"!description":"Collects the operators that are included in the library.","NOTGE":{"!description":"\"not greater than or equal to\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.","!category":"enum","!type":"String"},"SPECIFICMONTH":{"!description":"\"Month\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTDAYWEEK":{"!description":"\"Last Day in This Week\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTMONTH":{"!description":"\"Next Month\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"THISYEAR":{"!description":"\"This Year\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"EQ":{"!description":"\"equal to\" operator\n\nDepending on the used <code>DisplayFormat<\/code>, the key, the description, or both are used as output of formatting and during parsing.\n\nThe operator is available for all data types.\n\nIf a {@link sap.m.DynamicDateRange DynamicDateRange} control is used for the output, the operator is mapped to the <code>DATE<\/code> option if a date type is used and to the <code>DATETIME<\/code> option if a date/time type is used.","!category":"enum","!type":"String"},"FIRSTDAYYEAR":{"!description":"\"First Day in This Year\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTMONTHSINCLUDED":{"!description":"\"Last X Months\" operator including current month\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTYEAR":{"!description":"\"Next Year\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTDAYQUARTER":{"!description":"\"Last Day in This Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTYEARS":{"!description":"\"Next X Years\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTWEEK":{"!description":"\"Last Week\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"TODAYFROMTO":{"!description":"\"Today -X / +Y Days\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/OperatorName","NOTBT":{"!description":"\"not between\" operator\n\nThere is no validation if the first value is less than the second value as the comparison would be type-dependent and cannot be performed in a generic way.\n\nThe operator is available for string, numeric, date, time, and date/time types.","!category":"enum","!type":"String"},"NE":{"!description":"\"not equal to\" operator\n\nThe operator is available for all types.","!category":"enum","!type":"String"},"Contains":{"!description":"\"contains\" operator\n\nThe operator is available for string types.","!category":"enum","!type":"String"},"NEXTQUARTER":{"!description":"\"Next Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NotEmpty":{"!description":"\"not empty\" operator\n\nThe operator is available for string, date, and date/time types.","!category":"enum","!type":"String"},"NEXTWEEKS":{"!description":"\"Next X Weeks\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"EndsWith":{"!description":"\"ends with\" operator\n\nThe operator is available for string types.","!category":"enum","!type":"String"},"LASTDAYSINCLUDED":{"!description":"\"Last X Days\" operator including current day\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"!category":"static class","DATETOYEAR":{"!description":"\"Date to Year\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTMINUTES":{"!description":"\"Next X Minutes\" operator\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"},"StartsWith":{"!description":"\"starts with\" operator\n\nThe operator is available for string types.","!category":"enum","!type":"String"},"LASTMONTH":{"!description":"\"Last Month\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"BT":{"!description":"\"between\" operator\n\nThere is no validation if the first value is less than the second value as the comparison would be type-dependent and cannot be performed in a generic way.\n\nThe operator is available for string, numeric, date, time, and date/time types.\n\nIf a {@link sap.m.DynamicDateRange DynamicDateRange} control is used for the output, the operator is mapped to the <code>DATERANGE<\/code> option if a date type is used and to the <code>DATETIMERANGE<\/code> option if a date/time type is used.","!category":"enum","!type":"String"},"Empty":{"!description":"\"empty\" operator\n\nThe operator is available for string, date, and date/time types.","!category":"enum","!type":"String"},"LASTQUARTERSINCLUDED":{"!description":"\"Last X Quarters\" operator including current quarter\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"TOMORROW":{"!description":"\"Tomorrow\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTDAYSINCLUDED":{"!description":"\"Next X Days\" operator including current day\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTDAYS":{"!description":"\"Next X Days\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTDAYYEAR":{"!description":"\"Last Day in This Year\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTDAYS":{"!description":"\"Last X Days\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTYEARSINCLUDED":{"!description":"\"Next X Years\" operator including current year\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"GE":{"!description":"\"greater than or equal to\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.\n\nIf a {@link sap.m.DynamicDateRange DynamicDateRange} control is used for the output the operator, is mapped to the <code>FROM<\/code> option if a date type is used and to the <code>FROMDATETIME<\/code> option if a date/time type is used.","!category":"enum","!type":"String"},"LASTYEARS":{"!description":"\"Last X Years\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"QUARTER2":{"!description":"\"Second Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"QUARTER3":{"!description":"\"Third Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NotContains":{"!description":"\"does not contain\" operator\n\nThe operator is available for string types.","!category":"enum","!type":"String"},"LASTDAYMONTH":{"!description":"\"Last Day in This Month\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"QUARTER1":{"!description":"\"First Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"FIRSTDAYWEEK":{"!description":"\"First Day in This Week\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTMINUTESINCLUDED":{"!description":"\"Last X Minutes\" operator including current minute\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"},"NEXTQUARTERSINCLUDED":{"!description":"\"Next X Quarters\" operator including current quarter\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"TODAY":{"!description":"\"Today\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NotStartsWith":{"!description":"\"does not start with\" operator\n\nThe operator is available for string types.","!category":"enum","!type":"String"},"LASTYEAR":{"!description":"\"Last Year\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LASTHOURSINCLUDED":{"!description":"\"Last X Hours\" operator including current hour\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"},"LASTWEEKSINCLUDED":{"!description":"\"Last X Weeks\" operator including current week\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"GT":{"!description":"\"greater than\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.","!category":"enum","!type":"String"},"LASTWEEKS":{"!description":"\"Last X Weeks\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"QUARTER4":{"!description":"\"Fourth Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTMONTHSINCLUDED":{"!description":"\"Next X Months\" operator including current month\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"FIRSTDAYMONTH":{"!description":"\"First Day in This Month\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"THISMONTH":{"!description":"\"This Month\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NotEndsWith":{"!description":"\"does not end with\" operator\n\nThe operator is available for string types.","!category":"enum","!type":"String"},"THISQUARTER":{"!description":"\"This Quarter\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"LE":{"!description":"\"less than or equal to\" operator\n\nThe operator is available for string, numeric, date, time, and date/time types.\n\nIf a {@link sap.m.DynamicDateRange DynamicDateRange} control is used for the output the operator, is mapped to the <code>TO<\/code> option if a date type is used and to the <code>TODATETIME<\/code> option if a date/time type is used.","!category":"enum","!type":"String"},"NEXTWEEK":{"!description":"\"Next Week\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"THISWEEK":{"!description":"\"This Week\" operator\n\nThe operator is available for date and date/time types.","!category":"enum","!type":"String"},"NEXTHOURS":{"!description":"\"Next X Hours\" operator\n\nThe operator is available for date/time types.","!category":"enum","!type":"String"}},"sap.ui.mdc.valuehelp.content.MDCTable":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.ui.mdc.Table}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.MDCTable.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.valuehelp.base.FilterableListContent","!category":"class","setForceBind":{"!description":"Sets a new value for property {@link #getForceBind forceBind}.\n\nThis property will lead to a rebind on newly inserted tables after initial filters are set, immediately before the table is shown for the first time.\n\n<b>Note:<\/b> This only takes effect if autoBindOnInit is disabled on the <code>Table<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bForceBind?: Boolean) -> sap.ui.mdc.valuehelp.content.MDCTable","parameters":{"bForceBind":"type: boolean, description: New value for property <code>forceBind<\/code>"}},"getForceBind":{"!description":"Gets current value of property {@link #getForceBind forceBind}.\n\nThis property will lead to a rebind on newly inserted tables after initial filters are set, immediately before the table is shown for the first time.\n\n<b>Note:<\/b> This only takes effect if autoBindOnInit is disabled on the <code>Table<\/code>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MDCTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>MDCTable<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getForceBind forceBind} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.ui.mdc.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.FilterableListContent#constructor sap.ui.mdc.valuehelp.base.FilterableListContent}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/MDCTable","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.MDCTable"},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.ui.mdc.Table}.","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.\n\nTable to be used in value help\n\n<b>Note:<\/b> Set the right selection mode (multiple selection or single selection) as it cannot be determined automatically for every case. (Maybe for multi-value {@link sap.ui.mdc.FilterField FilterField} controls only single selection from table might be wanted.)","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> sap.ui.mdc.valuehelp.content.MDCTable","parameters":{"oTable":"type: sap.ui.mdc.Table, description: The table to set"}}},"sap.ui.mdc.valuehelp.content.FixedList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.FixedList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.FixedList"},"sap.ui.mdc.chart.Item":{"!description":"The <code>Item<\/code> control for the chart/property metadata used within MDC Chart.","setName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 Please use <code>propertyKey<\/code> instead.<br>Sets a new value for property {@link #getName name}.\n\nThe unique identifier of the chart item that reflects the name of the property in the PropertyInfo.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.mdc.chart.Item","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chart.Item.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel for the item, either as a string literal or by a pointer, using the binding to some property containing the label.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 Please use <code>propertyKey<\/code> instead.<br>Gets current value of property {@link #getName name}.\n\nThe unique identifier of the chart item that reflects the name of the property in the PropertyInfo.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","getRole":{"!description":"Gets current value of property {@link #getRole role}.\n\nSpecifies the role of the item for the chart (category, axis1...). This is specific for the used chart library.<br> <b>Note:<\/b> This property must not be changed after initialization.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nSpecifies the type of the item for the chart (groupable and aggregatable). This is specific for the used chart library.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.ui.mdc.chart.Item","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"setPropertyKey":{"!description":"Sets a new value for property {@link #getPropertyKey propertyKey}.\n\nThe unique identifier of the chart item that reflects the name of property in the PropertyInfo.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPropertyKey: String) -> sap.ui.mdc.chart.Item","parameters":{"sPropertyKey":"type: string, description: New value for property <code>propertyKey<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.Item with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>Item<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPropertyKey propertyKey} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getRole role} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/chart/Item","!helpDescription":"The <code>Item<\/code> control for the chart/property metadata used within MDC Chart.","getPropertyKey":{"!description":"Gets current value of property {@link #getPropertyKey propertyKey}.\n\nThe unique identifier of the chart item that reflects the name of property in the PropertyInfo.","!static":false,"!category":"function","!type":"fn() -> String"},"getType":{"!description":"Gets current value of property {@link #getType type}.\n\nSpecifies the type of the item for the chart (groupable and aggregatable). This is specific for the used chart library.","!static":false,"!category":"function","!type":"fn() -> String"},"setRole":{"!description":"Sets a new value for property {@link #getRole role}.\n\nSpecifies the role of the item for the chart (category, axis1...). This is specific for the used chart library.<br> <b>Note:<\/b> This property must not be changed after initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.ui.mdc.chart.Item","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel for the item, either as a string literal or by a pointer, using the binding to some property containing the label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.mdc.chart.Item","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.ui.mdc.condition.RangeOperator":{"!description":"Creates a <code>sap.ui.mdc.condition.RangeOperator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\n<b>Note:<\/b> Use this class only for filter field of type date or time related data types.\n\nIf a function or property is initial, the default implementation is used.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.RangeOperator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.condition.Operator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.RangeOperator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!module":"sap/ui/mdc/condition/RangeOperator","!helpDescription":"Creates a <code>sap.ui.mdc.condition.RangeOperator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\n<b>Note:<\/b> Use this class only for filter field of type date or time related data types.\n\nIf a function or property is initial, the default implementation is used.","!proto":"sap.ui.mdc.condition.Operator","!category":"class","getStaticText":{"!description":"Creates the static text of the operator","!static":false,"!category":"function","!type":"fn(oType: sap.ui.model.Type) -> String","parameters":{"oType":"type: sap.ui.model.Type, description: data type of the used {@link sap.ui.mdc.FilterField FilterField}"}}},"sap.ui.mdc.filterbar":{"filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"showMessages":{"!description":"Indicates whether possible errors during the search in a message box are displayed.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"!category":"namespace","setPropertyInfo":{"!description":"setPropertyInfo : String","!category":"enum","!type":"String"},"FilterBarBase":"sap.ui.mdc.filterbar.FilterBarBase_obj","PropertyInfoValidator":"sap.ui.mdc.filterbar.PropertyInfoValidator","delegate":{"!description":"Object related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/BaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.<br> <b>Node<\/b>: Please check {@link sap.ui.mdc.filterbar.PropertyInfo} for more information about the supported inner elements. <b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.filterbar.FilterBarBase#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/FilterBarDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"enum","!type":"Object"},"liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"removeFilterItem":{"!description":"removeFilterItem : String","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"IFilterContainer":"sap.ui.mdc.filterbar.IFilterContainer_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"!description":"Modules for {@link sap.ui.mdc.FilterBar FilterBar}","insertFilterItem":{"!description":"insertFilterItem : String","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"removeAllFilterItems":{"!description":"removeAllFilterItems : String","!category":"enum","!type":"String"},"destroyFilterItems":{"!description":"destroyFilterItems : String","!category":"enum","!type":"String"},"_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"p13n":"sap.ui.mdc.filterbar.p13n","getFilterConditions":{"!description":"getFilterConditions : String","!category":"enum","!type":"String"},"vh":"sap.ui.mdc.filterbar.vh","!module":"sap/ui/mdc/library","!helpDescription":"Modules for {@link sap.ui.mdc.FilterBar FilterBar}","addFilterItem":{"!description":"addFilterItem : String","!category":"enum","!type":"String"},"setFilterConditions":{"!description":"setFilterConditions : String","!category":"enum","!type":"String"},"showGoButton":{"!description":"Indicates whether the Go button is visible in the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"getPropertyInfo":{"!description":"getPropertyInfo : String","!category":"enum","!type":"String"}},"sap.ui.mdc.enums.OperatorValueType":{"!description":"Defines what data type is used for parse or format the condition values on a {@link sap.ui.mdc.condition.Operator Operator}.","!module":"sap/ui/mdc/enums/OperatorValueType","!category":"static class","Self":{"!description":"The <code>Type<\/code> of the <code>Field<\/code> or <code>FilterField<\/code> using the <code>Operator<\/code> is used.","!category":"enum","!type":"String"},"Static":{"!description":"A simple string type is used to display static text.","!category":"enum","!type":"String"},"SelfNoParse":{"!description":"The <code>Type<\/code> of the <code>Field<\/code> or <code>FilterField<\/code> using the <code>Operator<\/code> is used for validation, but the user input is used as value.","!category":"enum","!type":"String"}},"sap.ui.mdc.util.DateUtil":{"!description":"Utility class with functions for Date conversion","showTimezone":{"!description":"Checks if a DateTimeWithTimezone is used and the Timezone should be shown beside Date an time","!static":"true","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType) -> Boolean"},"!module":"sap/ui/mdc/util/DateUtil","createInternalType":{"!description":"\"Clones\" a given data type to use a given pattern.","!static":"true","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType, sPattern: String) -> sap.ui.model.SimpleType"},"stringToType":{"!description":"Converts a string based date to a Type using a given pattern.","!static":"true","!category":"function","!type":"fn(sDate: String, oType: sap.ui.model.SimpleType, sPattern: String) -> Object"},"!helpDescription":"Utility class with functions for Date conversion","ISOToType":{"!description":"Converts a ISO representation of a DateTime into the data-type representation.","!static":"true","!category":"function","!type":"fn(sISODate: String, oType: sap.ui.model.SimpleType, sBaseType?: sap.ui.mdc.enums.BaseType) -> Object"},"typeToISO":{"!description":"Converts a data type representation of a dateTime to a ISO-string.","!static":"true","!category":"function","!type":"fn(vDate: Object, oType: sap.ui.model.SimpleType, sBaseType?: sap.ui.mdc.enums.BaseType) -> String"},"!category":"namespace","typeToString":{"!description":"Converts a data type specific date to a string using a given pattern.","!static":"true","!category":"function","!type":"fn(vDate: Object, oType: sap.ui.model.SimpleType, sPattern: String) -> String"}},"sap.ui.mdc.MultiValueField":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.field.MultiValueFieldItem) -> sap.ui.mdc.field.MultiValueFieldItem | null","parameters":{"vItem":"type: int|string|sap.ui.mdc.field.MultiValueFieldItem, description: The item to remove or its index or id"}},"getDataType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. The type in the binding to the <code>items<\/code> aggregation is used.<br>Gets current value of property {@link #getDataType dataType}.\n\nThe type of data handled by the field. The type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the value of the <code>dataType<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.mdc.field.FieldBase","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.MultiValueField"},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/field/MultiValueFieldDelegate MultiValueFieldDelegate}.<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/field/MultiValueFieldDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.MultiValueField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.MultiValueFieldItem) -> sap.ui.mdc.MultiValueField","parameters":{"oItem":"type: sap.ui.mdc.field.MultiValueFieldItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems of the <code>MultiValueField<\/code> control.\n\nThe items are not updated by user input or value help selection automatically. That's because an aggregation binding can only be updated by the model, not by the bound aggregation. Therefore, the {@link module:sap/ui/mdc/field/MultiValueFieldDelegate.updateItems MultiValueFieldDelegate.updateItems} function needs to be implemented to update the items after a user interaction.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.MultiValueFieldItem]"},"!constructorDescription":"Constructor for a new <code>MultiValueField<\/code> control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.mdc.field.MultiValueFieldItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","setConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>MultiValueField<\/code>. Use the <code>items<\/code> aggregation to bind the control.<br>Sets a new value for property {@link #getConditions conditions}.\n\nDo not use the <code>conditions<\/code> property, use the <code>items<\/code> aggregation instead.","!static":false,"!category":"function","!type":"fn(aConditions: [Object]) -> sap.ui.mdc.MultiValueField","parameters":{"aConditions":"type: object[], description: Conditions to be set"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.field.MultiValueFieldItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.MultiValueFieldItem) -> Number","parameters":{"oItem":"type: sap.ui.mdc.field.MultiValueFieldItem, description: The item whose index is looked for"}},"getMultipleLines":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>.<br>Gets current value of property {@link #getMultipleLines multipleLines}.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindItems":{"!description":"Binds aggregation {@link #getItems items} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo) -> sap.ui.mdc.MultiValueField","parameters":{"oBindingInfo":"type: sap.ui.base.ManagedObject.AggregationBindingInfo, description: The binding information"}},"getDataTypeFormatOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. The type in the binding to the <code>items<\/code> aggregation is used.<br>Gets current value of property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeFormatOptions<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn() -> Object"},"!description":"A <code>MultiValueField<\/code> control can hold multiple values. The values are stored as items. A <code>MultiValueField<\/code> control can be used to bind its items to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>MultiValueField<\/code> control as follows:\n\n<ul> <li>In display mode, usually a {@link sap.m.Tokenizer Tokenizer} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, an {@link sap.m.ExpandableText ExpandableText} control is rendered.<\/li> <li>In edit mode, usually a {@link sap.m.MultiInput MultiInput} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, a {@link sap.m.TextArea TextArea} control is rendered.<\/li> <\/ul>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.MultiValueField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMaxConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code> control.<br>This property must not be set for the <code>MultiValueField<\/code> control.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> sap.ui.mdc.MultiValueField","parameters":{"iMaxConditions":"type: int, description: More than 1 condition must be allowed in <code>MultiValueField<\/code>"}},"unbindItems":{"!description":"Unbinds aggregation {@link #getItems items} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.MultiValueField"},"setDataTypeFormatOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. The type in the binding to the <code>items<\/code> aggregation is used.<br>Sets a new value for property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeFormatOptions<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions: Object | undefined) -> sap.ui.mdc.MultiValueField","parameters":{"oDataTypeFormatOptions":"type: object|undefined, description: Format options to be set"}},"getConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 this property is not supported for the <code>MultiValueField<\/code>. Use the <code>items<\/code> aggregation to bind the control.<br>Gets current value of property {@link #getConditions conditions}.\n\nDo not use the <code>conditions<\/code> property, use the <code>items<\/code> aggregation instead.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.MultiValueField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.MultiValueField<\/code> itself.\n\nThis event is fired when the <code>items<\/code> aggregation of the field is changed by user interaction.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.MultiValueField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.MultiValueFieldItem]"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMultipleLines":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>.<br>Sets a new value for property {@link #getMultipleLines multipleLines}.","!static":false,"!category":"function","!type":"fn(bMultipleLines?: Boolean) -> sap.ui.mdc.MultiValueField","parameters":{"bMultipleLines":"type: boolean, description: New value for property <code>multipleLines<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/field/MultiValueFieldDelegate MultiValueFieldDelegate}.<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/field/MultiValueFieldDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"bindConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. Use the <code>items<\/code> aggregation to bind the control.<br>Binds property {@link #getConditions conditions} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of oBindingInfo\n\nDo not use the <code>conditions<\/code> property, use the <code>items<\/code> aggregation instead.","!static":false,"!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.PropertyBindingInfo) -> sap.ui.mdc.MultiValueField","parameters":{"oBindingInfo":"type: sap.ui.base.ManagedObject.PropertyBindingInfo, description: The binding information"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.MultiValueField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setDataType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. The type in the binding to the <code>items<\/code> aggregation is used.<br>Sets a new value for property {@link #getDataType dataType}. The type of data handled by the field. The type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the value of the <code>dataType<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn(sDataType: String | undefined) -> sap.ui.mdc.MultiValueField","parameters":{"sDataType":"type: string|undefined, description: DataType to be set"}},"!module":"sap/ui/mdc/MultiValueField","!helpDescription":"A <code>MultiValueField<\/code> control can hold multiple values. The values are stored as items. A <code>MultiValueField<\/code> control can be used to bind its items to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>MultiValueField<\/code> control as follows:\n\n<ul> <li>In display mode, usually a {@link sap.m.Tokenizer Tokenizer} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, an {@link sap.m.ExpandableText ExpandableText} control is rendered.<\/li> <li>In edit mode, usually a {@link sap.m.MultiInput MultiInput} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, a {@link sap.m.TextArea TextArea} control is rendered.<\/li> <\/ul>","setDataTypeConstraints":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. The type in the binding to the <code>items<\/code> aggregation is used.<br>Sets a new value for property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeConstraints<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints: Object | undefined) -> sap.ui.mdc.MultiValueField","parameters":{"oDataTypeConstraints":"type: object|undefined, description: Constraints to be set"}},"unbindConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. Use the <code>items<\/code> aggregation to bind the control.<br>Unbinds property {@link #getConditions conditions} from model data.\n\nDo not use the <code>conditions<\/code> property, use the <code>items<\/code> aggregation instead.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.MultiValueField"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.MultiValueFieldItem, iIndex: Number) -> sap.ui.mdc.MultiValueField","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.field.MultiValueFieldItem, description: The item to insert; if empty, nothing is inserted"}},"getDataTypeConstraints":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.93 this property is not supported for the <code>MultiValueField<\/code>. The type in the binding to the <code>items<\/code> aggregation is used.<br>Gets current value of property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeConstraints<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.field.TokenizerDisplay":{"!description":"The <code>TokenizerDisplay<\/code> control is used to render a Tokenizer inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.Tokenizer Tokenizer} control to support display only tokens.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenizerDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tokenizer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.TokenizerDisplay.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TokenizerDisplay<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEmptyIndicatorMode emptyIndicatorMode} : sap.m.EmptyIndicatorMode (default: Off)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tokenizer#constructor sap.m.Tokenizer}\ncan be used as well.","!module":"sap/ui/mdc/field/TokenizerDisplay","setEmptyIndicatorMode":{"!description":"Sets a new value for property {@link #getEmptyIndicatorMode emptyIndicatorMode}.\n\nSpecifies if an empty indicator should be displayed when there is no token.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Off<\/code>.","!static":false,"!category":"function","!type":"fn(sEmptyIndicatorMode?: sap.m.EmptyIndicatorMode) -> sap.ui.mdc.field.TokenizerDisplay","parameters":{"sEmptyIndicatorMode":"type: sap.m.EmptyIndicatorMode, description: New value for property <code>emptyIndicatorMode<\/code>"}},"!helpDescription":"The <code>TokenizerDisplay<\/code> control is used to render a Tokenizer inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.Tokenizer Tokenizer} control to support display only tokens.","!proto":"sap.m.Tokenizer","!category":"class","hasLabelableHTMLElement":{"!description":"Returns if the control can be bound to a label","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEmptyIndicatorMode":{"!description":"Gets current value of property {@link #getEmptyIndicatorMode emptyIndicatorMode}.\n\nSpecifies if an empty indicator should be displayed when there is no token.\n\nDefault value is <code>Off<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.EmptyIndicatorMode"}},"sap.ui.mdc.enum.PropagationReason":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ValueHelpPropagationReason}<br>Enumeration of the propagation reason in the condition propagation callback of the {@link sap.ui.mdc.ValueHelp ValueHelp}","!module":"sap/ui/mdc/enum/PropagationReason","Select":{"!description":"Triggered by <code>ValueHelp<\/code> itself on selection","!category":"enum","!type":"String"},"!category":"static class","ControlChange":{"!description":"Triggered by connected control after processing valuehelp output","!category":"enum","!type":"String"},"Info":{"!description":"Triggered by <code>ValueHelp<\/code> itself on <code>getItemForValue<\/code>","!category":"enum","!type":"String"}},"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.CollectiveSearchSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect"},"sap.ui.mdc.mixin.PropertyHelperMixin":{"!description":"Enhances a given control prototype with consolidated asynchronous handling for providing a PropertyHelper\n\nThe following methods are available:\n\n<ul> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>finalizePropertyHelper<\/code> - Finalizes the propertyHelper fetching all available propertyInfo via a given control delegate.<\/li> <li><code>isPropertyHelperFinal<\/code> - Indicates if the propertyHelper for this control allready contains all available propertyInfo.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <\/ul>","updatePropertyHelper":{"!description":"Provide a new set of properties for the propertyHelper.","!static":"true","!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>"},"finalizePropertyHelper":{"!description":"Finalize the propertyHelper using the control's delegate.","!static":"true","!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>"},"getPropertyHelper":{"!description":"Returns the property helper instance, if available.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.util.PropertyHelper"},"!module":"sap/ui/mdc/mixin/PropertyHelperMixin","!helpDescription":"Enhances a given control prototype with consolidated asynchronous handling for providing a PropertyHelper\n\nThe following methods are available:\n\n<ul> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>finalizePropertyHelper<\/code> - Finalizes the propertyHelper fetching all available propertyInfo via a given control delegate.<\/li> <li><code>isPropertyHelperFinal<\/code> - Indicates if the propertyHelper for this control allready contains all available propertyInfo.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <\/ul>","propertiesFinalized":{"!description":"Returns a promise for the finalized state of the property infos.","!static":"true","!category":"function","!type":"fn() -> [Promise<sap.ui.mdc.util.PropertyInfo]"},"isPropertyHelperFinal":{"!description":"Indicates if the control's propertyHelper already contains all available properties","!static":"true","!category":"function","!type":"fn() -> Boolean"},"!category":"namespace","awaitPropertyHelper":{"!description":"Provides access to the property helper initialization <code>Promise<\/code>.","!static":"true","!category":"function","!type":"fn() -> Promise<sap.ui.mdc.util.PropertyHelper>"},"initPropertyHelper":{"!description":"Loads and initializes the property helper related to the enhanced control.","!static":"true","!category":"function","!type":"fn(PropertyHelperClass?: sap.ui.mdc.util.PropertyHelper, aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>"}},"sap.ui.mdc.field.MultiValueFieldItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.MultiValueFieldItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.MultiValueFieldItem"},"sap.ui.mdc.table.ResponsiveTableType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.ResponsiveTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.ResponsiveTableType"},"sap.ui.mdc.FilterField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.FilterField"},"sap.ui.mdc.condition.ConditionValidateException_obj":{"!type":"fn(message: String, violatedConstraints?: [String], oCondition: sap.ui.mdc.condition.ConditionObject, aConditions: [sap.ui.mdc.condition.ConditionObject])","prototype":"sap.ui.mdc.condition.ConditionValidateException"},"sap.ui.mdc.filterbar.vh.FilterBar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124.0 Please use the <code>sap.ui.mdc.valuehelp.FilterBar<\/code> control instead.<br>The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Show Filters button shows the additional filter field.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link module:sap/ui/mdc/FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.<br> <b>Note:<\/b> The <code>FilterBar<\/code> can only be used for a {@link sap.ui.mdc.valuehelp.Dialog Dialog} and not on its own.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.FilterBar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.vh.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FilterBar<\/code> for a value help dialog.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.valuehelp.FilterBar#constructor sap.ui.mdc.valuehelp.FilterBar} can be used.","!module":"sap/ui/mdc/filterbar/vh/FilterBar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124.0 Please use the <code>sap.ui.mdc.valuehelp.FilterBar<\/code> control instead.<br>The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Show Filters button shows the additional filter field.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link module:sap/ui/mdc/FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.<br> <b>Note:<\/b> The <code>FilterBar<\/code> can only be used for a {@link sap.ui.mdc.valuehelp.Dialog Dialog} and not on its own.","!proto":"sap.ui.mdc.valuehelp.FilterBar","!category":"class"},"sap.ui.mdc.valuehelp.base.FilterableListContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.FilterableListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.FilterableListContent"},"sap.ui.mdc.chart.ChartImplementationContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.ChartImplementationContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chart.ChartImplementationContainer"},"sap.ui.mdc.IFilterSource":{"!description":"Interface for controls or entities which are able to return a set of present conditions. The controls or entities have to implement the following APIs: <code>getConditions<\/code>.","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.field.ConditionsType":{"!description":"This class represents a type that is used to map an array of conditions to a single-value control (such as {@link sap.m.Input Input} or {@link sap.m.Text Text} control).","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionsType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a Conditions type.","formatValue":{"!description":"Formats the given conditions to an output value of the given target type. These values are formatted using the given data type. Depending on the operator and the configuration (set in <code>FormatOptions<\/code>), a description will be determined by a given value help or delegate.","!static":false,"!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject], sTargetType: String) -> Object | Promise","parameters":{"sTargetType":"type: string, description: The target type; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types}. In addition to the standard target types, <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not formatted and just forwarded to the target. If the value is an array representing data for a <code>CompositeType<\/code>, the index of the needed raw value can be added to the name (For example, if a unit should be forwarded as raw value, <code>sap.ui.mdc.raw:1<\/code> can be used).","aConditions":"type: sap.ui.mdc.condition.ConditionObject[], description: The conditions to be formatted"}},"!module":"sap/ui/mdc/field/ConditionsType","!helpDescription":"This class represents a type that is used to map an array of conditions to a single-value control (such as {@link sap.m.Input Input} or {@link sap.m.Text Text} control).","_parseValueToIndex":{"!description":"Parses an external value of the given source type to an array of conditions that holds the value in model representation. These values are parsed using the given data type. Depending on the operator and the configuration (set in <code>FormatOptions<\/code>) a value will be determined by given value help or delegate.","!static":false,"!category":"function","!type":"fn(vValue: Object, sSourceType: String, iIndex: Number) -> [null | sap.ui.mdc.condition.ConditionObject[] | Promise<(null | sap.ui.mdc.condition.ConditionObject]","parameters":{"sSourceType":"type: string, description: The type of the given value; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard source types, <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not parsed and just used in the condition. If the value of the condition is an array representing data for a <code>CompositeType<\/code>, the index of the needed raw value can be added to the name (For example, if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","iIndex":"type: int, description: Index where new conditions should be inserted, if -1 they will just be added","vValue":"type: any, description: The value that is parsed"}},"!proto":"sap.ui.model.SimpleType","validateValue":{"!description":"Validates a given array of conditions. The values of the conditions are validated using the given data type.","!static":false,"!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject]) -> undefined | Promise","parameters":{"aConditions":"type: sap.ui.mdc.condition.ConditionObject[], description: The conditions that is validated"}},"!category":"class","parseValue":{"!description":"Parses an external value of the given source type to an array of conditions that holds the value in model representation. These values are parsed using the given data type. Depending on the operator and the configuration (set in <code>FormatOptions<\/code>), a value will be determined by a given value help or delegate.","!static":false,"!category":"function","!type":"fn(vValue: Object, sSourceType: String) -> [null | sap.ui.mdc.condition.ConditionObject[] | Promise<(null | sap.ui.mdc.condition.ConditionObject]","parameters":{"sSourceType":"type: string, description: The type of the given value; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard source types, <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not parsed and just used in the condition. If the value of the condition is an array representing data for a <code>CompositeType<\/code>, the index of the needed raw value can be added to the name (For example, if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","vValue":"type: any, description: The value that is parsed"}}},"sap.ui.mdc.condition.Condition":{"!description":"Utilities to create conditions to be used in {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.FilterBar FilterBar}.","!module":"sap/ui/mdc/condition/Condition","!helpDescription":"Utilities to create conditions to be used in {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.FilterBar FilterBar}.","!category":"namespace","createCondition":{"!description":"Creates a condition object.","!static":"true","!category":"function","!type":"fn(sOperator: String, aValues: [Object], oInParameters?: Object, oOutParameters?: Object, sValidated: sap.ui.mdc.enums.ConditionValidated, oPayload?: Object) -> sap.ui.mdc.condition.ConditionObject"},"compareConditions":{"!description":"Compares two conditions in detail\n\nOpposed to <code>FilterOperatorUtil.compareConditions<\/code> this comparison checks the whole condition object for equality except the {@link sap.ui.mdc.valuehelp.content.Conditions Conditions} specific <code>isEmpty<\/code> flag.","!static":"true","!category":"function","!type":"fn(oCondition1: undefined | sap.ui.mdc.condition.ConditionObject, oCondition2: undefined | sap.ui.mdc.condition.ConditionObject) -> Boolean"},"createItemCondition":{"!description":"Creates a condition instance for a condition representing a item chosen from the value help.\n\nThis is a \"equal to\" (EQ) condition with key and description. It is used for entries selected in the field help and for everything entered in the {@link sap.ui.mdc.Field Field} control.","!static":"true","!category":"function","!type":"fn(vKey: Object, sDescription: String, oInParameters?: Object, oOutParameters?: Object, oPayload?: Object) -> sap.ui.mdc.condition.ConditionObject"}},"sap.ui.mdc.enum.OperatorOverwrite":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.OperatorOverwrite}<br>Enumeration of the <code>OperatorOverwrite<\/code> in <code>Operator<\/code>.","!module":"sap/ui/mdc/enum/OperatorOverwrite","getModelFilter":{"!description":"Overwrite the <code>getModelFilter<\/code> function of the operator.","!category":"enum","!type":"String"},"!category":"static class","getLongText":{"!description":"Overwrite the <code>getTypeText<\/code> function of the operator.","!category":"enum","!type":"String"}},"sap.ui.mdc.GrowingMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.TableGrowingMode}<br>Defines the growing options of the responsive table.","Basic":{"!description":"Basic growing takes place (<code>growing<\/code> is set in the responsive table)","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Scroll":{"!description":"Growing with <code>scroll<\/code> takes place (<code>growing<\/code> and <code>growingScrollToLoad<\/code> are set in the responsive table)","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"Growing does not take place (<code>growing<\/code> is not set in the responsive table)","!category":"enum","!type":"String"}},"module:sap/ui/mdc/field/FieldBaseDelegate":{"!description":"Delegate for {@link sap.ui.mdc.field.FieldBase FieldBase}.<br>","isInputMatchingText":{"!description":"Checks if entered text matches text found from value help\n\nThis function is called during a user's type-ahead into a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control.\n\nBy Default this method checks if the text starts with the user input. Depending of the <code>bCaseSensitive<\/code> parameter this check is performed case sensitive.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, sUserInput: String, sText: String, bDescription: Boolean, bCaseSensitive: Boolean) -> Boolean"},"createContent":{"!description":"Provides the possibility to customize / replace the internal content of a field <br/>By default, this method returns suitable controls for the given {@link sap.ui.mdc.enums.BaseType BaseType}, {@link sap.ui.mdc.field.FieldBase#setMaxConditions maxConditions} and {@link sap.ui.mdc.enums.ContentMode ContentMode}.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> The returned controls must implement {@link sap.ui.core.IFormContent IFormContent}. Other controls might lead to layouting or usabillity issues.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, sContentMode: sap.ui.mdc.enums.ContentMode, sId: String, bProvideDefaultValueHelp: Boolean) -> [Promise<sap.ui.core.Element]"},"isInputValidationEnabled":{"!description":"Defines if the input of the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control is checked to determine the key and description. <br/>By default, this method checks if the assigned {@link sap.ui.mdc.ValueHelp ValueHelp} supports input validation.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, oValueHelp: sap.ui.mdc.ValueHelp) -> Boolean"},"createConditionPayload":{"!description":"Provides the possibility to convey custom data in conditions. This enables an application to enhance conditions with data relevant for combined key or out parameter scenarios.","!category":"function","!type":"fn(aValues: [Object]) -> undefined | Object"},"getAutocompleteOutput":{"!description":"Determines the text for the autocomplete functionality.\n\nThis function is called during a user's type-ahead into a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control.\n\nThe returned text will be shown as selected after the user input ends.\n\nBy default this method uses the {@link sap.ui.mdc.field.FieldBase#getDisplay display} property of the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control to determine what text (key or description) is used as autocomplete-text. A text is only used if it matches the user input. If set to <code>Value<\/code>, the key is used. If set to <code>Description<\/code>, the description is used. If set to <code>ValueDescription<\/code>, the key is used, if it maps, otherwise the description. If set to <code>DescriptionValue<\/code>, the description is used, if it maps, otherwise the key.\n\n<b>Note:<\/b> Whatever this function returns, the user input will not be overwritten, only the text after the user input will be added and shown as selected. Otherwise the cursor position might change or the user input changes while typing what would lead to confusion.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, oCondition: sap.ui.mdc.condition.ConditionObject, sKey: String, sDescription: String, bKeyMatch: Boolean, bDescriptionMatch: Boolean) -> String | Boolean"},"!category":"namespace","createCondition":{"!description":"Enables applications to control condition updates based on <code>value<\/code> / <code>additionalvalue<\/code> property changes. <br/>By default, this method returns a condition with an <code>EQ<\/code> operator.\n\n<b>Note:<\/b> Custom implementations of this method may lead to intransparency as a field's condition may then differ from the state of the <code>value<\/code> / <code>additionalvalue<\/code> properties. Avoid expensive operations, as this can delay the rendering of the output.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, oControl?: sap.ui.core.Control, aValues: [Object], oCurrentCondition: undefined | sap.ui.mdc.condition.ConditionObject) -> undefined | sap.ui.mdc.condition.ConditionObject"},"isInvalidInputAllowed":{"!description":"Defines if input of the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control is accepted, even if it cannot be found in the assigned {@link sap.ui.mdc.ValueHelp ValueHelp} or custom logic of {@link module:sap/ui/mdc/FieldBaseDelegate.getItemForValue getItemForValue}. <br/>By default, this method checks if the {@link sap.ui.mdc.ValueHelp#validateInput validateInput} property of the assigned {@link sap.ui.mdc.ValueHelp ValueHelp} is set.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, oValueHelp: sap.ui.mdc.ValueHelp) -> Boolean"},"parsePasteDataToConditions":{"!description":"Enables applications to control condition updates based on pasted values. <br/>By default, this method returns conditions with an <code>EQ<\/code> operator without using the description, as it does not ensure the description is valid.\n\n<b>Note:<\/b> Returned values can either be strings which should be parsed by the ConditionType itself or pre-created conditions.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, aParsedData: Array<{value:string,additionalValue:string}>, oSettings: Object) -> Array<(sap.ui.mdc.condition.ConditionObject | string)> | Promise<array<(sap.ui.mdc.condition.ConditionObject | string)>>"},"getDescription":{"!description":"Determines the description for a given key. <br/>By default, this method calls the {@link sap.ui.mdc.ValueHelp#getItemForValue getItemForValue} function of the assigned {@link sap.ui.mdc.ValueHelp ValueHelp}.\n\nThis function is called while formatting the output of a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control if a description should be displayed but only a key is given.\n\nIf this needs to be determined asynchronously, a <code>Promise<\/code> is returned.\n\nAs the key might change (uppercase), an object with key and description can be returned.\n\nIf the description cannot be determined, a corresponding {@link sap.ui.model.FormatException FormatException} is thrown.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, oValueHelp: sap.ui.mdc.ValueHelp, vKey: Object, oInParameters: Object, oOutParameters: Object, oBindingContext: sap.ui.model.Context, oDoNotUse?: undefined, sDoNotUse?: undefined, oConditionPayload: Object, oControl: sap.ui.core.Control, oType: sap.ui.model.Type) -> String | sap.ui.mdc.valuehelp.base.ValueHelpItem | Promise<(string | sap.ui.mdc.valuehelp.base.ValueHelpItem)>"},"!module":"sap/ui/mdc/field/FieldBaseDelegate","getItemForValue":{"!description":"Determines the key, description, and payload of a user input. <br/>By default, this method calls the {@link sap.ui.mdc.ValueHelp#getItemForValue getItemForValue} function of the assigned {@link sap.ui.mdc.ValueHelp ValueHelp}.\n\nIf this needs to be determined asynchronously, a <code>Promise<\/code> is returned.\n\nIf the item cannot be determined, a corresponding {@link sap.ui.model.ParseException ParseException} is thrown.","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, oValueHelp: sap.ui.mdc.ValueHelp, oConfig?: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration) -> sap.ui.mdc.valuehelp.base.ValueHelpItem | Promise<sap.ui.mdc.valuehelp.base.ValueHelpItem>"},"!helpDescription":"Delegate for {@link sap.ui.mdc.field.FieldBase FieldBase}.<br>","indexOfCondition":{"!description":"Returns the index of a condition in an array of conditions.\n\nThis function is called when a <code>Condition<\/code> is created by user input or value help selection to determine if a similar <code>Condition<\/code> already exists. This is done to prevent duplicates.\n\nBy default, if a <code>ValueHelp<\/code> exists, the <code>ValueHelp<\/code> logic is used to compare each condition. (See {@link module:sap/ui/mdc/ValueHelpDelegate.compareConditions ValueHelpDelegate.compareConditions})","!category":"function","!type":"fn(oField: sap.ui.mdc.field.FieldBase, oValueHelp: sap.ui.mdc.ValueHelp, oCondition: sap.ui.mdc.condition.ConditionObject, aConditions: [sap.ui.mdc.condition.ConditionObject]) -> Number"},"module:sap/ui/mdc/field/FieldBaseDelegate":"module:sap/ui/mdc/field/FieldBaseDelegate"},"sap.ui.mdc.filterbar.p13n.AdaptationFilterBar":{"!description":"The <code>AdaptationFilterBar<\/code> control is used for a lightweight {@link sap.ui.mdc.FilterBar FilterBar} control implementation for p13n use cases. The <code>AdaptationFilterBar<\/code> should only be used if the consuming control implements at least the <code>IFilterSource<\/code> interface to provide basic filter functionality.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.p13n.AdaptationFilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.filterbar.FilterBarBase","!category":"class","_getAdaptationControlInstance":{"!description":"Returns an instance of the associated adaptation control, if available.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Control"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.filterbar.p13n.AdaptationFilterBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.p13n.AdaptationFilterBar<\/code> itself.\n\nEvent which is only being thrown if the inner layout has a <code>change<\/code> event. This depends whether the inner layout supports the selection of FilterFields.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.p13n.AdaptationFilterBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.p13n.AdaptationFilterBar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getWidth":{"!description":"Getter for the fixed width of the <code>AdaptationFilterBar<\/code>","!static":false,"!category":"function","!type":"fn() -> String"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.p13n.AdaptationFilterBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.filterbar.p13n.AdaptationFilterBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.p13n.AdaptationFilterBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.p13n.AdaptationFilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getAdaptationControl":{"!description":"ID of the element which is the current target of the association {@link #getAdaptationControl adaptationControl}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!constructorDescription":"Constructor for a new AdaptationFilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #get_useFixedWidth _useFixedWidth} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAdaptationControl adaptationControl} : (sap.ui.core.ID | sap.ui.mdc.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.filterbar.FilterBarBase#constructor sap.ui.mdc.filterbar.FilterBarBase}\ncan be used as well.","!module":"sap/ui/mdc/filterbar/p13n/AdaptationFilterBar","!helpDescription":"The <code>AdaptationFilterBar<\/code> control is used for a lightweight {@link sap.ui.mdc.FilterBar FilterBar} control implementation for p13n use cases. The <code>AdaptationFilterBar<\/code> should only be used if the consuming control implements at least the <code>IFilterSource<\/code> interface to provide basic filter functionality."},"sap.ui.mdc.valuehelp.base.IDialogContent":{"!description":"Interface for valuehelp containers / contents supporting dialog functionality","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.enums.ValueHelpSelectionType":{"!description":"Enumeration of the possible selection types in {@link sap.ui.mdc.ValueHelp ValueHelp}","Add":{"!description":"The given conditions are just added to the existing ones, if they don't already exist.","!category":"enum","!type":"String"},"Set":{"!description":"The given conditions are set and replace the existing ones.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/ValueHelpSelectionType","!category":"static class","Remove":{"!description":"The given conditions are removed.","!category":"enum","!type":"String"}},"module:sap/ui/mdc/odata/v4/TableDelegate":{"!description":"Base delegate for {@link sap.ui.mdc.Table} and <code>ODataV4<\/code>. Extend this object in your project to use all functionalities of the table. For more information, please see {@link module:sap/ui/mdc/TableDelegate}.\n\nData aggregation is enabled if the table type is {@link sap.ui.mdc.table.GridTableType GridTable}, and at least one of the following conditions is fulfilled: <ul> <li><code>p13nMode<\/code> <code>Group<\/code> is enabled<\/li> <li><code>p13nMode<\/code> <code>Aggregate<\/code> is enabled<\/li> <li>The table has group conditions<\/li> <li>The table has aggregate conditions<\/li> <\/ul>\n\nData aggregation can be configured via the delegate payload by providing <code>aggregationConfiguration<\/code>. See {@link sap.ui.mdc.odata.v4.TableDelegate.Payload} for details.\n\n<i>Sample delegate object:<\/i> <pre>{\n\tname: \"my/delegate/extending/sap/ui/mdc/odata/v4/TableDelegate\",\n\tpayload: {\n\t\taggregationConfiguration: {\n\t\t\tleafLevel: true\n\t\t},\n\t\t...\n\t}\n}<\/pre>\n\nIf data aggregation is enabled, the following restrictions apply: <ul> <li>Only properties that are technically groupable or technically aggregatable are loaded from the back end. See {@link sap.ui.mdc.odata.v4.TableDelegate.PropertyInfo} for more information about properties.<\/li> <li>The path of a property must not contain a <code>NavigationProperty<\/code>.<\/li> <\/ul>\n\n<b>Note:<\/b> This base delegate supports the <code>p13nMode<\/code> <code>Aggregate<\/code> only if the table type is {@link sap.ui.mdc.table.GridTableType GridTable}. The <code>p13nMode<\/code> <code>Group<\/code> is not supported if the table type is {@link sap.ui.mdc.table.TreeTableType TreeTable}. This cannot be changed in your delegate implementation.","!module":"sap/ui/mdc/odata/v4/TableDelegate","!helpDescription":"Base delegate for {@link sap.ui.mdc.Table} and <code>ODataV4<\/code>. Extend this object in your project to use all functionalities of the table. For more information, please see {@link module:sap/ui/mdc/TableDelegate}.\n\nData aggregation is enabled if the table type is {@link sap.ui.mdc.table.GridTableType GridTable}, and at least one of the following conditions is fulfilled: <ul> <li><code>p13nMode<\/code> <code>Group<\/code> is enabled<\/li> <li><code>p13nMode<\/code> <code>Aggregate<\/code> is enabled<\/li> <li>The table has group conditions<\/li> <li>The table has aggregate conditions<\/li> <\/ul>\n\nData aggregation can be configured via the delegate payload by providing <code>aggregationConfiguration<\/code>. See {@link sap.ui.mdc.odata.v4.TableDelegate.Payload} for details.\n\n<i>Sample delegate object:<\/i> <pre>{\n\tname: \"my/delegate/extending/sap/ui/mdc/odata/v4/TableDelegate\",\n\tpayload: {\n\t\taggregationConfiguration: {\n\t\t\tleafLevel: true\n\t\t},\n\t\t...\n\t}\n}<\/pre>\n\nIf data aggregation is enabled, the following restrictions apply: <ul> <li>Only properties that are technically groupable or technically aggregatable are loaded from the back end. See {@link sap.ui.mdc.odata.v4.TableDelegate.PropertyInfo} for more information about properties.<\/li> <li>The path of a property must not contain a <code>NavigationProperty<\/code>.<\/li> <\/ul>\n\n<b>Note:<\/b> This base delegate supports the <code>p13nMode<\/code> <code>Aggregate<\/code> only if the table type is {@link sap.ui.mdc.table.GridTableType GridTable}. The <code>p13nMode<\/code> <code>Group<\/code> is not supported if the table type is {@link sap.ui.mdc.table.TreeTableType TreeTable}. This cannot be changed in your delegate implementation.","!category":"namespace","fetchProperties":{"!description":"Retrieves information about the relevant properties.\n\nBy default, this method returns a <code>Promise<\/code> that resolves with an empty array.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> [Promise<sap.ui.mdc.odata.v4.TableDelegate.PropertyInfo]"},"getPropertyHelperClass":{"!description":"Gets the model-specific <code>PropertyHelper<\/code> class to create an instance of.","!category":"function","!type":"fn() -> sap.ui.mdc.table.V4AnalyticsPropertyHelper"},"getInResultPropertyKeys":{"!description":"Returns the keys of properties that should always be included in the result of the collection requested from the back end. This information is applied when updating the table's binding.\n\nBy default, this method returns an empty array.\n\n<b>Note:<\/b> If properties are provided in the table's {@link sap.ui.mdc.Table propertyInfo} property, the properties whose keys are returned by this method must be included, otherwise they may not be in included the result.<br> The path of a property must not be empty.<br> If a property is complex, the properties it references are taken into account.<br> If <code>autoExpandSelect<\/code> of the {@link sap.ui.model.odata.v4.ODataModel} is not enabled, this method must return an empty array. See also the restrictions in the description of the {@link module:sap/ui/mdc/odata/v4/TableDelegate TableDelegate} if data aggregation is enabled.<br> For more information about properties, see {@link sap.ui.mdc.odata.v4.TableDelegate.PropertyInfo PropertyInfo}.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> [String]"},"updateBinding":{"!description":"Updates the binding of the table with the binding info object returned from {@link module:sap/ui/mdc/TableDelegate.updateBindingInfo updateBindingInfo}. If an update is not possible, it rebinds the table.\n\nCompares the current and previous state of the table to detect whether rebinding is necessary. The diffing is done for the sorters, filters, aggregation, parameters, and the path of the binding. Other {@link sap.ui.base.ManagedObject.AggregationBindingInfo binding info} keys, such as <code>events<\/code> or <code>model<\/code>, must be provided in <code>updateBindingInfo<\/code>, and those keys must not be changed conditionally.\n\n<b>Note:<\/b> To remove a binding info parameter, the value must be set to <code>undefined<\/code> in <code>updateBindingInfo<\/code>. For more information, see {@link sap.ui.model.odata.v4.ODataListBinding#changeParameters}.","!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo, oBinding?: sap.ui.model.ListBinding, mSettings: Object)"},"module:sap/ui/mdc/odata/v4/TableDelegate":"module:sap/ui/mdc/odata/v4/TableDelegate"},"sap.ui.mdc.table":{"fixedColumnCount":{"!description":"Defines the number of fixed columns.","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"type":{"!description":"Type of the row action item.\n\nSetting the type ensures default values for the properties <code>icon<\/code> and <code>text<\/code>. If an icon or text is set explicitly, this setting is used.","!category":"enum","!type":"sap.ui.mdc.enums.TableRowActionType"},"ResponsiveTableType":"sap.ui.mdc.table.ResponsiveTableType_obj","required":{"!description":"Indicates whether the content of the column is required. <b>Note:<\/b> The table only takes care of announcing the state of the column header as defined by the <code>required<\/code> property. The application needs to take care of the screen reader announcement of the state of the table cells, for example, by setting the <code>required<\/code> property to <code>true<\/code> for <code>sap.m.Input<\/code>.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"DragDropConfig":"sap.ui.mdc.table.DragDropConfig_obj","text":{"!description":"Text for the row action item.\n\n<b>Note:<\/b> A custom text cannot be set when the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}.","!category":"enum","!type":"String"},"scrollThreshold":{"!description":"Number of records to be requested from the model when the user scrolls through the table.\n\nThe property defines how many additional (not yet visible) data records from the back-end system are pre-fetched during scrolling. If the <code>scrollThreshold<\/code> is lower than the number of visible rows, the number of visible rows is used as the <code>scrollThreshold<\/code>. If the value is 0, thresholding is disabled.\n\n<b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the <code>threshold<\/code> property is used.","!category":"enum","!type":"Number"},"propertyKey":{"!description":"Defines data property related to the column.","!category":"enum","!type":"String"},"selectionLimit":{"!description":"Number of indices which can be selected in a range. Accepts positive integer values. If set to 0, the selection limit is disabled, and the Select All checkbox appears instead of the Deselect All button.\n\n<b>Note:<\/b> To avoid severe performance problems, the limit should only be set to 0 in the following cases: <ul> <li>With client-side models<\/li> <li>With server-side models if they are used in client mode<\/li> <li>If the entity set is small<\/li> <\/ul>\n\nIn other cases, we recommend to set the limit to at least double the value of the {@link sap.ui.mdc.Table#getThreshold threshold} property of the table.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the item should be visible on the screen.","!category":"enum","!type":"Boolean"},"TableTypeBase":"sap.ui.mdc.table.TableTypeBase_obj","growingMode":{"!description":"Specifies the growing mode.","!category":"enum","!type":"sap.ui.mdc.enums.TableGrowingMode"},"groupName":{"!description":"Defines the name of the group to which this object belongs. If <code>groupName<\/code> is specified, then this object will only interacts with other drag-and-drop objects within the same group.","!category":"enum","!type":"String"},"TreeTableType":"sap.ui.mdc.table.TreeTableType_obj","GridTableType":"sap.ui.mdc.table.GridTableType_obj","header":{"!description":"Defines the column header text.","!category":"enum","!type":"String"},"showHeaderSelector":{"!description":"Determines whether the header selector is shown.","!category":"enum","!type":"Boolean"},"RowSettings":"sap.ui.mdc.table.RowSettings_obj","RowActionItem":"sap.ui.mdc.table.RowActionItem_obj","hAlign":{"!description":"Defines the horizontal alignment of the column content.","!category":"enum","!type":"sap.ui.core.HorizontalAlign"},"importance":{"!description":"Defines the column importance.\n\nColumns are moved to the pop-in area in the following order: <ul> <li>With importance <code>High<\/code>: moved last<\/li> <li>With importance <code>Medium<\/code> or <code>None<\/code>: moved second<\/li> <li>With importance <code>Low<\/code>: moved first<\/li> <\/ul>","!category":"enum","!type":"sap.ui.core.Priority"},"icon":{"!description":"Icon for the row action item.\n\n<b>Note:<\/b> A custom icon cannot be set when the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}.","!category":"enum","!type":"sap.ui.core.URI"},"dropPosition":{"!description":"Defines the position for the drop action, visualized by a rectangle.","!category":"enum","!type":"sap.ui.core.dnd.DropPosition"},"!category":"namespace","navigated":{"!description":"The navigated state of a row. The navigation indicator is displayed at the end of a row.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Indicates whether this configuration is active or not.","!category":"enum","!type":"Boolean"},"highlightText":{"!description":"Defines the semantics of the {@link sap.ui.mdc.table.RowSettings#setHighlight highlight} property for accessibility purposes.","!category":"enum","!type":"String"},"detailsButtonSetting":{"!description":"Defines which columns are hidden instead of moved into the pop-in area depending on their importance. See {@link sap.ui.mdc.table.ResponsiveColumnSettings#getImportance} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton<\/code> to <code>true<\/code>.<br> If no importance is given, a device-dependent default configuration is used.<br> If this property is changed after the table has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.","!category":"enum","!type":"[sap.ui.core.Priority]"},"highlight":{"!description":"The highlight state of the rows.\n\nIf the highlight is set to {@link sap.ui.core.MessageType sap.ui.core.MessageType.None} (default), no highlights are visible. Valid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor} (only values of <code>Indication01<\/code> to <code>Indication10<\/code> are supported for accessibility contrast reasons).\n\nAccessibility support is provided with the {@link sap.ui.mdc.table.RowSettings#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"draggable":{"!description":"Determines whether the rows of the table are draggable.\n\n<b>Note:<\/b> Setting this property to <code>true<\/code> may expose the rows of the table in other <code>DropInfo<\/code> event parameters. In this case, only the binding context of the row is allowed to be used. Internal controls and their types are subject to change without notice.","!category":"enum","!type":"Boolean"},"Column":"sap.ui.mdc.table.Column_obj","busy":{"!description":"Determines whether the <code>sap.ui.mdc.table.CreationRow<\/code> and its inner control are in a busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"rowCount":{"!description":"Row count of the inner table.<br> This property specifies the minimum row count if <code>sap.ui.mdc.enums.TableRowCountMode.Auto<\/code> is used.<br> This property specifies the row count if <code>sap.ui.mdc.enums.TableRowCountMode.Interactive<\/code> or <code>sap.ui.mdc.enums.TableRowCountMode.Fixed<\/code> is used.<br>","!category":"enum","!type":"Number"},"headerVisible":{"!description":"Defines whether the column header is visible.","!category":"enum","!type":"Boolean"},"ResponsiveColumnSettings":"sap.ui.mdc.table.ResponsiveColumnSettings_obj","mergeFunction":{"!description":"Defines the control serialization function to merge duplicate cells into one cell block. This function is used to compare values of two cells.\n\n<b>Note:<\/b> Don't set this property for cells for which the content provides a user interaction, such as <code>sap.m.Link<\/code>.","!category":"enum","!type":"String"},"popinLayout":{"!description":"Defines the layout in which the table pop-in rows are rendered.","!category":"enum","!type":"sap.m.PopinLayout"},"ColumnSettings":"sap.ui.mdc.table.ColumnSettings_obj","applyEnabled":{"!description":"If set to <code>false<\/code>, the {@link #event:apply apply} event is not fired. The corresponding keyboard shortcut and the apply button of the toolbar are disabled.","!category":"enum","!type":"Boolean"},"minWidth":{"!description":"Defines the minimum width of the column. This property only takes effect if the column has a flexible <code>width<\/code>, for example, a percentage value. The user can resize the column to a smaller width if {@link sap.ui.mdc.Table#getEnableColumnResize column resizing} is enabled in the table.\n\n<b>Note:<\/b> If the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, the property is used to influence the pop-in behavior: If the accumulated width of all columns is bigger than the width of the table, then the least important column is moved into the pop-in area. For more information, see {@link sap.ui.mdc.table.ResponsiveColumnSettings#getImportance ResponsiveColumnSettings}.","!category":"enum","!type":"Number"},"CreationRow":"sap.ui.mdc.table.CreationRow_obj","droppable":{"!description":"Determines whether the rows of the table are droppable.","!category":"enum","!type":"Boolean"},"keyboardHandling":{"!description":"Indicates limited keyboard handling support for drag-and-drop configurations defined for aggregation reordering.\n\n<b>Note:<\/b> If the drag-and-drop configuration is defined for the aggregation reordering of a control (only if the <code>dropPosition<\/code> property is <code>Between<\/code>), the <code>Ctrl/Cmd + Left/Right<\/code> keys for horizontal move or the <code>Ctrl/Cmd + Up/Down<\/code> keys for vertical move trigger a series of pseudo drag-and-drop events, such as <code>dragstart, dragenter, drop, dragend<\/code>, to create an artificial drag-and-drop action. This keyboard handling might not be suitable for every control where aggregation reordering is defined, and in such cases, this property must not be set to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"dropEffect":{"!description":"Defines the visual drop effect.","!category":"enum","!type":"sap.ui.core.dnd.DropEffect"},"rowCountMode":{"!description":"Defines how the table handles the row count.","!category":"enum","!type":"sap.ui.mdc.enums.TableRowCountMode"},"dataProperty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 Please use <code>propertyKey<\/code> instead.<br>Defines data property related to the column.","!category":"enum","!type":"String"},"width":{"!description":"Defines the width of the column.","!category":"enum","!type":"sap.ui.core.CSSSize"},"showDetailsButton":{"!description":"Specifies whether the Show / Hide Details button is shown.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area, while the columns with <code>Low<\/code> importance are hidden.<br> On mobile phones, the columns with <code>Medium<\/code> importance are also hidden.<br> As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.TableType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.TableType}<br>Defines the type of table used in the MDC table.","Table":{"!description":"Grid table ({@link sap.ui.table.Table} control) is used (default)","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class","ResponsiveTable":{"!description":"Responsive table ({@link sap.m.Table} control) is used.","!category":"enum","!type":"String"}},"sap.ui.mdc.enum.ConditionValidated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ConditionValidated}<br>Enumeration of the validated state of conditions\n\nIf a <code>Condition<\/code> is chosen from a field help or validated against a field help it is set to be validated. In this case the corresponding item in the value help is shown as selected.\n\nIf the validated state of the <code>Condition<\/code> is undefined this means it is not defined if it is validated or not.","Validated":{"!description":"Condition is validated","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/ConditionValidated","NotValidated":{"!description":"Condition is not validated","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.valuehelp.Popover":{"!description":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a popover.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Popover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.Popover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getOpensOnClick":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121.0 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.shouldOpenOnClick shouldOpenOnClick}<br>Gets current value of property {@link #getOpensOnClick opensOnClick}.\n\nControls the possibility to open this popover container by clicking on a connected control, even if no content enforces it.\n\n<b>Note:<\/b> By default, a type-ahead is only shown to provide suggestions when users enter input in a connected control. This property enables scenarios where popovers need to be shown earlier (for example, recommendations or recently entered values). See also {@link module:sap/ui/mdc/ValueHelpDelegate.showTypeahead showTypeahead}\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>Popover<\/code> container.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOpensOnClick opensOnClick} : boolean (default: false)<\/li>\n<li>{@link #getOpensOnFocus opensOnFocus} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.Container#constructor sap.ui.mdc.valuehelp.base.Container}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/Popover","!helpDescription":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a popover.","!proto":"sap.ui.mdc.valuehelp.base.Container","getOpensOnFocus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121.0 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.shouldOpenOnFocus shouldOpenOnFocus}<br>Gets current value of property {@link #getOpensOnFocus opensOnFocus}.\n\nControls the possibility to open this popover container by focussing on a connected control.\n\n<b>Note:<\/b> By default, a type-ahead is only shown to provide suggestions when users enter input in a connected control. This property enables scenarios where popovers need to be shown earlier (for example, recommendations or recently entered values). See also {@link module:sap/ui/mdc/ValueHelpDelegate.showTypeahead showTypeahead}\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setOpensOnFocus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121.0 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.shouldOpenOnFocus shouldOpenOnFocus}<br>Sets a new value for property {@link #getOpensOnFocus opensOnFocus}.\n\nControls the possibility to open this popover container by focussing on a connected control.\n\n<b>Note:<\/b> By default, a type-ahead is only shown to provide suggestions when users enter input in a connected control. This property enables scenarios where popovers need to be shown earlier (for example, recommendations or recently entered values). See also {@link module:sap/ui/mdc/ValueHelpDelegate.showTypeahead showTypeahead}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bOpensOnFocus?: Boolean) -> sap.ui.mdc.valuehelp.Popover","parameters":{"bOpensOnFocus":"type: boolean, description: New value for property <code>opensOnFocus<\/code>"}},"setOpensOnClick":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.121.0 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.shouldOpenOnClick shouldOpenOnClick}<br>Sets a new value for property {@link #getOpensOnClick opensOnClick}.\n\nControls the possibility to open this popover container by clicking on a connected control, even if no content enforces it.\n\n<b>Note:<\/b> By default, a type-ahead is only shown to provide suggestions when users enter input in a connected control. This property enables scenarios where popovers need to be shown earlier (for example, recommendations or recently entered values). See also {@link module:sap/ui/mdc/ValueHelpDelegate.showTypeahead showTypeahead}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bOpensOnClick?: Boolean) -> sap.ui.mdc.valuehelp.Popover","parameters":{"bOpensOnClick":"type: boolean, description: New value for property <code>opensOnClick<\/code>"}}},"sap.ui.mdc.enums.ActionToolbarActionAlignment":{"!description":"Defines the alignment of the <code>ActionToolbarAction<\/code> action control.","!module":"sap/ui/mdc/enums/ActionToolbarActionAlignment","Begin":{"!description":"Align to the beginning","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"Align to the end","!category":"enum","!type":"String"}},"sap.ui.mdc.enum.OperatorValueType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.OperatorValueType}<br>Defines what data type is used for parse or format the condition values on a {@link sap.ui.mdc.condition.Operator Operator}.","!module":"sap/ui/mdc/enum/OperatorValueType","!category":"static class","Self":{"!description":"The <code>Type<\/code> of the <code>Field<\/code> or <code>FilterField<\/code> using the <code>Operator<\/code> is used.","!category":"enum","!type":"String"},"Static":{"!description":"A simple string type is used to display static text.","!category":"enum","!type":"String"},"SelfNoParse":{"!description":"The <code>Type<\/code> of the <code>Field<\/code> or <code>FilterField<\/code> using the <code>Operator<\/code> is used for validation, but the user input is used as value.","!category":"enum","!type":"String"}},"sap.ui.mdc.table.CreationRow":{"!description":"Row that allows the user to enter data in a row-shaped form if the {@link sap.ui.mdc.enums.TableType TableType} is \"<code>Table<\/code>\". The form elements are aligned with the columns of the table and are created automatically based on the {@link sap.ui.mdc.table.Column#getCreationTemplate creationTemplate} aggregation of the {@link sap.ui.mdc.table.Column}.","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nVisibility of the <code>CreationRow<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.mdc.table.CreationRow","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.CreationRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nVisibility of the <code>CreationRow<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:apply apply} event of this <code>sap.ui.mdc.table.CreationRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.CreationRow<\/code> itself.\n\nThe event is fired when the corresponding keyboard shortcut or the apply button of the toolbar are pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.CreationRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.CreationRow<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setApplyEnabled":{"!description":"Sets a new value for property {@link #getApplyEnabled applyEnabled}.\n\nIf set to <code>false<\/code>, the {@link #event:apply apply} event is not fired. The corresponding keyboard shortcut and the apply button of the toolbar are disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bApplyEnabled?: Boolean) -> sap.ui.mdc.table.CreationRow","parameters":{"bApplyEnabled":"type: boolean, description: New value for property <code>applyEnabled<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","getApplyEnabled":{"!description":"Gets current value of property {@link #getApplyEnabled applyEnabled}.\n\nIf set to <code>false<\/code>, the {@link #event:apply apply} event is not fired. The corresponding keyboard shortcut and the apply button of the toolbar are disabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.CreationRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireApply":{"!description":"Fires event {@link #event:apply apply} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getBusy":{"!description":"Gets current value of property {@link #getBusy busy}.\n\nDetermines whether the <code>sap.ui.mdc.table.CreationRow<\/code> and its inner control are in a busy state.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>CreationRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getApplyEnabled applyEnabled} : boolean (default: true)<\/li>\n<li>{@link #getBusy busy} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:apply apply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/table/CreationRow","!helpDescription":"Row that allows the user to enter data in a row-shaped form if the {@link sap.ui.mdc.enums.TableType TableType} is \"<code>Table<\/code>\". The form elements are aligned with the columns of the table and are created automatically based on the {@link sap.ui.mdc.table.Column#getCreationTemplate creationTemplate} aggregation of the {@link sap.ui.mdc.table.Column}.","detachApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:apply apply} event of this <code>sap.ui.mdc.table.CreationRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.CreationRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}}},"module:sap/ui/mdc/odata/v4/ChartDelegate":{"!description":"Delegate class for {@link sap.ui.mdc.Chart Chart} and ODataV4.<br> This class provides method calls, which are called by the <code>Chart<\/code> at specific operations and allows to overwrite an internal behaviour.","!module":"sap/ui/mdc/odata/v4/ChartDelegate","!helpDescription":"Delegate class for {@link sap.ui.mdc.Chart Chart} and ODataV4.<br> This class provides method calls, which are called by the <code>Chart<\/code> at specific operations and allows to overwrite an internal behaviour.","module:sap/ui/mdc/odata/v4/ChartDelegate":"module:sap/ui/mdc/odata/v4/ChartDelegate","!category":"namespace"},"sap.ui.mdc.field.content.TimeContent":{"!description":"Object-based definition of the time content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!module":"sap/ui/mdc/field/content/TimeContent","!helpDescription":"Object-based definition of the time content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!category":"namespace"},"sap.ui.mdc.enums.TableP13nMode":{"!description":"Personalization mode of the table.","Group":{"!description":"The table can be grouped","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/TableP13nMode","Column":{"!description":"Columns can be shown, hidden and reordered","!category":"enum","!type":"String"},"Filter":{"!description":"The table can be filtered","!category":"enum","!type":"String"},"Sort":{"!description":"The table can be sorted","!category":"enum","!type":"String"},"!category":"static class","Aggregate":{"!description":"The table can be aggregated","!category":"enum","!type":"String"}},"sap.ui.mdc.odata.v4.vizChart":{"!description":"Module for vizChart delegate","!module":"sap/ui/mdc/odata/v4/vizChart/ChartDelegate","!helpDescription":"Module for vizChart delegate","!category":"namespace"},"sap.ui.mdc.field.content.DateTimeContent":{"!description":"Object-based definition of the date and time content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!module":"sap/ui/mdc/field/content/DateTimeContent","!helpDescription":"Object-based definition of the date and time content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!category":"namespace"},"sap.ui.mdc.field.FieldMultiInput":{"!description":"The <code>FieldMultiInput<\/code> control is used to render a multi-input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.MultiInput MultiInput} control to add ARIA attributes and other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldMultiInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldMultiInput<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAriaAttributes ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.MultiInput#constructor sap.m.MultiInput}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldMultiInput","!helpDescription":"The <code>FieldMultiInput<\/code> control is used to render a multi-input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}. It enhances the {@link sap.m.MultiInput MultiInput} control to add ARIA attributes and other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.","setAriaAttributes":{"!description":"Sets a new value for property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAriaAttributes?: Object) -> sap.ui.mdc.field.FieldMultiInput","parameters":{"oAriaAttributes":"type: object, description: New value for property <code>ariaAttributes<\/code>"}},"!proto":"sap.m.MultiInput","getAriaAttributes":{"!description":"Gets current value of property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.IFilter":{"!description":"Interface for controls or entities which can serve as filters in the <code>sap.ui.mdc.Table<\/code> & <code>sap.ui.mdc.Chart<\/code>.\n\nThe following methods need to be implemented:\n\n<ul> <li><code>getConditions<\/code> - Part of the {@link sap.ui.mdc.IFilterSource} interface.<\/li> <li><code>validate<\/code> - The <code>validate<\/code> method should return a promise which resolves after the IFilter interface has handled its inner validation. The <code>getConditions<\/code> method will be called subsequently by the filtered control.<\/li> <li><code>getSearch<\/code> - <b>Note:<\/b> The <code>getSearch<\/code> method can optionally be implemented and should return a string for approximate string matching implemented in the backend.<\/li> <\/ul>\n\nThe following events need to be implemented:\n\n<ul> <li><code>search<\/code> - This event should be fired once a filtering should be executed on the IFilter using control.<\/li> <li><code>filtersChanged<\/code> - <b>Note:<\/b> The <code>filtersChanged<\/code> event can optionally be implemented and should be fired whenever a filter value has changed. This event will be used to display an overlay on the IFilter consuming control.<\/li> <\/ul>","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.filterbar.vh.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.FilterBar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.vh.FilterBar"},"sap.ui.mdc.field":{"fieldWidth":{"!description":"This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.","!category":"enum","!type":"sap.ui.core.CSSSize"},"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!category":"enum","!type":"String"},"highlightAccKeysRef":{"!description":"Indicates whether the access keys ref of the control should be highlighted. NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"Boolean"},"valueHelpIconSrc":{"!description":"Set custom value help icon.","!category":"enum","!type":"sap.ui.core.URI"},"dateFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> should be used for date/time inputs and formating.<br>Only used if type=date and no datepicker is available. The data is displayed and the user input is parsed according to this format. <b>Note:<\/b> The value property is always of the form RFC 3339 (YYYY-MM-dd).","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"_valueHelpEnabled":{"!description":"Internal property to bind the <code>showValueHelp<\/code> property of the internal <code>Input<\/code> control.","!category":"enum","!type":"Boolean"},"showSuggestion":{"!description":"If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input. <b>Note:<\/b> Default value for this property is false for the {@link sap.m.Input}.","!category":"enum","!type":"Boolean"},"enableMultiLineMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Replaced with N-more/N-items labels, which work in all cases.<br>If set to true, the MultiInput will be displayed in multi-line display mode. In multi-line display mode, all tokens can be fully viewed and easily edited in the MultiInput. The default value is false. <b>Note:<\/b> This property does not take effect on smartphones or when the editable property is set to false. <b>Caution:<\/b> Do not enable multi-line mode in tables and forms.","!category":"enum","!type":"Boolean"},"additionalText":{"!description":"Some additional text of type string, optionally to be displayed along with this item.","!category":"enum","!type":"String"},"_operators":{"!description":"Internal property to bind the operators to the internal <code>DynamicDateRange<\/code> (or other) control.","!category":"enum","!type":"[String]"},"type":{"!description":"HTML type of the internal <code>input<\/code> tag (e.g. Text, Number, Email, Phone). The particular effect of this property differs depending on the browser and the current language settings, especially for the type Number.<br> This parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br> Only the default value <code>sap.m.InputType.Text<\/code> may be used in combination with data model formats. <code>sap.ui.model<\/code> defines extended formats that are mostly incompatible with normal HTML representations for numbers and dates.","!category":"enum","!type":"sap.m.InputType"},"_ariaAttributes":{"!description":"Sets the ARIA attributes added to the inner control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between the field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established (e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"emptyIndicatorMode":{"!description":"Specifies if an empty indicator should be displayed when there is no token.","!category":"enum","!type":"sap.m.EmptyIndicatorMode"},"FieldMultiInput":"sap.ui.mdc.field.FieldMultiInput_obj","hiddenTokensCount":{"!description":"Defines the count of hidden tokens if any. If this property is set to 0, the n-More indicator will not be shown.","!category":"enum","!type":"Number"},"accesskey":{"!description":"Indicates which keyboard key should be pressed to focus the access key ref NOTE: this property is used only when access keys feature is turned on.","!category":"enum","!type":"String"},"enableSuggestionsHighlighting":{"!description":"Specifies whether the suggestions highlighting is enabled. <b>Note:<\/b> Due to performance constraints, the functionality will be disabled above 200 items. <b>Note:<\/b> Highlighting in table suggestions will work only for cells containing sap.m.Label or sap.m.Text controls.","!category":"enum","!type":"Boolean"},"FieldInfoBase":"sap.ui.mdc.field.FieldInfoBase_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"FieldBase":"sap.ui.mdc.field.FieldBase_obj","maxTokens":{"!description":"The max number of tokens that is allowed in MultiInput.","!category":"enum","!type":"Number"},"valueHelpOnly":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 The property valueHelpOnly should not be used anymore<br>If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect. In this scenario, the <code>showItems<\/code> API will not work.<br><br> <strong>Note:<\/strong> The property is deprecated, as it creates unnecessary usability and accessibility restrictions. The decision to deprecate it is based on the fact that it serves no purpose to have an input field where the user cannot type. This property restricts even the paste functionality, which can be useful, e.g. the needed info is already in the clipboard. If the user's input needs to match specific predefined values, the application should validate the input against the set of values and provide feedback to the user or use other mechanism for selection, where freestyle input is not allowed by design (Select, SelectDialog, etc). <strong>Note:<\/strong> Please note that there is no direct replacement for this property.","!category":"enum","!type":"Boolean"},"text":{"!description":"Displayed text of the token.","!category":"enum","!type":"String"},"selected":{"!description":"Indicates the current selection status of the token.","!category":"enum","!type":"Boolean"},"maxConditions":{"!description":"Sets the maximum number of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited number of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.","!category":"enum","!type":"Number"},"maxWidth":{"!description":"Defines the maximum width of the Tokenizer.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"Modules for {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField}","startSuggestion":{"!description":"Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input.\n\n<b>Note:<\/b> When it's set to 0, suggest event is fired when input with no text gets focus. In this case no suggestion popup will open.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.","!category":"enum","!type":"sap.ui.core.TextAlign"},"ariaAttributes":{"!description":"Sets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"dataType":{"!description":"The type of data handled by the field. This type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> The module of the data type should be loaded before it is assigned to the field. Otherwise the asynchronous loading of the module might lead to unwanted side effects.","!category":"enum","!type":"String"},"suggestionRowValidator":{"!description":"Defines the validation callback function called when a suggestion row gets selected.","!category":"enum","!type":"fn()"},"separateSuggestions":{"!description":"Specifies whether to display separators in tabular suggestions.","!category":"enum","!type":"Boolean"},"MultiValueFieldItem":"sap.ui.mdc.field.MultiValueFieldItem_obj","!module":"sap/ui/mdc/field/FieldBase","!helpDescription":"Modules for {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField}","editMode":{"!description":"Determines whether the field is editable, read-only, or disabled.","!category":"enum","!type":"sap.ui.mdc.enums.FieldEditMode"},"name":{"!description":"The name to be used in the HTML code (for example, for HTML forms that send data to the server via submission).","!category":"enum","!type":"String"},"maxSuggestionWidth":{"!description":"If set, this parameter will control the horizontal size of the suggestion list to display more data. By default, the suggestion list has a minimum width equal to the input field's width and a maximum width of 640px. This property allows the suggestion list to contract or expand based on available space, potentially exceeding 640px. <b>Note:<\/b> If the actual width of the input field exceeds the specified parameter value, the value will be ignored.","!category":"enum","!type":"sap.ui.core.CSSSize"},"editableParent":{"!description":"Indicates the editable status of the token's parent (Tokenizer). If it is set to <code>true<\/code>, the ARIA attributes of the token are updated accordingly.","!category":"enum","!type":"Boolean"},"ConditionsType":"sap.ui.mdc.field.ConditionsType_obj","ConditionType":"sap.ui.mdc.field.ConditionType_obj","DynamicDateRangeConditionsType":"sap.ui.mdc.field.DynamicDateRangeConditionsType_obj","conditions":{"!description":"Sets the conditions that represent the values of the field.\n\nThese should be bound to a {@link sap.ui.mdc.FilterBar FilterBar} using the corresponding <code>propertyPath<\/code>.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property is used to bind {@link sap.ui.mdc.FilterField FilterField} to its parent {@link @link sap.ui.mdc.FilterBar FilterBar}.<\/br> If this property is not explicitly configured, the {@link @link sap.ui.mdc.FilterBar FilterBar} sets a default binding. For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control, the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.","!category":"enum","!type":"[Object]"},"setsize":{"!description":"Indicates the count of the token. Used for aria attributes.","!category":"enum","!type":"Number"},"maxLength":{"!description":"Maximum number of characters. Value '0' means the feature is switched off. This parameter is not compatible with the input type <code>sap.m.InputType.Number<\/code>. If the input type is set to <code>Number<\/code>, the <code>maxLength<\/code> value is ignored. If the <code>maxLength<\/code> is set after there is already a longer value, this value will not get truncated. The <code>maxLength<\/code> property has effect only when the value is modified by user interaction.","!category":"enum","!type":"Number"},"textFormatter":{"!description":"Defines the display text formatter function.","!category":"enum","!type":"fn()"},"ListFieldHelpItem":"sap.ui.mdc.field.ListFieldHelpItem_obj","showValueHelp":{"!description":"If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.","!category":"enum","!type":"Boolean"},"icon":{"!description":"The icon belonging to this list item instance. This can be a URI to an image or an icon font URI.","!category":"enum","!type":"String"},"description":{"!description":"Description of the item.","!category":"enum","!type":"String"},"!category":"namespace","content":"sap.ui.mdc.field.content","enabled":{"!description":"Enabled items can be selected.","!category":"enum","!type":"Boolean"},"groupKey":{"!description":"Key of the group for what the items are grouped","!category":"enum","!type":"Object"},"delegate":{"!description":"Object related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/BaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!category":"enum","!type":"Object"},"textDirection":{"!description":"This property specifies the text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"_semanticFormValue":{"!description":"Changed when tokens are changed. The value for sap.ui.core.ISemanticFormContent interface.","!category":"enum","!type":"String"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"groupText":{"!description":"Text of the group for what the items are grouped","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"posinset":{"!description":"Indicates the position of a token. Used for aria attributes.","!category":"enum","!type":"Number"},"_delimiter":{"!description":"_delimiter : String","!category":"enum","!type":"String"},"placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value.","!category":"enum","!type":"String"},"showTableSuggestionValueHelp":{"!description":"For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\n<b>Note:<\/b> If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.","!category":"enum","!type":"Boolean"},"CustomFieldInfo":"sap.ui.mdc.field.CustomFieldInfo_obj","value":{"!description":"Defines the value of the control.","!category":"enum","!type":"String"},"key":{"!description":"Key of the token.","!category":"enum","!type":"String"},"selectedKey":{"!description":"Defines the key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!category":"enum","!type":"String"},"effectiveShowClearIcon":{"!description":"Specifies whether the clear icon should be shown/hidden on user interaction.","!category":"enum","!type":"Boolean"},"TokenizerDisplay":"sap.ui.mdc.field.TokenizerDisplay_obj","multipleLines":{"!description":"If set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines, an error is thrown.","!category":"enum","!type":"Boolean"},"dataTypeFormatOptions":{"!description":"The format options of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"valueLiveUpdate":{"!description":"Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).\n\n<b>Note:<\/b> When set to true and the value of the Input control is bound to a model, the change event becomes obsolete and will not be fired, as the value in the model will be updated each time the user provides input. In such cases, subscription to the liveChange event is more appropriate, as it corresponds to the way the underlying model gets updated.","!category":"enum","!type":"Boolean"},"autocomplete":{"!description":"Specifies whether autocomplete is enabled. Works only if \"showSuggestion\" property is set to true. <b>Note:<\/b> The autocomplete feature is disabled on Android devices due to a OS specific issue.","!category":"enum","!type":"Boolean"},"dataTypeConstraints":{"!description":"The constraints of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"editable":{"!description":"true if tokens shall be editable otherwise false","!category":"enum","!type":"Boolean"},"display":{"!description":"Defines whether the value and/or description of the field is shown and in which order.","!category":"enum","!type":"sap.ui.mdc.enums.FieldDisplay"},"enableTableAutoPopinMode":{"!description":"Enables the <code>autoPopinMode<\/code> of <code>sap.m.Table<\/code>, when the input has tabular suggestions. <b>Note:<\/b> The <code>autoPopinMode<\/code> overwrites the <code>demandPopin<\/code> and the <code>minScreenWidth<\/code> properties of the <code>sap.m.Column<\/code>. When setting, <code>enableTableAutoPopinMode<\/code>, from true to false, the application must reconfigure the <code>demandPopin<\/code> and <code>minScreenWidth<\/code> properties of the <code>sap.m.Column<\/code> control by itself.","!category":"enum","!type":"Boolean"},"showClearIcon":{"!description":"Specifies whether clear icon is shown. Pressing the icon will clear input's value and fire the liveChange event.","!category":"enum","!type":"Boolean"},"truncated":{"!description":"Indicates if the token's text should be truncated.","!category":"enum","!type":"Boolean"},"FieldInput":"sap.ui.mdc.field.FieldInput_obj","label":{"!description":"Defines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.","!category":"enum","!type":"String"},"TokenDisplay":"sap.ui.mdc.field.TokenDisplay_obj","showValueStateMessage":{"!description":"Indicates whether the value state message should be shown or not.","!category":"enum","!type":"Boolean"},"renderMode":{"!description":"Defines the mode that the Tokenizer will use: <ul> <li><code>sap.m.TokenizerRenderMode.Loose<\/code> mode shows all tokens, no matter the width of the Tokenizer<\/li> <li><code>sap.m.TokenizerRenderMode.Narrow<\/code> mode forces the Tokenizer to show only as much tokens as possible in its width and add an n-More indicator<\/li> <\/ul>","!category":"enum","!type":"String"},"showEmptyIndicator":{"!description":"If set, an empty <code>Field<\/code> renders an empty indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>ValueHelp<\/code>.","!category":"enum","!type":"Boolean"},"textFormatMode":{"!description":"Defines the display text format mode.","!category":"enum","!type":"sap.m.InputTextFormatMode"},"width":{"!description":"Defines the width of the Tokenizer.","!category":"enum","!type":"sap.ui.core.CSSSize"},"filterSuggests":{"!description":"Defines whether to filter the provided suggestions before showing them to the user.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.enums.ChartP13nMode":{"!description":"Defines the personalization mode of the chart.","Item":{"!description":"Item personalization is enabled.","!category":"enum","!type":"String"},"Type":{"!description":"Chart type personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/ChartP13nMode","Filter":{"!description":"Filter personalization is enabled.","!category":"enum","!type":"String"},"Sort":{"!description":"Sort personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.Control_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Control with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Control"},"sap.ui.mdc.field.CustomFieldInfo":{"!description":"A field help used in the <code>FieldInfo<\/code> aggregation in <code>FieldBase<\/code> controls that allows you to add custom content.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.CustomFieldInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.CustomFieldInfo","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"!constructorDescription":"Constructor for a new CustomFieldInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldInfoBase#constructor sap.ui.mdc.field.FieldInfoBase}\ncan be used as well.","!module":"sap/ui/mdc/field/CustomFieldInfo","!helpDescription":"A field help used in the <code>FieldInfo<\/code> aggregation in <code>FieldBase<\/code> controls that allows you to add custom content.","getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the field information.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.field.FieldInfoBase","!category":"class","destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.CustomFieldInfo"}},"sap.ui.mdc.mixin.DelegateMixin":{"!description":"Enhances a given control prototype with consolidated asynchronous handling for delegate modules and their initialization.\n\nThe following methods are available:\n\n<ul> <li><code>awaitControlDelegate<\/code> - Provides access to the delegate initialization <code>Promise<\/code>.<\/li> <li><code>getControlDelegate<\/code> - Returns the delegate instance, if available.<\/li> <li><code>isControlDelegateInitialized<\/code> - Checks whether the control delegate is available.<\/li> <li><code>getPayload<\/code> - Returns the payload object set for the delegate property.<\/li> <li><code>getTypeMap<\/code> - Returns the <code>TypeMap<\/code> made available by the delegate module<\/li> <li><code>initControlDelegate<\/code> - Loads and initializes the delegate module related to the enhanced control.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <li><code>setDelegate<\/code><\/li> <\/ul>\n\nThe <code>prototype.init<\/code> wrapper creates the following instance fields:\n\n<ul> <li><code>bDelegateInitialized<\/code> - Indicator for the availability of delegates<\/li> <li><code>bDelegateLoading<\/code> - Indicates whether the initialization of delegate modules is triggered but not yet completed (loading necessary)<\/li> <\/ul>","getPayload":{"!description":"Returns the payload object set for the delegate property.","!static":"true","!category":"function","!type":"fn() -> Object"},"!module":"sap/ui/mdc/mixin/DelegateMixin","!helpDescription":"Enhances a given control prototype with consolidated asynchronous handling for delegate modules and their initialization.\n\nThe following methods are available:\n\n<ul> <li><code>awaitControlDelegate<\/code> - Provides access to the delegate initialization <code>Promise<\/code>.<\/li> <li><code>getControlDelegate<\/code> - Returns the delegate instance, if available.<\/li> <li><code>isControlDelegateInitialized<\/code> - Checks whether the control delegate is available.<\/li> <li><code>getPayload<\/code> - Returns the payload object set for the delegate property.<\/li> <li><code>getTypeMap<\/code> - Returns the <code>TypeMap<\/code> made available by the delegate module<\/li> <li><code>initControlDelegate<\/code> - Loads and initializes the delegate module related to the enhanced control.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <li><code>setDelegate<\/code><\/li> <\/ul>\n\nThe <code>prototype.init<\/code> wrapper creates the following instance fields:\n\n<ul> <li><code>bDelegateInitialized<\/code> - Indicator for the availability of delegates<\/li> <li><code>bDelegateLoading<\/code> - Indicates whether the initialization of delegate modules is triggered but not yet completed (loading necessary)<\/li> <\/ul>","initControlDelegate":{"!description":"Loads and initializes the delegate module related to the enhanced control.","!static":"true","!category":"function","!type":"fn(oPreloadedModule?: module:sap/ui/mdc/BaseDelegate) -> Promise<module:sap/ui/mdc/BaseDelegate>"},"getTypeUtil":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link #getTypeMap}<br>Returns the <code>typeUtil<\/code> made available by a delegate module.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.util.TypeUtil | module:sap/ui/mdc/util/TypeMap"},"!category":"namespace","isControlDelegateInitialized":{"!description":"Checks whether the delegate module related to the enhanced control is loaded.","!static":"true","!category":"function","!type":"fn() -> Boolean"},"getControlDelegate":{"!description":"Returns the delegate instance, if available.","!static":"true","!category":"function","!type":"fn() -> module:sap/ui/mdc/BaseDelegate"},"awaitControlDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code>. <b>Note:<\/b> <code>initControlDelegate<\/code> must be called to start the delegate initialization","!static":"true","!category":"function","!type":"fn() -> Promise<module:sap/ui/mdc/BaseDelegate>"},"getTypeMap":{"!description":"Returns the <code>TypeMap<\/code> made available by a delegate module.","!static":"true","!category":"function","!type":"fn() -> module:sap/ui/mdc/util/TypeMap"}},"sap.ui.mdc.Chart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Chart"},"sap.ui.mdc.Element_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Element with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Element"},"sap.ui.mdc.Table":{"setCellSelector":{"!description":"Sets the aggregated {@link #getCellSelector cellSelector}.","!static":false,"!category":"function","!type":"fn(oCellSelector: sap.m.plugins.CellSelector) -> sap.ui.mdc.Table","parameters":{"oCellSelector":"type: sap.m.plugins.CellSelector, description: The cellSelector to set"}},"setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nPersonalization options for the table.\n\n<b>Note:<\/b> Whether a personalization option is supported depends on the used delegate. Please refer to the documentation of the individual delegates. The order of the provided options does not influence their order on the UI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sP13nMode?: [sap.ui.mdc.enums.TableP13nMode]) -> sap.ui.mdc.Table","parameters":{"sP13nMode":"type: sap.ui.mdc.enums.TableP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"destroyRowSettings":{"!description":"Destroys the rowSettings in the aggregation {@link #getRowSettings rowSettings}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"getNoData":{"!description":"Gets content of aggregation {@link #getNoData noData}.\n\nDefines the custom visualization if there is no data to show.\n\n<b>Note:<\/b> If {@link sap.m.IllustratedMessage} control is set for the <code>noData<\/code> aggregation and its {@link sap.m.IllustratedMessage#getTitle title} property is not set then the table automatically offers a no data text with fitting {@link sap.m.IllustratedMessage.IllustratedMessageType illustration}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control | String"},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nHeader text that is shown in the table. The header must always be set to comply with accessibility standards, even if other settings make the header invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.mdc.Table","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"setHideToolbar":{"!description":"Sets a new value for property {@link #getHideToolbar hideToolbar}.\n\nDetermines whether the toolbar is visible.\n\n<b>Note:<\/b> Hiding the toolbar limits the functionality of the table in the following ways:<br> <ul> <li>The <code>showRowCount<\/code> property <b>must<\/b> be set to <code>false<\/code>.<\/li> <li>The export <b>must<\/b> be disabled by setting the <code>enableExport<\/code> property to <code>false<\/code>.<\/li> <li>For {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, show and hide details won't be visible as the table will always run in \"Show Details\" mode.<\/li> <li>Copy and paste will only work via keyboard.<\/li> <li>For {@link sap.ui.mdc.table.TreeTableType TreeTable}, \"Collapse All\" and \"Expand All\" won't be possible.<\/li> <li>The <code>actions<\/code> and the <code>quickFilter<\/code> aggregations and a table-related {@link sap.ui.fl.variants.VariantManagement} <b>must not<\/b> be used.<\/li> <li>The table title will not be displayed but will be replaced by an <code>InvisibleText<\/code>. The <code>header<\/code> property <b>must<\/b> be set. In addition, <code>headerVisible<\/code> <b>must<\/b> be set to <code>false<\/code> to ensure accessibility compatibility.<\/li> <li>Personalization (<code>p13nMode<\/code>) can still be used via the column headers. If the option to show or hide columns is activated, it is recommended to use an {@link sap.m.IllustratedMessage} for the <code>nodata<\/code> display. It ensures that columns can be made visible again when the user has accidentally hidden them all.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideToolbar?: Boolean) -> sap.ui.mdc.Table","parameters":{"bHideToolbar":"type: boolean, description: New value for property <code>hideToolbar<\/code>"}},"destroyCreationRow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124 the concept has been discarded.<br>Destroys the creationRow in the aggregation {@link #getCreationRow creationRow}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"attachPaste":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:paste paste} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired when the user pastes content from the clipboard to the table.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"clearSelection":{"!description":"Clears the selection.","!static":false,"!category":"function","!type":"fn()"},"getHideToolbar":{"!description":"Gets current value of property {@link #getHideToolbar hideToolbar}.\n\nDetermines whether the toolbar is visible.\n\n<b>Note:<\/b> Hiding the toolbar limits the functionality of the table in the following ways:<br> <ul> <li>The <code>showRowCount<\/code> property <b>must<\/b> be set to <code>false<\/code>.<\/li> <li>The export <b>must<\/b> be disabled by setting the <code>enableExport<\/code> property to <code>false<\/code>.<\/li> <li>For {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, show and hide details won't be visible as the table will always run in \"Show Details\" mode.<\/li> <li>Copy and paste will only work via keyboard.<\/li> <li>For {@link sap.ui.mdc.table.TreeTableType TreeTable}, \"Collapse All\" and \"Expand All\" won't be possible.<\/li> <li>The <code>actions<\/code> and the <code>quickFilter<\/code> aggregations and a table-related {@link sap.ui.fl.variants.VariantManagement} <b>must not<\/b> be used.<\/li> <li>The table title will not be displayed but will be replaced by an <code>InvisibleText<\/code>. The <code>header<\/code> property <b>must<\/b> be set. In addition, <code>headerVisible<\/code> <b>must<\/b> be set to <code>false<\/code> to ensure accessibility compatibility.<\/li> <li>Personalization (<code>p13nMode<\/code>) can still be used via the column headers. If the option to show or hide columns is activated, it is recommended to use an {@link sap.m.IllustratedMessage} for the <code>nodata<\/code> display. It ensures that columns can be made visible again when the user has accidentally hidden them all.<\/li> <\/ul>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired when the selection is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_isOfType":{"!description":"Determine the table's type","!static":false,"!category":"function","!type":"fn(sType: sap.ui.mdc.enums.TableType, bIncludeSubTypes: Boolean) -> Boolean","parameters":{"sType":"type: sap.ui.mdc.enums.TableType, description: The table type to be checked","bIncludeSubTypes":"type: boolean, description: enable subtype check"}},"getEnableColumnResize":{"!description":"Gets current value of property {@link #getEnableColumnResize enableColumnResize}.\n\nDetermines whether column resizing is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A metadata-driven table to simplify the usage of existing tables, such as the <code>ResponsiveTable<\/code> and <code>GridTable<\/code> controls. The metadata needs to be provided via the {@link module:sap/ui/mdc/TableDelegate TableDelegate} implementation as {@link sap.ui.mdc.table.PropertyInfo}.\n\n<b>Note:<\/b> Read and write access to internal elements is not permitted. Such elements are, for example, the inner table including its children. This is independent of how access was gained. Internal elements and their types are subject to change without notice.","destroyNoData":{"!description":"Destroys the noData in the aggregation {@link #getNoData noData}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setSelectionMode":{"!description":"Sets a new value for property {@link #getSelectionMode selectionMode}.\n\nSelection mode of the table. Specifies whether single or multiple rows can be selected and how the selection can be extended. It may also influence the visual appearance.\n\n<b>Note:<\/b> With the {@link sap.ui.mdc.table.GridTableType GridTable} and server-side models, range selections, including Select All, only work properly if the count is known. Please refer to the documentation of the used model for information on requesting the count, for example, {@link sap.ui.model.odata.v4.ODataModel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode?: sap.ui.mdc.enums.TableSelectionMode) -> sap.ui.mdc.Table","parameters":{"sSelectionMode":"type: sap.ui.mdc.enums.TableSelectionMode, description: New value for property <code>selectionMode<\/code>"}},"getHeaderStyle":{"!description":"Gets current value of property {@link #getHeaderStyle headerStyle}.\n\nDefines style of the header. For more information, see {@link sap.m.Title#setTitleStyle}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"setFilter":{"!description":"Sets the associated {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.ID | sap.ui.mdc.IFilter) -> sap.ui.mdc.Table","parameters":{"oFilter":"type: sap.ui.core.ID|sap.ui.mdc.IFilter, description: ID of an element which becomes the new target of this filter association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Table with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setNoData":{"!description":"Sets the aggregated {@link #getNoData noData}.","!static":false,"!category":"function","!type":"fn(vNoData: sap.ui.core.Control | String) -> sap.ui.mdc.Table","parameters":{"vNoData":"type: sap.ui.core.Control|string, description: The noData to set"}},"!module":"sap/ui/mdc/Table","fireRowPress":{"!description":"Fires event {@link #event:rowPress rowPress} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getType":{"!description":"Gets content of aggregation {@link #getType type}.\n\nType of the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.TableTypeBase | sap.ui.mdc.enums.TableType"},"getHeaderVisible":{"!description":"Gets current value of property {@link #getHeaderVisible headerVisible}.\n\nDetermines whether the header text is shown in the table. Regardless of its value, the given header text is used to label the table correctly for accessibility purposes.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnableExport":{"!description":"Gets current value of property {@link #getEnableExport enableExport}.\n\nDetermines whether the data export is enabled.\n\nThe delegate can customize the export result with the <code>exportSettings<\/code> field in the {@link sap.ui.mdc.table.PropertyInfo PropertyInfo}.\n\n<b>Note:<\/b> To use the export functionality, the {@link sap.ui.export} library is required, otherwise an error message is displayed when the user presses the Export button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCreationRow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124 the concept has been discarded.<br>Sets the aggregated {@link #getCreationRow creationRow}.","!static":false,"!category":"function","!type":"fn(oCreationRow: sap.ui.mdc.table.CreationRow) -> sap.ui.mdc.Table","parameters":{"oCreationRow":"type: sap.ui.mdc.table.CreationRow, description: The creationRow to set"}},"setEnablePaste":{"!description":"Sets a new value for property {@link #getEnablePaste enablePaste}.\n\nDetermines whether the Paste button is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnablePaste?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnablePaste":"type: boolean, description: New value for property <code>enablePaste<\/code>"}},"isTableBound":{"!description":"Checks whether the table is bound.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRowSettings":{"!description":"Sets the aggregated {@link #getRowSettings rowSettings}.","!static":false,"!category":"function","!type":"fn(oRowSettings: sap.ui.mdc.table.RowSettings) -> sap.ui.mdc.Table","parameters":{"oRowSettings":"type: sap.ui.mdc.table.RowSettings, description: The rowSettings to set"}},"setHeaderStyle":{"!description":"Sets a new value for property {@link #getHeaderStyle headerStyle}.\n\nDefines style of the header. For more information, see {@link sap.m.Title#setTitleStyle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderStyle: sap.ui.core.TitleLevel) -> sap.ui.mdc.Table","parameters":{"sHeaderStyle":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerStyle<\/code>"}},"getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nAdditional actions that will be available in the toolbar.\n\n<b>Note:<\/b> This aggregation is managed by the control, can only be populated during the definition in the XML view, and is not bindable. Any changes of the initial aggregation content might result in undesired effects. Changes of the aggregation have to be made with the {@link sap.ui.mdc.p13n.StateUtil StateUtil}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getEnablePaste":{"!description":"Gets current value of property {@link #getEnablePaste enablePaste}.\n\nDetermines whether the Paste button is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/TableDelegate TableDelegate}.<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre>{\n\tname: \"sap/ui/mdc/TableDelegate\",\n\tpayload: {}\n}<\/pre>\n\n<b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getCellSelector":{"!description":"Gets content of aggregation {@link #getCellSelector cellSelector}.\n\nDefines an aggregation for the <code>CellSelector<\/code> plugin that provides cell selection capabilities.\n\n<b>Note:<\/b> The <code>CellSelector<\/code> is currently only available in combination with the {@link sap.ui.mdc.table.GridTableType GridTable}. Please refer to {@link sap.m.plugins.CellSelector} for additional restrictions.","!static":false,"!category":"function","!type":"fn() -> sap.m.plugins.CellSelector"},"destroyQuickFilter":{"!description":"Destroys the quickFilter in the aggregation {@link #getQuickFilter quickFilter}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"getHeight":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 the concept has been discarded.<br>Gets current value of property {@link #getHeight height}.\n\nThis property has no effect and will be removed soon.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getRowBinding":{"!description":"Returns the row/items binding of the internal table.<br> <i>Note<\/i>: <li>Do not use this API to keep the reference of the binding.<\/li> <li>Also, do not use it to trigger sort/filter on the binding.<\/li>","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.Binding"},"getRowSettings":{"!description":"Gets content of aggregation {@link #getRowSettings rowSettings}.\n\nSettings for the table rows.\n\n<b>Note:<\/b> Each time the properties of the settings are changed, they have to be applied again via <code>setRowSettings<\/code> for the changes to take effect.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.RowSettings"},"getCreationRow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124 the concept has been discarded.<br>Gets content of aggregation {@link #getCreationRow creationRow}.\n\nThis row can be used for user input to create new data if {@link sap.ui.mdc.enums.TableType TableType} is \"<code>Table<\/code>\".\n\n<b>Note:<\/b> Once the binding supports creating transient records, this aggregation will be removed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.CreationRow"},"initialized":{"!description":"Returns a <code>Promise<\/code> that resolves after the table has been initialized, and after it has been created or its type has been changed.","!static":false,"!category":"function","!type":"fn() -> Promise"},"fireBeforeExport":{"!description":"Fires event {@link #event:beforeExport beforeExport} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getColumnClipboardSettings":{"!description":"Returns the clipboard settings for a column.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.mdc.table.Column) -> sap.m.plugins.CopyProvider.ColumnClipboardSettings","parameters":{"oColumn":"type: sap.ui.mdc.table.Column, description: The column for which to get the clipboard settings"}},"_getType":{"!description":"Retrieve the table's type","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.TableTypeBase"},"setEnableExport":{"!description":"Sets a new value for property {@link #getEnableExport enableExport}.\n\nDetermines whether the data export is enabled.\n\nThe delegate can customize the export result with the <code>exportSettings<\/code> field in the {@link sap.ui.mdc.table.PropertyInfo PropertyInfo}.\n\n<b>Note:<\/b> To use the export functionality, the {@link sap.ui.export} library is required, otherwise an error message is displayed when the user presses the Export button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableExport?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnableExport":"type: boolean, description: New value for property <code>enableExport<\/code>"}},"getConditions":{"!description":"Returns the current filter conditions present on the table.","!static":false,"!category":"function","!type":"fn()"},"detachRowPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:rowPress rowPress} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Table","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/TableDelegate TableDelegate}.<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre>{\n\tname: \"sap/ui/mdc/TableDelegate\",\n\tpayload: {}\n}<\/pre>\n\n<b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Table","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getFilter":{"!description":"ID of the element which is the current target of the association {@link #getFilter filter}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getBusyIndicatorDelay":{"!description":"Gets current value of property {@link #getBusyIndicatorDelay busyIndicatorDelay}.\n\nThe delay in milliseconds after which the busy indicator is shown.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnableAutoColumnWidth":{"!description":"Sets a new value for property {@link #getEnableAutoColumnWidth enableAutoColumnWidth}.\n\nEnables automatic column width calculation. The column width calculation takes the type, column label, referenced properties, and other information into account. The calculated column widths can have a minimum of 3rem and a maximum of 20rem.\n\nThe delegate can customize the automatic column width calculation with the <code>visualSettings.widthSettings<\/code> field in the {@link sap.ui.mdc.table.PropertyInfo PropertyInfo}. To disable the heuristic column width calculation for a particular column, the <code>visualSettings.widthSettings<\/code> field can be set to <code>null<\/code>. Providing a more precise <code>maxLength<\/code> value for the <code>String<\/code> type or <code>precision<\/code> value for numeric types can help the algorithm to produce better results.\n\n<b>Note:<\/b> The column width is not calculated if the <code>width<\/code> property of the column is bound or its value is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoColumnWidth?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnableAutoColumnWidth":"type: boolean, description: New value for property <code>enableAutoColumnWidth<\/code>"}},"setShowRowCount":{"!description":"Sets a new value for property {@link #getShowRowCount showRowCount}.\n\nDetermines whether the number of rows is shown along with the header text.\n\n<b>Note:<\/b> Whether this feature can be used depends on whether the model used and the data service can provide a count. Please refer to the documentation of the used model for information on requesting the count, for example, {@link sap.ui.model.odata.v4.ODataModel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRowCount?: Boolean) -> sap.ui.mdc.Table","parameters":{"bShowRowCount":"type: boolean, description: New value for property <code>showRowCount<\/code>"}},"detachPaste":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:paste paste} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMultiSelectMode":{"!description":"Gets current value of property {@link #getMultiSelectMode multiSelectMode}.\n\nDefines the multi-selection mode.\n\n<b>Note:<\/b> This property has no effect in the following cases: <ul> <li>Table type is not {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}. This is subject to change in the future.<\/li> <li>Selection mode is not <code>Multi<\/code>.<\/li> <\/ul>\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.TableMultiSelectMode"},"getUseColumnLabelsAsTooltips":{"!description":"Gets current value of property {@link #getUseColumnLabelsAsTooltips useColumnLabelsAsTooltips}.\n\nIf no tooltip has been provided for a column, the column header text will automatically be applied as a tooltip for the column.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyType":{"!description":"Destroys the type in the aggregation {@link #getType type}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setUseColumnLabelsAsTooltips":{"!description":"Sets a new value for property {@link #getUseColumnLabelsAsTooltips useColumnLabelsAsTooltips}.\n\nIf no tooltip has been provided for a column, the column header text will automatically be applied as a tooltip for the column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseColumnLabelsAsTooltips?: Boolean) -> sap.ui.mdc.Table","parameters":{"bUseColumnLabelsAsTooltips":"type: boolean, description: New value for property <code>useColumnLabelsAsTooltips<\/code>"}},"attachRowPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:rowPress rowPress} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired when a row is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setThreshold":{"!description":"Sets a new value for property {@link #getThreshold threshold}.\n\nNumber of records to be requested from the model.\n\nIf the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, the threshold defines the number of rows that are displayed initially, and the number of rows that are added when the table grows ({@link sap.ui.mdc.table.ResponsiveTableType#getGrowingMode growingMode}).\n\nIf the table type is {@link sap.ui.mdc.table.GridTableType GridTable}, the threshold defines how many additional (not yet visible) data records from the back-end system are pre-fetched. If the <code>threshold<\/code> is lower than the number of visible rows, the number of visible rows is used as the <code>threshold<\/code>. If the value is 0, thresholding is disabled.\n\n<b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the table uses a type-dependent default value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iThreshold?: Number) -> sap.ui.mdc.Table","parameters":{"iThreshold":"type: int, description: New value for property <code>threshold<\/code>"}},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.core.TitleLevel) -> sap.ui.mdc.Table","parameters":{"sHeaderLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"fireBeforeOpenContextMenu":{"!description":"Fires event {@link #event:beforeOpenContextMenu beforeOpenContextMenu} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setQuickFilter":{"!description":"Sets the aggregated {@link #getQuickFilter quickFilter}.","!static":false,"!category":"function","!type":"fn(oQuickFilter: sap.ui.core.Control) -> sap.ui.mdc.Table","parameters":{"oQuickFilter":"type: sap.ui.core.Control, description: The quickFilter to set"}},"getSelectedContexts":{"!description":"Gets contexts that have been selected by the user.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.model.Context]"},"attachBeforeOpenContextMenu":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeOpenContextMenu beforeOpenContextMenu} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired when the user requests the context menu for the table.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyContextMenu":{"!description":"Destroys the contextMenu in the aggregation {@link #getContextMenu contextMenu}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setCopyProvider":{"!description":"Sets the aggregated {@link #getCopyProvider copyProvider}.","!static":false,"!category":"function","!type":"fn(oCopyProvider: sap.m.plugins.CopyProvider) -> sap.ui.mdc.Table","parameters":{"oCopyProvider":"type: sap.m.plugins.CopyProvider, description: The copyProvider to set"}},"setVariant":{"!description":"Sets the aggregated {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn(oVariant: sap.ui.fl.variants.VariantManagement) -> sap.ui.mdc.Table","parameters":{"oVariant":"type: sap.ui.fl.variants.VariantManagement, description: The variant to set"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"detachBeforeExport":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setDataStateIndicator":{"!description":"Sets the aggregated {@link #getDataStateIndicator dataStateIndicator}.","!static":false,"!category":"function","!type":"fn(oDataStateIndicator: sap.m.plugins.DataStateIndicator) -> sap.ui.mdc.Table","parameters":{"oDataStateIndicator":"type: sap.m.plugins.DataStateIndicator, description: The dataStateIndicator to set"}},"getDataStateIndicator":{"!description":"Gets content of aggregation {@link #getDataStateIndicator dataStateIndicator}.\n\n<code>DataStateIndicator<\/code> plugin that can be used to show binding-related messages.","!static":false,"!category":"function","!type":"fn() -> sap.m.plugins.DataStateIndicator"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Table.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVariant":{"!description":"Gets content of aggregation {@link #getVariant variant}.\n\n<code>VariantManagement<code> control for the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.fl.variants.VariantManagement"},"getQuickFilter":{"!description":"Gets content of aggregation {@link #getQuickFilter quickFilter}.\n\nAdditional control for filtering that will be available in the toolbar.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getShowPasteButton":{"!description":"Gets current value of property {@link #getShowPasteButton showPasteButton}.\n\nDetermines whether the Paste button is visible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setBusyIndicatorDelay":{"!description":"Sets a new value for property {@link #getBusyIndicatorDelay busyIndicatorDelay}.\n\nThe delay in milliseconds after which the busy indicator is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn(iBusyIndicatorDelay?: Number) -> sap.ui.mdc.Table","parameters":{"iBusyIndicatorDelay":"type: int, description: New value for property <code>busyIndicatorDelay<\/code>"}},"indexOfColumn":{"!description":"Checks for the provided <code>sap.ui.mdc.table.Column<\/code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.mdc.table.Column) -> Number","parameters":{"oColumn":"type: sap.ui.mdc.table.Column, description: The column whose index is looked for"}},"setHeight":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 the concept has been discarded.<br>Sets a new value for property {@link #getHeight height}.\n\nThis property has no effect and will be removed soon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.Table","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"!helpDescription":"A metadata-driven table to simplify the usage of existing tables, such as the <code>ResponsiveTable<\/code> and <code>GridTable<\/code> controls. The metadata needs to be provided via the {@link module:sap/ui/mdc/TableDelegate TableDelegate} implementation as {@link sap.ui.mdc.table.PropertyInfo}.\n\n<b>Note:<\/b> Read and write access to internal elements is not permitted. Such elements are, for example, the inner table including its children. This is independent of how access was gained. Internal elements and their types are subject to change without notice.","rebind":{"!description":"Executes a rebind considering the provided external and inbuilt filtering.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setMultiSelectMode":{"!description":"Sets a new value for property {@link #getMultiSelectMode multiSelectMode}.\n\nDefines the multi-selection mode.\n\n<b>Note:<\/b> This property has no effect in the following cases: <ul> <li>Table type is not {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}. This is subject to change in the future.<\/li> <li>Selection mode is not <code>Multi<\/code>.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sMultiSelectMode?: sap.ui.mdc.enums.TableMultiSelectMode) -> sap.ui.mdc.Table","parameters":{"sMultiSelectMode":"type: sap.ui.mdc.enums.TableMultiSelectMode, description: New value for property <code>multiSelectMode<\/code>"}},"getCopyProvider":{"!description":"Gets content of aggregation {@link #getCopyProvider copyProvider}.\n\nDefines an aggregation for the <code>CopyProvider<\/code> plugin that provides copy to clipboard capabilities for the selected rows and creates a Copy button for the toolbar. To disable the copy function, including the Copy button in the toolbar, the <code>enabled<\/code> property of the <code>CopyProvider<\/code> must be set to <code>false<\/code>. To hide the Copy button from the toolbar, the <code>visible<\/code> property of the <code>CopyProvider<\/code> must be set to <code>false<\/code>.\n\n<b>Note:<\/b> The {@link sap.m.plugins.CopyProvider#extractData extractData} property of the <code>CopyProvider<\/code> must not be managed by the application.<br> The <code>CopyProvider<\/code> requires a secure context to access the clipboard API. If the context is not secure, the plugin will not be added, and the Copy button will not be generated.","!static":false,"!category":"function","!type":"fn() -> sap.m.plugins.CopyProvider"},"destroyCellSelector":{"!description":"Destroys the cellSelector in the aggregation {@link #getCellSelector cellSelector}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"detachBeforeOpenContextMenu":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeOpenContextMenu beforeOpenContextMenu} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"focusRow":{"!description":"Sets the focus on the row. If <code>bFirstInteractiveElement<\/code> is <code>true<\/code>, and there are interactive elements inside the row, sets the focus on the first interactive element. Otherwise sets the focus on the first data cell, if the type is <code>GridTableType<\/code>, and on the entire row, if the type is <code>ResponsiveTableType<\/code>. If the given index is not visible, the table scrolls to it automatically. In this case the same rules apply as in {@link #scrollToIndex}.","!static":false,"!category":"function","!type":"fn(iIndex: Number, bFirstInteractiveElement?: Boolean) -> Promise","parameters":{"bFirstInteractiveElement":"type: boolean, description: Indicates whether to set the focus on the first interactive element inside the row","iIndex":"type: number, description: The index of the row that is to be focused"}},"scrollToIndex":{"!description":"Scrolls the table to the row with the given index. Depending on the table type, this might cause additional requests. If the given index is -1, it will scroll to the end of the table based on the length of the underlying binding. If the length is not final, it will only scroll to the end of the current binding and might trigger a request for additional entries. This also applies in case of a responsive table with growing enabled.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> Promise","parameters":{"iIndex":"type: number, description: The index of the row that should be scrolled into the visible area"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.mdc.Control","getSelectionMode":{"!description":"Gets current value of property {@link #getSelectionMode selectionMode}.\n\nSelection mode of the table. Specifies whether single or multiple rows can be selected and how the selection can be extended. It may also influence the visual appearance.\n\n<b>Note:<\/b> With the {@link sap.ui.mdc.table.GridTableType GridTable} and server-side models, range selections, including Select All, only work properly if the count is known. Please refer to the documentation of the used model for information on requesting the count, for example, {@link sap.ui.model.odata.v4.ODataModel}.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.TableSelectionMode"},"getContextMenu":{"!description":"Gets content of aggregation {@link #getContextMenu contextMenu}.\n\nDefines the context menu for the rows.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.IContextMenu"},"!category":"class","setEnableColumnResize":{"!description":"Sets a new value for property {@link #getEnableColumnResize enableColumnResize}.\n\nDetermines whether column resizing is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableColumnResize?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnableColumnResize":"type: boolean, description: New value for property <code>enableColumnResize<\/code>"}},"setHeaderVisible":{"!description":"Sets a new value for property {@link #getHeaderVisible headerVisible}.\n\nDetermines whether the header text is shown in the table. Regardless of its value, the given header text is used to label the table correctly for accessibility purposes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderVisible?: Boolean) -> sap.ui.mdc.Table","parameters":{"bHeaderVisible":"type: boolean, description: New value for property <code>headerVisible<\/code>"}},"destroyVariant":{"!description":"Destroys the variant in the aggregation {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"_setShowP13nButton":{"!description":"Controls the visibility of the settings button.\n\n<b>Note:<\/b> <ul> <li>This setting only takes effect when the given <code>p13nMode<\/code> makes the button visible.<\/li> <li>Hiding the button also removes the option for the user to open the personalization dialog. This can lead to situations in which the user can't adjust certain settings although it is required, for example, show some columns again when all columns are hidden.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn(bShowP13nButton: Boolean)","parameters":{"bShowP13nButton":"type: boolean, description: undefined"}},"getColumns":{"!description":"Gets content of aggregation {@link #getColumns columns}.\n\nColumns of the table.\n\n<b>Note:<\/b> This aggregation is managed by the control, can only be populated during the definition in the XML view, and is not bindable. Any changes of the initial aggregation content might result in undesired effects. Changes of the aggregation have to be made with the {@link sap.ui.mdc.p13n.StateUtil StateUtil}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.table.Column]"},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nHeader text that is shown in the table. The header must always be set to comply with accessibility standards, even if other settings make the header invisible.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyCopyProvider":{"!description":"Destroys the copyProvider in the aggregation {@link #getCopyProvider copyProvider}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"getShowRowCount":{"!description":"Gets current value of property {@link #getShowRowCount showRowCount}.\n\nDetermines whether the number of rows is shown along with the header text.\n\n<b>Note:<\/b> Whether this feature can be used depends on whether the model used and the data service can provide a count. Please refer to the documentation of the used model for information on requesting the count, for example, {@link sap.ui.model.odata.v4.ODataModel}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>Table<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.enums.TableP13nMode[] (default: [])<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getHeaderStyle headerStyle} : sap.ui.core.TitleLevel<\/li>\n<li>{@link #getAutoBindOnInit autoBindOnInit} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getHeaderVisible headerVisible} : boolean (default: true)<\/li>\n<li>{@link #getUseColumnLabelsAsTooltips useColumnLabelsAsTooltips} : boolean (default: false)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.ui.mdc.enums.TableSelectionMode (default: None)<\/li>\n<li>{@link #getShowRowCount showRowCount} : boolean (default: true)<\/li>\n<li>{@link #getThreshold threshold} : int (default: -1)<\/li>\n<li>{@link #getSortConditions sortConditions} : object<\/li>\n<li>{@link #getFilterConditions filterConditions} : object (default: {})<\/li>\n<li>{@link #getGroupConditions groupConditions} : object<\/li>\n<li>{@link #getAggregateConditions aggregateConditions} : object<\/li>\n<li>{@link #getEnableExport enableExport} : boolean (default: false)<\/li>\n<li>{@link #getBusyIndicatorDelay busyIndicatorDelay} : int (default: 100)<\/li>\n<li>{@link #getEnableColumnResize enableColumnResize} : boolean (default: true)<\/li>\n<li>{@link #getShowPasteButton showPasteButton} : boolean (default: false)<\/li>\n<li>{@link #getEnablePaste enablePaste} : boolean (default: true)<\/li>\n<li>{@link #getMultiSelectMode multiSelectMode} : sap.ui.mdc.enums.TableMultiSelectMode (default: Default)<\/li>\n<li>{@link #getEnableAutoColumnWidth enableAutoColumnWidth} : boolean (default: false)<\/li>\n<li>{@link #getPropertyInfo propertyInfo} : object (default: [])<\/li>\n<li>{@link #getHideToolbar hideToolbar} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getType type} : sap.ui.mdc.table.TableTypeBase|sap.ui.mdc.enums.TableType<\/li>\n<li>{@link #getColumns columns} : sap.ui.mdc.table.Column[] (default)<\/li>\n<li>{@link #getCreationRow creationRow} : sap.ui.mdc.table.CreationRow<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getVariant variant} : sap.ui.fl.variants.VariantManagement<\/li>\n<li>{@link #getQuickFilter quickFilter} : sap.ui.core.Control<\/li>\n<li>{@link #getRowSettings rowSettings} : sap.ui.mdc.table.RowSettings<\/li>\n<li>{@link #getDataStateIndicator dataStateIndicator} : sap.m.plugins.DataStateIndicator<\/li>\n<li>{@link #getNoData noData} : sap.ui.core.Control|string<\/li>\n<li>{@link #getCopyProvider copyProvider} : sap.m.plugins.CopyProvider<\/li>\n<li>{@link #getContextMenu contextMenu} : sap.ui.core.IContextMenu<\/li>\n<li>{@link #getCellSelector cellSelector} : sap.m.plugins.CellSelector<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFilter filter} : (sap.ui.core.ID | sap.ui.mdc.IFilter)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:rowPress rowPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeExport beforeExport} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:paste paste} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpenContextMenu beforeOpenContextMenu} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","setShowPasteButton":{"!description":"Sets a new value for property {@link #getShowPasteButton showPasteButton}.\n\nDetermines whether the Paste button is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPasteButton?: Boolean) -> sap.ui.mdc.Table","parameters":{"bShowPasteButton":"type: boolean, description: New value for property <code>showPasteButton<\/code>"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"destroyDataStateIndicator":{"!description":"Destroys the dataStateIndicator in the aggregation {@link #getDataStateIndicator dataStateIndicator}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"attachBeforeExport":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired right before the export is triggered.\n\nFor more information about the export settings, see {@link sap.ui.export.Spreadsheet} or {@link topic:7e12e6b9154a4607be9d6072c72d609c Spreadsheet Export Configuration}.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"firePaste":{"!description":"Fires event {@link #event:paste paste} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setType":{"!description":"Sets the aggregated {@link #getType type}.","!static":false,"!category":"function","!type":"fn(vType: sap.ui.mdc.table.TableTypeBase | sap.ui.mdc.enums.TableType) -> sap.ui.mdc.Table","parameters":{"vType":"type: sap.ui.mdc.table.TableTypeBase|sap.ui.mdc.enums.TableType, description: The type to set"}},"getAutoBindOnInit":{"!description":"Gets current value of property {@link #getAutoBindOnInit autoBindOnInit}.\n\nDetermines whether to bind the table automatically after the initial creation or re-creation of the table.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAutoBindOnInit":{"!description":"Sets a new value for property {@link #getAutoBindOnInit autoBindOnInit}.\n\nDetermines whether to bind the table automatically after the initial creation or re-creation of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoBindOnInit?: Boolean) -> sap.ui.mdc.Table","parameters":{"bAutoBindOnInit":"type: boolean, description: New value for property <code>autoBindOnInit<\/code>"}},"getEnableAutoColumnWidth":{"!description":"Gets current value of property {@link #getEnableAutoColumnWidth enableAutoColumnWidth}.\n\nEnables automatic column width calculation. The column width calculation takes the type, column label, referenced properties, and other information into account. The calculated column widths can have a minimum of 3rem and a maximum of 20rem.\n\nThe delegate can customize the automatic column width calculation with the <code>visualSettings.widthSettings<\/code> field in the {@link sap.ui.mdc.table.PropertyInfo PropertyInfo}. To disable the heuristic column width calculation for a particular column, the <code>visualSettings.widthSettings<\/code> field can be set to <code>null<\/code>. Providing a more precise <code>maxLength<\/code> value for the <code>String<\/code> type or <code>precision<\/code> value for numeric types can help the algorithm to produce better results.\n\n<b>Note:<\/b> The column width is not calculated if the <code>width<\/code> property of the column is bound or its value is set.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getThreshold":{"!description":"Gets current value of property {@link #getThreshold threshold}.\n\nNumber of records to be requested from the model.\n\nIf the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, the threshold defines the number of rows that are displayed initially, and the number of rows that are added when the table grows ({@link sap.ui.mdc.table.ResponsiveTableType#getGrowingMode growingMode}).\n\nIf the table type is {@link sap.ui.mdc.table.GridTableType GridTable}, the threshold defines how many additional (not yet visible) data records from the back-end system are pre-fetched. If the <code>threshold<\/code> is lower than the number of visible rows, the number of visible rows is used as the <code>threshold<\/code>. If the value is 0, thresholding is disabled.\n\n<b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the table uses a type-dependent default value.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setContextMenu":{"!description":"Sets the aggregated {@link #getContextMenu contextMenu}.","!static":false,"!category":"function","!type":"fn(oContextMenu: sap.ui.core.IContextMenu) -> sap.ui.mdc.Table","parameters":{"oContextMenu":"type: sap.ui.core.IContextMenu, description: The contextMenu to set"}},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nPersonalization options for the table.\n\n<b>Note:<\/b> Whether a personalization option is supported depends on the used delegate. Please refer to the documentation of the individual delegates. The order of the provided options does not influence their order on the UI.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.enums.TableP13nMode]"}},"sap.ui.mdc.MultiSelectMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.TableMultiSelectMode}<br>Enumeration of the <code>multiSelectMode<\/code> in <code>ListBase<\/code>.","ClearAll":{"!description":"Renders the <code>clearAll<\/code> icon.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class","Default":{"!description":"Renders the <code>selectAll<\/code> checkbox (default behavior).","!category":"enum","!type":"String"}},"sap.ui.mdc.valuehelp.base.Container_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Container with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.Container"},"sap.ui.mdc.link.LinkItem":{"!proto":"sap.ui.core.Element","!category":"class","setPress":{"!description":"Sets a new value for property {@link #getPress press}.\n\nCallback for <code>press<\/code> event.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oPress?: Object) -> sap.ui.mdc.link.LinkItem","parameters":{"oPress":"type: object, description: New value for property <code>press<\/code>"}},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDefines the additional text of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sDescription?: String) -> sap.ui.mdc.link.LinkItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDefines the additional text of the item.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getTarget":{"!description":"Gets current value of property {@link #getTarget target}.\n\nDetermines the target of the <code>Link<\/code> and has to be used as the <code>target<\/code> of an html anchor. The standard values for the <code>target<\/code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href<\/code> property is set.\n\nDefault value is <code>\"_self\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new LinkItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string (default: undefined)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getDescription description} : string (default: undefined)<\/li>\n<li>{@link #getHref href} : string<\/li>\n<li>{@link #getInternalHref internalHref} : string<\/li>\n<li>{@link #getTarget target} : string (default: \"_self\")<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getInitiallyVisible initiallyVisible} : boolean (default: false)<\/li>\n<li>{@link #getPress press} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getInternalHref":{"!description":"Gets current value of property {@link #getInternalHref internalHref}.\n\nDestination link for a navigation operation in internal format provided by the SAP Fiori launchpad (used when navigation happens programmatically). Only for internal use","!static":false,"!category":"function","!type":"fn() -> String"},"setTarget":{"!description":"Sets a new value for property {@link #getTarget target}.\n\nDetermines the target of the <code>Link<\/code> and has to be used as the <code>target<\/code> of an html anchor. The standard values for the <code>target<\/code> property are: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used if the <code>href<\/code> property is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"_self\"<\/code>.","!static":false,"!category":"function","!type":"fn(sTarget?: String) -> sap.ui.mdc.link.LinkItem","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nUnique key of the <code>LinkItem<\/code> that is used for personalization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sKey?: String) -> sap.ui.mdc.link.LinkItem","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"A <code>LinkItem<\/code> control is used in the {@link sap.ui.mdc.Link} control to provide a navigation target.","getHref":{"!description":"Gets current value of property {@link #getHref href}.\n\nDestination link for a navigation operation in external format (used when opening in new tab) using the <code>hrefForExternal<\/code> method of the CrossApplicationNavigation service.","!static":false,"!category":"function","!type":"fn() -> String"},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nUnique key of the <code>LinkItem<\/code> that is used for personalization.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.link.LinkItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nText of the <code>Link<\/code> that is displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"setHref":{"!description":"Sets a new value for property {@link #getHref href}.\n\nDestination link for a navigation operation in external format (used when opening in new tab) using the <code>hrefForExternal<\/code> method of the CrossApplicationNavigation service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHref?: String) -> sap.ui.mdc.link.LinkItem","parameters":{"sHref":"type: string, description: New value for property <code>href<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon of the item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.link.LinkItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getPress":{"!description":"Gets current value of property {@link #getPress press}.\n\nCallback for <code>press<\/code> event.","!static":false,"!category":"function","!type":"fn() -> Object"},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.mdc.link.LinkItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!module":"sap/ui/mdc/link/LinkItem","!helpDescription":"A <code>LinkItem<\/code> control is used in the {@link sap.ui.mdc.Link} control to provide a navigation target.","getInitiallyVisible":{"!description":"Gets current value of property {@link #getInitiallyVisible initiallyVisible}.\n\nDetermines the initial visibility of the <code>LinkItem<\/code>. If set to <code>true<\/code>, the item will appear on the <code>Popover<\/code> without any personalization.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setInternalHref":{"!description":"Sets a new value for property {@link #getInternalHref internalHref}.\n\nDestination link for a navigation operation in internal format provided by the SAP Fiori launchpad (used when navigation happens programmatically). Only for internal use\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInternalHref?: String) -> sap.ui.mdc.link.LinkItem","parameters":{"sInternalHref":"type: string, description: New value for property <code>internalHref<\/code>"}},"setInitiallyVisible":{"!description":"Sets a new value for property {@link #getInitiallyVisible initiallyVisible}.\n\nDetermines the initial visibility of the <code>LinkItem<\/code>. If set to <code>true<\/code>, the item will appear on the <code>Popover<\/code> without any personalization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInitiallyVisible?: Boolean) -> sap.ui.mdc.link.LinkItem","parameters":{"bInitiallyVisible":"type: boolean, description: New value for property <code>initiallyVisible<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nText of the <code>Link<\/code> that is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.mdc.link.LinkItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"module:sap/ui/mdc/BaseDelegate":{"!description":"Basic Delegate for {@link sap.ui.mdc.Control}, {@link sap.ui.mdc.Element}<br>\n\nAll delegate implementations for MDC controls must be derived directly or indirectly from this entity. Applications should implement {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap} to provide type mappings based on their model usage. Please also see the following extensible presets: {@link module:sap/ui/mdc/DefaultTypeMap sap.ui.mdc.DefaultTypeMap}, {@link module:sap/ui/mdc/odata/TypeMap sap.ui.mdc.odata.TypeMap}, {@link module:sap/ui/mdc/odata/v4/TypeMap sap.ui.mdc.odata.v4.TypeMap}","!module":"sap/ui/mdc/BaseDelegate","!helpDescription":"Basic Delegate for {@link sap.ui.mdc.Control}, {@link sap.ui.mdc.Element}<br>\n\nAll delegate implementations for MDC controls must be derived directly or indirectly from this entity. Applications should implement {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap} to provide type mappings based on their model usage. Please also see the following extensible presets: {@link module:sap/ui/mdc/DefaultTypeMap sap.ui.mdc.DefaultTypeMap}, {@link module:sap/ui/mdc/odata/TypeMap sap.ui.mdc.odata.TypeMap}, {@link module:sap/ui/mdc/odata/v4/TypeMap sap.ui.mdc.odata.v4.TypeMap}","!category":"namespace","module:sap/ui/mdc/BaseDelegate":"module:sap/ui/mdc/BaseDelegate","getTypeMap":{"!description":"Returns the typeutil configuration for this delegate.","!category":"function","!type":"fn(oControl: sap.ui.mdc.Control) -> module:sap/ui/mdc/util/TypeMap"}},"sap.ui.mdc.enum":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums}<br>Enumerations for MDC library","ConditionValidated":"sap.ui.mdc.enum.ConditionValidated","FieldDisplay":"sap.ui.mdc.enum.FieldDisplay","OperatorValueType":"sap.ui.mdc.enum.OperatorValueType","ReasonMode":"sap.ui.mdc.enum.ReasonMode","ContentMode":"sap.ui.mdc.enum.ContentMode","SelectType":"sap.ui.mdc.enum.SelectType","!category":"namespace","ProcessingStrategy":"sap.ui.mdc.enum.ProcessingStrategy","!module":"sap/ui/mdc/library","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums}<br>Enumerations for MDC library","BaseType":"sap.ui.mdc.enum.BaseType","ActionToolbarActionAlignment":"sap.ui.mdc.enum.ActionToolbarActionAlignment","EditMode":"sap.ui.mdc.enum.EditMode","OperatorOverwrite":"sap.ui.mdc.enum.OperatorOverwrite","LinkType":"sap.ui.mdc.enum.LinkType","FilterBarValidationStatus":"sap.ui.mdc.enum.FilterBarValidationStatus","PropagationReason":"sap.ui.mdc.enum.PropagationReason"},"sap.ui.mdc.field.content.UnitContent":{"!description":"Object-based definition of the unit content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!module":"sap/ui/mdc/field/content/UnitContent","!helpDescription":"Object-based definition of the unit content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!category":"namespace"},"module:sap/ui/mdc/odata/TypeMap":{"!description":"OData-specific {@link module:sap/ui/mdc/util/TypeMap TypeMap} configuration.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.<br> <b>Note:<\/b> This <code>TypeMap<\/code> implementation contains the following types:\n\n<ul> <li>{@link sap.ui.model.type.Boolean} (alias <code>Boolean<\/code>)<\/li> <li>{@link sap.ui.model.type.Currency} (alias <code>Currency<\/code>)<\/li> <li>{@link sap.ui.model.type.Date} (alias <code>Date<\/code>)<\/li> <li>{@link sap.ui.model.type.DateTime} (alias <code>DateTime<\/code>)<\/li> <li>{@link sap.ui.model.type.Float} (alias <code>Float<\/code>)<\/li> <li>{@link sap.ui.model.type.Integer} (alias <code>Integer<\/code>)<\/li> <li>{@link sap.ui.model.type.String} (alias <code>String<\/code>)<\/li> <li>{@link sap.ui.model.type.Time} (alias <code>Time<\/code>)<\/li> <li>{@link sap.ui.model.type.Unit} (alias <code>Unit<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Binary<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Boolean} (alias <code>Edm.Boolean<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Byte} (alias <code>Edm.Byte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Date} (alias <code>Edm.Date<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTime} (alias <code>Edm.DateTime<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTimeOffset} (alias <code>Edm.DateTimeOffset<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Decimal} (alias <code>Edm.Decimal<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Double} (alias <code>Edm.Double<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Float<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Guid} (alias <code>Edm.Guid<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int16} (alias <code>Edm.Int16<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int32} (alias <code>Edm.Int32<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int64} (alias <code>Edm.Int64<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.SByte} (alias <code>Edm.SByte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Single<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Stream<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.String} (alias <code>Edm.String<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Time} (alias <code>Edm.Time<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.TimeOfDay} (alias <code>Edm.TimeOfDay<\/code>)<\/li> <\/ul>","module:sap/ui/mdc/odata/TypeMap":"module:sap/ui/mdc/odata/TypeMap","!module":"sap/ui/mdc/odata/TypeMap","!helpDescription":"OData-specific {@link module:sap/ui/mdc/util/TypeMap TypeMap} configuration.\n\n<b>Note:<\/b> The modules of all data types registered in a <code>TypeMap<\/code> must be loaded in advance.<br> <b>Note:<\/b> This <code>TypeMap<\/code> implementation contains the following types:\n\n<ul> <li>{@link sap.ui.model.type.Boolean} (alias <code>Boolean<\/code>)<\/li> <li>{@link sap.ui.model.type.Currency} (alias <code>Currency<\/code>)<\/li> <li>{@link sap.ui.model.type.Date} (alias <code>Date<\/code>)<\/li> <li>{@link sap.ui.model.type.DateTime} (alias <code>DateTime<\/code>)<\/li> <li>{@link sap.ui.model.type.Float} (alias <code>Float<\/code>)<\/li> <li>{@link sap.ui.model.type.Integer} (alias <code>Integer<\/code>)<\/li> <li>{@link sap.ui.model.type.String} (alias <code>String<\/code>)<\/li> <li>{@link sap.ui.model.type.Time} (alias <code>Time<\/code>)<\/li> <li>{@link sap.ui.model.type.Unit} (alias <code>Unit<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Binary<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Boolean} (alias <code>Edm.Boolean<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Byte} (alias <code>Edm.Byte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Date} (alias <code>Edm.Date<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTime} (alias <code>Edm.DateTime<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.DateTimeOffset} (alias <code>Edm.DateTimeOffset<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Decimal} (alias <code>Edm.Decimal<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Double} (alias <code>Edm.Double<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Float<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Guid} (alias <code>Edm.Guid<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int16} (alias <code>Edm.Int16<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int32} (alias <code>Edm.Int32<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Int64} (alias <code>Edm.Int64<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.SByte} (alias <code>Edm.SByte<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Single} (alias <code>Edm.Single<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Stream} (alias <code>Edm.Stream<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.String} (alias <code>Edm.String<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.Time} (alias <code>Edm.Time<\/code>)<\/li> <li>{@link sap.ui.model.odata.type.TimeOfDay} (alias <code>Edm.TimeOfDay<\/code>)<\/li> <\/ul>","!category":"namespace"},"sap.ui.mdc.field.content.ContentFactory":{"!description":"Object-based factory that handles the content creation process of the {@link sap.ui.mdc.field.FieldBase}.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type {@link sap.ui.base.Object#constructor sap.ui.base.Object} can be used.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.content.ContentFactory with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":"true","!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()"},"updateConditionType":{"!description":"Updates the <code>FormatOptions<\/code> of the internal <code>ConditionsType<\/code>.","!static":"true","!category":"function","!type":"fn()"},"updateDefaultValueHelpTitle":{"!description":"Updates the title of the default value help.\n\nThis is used to forward the label of the current connected control.","!static":"true","!category":"function","!type":"fn(oValueHelp: sap.ui.mdc.ValueHelp, sTitle: String)"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.content.ContentFactory.","!static":"true","!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getProvideDefaultValueHelp":{"!description":"Determines if a default value help is needed","!static":"true","!category":"function","!type":"fn(oContentType: sap.ui.mdc.field.content.DefaultContent, aOperators: [String], sEditMode: sap.ui.mdc.enums.FieldEditMode, iMaxConditions: Number, bIsSingleValue: Boolean) -> Boolean"},"createContent":{"!description":"Creates the suitable controls for the given content type and mode and returns the control instances.","!static":"true","!category":"function","!type":"fn(oContentType: sap.ui.mdc.field.content.DefaultContent, sContentMode: sap.ui.mdc.enums.ContentMode, sId: String, bProvideDefaultValueHelp: Boolean) -> [Promise<sap.ui.core.Element]"},"!module":"sap/ui/mdc/field/content/ContentFactory","!helpDescription":"Object-based factory that handles the content creation process of the {@link sap.ui.mdc.field.FieldBase}.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type {@link sap.ui.base.Object#constructor sap.ui.base.Object} can be used.","getContentMode":{"!description":"Determines in which {@link sap.ui.mdc.enums.ContentMode} the given content type is displayed.","!static":"true","!category":"function","!type":"fn(oContentType: sap.ui.mdc.field.content.DefaultContent, sEditMode: sap.ui.mdc.enums.FieldEditMode, iMaxConditions: Number, bMultipleLines: Boolean, aOperators: [String]) -> sap.ui.mdc.enums.ContentMode"},"getContentType":{"!description":"Determines which content type object to use.","!static":"true","!category":"function","!type":"fn(sBaseType: sap.ui.mdc.enums.BaseType, iMaxConditions: Number, bIsTriggerable: Boolean) -> sap.ui.mdc.field.content.DefaultContent"},"!category":"namespace"},"sap.ui.mdc.table.TreeTableType":{"!description":"The table type info class for the metadata-driven table.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.TreeTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.GridTableType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.TreeTableType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TreeTableType<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.table.GridTableType#constructor sap.ui.mdc.table.GridTableType} can be used.","!module":"sap/ui/mdc/table/TreeTableType","!helpDescription":"The table type info class for the metadata-driven table.","!proto":"sap.ui.mdc.table.GridTableType","!category":"class"},"module:sap/ui/mdc/ChartDelegate":{"getZoomState":{"!description":"Gets the current zooming information for the inner chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> sap.ui.mdc.chart.ZoomState"},"createInnerChartContent":{"!description":"Binds the inner chart to the back-end data and creates the inner chart content.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, fnCallbackDataLoaded: fn()) -> Promise"},"removeItem":{"!description":"Removes an existing chart item for a given property name and updates the inner chart. Called and used by <code>p13n<\/code>.","!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item, mPropertyBag: Object) -> Promise<boolean>"},"setChartTooltipVisibility":{"!description":"Sets tooltips to visible/invisible for the inner chart. <b>Note:<\/b> This function is called by the chart only. You must not call it directly but use {@link sap.ui.mdc.Chart#setShowChartTooltip setShowChartTooltip} instead.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, bVisible: Boolean)"},"showOverlay":{"!description":"Adds/Removes the busy overlay shown over the inner chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, bShow: Boolean)"},"insertItemToInnerChart":{"!description":"Inserts a chart item (measure / dimension for <code>sap.chart.Chart<\/code>) into the inner chart.<br> This function is called by the chart for a change of the <code>Items<\/code> aggregation.<br> <b>Note:<\/b> Do not call this yourself, as it would not be synced with the chart, but insert the item into the chart instead.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oChartItem: sap.ui.mdc.chart.Item, iIndex: Number)"},"setNoDataText":{"!description":"Sets a \"No Data\" text for the inner chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, sText: String)"},"updateBindingInfo":{"!description":"Updates the binding info with the relevant filters and sorters.<br>\n\nBy default, this method updates a given {@link sap.ui.base.ManagedObject.AggregationBindingInfo AggregationBindingInfo} with the return value from the delegate's own {@link module:sap/ui/mdc/ChartDelegate.getFilters getFilters}.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo)"},"getInternalChartNameFromPropertyNameAndKind":{"!description":"Gets an ID that is used in the internal chart for the measure/dimension.<br> For standard cases, this is just the ID of the property.<br> If it is necessary to use another ID internally inside the chart (for example, for duplicate property IDs) this method can be overwritten.<br> In this case, <code>getPropertyFromNameAndKind<\/code> needs to be overwritten as well.","!category":"function","!type":"fn(sName: String, sKind: String, oChart: sap.ui.mdc.Chart) -> String"},"createInitialChartContent":{"!description":"Creates the initial content for the chart before the metadata is retrieved.<br> This can be used by chart libraries that can already show some information without the actual data (for example, axis labels, legend, ...).","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart)"},"!category":"namespace","getChartTypeInfo":{"!description":"Gets the current chart type.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> Object"},"zoomOut":{"!description":"Notifies the inner chart to zoom out.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart)"},"fetchProperties":{"!description":"Gets the relevant <code>PropertyInfo<\/code> objects based on the metadata used with the chart instance.\n\n<b>Note:<\/b> The result of this function must be kept stable throughout the lifecycle of your application. Any changes of the returned values might result in undesired effects.\n\n<b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.Chart#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/ChartDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oChart: sap.ui.mdc.Chart) -> [Promise<sap.ui.mdc.chart.PropertyInfo]"},"getBindingInfo":{"!description":"Gets the binding info for a given chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> sap.ui.base.ManagedObject.AggregationBindingInfo"},"getInnerChartBound":{"!description":"Gets the information whether the inner chart is currently bound.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> Boolean"},"getPropertyFromNameAndKind":{"!description":"Gets a <code>PropertyInfo<\/code> object based on an internal chart dimension/measure and type of a property.","!category":"function","!type":"fn(sName: String, sKind: String, oChart: sap.ui.mdc.Chart) -> sap.ui.mdc.chart.PropertyInfo"},"addItem":{"!description":"Creates a new chart item for a given property name and updates the inner chart.<br> <b>Note:<\/b> This does <b>not<\/b> add the chart item to the <code>Items<\/code> aggregation of the chart. Called and used by <code>p13n<\/code>.","!category":"function","!type":"fn(sPropertyName: String, mPropertyBag: Object, sRole?: String) -> Promise<sap.ui.mdc.chart.Item>"},"module:sap/ui/mdc/ChartDelegate":"module:sap/ui/mdc/ChartDelegate","getFilters":{"!description":"Gets the filters that are applied when updating the chart's binding based on the filter conditions of the chart itself and its associated {@link sap.ui.mdc.IFilterSource IFilterSource}.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> [sap.ui.model.Filter]"},"getInnerChart":{"!description":"Gets the instance of the inner chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> sap.ui.core.Control"},"getDrillStack":{"!description":"Gets the current drilling stack of the inner chart.<br> The returned objects need at least a <code>label<\/code> and a <code>name<\/code> property.<br> Also, a <code>dimension<\/code> array containing the dimension drilling stack at the current level is required.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> [Object]"},"setLegendVisible":{"!description":"Sets the visibility of the legend. <b>Note:<\/b> This function is called by the chart only. You must not call it directly but use {@link sap.ui.mdc.Chart#setLegendVisible LegendVisible} instead.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, bVisible: Boolean)"},"!description":"Base Delegate for {@link sap.ui.mdc.Chart Chart}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Chart Chart}.<br> This class provides method calls, that are called by the <code>Chart<\/code> for specific operations and overwrite the internal behavior.","fetchFieldInfos":{"!description":"The provided map is used to determine the navigation behavior of the {@link sap.ui.mdc.chart.ChartSelectionDetails}. The navigation shows a list of all entries if more than 1 entry of {@link sap.ui.mdc.field.FieldInfoBase} is given in the map. If there is only one entry, the navigation goes directly to the content of the given {@link sap.ui.mdc.field.FieldInfoBase}.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oSelectionDetails: sap.ui.mdc.chart.ChartSelectionDetails, oBindingContext: sap.ui.model.Context) -> Promise<Map<Map<string,sap.ui.mdc.field.FieldInfoBase>>"},"zoomIn":{"!description":"Notifies the inner chart to zoom in.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart)"},"removeItemFromInnerChart":{"!description":"Removes a chart item (measure / dimension for <code>sap.chart.Chart<\/code>) from the inner chart.<br> This function is called by the chart for a change of the <code>Items<\/code> aggregation.<br> <b>Note:<\/b> Do not call this yourself, as it would not be synced with the chart, but remove the item from the chart instead.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oChartItem: sap.ui.mdc.chart.Item)"},"determineEnableNavForDetailsItem":{"!description":"Determines if a given <code>SelectionDetailsItem<\/code> is enabled.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, mData: Array, oContext: sap.ui.model.Context | undefined) -> Boolean"},"getChartTypeLayoutConfig":{"!description":"This function is used by <code>P13n<\/code> to determine which chart type supports which layout options. There might be chart types that do not support certain layout options (for example, \"Axis3\").","!category":"function","!type":"fn() -> [sap.ui.mdc.chart.ChartTypeLayoutConfig]"},"getAvailableChartTypes":{"!description":"Gets the available chart types for the current state of the inner chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> [sap.ui.mdc.chart.ChartTypeObject]"},"!module":"sap/ui/mdc/ChartDelegate","!helpDescription":"Base Delegate for {@link sap.ui.mdc.Chart Chart}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Chart Chart}.<br> This class provides method calls, that are called by the <code>Chart<\/code> for specific operations and overwrite the internal behavior.","getSortedDimensions":{"!description":"Gets all sorted dimensions of an inner chart. This is used to determine possible drill-down dimensions in the drill-down popover of the chart.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> [Promise<sap.ui.mdc.chart.PropertyInfo]"},"rebind":{"!description":"Checks the binding of the chart and rebinds it if required.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo)"},"changedNoDataStruct":{"!description":"This method is called to update the no data structure.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oControl: sap.ui.core.Control)"},"setChartType":{"!description":"Sets the chart type of the inner chart. This function is called by the chart when the <code>chartType<\/code> property is updated. <b>Note:<\/b> This function is called by the chart only. You must not call it directly but use {@link sap.ui.mdc.Chart#chartType chartType} instead.","!category":"function","!type":"fn(sChartType: String)"},"getInnerChartSelectionHandler":{"!description":"Gets the event handler for <code>SelectionDetails<\/code> as an object.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> sap.ui.mdc.chart.SelectionDetails"},"getFilterDelegate":{"!description":"Gets the filter delegate of the chart that provides basic filter functionality, such as adding filter fields. <b>Note:<\/b> The functionality provided in this delegate acts as a subset of a <code>FilterBarDelegate<\/code> to enable the chart for inbuilt filtering.","!category":"function","!type":"fn() -> {addItem:function(sap.ui.mdc.Chart,string) : Promise<sap.ui.mdc.FilterField>}"},"getDrillableItems":{"!description":"Gets the drillable items. This function is used by the breadcrumb navigation.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> [sap.ui.mdc.chart.Item]"},"initializeInnerChart":{"!description":"Loads the required libraries and creates the inner chart.<br> By default, the method returns <code>Promise.reject()<\/code>.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart) -> Promise"}},"sap.ui.mdc.field.content.LinkContent":{"!description":"Object-based definition of the link content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}. The <code>LinkContent<\/code> can extend any data-type based content.","!module":"sap/ui/mdc/field/content/LinkContent","!helpDescription":"Object-based definition of the link content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}. The <code>LinkContent<\/code> can extend any data-type based content.","!category":"namespace"},"sap.ui.mdc.table.ResponsiveTableType":{"!description":"The table type info class for the metadata-driven table.","setShowDetailsButton":{"!description":"Sets a new value for property {@link #getShowDetailsButton showDetailsButton}.\n\nSpecifies whether the Show / Hide Details button is shown.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area, while the columns with <code>Low<\/code> importance are hidden.<br> On mobile phones, the columns with <code>Medium<\/code> importance are also hidden.<br> As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDetailsButton?: Boolean) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"bShowDetailsButton":"type: boolean, description: New value for property <code>showDetailsButton<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.ResponsiveTableType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setPopinLayout":{"!description":"Sets a new value for property {@link #getPopinLayout popinLayout}.\n\nDefines the layout in which the table pop-in rows are rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Block\"<\/code>.","!static":false,"!category":"function","!type":"fn(sPopinLayout?: sap.m.PopinLayout) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"sPopinLayout":"type: sap.m.PopinLayout, description: New value for property <code>popinLayout<\/code>"}},"getGrowingMode":{"!description":"Gets current value of property {@link #getGrowingMode growingMode}.\n\nSpecifies the growing mode.\n\nDefault value is <code>Basic<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.TableGrowingMode"},"!proto":"sap.ui.mdc.table.TableTypeBase","!category":"class","setDetailsButtonSetting":{"!description":"Sets a new value for property {@link #getDetailsButtonSetting detailsButtonSetting}.\n\nDefines which columns are hidden instead of moved into the pop-in area depending on their importance. See {@link sap.ui.mdc.table.ResponsiveColumnSettings#getImportance} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton<\/code> to <code>true<\/code>.<br> If no importance is given, a device-dependent default configuration is used.<br> If this property is changed after the table has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDetailsButtonSetting: [sap.ui.core.Priority]) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"sDetailsButtonSetting":"type: sap.ui.core.Priority[], description: New value for property <code>detailsButtonSetting<\/code>"}},"getDetailsButtonSetting":{"!description":"Gets current value of property {@link #getDetailsButtonSetting detailsButtonSetting}.\n\nDefines which columns are hidden instead of moved into the pop-in area depending on their importance. See {@link sap.ui.mdc.table.ResponsiveColumnSettings#getImportance} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton<\/code> to <code>true<\/code>.<br> If no importance is given, a device-dependent default configuration is used.<br> If this property is changed after the table has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Priority]"},"setGrowingMode":{"!description":"Sets a new value for property {@link #getGrowingMode growingMode}.\n\nSpecifies the growing mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Basic<\/code>.","!static":false,"!category":"function","!type":"fn(sGrowingMode?: sap.ui.mdc.enums.TableGrowingMode) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"sGrowingMode":"type: sap.ui.mdc.enums.TableGrowingMode, description: New value for property <code>growingMode<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.ResponsiveTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>ResponsiveTableType<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGrowingMode growingMode} : sap.ui.mdc.enums.TableGrowingMode (default: Basic)<\/li>\n<li>{@link #getShowDetailsButton showDetailsButton} : boolean (default: false)<\/li>\n<li>{@link #getDetailsButtonSetting detailsButtonSetting} : sap.ui.core.Priority[]<\/li>\n<li>{@link #getPopinLayout popinLayout} : sap.m.PopinLayout (default: \"Block\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.table.TableTypeBase#constructor sap.ui.mdc.table.TableTypeBase}\ncan be used as well.","!module":"sap/ui/mdc/table/ResponsiveTableType","!helpDescription":"The table type info class for the metadata-driven table.","getPopinLayout":{"!description":"Gets current value of property {@link #getPopinLayout popinLayout}.\n\nDefines the layout in which the table pop-in rows are rendered.\n\nDefault value is <code>\"Block\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PopinLayout"},"getShowDetailsButton":{"!description":"Gets current value of property {@link #getShowDetailsButton showDetailsButton}.\n\nSpecifies whether the Show / Hide Details button is shown.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area, while the columns with <code>Low<\/code> importance are hidden.<br> On mobile phones, the columns with <code>Medium<\/code> importance are also hidden.<br> As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.table.Column_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.Column with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.Column"},"sap.ui.mdc.valuehelp.base.Content":{"getMaxConditions":{"!description":"Returns the maximum allowed number of conditions, -1 if no limit is set.","!static":false,"!category":"function","!type":"fn() -> Number"},"onContainerOpen":{"!description":"Performs logic needed if the container opens.","!static":false,"!category":"function","!type":"fn()"},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nThis event is fired if the selected condition has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTypeaheadSuggested":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:typeaheadSuggested typeaheadSuggested} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"shouldOpenOnNavigate":{"!description":"Defines if the typeahead containers values can be navigated without visibly opening the help","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachVisualFocusSet":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:visualFocusSet visualFocusSet} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"onContainerClose":{"!description":"Performs logic needed if the container closes.","!static":false,"!category":"function","!type":"fn()"},"isNavigationEnabled":{"!description":"Determines if navigation via arrow keys should be possible.\n\nIn ComboBox-like case keyboard-navigation should be anabled if closed and if open. If only typeahead is used (and maybe an value help dialog) keyboard-navigation schould be enabled only if typeahed is open.\n\nAs not all rows might be loaded, navigation with home, end, page up or dowm might be disabled, depending on the used content.","!static":false,"!category":"function","!type":"fn(iStep: Number) -> Boolean","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"getContainerConfig":{"!description":"Provides a configuration map for supported containers.","!static":false,"!category":"function","!type":"fn() -> Object | undefined"},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseAsValueHelp":{"!description":"If the container is used for typeahead it might be wanted that the same content should also be shown as valuehelp. If not, the field should not show a valuehelp icon.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears in the tab header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"isMultiSelect":{"!description":"Returns info if the given content is in multi select mode","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInitialFocusedControl":{"!description":"Getter for the initial focusable <code>control<\/code> on the panel.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"awaitValueHelpDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code> of the value help.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getFormattedTitle":{"!description":"Determines the title used in the <code>TabBar<\/code> of the dialog.\n\n<b>Note:<\/b> This function is used by the container and must not be used from outside","!static":false,"!category":"function","!type":"fn(iCount: Number) -> String","parameters":{"iCount":"type: int, description: Number of selected items or conditions"}},"isContainerOpen":{"!description":"Checks if the parent container is open.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCount":{"!description":"Returns number of relevant conditions for this content","!static":false,"!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject]) -> Number","parameters":{"aConditions":"type: sap.ui.mdc.condition.ConditionObject[], description: Array of conditions"}},"isContainerOpening":{"!description":"Checks if the parent container is opening.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","navigate":{"!description":"Navigates the typeaheads values (optional)","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"removeVisualFocus":{"!description":"The focus visualization of the field help needs to be removed as the user starts typing into the source control.","!static":false,"!category":"function","!type":"fn()"},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nHide content temporary.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.Content.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getValueHelpInstance":{"!description":"Determines the <code>ValueHelp<\/code> instance.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ValueHelp"},"setShortTitle":{"!description":"Sets a new value for property {@link #getShortTitle shortTitle}.\n\nTitle text that appears in the dialog header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sShortTitle?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sShortTitle":"type: string, description: New value for property <code>shortTitle<\/code>"}},"getControl":{"!description":"Returns control connected to value help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nHide content temporary.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachVisualFocusSet":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:visualFocusSet visualFocusSet} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nThis event is fired if the visual focus is set to the value help.\n\nIn this case the visual focus needs to be removed from the opening field, but the real focus must stay there.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachNavigated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nThis event is fired if a navigation has been executed in the content.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"isSingleSelect":{"!description":"Returns if the value help is used for single selection.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears in the tab header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"attachTypeaheadSuggested":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:typeaheadSuggested typeaheadSuggested} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nThis event is fired after a suggested item has been found for a type-ahead.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"createCondition":{"!description":"Creates a condition based on the used operator.","!static":false,"!category":"function","!type":"fn(vValue: Object, sDescription?: String, oPayload?: Object) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDescription":"type: string, description: Description of the operator","oPayload":"type: object, description: Payload","vValue":"type: any, description: Value of the condition. For item conditions, this must be the key."}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Content with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"isQuickSelectSupported":{"!description":"Determines if quick selection is supported.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireVisualFocusSet":{"!description":"Fires event {@link #event:visualFocusSet visualFocusSet} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"observeChanges":{"!description":"Observes property and aggregation changes.","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Change"}},"!module":"sap/ui/mdc/valuehelp/base/Content","attachRequestSwitchToDialog":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nThis event is fired if the value help should switch to dialog mode.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe content checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the <code>Container<\/code> element.","!static":false,"!category":"function","!type":"fn(oConfig: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration) -> Promise<sap.ui.mdc.valuehelp.base.ValueHelpItem>","parameters":{"oConfig":"type: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration, description: Configuration"}},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","setVisualFocus":{"!description":"The focus visualization of the field help needs to be set as the user starts naigation into the value help items.","!static":false,"!category":"function","!type":"fn()"},"detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"handleFilterValueUpdate":{"!description":"Called if the <code>filterValue<\/code> property changed.","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Change"}},"detachNavigated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireTypeaheadSuggested":{"!description":"Fires event {@link #event:typeaheadSuggested typeaheadSuggested} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nThis event is fired if the change is cancelled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFilterValue":{"!description":"Sets a new value for property {@link #getFilterValue filterValue}.\n\nValue for filtering ($search).\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterValue?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sFilterValue":"type: string, description: New value for property <code>filterValue<\/code>"}},"getShortTitle":{"!description":"Gets current value of property {@link #getShortTitle shortTitle}.\n\nTitle text that appears in the dialog header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getContent":{"!description":"Loads additional dependencies, creates and returns displayed content.","!static":false,"!category":"function","!type":"fn() -> Promise<sap.ui.core.Control>"},"!proto":"sap.ui.core.Element","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nThis event is fired if a change of the content is confirmed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAriaAttributes":{"!description":"Returns the aria attributes the field needs from the value help.\n\n<b>Note<\/b> This function needs only to be implemented for <code>Content<\/code> implementing the <code>sap.ui.mdc.valuehelp.Popover<\/code> container. On dialogs the <code>Dialog<\/code> container defines the attributes, as it could have multiple contents.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> Object","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as ValueHelp might not be connected to a field)"}},"setDisplayContent":{"!description":"Sets the aggregated {@link #getDisplayContent displayContent}.","!static":false,"!category":"function","!type":"fn(oDisplayContent: sap.ui.core.Control) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oDisplayContent":"type: sap.ui.core.Control, description: The displayContent to set"}},"!category":"class","getRequiresTokenizer":{"!description":"Determines if value help dialog should show the tokenizer for the content.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isValidationSupported":{"!description":"Defines if the typeahead can be used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavigated":{"!description":"Fires event {@link #event:navigated navigated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"provideScrolling":{"!description":"Determines if the the content needs to provide a scrolling mechanism like a {@link sap.m.ScrollContainer ScrollContainer}.\n\n<b>Note:<\/b> This function is used by the content and must not be used from outside.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setConfig":{"!description":"Sets a new value for property {@link #getConfig config}.\n\nInternal configuration.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oConfig?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oConfig":"type: object, description: New value for property <code>config<\/code>"}},"destroyDisplayContent":{"!description":"Destroys the displayContent in the aggregation {@link #getDisplayContent displayContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.Content"},"fireConfirm":{"!description":"Fires event {@link #event:confirm confirm} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>Content<\/code>.\n\nThis is the basis for various types of value help content. It cannot be used directly.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<li>{@link #getShortTitle shortTitle} : string (default: \"\")<\/li>\n<li>{@link #getTokenizerTitle tokenizerTitle} : string (default: \"\")<\/li>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getFilterValue filterValue} : string (default: \"\")<\/li>\n<li>{@link #getConfig config} : object (default: {})<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDisplayContent displayContent} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:requestSwitchToDialog requestSwitchToDialog} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigated navigated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:typeaheadSuggested typeaheadSuggested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visualFocusSet visualFocusSet} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nConditions of the value help.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"getDisplayContent":{"!description":"Gets content of aggregation {@link #getDisplayContent displayContent}.\n\nContent control that is put inside the parent container\n\n<b>Note:<\/b> This aggregation must not be set from outside, it must only be used by the corresponding container.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getValueHelpIcon":{"!description":"Return the value help icon that should be used for the field.\n\n<b>Note<\/b> This function needs only to be implemented for <code>Content<\/code> implementing the <code>sap.ui.mdc.valuehelp.Popover<\/code> container. On dialogs the <code>sap.ui.mdc.valuehelp.Dialog<\/code> container defines the icon, as it could have multiple contents.","!static":false,"!category":"function","!type":"fn() -> null | String"},"shouldOpenOnClick":{"!description":"Defines if the typeahead content desires opening the typeahead whenever a user clicks on a connected control","!static":false,"!category":"function","!type":"fn() -> Boolean"},"onHide":{"!description":"Called if the content will be hidden.","!static":false,"!category":"function","!type":"fn()"},"setHighlightId":{"!description":"Temporarily highlights a typeahead item identified by it's id. Navigation events or other updates may lead to the item no longer being highlighted.","!static":false,"!category":"function","!type":"fn(sHighlightId: String)","parameters":{"sHighlightId":"type: string, description: control id of the item to be highlighted"}},"onBeforeShow":{"!description":"Finalize content before it is shown.","!static":false,"!category":"function","!type":"fn(bInitial: Boolean)","parameters":{"bInitial":"type: boolean, description: Indicates, if the content is to be shown for the first time since it's container opened."}},"detachRequestSwitchToDialog":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getFilterValue":{"!description":"Gets current value of property {@link #getFilterValue filterValue}.\n\nValue for filtering ($search).\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"onShow":{"!description":"Called if the content will be shown.","!static":false,"!category":"function","!type":"fn(bInitial: Boolean) -> Object","parameters":{"bInitial":"type: boolean, description: Indicates, if the content is shown for the first time since it's container opened."}},"getFormattedShortTitle":{"!description":"Determines the title used in the header of the dialog.\n\n<b>Note:<\/b> This function is used by the container and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> String"},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nConditions of the value help.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getConfig":{"!description":"Gets current value of property {@link #getConfig config}.\n\nInternal configuration.\n\n<b>Note:<\/b> This property must not be set from outside, it must only be used by the corresponding container.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"handleConditionsUpdate":{"!description":"Called if the <code>conditions<\/code> property changed.","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Change"}},"getValueHelpDelegate":{"!description":"Returns the used <code>ValueHelpDelegate<\/code>.","!static":false,"!category":"function","!type":"fn() -> module:sap/ui/mdc/BaseDelegate"},"fireRequestSwitchToDialog":{"!description":"Fires event {@link #event:requestSwitchToDialog requestSwitchToDialog} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isValueHelpDelegateInitialized":{"!description":"Determines if delegate of the value help has been initialized.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isTypeahead":{"!description":"Determines if the container of the content is used as <code>typeAhead<\/code> inside the value help.\n\n<b>Note:<\/b> This function is used by the content and must not be used from outside.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTokenizerTitle":{"!description":"Sets a new value for property {@link #getTokenizerTitle tokenizerTitle}.\n\nTitle text that appears in the dialog tokenizer panel if only one content exists.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTokenizerTitle?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sTokenizerTitle":"type: string, description: New value for property <code>tokenizerTitle<\/code>"}},"getTokenizerTitle":{"!description":"Gets current value of property {@link #getTokenizerTitle tokenizerTitle}.\n\nTitle text that appears in the dialog tokenizer panel if only one content exists.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"onConnectionChange":{"!description":"Called if <code>ValueHelp<\/code> connection to a control changed.","!static":false,"!category":"function","!type":"fn()"},"isSearchSupported":{"!description":"Determines if the content supports search.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormattedTokenizerTitle":{"!description":"Determines the title used in the header of the dialog for the bottom tokenizer.\n\n<b>Note:<\/b> This function is used by the container and must not be used from outside","!static":false,"!category":"function","!type":"fn(iCount: Number) -> String","parameters":{"iCount":"type: int, description: Number of selected items or conditions"}}},"sap.ui.mdc.valuehelp.base.ITypeaheadContainer":{"!description":"Interface for valuehelp {@link sap.ui.mdc.valuehelp.base.Container Containers} supporting typeahead functionality","!module":"sap/ui/mdc/library","!category":"static class"},"module:sap/ui/mdc/odata/v4/ValueHelpDelegate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined This module should not be used and will be removed in future versions!<br>Delegate for {@link sap.ui.mdc.ValueHelp ValueHelp} used in oData v4 environment.<br>","module:sap/ui/mdc/odata/v4/ValueHelpDelegate":"module:sap/ui/mdc/odata/v4/ValueHelpDelegate","!module":"sap/ui/mdc/odata/v4/ValueHelpDelegate","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined This module should not be used and will be removed in future versions!<br>Delegate for {@link sap.ui.mdc.ValueHelp ValueHelp} used in oData v4 environment.<br>","!category":"namespace"},"sap.ui.mdc.enums.TableRowActionType":{"!description":"Type of a table row action.","Navigation":{"!description":"Navigation arrow (chevron) is shown","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/TableRowActionType","!category":"static class"},"module:sap/ui/mdc/TableDelegate":{"!description":"Base delegate for {@link sap.ui.mdc.Table}. Extend this object in your project to use all functionalities of the table. This base delegate already meets some requirements of certain features. Others need to be met by your delegate implementation.\n\nThe following methods need to be added or overridden in your delegate. Please also see the documentation of the methods to learn about their default implementation and what you need to implement. <ul> <li><b>Basic prerequisites<\/b><\/li> <ul> <li>{@link module:sap/ui/mdc/TableDelegate.fetchProperties fetchProperties}<\/li> <li>{@link module:sap/ui/mdc/TableDelegate.updateBindingInfo updateBindingInfo}<\/li> <\/ul> <li>Column personalization (related to <code>p13nMode<\/code> <code>Column<\/code>)<\/li> <ul> <li>{@link module:sap/ui/mdc/TableDelegate.addItem addItem}<\/li> <li>Filter personalization (related to <code>p13nMode<\/code> <code>Filter<\/code>)<\/li> <ul> <li>{@link module:sap/ui/mdc/TableDelegate.getFilterDelegate getFilterDelegate}<\/li> <\/ul> <\/ul>\n\n<b>Note:<\/b> This base delegate does not support the <code>p13nMode<\/code> <code>Aggregate<\/code>, and the <code>p13nMode<\/code> <code>Group<\/code> is only supported if the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}. This cannot be changed in your delegate implementation.","getGroupSorter":{"!description":"Returns a sorter for the grouping functionality to be applied when updating the table's binding based on the group conditions of the table.\n\n<b>Note:<\/b> No sorter must be returned if the table type, for example, {@link sap.ui.mdc.table.GridTableType GridTable}, cannot be grouped this way.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> sap.ui.model.Sorter | undefined"},"updateBindingInfo":{"!description":"Updates the binding info object that is used to bind the table in {@link module:sap/ui/mdc/TableDelegate.updateBinding updateBinding}.\n\nBy default, filters and sorters are added to the binding info. Please see {@link module:sap/ui/mdc/TableDelegate.getFilters getFilters}, {@link module:sap/ui/mdc/TableDelegate.getSorters getSorters}, and {@link module:sap/ui/mdc/TableDelegate.getGroupSorter getGroupSorter} for more details.\n\n<b>Note:<\/b> Any other required information, such as the path, must be additionally provided by your delegate implementation.","!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo)"},"module:sap/ui/mdc/TableDelegate":"module:sap/ui/mdc/TableDelegate","!category":"namespace","fetchExpandAndCollapseConfiguration":{"!description":"Returns the feature set for expanding or collapsing nodes in the table.\n\nBy default, this method returns an empty object.\n\nTo enable specific functionalities, the configuration must contain the following functions: <ul> <li>To enable <b>Expand Entire Tree<\/b>, the <code>expandAll<\/code> function needs to be implemented.<\/li> <li>To enable <b>Collapse Entire Tree<\/b>, the <code>collapseAll<\/code> function needs to be implemented.<\/li> <li>To enable <b>Expand Entire Node<\/b>, the <code>expandAllFromNode<\/code> and <code>isNodeExpanded<\/code> functions need to be implemented.<\/li> <li>To enable <b>Collapse Entire Node<\/b>, the <code>collapseAllFromNode<\/code> and <code>isNodeExpanded<\/code> functions need to be implemented.<\/li> <\/ul>\n\n<b>Note:<\/b> Expand and collapse all from a specific node is only supported if the table rows are selectable.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> Promise<sap.ui.mdc.TableDelegate.ExpandAndCollapseConfiguration>"},"fetchProperties":{"!description":"Retrieves information about the relevant properties.\n\nBy default, this method returns a <code>Promise<\/code> that resolves with an empty array.\n\n<b>Note:<\/b> The result of this function must be kept stable throughout the lifecycle of your application. Any changes of the returned values might result in undesired effects.\n\n<b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.Table#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/TableDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oChart: sap.ui.mdc.Chart, oFilterBar: sap.ui.mdc.FilterBar, oTable: sap.ui.mdc.Table) -> [Promise<sap.ui.mdc.table.PropertyInfo]"},"fetchExportCapabilities":{"!description":"Returns the feature set for exporting data in the table.\n\nBy default, this method returns basic <code>sap.ui.export.FileType.XLSX<\/code> capabilities.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> Promise<object>"},"addItem":{"!description":"Central hook that is called to add columns to the table when the state is applied, for example, when SAPUI5 flexibility changes are applied. During preprocessing, this method is called without the <code>mPropertyBag<\/code> parameter, and <code>oTable<\/code> is an XML node.\n\nBy default, this method does not create a column and just returns a <code>Promise<\/code> that resolves without a value.","!category":"function","!type":"fn(sPropertyName: String, mPropertyBag?: Object, oTable: sap.ui.mdc.Table | Element, sPropertyKey: String, mPropertyBag?: Object) -> Promise<sap.ui.mdc.table.Column>"},"getSorters":{"!description":"Returns sorters to be applied when updating the table's binding based on the sort conditions of the table.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> [sap.ui.model.Sorter]"},"!module":"sap/ui/mdc/TableDelegate","formatGroupHeader":{"!description":"Formats the title text of a group header row of the table.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oContext: sap.ui.model.Context, sPropertyKey: String) -> String"},"!helpDescription":"Base delegate for {@link sap.ui.mdc.Table}. Extend this object in your project to use all functionalities of the table. This base delegate already meets some requirements of certain features. Others need to be met by your delegate implementation.\n\nThe following methods need to be added or overridden in your delegate. Please also see the documentation of the methods to learn about their default implementation and what you need to implement. <ul> <li><b>Basic prerequisites<\/b><\/li> <ul> <li>{@link module:sap/ui/mdc/TableDelegate.fetchProperties fetchProperties}<\/li> <li>{@link module:sap/ui/mdc/TableDelegate.updateBindingInfo updateBindingInfo}<\/li> <\/ul> <li>Column personalization (related to <code>p13nMode<\/code> <code>Column<\/code>)<\/li> <ul> <li>{@link module:sap/ui/mdc/TableDelegate.addItem addItem}<\/li> <li>Filter personalization (related to <code>p13nMode<\/code> <code>Filter<\/code>)<\/li> <ul> <li>{@link module:sap/ui/mdc/TableDelegate.getFilterDelegate getFilterDelegate}<\/li> <\/ul> <\/ul>\n\n<b>Note:<\/b> This base delegate does not support the <code>p13nMode<\/code> <code>Aggregate<\/code>, and the <code>p13nMode<\/code> <code>Group<\/code> is only supported if the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}. This cannot be changed in your delegate implementation.","rebind":{"!description":"Rebinds the table with the binding info object returned from {@link module:sap/ui/mdc/TableDelegate.updateBindingInfo updateBindingInfo}.","!category":"function","!type":"fn(oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo)"},"getFilters":{"!description":"Returns filters to be applied when updating the table's binding based on the filter conditions of the table itself and its associated {@link sap.ui.mdc.IFilterSource IFilterSource}.\n\nBy default, filters for the associated filter source are only generated for a <code>sap.ui.mdc.FilterBar<\/code>.","!category":"function","!type":"fn(oChart: sap.ui.mdc.Chart, oTable: sap.ui.mdc.Table) -> [sap.ui.model.Filter]"},"getFilterDelegate":{"!description":"Returns the filter delegate of the table that provides basic filter functionality, such as adding filter fields.\n\n<b>Note:<\/b> The functionality provided in this delegate acts as a subset of a <code>FilterBarDelegate<\/code> to enable the table for inbuilt filtering.<br>","!category":"function","!type":"fn() -> {addItem:function(sap.ui.mdc.Table,string) : Promise<sap.ui.mdc.FilterField>}"},"updateBinding":{"!description":"Updates the row binding of the table.\n\nThe default implementation rebinds the table, but model-specific subclasses must call dedicated binding methods to update the binding instead of using {@link #rebind}.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo, oBinding?: sap.ui.model.ListBinding, mSettings: Object)"}},"sap.ui.mdc.enums.ConditionValidated":{"!description":"Enumeration of the validated state of conditions\n\nIf a <code>Condition<\/code> is chosen from a value help or validated against a value help it is set to be validated. In this case the corresponding item in the value help is shown as selected.\n\nIf the validated state of the <code>Condition<\/code> is undefined this means it is not defined if it is validated or not.","Validated":{"!description":"Condition is validated","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/ConditionValidated","NotValidated":{"!description":"Condition is not validated","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.condition.ConditionValidateException":{"!description":"Instances of this exception are thrown when constraints of a type are violated.","!constructorDescription":"Creates a new ValidateException for conditions.","!module":"sap/ui/mdc/condition/ConditionValidateException","!helpDescription":"Instances of this exception are thrown when constraints of a type are violated.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.valuehelp.Dialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Dialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.Dialog"},"sap.ui.mdc.p13n.StateUtil_obj":{"!type":"fn()","prototype":"sap.ui.mdc.p13n.StateUtil"},"sap.ui.mdc.enums.ContentMode":{"!description":"Defines in which mode the content of a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered.","EditOperator":{"!description":"Edit mode for operator dependent controls This is used for single value and only one operator.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/ContentMode","DisplayMultiLine":{"!description":"Display mode for multiline single value","!category":"enum","!type":"String"},"EditMultiLine":{"!description":"Edit mode for multiple lines single value","!category":"enum","!type":"String"},"EditForHelp":{"!description":"Edit mode for single value field if a field help is assigned To support field help, in some cases a different control needs to be rendered.","!category":"enum","!type":"String"},"!category":"static class","DisplayMultiValue":{"!description":"Display mode for multiple values","!category":"enum","!type":"String"},"Edit":{"!description":"Edit mode for single value","!category":"enum","!type":"String"},"EditMultiValue":{"!description":"Edit mode for multiple values","!category":"enum","!type":"String"},"Display":{"!description":"Display mode for single value","!category":"enum","!type":"String"}},"sap.ui.mdc.valuehelp.base.ListContent":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.ListContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.valuehelp.base.Content","getDescriptionPath":{"!description":"Gets current descriptionPath of the content. <br><b>Note:<\/b> Every listcontent must implement this method.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setUseFirstMatch":{"!description":"Sets a new value for property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getItemForValue<\/code> returns the first item that matches the text.\n\nIn the default implementation, this is the first item that matches the entered text. Which item is used can be determined by implementing {@link module:sap/ui/mdc/ValueHelpDelegate.getFirstMatch getFirstMatch}.\n\nThe matching item is returned in the <code>typeaheadSuggested<\/code> event and used for the autocomplete feature in the connected field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseFirstMatch?: Boolean) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"bUseFirstMatch":"type: boolean, description: New value for property <code>useFirstMatch<\/code>"}},"getListBinding":{"!description":"Gets the <code>ListBinding<\/code> of the content. <br><b>Note:<\/b> Every listcontent must implement this method.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.ListBinding"},"setUseAsValueHelp":{"!description":"Sets a new value for property {@link #getUseAsValueHelp useAsValueHelp}.\n\nIf set, the list is opened whenever the value help icon is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseAsValueHelp?: Boolean) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"bUseAsValueHelp":"type: boolean, description: New value for property <code>useAsValueHelp<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.ListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getCaseSensitive":{"!description":"Gets current value of property {@link #getCaseSensitive caseSensitive}.\n\nIf this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseAsValueHelp":{"!description":"Gets current value of property {@link #getUseAsValueHelp useAsValueHelp}.\n\nIf set, the list is opened whenever the value help icon is pressed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getItemFromContext":{"!description":"Gets an item for a <code>BindingContext<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingContext: sap.ui.model.Context, oOptions?: Object) -> Object","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: BindingContext","oOptions":"type: object, description: Options"}},"setCaseSensitive":{"!description":"Sets a new value for property {@link #getCaseSensitive caseSensitive}.\n\nIf this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCaseSensitive?: Boolean) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"bCaseSensitive":"type: boolean, description: New value for property <code>caseSensitive<\/code>"}},"!constructorDescription":"Constructor for a new <code>ListContent<\/code>.\n\nThis is the basis for various types of value help list content. It cannot be used directly.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCaseSensitive caseSensitive} : boolean (default: false)<\/li>\n<li>{@link #getUseFirstMatch useFirstMatch} : boolean (default: true)<\/li>\n<li>{@link #getUseAsValueHelp useAsValueHelp} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.Content#constructor sap.ui.mdc.valuehelp.base.Content}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/base/ListContent","!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","getUseFirstMatch":{"!description":"Gets current value of property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getItemForValue<\/code> returns the first item that matches the text.\n\nIn the default implementation, this is the first item that matches the entered text. Which item is used can be determined by implementing {@link module:sap/ui/mdc/ValueHelpDelegate.getFirstMatch getFirstMatch}.\n\nThe matching item is returned in the <code>typeaheadSuggested<\/code> event and used for the autocomplete feature in the connected field.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getKeyPath":{"!description":"Gets current keyPath of the content. <br><b>Note:<\/b> Every listcontent must implement this method.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.mdc.table.RowActionItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowActionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.RowActionItem"},"sap.ui.mdc.table.ResponsiveColumnSettings_obj":{"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.ResponsiveColumnSettings"},"sap.ui.mdc.field.TokenDisplay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Token.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.TokenDisplay"},"sap.ui.mdc.enums.LinkType":{"!description":"Defines the behavior of the {@link sap.ui.mdc.Link}.","!module":"sap/ui/mdc/enums/LinkType","DirectLink":{"!description":"{@link sap.ui.mdc.Link} is rendered as a {@link sap.m.Link} that works as a direct link","!category":"enum","!type":"Number"},"!category":"static class","Text":{"!description":"{@link sap.ui.mdc.Link} is rendered as a {@link sap.m.Text}","!category":"enum","!type":"Number"},"Popover":{"!description":"{@link sap.ui.mdc.Link} is rendered as a {@link sap.m.Link} that opens a popover when pressed","!category":"enum","!type":"Number"}},"module:sap/ui/mdc/field/MultiValueFieldDelegate":{"!description":"Delegate for {@link sap.ui.mdc.MultiValueField MultiValueField}.","!module":"sap/ui/mdc/field/MultiValueFieldDelegate","!helpDescription":"Delegate for {@link sap.ui.mdc.MultiValueField MultiValueField}.","!category":"namespace","module:sap/ui/mdc/field/MultiValueFieldDelegate":"module:sap/ui/mdc/field/MultiValueFieldDelegate","updateItems":{"!description":"Implements the model-specific logic to update items after conditions have been updated.\n\nItems can be removed, updated, or added. Use the binding information of the <code>MultiValueField<\/code> control to update the data in the related model.","!category":"function","!type":"fn(oPayload: Object, aConditions: [sap.ui.mdc.condition.ConditionObject], oMultiValueField: sap.ui.mdc.MultiValueField)"}},"sap.ui.mdc.field.FieldMultiInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldMultiInput"},"sap.ui.mdc.Element":{"!description":"The base class for composite elements in the <code>sap.ui.mdc<\/code> library providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Element.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPropertyHelper":{"!description":"Returns the property helper instance, if available.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.util.PropertyHelper"},"initControlDelegate":{"!description":"Loads and initializes the delegate module related to the enhanced control.","!static":false,"!category":"function","!type":"fn(oPreloadedModule?: module:sap/ui/mdc/BaseDelegate) -> Promise<module:sap/ui/mdc/BaseDelegate>","parameters":{"oPreloadedModule":"type: module:sap/ui/mdc/BaseDelegate, description: Preloaded delegate module"}},"!proto":"sap.ui.core.Element","isPropertyHelperFinal":{"!description":"Indicates if the control's propertyHelper already contains all available properties","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","initPropertyHelper":{"!description":"Loads and initializes the property helper related to the enhanced control.","!static":false,"!category":"function","!type":"fn(PropertyHelperClass?: sap.ui.mdc.util.PropertyHelper, aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"PropertyHelperClass":"type: sap.ui.mdc.util.PropertyHelper, description: Custom property helper class","bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Element with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getPayload":{"!description":"Returns the payload object set for the delegate property.","!static":false,"!category":"function","!type":"fn() -> Object"},"finalizePropertyHelper":{"!description":"Finalize the propertyHelper using the control's delegate.","!static":false,"!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"!constructorDescription":"Creates and initializes a new element with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/Element","!helpDescription":"The base class for composite elements in the <code>sap.ui.mdc<\/code> library providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getTypeUtil":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link #getTypeMap}<br>Returns the <code>typeUtil<\/code> made available by a delegate module.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.util.TypeUtil | module:sap/ui/mdc/util/TypeMap"},"awaitPropertyHelper":{"!description":"Provides access to the property helper initialization <code>Promise<\/code>.","!static":false,"!category":"function","!type":"fn() -> Promise<sap.ui.mdc.util.PropertyHelper>"},"getControlDelegate":{"!description":"Returns the delegate instance, if available.","!static":false,"!category":"function","!type":"fn() -> module:sap/ui/mdc/BaseDelegate"},"awaitControlDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code>. <b>Note:<\/b> <code>initControlDelegate<\/code> must be called to start the delegate initialization","!static":false,"!category":"function","!type":"fn() -> Promise<module:sap/ui/mdc/BaseDelegate>"},"getTypeMap":{"!description":"Returns the <code>TypeMap<\/code> made available by a delegate module.","!static":false,"!category":"function","!type":"fn() -> module:sap/ui/mdc/util/TypeMap"}},"sap.ui.mdc.field.content.DateContent":{"!description":"Object-based definition of the date content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!module":"sap/ui/mdc/field/content/DateContent","!helpDescription":"Object-based definition of the date content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!category":"namespace"},"sap.ui.mdc.TableP13nMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.TableP13nMode}<br>Defines the personalization mode of the table.","Group":{"!description":"Group personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Column":{"!description":"Column personalization is enabled.","!category":"enum","!type":"String"},"Filter":{"!description":"Filter personalization is enabled.","!category":"enum","!type":"String"},"Sort":{"!description":"Sort personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class","Aggregate":{"!description":"Aggregation personalization is enabled.","!category":"enum","!type":"String"}},"sap.ui.mdc.filterbar.p13n":{"!description":"Modules for personalization controls","filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"Indicates whether possible errors during the search in a message box are displayed.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"!category":"namespace","_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"delegate":{"!description":"Object related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/BaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.<br> <b>Node<\/b>: Please check {@link sap.ui.mdc.filterbar.PropertyInfo} for more information about the supported inner elements. <b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.filterbar.FilterBarBase#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/FilterBarDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"enum","!type":"Object"},"liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"!module":"sap/ui/mdc/filterbar/p13n/AdaptationFilterBar","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"!helpDescription":"Modules for personalization controls","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"AdaptationFilterBar":"sap.ui.mdc.filterbar.p13n.AdaptationFilterBar_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"_useFixedWidth":{"!description":"Determines whether the <code>AdaptationFilterBar<\/code> has a fixed width.","!category":"enum","!type":"Boolean"},"showGoButton":{"!description":"Indicates whether the Go button is visible in the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.FilterBar":{"!description":"The <code>FilterBar<\/code> control is used to display filter attributes in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button fires the search event, and the Adapt Filters button shows the filter dialog.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link module:sap/ui/mdc/FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options for the <code>FilterBar<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sP13nMode: [sap.ui.mdc.enums.FilterBarP13nMode]) -> sap.ui.mdc.FilterBar","parameters":{"sP13nMode":"type: sap.ui.mdc.enums.FilterBarP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowAdaptFiltersButton":{"!description":"Gets current value of property {@link #getShowAdaptFiltersButton showAdaptFiltersButton}.\n\nDetermines whether the Adapt Filters button is visible in the <code>FilterBar<\/code>.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.mdc.filterbar.FilterBarBase","getShowClearButton":{"!description":"Gets current value of property {@link #getShowClearButton showClearButton}.\n\nDetermines whether the Clear button is visible in the <code>FilterBar<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAdaptFiltersButton showAdaptFiltersButton} : boolean (default: true)<\/li>\n<li>{@link #getShowClearButton showClearButton} : boolean (default: false)<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.enums.FilterBarP13nMode[]<\/li>\n<li>{@link #get_p13nModeItem _p13nModeItem} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.filterbar.FilterBarBase#constructor sap.ui.mdc.filterbar.FilterBarBase}\ncan be used as well.","!module":"sap/ui/mdc/FilterBar","!helpDescription":"The <code>FilterBar<\/code> control is used to display filter attributes in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button fires the search event, and the Adapt Filters button shows the filter dialog.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link module:sap/ui/mdc/FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","setShowAdaptFiltersButton":{"!description":"Sets a new value for property {@link #getShowAdaptFiltersButton showAdaptFiltersButton}.\n\nDetermines whether the Adapt Filters button is visible in the <code>FilterBar<\/code>.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAdaptFiltersButton?: Boolean) -> sap.ui.mdc.FilterBar","parameters":{"bShowAdaptFiltersButton":"type: boolean, description: New value for property <code>showAdaptFiltersButton<\/code>"}},"getCurrentState":{"!description":"Returns the external conditions of the inner condition model. <b>Note:<\/b> This API returns only attributes related to the {@link sap.ui.mdc.FilterBar#setP13nMode p13nMode} property configuration.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.State"},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options for the <code>FilterBar<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.enums.FilterBarP13nMode]"},"setShowClearButton":{"!description":"Sets a new value for property {@link #getShowClearButton showClearButton}.\n\nDetermines whether the Clear button is visible in the <code>FilterBar<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowClearButton?: Boolean) -> sap.ui.mdc.FilterBar","parameters":{"bShowClearButton":"type: boolean, description: New value for property <code>showClearButton<\/code>"}}},"sap.ui.mdc.FilterField":{"!description":"The <code>FilterField<\/code> control is used to filter data based on the conditions. The conditions are managed in the corresponding {@link sap.ui.mdc.FilterBar FilterBar}. That is why the <code>conditions<\/code> property must be bound to the related conditions in the {@link sap.ui.mdc.FilterBar FilterBar}. The type of this data must be defined in the <code>dataType<\/code> property.\n\nBased on the data type settings, a default control is rendered by the <code>FilterField<\/code> as follows:\n\n<ul> <li>In display mode, usually a {@link sap.m.Text Text} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, an {@link sap.m.ExpandableText ExpandableText} control is rendered.<\/li> <li>If multiple values are allowed, a {@link sap.m.Tokenizer Tokenizer} control is rendered.<\/li> <li>In edit mode, usually an {@link sap.m.Input Input} control is rendered.<\/li> <li>If multiple values are allowed, a {@link sap.m.MultiInput MultiInput} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, a {@link sap.m.TextArea TextArea} control is rendered.<\/li> <li>If a date type or a date/time type is used and only one condition is supported, a {@link sap.m.DynamicDateRange DynamicDateRange} control is rendered.<\/li> <li>If a date type is used and only single values are allowed, a {@link sap.m.DatePicker DatePicker} control is rendered.<\/li> <li>If a date type is used and only single ranges are allowed, a {@link sap.m.DateRangeSelection DateRangeSelection} control is rendered.<\/li> <li>If a date/time type is used and only single values are allowed, a {@link sap.m.DateTimePicker DateTimePicker} control is rendered.<\/li> <li>If a time type is used and only single values are allowed, a {@link sap.m.TimePicker TimePicker} control is rendered.<\/li> <li>If used for search, a {@link sap.m.SearchField SearchField} control is rendered.<\/li> <\/ul>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.FilterField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.field.FieldBase","removeOperator":{"!description":"Removes an operator from the list of known operators. The standard operators can are mentioned in {@link sap.ui.mdc.enums.OperatorName OperatorName}.","!static":false,"!category":"function","!type":"fn(vOperator: sap.ui.mdc.condition.Operator | String)","parameters":{"vOperator":"type: sap.ui.mdc.condition.Operator|string, description: The operator instance or operator name"}},"!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.FilterField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.FilterField<\/code> itself.\n\nThis event is fired when the <code>conditions<\/code> property of the <code>FilterField<\/code> is changed by a user interaction.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.FilterField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.FilterField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDefaultOperator":{"!description":"Gets current value of property {@link #getDefaultOperator defaultOperator}.\n\nDefault operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.","!static":false,"!category":"function","!type":"fn() -> String"},"addOperators":{"!description":"Adds an array of operators to the list of known operators.\n\n<b>Note<\/b>: <code>aOperators<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator}, the instance itself, or multiple operators inside an array. The standard operators are mentioned in {@link sap.ui.mdc.enums.OperatorName OperatorName}.","!static":false,"!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator]) -> sap.ui.mdc.FilterField","parameters":{"aOperators":"type: sap.ui.mdc.condition.Operator[], description: Array of operators"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.FilterField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAdditionalDataType":{"!description":"Gets current value of property {@link #getAdditionalDataType additionalDataType}.\n\nThe type of data for the description part of an \"equal to\" condition. This type is used to parse, format, and validate the value.\n\nHere a data type instance can be provided or an object containing <code>name<\/code>, <code>formatOptions<\/code>, and <code>constraints<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setPropertyKey":{"!description":"Sets a new value for property {@link #getPropertyKey propertyKey}.\n\nKey of the property the <code>FilterField<\/code> represents.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPropertyKey?: String) -> sap.ui.mdc.FilterField","parameters":{"sPropertyKey":"type: string, description: New value for property <code>propertyKey<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.FilterField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.FilterField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getOperators":{"!description":"Gets current value of property {@link #getOperators operators}.\n\nSupported operator names for conditions.\n\nIf empty, default operators depending on used data type are taken. The standard operators are mentioned in {@link sap.ui.mdc.enums.OperatorName OperatorName}.\n\n<b>Note:<\/b> If a custom control is used as {@link sap.ui.mdc.field.FieldBase#setContent Content}, {@link sap.ui.mdc.field.FieldBase#setContentEdit ContentEdit}, or {@link sap.ui.mdc.field.FieldBase#setContentDisplay ContentDisplay}, and the custom control only supports one operator (as no operator can be shown), only the required operator must be set. So the user input into the custom control creates a condition with the set operator, and a condition with this operator provides the value the custom control needs.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setOperators":{"!description":"Sets a new value for property {@link #getOperators operators}.\n\nSupported operator names for conditions.\n\nIf empty, default operators depending on used data type are taken. The standard operators are mentioned in {@link sap.ui.mdc.enums.OperatorName OperatorName}.\n\n<b>Note:<\/b> If a custom control is used as {@link sap.ui.mdc.field.FieldBase#setContent Content}, {@link sap.ui.mdc.field.FieldBase#setContentEdit ContentEdit}, or {@link sap.ui.mdc.field.FieldBase#setContentDisplay ContentDisplay}, and the custom control only supports one operator (as no operator can be shown), only the required operator must be set. So the user input into the custom control creates a condition with the set operator, and a condition with this operator provides the value the custom control needs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sOperators?: [String]) -> sap.ui.mdc.FilterField","parameters":{"sOperators":"type: string[], description: New value for property <code>operators<\/code>"}},"addOperator":{"!description":"Adds an operator to the list of known operators.\n\n<b>Note<\/b>: If no operator is set, the used <code>datatType<\/code> of the <code>FilterField<\/code> defines the set of default operators. The standard operators are mentioned in {@link sap.ui.mdc.enums.OperatorName OperatorName}.","!static":false,"!category":"function","!type":"fn(vOperator: sap.ui.mdc.condition.Operator | String) -> sap.ui.mdc.FilterField","parameters":{"vOperator":"type: sap.ui.mdc.condition.Operator|string, description: The operator instance or operator name"}},"!constructorDescription":"Constructor for a new <code>FilterField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperators operators} : string[] (default: [])<\/li>\n<li>{@link #getDefaultOperator defaultOperator} : string<\/li>\n<li>{@link #getPropertyKey propertyKey} : string (default: \"\")<\/li>\n<li>{@link #getAdditionalDataType additionalDataType} : object<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","!module":"sap/ui/mdc/FilterField","!helpDescription":"The <code>FilterField<\/code> control is used to filter data based on the conditions. The conditions are managed in the corresponding {@link sap.ui.mdc.FilterBar FilterBar}. That is why the <code>conditions<\/code> property must be bound to the related conditions in the {@link sap.ui.mdc.FilterBar FilterBar}. The type of this data must be defined in the <code>dataType<\/code> property.\n\nBased on the data type settings, a default control is rendered by the <code>FilterField<\/code> as follows:\n\n<ul> <li>In display mode, usually a {@link sap.m.Text Text} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, an {@link sap.m.ExpandableText ExpandableText} control is rendered.<\/li> <li>If multiple values are allowed, a {@link sap.m.Tokenizer Tokenizer} control is rendered.<\/li> <li>In edit mode, usually an {@link sap.m.Input Input} control is rendered.<\/li> <li>If multiple values are allowed, a {@link sap.m.MultiInput MultiInput} control is rendered.<\/li> <li>If <code>multipleLines<\/code> is set, a {@link sap.m.TextArea TextArea} control is rendered.<\/li> <li>If a date type or a date/time type is used and only one condition is supported, a {@link sap.m.DynamicDateRange DynamicDateRange} control is rendered.<\/li> <li>If a date type is used and only single values are allowed, a {@link sap.m.DatePicker DatePicker} control is rendered.<\/li> <li>If a date type is used and only single ranges are allowed, a {@link sap.m.DateRangeSelection DateRangeSelection} control is rendered.<\/li> <li>If a date/time type is used and only single values are allowed, a {@link sap.m.DateTimePicker DateTimePicker} control is rendered.<\/li> <li>If a time type is used and only single values are allowed, a {@link sap.m.TimePicker TimePicker} control is rendered.<\/li> <li>If used for search, a {@link sap.m.SearchField SearchField} control is rendered.<\/li> <\/ul>","getPropertyKey":{"!description":"Gets current value of property {@link #getPropertyKey propertyKey}.\n\nKey of the property the <code>FilterField<\/code> represents.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAdditionalDataType":{"!description":"Sets a new value for property {@link #getAdditionalDataType additionalDataType}.\n\nThe type of data for the description part of an \"equal to\" condition. This type is used to parse, format, and validate the value.\n\nHere a data type instance can be provided or an object containing <code>name<\/code>, <code>formatOptions<\/code>, and <code>constraints<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAdditionalDataType?: Object) -> sap.ui.mdc.FilterField","parameters":{"oAdditionalDataType":"type: object, description: New value for property <code>additionalDataType<\/code>"}},"removeAllOperators":{"!description":"Removes all operators from the list of known operators.","!static":false,"!category":"function","!type":"fn()"},"setDefaultOperator":{"!description":"Sets a new value for property {@link #getDefaultOperator defaultOperator}.\n\nDefault operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultOperator?: String) -> sap.ui.mdc.FilterField","parameters":{"sDefaultOperator":"type: string, description: New value for property <code>defaultOperator<\/code>"}},"removeOperators":{"!description":"Removes all given operators from the list of known operators.\n\n<b>Note<\/b>: <code>aOperators<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator}, the instance itself, or multiple operators inside an array. The standard operators are mentioned in {@link sap.ui.mdc.enums.OperatorName OperatorName}.","!static":false,"!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator])","parameters":{"aOperators":"type: sap.ui.mdc.condition.Operator[], description: Array of operators"}}},"sap.ui.mdc.condition":{"Condition":"sap.ui.mdc.condition.Condition","Operator":"sap.ui.mdc.condition.Operator_obj","!description":"Modules to handle conditions used in {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.FilterBar FilterBar}.","!category":"namespace","FilterConverter":"sap.ui.mdc.condition.FilterConverter","type":{"!description":"Data type of the corresponding filter field.\n\n<b>Note:<\/b> A type must be an instance of {@link sap.ui.model.Type Type}.","!category":"enum","!type":"Object"},"FilterOperatorUtil":"sap.ui.mdc.condition.FilterOperatorUtil","operator":{"!description":"Operator used in the corresponding filter field.\n\n<b>Note:<\/b> An operator must be an instance of {@link sap.ui.mdc.condition.Operator Operator}.","!category":"enum","!type":"Object"},"baseType":{"!description":"Basic type of the corresponding filter field.","!category":"enum","!type":"sap.ui.mdc.enums.BaseType"},"ConditionValidateException":"sap.ui.mdc.condition.ConditionValidateException_obj","ConditionModelPropertyBinding":"sap.ui.mdc.condition.ConditionModelPropertyBinding_obj","OperatorDynamicDateOption":"sap.ui.mdc.condition.OperatorDynamicDateOption_obj","ConditionModel":"sap.ui.mdc.condition.ConditionModel_obj","!module":"sap/ui/mdc/condition/Condition","!helpDescription":"Modules to handle conditions used in {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.FilterBar FilterBar}.","ConditionConverter":"sap.ui.mdc.condition.ConditionConverter","valueTypes":{"!description":"Defines the types of the option's parameters. Possible values for the array items are \"date\" and \"int\". A date range is usually represented with two consecutive \"date\" values.","!category":"enum","!type":"[String]"},"RangeOperator":"sap.ui.mdc.condition.RangeOperator_obj","key":{"!description":"A key which identifies the option. The option produces DynamicDateRange values with operator same as the option key.","!category":"enum","!type":"String"}},"sap.ui.mdc.util.InfoBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.util.InfoBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.util.InfoBar"},"sap.ui.mdc.valuehelp.content.Conditions":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a condition panel.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.Conditions.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel shown on condition panel.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueHelp":{"!description":"Sets the associated {@link #getValueHelp valueHelp}.","!static":false,"!category":"function","!type":"fn(oValueHelp: sap.ui.core.ID | sap.ui.mdc.ValueHelp) -> sap.ui.mdc.valuehelp.content.Conditions","parameters":{"oValueHelp":"type: sap.ui.core.ID|sap.ui.mdc.ValueHelp, description: ID of an element which becomes the new target of this valueHelp association; alternatively, an element instance may be given"}},"!proto":"sap.ui.mdc.valuehelp.base.Content","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Conditions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>Conditions<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFieldHelp fieldHelp} : (sap.ui.core.ID | sap.ui.mdc.ValueHelp)<\/li>\n<li>{@link #getValueHelp valueHelp} : (sap.ui.core.ID | sap.ui.mdc.ValueHelp)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.Content#constructor sap.ui.mdc.valuehelp.base.Content}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/Conditions","getFieldHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link #setValueHelp valueHelp} association<br>ID of the element which is the current target of the association {@link #getFieldHelp fieldHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a condition panel.","getValueHelp":{"!description":"ID of the element which is the current target of the association {@link #getValueHelp valueHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel shown on condition panel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.mdc.valuehelp.content.Conditions","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"setFieldHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link #setValueHelp valueHelp} association<br>Sets the associated {@link #getFieldHelp fieldHelp}.","!static":false,"!category":"function","!type":"fn(oFieldHelp: sap.ui.core.ID | sap.ui.mdc.ValueHelp) -> sap.ui.mdc.valuehelp.content.Conditions","parameters":{"oFieldHelp":"type: sap.ui.core.ID|sap.ui.mdc.ValueHelp, description: ID of an element which becomes the new target of this fieldHelp association; alternatively, an element instance may be given"}}},"sap.ui.mdc.valuehelp.base.DialogTab":{"!description":"Content for the <code>sap.ui.mdc.valuehelp.content.Dialog<\/code> element.","detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.DialogTab.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets a new value for property {@link #getContent content}.\n\nContent control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oContent: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oContent":"type: object, description: New value for property <code>content<\/code>"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself.\n\nFired if the selected condition changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContent":{"!description":"Gets current value of property {@link #getContent content}.\n\nContent control","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.core.Control","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself.\n\nFired if a change on the content is confirmed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.DialogTab with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireConfirm":{"!description":"Fires event {@link #event:confirm confirm} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>DialogTab<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : object<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/base/DialogTab","!helpDescription":"Content for the <code>sap.ui.mdc.valuehelp.content.Dialog<\/code> element.","detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself.\n\nFired if the change is cancelled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ui.mdc.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.FilterBar"},"sap.ui.mdc.condition.RangeOperator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.RangeOperator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.condition.Operator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oConfiguration: Object)","prototype":"sap.ui.mdc.condition.RangeOperator"},"sap.ui.mdc.ValueHelp":{"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired when a value is selected in the value help.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTypeaheadSuggested":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:typeaheadSuggested typeaheadSuggested} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"onControlChange":{"!description":"Triggers some logic that must be executed in <code>ValueHelp<\/code> element if a <code>Change<\/code> event on the connected control is fired.\n\nThis is done if the corresponding control value is changed (not during navigation).\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"detachVisualFocusSet":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:visualFocusSet visualFocusSet} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isNavigationEnabled":{"!description":"Determines if navigation via arrow keys should be possible.\n\nIn ComboBox-like case keyboard-navigation should be anabled if closed and if open. If only typeahead is used (and maybe an value help dialog) keyboard-navigation schould be enabled only if typeahed is open.\n\nAs not all rowas might be loaded navigation with home, end, page up or dowm might be disabled, depending of the used content.","!static":false,"!category":"function","!type":"fn(iStep: Number) -> Boolean","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"fireSwitchToValueHelp":{"!description":"Fires event {@link #event:switchToValueHelp switchToValueHelp} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getDialog":{"!description":"Gets content of aggregation {@link #getDialog dialog}.\n\nContainer that is used and opened if the value help icon of the input field is pressed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.IDialogContainer"},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"toggleOpen":{"!description":"Toggles the open state of the value help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bTypeahead: Boolean)","parameters":{"bTypeahead":"type: boolean, description: Flag that determines whether value help is opened for type-ahead or for complex help"}},"fireDisconnect":{"!description":"Fires event {@link #event:disconnect disconnect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isTypeaheadSupported":{"!description":"Determines if the value help should be opened when something is typed into the field.\n\nOpening the value help must be triggered by the control the <code>ValueHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"!description":"The <code>ValueHelp<\/code> element can be assigned to the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField} controls using the <code>valueHelp<\/code> association. One <code>ValueHelp<\/code> element instance can be assigned to multiple fields (like in different table rows). It should be placed in the control tree on the container holding the fields.","navigate":{"!description":"Triggers navigation in the value help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"removeVisualFocus":{"!description":"The focus visualization of the field help needs to be removed as the user starts typing into the field.","!static":false,"!category":"function","!type":"fn()"},"attachDisconnect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired when the <code>ValueHelp<\/code> element is disconnected from a control.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.ValueHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getControl":{"!description":"Returns the control the value help is connected to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachVisualFocusSet":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:visualFocusSet visualFocusSet} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired if the visual focus is set to the value help.\n\nIn this case the visual focus needs to be removed from the opening field, but the real focus must stay there.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachNavigated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired after the user navigated, using the arrow keys, in the value help.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireOpened":{"!description":"Fires event {@link #event:opened opened} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"skipOpening":{"!description":"Skips the opening of the value help if it is pending because of loading content.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"attachTypeaheadSuggested":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:typeaheadSuggested typeaheadSuggested} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired after a suggested item has been found for a type-ahead.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired after the value help has been closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDialog":{"!description":"Sets the aggregated {@link #getDialog dialog}.","!static":false,"!category":"function","!type":"fn(oDialog: sap.ui.mdc.valuehelp.base.IDialogContainer) -> sap.ui.mdc.ValueHelp","parameters":{"oDialog":"type: sap.ui.mdc.valuehelp.base.IDialogContainer, description: The dialog to set"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireVisualFocusSet":{"!description":"Fires event {@link #event:visualFocusSet visualFocusSet} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isOpen":{"!description":"Determines if the value help is open.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/mdc/ValueHelp","detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachDisconnect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe value help checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValuedHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oConfig: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration) -> Promise<sap.ui.mdc.valuehelp.base.ValueHelpItem>","parameters":{"oConfig":"type: sap.ui.mdc.valuehelp.base.ItemForValueConfiguration, description: Configuration"}},"!helpDescription":"The <code>ValueHelp<\/code> element can be assigned to the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField} controls using the <code>valueHelp<\/code> association. One <code>ValueHelp<\/code> element instance can be assigned to multiple fields (like in different table rows). It should be placed in the control tree on the container holding the fields.","setVisualFocus":{"!description":"The focus visualization of the field help needs to be set as the user starts naigation into the value help items.","!static":false,"!category":"function","!type":"fn()"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSwitchToValueHelp":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:switchToValueHelp switchToValueHelp} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachNavigated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireTypeaheadSuggested":{"!description":"Fires event {@link #event:typeaheadSuggested typeaheadSuggested} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:open open} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getValidateInput":{"!description":"Gets current value of property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input of the corresponding field is validated against the value help. If no entry is found for the user input, an error is shown on the field.\n\nIf this property is not set, the user input is still checked against the value help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\n<b>Note:<\/b> The input is validated and compared against the content assigned to the <code>typeahead<\/code> aggregation. If no content is assigned to the <code>typeahead<\/code> aggregation, the input is not validated.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFilterValue":{"!description":"Sets a new value for property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered. Here the field provides the typed value to allow the value help to filter for it.\n\n<b>Note:<\/b> This only takes effect if the <code>ValueHelp<\/code> elements content supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterValue?: String) -> sap.ui.mdc.ValueHelp","parameters":{"sFilterValue":"type: string, description: New value for property <code>filterValue<\/code>"}},"fireOpen":{"!description":"Fires event {@link #event:open open} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:opened opened} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:open open} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired as the value help opening is triggered.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.mdc.Element","getAriaAttributes":{"!description":"Returns the aria attributes the field needs from the value help","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> sap.ui.mdc.valuehelp.base.AriaAttributes","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as ValueHelp might not be connected to a field)"}},"setTypeahead":{"!description":"Sets the aggregated {@link #getTypeahead typeahead}.","!static":false,"!category":"function","!type":"fn(oTypeahead: sap.ui.mdc.valuehelp.base.ITypeaheadContainer) -> sap.ui.mdc.ValueHelp","parameters":{"oTypeahead":"type: sap.ui.mdc.valuehelp.base.ITypeaheadContainer, description: The typeahead to set"}},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/ValueHelpDelegate ValueHelpDelegate}<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/ValueHelpDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"isValidationSupported":{"!description":"Defines if the value help can be used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavigated":{"!description":"Fires event {@link #event:navigated navigated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>ValueHelp<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getFilterValue filterValue} : string (default: \"\") (default)<\/li>\n<li>{@link #getValidateInput validateInput} : boolean (default: true)<\/li>\n<li>{@link #get_config _config} : object (default: {})<\/li>\n<li>{@link #get_valid _valid} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDialog dialog} : sap.ui.mdc.valuehelp.base.IDialogContainer<\/li>\n<li>{@link #getTypeahead typeahead} : sap.ui.mdc.valuehelp.base.ITypeaheadContainer<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:disconnect disconnect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:open open} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:opened opened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigated navigated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:switchToValueHelp switchToValueHelp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:typeaheadSuggested typeaheadSuggested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:visualFocusSet visualFocusSet} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Element#constructor sap.ui.mdc.Element}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.ValueHelp","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"destroyDialog":{"!description":"Destroys the dialog in the aggregation {@link #getDialog dialog}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ValueHelp"},"shouldOpenOnClick":{"!description":"Determines if the value help should be opened when the user clicks into the connected control.\n\nOpening the value help must be triggered by the control the <code>ValueHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"close":{"!description":"closes the value help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"setHighlightId":{"!description":"Temporarily highlights a typeahead item identified by it's id. Navigation events or other updates may lead to the item no longer being highlighted.","!static":false,"!category":"function","!type":"fn(sHighlightId: String)","parameters":{"sHighlightId":"type: string, description: control id of the item to be highlighted"}},"shouldOpenOnFocus":{"!description":"Determines if the value help should be opened when the user focuses the connected control.\n\nOpening the value help must be triggered by the control the <code>ValueHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"connect":{"!description":"Connects the <code>ValueHelp<\/code> element to a control.\n\nIf the <code>ValueHelp<\/code> element is used as an association to multiple controls, it has to know the currently active control to open and interact.\n\nIf the <code>ValueHelp<\/code> element is connected to a control, the <code>disconnected<\/code> event is fired to inform the previously connected control.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, oConfig?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oConfig":"type: object, description: Configuration object that holds required data of the connected control","oControl":"type: sap.ui.core.Control, description: Control to which the <code>ValueHelp<\/code> element is connected to"}},"getFilterValue":{"!description":"Gets current value of property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered. Here the field provides the typed value to allow the value help to filter for it.\n\n<b>Note:<\/b> This only takes effect if the <code>ValueHelp<\/code> elements content supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:opened opened} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired as the value help is fully open.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setValidateInput":{"!description":"Sets a new value for property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input of the corresponding field is validated against the value help. If no entry is found for the user input, an error is shown on the field.\n\nIf this property is not set, the user input is still checked against the value help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\n<b>Note:<\/b> The input is validated and compared against the content assigned to the <code>typeahead<\/code> aggregation. If no content is assigned to the <code>typeahead<\/code> aggregation, the input is not validated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValidateInput?: Boolean) -> sap.ui.mdc.ValueHelp","parameters":{"bValidateInput":"type: boolean, description: New value for property <code>validateInput<\/code>"}},"destroyTypeahead":{"!description":"Destroys the typeahead in the aggregation {@link #getTypeahead typeahead}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ValueHelp"},"getTypeahead":{"!description":"Gets content of aggregation {@link #getTypeahead typeahead}.\n\nContainer that is used and opened in typeahead","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.ITypeaheadContainer"},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getIcon":{"!description":"Determines the icon for the value help.","!static":false,"!category":"function","!type":"fn() -> null | String"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module. The used delegate module must inherit from {@link module:sap/ui/mdc/ValueHelpDelegate ValueHelpDelegate}<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/ValueHelpDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"attachSwitchToValueHelp":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:switchToValueHelp switchToValueHelp} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired if the user wants to switch from typeahead to value help.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"open":{"!description":"Opens the value help for the control to which the <code>ValueHelp<\/code> element is connected.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bTypeahead: Boolean)","parameters":{"bTypeahead":"type: boolean, description: Flag that determines whether value help is opened for type-ahead or for complex help"}}},"sap.ui.mdc.field.ListFieldHelpItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelpItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.content.FixedListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ListFieldHelpItem"},"sap.ui.mdc.enum.FilterBarValidationStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.FilterBarValidationStatus}<br>Enumeration of the possible validation types.","AsyncValidation":{"!description":"Ongoing asynchronous validation.","!category":"enum","!type":"Number"},"!module":"sap/ui/mdc/enum/FilterBarValidationStatus","NoError":{"!description":"No errors detected.","!category":"enum","!type":"Number"},"RequiredHasNoValue":{"!description":"Required filter filed without a value.","!category":"enum","!type":"Number"},"!category":"static class","FieldInErrorState":{"!description":"Filter field in error state.","!category":"enum","!type":"Number"},"OngoingChangeAppliance":{"!description":"Change is being applied.","!category":"enum","!type":"Number"}},"sap.ui.mdc.p13n.StateUtil":{"!description":"Utility class for state handling of MDC controls. The <code>StateUtil<\/code> class is offering a generic way to retrieve states and set a desired state for a given MDC control. The <code>StateUtil<\/code> class is tightly coupled to the SAPUI5 flexibility integration of MDC controls. To use the APIs of <code>Stateutil<\/code>, the given MDC control instance needs to fully enable all available <code>p13nMode<\/code> options. This way, <code>Stateutil<\/code> can create the required changes and retrieve the relevant state of each control.","applyExternalState":{"!description":"Creates and applies the necessary changes for a given control and state. <b>Note:<\/b>The changes are created in the same order as the objects are passed into the state object attributes. For example, by adding two objects into the <code>items<\/code> attribute of the <code>oState<\/code> object, the first entry is created, and the second entry is created on top of the first change. The item state is applied for each provided object in the given order in the array and uses the provided position. If no index or only an invalid index has been provided, the item is added to the array after the last item in the affected control's <\/code>item<\/code> aggregation. In addition the following attributes can be used to remove a state:\n\n<ul> <li><code>filtered<\/code> - Set to <code>false<\/code> in the <code>filter<\/code> scope on condition level to remove one specific condition for the given key.<\/li> <li><code>sorted<\/code> - Set to <code>false<\/code> in the <code>sorters<\/code> scope to remove a sorter/code>.<\/li> <li><code>grouped<\/code> - Set to <code>false<\/code> in the <code>groupLevels<\/code> scope to remove a grouping.<\/li> <li><code>visible<\/code> - Set to <code>false<\/code> to remove an aggregation item.<\/li> <li><code>aggregated<\/code> - Set to <code>false<\/code> to remove an aggregation.<\/li> <\/ul>\n\n<b>Note:<\/b>To improve the performance, you should avoid additional calls of the control\u2019s delegate. To do this, the <code>propertyInfo<\/code> property of the relevant control can be enriched with the properties used in the provided state.","!static":true,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oState: Object) -> Promise","parameters":{"oState":"type: object, description: The state in which the control is represented","oControl":"type: sap.ui.mdc.Control, description: The control that is used to create changes and to which changes are made"}},"retrieveExternalState":{"!description":"Retrieves the externalized state for a given control instance. The retrieved state is equivalent to the <code>getCurrentState<\/code> API for the given control, after all necessary changes have been applied (for example, variant appliance and <code>p13n, StateUtil<\/code> changes). After the returned <code>Promise<\/code> has been resolved, the returned state is in sync with the according state object of the MDC control (for example, <code>filterConditions<\/code> for the <code>FilterBar<\/code> control).","!static":true,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control) -> Promise","parameters":{"oControl":"type: sap.ui.mdc.Control, description: The control instance implementing IxState to retrieve the externalized state"}},"!module":"sap/ui/mdc/p13n/StateUtil","diffState":{"!description":"Creates a delta between two states.","!static":true,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oOldState: Object, oNewState: Object) -> Promise","parameters":{"oNewState":"type: object, description: The new state","oControl":"type: sap.ui.mdc.Control, description: The control instance implementing IxState","oOldState":"type: object, description: The prior state"}},"!helpDescription":"Utility class for state handling of MDC controls. The <code>StateUtil<\/code> class is offering a generic way to retrieve states and set a desired state for a given MDC control. The <code>StateUtil<\/code> class is tightly coupled to the SAPUI5 flexibility integration of MDC controls. To use the APIs of <code>Stateutil<\/code>, the given MDC control instance needs to fully enable all available <code>p13nMode<\/code> options. This way, <code>Stateutil<\/code> can create the required changes and retrieve the relevant state of each control.","detachStateChange":{"!description":"Removes a previously attached state change event handler from the <code>StateUtil<\/code> class. The passed parameters must match those used for registration with {@link StateUtil#attachChange} beforehand.","!static":true,"!category":"function","!type":"fn(fnListener: fn())","parameters":{"fnListener":"type: function, description: fnFunction The handler function to detach from the event"}},"!proto":"sap.ui.base.Object","!category":"class","attachStateChange":{"!description":"Attaches an event handler to the <code>StateUtil<\/code>. The event handler may be fired every time a user triggers a personalization change for a control instance during runtime.","!static":true,"!category":"function","!type":"fn(fnListener: fn())","parameters":{"fnListener":"type: function, description: fnFunction The handler function to call when the event occurs"}}},"sap.ui.mdc.valuehelp.base.ListContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.ListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.ListContent"},"sap.ui.mdc.enum.FieldDisplay":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.FieldDisplay}<br>Defines the output of a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField}, or {@link sap.ui.mdc.MultiValueField MultiValueField} control.\n\nFor the {@link sap.ui.mdc.Field Field} control, this enumeration defines how the <code>value<\/code> and <code>additionalValue<\/code> properties are formatted.\n\nFor the {@link sap.ui.mdc.MultiValueField MultiValueField} control, this enumeration defines how the <code>key<\/code> and <code>description<\/code> properties of the items are formatted.\n\nFor the {@link sap.ui.mdc.FilterField FilterField} control, this enumeration defines how key and description of equal conditions are formatted.","DescriptionValue":{"!description":"The description and the value (key) are displayed in the field. The value (key) is displayed after the description in brackets.","!category":"enum","!type":"String"},"Description":{"!description":"Only the description is displayed","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/FieldDisplay","ValueDescription":{"!description":"The value (key) and the description are displayed in the field. The description is displayed after the value (key) in brackets.","!category":"enum","!type":"String"},"Value":{"!description":"Only the value (key) is displayed","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.field.TokenizerDisplay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenizerDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tokenizer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.TokenizerDisplay"},"sap.ui.mdc.util.FilterUtil":{"!description":"Utility class used by controls in the <code>sap.ui.mdc<\/code> library to create a filter statement","getConditionsMap":{"!description":"Returns internal conditions for a set of properties. Properties without a condition will be ignored. The resulting conditions are represented by the operation and by the values array. <b>Note:<\/b><br>The operation information will be returned as they are contained in the internal conditions model. This has to be considered, in case custom operations are used.","!static":"true","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar, aPropertyNames: Array) -> map"},"!module":"sap/ui/mdc/util/FilterUtil","!helpDescription":"Utility class used by controls in the <code>sap.ui.mdc<\/code> library to create a filter statement","getFilterInfo":{"!description":"Creates the filter statements based on the externalize conditions.<br>","!static":"true","!category":"function","!type":"fn(vTypeProvider: sap.ui.mdc.Control | module:sap/ui/mdc/util/TypeMap, mConditionsPerKey: map, aPropertiesMetadata: Array, aIgnoreProperties: Array) -> Object"},"getRequiredFieldNamesWithoutValues":{"!description":"Determines the required filter fields that have no value.","!static":"true","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar) -> [String]"},"!category":"namespace","getPropertyByKey":{"!description":"Returns a specific <code>PropertyInfo<\/code> object by a given name.<br>","!static":"true","!category":"function","!type":"fn(aPropertiesMetadata: Array, sKey: String) -> Object"}},"sap.ui.mdc.table.DragDropConfig_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.DragDropConfig with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.dnd.DragDropBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.DragDropConfig"},"sap.ui.mdc.ChartP13nMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link sap.ui.mdc.enums.ChartP13nMode}<br>Defines the personalization mode of the chart.","Item":{"!description":"Item personalization is enabled.","!category":"enum","!type":"String"},"Type":{"!description":"Chart type personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Filter":{"!description":"Filter personalization is enabled.","!category":"enum","!type":"String"},"Sort":{"!description":"Sort personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.enums.BaseType":{"!description":"Enumeration of the possible basic data types\n\nIn {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.MultiValueField MultiValueField}, and {@link sap.ui.mdc.FilterField FilterField}, different data types can be used. These data types might be model-dependent. To handle them model-independently, basic types are used internally.","Numeric":{"!description":"Data type represents a number. (This can be integer, float or any other numeric type.)","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/BaseType","!category":"static class","Time":{"!description":"Data type represents a time","!category":"enum","!type":"String"},"String":{"!description":"Data type represents a string","!category":"enum","!type":"String"},"Boolean":{"!description":"Data type represents a Boolean","!category":"enum","!type":"String"},"Unit":{"!description":"Data type represents a unit. A composite type with a number and a unit part is used.","!category":"enum","!type":"String"},"Date":{"!description":"Data type represents a date","!category":"enum","!type":"String"},"DateTime":{"!description":"Data type represents a date with time","!category":"enum","!type":"String"}},"sap.ui.mdc.valuehelp.CollectiveSearchSelect":{"!description":"Can be used to manage the <code>CollectiveSearchSelect<\/code> control search items.","setSelectedItemKey":{"!description":"Sets a new value for property {@link #getSelectedItemKey selectedItemKey}.\n\nThe key of the selected item of the <code>CollectiveSearchSelect<\/code> control.\n\nThe <code>selectedItemKey<\/code> property must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedItemKey?: String) -> sap.ui.mdc.valuehelp.CollectiveSearchSelect","parameters":{"sSelectedItemKey":"type: string, description: New value for property <code>selectedItemKey<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.CollectiveSearchSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSelectedItemKey":{"!description":"Gets current value of property {@link #getSelectedItemKey selectedItemKey}.\n\nThe key of the selected item of the <code>CollectiveSearchSelect<\/code> control.\n\nThe <code>selectedItemKey<\/code> property must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.VariantManagement","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the <code>CollectiveSearchSelect<\/code> control.\n\nThe <code>title<\/code> property will be shown on the popover of the control on top of the <code>List<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.valuehelp.CollectiveSearchSelect","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.VariantManagement.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>CollectiveSearchSelect<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSelectedItemKey selectedItemKey} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.VariantManagement#constructor sap.m.VariantManagement}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the <code>CollectiveSearchSelect<\/code> control.\n\nThe <code>title<\/code> property will be shown on the popover of the control on top of the <code>List<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/mdc/valuehelp/CollectiveSearchSelect","!helpDescription":"Can be used to manage the <code>CollectiveSearchSelect<\/code> control search items.","getOverflowToolbarConfig":{"!description":"Required by the {@link sap.m.IOverflowToolbarContent} interface. Registers invalidations event which is fired when width of the control is changed.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.field.ListFieldHelpItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link sap.ui.mdc.valuehelp.content.FixedListItem FixedListItem}<br>An item that is used in the {@link sap.ui.mdc.valuehelp.content.FixedList FixedList}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelpItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.content.FixedListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ListFieldHelpItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ListFieldHelpItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.valuehelp.content.FixedListItem#constructor sap.ui.mdc.valuehelp.content.FixedListItem} can be used.","!module":"sap/ui/mdc/field/ListFieldHelpItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link sap.ui.mdc.valuehelp.content.FixedListItem FixedListItem}<br>An item that is used in the {@link sap.ui.mdc.valuehelp.content.FixedList FixedList}.","!proto":"sap.ui.mdc.valuehelp.content.FixedListItem","!category":"class"},"sap.ui.mdc.valuehelp.base.FilterableListContent":{"setFilterBar":{"!description":"Sets the aggregated {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.valuehelp.FilterBar) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"oFilterBar":"type: sap.ui.mdc.valuehelp.FilterBar, description: The filterBar to set"}},"setKeyPath":{"!description":"Sets a new value for property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sKeyPath?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sKeyPath":"type: string, description: New value for property <code>keyPath<\/code>"}},"setFilterFields":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.2 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.isSearchSupported isSearchSupported}<br>Sets a new value for property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering, the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code>, and if the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterFields?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sFilterFields":"type: string, description: New value for property <code>filterFields<\/code>"}},"setDescriptionPath":{"!description":"Sets a new value for property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDescriptionPath?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sDescriptionPath":"type: string, description: New value for property <code>descriptionPath<\/code>"}},"!proto":"sap.ui.mdc.valuehelp.base.ListContent","createConditionPayload":{"!description":"Creates a payload for a value.","!static":false,"!category":"function","!type":"fn(aValues: [Object], vContext: Object) -> Object","parameters":{"vContext":"type: any, description: context","aValues":"type: any[], description: Values (key, description)"}},"!category":"class","getFilterFields":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120.2 replaced by {@link module:sap/ui/mdc/ValueHelpDelegate.isSearchSupported isSearchSupported}<br>Gets current value of property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering, the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code>, and if the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getActiveFilterBar":{"!description":"Gets the currently used <code>FilterBar<\/code> control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.FilterBar"},"getSearch":{"!description":"Gets the currently used filter value.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyFilterBar":{"!description":"Destroys the filterBar in the aggregation {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.FilterableListContent"},"!constructorDescription":"Constructor for a new <code>FilterableListContent<\/code>.\n\nThis is the basis for various types of value help content with filter functionality. It cannot be used directly.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFilterFields filterFields} : string (default: \"\")<\/li>\n<li>{@link #getKeyPath keyPath} : string (default: \"\")<\/li>\n<li>{@link #getDescriptionPath descriptionPath} : string (default: \"\")<\/li>\n<li>{@link #getGroup group} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterBar filterBar} : sap.ui.mdc.valuehelp.FilterBar<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.ListContent#constructor sap.ui.mdc.valuehelp.base.ListContent}\ncan be used as well.","getFormattedTitle":{"!description":"Gets the formatted title based on the number of conditions.","!static":false,"!category":"function","!type":"fn(iCount: Number) -> String","parameters":{"iCount":"type: int, description: number of conditions"}},"getKeyPath":{"!description":"Gets current value of property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"onBeforeShow":{"!description":"Executes logic before content is shown.","!static":false,"!category":"function","!type":"fn(bInitial: Boolean) -> Promise","parameters":{"bInitial":"type: boolean, description: If <code>true<\/code> this is the first time the content is shown"}},"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","getFilterBar":{"!description":"Gets content of aggregation {@link #getFilterBar filterBar}.\n\n{@link sap.ui.mdc.valuehelp.FilterBar FilterBar} used for filtering.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.FilterBar"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.FilterableListContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFormattedShortTitle":{"!description":"Gets the formatted short-title.","!static":false,"!category":"function","!type":"fn() -> String"},"getDescriptionPath":{"!description":"Gets current value of property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.FilterableListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setGroup":{"!description":"Sets a new value for property {@link #getGroup group}.\n\nIf set, all contents with the same group are arranged together on one tab.\n\nThe label of the groups can be defined on the container via {@link sap.ui.mdc.valuehelp.Dialog#setGroupConfig setGroupConfig}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sGroup?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sGroup":"type: string, description: New value for property <code>group<\/code>"}},"setCollectiveSearchSelect":{"!description":"Sets the collective Search to the <code>FilterBar<\/code>.","!static":false,"!category":"function","!type":"fn(oCollectiveSearchSelect: sap.ui.mdc.valuehelp.CollectiveSearchSelect)","parameters":{"oCollectiveSearchSelect":"type: sap.ui.mdc.valuehelp.CollectiveSearchSelect, description: Collective search control"}},"!module":"sap/ui/mdc/valuehelp/base/FilterableListContent","getSelectableConditions":{"!description":"Gets the conditions that are selectable from list content.\n\nThese are validated conditions as other conditions are shown in the {@link sap.ui.mdc.valuehelp.content.Conditions Conditions}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.condition.ConditionObject]"},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","getListBindingInfo":{"!description":"Gets the <code>BindingInfo<\/code> of the content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.base.ManagedObject.AggregationBindingInfo"},"getGroup":{"!description":"Gets current value of property {@link #getGroup group}.\n\nIf set, all contents with the same group are arranged together on one tab.\n\nThe label of the groups can be defined on the container via {@link sap.ui.mdc.valuehelp.Dialog#setGroupConfig setGroupConfig}.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"applyFilters":{"!description":"Applies the filter to the content control.","!static":false,"!category":"function","!type":"fn()"},"getFormattedTokenizerTitle":{"!description":"Gets the formatted tokenizer-title based on the number of conditions.","!static":false,"!category":"function","!type":"fn(iCount: Number) -> String","parameters":{"iCount":"type: int, description: number of conditions"}}},"sap.ui.mdc.valuehelp.content.MTable":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.m.Table}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.MTable.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachContentUpdated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.118.0 This event is not fired or consumed anymore<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:contentUpdated contentUpdated} event of this <code>sap.ui.mdc.valuehelp.content.MTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.content.MTable<\/code> itself.\n\nThis event is fired when the content of the table is updated.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.content.MTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.mdc.valuehelp.base.FilterableListContent","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>MTable<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.m.Table (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:contentUpdated contentUpdated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.FilterableListContent#constructor sap.ui.mdc.valuehelp.base.FilterableListContent}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/MTable","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.MTable"},"fireContentUpdated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.118.0 This event is not fired or consumed anymore<br>Fires event {@link #event:contentUpdated contentUpdated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.m.Table}.","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.\n\nTable that is used in the value help.\n\n<b>Note:<\/b> Set the right selection mode (multiple selection or single selection) as it cannot be determined automatically for every case. (For type-ahead and also for multi-value {@link sap.ui.mdc.FilterField FilterField} controls, only single selection from the table might be wanted.)\n\n<b>Note:<\/b> In phone mode, the popover or dialog might be rendered differently than in desktop mode. So here the configuration for column sizes or table sizes might be different. Please configure sizes depending on the used device.","!static":false,"!category":"function","!type":"fn() -> sap.m.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.m.Table) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"oTable":"type: sap.m.Table, description: The table to set"}},"detachContentUpdated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.118.0 This event is not fired or consumed anymore<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:contentUpdated contentUpdated} event of this <code>sap.ui.mdc.valuehelp.content.MTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}}},"sap.ui.mdc.field.MultiValueFieldItem":{"!description":"Base type for <code>MultiValueFieldItem<\/code> control. The {@link sap.ui.mdc.MultiValueField MultiValueField} holds its values as items. The <code>MultiValueFieldItem<\/code> element defines these items.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.MultiValueFieldItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nKey of the item.","!static":false,"!category":"function","!type":"fn() -> Object"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.MultiValueFieldItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>MultiValueFieldItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : any (default)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/field/MultiValueFieldItem","!helpDescription":"Base type for <code>MultiValueFieldItem<\/code> control. The {@link sap.ui.mdc.MultiValueField MultiValueField} holds its values as items. The <code>MultiValueFieldItem<\/code> element defines these items.","!proto":"sap.ui.core.Element","!category":"class","setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDescription of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.ui.mdc.field.MultiValueFieldItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDescription of the item.","!static":false,"!category":"function","!type":"fn() -> String"},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nKey of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oKey: Object) -> sap.ui.mdc.field.MultiValueFieldItem","parameters":{"oKey":"type: any, description: New value for property <code>key<\/code>"}}},"sap.ui.mdc.enums.FilterBarValidationStatus":{"!description":"Enumeration of the possible validation types.","AsyncValidation":{"!description":"Ongoing asynchronous validation.","!category":"enum","!type":"Number"},"!module":"sap/ui/mdc/enums/FilterBarValidationStatus","NoError":{"!description":"No errors detected.","!category":"enum","!type":"Number"},"RequiredHasNoValue":{"!description":"Required filter filed without a value.","!category":"enum","!type":"Number"},"!category":"static class","FieldInErrorState":{"!description":"Filter field in error state.","!category":"enum","!type":"Number"},"OngoingChangeAppliance":{"!description":"Change is being applied.","!category":"enum","!type":"Number"}},"sap.ui.mdc.util.PromiseCache":{"!description":"Provides a caching mechanism for promises. This API features Promise cancellation: resolve or reject handlers won't be called after removal of the promise, cache destruction or manual cancellation. Destroying the cache will cancel all registered promises and delete references. Convenience methods for promise creation, wrapping and replacement are offered.","add":{"!description":"Adds a promise to the promise cache using a string identifier and a creation method or given <code>Promise<\/code>. Calling add using an already existing identifier will cancel and replace the existing promise.\n\nNote: All unsettled promises will be cancelled on removal or cache destruction A given creation method will receive the following arguments on execution: <ul> <li><code>oPromise<\/code> ­- The newly created Promise<\/li> <li><code>fnResolve<\/code> ­- Resolve method for the newly created Promise<\/li> <li><code>fnReject<\/code> ­- Reject method for the newly created Promise<\/li> <li><code>fnRemove<\/code> ­- Remove method for the newly created Promise<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn(sName?: String, fnCreate?: function(Promise,function,function,function) | Promise) -> Promise<*>","parameters":{"sName":"type: string, description: Promise identifier","fnCreate":"type: function(Promise,function,function,function)|Promise, description: creation method or pre-created promise"}},"cancel":{"!description":"Cancels an unsettled promise from the promise cache. Calling cancel twice is a no-op.","!static":false,"!category":"function","!type":"fn(vPromise: String | Promise) -> Promise<*>","parameters":{"vPromise":"type: string|Promise, description: Promise or identifier"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.util.PromiseCache.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"resolve":{"!description":"Resolves an existing promise from the promise cache","!static":false,"!category":"function","!type":"fn(vPromise: String | Promise, oValue?: String) -> Promise<*>","parameters":{"vPromise":"type: string|Promise, description: Promise or identifier","oValue":"type: string, description: Promise result"}},"!proto":"sap.ui.base.Object","clear":{"!description":"Provides cleanup functionality for the promise cache","!static":false,"!category":"function","!type":"fn()"},"destroy":{"!description":"Provides cleanup functionality for the promise cache","!static":false,"!category":"function","!type":"fn()"},"!category":"class","retrieveMany":{"!description":"Retrieves multiple promises from the promise cache Will return all cached promises if no arguments are given","!static":false,"!category":"function","!type":"fn(sName: String) -> Array","parameters":{"sName":"type: string, description: Promise identifier(s)"}},"remove":{"!description":"Removes an existing promise from the promise cache","!static":false,"!category":"function","!type":"fn(vPromise: String | Promise<*>)","parameters":{"vPromise":"type: string|Promise<*>, description: Promise or identifier"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.util.PromiseCache with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/mdc/util/PromiseCache","!helpDescription":"Provides a caching mechanism for promises. This API features Promise cancellation: resolve or reject handlers won't be called after removal of the promise, cache destruction or manual cancellation. Destroying the cache will cancel all registered promises and delete references. Convenience methods for promise creation, wrapping and replacement are offered.","reject":{"!description":"Rejects an existing promise from the promise cache","!static":false,"!category":"function","!type":"fn(vPromise: String | Promise, oValue?: String) -> Promise<*>","parameters":{"vPromise":"type: string|Promise, description: Promise or identifier","oValue":"type: string, description: Promise error"}},"retrieve":{"!description":"Retrieves an existing promise from the promise cache. Automatically creates and returns a new promise if <code>fnCreate<\/code> is given.\n\nA given creation method will receive the following arguments on execution: <ul> <li><code>oPromise<\/code> ­- The newly created Promise<\/li> <li><code>fnResolve<\/code> ­- Resolve method for the newly created Promise<\/li> <li><code>fnReject<\/code> ­- Reject method for the newly created Promise<\/li> <li><code>fnRemove<\/code> ­- Remove method for the newly created Promise<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn(sName: String, fnCreate?: function(Promise,function,function,function) | Promise<*>) -> Promise","parameters":{"sName":"type: string, description: Promise identifier","fnCreate":"type: function(Promise,function,function,function)|Promise<*>, description: creation method or pre-created promise"}}},"sap.ui.mdc.enums.TableSelectionMode":{"!description":"Selection mode of the table.","!module":"sap/ui/mdc/enums/TableSelectionMode","Single":{"!description":"Only one row can be selected at a time","!category":"enum","!type":"String"},"SingleMaster":{"!description":"Only one row can be selected at a time. The selection column is not shown. Instead, the user can press the row to select it.\n\n<b>Note:<\/b> If this selection mode is used, the table does not fire the <code>rowPress<\/code> event.","!category":"enum","!type":"String"},"!category":"static class","Multi":{"!description":"Multiple rows can be selected at a time","!category":"enum","!type":"String"},"None":{"!description":"No row selection available","!category":"enum","!type":"String"}},"sap.ui.mdc.valuehelp.base.Content_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Content with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.Content"},"sap.ui.mdc.enums.FieldEditMode":{"!description":"Defines in what mode a {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered.","ReadOnly":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in read-only mode","!category":"enum","!type":"String"},"EditableReadOnly":{"!description":"If more than one control is rendered by the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} control, the first part is editable, and the other parts are read-only.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/FieldEditMode","EditableDisplay":{"!description":"If more than one control is rendered by the {@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} control, the first part is editable, and the other parts are in display mode.","!category":"enum","!type":"String"},"Editable":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in editable mode","!category":"enum","!type":"String"},"!category":"static class","Disabled":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in disabled mode","!category":"enum","!type":"String"},"Display":{"!description":"{@link sap.ui.mdc.Field Field}, {@link sap.ui.mdc.FilterField FilterField} or {@link sap.ui.mdc.MultiValueField MultiValueField} is rendered in display mode","!category":"enum","!type":"String"}},"sap.ui.mdc.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Link"},"sap.ui.mdc.valuehelp.content.FixedListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.FixedListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.FixedListItem"},"sap.ui.mdc.enums.TableType":{"!description":"Type of the table.","Table":{"!description":"Equivalent to the default configuration of {@link sap.ui.mdc.table.GridTableType}","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/TableType","!category":"static class","ResponsiveTable":{"!description":"Equivalent to the default configuration of {@link sap.ui.mdc.table.ResponsiveTableType}","!category":"enum","!type":"String"}},"sap.ui.mdc.filterbar.FilterBarBase":{"getShowMessages":{"!description":"Gets current value of property {@link #getShowMessages showMessages}.\n\nIndicates whether possible errors during the search in a message box are displayed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInternalConditions":{"!description":"Gets the conditions of the inner condition model.\n\n<b>Note:<\/b> This method returns a map of conditions in an internalized format which is NOT suitable for control state application.","!static":false,"!category":"function","!type":"fn() -> map"},"attachFiltersChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersChanged filtersChanged} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself.\n\nThis event is fired after either a filter value or the visibility of a filter item has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowMessages":{"!description":"Sets a new value for property {@link #getShowMessages showMessages}.\n\nIndicates whether possible errors during the search in a message box are displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMessages?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bShowMessages":"type: boolean, description: New value for property <code>showMessages<\/code>"}},"initializedWithMetadata":{"!description":"Gets the state of initialization. This method triggers the retrieval of the metadata.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!proto":"sap.ui.mdc.Control","!category":"class","setVariantBackreference":{"!description":"Sets the associated {@link #getVariantBackreference variantBackreference}.","!static":false,"!category":"function","!type":"fn(oVariantBackreference: sap.ui.core.ID | sap.ui.fl.variants.VariantManagement) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oVariantBackreference":"type: sap.ui.core.ID|sap.ui.fl.variants.VariantManagement, description: ID of an element which becomes the new target of this variantBackreference association; alternatively, an element instance may be given"}},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/BaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getVariantBackreference":{"!description":"ID of the element which is the current target of the association {@link #getVariantBackreference variantBackreference}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"getSearch":{"!description":"Gets the value of the basic search condition.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>FilterBarBase<\/code> control.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getLiveMode liveMode} : boolean (default: false)<\/li>\n<li>{@link #getShowMessages showMessages} : boolean (default: true)<\/li>\n<li>{@link #getShowGoButton showGoButton} : boolean (default: true)<\/li>\n<li>{@link #getFilterConditions filterConditions} : object (default: {})<\/li>\n<li>{@link #getPropertyInfo propertyInfo} : object (default: [])<\/li>\n<li>{@link #getSuspendSelection suspendSelection} : boolean (default: false)<\/li>\n<li>{@link #get_filterCount _filterCount} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.ui.mdc.FilterField[] (default)<\/li>\n<li>{@link #getBasicSearchField basicSearchField} : sap.ui.mdc.FilterField<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getVariantBackreference variantBackreference} : (sap.ui.core.ID | sap.ui.fl.variants.VariantManagement)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersChanged filtersChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","getShowGoButton":{"!description":"Gets current value of property {@link #getShowGoButton showGoButton}.\n\nIndicates whether the Go button is visible in the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentState":{"!description":"Gets the external conditions of the inner condition model. <b>Note:<\/b> This API returns only attributes related to the {@link sap.ui.mdc.FilterBar#setP13nMode p13nMode} property configuration.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.State"},"initialized":{"!description":"Gets the state of initialization. This method does not trigger the retrieval of the metadata.","!static":false,"!category":"function","!type":"fn() -> Promise"},"triggerSearch":{"!description":"Triggers the search.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getAssignedFiltersText":{"!description":"Gets a summary string that contains information about the filters currently assigned. The method returns the text summary for the expanded and collapsed states of the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <br>","!static":false,"!category":"function","!type":"fn() -> map"},"getBasicSearchField":{"!description":"Gets content of aggregation {@link #getBasicSearchField basicSearchField}.\n\nContains the optional basic search field. <b>Note:<\/b> The <code>conditions<\/code> property of this field is managed by the control. The <code>propertyKey<\/code> property of this field has to be <code>$search<\/code> and is enforced by this control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.FilterField"},"validate":{"!description":"Returns a <code>Promise<\/code> for the asynchronous validation of filters.","!static":false,"!category":"function","!type":"fn(bSuppressSearch: Boolean) -> Promise","parameters":{"bSuppressSearch":"type: boolean, description: Indicates whether the <code>search<\/code> event is triggered after successful validation"}},"!description":"The <code>FilterBarBase<\/code> control is the base for filter displaying controls in MDC.","checkFilters":{"!description":"Checks the validation status of the filter fields. <b>Note:<\/b> This method returns the current inner state of the {@link sap.ui.mdc.FilterBar FilterBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enums.FilterBarValidationStatus"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.FilterBarBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"cleanUpAllFilterFieldsInErrorState":{"!description":"Clears non-model value for any filter field and resets the value state to none.","!static":false,"!category":"function","!type":"fn()"},"getFilterItems":{"!description":"Gets content of aggregation {@link #getFilterItems filterItems}.\n\nContains all the displayed {@link sap.ui.mdc.FilterField filter fields} of the <code>FilterBarBase<\/code> control.\n\n<b>Note:<\/b> This aggregation is managed by the control, can only be populated during the definition in the XML view, and is not bindable. Any changes of the initial aggregation content might result in undesired effects. Changes of the aggregation have to be made with the {@link sap.ui.mdc.p13n.StateUtil StateUtil}. Also, the <code>conditions<\/code> property of <code>filterItems<\/code> is managed by the control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterField]"},"setBasicSearchField":{"!description":"Sets the aggregated {@link #getBasicSearchField basicSearchField}.","!static":false,"!category":"function","!type":"fn(oBasicSearchField: sap.ui.mdc.FilterField) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oBasicSearchField":"type: sap.ui.mdc.FilterField, description: The basicSearchField to set"}},"fireFiltersChanged":{"!description":"Fires event {@link #event:filtersChanged filtersChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getConditions":{"!description":"Gets the external conditions.","!static":false,"!category":"function","!type":"fn() -> map"},"detachFiltersChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersChanged filtersChanged} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself.\n\nThis event is fired when the Go button is pressed or after a condition change, when <code>liveMode<\/code> is active. <b>Note<\/b>: This event should never be executed programmatically. It is triggered internally by the {@link sap.ui.mdc.FilterBar FilterBar} after the <code>triggerSearch<\/code> function has been executed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFocusOnFirstErroneousField":{"!description":"Sets the focus on the first filter in error state.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.FilterField | null"},"getIgnoreQueuing":{"!description":"Indicates whether the default behavior of the <code>suspendSelection<\/code> property is overruled.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/mdc/BaseDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.FilterBarBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getLiveMode":{"!description":"Gets current value of property {@link #getLiveMode liveMode}.\n\nTriggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.ui.mdc.FilterField<\/code> in the aggregation {@link #getFilterItems filterItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.mdc.FilterField) -> Number","parameters":{"oFilterItem":"type: sap.ui.mdc.FilterField, description: The filterItem whose index is looked for"}},"!module":"sap/ui/mdc/filterbar/FilterBarBase","!helpDescription":"The <code>FilterBarBase<\/code> control is the base for filter displaying controls in MDC.","getAssignedFilterNames":{"!description":"Gets the labels of all filters with a value assignment.\n\n<b>Note:<\/b> Filters annotated with <code>hiddenFilters<\/code> will not be considered.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getSuspendSelection":{"!description":"Gets current value of property {@link #getSuspendSelection suspendSelection}.\n\nIf set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyBasicSearchField":{"!description":"Destroys the basicSearchField in the aggregation {@link #getBasicSearchField basicSearchField}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.FilterBarBase"},"setIgnoreQueuing":{"!description":"Determines whether the default behavior of the <code>suspendSelection<\/code> property is overruled. This can only happen during the suspension of the selection. If this property is set to <code>true<\/code>, a possible queue of search requests is ignored during the final <code>suspendSelection<\/code> operation. Once the suspension of the selection is over, this value will be set to <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValue: Boolean)","parameters":{"bValue":"type: boolean, description: If set to <code>true<\/code> the default behavior is ignored"}},"setLiveMode":{"!description":"Sets a new value for property {@link #getLiveMode liveMode}.\n\nTriggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLiveMode?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bLiveMode":"type: boolean, description: New value for property <code>liveMode<\/code>"}},"setShowGoButton":{"!description":"Sets a new value for property {@link #getShowGoButton showGoButton}.\n\nIndicates whether the Go button is visible in the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGoButton?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bShowGoButton":"type: boolean, description: New value for property <code>showGoButton<\/code>"}},"setSuspendSelection":{"!description":"Sets a new value for property {@link #getSuspendSelection suspendSelection}.\n\nIf set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSuspendSelection?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bSuspendSelection":"type: boolean, description: New value for property <code>suspendSelection<\/code>"}}},"sap.ui.mdc.valuehelp.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.FilterBar"},"sap.ui.mdc.field.content.DefaultContent":{"!description":"Object-based definition of the default content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. Default content can be overwritten to create new content types. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!module":"sap/ui/mdc/field/content/DefaultContent","!helpDescription":"Object-based definition of the default content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. Default content can be overwritten to create new content types. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!category":"namespace"},"sap.ui.mdc.valuehelp.content.MTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.MTable"},"sap.ui.mdc.valuehelp.content.MDCTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MDCTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.MDCTable"},"sap.ui.mdc.valuehelp.base.DefineConditionPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.DefineConditionPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.DefineConditionPanel"},"sap.ui.mdc.field.content":{"UnitContent":"sap.ui.mdc.field.content.UnitContent","DateTimeContent":"sap.ui.mdc.field.content.DateTimeContent","!module":"sap/ui/mdc/field/content/ContentFactory","LinkContent":"sap.ui.mdc.field.content.LinkContent","DateContent":"sap.ui.mdc.field.content.DateContent","BooleanContent":"sap.ui.mdc.field.content.BooleanContent","DefaultContent":"sap.ui.mdc.field.content.DefaultContent","!category":"namespace","ContentFactory":"sap.ui.mdc.field.content.ContentFactory","SearchContent":"sap.ui.mdc.field.content.SearchContent","TimeContent":"sap.ui.mdc.field.content.TimeContent"},"sap.ui.mdc.valuehelp.base.ITypeaheadContent":{"!description":"Interface for valuehelp {@link sap.ui.mdc.valuehelp.base.Container Containers} / {@link sap.ui.mdc.valuehelp.base.Content Contents} supporting typeahead functionality","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.valuehelp.base.DefineConditionPanel":{"!description":"A <code>DefineConditionPanel<\/code> control is used inside the <code>ValueHelp<\/code> content to enter different types of conditions.","getInputOK":{"!description":"Gets current value of property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling value help and automatically update it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.DefineConditionPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe <code>label<\/code> for the <code>DefineConditionPanel<\/code> used as panel headerText.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setInputOK":{"!description":"Sets a new value for property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling value help and automatically update it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInputOK?: Boolean) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"bInputOK":"type: boolean, description: New value for property <code>inputOK<\/code>"}},"setValueHelp":{"!description":"Sets the associated {@link #getValueHelp valueHelp}.","!static":false,"!category":"function","!type":"fn(oValueHelp: sap.ui.core.ID | sap.ui.mdc.ValueHelp) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"oValueHelp":"type: sap.ui.core.ID|sap.ui.mdc.ValueHelp, description: ID of an element which becomes the new target of this valueHelp association; alternatively, an element instance may be given"}},"!proto":"sap.ui.core.Control","!category":"class","getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"fireConditionProcessed":{"!description":"Fires event {@link #event:conditionProcessed conditionProcessed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getConfig":{"!description":"Gets current value of property {@link #getConfig config}.\n\nInternal configuration\n\n<b>Note:<\/b> This property must not be set from outside, it used to forward the configuration of the <code>ValueHelp<\/code>\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setConfig":{"!description":"Sets a new value for property {@link #getConfig config}.\n\nInternal configuration\n\n<b>Note:<\/b> This property must not be set from outside, it used to forward the configuration of the <code>ValueHelp<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oConfig?: Object) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"oConfig":"type: object, description: New value for property <code>config<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.DefineConditionPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>DefineConditionPanel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getConfig config} : object (default: {})<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #getInputOK inputOK} : boolean (default: true)<\/li>\n<li>{@link #get_pagination _pagination} : boolean (default: false)<\/li>\n<li>{@link #get_prevButtonActive _prevButtonActive} : boolean (default: false)<\/li>\n<li>{@link #get_nextButtonActive _nextButtonActive} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFieldHelp fieldHelp} : (sap.ui.core.ID | sap.ui.mdc.ValueHelp)<\/li>\n<li>{@link #getValueHelp valueHelp} : (sap.ui.core.ID | sap.ui.mdc.ValueHelp)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:conditionProcessed conditionProcessed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"!module":"sap/ui/mdc/valuehelp/base/DefineConditionPanel","getFieldHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link #setValueHelp valueHelp} association<br>ID of the element which is the current target of the association {@link #getFieldHelp fieldHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"!helpDescription":"A <code>DefineConditionPanel<\/code> control is used inside the <code>ValueHelp<\/code> content to enter different types of conditions.","getValueHelp":{"!description":"ID of the element which is the current target of the association {@link #getValueHelp valueHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID | null"},"attachConditionProcessed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:conditionProcessed conditionProcessed} event of this <code>sap.ui.mdc.valuehelp.base.DefineConditionPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.DefineConditionPanel<\/code> itself.\n\nEvent is fired if the user processes a condition. (Not known if changed.)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.DefineConditionPanel<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe <code>label<\/code> for the <code>DefineConditionPanel<\/code> used as panel headerText.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"detachConditionProcessed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:conditionProcessed conditionProcessed} event of this <code>sap.ui.mdc.valuehelp.base.DefineConditionPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setFieldHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.114.0 replaced by {@link #setValueHelp valueHelp} association<br>Sets the associated {@link #getFieldHelp fieldHelp}.","!static":false,"!category":"function","!type":"fn(oFieldHelp: sap.ui.core.ID | sap.ui.mdc.ValueHelp) -> sap.ui.mdc.valuehelp.base.DefineConditionPanel","parameters":{"oFieldHelp":"type: sap.ui.core.ID|sap.ui.mdc.ValueHelp, description: ID of an element which becomes the new target of this fieldHelp association; alternatively, an element instance may be given"}}},"sap.ui.mdc.condition.ConditionModel":{"!description":"JSON based Model for {@link sap.ui.mdc.FilterField FilterField} controls. The model stores the entered values as {@link sap.ui.mdc.condition.ConditionObject ConditionObjects}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.ConditionModel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.model.json.JSONModel","!category":"class","createCondition":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the sap.ui.mdc.condition.Condition.createCondition<br>creates a condition instance","!static":false,"!category":"function","!type":"fn(sFieldPath: String, sOperator: String, aValues: [Object]) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sOperator":"type: string, description: the operator for the condition","aValues":"type: any[], description: the array of values for the condition","sFieldPath":"type: string, description: the <code>FieldPath<\/code> name of the condition"}},"getConditions":{"!description":"Returns conditions for a specified <codeFieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> [sap.ui.mdc.condition.ConditionObject]","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition"}},"addCondition":{"!description":"Adds a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oCondition: sap.ui.mdc.condition.ConditionObject, bForce: Boolean) -> sap.ui.mdc.condition.ConditionModel","parameters":{"bForce":"type: boolean, description: if set the condition will be added even if it already exist","sFieldPath":"type: string, description: fieldPath of the condition","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be added"}},"createItemCondition":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the sap.ui.mdc.condition.Condition.createItemCondition<br>creates a condition instance for the item-condition","!static":false,"!category":"function","!type":"fn(sFieldPath: String, sKey: String, sDescription: String) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDescription":"type: string, description: the description of the operator","sKey":"type: string, description: the operator for the condition","sFieldPath":"type: string, description: the <code>FieldPath<\/code> name of the condition"}},"getAllConditions":{"!description":"Returns all conditions.","!static":false,"!category":"function","!type":"fn(vFieldPath: [String | String]) -> Object","parameters":{"vFieldPath":"type: string|string[], description: fieldPath for that conditions are requested"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeCondition":{"!description":"Removes a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, vCondition: Number | sap.ui.mdc.condition.ConditionObject) -> Boolean","parameters":{"vCondition":"type: int|sap.ui.mdc.condition.ConditionObject, description: condition or index of the condition","sFieldPath":"type: string, description: fieldPath of the condition"}},"setConditions":{"!description":"Sets conditions. All already existing conditions will be removed.","!static":false,"!category":"function","!type":"fn(oConditions: Object) -> sap.ui.mdc.condition.ConditionModel","parameters":{"oConditions":"type: object, description: object of conditions for corresponding fieldPaths"}},"!module":"sap/ui/mdc/condition/ConditionModel","!helpDescription":"JSON based Model for {@link sap.ui.mdc.FilterField FilterField} controls. The model stores the entered values as {@link sap.ui.mdc.condition.ConditionObject ConditionObjects}.","insertCondition":{"!description":"Inserts a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, iIndex: Number, oCondition: sap.ui.mdc.condition.ConditionObject, bForce: Boolean) -> sap.ui.mdc.condition.ConditionModel","parameters":{"bForce":"type: boolean, description: if set the condition will be inserted even if it already exist","sFieldPath":"type: string, description: fieldPath of the condition","iIndex":"type: int, description: index where the condition should be inserted","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be inserted"}},"merge":{"!description":"merge conditions from the source <code>ConditionModel<\/code> into this instance","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oSourceConditionModel: sap.ui.mdc.condition.ConditionModel, sSourceFieldPath: String)","parameters":{"sSourceFieldPath":"type: string, description: specifies which conditions from the source should be merged.","sFieldPath":"type: string, description: specifies which conditions should be removed and replaced by the conditions from the source <code>ConditionModel<\/code>","oSourceConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: source <code>ConditionModel<\/code>."}},"clone":{"!description":"creates a clone of the <code>ConditionModel<\/code> which contains the conditions for the <code>sFieldPath<\/code> parameter","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> sap.ui.mdc.condition.ConditionModel","parameters":{"sFieldPath":"type: string, description: specifies which conditions should be copied into the clone. If not specified all conditions will be copied."}},"indexOf":{"!description":"Determines the index of a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oCondition: sap.ui.mdc.condition.ConditionObject, fnNormalizeCondition?: function(Object) : Object) -> Number","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition","fnNormalizeCondition":"type: function(Object) : Object, description: normalization method for condition comparison","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be searched"}},"removeAllConditions":{"!description":"Removes all conditions for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> sap.ui.mdc.condition.ConditionModel","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition"}}},"module:sap/ui/mdc/LinkDelegate":{"!description":"Base delegate for {@link sap.ui.mdc.Link}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Link}.","getPanelId":{"!description":"Allows to differenciate the created <code>Panel<\/code> of multiple <code>Link<\/code> instances for personalization reasons. Please provide different IDs for each <code>Link<\/code> as otherwise the personalization will have problems keeping the <code>Panel<\/code> controls apart.","!category":"function","!type":"fn(oLink: sap.ui.mdc.Link) -> String"},"!module":"sap/ui/mdc/LinkDelegate","!helpDescription":"Base delegate for {@link sap.ui.mdc.Link}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Link}.","beforeNavigationCallback":{"!description":"Allows for interception before the actual navigation takes place. <br>By default, this method returns a <code>Promise<\/code> that resolves into <code>true<\/code>.","!category":"function","!type":"fn(oLink: sap.ui.mdc.Link, oEvent: sap.ui.base.Event) -> Promise<boolean>"},"fetchLinkType":{"!description":"Calculates and returns the type of link that is displayed. <br>By default, this method returns a <code>Promise<\/code> that resolves into a {@link sap.ui.mdc.link.LinkTypeWrapper LinkTypeWrapper}. The {@link sap.ui.mdc.link.LinkTypeWrapper LinkTypeWrapper} contains an <code>initialType<\/code> and a <code>runtimeType<\/code> {@link sap.ui.mdc.link.LinkType LinkType}. The <code>initialType<\/code> has a <code>type<\/code> property of type <code>Popover<\/code> and a <code>directLink<\/code> property of type <code>undefined<\/code>. The <code>runtimeType<\/code> is of type <code>null<\/code>.","!category":"function","!type":"fn(oLink: sap.ui.mdc.Link) -> Promise<sap.ui.mdc.link.LinkTypeWrapper>"},"fetchPopoverTitle":{"!description":"Enables the modification of the {@link sap.m.ResponsivePopover#title} property and setting which <code>Control<\/code> should be added to the <code>ariaLabelledBy<\/code> association.","!category":"function","!type":"fn(oLink: sap.ui.mdc.Link, oPanel: sap.ui.mdc.link.Panel) -> Promise<{sTitle:string,oLabelledByControl:sap.ui.core.Control}>"},"module:sap/ui/mdc/LinkDelegate":"module:sap/ui/mdc/LinkDelegate","!category":"namespace","fetchLinkItems":{"!description":"Retrieves and returns the relevant {@link sap.ui.mdc.link.LinkItem} for the <code>Link<\/code> control. <br>By default, this method returns a <code>Promise<\/code> that resolves into <code>null<\/code>.","!category":"function","!type":"fn(oLink: sap.ui.mdc.Link, oBindingContext: sap.ui.model.Context | null | undefined) -> [Promise<(null | sap.ui.mdc.link.LinkItem]"},"fetchAdditionalContent":{"!description":"Retrieves and returns the relevant <code>additionalContent<\/code> for the <code>Link<\/code> control as an array. <br>By default, this method returns a <code>Promise<\/code> that resolves into an empty array.","!category":"function","!type":"fn(oLink: sap.ui.mdc.Link) -> [Promise<sap.ui.core.Control]"},"modifyLinkItems":{"!description":"Enables the modification of the {@link sap.ui.mdc.link.LinkItem} instances before the popover opens. This enables additional parameters to be added to the link. <br>By default, this method returns a <code>Promise<\/code> that resolves into the passed <code>aLinkItems<\/code> array.","!category":"function","!type":"fn(oLink: sap.ui.mdc.Link, oBindingContext: sap.ui.model.Context | null | undefined, aLinkItems: [sap.ui.mdc.link.LinkItem]) -> [Promise<sap.ui.mdc.link.LinkItem]"}},"sap.ui.mdc.valuehelp.content.FixedListItem":{"!description":"An item that is used in the {@link sap.ui.mdc.valuehelp.content.FixedList FixedList}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.FixedListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.FixedListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setGroupKey":{"!description":"Sets a new value for property {@link #getGroupKey groupKey}.\n\nKey of the group for what the items are grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oGroupKey?: Object) -> sap.ui.mdc.valuehelp.content.FixedListItem","parameters":{"oGroupKey":"type: any, description: New value for property <code>groupKey<\/code>"}},"!constructorDescription":"Constructor for a new FixedListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupKey groupKey} : any<\/li>\n<li>{@link #getGroupText groupText} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.ListItem#constructor sap.ui.core.ListItem}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/FixedListItem","!helpDescription":"An item that is used in the {@link sap.ui.mdc.valuehelp.content.FixedList FixedList}.","setGroupText":{"!description":"Sets a new value for property {@link #getGroupText groupText}.\n\nText of the group for what the items are grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupText?: String) -> sap.ui.mdc.valuehelp.content.FixedListItem","parameters":{"sGroupText":"type: string, description: New value for property <code>groupText<\/code>"}},"!proto":"sap.ui.core.ListItem","!category":"class","getGroupKey":{"!description":"Gets current value of property {@link #getGroupKey groupKey}.\n\nKey of the group for what the items are grouped","!static":false,"!category":"function","!type":"fn() -> Object"},"getGroupText":{"!description":"Gets current value of property {@link #getGroupText groupText}.\n\nText of the group for what the items are grouped","!static":false,"!category":"function","!type":"fn() -> String"}},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.mdc.chart.SelectionDetailsActions":{"destroyDetailsActions":{"!description":"Destroys all the detailsActions in the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"getDetailsItemActions":{"!description":"Gets content of aggregation {@link #getDetailsItemActions detailsItemActions}.\n\nAction <code>item<\/code> shown in the Items area of the details popover.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"removeAllActionGroups":{"!description":"Removes all the controls from the aggregation {@link #getActionGroups actionGroups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!proto":"sap.ui.core.Element","removeDetailsItemAction":{"!description":"Removes a detailsItemAction from the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn(vDetailsItemAction: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vDetailsItemAction":"type: int|string|sap.ui.core.Item, description: The detailsItemAction to remove or its index or id"}},"!category":"class","indexOfDetailsItemAction":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getDetailsItemActions detailsItemActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDetailsItemAction: sap.ui.core.Item) -> Number","parameters":{"oDetailsItemAction":"type: sap.ui.core.Item, description: The detailsItemAction whose index is looked for"}},"insertActionGroup":{"!description":"Inserts a actionGroup into the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn(oActionGroup: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oActionGroup":"type: sap.ui.core.Item, description: The actionGroup to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the actionGroup should be inserted at; for a negative value of <code>iIndex<\/code>, the actionGroup is inserted at position 0; for a value greater than the current size of the aggregation, the actionGroup is inserted at the last position"}},"addActionGroup":{"!description":"Adds some actionGroup to the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn(oActionGroup: sap.ui.core.Item) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oActionGroup":"type: sap.ui.core.Item, description: The actionGroup to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new SelectionDetailsActions.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getDetailsItemActions detailsItemActions} : sap.ui.core.Item[]<\/li>\n<li>{@link #getDetailsActions detailsActions} : sap.ui.core.Item[]<\/li>\n<li>{@link #getActionGroups actionGroups} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","insertDetailsAction":{"!description":"Inserts a detailsAction into the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn(oDetailsAction: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the detailsAction should be inserted at; for a negative value of <code>iIndex<\/code>, the detailsAction is inserted at position 0; for a value greater than the current size of the aggregation, the detailsAction is inserted at the last position","oDetailsAction":"type: sap.ui.core.Item, description: The detailsAction to insert; if empty, nothing is inserted"}},"insertDetailsItemAction":{"!description":"Inserts a detailsItemAction into the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn(oDetailsItemAction: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the detailsItemAction should be inserted at; for a negative value of <code>iIndex<\/code>, the detailsItemAction is inserted at position 0; for a value greater than the current size of the aggregation, the detailsItemAction is inserted at the last position","oDetailsItemAction":"type: sap.ui.core.Item, description: The detailsItemAction to insert; if empty, nothing is inserted"}},"getActionGroups":{"!description":"Gets content of aggregation {@link #getActionGroups actionGroups}.\n\nAction <code>item<\/code> shown in the Groups area of the details.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!description":"The <code>SelectionDetailsActions<\/code> is used to provide additional functionality to the Details popover.","getDetailsActions":{"!description":"Gets content of aggregation {@link #getDetailsActions detailsActions}.\n\nAction <code>item<\/code> shown in the Details area of the details.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"removeAllDetailsActions":{"!description":"Removes all the controls from the aggregation {@link #getDetailsActions detailsActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chart.SelectionDetailsActions.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addDetailsItemAction":{"!description":"Adds some detailsItemAction to the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn(oDetailsItemAction: sap.ui.core.Item) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oDetailsItemAction":"type: sap.ui.core.Item, description: The detailsItemAction to add; if empty, nothing is inserted"}},"indexOfActionGroup":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getActionGroups actionGroups}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oActionGroup: sap.ui.core.Item) -> Number","parameters":{"oActionGroup":"type: sap.ui.core.Item, description: The actionGroup whose index is looked for"}},"destroyActionGroups":{"!description":"Destroys all the actionGroups in the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"addDetailsAction":{"!description":"Adds some detailsAction to the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn(oDetailsAction: sap.ui.core.Item) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oDetailsAction":"type: sap.ui.core.Item, description: The detailsAction to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.SelectionDetailsActions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeAllDetailsItemActions":{"!description":"Removes all the controls from the aggregation {@link #getDetailsItemActions detailsItemActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"destroyDetailsItemActions":{"!description":"Destroys all the detailsItemActions in the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"!module":"sap/ui/mdc/chart/SelectionDetailsActions","!helpDescription":"The <code>SelectionDetailsActions<\/code> is used to provide additional functionality to the Details popover.","indexOfDetailsAction":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getDetailsActions detailsActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDetailsAction: sap.ui.core.Item) -> Number","parameters":{"oDetailsAction":"type: sap.ui.core.Item, description: The detailsAction whose index is looked for"}},"removeActionGroup":{"!description":"Removes a actionGroup from the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn(vActionGroup: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vActionGroup":"type: int|string|sap.ui.core.Item, description: The actionGroup to remove or its index or id"}},"removeDetailsAction":{"!description":"Removes a detailsAction from the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn(vDetailsAction: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vDetailsAction":"type: int|string|sap.ui.core.Item, description: The detailsAction to remove or its index or id"}}},"sap.ui.mdc.field.FieldBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldBase"},"sap.ui":{"!category":"namespace","mdc":"sap.ui.mdc"},"sap.ui.mdc.enums.TableMultiSelectMode":{"!description":"Multi-select mode of the table.","ClearAll":{"!description":"The table shows a Clear All icon","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enums/TableMultiSelectMode","!category":"static class","Default":{"!description":"The table shows a Select All checkbox","!category":"enum","!type":"String"}},"sap.ui.mdc.table.Column":{"setCreationTemplate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124 the concept has been discarded.<br>Sets the aggregated {@link #getCreationTemplate creationTemplate}.","!static":false,"!category":"function","!type":"fn(oCreationTemplate: sap.ui.core.Control) -> sap.ui.mdc.table.Column","parameters":{"oCreationTemplate":"type: sap.ui.core.Control, description: The creationTemplate to set"}},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nIndicates whether the content of the column is required. <b>Note:<\/b> The table only takes care of announcing the state of the column header as defined by the <code>required<\/code> property. The application needs to take care of the screen reader announcement of the state of the table cells, for example, by setting the <code>required<\/code> property to <code>true<\/code> for <code>sap.m.Input<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.mdc.table.Column","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"setDataProperty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 Please use <code>propertyKey<\/code> instead.<br>Sets a new value for property {@link #getDataProperty dataProperty}.\n\nDefines data property related to the column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDataProperty: String) -> sap.ui.mdc.table.Column","parameters":{"sDataProperty":"type: string, description: New value for property <code>dataProperty<\/code>"}},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nDefines the minimum width of the column. This property only takes effect if the column has a flexible <code>width<\/code>, for example, a percentage value. The user can resize the column to a smaller width if {@link sap.ui.mdc.Table#getEnableColumnResize column resizing} is enabled in the table.\n\n<b>Note:<\/b> If the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, the property is used to influence the pop-in behavior: If the accumulated width of all columns is bigger than the width of the table, then the least important column is moved into the pop-in area. For more information, see {@link sap.ui.mdc.table.ResponsiveColumnSettings#getImportance ResponsiveColumnSettings}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn(fMinWidth?: Number) -> sap.ui.mdc.table.Column","parameters":{"fMinWidth":"type: float, description: New value for property <code>minWidth<\/code>"}},"!proto":"sap.ui.core.Control","getDataProperty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 Please use <code>propertyKey<\/code> instead.<br>Gets current value of property {@link #getDataProperty dataProperty}.\n\nDefines data property related to the column.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the column.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setTooltip":{"!description":"Sets a new tooltip for this object.\n\nThe tooltip can only be a simple string. An instance of {@link sap.ui.core.TooltipBase} is not supported.\n\nIf a new tooltip is set, any previously set tooltip is deactivated.","!static":false,"!category":"function","!type":"fn(vTooltip: String) -> sap.ui.mdc.table.Column","parameters":{"vTooltip":"type: string, description: New tooltip"}},"setHeaderVisible":{"!description":"Sets a new value for property {@link #getHeaderVisible headerVisible}.\n\nDefines whether the column header is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderVisible?: Boolean) -> sap.ui.mdc.table.Column","parameters":{"bHeaderVisible":"type: boolean, description: New value for property <code>headerVisible<\/code>"}},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nDefines the column header text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader: String) -> sap.ui.mdc.table.Column","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nDefines the column header text.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyCreationTemplate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124 the concept has been discarded.<br>Destroys the creationTemplate in the aggregation {@link #getCreationTemplate creationTemplate}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.Column"},"getCreationTemplate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.124 the concept has been discarded.<br>Gets content of aggregation {@link #getCreationTemplate creationTemplate}.\n\n<code>CreationRow<\/code> template.\n\n<b>Note:<\/b> Once the binding supports creating transient records, this aggregation will be removed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nDefines the minimum width of the column. This property only takes effect if the column has a flexible <code>width<\/code>, for example, a percentage value. The user can resize the column to a smaller width if {@link sap.ui.mdc.Table#getEnableColumnResize column resizing} is enabled in the table.\n\n<b>Note:<\/b> If the table type is {@link sap.ui.mdc.table.ResponsiveTableType ResponsiveTable}, the property is used to influence the pop-in behavior: If the accumulated width of all columns is bigger than the width of the table, then the least important column is moved into the pop-in area. For more information, see {@link sap.ui.mdc.table.ResponsiveColumnSettings#getImportance ResponsiveColumnSettings}.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new <code>Column<\/column>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMinWidth minWidth} : float (default: 8)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getHeaderVisible headerVisible} : boolean (default: true)<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.core.HorizontalAlign (default: \"Begin\")<\/li>\n<li>{@link #getImportance importance} : sap.ui.core.Priority (default: \"None\")<\/li>\n<li>{@link #getDataProperty dataProperty} : string<\/li>\n<li>{@link #getPropertyKey propertyKey} : string<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTemplate template} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getCreationTemplate creationTemplate} : sap.ui.core.Control<\/li>\n<li>{@link #getExtendedSettings extendedSettings} : sap.ui.mdc.table.ColumnSettings<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getPropertyKey":{"!description":"Gets current value of property {@link #getPropertyKey propertyKey}.\n\nDefines data property related to the column.","!static":false,"!category":"function","!type":"fn() -> String"},"setExtendedSettings":{"!description":"Sets the aggregated {@link #getExtendedSettings extendedSettings}.","!static":false,"!category":"function","!type":"fn(oExtendedSettings: sap.ui.mdc.table.ColumnSettings) -> sap.ui.mdc.table.Column","parameters":{"oExtendedSettings":"type: sap.ui.mdc.table.ColumnSettings, description: The extendedSettings to set"}},"getImportance":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.110 replaced with {@link sap.ui.mdc.table.ResponsiveColumnSettings#importance} <br/> This property will be ignored whenever the {@link sap.ui.mdc.table.ResponsiveColumnSettings} are applied to the column.<br>Gets current value of property {@link #getImportance importance}.\n\nDefines the column importance.\n\nThe column importance is taken into consideration for calculating the <code>minScreenWidth<\/code> property and for setting the <code>demandPopin<\/code> property of the column. See {@link sap.m.Table#getAutoPopinMode} for more details, which is automatically set to <code>true<\/code>.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Priority"},"getExtendedSettings":{"!description":"Gets content of aggregation {@link #getExtendedSettings extendedSettings}.\n\nDefines type-specific column settings based on the used {@link sap.ui.mdc.table.TableTypeBase}.\n\n<b>Note:<\/b> Once <code>sap.ui.mdc.table.ColumnSettings<\/code> are defined, all properties provided by the <code>ColumnSettings<\/code> are automatically assigned to the column.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.ColumnSettings"},"!description":"The column for the metadata-driven table with the template, which is shown if the rows have data.","setImportance":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.110 replaced with {@link sap.ui.mdc.table.ResponsiveColumnSettings#importance} <br/> This property will be ignored whenever the {@link sap.ui.mdc.table.ResponsiveColumnSettings} are applied to the column.<br>Sets a new value for property {@link #getImportance importance}.\n\nDefines the column importance.\n\nThe column importance is taken into consideration for calculating the <code>minScreenWidth<\/code> property and for setting the <code>demandPopin<\/code> property of the column. See {@link sap.m.Table#getAutoPopinMode} for more details, which is automatically set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn(sImportance?: sap.ui.core.Priority) -> sap.ui.mdc.table.Column","parameters":{"sImportance":"type: sap.ui.core.Priority, description: New value for property <code>importance<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.Column.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTemplate":{"!description":"Gets content of aggregation {@link #getTemplate template}.\n\nTemplate for the column.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroyExtendedSettings":{"!description":"Destroys the extendedSettings in the aggregation {@link #getExtendedSettings extendedSettings}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.Column"},"getHAlign":{"!description":"Gets current value of property {@link #getHAlign hAlign}.\n\nDefines the horizontal alignment of the column content.\n\nDefault value is <code>\"Begin\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.HorizontalAlign"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.table.Column","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setPropertyKey":{"!description":"Sets a new value for property {@link #getPropertyKey propertyKey}.\n\nDefines data property related to the column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPropertyKey: String) -> sap.ui.mdc.table.Column","parameters":{"sPropertyKey":"type: string, description: New value for property <code>propertyKey<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.Column with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setTemplate":{"!description":"Sets the aggregated {@link #getTemplate template}.","!static":false,"!category":"function","!type":"fn(oTemplate: sap.ui.core.Control) -> sap.ui.mdc.table.Column","parameters":{"oTemplate":"type: sap.ui.core.Control, description: The template to set"}},"!module":"sap/ui/mdc/table/Column","!helpDescription":"The column for the metadata-driven table with the template, which is shown if the rows have data.","setHAlign":{"!description":"Sets a new value for property {@link #getHAlign hAlign}.\n\nDefines the horizontal alignment of the column content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Begin\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHAlign?: sap.ui.core.HorizontalAlign) -> sap.ui.mdc.table.Column","parameters":{"sHAlign":"type: sap.ui.core.HorizontalAlign, description: New value for property <code>hAlign<\/code>"}},"getHeaderVisible":{"!description":"Gets current value of property {@link #getHeaderVisible headerVisible}.\n\nDefines whether the column header is visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyTemplate":{"!description":"Destroys the template in the aggregation {@link #getTemplate template}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.Column"},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nIndicates whether the content of the column is required. <b>Note:<\/b> The table only takes care of announcing the state of the column header as defined by the <code>required<\/code> property. The application needs to take care of the screen reader announcement of the state of the table cells, for example, by setting the <code>required<\/code> property to <code>true<\/code> for <code>sap.m.Input<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.odata.v4.TypeUtil":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap}<br>Provides mapping functionality for odata v4 data types to base types. Extend this object in your project to customize behaviour depending on model usage.","!module":"sap/ui/mdc/odata/v4/TypeUtil","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115.0 please see {@link module:sap/ui/mdc/BaseDelegate.getTypeMap getTypeMap}<br>Provides mapping functionality for odata v4 data types to base types. Extend this object in your project to customize behaviour depending on model usage.","!category":"namespace"},"sap.ui.mdc.chart.ChartSelectionDetails_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.ChartSelectionDetails with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectionDetails.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chart.ChartSelectionDetails"},"sap.ui.mdc.filterbar.vh":{"filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"supportDefault":{"!description":"Indicates that default of variants is supported","!category":"enum","!type":"Boolean"},"_showAsText":{"!description":"Renders the name of the variant as a text. The name of the variant is usually rendered as {@link sap.m.Title} but there are use cases - related to accessibility requirements - where the rendering should be done using {@link sap.m.Text} instead.<br> <b>Note:<\/b> If the name of the variant is rendered as <code>sap.m.Text<\/code>, all the <code>sap.m.Title<\/code> specific information like <code>level<\/code> and <code>titleStyle<\/code> is ignored.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"Indicates whether possible errors during the search in a message box are displayed.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"selectedItemKey":{"!description":"The key of the selected item of the <code>CollectiveSearchSelect<\/code> control.\n\nThe <code>selectedItemKey<\/code> property must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.","!category":"enum","!type":"String"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"expandFilterFields":{"!description":"Determines whether the Show/Hide Filters button is in the state show or hide.<br>","!category":"enum","!type":"Boolean"},"!category":"namespace","title":{"!description":"The title of the <code>CollectiveSearchSelect<\/code> control.\n\nThe <code>title<\/code> property will be shown on the popover of the control on top of the <code>List<\/code>.","!category":"enum","!type":"String"},"showFooter":{"!description":"Indicates if the buttons and the complete footer in the My Views dialog are visible.","!category":"enum","!type":"Boolean"},"supportApplyAutomatically":{"!description":"Indicates that apply automatically functionality is supported","!category":"enum","!type":"Boolean"},"showSaveAs":{"!description":"Controls the visibility of the Save As button.","!category":"enum","!type":"Boolean"},"supportFavorites":{"!description":"Indicates that favorite handling is supported","!category":"enum","!type":"Boolean"},"delegate":{"!description":"Object related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/valuehelp/FilterBarDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.<br> <b>Node<\/b>: Please check {@link sap.ui.mdc.filterbar.PropertyInfo} for more information about the supported inner elements. <b>Note<\/b>: Existing properties (set via <code>sap.ui.mdc.filterbar.FilterBarBase#setPropertyInfo<\/code>) must not be removed and their attributes must not be changed during the {@link module:sap/ui/mdc/FilterBarDelegate.fetchProperties fetchProperties} callback. Otherwise validation errors might occur whenever personalization-related control features (such as the opening of any personalization dialog) are activated.","!category":"enum","!type":"Object"},"liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"_selectStategyForSameItem":{"!description":"Defines the behavior, when the same list item is selected If set to <code>false<\/code> the <code>select<\/code> event will be omitted.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"modified":{"!description":"Indicates if the current variant is modified.","!category":"enum","!type":"Boolean"},"popoverTitle":{"!description":"The title in the My Views popover.","!category":"enum","!type":"String"},"titleStyle":{"!description":"Defines the style of the title. For more information, see {@link sap.m.Title#setTitleStyle}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"maxWidth":{"!description":"Sets the maximum width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"Modules for value help dialog {@link sap.ui.mdc.filterbar.vh.FilterBar FilterBar}","selectedKey":{"!description":"Identifies the currently selected item","!category":"enum","!type":"String"},"_displayTextForExecuteOnSelectionForStandardVariant":{"!description":"Defines the Apply Automatically text for the standard variant in the Manage Views dialog if the application controls this behavior.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"level":{"!description":"Semantic level of the header. For more information, see {@link sap.m.Title#setLevel}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"_standardKey":{"!description":"Defines the standard variant key.","!category":"enum","!type":"String"},"_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"defaultKey":{"!description":"Identifies the defaulted item","!category":"enum","!type":"String"},"CollectiveSearchSelect":"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect_obj","supportContexts":{"!description":"Indicates that contexts functionality is supported.<br> <b>Note:<\/b> This property is used internally by the SAPUI5 flexibility layer.","!category":"enum","!type":"Boolean"},"FilterBar":"sap.ui.mdc.filterbar.vh.FilterBar_obj","!module":"sap/ui/mdc/filterbar/vh/FilterBar","!helpDescription":"Modules for value help dialog {@link sap.ui.mdc.filterbar.vh.FilterBar FilterBar}","filterFieldThreshold":{"!description":"Number of FilterItems which will be shown via Show Filters.<br>","!category":"enum","!type":"Number"},"creationAllowed":{"!description":"If set to <code>false<\/code>, neither the Save As nor the Save button in the My Views dialog is visible.","!category":"enum","!type":"Boolean"},"supportPublic":{"!description":"Indicates that public functionality is supported","!category":"enum","!type":"Boolean"},"showGoButton":{"!description":"Indicates whether the Go button is visible in the {@link sap.ui.mdc.FilterBar FilterBar} control.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"inErrorState":{"!description":"Indicates that the control is in error state. If set to <code>true<\/code>, an error message will be displayed whenever the variant is opened.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.field.ConditionType":{"!description":"This class represents a type that is used to map a single condition to a single-value control.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.model.SimpleType","getTextForCopy":{"!description":"Determines the text what is copied to clipboard if a token or item with the condition is selected and copied. For equal-conditions key/description pairs needs to be copied to allow pasing of such conditions.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject) -> String","parameters":{"oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: The condition to be copied"}},"validateValue":{"!description":"Validates a given condition. The values of the condition are validated using the given data type.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject) -> undefined | Promise","parameters":{"oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: The condition that is validated"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a Condition type.","formatValue":{"!description":"Formats the given condition to an output value of the given target type. These values are formatted using the given data type. Depending on the operator and the configuration (set in <code>FormatOptions<\/code>), a description will be determined by a given value help or delegate.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, sTargetType: String) -> Object | Promise","parameters":{"sTargetType":"type: string, description: The target type; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types}. In addition to the standard target types, <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not formatted and just forwarded to the target. If the value is an array representing data for a <code>CompositeType<\/code>, the index of the needed raw value can be added to the name (For example, if a unit should be forwarded as raw value, <code>sap.ui.mdc.raw:1<\/code> can be used).","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: The condition to be formatted"}},"!module":"sap/ui/mdc/field/ConditionType","!helpDescription":"This class represents a type that is used to map a single condition to a single-value control.","parseValue":{"!description":"Parses an external value of the given source type to a condition that holds the value in model representation. These values are parsed using the given data type. Depending on the operator and the configuration (set in <code>FormatOptions<\/code>), a value will be determined by a given value help or delegate.","!static":false,"!category":"function","!type":"fn(vValue: Object, sSourceType: String) -> null | sap.ui.mdc.condition.ConditionObject | Promise<(null | sap.ui.mdc.condition.ConditionObject)>","parameters":{"sSourceType":"type: string, description: The type of the given value; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard source types, <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not parsed and just used in the condition. If the value of the condition is an array representing data for a <code>CompositeType<\/code>, the index of the needed raw value can be added to the name (For example, if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","vValue":"type: any, description: The value that is parsed"}},"_parseValue":{"!description":"Parses an external value of the given source type to a condition that holds the value in model representation. These values are parsed using the given data type. Depending on the operator and the configuration (set in <code>FormatOptions<\/code>) a value will be determined by a given value help or delegate.","!static":false,"!category":"function","!type":"fn(vValue: Object, sSourceType: String, bInputValidationEnabled: Boolean, sForceDisplay?: sap.ui.mdc.enums.FieldDisplay) -> null | sap.ui.mdc.condition.ConditionObject | Promise<(null | sap.ui.mdc.condition.ConditionObject)>","parameters":{"bInputValidationEnabled":"type: boolean, description: If set, input validation is enabled, otherwise disabled, even if delegate or ValueHelp allows it. (Pasting multiple values)","sForceDisplay":"type: sap.ui.mdc.enums.FieldDisplay, description: Display mode to use, independend of configured one","sSourceType":"type: string, description: The type of the given value; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard source types, <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not parsed and just used in the condition. If the value of the condition is an array representing data for a <code>CompositeType<\/code> ,the index of the needed raw value can be added to the name (For example, if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","vValue":"type: any, description: The value that is parsed"}}},"sap.ui.mdc.field.content.BooleanContent":{"!description":"Object-based definition of the Boolean content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!module":"sap/ui/mdc/field/content/BooleanContent","!helpDescription":"Object-based definition of the Boolean content type that is used in the {@link sap.ui.mdc.field.content.ContentFactory}. This defines which controls to load and create for a given {@link sap.ui.mdc.enums.ContentMode}.","!category":"namespace"},"sap.ui.mdc.filterbar.PropertyInfoValidator":{"!description":"Provides validation functionality for property info and related controls.","!module":"sap/ui/mdc/filterbar/PropertyInfoValidator","!helpDescription":"Provides validation functionality for property info and related controls.","!category":"namespace"},"sap.ui.mdc.valuehelp.content.Bool_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Bool with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.content.FixedList.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.Bool"},"sap.ui.mdc.valuehelp.FilterBar":{"!description":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Show Filters button shows the additional filter field.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link module:sap/ui/mdc/FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.<br> <b>Note:<\/b> The <code>FilterBar<\/code> can only be used for a {@link sap.ui.mdc.valuehelp.Dialog Dialog} and not on its own.","setCollectiveSearch":{"!description":"Sets the {@link sap.ui.mdc.valuehelp.CollectiveSearchSelect CollectiveSearchSelect} control.\n\n<b>Note:<\/b> This must only be done by the corresponding value help, not from outside.","!static":false,"!category":"function","!type":"fn(oCollectiveSearch: sap.ui.mdc.valuehelp.CollectiveSearchSelect) -> sap.ui.mdc.valuehelp.FilterBar","parameters":{"oCollectiveSearch":"type: sap.ui.mdc.valuehelp.CollectiveSearchSelect, description: Instance of the {@link sap.ui.mdc.valuehelp.CollectiveSearchSelect CollectiveSearchSelect} control"}},"getExpandFilterFields":{"!description":"Gets current value of property {@link #getExpandFilterFields expandFilterFields}.\n\nDetermines whether the Show/Hide Filters button is in the state show or hide.<br>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setExpandFilterFields":{"!description":"Sets a new value for property {@link #getExpandFilterFields expandFilterFields}.\n\nDetermines whether the Show/Hide Filters button is in the state show or hide.<br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandFilterFields?: Boolean) -> sap.ui.mdc.valuehelp.FilterBar","parameters":{"bExpandFilterFields":"type: boolean, description: New value for property <code>expandFilterFields<\/code>"}},"!proto":"sap.ui.mdc.filterbar.FilterBarBase","!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/valuehelp/FilterBarDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"destroyCollectiveSearch":{"!description":"Destroys the {@link sap.ui.mdc.valuehelp.CollectiveSearchSelect CollectiveSearchSelect} control.\n\n<b>Note:<\/b> This must only be used by the corresponding value help, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.FilterBar"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nObject related to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> The object has the following properties: <ul> <li><code>name<\/code> defines the path to the <code>Delegate<\/code> module<\/li> <li><code>payload<\/code> (optional) defines application-specific information that can be used in the given delegate<\/li> <\/ul> <i>Sample delegate object:<\/i> <pre><code>{\n\tname: \"sap/ui/valuehelp/FilterBarDelegate\",\n\tpayload: {}\n}<\/code><\/pre> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.valuehelp.FilterBar","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setFilterFieldThreshold":{"!description":"Sets a new value for property {@link #getFilterFieldThreshold filterFieldThreshold}.\n\nNumber of FilterItems which will be shown via Show Filters.<br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn(iFilterFieldThreshold?: Number) -> sap.ui.mdc.valuehelp.FilterBar","parameters":{"iFilterFieldThreshold":"type: int, description: New value for property <code>filterFieldThreshold<\/code>"}},"!constructorDescription":"Constructor for a new <code>FilterBar<\/code> for a value help dialog.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getExpandFilterFields expandFilterFields} : boolean (default: true)<\/li>\n<li>{@link #getFilterFieldThreshold filterFieldThreshold} : int (default: 8)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.filterbar.FilterBarBase#constructor sap.ui.mdc.filterbar.FilterBarBase}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/FilterBar","!helpDescription":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Show Filters button shows the additional filter field.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link module:sap/ui/mdc/FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.<br> <b>Note:<\/b> The <code>FilterBar<\/code> can only be used for a {@link sap.ui.mdc.valuehelp.Dialog Dialog} and not on its own.","getInitialFocusedControl":{"!description":"Getter for the initial focusable <code>control<\/code> on the <code>FilterBar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getCollectiveSearch":{"!description":"Gets the {@link sap.ui.mdc.valuehelp.CollectiveSearchSelect CollectiveSearchSelect} control\n\n<b>Note:<\/b> This must only be used by the corresponding value help, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.CollectiveSearchSelect"},"getFilterFieldThreshold":{"!description":"Gets current value of property {@link #getFilterFieldThreshold filterFieldThreshold}.\n\nNumber of FilterItems which will be shown via Show Filters.<br>\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"module:sap/ui/mdc/AggregationBaseDelegate":{"!description":"Base delegate implementation for {@link sap.ui.mdc.Control MDC Controls}. This delegate serves as base implementation for aggregation-based controls, such as:\n\n<ul> <li><code>sap.ui.mdc.Chart<\/code><\/li> <li><code>sap.ui.mdc.Table<\/code><\/li> <li><code>sap.ui.mdc.FilterBar<\/code><\/li> <\/ul>\n\nThe <code>AggregationBaseDelegate<\/code> provides an interface for aggregation based functionality by providing an array of PropertyInfo objects, which can be used during runtime for personalization through the according <code>addItem<\/code> and <code>removeItem<\/code> hooks. Additional hooks for cleanup and validation mechanisms can be implemented through this delegate.","addItem":{"!description":"Central hook to add items to the provided control instance. This method must return a promise that resolves with an instance of the implementing {@link sap.ui.mdc.Control Control} default aggregation.\n\nConsequently the parameter <code>mPropertyBag<\/code> is only passed during preprocessing. In runtime scenarios (such as opening a personalization dialog), this method might be called without the parameter <code>mPropertyBag<\/code>.","!category":"function","!type":"fn(oControl: sap.ui.mdc.Control | Element, sPropertyName: String, mPropertyBag?: Object)"},"removeItem":{"!description":"Triggers any necessary follow-up steps that need to be taken after the removal of created items via <code>removeItem<\/code>. The returned Boolean value inside the <code>Promise<\/code> can be used to prevent the default follow-up behavior of the SAPUI5 flexibility handling. <br>By default, this method returns a <code>Promise<\/code> that resolves into <code>true<\/code>. This will ensure, that the item will be destroyed subsequentially after it has been removed by the control.\n\n<b>Note:<\/b> The <code>removeItem<\/code> hook can be used during the processing of an SAPUI5 flexibility change. Consequently the parameter <code>mPropertyBag<\/code> is only passed during preprocessing. In runtime scenarios (such as opening a personalization dialog), this method might be called without the parameter <code>mPropertyBag<\/code>.","!category":"function","!type":"fn(oControl: sap.ui.mdc.Control | Element, oItem: sap.ui.core.Element, mPropertyBag?: Object) -> Promise<boolean>"},"onAfterXMLChangeProcessing":{"!description":"Hook that will be executed when changes are done applying to controls during the XML flexibility change appliance process.","!category":"function","!type":"fn(oControl: Element, mPropertyBag: Object)"},"!module":"sap/ui/mdc/AggregationBaseDelegate","!helpDescription":"Base delegate implementation for {@link sap.ui.mdc.Control MDC Controls}. This delegate serves as base implementation for aggregation-based controls, such as:\n\n<ul> <li><code>sap.ui.mdc.Chart<\/code><\/li> <li><code>sap.ui.mdc.Table<\/code><\/li> <li><code>sap.ui.mdc.FilterBar<\/code><\/li> <\/ul>\n\nThe <code>AggregationBaseDelegate<\/code> provides an interface for aggregation based functionality by providing an array of PropertyInfo objects, which can be used during runtime for personalization through the according <code>addItem<\/code> and <code>removeItem<\/code> hooks. Additional hooks for cleanup and validation mechanisms can be implemented through this delegate.","!category":"namespace","module:sap/ui/mdc/AggregationBaseDelegate":"module:sap/ui/mdc/AggregationBaseDelegate","fetchProperties":{"!description":"Retrieves the relevant metadata for a given payload and returns the property info array. <br>By default, this method returns a <code>Promise<\/code> that resolves into <code>[]<\/code>.","!category":"function","!type":"fn(oControl: sap.ui.mdc.Control) -> [Promise<object]"}}}}