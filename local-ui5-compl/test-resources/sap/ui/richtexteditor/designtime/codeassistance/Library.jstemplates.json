{"Templates":[{"template":"new sap.ui.richtexteditor.RichTextEditor(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: ${\"\"}, // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\teditorType: ${\"TinyMCE\"}, // string\n\t\teditorLocation: ${\"js/tiny_mce6/tinymce.js\"}, // string\n\t\teditable: ${bEditable}, // boolean\n\t\tshowGroupFontStyle: ${bShowGroupFontStyle}, // boolean\n\t\tshowGroupTextAlign: ${bShowGroupTextAlign}, // boolean\n\t\tshowGroupStructure: ${bShowGroupStructure}, // boolean\n\t\tshowGroupFont: ${bShowGroupFont}, // boolean\n\t\tshowGroupClipboard: ${bShowGroupClipboard}, // boolean\n\t\tshowGroupInsert: ${bShowGroupInsert}, // boolean\n\t\tshowGroupLink: ${bShowGroupLink}, // boolean\n\t\tshowGroupUndo: ${bShowGroupUndo}, // boolean\n\t\twrapping: ${bWrapping}, // boolean\n\t\trequired: ${bRequired}, // boolean\n\t\tsanitizeValue: ${bSanitizeValue}, // boolean\n\t\tplugins: [${plugins}], // object[]\n\t\tuseLegacyTheme: ${bUseLegacyTheme}, // boolean\n\t\tbuttonGroups: [${buttonGroups}], // object[]\n\t\tcustomToolbar: ${bCustomToolbar}, // boolean\n\t\tcustomButtons: [${customButtons}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tready: [function (oEvent) {}, this], // function|array\n\t\treadyRecurring: [function (oEvent) {}, this], // function|array\n\t\tbeforeEditorInit: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"RichTextEditor","Experimental":false,"module":"sap/ui/richtexteditor/RichTextEditor","description":"RichTextEditor(sId?, mSettings?) : sap.ui.richtexteditor.RichTextEditor","constructorDescription":"Constructor for a new RichTextEditor.\n\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: '')<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEditorType editorType} : string (default: 'TinyMCE')<\/li>\n<li>{@link #getEditorLocation editorLocation} : string (default: 'js/tiny_mce6/tinymce.js')<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupFontStyle showGroupFontStyle} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupTextAlign showGroupTextAlign} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupStructure showGroupStructure} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupFont showGroupFont} : boolean (default: false)<\/li>\n<li>{@link #getShowGroupClipboard showGroupClipboard} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupInsert showGroupInsert} : boolean (default: false)<\/li>\n<li>{@link #getShowGroupLink showGroupLink} : boolean (default: false)<\/li>\n<li>{@link #getShowGroupUndo showGroupUndo} : boolean (default: false)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getSanitizeValue sanitizeValue} : boolean (default: true)<\/li>\n<li>{@link #getPlugins plugins} : object[] (default: [])<\/li>\n<li>{@link #getUseLegacyTheme useLegacyTheme} : boolean (default: true)<\/li>\n<li>{@link #getButtonGroups buttonGroups} : object[] (default: [])<\/li>\n<li>{@link #getCustomToolbar customToolbar} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomButtons customButtons} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:ready ready} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:readyRecurring readyRecurring} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeEditorInit beforeEditorInit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.richtexteditor.RichTextEditor","helpDescription":"The RichTextEditor-Control is used to enter formatted text. It uses the third-party component called TinyMCE. In addition to the native toolbar, you can also use a toolbar built with SAPUI5 controls. <h3>Overview<\/h3>\n\nWith version 1.48 onward, aside from the native toolbar of the TinyMCE, the <code>RichTextEditor<\/code> can also use a toolbar built with SAPUI5 controls. Which toolbar is used is taken into consideration only while the control is being initialized and it will not be possible to change it during runtime, because of lifecycle incompatibilities between the SAPUI5 and the third-party library. The custom toolbar acts like a wrapper to the native toolbar and takes care of synchronizing the state of its internal controls with the current state of the selection in the editor (bold, italics, font styles etc.).\n\n<h4>Restrictions<\/h4>\n\n<b>Note: The <code>RichTextEditor<\/code> uses a third-party component and therefore some additional restrictions apply for its proper usage and support. For more information see the Preamble section in {@link topic:d4f3f1598373452bb73f2120930c133c sap.ui.richtexteditor}. <\/b>\n\n<h3>Guidelines<\/h3> <ul> <li> The <code>RichTextEditor<\/code> should be used for desktop apps only. However, if it is essential for your use case, you can enable the mobile version of TinyMCE, whilst having in mind the restrictions. For more information see the {@link topic:d4f3f1598373452bb73f2120930c133c sap.ui.richtexteditor documentation}.<\/li> <li> In order to be usable, the control needs a minimum width 17.5 rem and height of 12.5 rem.<\/li> <li> Do not instantiate the <code>RichTextEditor<\/code> from a hidden container.<\/li> <li> Make sure you destroy the <code>RichTextEditor<\/code> instance instead of hiding it and create a new one when you show it again.<\/li> <\/ul>\n\n<h3>Usage<\/h3>\n\n<h4>When to use<\/h4> <ul> <li>You want to enable users to enter text and other elements (tables, images) with different styles and colors.<\/li> <li>You need to provide a tool for texts that require additional formatting.<\/li> <\/ul>\n\n<h4> When not to use<\/h4> <ul> <li>You want to let users add simple text that doesn\u2019t require formatting. Use {@link sap.m.TextArea text area} instead.<\/li> <li>Use callbacks to the native third-party API with care, as there may be compatibility issues with later versions.<\/li> <\/ul>\n\n<h3>Custom toolbar - adding and removing buttons<\/h3> With version 1.102 it is possible to redefine the button groups configuration in order to show only particular set of buttons in the custom toolbar of the <code>RichTextEditor<\/code>. This is possible in few ways: <ul> <li>By providing the buttons group configurations as a whole by setting the <code>buttonGroups<\/code> property of the control.<\/li> <li>By providing individual button group configuration via <code>addButtonGroup<\/code> method.<\/li> <\/ul>\n\nConsider the following when choosing your approach: <ul> <li>Setting <code>buttonGroups<\/code> will override all current custom toolbar button group configurations. This method allows for total redefining of the custom toolbar groups.<\/li> <li>Using <code>addButtonGroups<\/code> will try to add non-existing group into the configuration array, however, if such group configuration exists already, a warning will be logged and the new configuration will not be added. In order to replace the existing configuration you will need to remove it first via <code>removeButtonGroup<\/code>.<\/li> <\/ul>\n\nBelow is a list of supported groups and buttons, which can be specified in the configuration objects (format is <<group name>>: <<supported buttons>>): <ul> <li>font-style: bold, italic, underline, strikethrough<\/li> <li>font: fontfamily (fontselect in TinyMCE5), fontsize (fontsizeselect in TinyMCE5), forecolor, backcolor<\/li> <li>clipboard: cut, copy, paste<\/li> <li>structure: bullist, numlist, outdent, indent<\/li> <li>undo: undo, redo<\/li> <li>insert: image, emoticons<\/li> <li>link: link, unlink<\/li> <li>text-align: alignleft, aligncenter, alignright, alignjustify<\/li> <\/ul> Additional supported groups, which can be added only after the editor is loaded (they can not be specified in the above mentioned configuration): <ul> <li>table: table<\/li> <li>styleselect: styleselect<\/li> <ul> <b>Note!<\/b> Adding configuration for \"text-align\" group with any buttons will still render a menu button with all available options inside. Removing/hiding the group can be achieved by invoking <code>removeButtonGroup<\/code> or <code>setShowGroupTextAlign(false)<\/code> depending on the desired result.\n\n<b>Note!<\/b> There is no synchronization between the <code>setShowGroup*<\/code> properties and the configuration object that the application can specifying via <code>buttonGroups<\/code> in the constructor or on a later stage. This means that in case new configuration is provided and for particular group the passed object contains property <code>visible: true<\/code>, this group property will be respected no matter if the <code>RichTextEditor<\/code>'s property for this particular group is set to <code>false<\/code>. Example: Providing the following object as group configuration: { name: \"font\" visible: true } Will make the \"font\" group visible, no matter that calling <code>RichTextEditor.getShowGroupFont()<\/code> returns <code>false<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"addButtonGroup(\n\t{\n\t\tbuttons: [${buttons}], // string[]\n\t\tname: \"${name}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\trow: ${row}, // int\n\t\tpriority: ${priority}, // int\n\t\tcustomToolbarPriority: ${customToolbarPriority} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.richtexteditor.RichTextEditor.addButtonGroup","description":"addButtonGroup(vGroup?) : sap.ui.richtexteditor.RichTextEditor","helpDescription":"Adds a button group to the editor. <b>Note<\/b>: Adding already existing group will not do anything. If a button group needs to be changed, it first needs to be removed and then added by providing its name or map object, containing its desired configuration.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tnewValue: \"${newValue}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.richtexteditor.RichTextEditor.fireChange","description":"fireChange(mParameters?) : sap.ui.richtexteditor.RichTextEditor","helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}}],"!version":"1.21.1"}