{"Templates":[{"template":"includeScript(\n\t{\n\t\turl: \"${url}\", // string\n\t\tid: \"${id}\", // string\n\t\tattributes: ${attributes} // object\n\t},\n\t\"${vId}\", // string|object\n\t\"${fnLoadCallback}\", // function\n\t\"${fnErrorCallback}\" // function\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.includeScript","description":"includeScript(vUrl, vId?, fnLoadCallback?, fnErrorCallback?) : void|Promise","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 use {@link module:sap/ui/dom/includeScript} instead<br>Includes the script (via &lt;script&gt;-tag) into the head for the specified <code>sUrl<\/code> and optional <code>sId<\/code>.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"includeStyleSheet(\n\t{\n\t\turl: \"${url}\", // string\n\t\tid: \"${id}\", // string\n\t\tattributes: ${attributes} // object\n\t},\n\t\"${vId}\", // string|object\n\t\"${fnLoadCallback}\", // function\n\t\"${fnErrorCallback}\" // function\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.includeStyleSheet","description":"includeStyleSheet(vUrl, vId?, fnLoadCallback?, fnErrorCallback?) : void|Promise","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 use {@link module:sap/ui/dom/includeStylesheet} instead<br>Includes the specified stylesheet via a &lt;link&gt;-tag in the head of the current document. If there is call to <code>includeStylesheet<\/code> providing the sId of an already included stylesheet, the existing element will be replaced.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"initMobile(\n\t{\n\t\tviewport: ${bViewport}, // boolean\n\t\tstatusBar: \"${statusBar}\", // string\n\t\thideBrowser: ${bHideBrowser}, // boolean\n\t\tpreventScroll: ${bPreventScroll}, // boolean\n\t\tpreventPhoneNumberDetection: ${bPreventPhoneNumberDetection}, // boolean\n\t\trootId: \"${rootId}\", // string\n\t\tuseFullScreenHeight: ${bUseFullScreenHeight}, // boolean\n\t\thomeIcon: \"${homeIcon}\", // string\n\t\thomeIconPrecomposed: ${bHomeIconPrecomposed}, // boolean\n\t\tmobileWebAppCapable: ${bMobileWebAppCapable} // boolean\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.initMobile","description":"initMobile(options?)","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 use {@link module:sap/ui/util/Mobile.init} instead<br>Does some basic modifications to the HTML page that make it more suitable for mobile apps. Only the first call to this method is executed, subsequent calls are ignored. Note that this method is also called by the constructor of toplevel controls like sap.m.App, sap.m.SplitApp and sap.m.Shell. Exception: if no homeIcon was set, subsequent calls have the chance to set it.\n\nThe \"options\" parameter configures what exactly should be done.\n\nIt can have the following properties: <ul> <li>viewport: whether to set the viewport in a way that disables zooming (default: true)<\/li> <li>statusBar: the iOS status bar color, \"default\", \"black\" or \"black-translucent\" (default: \"default\")<\/li> <li>hideBrowser: whether the browser UI should be hidden as far as possible to make the app feel more native (default: true)<\/li> <li>preventScroll: whether native scrolling should be disabled in order to prevent the \"rubber-band\" effect where the whole window is moved (default: true)<\/li> <li>preventPhoneNumberDetection: whether Safari Mobile should be prevented from transforming any numbers that look like phone numbers into clickable links; this should be left as \"true\", otherwise it might break controls because Safari actually changes the DOM. This only affects all page content which is created after initMobile is called.<\/li> <li>rootId: the ID of the root element that should be made fullscreen; only used when hideBrowser is set (default: the document.body)<\/li> <li>useFullScreenHeight: a boolean that defines whether the height of the html root element should be set to 100%, which is required for other elements to cover the full height (default: true)<\/li> <li>homeIcon: deprecated since 1.12, use {@link jQuery.sap.setIcons} instead. <\/ul>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"properties(\n\t{\n\t\turl: \"${url}\", // string\n\t\tasync: ${bAsync}, // boolean\n\t\theaders: ${headers}, // object\n\t\treturnNullIfMissing: ${returnNullIfMissing} // object\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.properties","description":"properties(mParams?) : jQuery.sap.util.Properties|null|Promise","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 use {@link module:sap/base/util/Properties.create} instead<br>Creates and returns a new instance of {@link jQuery.sap.util.Properties}.\n\nIf option 'url' is passed, immediately a load request for the given target is triggered. A property file that is loaded can contain comments with a leading ! or #. The loaded property list does not contain any comments.\n\n<b>Example for loading a property file:<\/b> <pre>\n jQuery.sap.properties({url : \"../myProperty.properties\"});\n<\/pre>\n\n<b>Example for creating an empty properties instance:<\/b> <pre>\n jQuery.sap.properties();\n<\/pre>\n\n<b>Examples for getting and setting properties:<\/b> <pre>\n\tvar oProperties = jQuery.sap.properties();\n\toProperties.setProperty(\"KEY_1\",\"Test Key\");\n\tvar sValue1 = oProperties.getProperty(\"KEY_1\");\n\tvar sValue2 = oProperties.getProperty(\"KEY_2\",\"Default\");\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"registerModulePath(\n\t\"${sModuleName}\", // string\n\t{\n\t\turl: \"${url}\", // string\n\t\tfinal: ${bFinal} // boolean\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.registerModulePath","description":"registerModulePath(sModuleName, vUrlPrefix)","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 set path mappings via {@link sap.ui.loader.config} instead.<br>Registers a URL prefix for a module name prefix.\n\nBefore a module is loaded, the longest registered prefix of its module name is searched for and the associated URL prefix is used as a prefix for the request URL. The remainder of the module name is attached to the request URL by replacing dots ('.') with slashes ('/').\n\nThe registration and search operates on full name segments only. So when a prefix\n\n'sap.com' -> 'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n'sap.com.Button'\n\nbut not\n\n'sap.commons.Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for any search.\n\nThe prefix can either be given as string or as object which contains the url and a 'final' property. If 'final' is set to true, overwriting a module prefix is not possible anymore.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"registerPreloadedModules(\n\t{\n\t\turl: \"${url}\", // string\n\t\tname: \"${name}\", // string\n\t\tversion: \"${version}\", // string\n\t\tmodules: ${modules} // object\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.registerPreloadedModules","description":"registerPreloadedModules(oData)","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 undefined<br>Adds all resources from a preload bundle to the preload cache.\n\nWhen a resource exists already in the cache, the new content is ignored.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"registerResourcePath(\n\t\"${sResourceNamePrefix}\", // string\n\t{\n\t\turl: \"${url}\", // string\n\t\tfinal: ${bFinal} // boolean\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.registerResourcePath","description":"registerResourcePath(sResourceNamePrefix, vUrlPrefix)","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 set path mappings via {@link sap.ui.loader.config} instead.<br>Registers a URL prefix for a resource name prefix.\n\nBefore a resource is loaded, the longest registered prefix of its unified resource name is searched for and the associated URL prefix is used as a prefix for the request URL. The remainder of the resource name is attached to the request URL 1:1.\n\nThe registration and search operates on full name segments only. So when a prefix\n\n'sap/com' -> 'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n'sap/com/Button'\n\nbut not\n\n'sap/commons/Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for any search.\n\nThe url prefix can either be given as string or as object which contains the url and a final flag. If final is set to true, overwriting a resource name prefix is not possible anymore.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"resources(\n\t{\n\t\turl: \"${url}\", // string\n\t\tlocale: \"${locale}\", // string\n\t\tincludeInfo: ${bIncludeInfo}, // boolean\n\t\tasync: ${bAsync} // boolean\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"jquery.sap.global","name":"jQuery.sap.resources","description":"resources(mParams?) : jQuery.sap.util.ResourceBundle|Promise","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Use {@link module:sap/base/i18n/ResourceBundle} instead.<br>Creates and returns a new instance of {@link jQuery.sap.util.ResourceBundle} using the given URL and locale to determine what to load.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/base/i18n/ResourceBundle} instead.","since":"1.58"}},{"template":"get(\n\t{\n\t\tname: \"${name}\", // string\n\t\ttype: ${type}, // module:sap/base/config.Type|object<string,string>|function\n\t\tdefaultValue: ${defaultValue}, // any\n\t\texternal: ${bExternal}, // boolean\n\t\tfreeze: ${bFreeze} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/base/config","name":"module:sap/base/config.get","description":"get(mOptions) : any","helpDescription":"Generic getter for configuration options that are not explicitly exposed via a dedicated own getter.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"loadResource(\n\t\"${sResourceName}\", // string\n\t{\n\t\tdataType: \"${dataType}\", // string\n\t\tname: \"${name}\", // string\n\t\turl: \"${url}\", // string\n\t\theaders: ${headers}, // Object<string,string>\n\t\tfailOnError: \"${failOnError}\", // string\n\t\tasync: \"${async}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/base/util/LoaderExtensions","name":"module:sap/base/util/LoaderExtensions.loadResource","description":"loadResource(sResourceName?, mOptions?) : string|Document|object|Promise","helpDescription":"Retrieves the resource with the given name, either from the preload cache or from the server. The expected data type of the resource can either be specified in the options (<code>dataType<\/code>) or it will be derived from the suffix of the <code>sResourceName<\/code>. The only supported data types so far are <code>'xml'<\/code>, <code>'html'<\/code>, <code>'json'<\/code> and <code>'text'<\/code>. If the resource name extension doesn't match any of these extensions, the <code>dataType<\/code> property must be specified as option.\n\nIf the resource is found in the preload cache, it will be converted from text format to the requested <code>dataType<\/code> using conversions similar to: <pre>\n  dataType | conversion\n  ---------+-------------------------------------------------------------\n    html   | text (no conversion)\n    json   | JSON.parse(text)\n    xml    | DOMParser.prototype.parseFromString(text, \"application/xml\")\n<\/pre>\n\nIf it is not found, the resource name will be converted to a resource URL (using {@link #getResourcePath}) and the resulting URL will be requested from the server with an XMLHttpRequest.\n\nIf the resource was found in the local preload cache and any necessary conversion succeeded or when the resource was retrieved from the backend successfully, the content of the resource will be returned. In any other case, an exception will be thrown, or if option <code>failOnError<\/code> is set, <code>null<\/code> will be returned.\n\nFor asynchronous calls, the return value of this method is a Promise which resolves with the content of the resource on success or rejects with an error in case of errors. If <code>failOnError<\/code> is <code>false<\/code> and an error occurs, the promise won't be rejected, but resolved with <code>null<\/code>.\n\nFuture implementations of this API might add more options. Generic implementations that accept an <code>mOptions<\/code> object and propagate it to this function should limit the options to the currently defined set of options or they might fail for unknown options.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"registerResourcePath(\n\t\"${sResourceNamePrefix}\", // string\n\t{\n\t\turl: \"${url}\", // string\n\t\tfinal: ${bFinal} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/base/util/LoaderExtensions","name":"module:sap/base/util/LoaderExtensions.registerResourcePath","description":"registerResourcePath(sResourceNamePrefix, vUrlPrefix)","helpDescription":"Registers a URL prefix for a resource name prefix.\n\nBefore a resource is loaded, the longest registered prefix of its unified resource name is searched for and the associated URL prefix is used as a prefix for the request URL. The remainder of the resource name is attached to the request URL 1:1.\n\nThe registration and search operates on full name segments only. So when a prefix\n\n<pre>\n   'sap/com'  ->  'http://www.sap.com/ui5/resources/'\n<\/pre>\n\nis registered, then it will match the name\n\n<pre>\n   'sap/com/Button'\n<\/pre>\n\nbut not\n\n<pre>\n   'sap/commons/Button'\n<\/pre>\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for any search.\n\nThe URL prefix can either be given as string or as an object which contains a <code>url<\/code> property and optionally a <code>final<\/code> flag. If <code>final<\/code> is set to true, overwriting the path for the given resource name prefix is not possible anymore.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"load(\n\t{\n\t\tlibrary: \"${library}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/VersionInfo","name":"module:sap/ui/VersionInfo.load","description":"load(mOptions?) : Promise<(object|undefined)>","helpDescription":"Loads the version info asynchronously from resource \"sap-ui-version.json\".\n\nBy default, the returned promise will resolve with the whole version info file's content. If a library name is specified in the options, then the promise will resolve with the version info for that library only or with <code>undefined<\/code>, if the named library is not listed in the version info file.\n\nIf loading the version info file fails, the promise will be rejected with the corresponding error.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"_processResourceConfiguration(\n\t\"${mBundleConfig}\", // object\n\t{\n\t\talreadyResolvedOnRoot: ${bAlreadyResolvedOnRoot}, // boolean\n\t\tbaseURI: ${baseURI}, // URI\n\t\tmanifestBaseURI: ${manifestBaseURI}, // URI\n\t\trelativeTo: \"${relativeTo}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/_UrlResolver","name":"module:sap/ui/core/_UrlResolver._processResourceConfiguration","description":"_processResourceConfiguration(mBundleConfig, mSettings)","helpDescription":"Function that loops through the model config and resolves the bundle urls of terminologies relative to the component, the manifest or relative to an URL.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"handleF6GroupNavigation(\n\t\"${oEvent}\", // jQuery.Event\n\t{\n\t\tskip: ${bSkip}, // boolean\n\t\ttarget: ${target}, // Element\n\t\tscope: [${scope}] // Element[]\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/events/F6Navigation","name":"module:sap/ui/events/F6Navigation.handleF6GroupNavigation","description":"handleF6GroupNavigation(oEvent, oSettings?)","helpDescription":"Handles the F6 key event.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"onBeforeCreated(\n\t{\n\t\tstepName: \"${stepName}\", // string\n\t\tappNameLong: \"${appNameLong}\", // string\n\t\tappNameShort: \"${appNameShort}\", // string\n\t\tinteractionType: \"${interactionType}\", // string\n\t\ttimeToInteractive: ${timeToInteractive} // int\n\t},\n\t\"${oInteraction}\" // object\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/performance/trace/FESR","name":"module:sap/ui/performance/trace/FESR.onBeforeCreated","description":"onBeforeCreated(oFESRHandle, oInteraction) : object","helpDescription":"Hook function that allows to override specific FESR header information.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"init(\n\t{\n\t\tviewport: ${bViewport}, // boolean\n\t\tstatusBar: \"${statusBar}\", // string\n\t\thideBrowser: ${bHideBrowser}, // boolean\n\t\tpreventScroll: ${bPreventScroll}, // boolean\n\t\tpreventPhoneNumberDetection: ${bPreventPhoneNumberDetection}, // boolean\n\t\trootId: \"${rootId}\", // string\n\t\tuseFullScreenHeight: ${bUseFullScreenHeight}, // boolean\n\t\thomeIcon: \"${homeIcon}\", // string\n\t\thomeIconPrecomposed: ${bHomeIconPrecomposed}, // boolean\n\t\tmobileWebAppCapable: ${bMobileWebAppCapable} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/util/Mobile","name":"module:sap/ui/util/Mobile.init","description":"init(options?)","helpDescription":"Does some basic modifications to the HTML page that make it more suitable for mobile apps. Only the first call to this method is executed, subsequent calls are ignored. Note that this method is also called by the constructor of toplevel controls like sap.m.App, sap.m.SplitApp and sap.m.Shell. Exception: if <code>homeIcon<\/code> or <code>mobileWebAppCapable<\/code> were not set, subsequent calls have the chance to set them.\n\nThe \"options\" parameter configures what exactly should be done.\n\nIt can have the following properties: <ul> <li>viewport: whether to set the viewport in a way that disables zooming (default: true). This does not work in case there is already a meta tag with name 'viewport'.<\/li> <li>statusBar: the iOS status bar color, \"default\", \"black\" or \"black-translucent\" (default: \"default\")<\/li> <li>hideBrowser: whether the browser UI should be hidden as far as possible to make the app feel more native (default: true)<\/li> <li>preventScroll: whether native scrolling should be disabled in order to prevent the \"rubber-band\" effect where the whole window is moved (default: true)<\/li> <li>preventPhoneNumberDetection: whether Safari Mobile should be prevented from transforming any numbers that look like phone numbers into clickable links; this should be left as \"true\", otherwise it might break controls because Safari actually changes the DOM. This only affects all page content which is created after init() is called and only in case there is not already a meta tag with name 'format-detection'.<\/li> <li>rootId: the ID of the root element that should be made fullscreen; only used when hideBrowser is set (default: the document.body)<\/li> <li>useFullScreenHeight: a boolean that defines whether the height of the html root element should be set to 100%, which is required for other elements to cover the full height (default: true)<\/li> <li>homeIcon: deprecated since 1.12, use sap/ui/util/Mobile.setIcons instead. <\/ul>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"setIcons(\n\t{\n\t\tphone: \"${phone}\", // string\n\t\ttablet: \"${tablet}\", // string\n\t\t\"phone@2\": \"${\"phone@2\"}\", // string\n\t\t\"tablet@2\": \"${\"tablet@2\"}\", // string\n\t\tprecomposed: ${bPrecomposed}, // boolean\n\t\tfavicon: \"${favicon}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/util/Mobile","name":"module:sap/ui/util/Mobile.setIcons","description":"setIcons(oIcons)","helpDescription":"Sets the bookmark icon for desktop browsers and the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n\nOnly call this method once and call it early when the page is loading: browsers behave differently when the favicon is modified while the page is alive. Some update the displayed icon inside the browser but use an old icon for bookmarks. When a favicon is given, any other existing favicon in the document will be removed. When at least one home icon is given, all existing home icons will be removed and new home icon tags for all four resolutions will be created.\n\nThe home icons must be in PNG format and given in different sizes for iPad/iPhone with low and high pixel density display. The favicon is used in the browser and for desktop shortcuts and should optimally be in ICO format: ICO files can contain different image sizes for different usage locations. E.g. a 16x16px version is used inside browsers.\n\nAll icons are given in an an object holding icon URLs and other settings. The properties of this object are: <ul> <li>phone: a 120x120 pixel version for iPhones with low pixel density<\/li> <li>tablet: a 152x152 pixel version for iPads with low pixel density<\/li> <li>phone@2: a 180x180 pixel version for iPhones with high pixel density<\/li> <li>tablet@2: a 167x167 pixel version for iPads with high pixel density<\/li> <li>precomposed: whether the home icons already have some glare effect (otherwise iOS will add it) (default: false)<\/li> <li>favicon: the ICO file to be used inside the browser and for desktop shortcuts<\/li> <\/ul>\n\nOne example is: <pre>\n{\n   'phone':'phone-icon_120x120.png',\n   'phone@2':'phone-retina_180x180.png',\n   'tablet':'tablet-icon_152x152.png',\n   'tablet@2':'tablet-retina_167x167.png',\n   'precomposed':true,\n   'favicon':'desktop.ico'\n}\n<\/pre> If one of the sizes is not given, the largest available alternative image will be used instead for this size. On Android these icons may or may not be used by the device. Apparently chances can be improved by using icons with glare effect, so the \"precomposed\" property can be set to \"true\". Some Android devices may also use the favicon for bookmarks instead of the home icons.<\/li>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.app.Application(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcomponentData: ${componentData}, // any\n\t\troot: \"${root}\", // string\n\t\tconfig: ${config}, // any\n\t\trootComponent: ${rootComponent} // sap.ui.core.UIComponent\n\t}\n)\n","static":"true","prefix":"Application","Experimental":true,"module":"sap/ui/app/Application","description":"Application(sId?, mSettings?) : sap.ui.app.Application","constructorDescription":"Creates an application instance, only one instance is allowed (singleton).\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRoot root} : string<\/li>\n<li>{@link #getConfig config} : any<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRootComponent rootComponent} : sap.ui.core.UIComponent<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Component#constructor sap.ui.core.Component}\ncan be used as well.","extends":"sap.ui.core.Component","Deprecated":true,"name":"sap.ui.app.Application","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The Component class is enhanced to take care about the Application code.<br>Abstract application class. Extend this class to create a central application class.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"The Component class is enhanced to take care about the Application code.","since":"1.15.1"}},{"template":"new sap.ui.app.MockServer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this] // function|array\n\t},\n\t\"${oScope}\" // object\n)\n","static":"true","prefix":"MockServer","Experimental":true,"module":"sap/ui/app/MockServer","description":"MockServer(sId?, mSettings?, oScope?) : sap.ui.app.MockServer","constructorDescription":"Creates a mocked server. This helps to mock all or some backend calls, e.g. for OData/JSON Models or simple XHR calls, without\nchanging the application code. This class can also be used for qunit tests.","extends":"sap.ui.base.ManagedObject","Deprecated":true,"name":"sap.ui.app.MockServer","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The mock server code has been moved to sap.ui.core.util - see {@link sap.ui.core.util.MockServer}<br>Class to mock a server.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"The mock server code has been moved to sap.ui.core.util - see {@link sap.ui.core.util.MockServer}","since":"1.15.1"}},{"template":"createType(\n\t\"${sName}\", // string\n\t{\n\t\tdefaultValue: ${defaultValue}, // any\n\t\tisValid: ${fn_isValid}, // function\n\t\tparseValue: ${fn_parseValue} // function\n\t},\n\t\"${vBase}\" // sap.ui.base.DataType|string\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.DataType.createType","description":"createType(sName, mSettings?, vBase?) : sap.ui.base.DataType","helpDescription":"Derives a new type from a given base type.\n\nExample:<br> <pre>\n\n  var fooType = DataType.createType('foo', {\n      isValid : function(vValue) {\n          return /^(foo(bar)?)$/.test(vValue);\n      }\n  }, DataType.getType('string'));\n\n  fooType.isValid('foo'); // true\n  fooType.isValid('foobar'); // true\n  fooType.isValid('==foobar=='); // false\n\n<\/pre>\n\nIf <code>mSettings<\/code> contains an implementation for <code>isValid<\/code>, then the validity check of the newly created type will first execute the check of the base type and then call the given <code>isValid<\/code> function.\n\nArray types and enumeration types cannot be created with this method. They're created on-the-fly by {@link #.getType DataType.getType} when such a type is looked up.\n\n<b>Note:<\/b> The creation of new primitive types is not supported. When a type is created without a base type, it is automatically derived from the primitive type <code>any<\/code>.\n\n<b>Note:<\/b> If a type has to be used in classes, then the implementation of <code>isValid<\/code> must exactly have the structure shown in the example above (single return statement, regular expression literal of the form <code>/^(...)$/<\/code>, calling <code>/regex/.test()<\/code> on the given value). Only the inner part of the regular expression literal can be different.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.base.ManagedObject(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this] // function|array\n\t},\n\t\"${oScope}\" // object\n)\n","static":"true","prefix":"ManagedObject","Experimental":false,"module":"sap/ui/base/ManagedObject","description":"ManagedObject(sId?, mSettings?, oScope?) : sap.ui.base.ManagedObject","constructorDescription":"Constructs and initializes a managed object with the given <code>sId<\/code> and settings.\n\nIf the optional <code>mSettings<\/code> are given, they must be a simple object\nthat defines values for properties, aggregations, associations or events keyed by their name.\n\n<b>Valid Names and Value Ranges:<\/b>\n\nThe property (key) names supported in the object literal are exactly the (case sensitive)\nnames documented in the JSDoc for the properties, aggregations, associations and events\nof the current class and its base classes. Note that for 0..n aggregations and associations this\nname usually is the plural name, whereas it is the singular name in case of 0..1 relations.\n\nThe possible values for a setting depend on its kind:\n<ul>\n<li>for simple properties, the value has to match the documented type of the property (no type conversion occurs)<\/li>\n<li>for 0..1 aggregations, the value has to be an instance of the aggregated type, or an object literal from which,\nthe default class of the aggregation (or the corresponding aggregation type as fallback) will be instantiated.<\/li>\n<li>for 0..n aggregations, the value has to be an array of instances of the aggregated type, a single instance or\nan object literal from which the default class will be instantiated.<\/li>\n<li>for 0..1 associations, an instance of the associated type or an id (string) is accepted<\/li>\n<li>for 0..n associations, an array of instances of the associated type or of IDs is accepted<\/li>\n<li>for events, either a function (event handler) is accepted or an array of length 2\n    where the first element is a function and the 2nd element is an object to invoke the method on;\n    or an array of length 3, where the first element is an arbitrary payload object, the\n    second one is a function and the 3rd one is an object to invoke the method on;\n    or an array of arrays where each nested array has the 2 or 3 element structure\n    described before (multiple listeners).<\/li>\n<\/ul>\n\nEach subclass should document the name and type of its supported settings in its constructor documentation.\n\nExample usage:\n<pre>\nnew Dialog({\n   title: \"Some title text\",            // property of type \"string\"\n   showHeader: true,                    // property of type \"boolean\"\n   endButton: new Button(...),          // 0..1 aggregation\n   content: [                           // 0..n aggregation\n      new Input(...),\n      new Input(...)\n   ],\n   afterClose: function(oEvent) { ... } // event handler function\n});\n<\/pre>\n\nInstead of static values and object instances, data binding expressions can be used, either embedded in\na string or as a binding info object as described in {@link #bindProperty} or {@link #bindAggregation}.\n\nExample usage:\n<pre>\nnew Dialog({\n   title: \"{/title}\",       // embedded binding expression, points to a string property in the data model\n   ...\n   content: {               // binding info object\n      path : \"/inputItems\", // points to a collection in the data model\n      template : new Input(...)\n   }\n});\n<\/pre>\n\nNote that when setting string values, any curly braces in those values need to be escaped, so they are not\ninterpreted as binding expressions. Use {@link #escapeSettingsValue} to do so.\n\n<b>Note:<\/b>\nAs of version 1.120, providing aggregation content via an object literal is deprecated,\nin case the object's type is given via the property 'Type' as a string, or is derived via the defined type of the aggregation.\nAdditionally, as of version 1.120, a ManagedObject subclass can specify a <code>defaultClass<\/code>, e.g. for cases where only a single class is valid.\nPlease refer to the {@link sap.ui.base.ManagedObject.MetadataOptions.Aggregation Aggregation} documentation for more details on the\n<code>defaultClass<\/code>.\n\nBesides the settings documented below, ManagedObject itself supports the following special settings:\n<ul>\n<li><code>id : <i>sap.ui.core.ID<\/i><\/code> an ID for the new instance. Some subclasses (Element, Component) require the id\n  to be unique in a specific scope (e.g. an Element Id must be unique across all Elements, a Component id must\n  be unique across all Components).\n<li><code>models : <i>object<\/i><\/code> a map of {@link sap.ui.model.Model} instances keyed by their model name (alias).\n  Each entry with key <i>k<\/i> in this object has the same effect as a call <code>this.setModel(models[k], k);<\/code>.<\/li>\n<li><code>bindingContexts : <i>object<\/i><\/code> a map of {@link sap.ui.model.Context} instances keyed by their model name.\n  Each entry with key <i>k<\/i> in this object has the same effect as a call <code>this.setBindingContext(bindingContexts[k], k);<\/code><\/li>\n<li><code>objectBindings : <i>object<\/i><\/code>  a map of binding paths keyed by the corresponding model name.\n  Each entry with key <i>k<\/i> in this object has the same effect as a call <code>this.bindObject(objectBindings[k], k);<\/code><\/li>\n<li><code>metadataContexts : <i>object<\/i><\/code>  an array of single binding contexts keyed by the corresponding model or context name.\n  The purpose of the <code>metadataContexts<\/code> special setting is to deduce as much information as possible from the binding context of the control in order\n  to be able to predefine certain standard properties like e.g. <i>visible, enabled, tooltip,...<\/i>\n\n  The structure is an array of single contexts, where a single context is a map containing the following keys:\n  <ul>\n  <li><code>path: <i>string (mandatory)<\/i><\/code> The path to the corresponding model property or object, e.g. '/Customers/Name'. A path can also be relative, e.g. 'Name'<\/li>\n  <li><code>model: <i>string (optional)<\/i><\/code> The name of the model, in case there is no name then the undefined model is taken<\/li>\n  <li><code>name: <i>string (optional)<\/i><\/code> A name for the context to used in templating phase<\/li>\n  <li><code>kind: <i>string (optional)<\/i><\/code> The kind of the adapter, either <code>field<\/code> for single properties or <code>object<\/code> for structured contexts.\n  <li><code>adapter: <i>string (optional)<\/i><\/code> The path to an interpretion class that dilivers control relevant data depending on the context, e.g. enabled, visible.\n  If not supplied the OData meta data is interpreted.<\/li>\n  <\/ul>\n  The syntax for providing the <code>metadataContexts<\/code> is as follows:\n  <code>{SINGLE_CONTEXT1},...,{SINGLE_CONTEXTn}<\/code> or for simplicity in case there is only one context <code>{SINGLE_CONTEXT}<\/code>.\n\n  Examples for such metadataContexts are:\n  <ul>\n  <li><code>{/Customers/Name}<\/code> a single part with an absolute path to the property <i>Name<\/i> of the <i>Customers<\/i> entity set in the default model<\/li>\n  <li><code>{path: 'Customers/Name', model:'json'}<\/code> a single part with an absolute path to the property <i>Name<\/i> of the <i>Customers<\/i> entity set in a named model<\/li>\n  <li><code>{parts: [{path: 'Customers/Name'},{path: 'editable', model: 'viewModel'}]}<\/code> a combination of single binding contexts, one context from the default model and one from the viewModel<\/li>\n  <\/ul><\/li>\n<\/ul>\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:validationSuccess validationSuccess} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:validationError validationError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:parseError parseError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:formatError formatError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:modelContextChange modelContextChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>","extends":"sap.ui.base.EventProvider","Deprecated":false,"name":"sap.ui.base.ManagedObject","helpDescription":"Base Class that introduces some basic concepts, such as, state management and data binding.\n\nNew subclasses of ManagedObject are created with a call to {@link #.extend ManagedObject.extend} and can make use of the following managed features:\n\n<h3>Properties<\/h3> Managed properties represent the state of a ManagedObject. They can store a single value of a simple data type (like 'string' or 'int'). They have a <i>name<\/i> (e.g. 'size') and methods to get the current value (<code>getSize<\/code>), or to set a new value (<code>setSize<\/code>). When a property is modified by calling the setter, the ManagedObject is marked as invalidated. A managed property can be bound against a property in a {@link sap.ui.model.Model} by using the {@link #bindProperty} method. Updates to the model property will be automatically reflected in the managed property and - if TwoWay databinding is active, changes to the managed property will be reflected in the model. An existing binding can be removed by calling {@link #unbindProperty}.\n\nIf a ManagedObject is cloned, the clone will have the same values for its managed properties as the source of the clone - if the property wasn't bound. If it is bound, the property in the clone will be bound to the same model property as in the source.\n\nDetails about the declaration of a managed property, the metadata that describes it and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend } method.\n\n<h3>Aggregations<\/h3> Managed aggregations can store one or more references to other ManagedObjects. They are a mean to control the lifecycle of the aggregated objects: one ManagedObject can be aggregated by at most one parent ManagedObject at any time. When a ManagedObject is destroyed, all aggregated objects are destroyed as well and the object itself is removed from its parent. That is, aggregations won't contain destroyed objects or null/undefined.\n\nAggregations have a <i>name<\/i> ('e.g 'header' or 'items'), a <i>cardinality<\/i> ('0..1' or '0..n') and are of a specific <i>type<\/i> (which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to set or get the aggregated object for a specific aggregation of cardinality 0..1 (e.g. <code>setHeader<\/code>, <code>getHeader<\/code> for an aggregation named 'header'). For an aggregation of cardinality 0..n, there are methods to get all aggregated objects (<code>getItems<\/code>), to locate an object in the aggregation (e.g. <code>indexOfItem<\/code>), to add, insert or remove a single aggregated object (<code>addItem<\/code>, <code>insertItem<\/code>, <code>removeItem<\/code>) or to remove or destroy all objects from an aggregation (<code>removeAllItems<\/code>, <code>destroyItems<\/code>).\n\nDetails about the declaration of a managed aggregation, the metadata that describes the aggregation, and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAggregations of cardinality 0..n can be bound to a collection in a model by using {@link #bindAggregation} (and unbound again using {@link #unbindAggregation}). For each context in the model collection, a corresponding object will be created in the managed aggregation, either by cloning a template object or by calling a factory function.\n\nAggregations also control the databinding context of bound objects: by default, aggregated objects inherit all models and binding contexts from their parent object.\n\nWhen a ManagedObject is cloned, all aggregated objects will be cloned as well - but only if they haven't been added by databinding. In that case, the aggregation in the clone will be bound to the same model collection.\n\n<h3>Associations<\/h3> Managed associations also form a relationship between objects, but they don't define a lifecycle for the associated objects. They even can 'break' in the sense that an associated object might have been destroyed already although it is still referenced in an association. For the same reason, the internal storage for associations are not direct object references but only the IDs of the associated target objects.\n\nAssociations have a <i>name<\/i> ('e.g 'initialFocus'), a <i>cardinality<\/i> ('0..1' or '0..n') and are of a specific <i>type<\/i> (which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to set or get the associated object for a specific association of cardinality 0..1 (e.g. <code>setInitialFocus<\/code>, <code>getInitialFocus<\/code>). For an association of cardinality 0..n, there are methods to get all associated objects (<code>getRefItems<\/code>), to add, insert or remove a single associated object (<code>addRefItem<\/code>, <code>insertRefItem<\/code>, <code>removeRefItem<\/code>) or to remove all objects from an association (<code>removeAllRefItems<\/code>).\n\nDetails about the declaration of a managed association, the metadata that describes it and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAssociations can't be bound to the model.\n\nWhen a ManagedObject is cloned, the result for an association depends on the relationship between the associated target object and the root of the clone operation. If the associated object is part of the to-be-cloned object tree (reachable via aggregations from the root of the clone operation), then the cloned association will reference the clone of the associated object. Otherwise the association will reference the same object as in the original tree. When a ManagedObject is destroyed, other objects that are only associated, are not affected by the destroy operation.\n\n<h3>Events<\/h3> Managed events provide a mean for communicating important state changes to an arbitrary number of 'interested' listeners. Events have a <i>name<\/i> and (optionally) a set of <i>parameters<\/i>. For each event there will be methods to add or remove an event listener as well as a method to fire the event. (e.g. <code>attachChange<\/code>, <code>detachChange<\/code>, <code>fireChange<\/code> for an event named 'change').\n\nDetails about the declaration of managed events, the metadata that describes the event, and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nWhen a ManagedObject is cloned, all listeners registered for any event in the clone source are also registered to the clone. Later changes are not reflected in any direction (neither from source to clone, nor vice versa).\n\n<a name=\"lowlevelapi\"><h3>Low Level APIs:<\/h3><\/a> The prototype of ManagedObject provides several generic, low level APIs to manage properties, aggregations, associations, and events. These generic methods are solely intended for implementing higher level, non-generic methods that manage a single managed property etc. (e.g. a function <code>setSize(value)<\/code> that sets a new value for property 'size'). {@link sap.ui.base.ManagedObject.extend} creates default implementations of those higher level APIs for all managed aspects. The implementation of a subclass then can override those default implementations with a more specific implementation, e.g. to implement a side effect when a specific property is set or retrieved. It is therefore important to understand that the generic low-level methods ARE NOT SUITABLE FOR GENERIC ACCESS to the state of a managed object, as that would bypass the overriding higher level methods and their side effects.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"clone(\n\t\"${sIdSuffix}\", // string\n\t\"${aLocalIds}\", // string[]\n\t{\n\t\tcloneChildren: ${bCloneChildren}, // boolean\n\t\tcloneBindings: ${bCloneBindings} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.clone","description":"clone(sIdSuffix?, aLocalIds?, oOptions?) : sap.ui.base.ManagedObject","helpDescription":"Clones a tree of objects starting with the object on which clone is called first (root object).\n\nThe IDs within the newly created clone tree are derived from the original IDs by appending the given <code>sIdSuffix<\/code> (if no suffix is given, one will be created; it will be unique across multiple clone calls).\n\nThe <code>oOptions<\/code> configuration object can have the following properties: <ul> <li>The boolean value <code>cloneChildren<\/code> specifies whether associations/aggregations will be cloned<\/li> <li>The boolean value <code>cloneBindings<\/code> specifies if bindings will be cloned<\/li> <\/ul> Note: In case the configuration <code>oOptions<\/code> is specified, the default values <code>true<\/code> no longer apply, which means in case <code>cloneChildren<\/code> or <code>cloneBindings<\/code> is not specified, then this ia assumed to be <code>false<\/code> and associations/aggregations or bindings are not cloned.\n\nFor each cloned object, the following settings are cloned based on the metadata of the object and the defined options: <ul> <li>All properties that are not bound. If <code>cloneBindings<\/code> is <code>false<\/code>, also the bound properties will be cloned; in general, values are referenced 1:1, not cloned. For some property types, however, the getters or setters might clone the value (e.g. array types and properties using metadata option <code>byValue<\/code>)<\/li> <li>All aggregated objects that are not bound. If <code>cloneBindings<\/code> is <code>false<\/code>, also the ones that are bound will be cloned; they are all cloned recursively using the same <code>sIdSuffix<\/code><\/li> <li>All associated controls; when an association points to an object inside the cloned object tree, then the cloned association will be modified so that it points to the clone of the target object. When the association points to a managed object outside of the cloned object tree, then its target won't be changed.<\/li> <li>All models set via <code>setModel()<\/code>; used by reference.<\/li> <li>All property and aggregation bindings (if <code>cloneBindings<\/code> is <code>true<\/code>); the pure binding information (path, model name) is cloned, but all other information like template control or factory function, data type or formatter function are copied by reference. The bindings themselves are created anew as they are specific for the combination (object, property, model). As a result, any later changes to a binding of the original object are not reflected in the clone, but changes to e.g the type or template etc. are.<\/li> <\/ul>\n\nEach clone is created by first collecting the above mentioned settings and then creating a new instance with the normal constructor function. As a result, any side effects of mutator methods (<code>setProperty<\/code> etc.) or init hooks are repeated during clone creation. There is no need to override <code>clone()<\/code> just to reproduce these internal settings!\n\nCustom controls however can override <code>clone()<\/code> to implement additional clone steps. They usually will first call <code>clone()<\/code> on the super class and then modify the returned clone accordingly.\n\nApplications <b>must never provide<\/b> the second parameter <code>aLocaleIds<\/code>. It is determined automatically for the root object (and its non-existence also serves as an indicator for the root object). Specifying it will break the implementation of <code>clone()<\/code>.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"extend(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.base.ManagedObject.MetadataOptions\n\t},\n\t\"${FNMetaImpl}\" // function\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.extend","description":"extend(sClassName, oClassInfo?, FNMetaImpl?) : function","helpDescription":"Defines a new subclass of ManagedObject with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> can contain the same information that {@link sap.ui.base.Object.extend} already accepts, plus the following new properties in the 'metadata' object literal (see {@link sap.ui.base.ManagedObject.MetadataOptions MetadataOptions} for details on each of them): <ul> <li><code>library : <i>string<\/i><\/code><\/li> <li><code>properties : <i>object<\/i><\/code><\/li> <li><code>defaultProperty : <i>string<\/i><\/code><\/li> <li><code>aggregations : <i>object<\/i><\/code><\/li> <li><code>defaultAggregation : <i>string<\/i><\/code><\/li> <li><code>associations : <i>object<\/i><\/code><\/li> <li><code>events : <i>object<\/i><\/code><\/li> <li><code>specialSettings : <i>object<\/i><\/code> // this one is still experimental and not for public usage!<\/li> <\/ul>\n\nExample: <pre>\nManagedObject.extend('sap.mylib.MyClass', {\n  metadata : {\n    library: 'sap.mylib',\n    properties : {\n      value: 'string',\n      width: 'sap.ui.core.CSSSize',\n      height: { type: 'sap.ui.core.CSSSize', defaultValue: '100%'}\n      description: { type: 'string', defaultValue: '', selector: '#{id}-desc'}\n    },\n    defaultProperty : 'value',\n    aggregations : {\n      header : { type: 'sap.mylib.FancyHeader', multiple : false }\n      items : 'sap.ui.core.Control',\n      buttons: { type: 'sap.mylib.Button', multiple : true, selector: '#{id} > .sapMLButtonsSection'}\n    },\n    defaultAggregation : 'items',\n    associations : {\n      initiallyFocused : { type: 'sap.ui.core.Control' }\n    },\n    events: {\n      beforeOpen : {\n        parameters : {\n          opener : { type: 'sap.ui.core.Control' }\n        }\n      }\n    },\n  },\n\n  init: function() {\n  }\n\n}); // end of 'extend' call\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFormatError(\n\t{\n\t\telement: ${element}, // sap.ui.base.ManagedObject\n\t\tproperty: \"${property}\", // string\n\t\ttype: ${type}, // sap.ui.model.Type\n\t\tnewValue: ${newValue}, // any\n\t\toldValue: ${oldValue} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.fireFormatError","description":"fireFormatError(mParameters?) : sap.ui.base.ManagedObject","helpDescription":"Fires event {@link #event:formatError formatError} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireParseError(\n\t{\n\t\telement: ${element}, // sap.ui.base.ManagedObject\n\t\tproperty: \"${property}\", // string\n\t\ttype: ${type}, // sap.ui.model.Type\n\t\tnewValue: ${newValue}, // any\n\t\toldValue: ${oldValue}, // any\n\t\tmessage: \"${message}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.fireParseError","description":"fireParseError(mParameters?) : sap.ui.base.ManagedObject","helpDescription":"Fires event {@link #event:parseError parseError} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireValidationError(\n\t{\n\t\telement: ${element}, // sap.ui.base.ManagedObject\n\t\tproperty: \"${property}\", // string\n\t\ttype: ${type}, // sap.ui.model.Type\n\t\tnewValue: ${newValue}, // any\n\t\toldValue: ${oldValue}, // any\n\t\tmessage: \"${message}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.fireValidationError","description":"fireValidationError(mParameters?) : sap.ui.base.ManagedObject","helpDescription":"Fires event {@link #event:validationError validationError} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireValidationSuccess(\n\t{\n\t\telement: ${element}, // sap.ui.base.ManagedObject\n\t\tproperty: \"${property}\", // string\n\t\ttype: ${type}, // sap.ui.model.Type\n\t\tnewValue: ${newValue}, // any\n\t\toldValue: ${oldValue} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.fireValidationSuccess","description":"fireValidationSuccess(mParameters?) : sap.ui.base.ManagedObject","helpDescription":"Fires event {@link #event:validationSuccess validationSuccess} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"runWithPreprocessors(\n\t\"${fn}\", // function\n\t{\n\t\tid: ${fn_id}, // function\n\t\tsettings: ${fn_settings} // function\n\t},\n\t\"${oThisArg}\" // Object\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.runWithPreprocessors","description":"runWithPreprocessors(fn, oPreprocessors?, oThisArg?) : any","helpDescription":"Activates the given ID and settings preprocessors, executes the given function and restores the previously active preprocessors.\n\nWhen a preprocessor is not defined in <code>oPreprocessors<\/code>, then the currently active preprocessor is temporarily deactivated while <code>fn<\/code> is executed.\n\nSee the <code>_fnIdPreprocessor<\/code> and <code>_fnSettingsPreprocessor<\/code> members in this class for a detailed description of the preprocessors.\n\nThis method is intended for internal use in the sap/ui/base and sap/ui/core packages only.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"updateAggregation(\n\t\"${sName}\", // string\n\t\"${sChangeReason}\", // sap.ui.model.ChangeReason\n\t{\n\t\tdetailedReason: \"${detailedReason}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObject.updateAggregation","description":"updateAggregation(sName, sChangeReason, oEventInfo)","helpDescription":"Generic method which is called whenever an aggregation binding has changed.\n\nDepending on the type of the list binding and on additional configuration, this method either destroys all elements in the aggregation <code>sName<\/code> and recreates them anew or tries to reuse as many existing objects as possible. It is up to the method which strategy it uses.\n\nIn case a managed object needs special handling for an aggregation binding, it can create a named update method (e.g. <code>update<i>Rows<\/i><\/code> for an aggregation <code>rows<\/code>) which then will be called by the framework instead of this generic method. THe method will be called with two arguments <code>sChangeReason<\/code> and <code>oEventInfo<\/code>.\n\nSubclasses should call this method only in the implementation of such a named update method and for no other purposes. The framework might change the conditions under which the method is called and the method implementation might rely on those conditions.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.base.ManagedObjectMetadata(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.base.ManagedObject.MetadataOptions\n\t}\n)\n","static":"true","prefix":"ManagedObjectMetadata","Experimental":false,"module":"sap/ui/base/ManagedObjectMetadata","description":"ManagedObjectMetadata(sClassName, oClassInfo) : sap.ui.base.ManagedObjectMetadata","constructorDescription":"Creates a new metadata object that describes a subclass of ManagedObject.\n\n<b>Note:<\/b> Code outside the <code>sap.ui.base<\/code> namespace must not call this\nconstructor directly. Instances will be created automatically when a new class is\ndefined with one of the {@link sap.ui.base.ManagedObject.extend <i>SomeClass<\/i>.extend}\nmethods.\n\n<b>Note<\/b>: throughout this class documentation, the described subclass of ManagedObject\nis referenced as <i>the described class<\/i>.","extends":"sap.ui.base.Metadata","Deprecated":false,"name":"sap.ui.base.ManagedObjectMetadata","helpDescription":"<strong>Note about Info Objects<\/strong>\n\nSeveral methods in this class return info objects that describe a property, aggregation, association or event of the class described by this metadata object. The type, structure and behavior of these info objects is not yet documented and not part of the stable, public API.\n\nCode using such methods and the returned info objects therefore needs to be aware of the following restrictions:\n\n<ul> <li>the set of properties exposed by each info object, their type and value might change as well as the class of the info object itself.\n\nProperties that represent settings provided during class definition (in the oClassInfo parameter of the 'extend' call, e.g. 'type', 'multiple' of an aggregation) are more likely to stay the same than additional, derived properties like '_iKind'.<\/li>\n\n<li>info objects must not be modified / enriched although they technically could.<\/li>\n\n<li>the period of validity of info objects is not defined. They should be referenced only for a short time and not be kept as members of long living objects or closures.<\/li>\n\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"forwardAggregation(\n\t\"${sForwardedSourceAggregation}\", // string\n\t{\n\t\tgetter: ${getter}, // string|function\n\t\tidSuffix: \"${idSuffix}\", // string\n\t\taggregation: \"${aggregation}\", // string\n\t\tforwardBinding: ${bForwardBinding} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObjectMetadata.forwardAggregation","description":"forwardAggregation(sForwardedSourceAggregation, mOptions)","helpDescription":"Defines that an aggregation <code>sForwardedSourceAggregation<\/code> of the ManagedObject described by this metadata should be \"forwarded\" to an aggregation of an internal element within the composite.\n\nThis means that all adding, removal, or other operations happening on the source aggregation are actually called on the target instance. All elements added to the source aggregation will be located at the target aggregation (this means the target instance is their parent). Both, source and target element will return the added elements when asked for the content of the respective aggregation. If present, the named (non-generic) aggregation methods will be called for the target aggregation.\n\nWhen the source aggregation is bound, the binding will by default take place there and the add/remove operations will be forwarded to the target. However, optionally the binding can also be forwarded. The result is similar - all added/bound items will reside at the target - but when the binding is forwarded, the updateAggregation method is called on the target element and the add/remove methods are only called on the target element as well.\n\nAggregations can only be forwarded to other aggregations of the same multiplicity (single/multiple). The target aggregation must also be \"compatible\" to the source aggregation in the sense that any items given to the source aggregation must also be valid in the target aggregation (otherwise the target element will throw a validation error).\n\nIf the forwarded elements use data binding, the target element must be properly aggregated by the source element to make sure all models are available there as well (this is anyway important to avoid issues).\n\nThe aggregation target must remain the same instance across the entire lifetime of the source control.\n\nAggregation forwarding must be set up before any instances of the control are created (recommended: within the class definition) to avoid situations where forwarding is not yet set up when the first aggregated item is added.\n\nAggregation forwarding will behave unexpectedly when the content in the target aggregation is modified by other actors (e.g. by the target element or by another forwarding from a different source aggregation). Hence, this is not allowed.\n\nFor any given source aggregation this method may only be called once. Calling it again overrides the previous forwarding, but leaves any already forwarded elements at their previous target.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"isObserved(\n\t\"${oObject}\", // sap.ui.base.ManagedObject\n\t{\n\t\tproperties: [${properties}], // boolean|string[]\n\t\taggregations: [${aggregations}], // boolean|string[]\n\t\tassociations: [${associations}] // boolean|string[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObjectObserver.isObserved","description":"isObserved(oObject, oConfiguration) : boolean","helpDescription":"Checks whether a given configuration set for a control is observed.\n\nAll given settings must be observed for the method to return true.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"observe(\n\t\"${oObject}\", // sap.ui.base.ManagedObject\n\t{\n\t\tproperties: [${properties}], // boolean|string[]\n\t\taggregations: [${aggregations}], // boolean|string[]\n\t\tassociations: [${associations}], // boolean|string[]\n\t\tbindings: [${bindings}], // boolean|string[]\n\t\tevents: [${events}], // boolean|string[]\n\t\tdestroy: ${bDestroy}, // boolean\n\t\tparent: ${bParent} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObjectObserver.observe","description":"observe(oObject, oConfiguration)","helpDescription":"Starts observing the given object. A configuration is used to specify the meta data settings that should be observed. Configuration should be as specific as possible to avoid negative performance impact. Observing all settings (properties, aggregations, associations) should be avoided.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"unobserve(\n\t\"${oObject}\", // sap.ui.base.ManagedObject\n\t{\n\t\tproperties: [${properties}], // boolean|string[]\n\t\taggregations: [${aggregations}], // boolean|string[]\n\t\tassociations: [${associations}], // boolean|string[]\n\t\tbindings: [${bindings}], // boolean|string[]\n\t\tevents: [${events}], // boolean|string[]\n\t\tdestroy: ${bDestroy}, // boolean\n\t\tparent: ${bParent} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.ManagedObjectObserver.unobserve","description":"unobserve(oObject, oConfiguration)","helpDescription":"Stops observing the given object. A configuration is used to specify the meta data settings that should be ignored. Configuration should be as specific as possible to avoid negative performance impact.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.base.Metadata(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.base.Object.MetadataOptions\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"Metadata","Experimental":false,"module":"sap/ui/base/Metadata","name":"sap.ui.base.Metadata","description":"Metadata(sClassName, oClassInfo) : sap.ui.base.Metadata","constructorDescription":"Creates a new metadata object from the given static infos.\n\n<b>Note:<\/b> Throughout this class documentation, the described subclass of Object\nis referenced as <i>the described class<\/i>.","helpDescription":"Metadata for a class.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"defineClass(\n\t\"${sClassName}\", // string\n\t{\n\t\tbaseType: \"${baseType}\", // string\n\t\tpublicMethods: [${publicMethods}] // string[]\n\t},\n\t\"${FNMetaImpl}\" // function\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.base.Object.defineClass","description":"defineClass(sClassName, oStaticInfo, FNMetaImpl?) : sap.ui.base.Metadata","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.1 Use the static <code>extend<\/code> method of the desired base class (e.g. {@link sap.ui.base.Object.extend})<br>Creates metadata for a given class and attaches it to the constructor and prototype of that class.\n\nAfter creation, metadata can be retrieved with getMetadata().\n\nThe static info can at least contain the following entries: <ul> <li>baseType: {string} fully qualified name of a base class or empty<\/li> <li>publicMethods: {string} an array of method names that will be visible in the interface proxy returned by {@link #getInterface}<\/li> <\/ul>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use the static <code>extend<\/code> method of the desired base class (e.g. {@link sap.ui.base.Object.extend})","since":"1.3.1"}},{"template":"new sap.ui.core.Component(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcomponentData: ${componentData} // any\n\t}\n)\n","static":"true","prefix":"Component","Experimental":false,"module":"sap/ui/core/Component","description":"Component(sId?, mSettings?) : sap.ui.core.Component","constructorDescription":"As <code>Component<\/code> is an abstract base class for components, applications should not call the constructor.\nFor many use cases the static {@link #.create Component.create} factory can be used to instantiate a <code>Component<\/code>.\nDepending on the requirements, the framework also provides other ways to instantiate a <code>Component<\/code>, documented under the\n{@link topic:958ead51e2e94ab8bcdc90fb7e9d53d0 \"Component\"} chapter.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there. See {@link sap.ui.core.Component}\nfor a general description of this argument.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject} can be used.","extends":"sap.ui.base.ManagedObject","Deprecated":false,"name":"sap.ui.core.Component","helpDescription":"Base Class for Components. Components are independent and reusable parts of UI5 applications. They facilitate the encapsulation of closely related parts of an application, thus enabling developers to structure and maintain their applications more easily.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"create(\n\t{\n\t\tname: \"${name}\", // string\n\t\turl: \"${url}\", // string\n\t\tcomponentData: ${componentData}, // object\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tactiveTerminologies: [${activeTerminologies}], // string[]\n\t\tsettings: ${settings}, // object\n\t\tmanifest: ${manifest}, // boolean|string|object\n\t\taltManifestUrl: \"${altManifestUrl}\", // string\n\t\thandleValidation: \"${handleValidation}\", // string\n\t\tasyncHints: ${asyncHints} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Component.create","description":"create(mOptions) : Promise<sap.ui.core.Component>","helpDescription":"Asynchronously creates a new component instance from the given configuration.\n\nIf the component class does not already exists, the component class is loaded and afterwards the new component instance is created.\n\nTo optimize the loading process, additional <code>asyncHints<\/code> can be provided. The structure of these hints and how they impact the loading of components is an internal feature of this API and reserved for UI5 internal use only. Code that wants to be safe wrt. version updates, should not use the <code>asyncHints<\/code> property.\n\nIf Components and/or libraries are listed in the <code>asyncHints<\/code>, all the corresponding preload files will be requested in parallel, loading errors (404s) will be ignored. The constructor class will only be required after all preloads have been rejected or resolved. Only then, the new instance will be created.\n\nA component can implement the {@link sap.ui.core.IAsyncContentCreation} interface. Please see the respective documentation for more information.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"createComponent(\n\t{\n\t\tusage: \"${usage}\", // string\n\t\tid: \"${id}\", // string\n\t\tasync: ${bAsync}, // boolean\n\t\tsettings: ${settings}, // object\n\t\tcomponentData: ${componentData} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Component.createComponent","description":"createComponent(vUsage) : sap.ui.core.Component|Promise<sap.ui.core.Component>","helpDescription":"Creates a nested component that is declared in the <code>sap.ui5/componentUsages<\/code> section of the descriptor (manifest.json). The following snippet shows the declaration: <pre>\n{\n  [...]\n  \"sap.ui5\": {\n    \"componentUsages\": {\n      \"myUsage\": {\n        \"name\": \"my.useful.Component\"\n      }\n    }\n  }\n  [...]\n}\n<\/pre> The syntax of the configuration object of the component usage matches the configuration object of the {#link sap.ui.component} factory function.\n\nThis is an example of how the <code>createComponent<\/code> function can be used for asynchronous scenarios: <pre>\noComponent.createComponent(\"myUsage\").then(function(oComponent) {\n  oComponent.doSomething();\n}).catch(function(oError) {\n  Log.error(oError);\n});\n<\/pre>\n\nThe following example shows how <code>createComponent<\/code> can be used to create a nested component by providing specific properties like <code>id<\/code>, <code>async<\/code>, <code>settings<\/code>, or <code>componentData<\/code>: <pre>\nvar oComponent = oComponent.createComponent({\n  usage: \"myUsage\",\n  id: \"myId\",\n  settings: { ... },\n  componentData: { ... }\n});\n<\/pre> The allowed list of properties are defined in the parameter documentation of this function.\n\nThe properties can also be defined in the descriptor. These properties can be overwritten by the local properties of that function.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"extend(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.core.Component.MetadataOptions\n\t},\n\t\"${FNMetaImpl}\" // function\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Component.extend","description":"extend(sClassName, oClassInfo?, FNMetaImpl?) : function","helpDescription":"Creates a new subclass of class <code>sap.ui.core.Component<\/code> with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}, plus the <code>manifest<\/code> property in the 'metadata' object literal, indicating that the component configuration should be read from a manifest.json file.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getCustomizing(\n\t\"${vObject}\", // string|sap.ui.base.ManagedObject|sap.ui.core.Component\n\t{\n\t\ttype: ${type}, // object\n\t\tname: ${name}, // object\n\t\textensionName: ${extensionName} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Component.getCustomizing","description":"getCustomizing(vObject, mOptions) : object|undefined","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"load(\n\t{\n\t\tname: \"${name}\", // string\n\t\turl: \"${url}\", // string\n\t\tmanifest: ${manifest}, // boolean|string|object\n\t\taltManifestUrl: \"${altManifestUrl}\", // string\n\t\tasyncHints: ${asyncHints} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Component.load","description":"load(mOptions) : Promise<function>","helpDescription":"Asynchronously loads a component class without instantiating it; returns a promise on the loaded class.\n\nBeware: \"Asynchronous component loading\" doesn't necessarily mean that no more synchronous loading occurs. Both the framework as well as component implementations might still execute synchronous requests. <code>Component.load<\/code> just allows to use async calls internally.\n\nWhen a manifest is referenced in <code>mOptions<\/code>, this manifest is not automatically used for instances of the Component class that are created after loading. The manifest or the manifest url must be provided for every instance explicitly.\n\nTo optimize the loading process, additional <code>asyncHints<\/code> can be provided. If components and/or libraries are listed in the <code>asyncHints<\/code>, all the corresponding preload files will be requested in parallel, loading errors (404s) will be ignored. The constructor class will only be required after all preloads have been rejected or resolved. The structure of the hints and how they impact the loading of components is an internal feature of this API and reserved for UI5 internal use only. Code that wants to be safe wrt. version updates, should not use the <code>asyncHints<\/code> property.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.ComponentContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tname: \"${name}\", // string\n\t\turl: ${url}, // sap.ui.core.URI\n\t\tasync: ${bAsync}, // boolean\n\t\thandleValidation: ${bHandleValidation}, // boolean\n\t\tsettings: ${settings}, // object\n\t\tpropagateModel: ${bPropagateModel}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tlifecycle: ${sap.ui.core.ComponentLifecycle.Legacy}, // sap.ui.core.ComponentLifecycle\n\t\tautoPrefixId: ${bAutoPrefixId}, // boolean\n\t\tusage: \"${usage}\", // string\n\t\tmanifest: ${manifest}, // any\n\t\tcomponent: ${component}, // (sap.ui.core.UIComponent|string)\n\t\tcomponentCreated: [function (oEvent) {}, this], // function|array\n\t\tcomponentFailed: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ComponentContainer","Experimental":false,"module":"sap/ui/core/ComponentContainer","description":"ComponentContainer(sId?, mSettings?) : sap.ui.core.ComponentContainer","constructorDescription":"Constructor for a new ComponentContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getUrl url} : sap.ui.core.URI<\/li>\n<li>{@link #getAsync async} : boolean (default: false)<\/li>\n<li>{@link #getHandleValidation handleValidation} : boolean (default: false)<\/li>\n<li>{@link #getSettings settings} : object<\/li>\n<li>{@link #getPropagateModel propagateModel} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLifecycle lifecycle} : sap.ui.core.ComponentLifecycle (default: Legacy)<\/li>\n<li>{@link #getAutoPrefixId autoPrefixId} : boolean (default: false)<\/li>\n<li>{@link #getUsage usage} : string<\/li>\n<li>{@link #getManifest manifest} : any<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getComponent component} : (sap.ui.core.ID | sap.ui.core.UIComponent)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:componentCreated componentCreated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:componentFailed componentFailed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.core.ComponentContainer","helpDescription":"Container that embeds a <code>sap/ui/core/UIComponent<\/code> in a control tree.\n\n<b>Concerning asynchronous component loading:<\/b>\n\nTo activate a fully asynchronous loading behavior of components and their dependencies, the property <code>async<\/code> needs to be set to <code>true<\/code> and the <code>manifest<\/code> property needs to be set to a 'truthy' value, e.g. <code>true<\/code> or a URL to the manifest location. If both options are correctly set, the component factory will load and evaluate the component manifest first. In this way, the additional dependencies of the Component are already known before the Component preload/controller is loaded. Both the component preload/controller and the additional dependencies can thus be loaded asynchronously and in parallel.\n\nSample usage of the ComponentContainer:\n\n<pre>\n    &lt;!-- inside XML view -->\n    ...\n    &lt;core:ComponentContainer\n        usage=\"someComponent\"\n        manifest=\"true\"\n        async=\"true\"\n    />\n<\/pre>\n\nSee also {@link module:sap/ui/core/ComponentSupport}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireComponentCreated(\n\t{\n\t\tcomponent: ${component} // sap.ui.core.UIComponent\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.ComponentContainer.fireComponentCreated","description":"fireComponentCreated(mParameters?) : sap.ui.core.ComponentContainer","helpDescription":"Fires event {@link #event:componentCreated componentCreated} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireComponentFailed(\n\t{\n\t\treason: ${reason} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.ComponentContainer.fireComponentFailed","description":"fireComponentFailed(mParameters?) : boolean","helpDescription":"Fires event {@link #event:componentFailed componentFailed} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"showPlaceholder(\n\t{\n\t\tplaceholder: ${placeholder} // sap.ui.core.Placeholder\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.ComponentContainer.showPlaceholder","description":"showPlaceholder(mSettings) : Promise","helpDescription":"Shows the provided placeholder on the component container.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.ComponentMetadata(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.core.Component.MetadataOptions\n\t}\n)\n","static":"true","extends":"sap.ui.base.ManagedObjectMetadata","Deprecated":false,"prefix":"ComponentMetadata","Experimental":false,"module":"sap/ui/core/ComponentMetadata","name":"sap.ui.core.ComponentMetadata","description":"ComponentMetadata(sClassName, oClassInfo) : sap.ui.core.ComponentMetadata","constructorDescription":"Creates a new metadata object for a Component subclass.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.Control(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Control","Experimental":false,"module":"sap/ui/core/Control","description":"Control(sId?, mSettings?) : sap.ui.core.Control","constructorDescription":"Creates and initializes a new control with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBlocked blocked} : boolean (default: false)<\/li>\n<li>{@link #getBusy busy} : boolean (default: false)<\/li>\n<li>{@link #getBusyIndicatorDelay busyIndicatorDelay} : int (default: 1000)<\/li>\n<li>{@link #getBusyIndicatorSize busyIndicatorSize} : sap.ui.core.BusyIndicatorSize (default: 'Medium')<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getFieldGroupIds fieldGroupIds} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:validateFieldGroup validateFieldGroup} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.ui.core.Control","helpDescription":"Base Class for Controls.\n\nControls provide the following features: <ul> <li><b>Rendering<\/b>: the <code>RenderManager<\/code> only expects instances of class <code>Control<\/code> in its {@link sap.ui.core.RenderManager#renderControl renderControl} method. By convention, each control class has an associated static class that takes care of rendering the control (its 'Renderer').<\/li> <li><b>show / hide<\/b>: a control can be hidden, although it is still part of the control tree, see property {@link #getVisible visible}<\/li> <li><b>local busy indicator<\/b>: marks a control visually as 'busy', see properties {@link #getBusy busy} and {@link #getBusyIndicatorDelay busyIndicatorDelay}<\/li> <li><b>field groups<\/b>: by assigning the same group ID to a set of editable controls, they form a group which can be validated together. See property {@link #getFieldGroupIds fieldGroupIds} and event {@link #event:validateFieldGroup validateFieldGroup}. The term <i>field<\/i> was chosen as most often this feature will be used to group editable fields in a form.<\/li> See the documentation for {@link topic:5b0775397e394b1fb973fa207554003e Field Groups} for more details. <li><b>custom style classes<\/b>: all controls allow to add custom CSS classes to their rendered DOM without modifying their renderer code. See methods {@link #addStyleClass addStyleClass}, {@link #removeStyleClass removeStyleClass}, {@link #toggleStyleClass toggleStyleClass} and {@link #hasStyleClass hasStyleClass}.<\/br> The necessary implementation is encapsulated in {@link sap.ui.core.CustomStyleClassSupport CustomStyleClassSupport} and can be applied to selected element classes as well.<\/li> <li><b>browser events<\/b>: by calling the methods {@link #attachBrowserEvent attachBrowserEvent} and {@link #detachBrowserEvent detachBrowserEvent}, consumers can let the control class take care of registering / de-registering a given set of event listeners to the control's root DOM node. The framework will adapt the registration whenever the DOM node changes (e.g. before or after rendering or when the control is destroyed).<\/li> <\/ul>\n\nSee section \"{@link topic:8dcab0011d274051808f959800cabf9f Developing Controls}\" in the documentation for an introduction to control development.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireValidateFieldGroup(\n\t{\n\t\tfieldGroupIds: [${fieldGroupIds}] // string[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Control.fireValidateFieldGroup","description":"fireValidateFieldGroup(mParameters?) : sap.ui.core.Control","helpDescription":"Fires event {@link #event:validateFieldGroup validateFieldGroup} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"createComponent(\n\t{\n\t\tname: \"${name}\", // string\n\t\turl: \"${url}\", // string\n\t\tid: \"${id}\", // string\n\t\tsettings: ${settings}, // object\n\t\tcomponentData: ${componentData} // any\n\t},\n\t\"${sUrl}\", // string\n\t\"${sId}\", // string\n\t\"${mSettings}\" // object\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Core.createComponent","description":"createComponent(vComponent, sUrl?, sId?, mSettings?) : sap.ui.core.Component|Promise<sap.ui.core.Component>","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.95 Please use {@link sap.ui.core.Component.create Component.create} instead.<br>Creates a component with the provided id and settings.\n\nWhen the optional parameter <code>sUrl<\/code> is given, then all request for resources of the library will be redirected to the given URL. This is convenience for a call to <pre>\n  sap.ui.loader.config({\n      paths: {\n        \"lib/with/slashes\": vUrl\n      }\n  });\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.Lib.load Lib.load} instead.","since":"1.119"}},{"template":"extend(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.core.Component.MetadataOptions\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Core.extend","description":"extend(sClassName, oClassInfo?) : function","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 without replacement. In future major versions, the Core no longer has a class nature and therefore can't be extended.<br>Creates a new subclass of class <code>sap.ui.core.Core<\/code> with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.Lib.load Lib.load} instead.","since":"1.119"}},{"template":"fireFormatError(\n\t{\n\t\telement: ${element}, // sap.ui.core.Element\n\t\tproperty: \"${property}\", // string\n\t\ttype: ${type}, // sap.ui.model.Type\n\t\tnewValue: ${newValue}, // any\n\t\toldValue: ${oldValue}, // any\n\t\texception: ${exception} // object\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Core.fireFormatError","description":"fireFormatError(oParameters?) : sap.ui.core.Core","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.118 Please use {@link sap.ui.base.ManagedObject#fireFormatError ManagedObject#fireFormatError} instead.<br>Fires event {@link #event:formatError formatError} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.Lib.load Lib.load} instead.","since":"1.119"}},{"template":"fireParseError(\n\t{\n\t\telement: ${element}, // sap.ui.core.Element\n\t\tproperty: \"${property}\", // string\n\t\ttype: ${type}, // sap.ui.model.Type\n\t\tnewValue: ${newValue}, // object\n\t\toldValue: ${oldValue}, // object\n\t\texception: ${exception} // object\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Core.fireParseError","description":"fireParseError(oParameters?) : sap.ui.core.Core","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.118 Please use {@link sap.ui.base.ManagedObject#fireParseError ManagedObject#fireParseError} instead.<br>Fires event {@link #event:parseError parseError} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.Lib.load Lib.load} instead.","since":"1.119"}},{"template":"fireValidationError(\n\t{\n\t\telement: ${element}, // sap.ui.core.Element\n\t\tproperty: \"${property}\", // string\n\t\ttype: ${type}, // sap.ui.model.Type\n\t\tnewValue: ${newValue}, // object\n\t\toldValue: ${oldValue}, // object\n\t\texception: ${exception} // object\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Core.fireValidationError","description":"fireValidationError(oParameters?) : sap.ui.core.Core","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.118 Please use {@link sap.ui.base.ManagedObject#fireValidationError ManagedObject.fireValidationError} instead.<br>Fires event {@link #event:validationError validationError} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.Lib.load Lib.load} instead.","since":"1.119"}},{"template":"loadLibraries(\n\t\"${aLibraries}\", // string[]\n\t{\n\t\tasync: ${bAsync}, // boolean\n\t\tpreloadOnly: ${bPreloadOnly} // boolean\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":true,"name":"sap.ui.core.Core.loadLibraries","description":"loadLibraries(aLibraries, mOptions?) : Promise<sap.ui.core.LibraryInfo[]>|undefined","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ui.core.Lib.load Lib.load} instead.<br>Loads a set of libraries, preferably asynchronously.\n\nThe module loading is still synchronous, so if a library loads additional modules besides its library.js file, those modules might be loaded synchronously by the library.js The async loading is only supported by the means of the library-preload.js(on) files, so if a library doesn't provide a preload or when the preload is deactivated (configuration, debug mode) then this API falls back to synchronous loading. However, the contract (Promise) remains valid and a Promise will be returned if async is specified - even when the real loading is done synchronously.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.Lib.load Lib.load} instead.","since":"1.119"}},{"template":"loadLibrary(\n\t\"${sLibrary}\", // string\n\t{\n\t\tasync: ${bAsync}, // boolean\n\t\turl: \"${url}\" // string\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Core.loadLibrary","description":"loadLibrary(sLibrary, vUrl?) : sap.ui.core.LibraryInfo|Promise<sap.ui.core.LibraryInfo>","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.119 Please use {@link sap.ui.core.Lib.load Lib.load} instead.<br>Loads the given library and its dependencies and makes its content available to the application.\n\n<h3>What it does<\/h3>\n\nWhen library preloads are not suppressed for the given library, then a library-preload bundle will be loaded for it. By default, the bundle will be loaded synchronously (for compatibility reasons). Only when the optional parameter <code>vUrl<\/code> is given as <code>true<\/code> or as a configuration object with a property of <code>async:true<\/code>, then the bundle will be loaded asynchronously and a <code>Promise<\/code> will be returned (preferred usage).\n\nAfter preloading the bundle, dependency information from the bundle is evaluated and any missing libraries are also preloaded.\n\nOnly then the library entry module (named <code><i>your/lib<\/i>/library.js<\/code>) will be required and executed. The module is supposed to call <code>sap.ui.getCore().initLibrary(...)<\/code> providing the framework with additional metadata about the library, e.g. its version, the set of contained enums, types, interfaces, controls and elements and whether the library requires CSS. If the library requires CSS, a &lt;link&gt; will be added to the page referring to the corresponding <code>library.css<\/code> stylesheet for the library and the current theme.\n\nWhen the optional parameter <code>vUrl<\/code> is given as a string or when a configuration object is given with a non-empty, string-valued property <code>url<\/code>, then that URL will be registered for the namespace of the library and all resources will be loaded from that location. This is convenience for a call like <pre>\n  sap.ui.loader.config({\n    paths: {\n      \"lib/with/slashes\": vUrl\n    }\n  });\n<\/pre>\n\nWhen the given library has been loaded already, no further action will be taken, especially, a given URL will not be registered! In the case of asynchronous loading, a Promise will be returned, but will be resolved immediately.\n\n<h3>When to use<\/h3>\n\nFor applications that follow the best practices and use components with component descriptors (manifest.json), the framework will load all declared mandatory libraries and their dependencies automatically before instantiating the application component.\n\nThe same is true for libraries that are listed in the bootstrap configuration (e.g. with the attribute <code>data-sap-ui-libs<\/code>). They will be loaded before the <code>init<\/code> event of the UI5 Core is fired.\n\nOnly when an app declares a library to be a lazy library dependency or when code does not use descriptors at all, then an explicit call to <code>loadLibrary<\/code> becomes necessary. The call should be made before artifacts (controls, elements, types, helpers, modules etc.) from the library are used or required. This allows the framework to optimize access to those artifacts.\n\nFor example, when an app uses a heavy-weight charting library that shouldn't be loaded during startup, it can declare it as \"lazy\" and load it just before it loads and displays a view that uses the charting library: <pre>\n  sap.ui.getCore().loadLibrary(\"heavy.charting\", {async: true})\n    .then(function() {\n      View.create({\n        name: \"myapp.views.HeavyChartingView\",\n        type: ViewType.XML\n      });\n    });\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.Lib.load Lib.load} instead.","since":"1.119"}},{"template":"new sap.ui.core.CustomData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tkey: \"${key}\", // string\n\t\tvalue: ${value}, // any\n\t\twriteToDom: ${bWriteToDom} // boolean\n\t}\n)\n","static":"true","prefix":"CustomData","Experimental":false,"module":"sap/ui/core/CustomData","description":"CustomData(sId?, mSettings?) : sap.ui.core.CustomData","constructorDescription":"Constructor for a new <code>CustomData<\/code> element.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.ui.core.CustomData","helpDescription":"Contains a single key/value pair of custom data attached to an <code>Element<\/code>.\n\nSee method {@link sap.ui.core.Element#data Element.prototype.data} and the chapter {@link topic:91f0c3ee6f4d1014b6dd926db0e91070 Custom Data - Attaching Data Objects to Controls} in the documentation.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.Element(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay} // (sap.ui.core.Element|string)\n\t}\n)\n","static":"true","prefix":"Element","Experimental":false,"module":"sap/ui/core/Element","description":"Element(sId?, mSettings?) : sap.ui.core.Element","constructorDescription":"Constructs and initializes a UI Element with the given <code>sId<\/code> and settings.\n\n\n<h3>Uniqueness of IDs<\/h3>\n\nEach <code>Element<\/code> must have an ID. If no <code>sId<\/code> or <code>mSettings.id<\/code> is\ngiven at construction time, a new ID will be created automatically. The IDs of all elements that exist\nat the same time in the same window must be different. Providing an ID which is already used by another\nelement throws an error.\n\nWhen an element is created from a declarative source (e.g. XMLView), then an ID defined in that\ndeclarative source needs to be unique only within the declarative source. Declarative views will\nprefix that ID with their own ID (and some separator) before constructing the element.\nProgrammatically created views (JSViews) can do the same with the {@link sap.ui.core.mvc.View#createId} API.\nSimilarly, UIComponents can prefix the IDs of elements created in their context with their own ID.\nAlso see {@link sap.ui.core.UIComponent#getAutoPrefixId UIComponent#getAutoPrefixId}.\n\n\n<h3>Settings<\/h3>\nIf the optional <code>mSettings<\/code> are given, they must be a JSON-like object (object literal)\nthat defines values for properties, aggregations, associations or events keyed by their name.\n\n<b>Valid Names:<\/b>\n\nThe property (key) names supported in the object literal are exactly the (case sensitive)\nnames documented in the JSDoc for the properties, aggregations, associations and events\nof the control and its base classes. Note that for  0..n aggregations and associations this\nusually is the plural name, whereas it is the singular name in case of 0..1 relations.\n\nEach subclass should document the set of supported names in its constructor documentation.\n\n<b>Valid Values:<\/b>\n\n<ul>\n<li>for normal properties, the value has to be of the correct simple type (no type conversion occurs)<\/li>\n<li>for 0..1 aggregations, the value has to be an instance of the aggregated control or element type<\/li>\n<li>for 0..n aggregations, the value has to be an array of instances of the aggregated type<\/li>\n<li>for 0..1 associations, an instance of the associated type or an id (string) is accepted<\/li>\n<li>0..n associations are not supported yet<\/li>\n<li>for events either a function (event handler) is accepted or an array of length 2\n    where the first element is a function and the 2nd element is an object to invoke the method on.<\/li>\n<\/ul>\n\nSpecial aggregation <code>dependents<\/code> is connected to the lifecycle management and databinding,\nbut not rendered automatically and can be used for popups or other dependent controls or elements.\nThis allows the definition of popup controls in declarative views and enables propagation of model\nand context information to them.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTooltip tooltip} : sap.ui.core.TooltipBase|string<\/li>\n<li>{@link #getCustomData customData} : sap.ui.core.CustomData[]<\/li>\n<li>{@link #getLayoutData layoutData} : sap.ui.core.LayoutData<\/li>\n<li>{@link #getDependents dependents} : sap.ui.core.Element[]<\/li>\n<li>{@link #getDragDropConfig dragDropConfig} : sap.ui.core.dnd.DragDropBase[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFieldHelpDisplay fieldHelpDisplay} : (sap.ui.core.ID | sap.ui.core.Element)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":false,"name":"sap.ui.core.Element","helpDescription":"Base Class for UI Elements.\n\n<code>Element<\/code> is the most basic building block for UI5 UIs. An <code>Element<\/code> has state like a <code>ManagedObject<\/code>, it has a unique ID by which the framework remembers it. It can have associated DOM, but it can't render itself. Only {@link sap.ui.core.Control Controls} can render themselves and also take care of rendering <code>Elements<\/code> that they aggregate as children. If an <code>Element<\/code> has been rendered, its related DOM gets the same ID as the <code>Element<\/code> and thereby can be retrieved via API. When the state of an <code>Element<\/code> changes, it informs its parent <code>Control<\/code> which usually re-renders then.\n\n<h3>Dispatching Events<\/h3>\n\nThe UI5 framework already registers generic listeners for common browser events, such as <code>click<\/code> or <code>keydown<\/code>. When called, the generic listener first determines the corresponding target element using {@link jQuery#control}. Then it checks whether the element has an event handler method for the event. An event handler method by convention has the same name as the event, but prefixed with \"on\": Method <code>onclick<\/code> is the handler for the <code>click<\/code> event, method <code>onkeydown<\/code> the handler for the <code>keydown<\/code> event and so on. If there is such a method, it will be called with the original event as the only parameter. If the element has a list of delegates registered, their handler functions will be called the same way, where present. The set of implemented handlers might differ between element and delegates. Not each handler implemented by an element has to be implemented by its delegates, and delegates can implement handlers that the corresponding element doesn't implement.\n\nA list of browser events that are handled that way can be found in {@link module:sap/ui/events/ControlEvents}. Additionally, the framework dispatches pseudo events ({@link module:sap/ui/events/PseudoEvents}) using the same naming convention. Last but not least, some framework events are also dispatched that way, e.g. <code>BeforeRendering<\/code>, <code>AfterRendering<\/code> (only for controls) and <code>ThemeChanged<\/code>.\n\nIf further browser events are needed, controls can register listeners on the DOM using native APIs in their <code>onAfterRendering<\/code> handler. If needed, they can do this for their aggregated elements as well. If events might fire often (e.g. <code>mousemove<\/code>), it is best practice to register them only while needed, and deregister afterwards. Anyhow, any registered listeners must be cleaned up in the <code>onBeforeRendering<\/code> listener and before destruction in the <code>exit<\/code> hook.","category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"use the more flexible {@link sap.ui.base.ManagedObject.create}.","since":"1.44"}},{"template":"applyFocusInfo(\n\t{\n\t\tpreventScroll: ${bPreventScroll} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Element.applyFocusInfo","description":"applyFocusInfo(oFocusInfo) : sap.ui.core.Element","helpDescription":"Applies the focus info.\n\nTo be overwritten by the specific control method.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"use the more flexible {@link sap.ui.base.ManagedObject.create}.","since":"1.44"}},{"template":"create(\n\t\"${vData}\", // sap.ui.core.Element|object\n\t{\n\t\ttype: \"${type}\" // string\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Element.create","description":"create(vData, oKeyInfo?) : sap.ui.core.Element","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44 use the more flexible {@link sap.ui.base.ManagedObject.create}.<br>Creates a new Element from the given data.\n\nIf <code>vData<\/code> is an Element already, that element is returned. If <code>vData<\/code> is an object (literal), then a new element is created with <code>vData<\/code> as settings. The type of the element is either determined by a property named <code>Type<\/code> in the <code>vData<\/code> or by a type information in the <code>oKeyInfo<\/code> object","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"use the more flexible {@link sap.ui.base.ManagedObject.create}.","since":"1.44"}},{"template":"extend(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.core.Element.MetadataOptions\n\t},\n\t\"${FNMetaImpl}\" // function\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Element.extend","description":"extend(sClassName, oClassInfo?, FNMetaImpl?) : function","helpDescription":"Defines a new subclass of Element with the name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> can contain the same information that {@link sap.ui.base.ManagedObject.extend} already accepts, plus the <code>dnd<\/code> property in the metadata object literal to configure drag-and-drop behavior (see {@link sap.ui.core.Element.MetadataOptions MetadataOptions} for details). Objects describing aggregations can also have a <code>dnd<\/code> property when used for a class extending <code>Element<\/code> (see {@link sap.ui.base.ManagedObject.MetadataOptions.AggregationDnD AggregationDnD}).\n\nExample: <pre>\nElement.extend('sap.mylib.MyElement', {\n  metadata : {\n    library : 'sap.mylib',\n    properties : {\n      value : 'string',\n      width : 'sap.ui.core.CSSSize'\n    },\n    dnd : { draggable: true, droppable: false },\n    aggregations : {\n      items : { type: 'sap.ui.core.Control', multiple : true, dnd : {draggable: false, droppable: true, layout: \"Horizontal\" } },\n      header : {type : \"sap.ui.core.Control\", multiple : false, dnd : true },\n    }\n  }\n});\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"use the more flexible {@link sap.ui.base.ManagedObject.create}.","since":"1.44"}},{"template":"focus(\n\t{\n\t\tpreventScroll: ${bPreventScroll}, // boolean\n\t\ttargetInfo: ${targetInfo} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Element.focus","description":"focus(oFocusInfo?)","helpDescription":"Sets the focus to the stored focus DOM reference.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"use the more flexible {@link sap.ui.base.ManagedObject.create}.","since":"1.44"}},{"template":"new sap.ui.core.ElementMetadata(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.core.Element.MetadataOptions\n\t}\n)\n","static":"true","extends":"sap.ui.base.ManagedObjectMetadata","Deprecated":false,"prefix":"ElementMetadata","Experimental":false,"module":"sap/ui/core/ElementMetadata","name":"sap.ui.core.ElementMetadata","description":"ElementMetadata(sClassName, oClassInfo) : sap.ui.core.ElementMetadata","constructorDescription":"Creates a new metadata object for a UIElement subclass.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"load(\n\t{\n\t\tcontainer: ${container}, // sap.ui.core.mvc.View|sap.ui.core.Fragment\n\t\tname: \"${name}\", // string\n\t\tcreateDefaultContent: ${fn_createDefaultContent}, // function\n\t\tasync: ${bAsync} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/ExtensionPoint","name":"sap.ui.core.ExtensionPoint.load","description":"load(mOptions) : Promise<sap.ui.core.Control[]>","helpDescription":"Creates 0..n UI5 controls from an <code>ExtensionPoint<\/code>.\n\nOne control if the <code>ExtensionPoint<\/code> is e.g. filled with a <code>View<\/code>, zero for extension points without configured extension and n controls for multi-root <code>Fragments<\/code> as extension.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"load(\n\t{\n\t\tname: \"${name}\", // string\n\t\ttype: \"${type}\", // string\n\t\tdefinition: \"${definition}\", // string\n\t\tid: \"${id}\", // string\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller|object\n\t\tcontainingView: ${containingView} // sap.ui.core.mvc.View\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Fragment.load","description":"load(mOptions) : Promise<(sap.ui.core.Control|sap.ui.core.Control[])>","helpDescription":"Loads and instantiates a fragment. Also refer to {@link topic:04129b2798c447368f4c8922c3c33cd7 Instantiation of Fragments}.\n\nThe fragment object itself is not an entity that has any further significance beyond this factory function.\n\nA Promise is returned, which resolves with the fragment's content.\n\nThe Fragment types <code>\"XML\"<\/code>, <code>\"JS\"<\/code>, and <code>\"HTML\"<\/code> (type <code>\"HTML\"<\/code> is deprecated) are available by default. Additional Fragment types can be implemented and added using the {@link sap.ui.core.Fragment.registerType} function.\n\nFurther properties may be supported by future or custom Fragment types. Any given properties will be forwarded to the Fragment implementation.\n\nIf no fixed ID is given, the fragment ID is generated. In any case, the fragment ID will be used as prefix for the IDs of all contained controls.\n\n<b>Note:<\/b> In case you are embedding a Fragment into an existing View, please also have a look at the {@link sap.ui.core.mvc.Controller.loadFragment loadFragment} factory for a closer coupling to the corresponding Controller instance.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"registerType(\n\t\"${sType}\", // string\n\t{\n\t\tinit: ${fn_init}, // function\n\t\tload: ${fn_load} // function\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Fragment.registerType","description":"registerType(sType, oFragmentImpl)","helpDescription":"Registers a new Fragment type","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.HTML(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontent: \"${content}\", // string\n\t\tpreferDOM: ${bPreferDOM}, // boolean\n\t\tsanitizeContent: ${bSanitizeContent}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\tafterRendering: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"HTML","Experimental":false,"module":"sap/ui/core/HTML","description":"HTML(sId?, mSettings?) : sap.ui.core.HTML","constructorDescription":"Constructor for a new HTML.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<li>{@link #getPreferDOM preferDOM} : boolean (default: true)<\/li>\n<li>{@link #getSanitizeContent sanitizeContent} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.core.HTML","helpDescription":"Embeds standard HTML in an SAPUI5 control tree.\n\nSecurity Hint: By default, the HTML content (property 'content') is not sanitized and therefore open to XSS attacks. Applications that want to show user defined input in an HTML control, should either sanitize the content on their own or activate automatic sanitizing through the {@link #setSanitizeContent sanitizeContent} property.\n\nAlthough this control inherits the <code>tooltip<\/code> aggregation/property and the <code>hasStyleClass<\/code>, <code>addStyleClass<\/code>, <code>removeStyleClass<\/code> and <code>toggleStyleClass<\/code> methods from its base class, it doesn't support them. Instead, the defined HTML content can contain a tooltip (title attribute) or custom CSS classes.\n\nFor further hints about usage restrictions for this control, see also the documentation of the <code>content<\/code> property.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterRendering(\n\t{\n\t\tisPreservedDOM: ${bIsPreservedDOM} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.HTML.fireAfterRendering","description":"fireAfterRendering(mParameters?) : sap.ui.core.HTML","helpDescription":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.Icon(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsrc: ${src}, // sap.ui.core.URI\n\t\tsize: ${size}, // sap.ui.core.CSSSize\n\t\tcolor: \"${color}\", // string\n\t\thoverColor: \"${hoverColor}\", // string\n\t\tactiveColor: \"${activeColor}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tbackgroundColor: \"${backgroundColor}\", // string\n\t\thoverBackgroundColor: \"${hoverBackgroundColor}\", // string\n\t\tactiveBackgroundColor: \"${activeBackgroundColor}\", // string\n\t\tdecorative: ${bDecorative}, // boolean\n\t\tuseIconTooltip: ${bUseIconTooltip}, // boolean\n\t\talt: \"${alt}\", // string\n\t\tnoTabStop: ${bNoTabStop}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Icon","Experimental":false,"module":"sap/ui/core/Icon","description":"Icon(sId?, mSettings?) : sap.ui.core.Icon","constructorDescription":"Constructor for a new Icon.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColor color} : string<\/li>\n<li>{@link #getHoverColor hoverColor} : string<\/li>\n<li>{@link #getActiveColor activeColor} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getHoverBackgroundColor hoverBackgroundColor} : string<\/li>\n<li>{@link #getActiveBackgroundColor activeBackgroundColor} : string<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getUseIconTooltip useIconTooltip} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getNoTabStop noTabStop} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.core.Icon","helpDescription":"Icon uses embedded font instead of pixel image. Comparing to image, Icon is easily scalable, color can be altered live and various effects can be added using css.\n\nA set of built in Icons is available in the {@link demo:sap/m/demokit/iconExplorer/webapp/index.html Icon Explorer}.\n\nFor further information, see {@link topic:21ea0ea94614480d9a910b2e93431291 Icon and Icon Pool}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"addIcon(\n\t\"${iconName}\", // string\n\t\"${collectionName}\", // string\n\t{\n\t\tfontFamily: \"${fontFamily}\", // string\n\t\tcontent: [${content}], // string|string[]\n\t\toverWrite: ${bOverWrite}, // boolean\n\t\tsuppressMirroring: ${bSuppressMirroring}, // boolean\n\t\tresourceBundle: ${resourceBundle} // module:sap/base/i18n/ResourceBundle\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/IconPool","name":"sap.ui.core.IconPool.addIcon","description":"addIcon(iconName, collectionName, iconInfo) : sap.ui.core.IconPool.IconInfo","helpDescription":"Register an additional icon to the sap.ui.core.IconPool.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"createControlByURI(\n\t{\n\t\tsrc: ${src} // sap.ui.core.URI\n\t},\n\t\"${constructor}\" // function\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/IconPool","name":"sap.ui.core.IconPool.createControlByURI","description":"createControlByURI(setting, constructor) : sap.ui.core.Control","helpDescription":"Creates an instance of {@link sap.ui.core.Icon} if the given URI is an icon URI, otherwise the given constructor is called. The given URI is set to the src property of the control.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"registerFont(\n\t{\n\t\tfontFamily: \"${fontFamily}\", // string\n\t\tcollectionName: \"${collectionName}\", // string\n\t\tfontURI: ${fontURI}, // sap.ui.core.URI\n\t\tmetadata: ${metadata}, // object\n\t\tmetadataURI: ${metadataURI}, // object\n\t\tlazy: ${bLazy} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/IconPool","name":"sap.ui.core.IconPool.registerFont","description":"registerFont(oConfig)","helpDescription":"Registers an additional icon font to the icon pool","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.InvisibleText(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"} // string\n\t}\n)\n","static":"true","prefix":"InvisibleText","Experimental":false,"module":"sap/ui/core/InvisibleText","description":"InvisibleText(sId?, mSettings?) : sap.ui.core.InvisibleText","constructorDescription":"Constructor for a new InvisibleText.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.core.InvisibleText","helpDescription":"An InvisibleText is used to bring hidden texts to the UI for screen reader support. The hidden text can e.g. be referenced in the ariaLabelledBy or ariaDescribedBy associations of other controls.\n\nThe inherited properties busy, busyIndicatorDelay and visible and the aggregation tooltip is not supported by this control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.Item(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\" // string\n\t}\n)\n","static":"true","prefix":"Item","Experimental":false,"module":"sap/ui/core/Item","description":"Item(sId?, mSettings?) : sap.ui.core.Item","constructorDescription":"Constructor for a new Item.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.ui.core.Item","helpDescription":"A control base type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.LayoutData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay} // (sap.ui.core.Element|string)\n\t}\n)\n","static":"true","prefix":"LayoutData","Experimental":false,"module":"sap/ui/core/LayoutData","description":"LayoutData(sId?, mSettings?) : sap.ui.core.LayoutData","constructorDescription":"Constructor for a new LayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.ui.core.LayoutData","helpDescription":"A layout data base type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"init(\n\t{\n\t\tname: \"${name}\", // string\n\t\tversion: \"${version}\", // string\n\t\tapiVersion: ${apiVersion}, // int\n\t\tdependencies: [${dependencies}], // string[]\n\t\ttypes: [${types}], // string[]\n\t\tinterfaces: [${interfaces}], // string[]\n\t\tcontrols: [${controls}], // string[]\n\t\telements: [${elements}], // string[]\n\t\tnoLibraryCSS: ${bNoLibraryCSS}, // boolean\n\t\textensions: ${extensions} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Lib.init","description":"init(mSettings) : object","helpDescription":"Provides information about a library.\n\nThis method is intended to be called exactly once while the main module of a library (its <code>library.js<\/code> module) is executing, typically at its begin. The single parameter <code>mSettings<\/code> is an info object that describes the content of the library.\n\nWhen the <code>mSettings<\/code> has been processed, a normalized version will be set on the library instance Finally, this function fires {@link #event:LibraryChanged} event with operation 'add' for the newly loaded library.\n\n<h3>Side Effects<\/h3>\n\nWhile analyzing the <code>mSettings<\/code>, the framework takes some additional actions:\n\n<ul> <li>If the object contains a list of <code>interfaces<\/code>, they will be registered with the {@link sap.ui.base.DataType} class to make them available as aggregation types in managed objects.<\/li>\n\n<li>If the object contains a list of <code>controls<\/code> or <code>elements<\/code>, {@link sap.ui.lazyRequire lazy stubs} will be created for their constructor as well as for their static <code>extend<\/code> and <code>getMetadata<\/code> methods.\n\n<b>Note:<\/b> Future versions of UI5 will abandon the concept of lazy stubs as it requires synchronous XMLHttpRequests which have been deprecated (see {@link http://xhr.spec.whatwg.org}). To be on the safe side, productive applications should always require any modules that they directly depend on.<\/li>\n\n<li>With the <code>noLibraryCSS<\/code> property, the library can be marked as 'theming-free'. Otherwise, the framework will add a &lt;link&gt; tag to the page's head, pointing to the library's theme-specific stylesheet. The creation of such a &lt;link&gt; tag can be suppressed with the {@link topic:91f2d03b6f4d1014b6dd926db0e91070 global configuration option} <code>preloadLibCss<\/code>. It can contain a list of library names for which no stylesheet should be included. This is e.g. useful when an application merges the CSS for multiple libraries and already loaded the resulting stylesheet.<\/li>\n\n<li>If a list of library <code>dependencies<\/code> is specified in the info object, those libraries will be loaded synchronously if they haven't been loaded yet.\n\n<b>Note:<\/b> Dependencies between libraries have to be modeled consistently in several places: <ul> <li>Both eager and lazy dependencies have to be modelled in the <code>.library<\/code> file.<\/li> <li>By default, UI5 Tooling generates a <code>manifest.json<\/code> file from the content of the <code>.library<\/code> file. However, if the <code>manifest.json<\/code> file for the library is not generated but maintained manually, it must be kept consistent with the <code>.library<\/code> file, especially regarding its listed library dependencies.<\/li> <li>All eager library dependencies must be declared as AMD dependencies of the <code>library.js<\/code> module by referring to the corresponding <code>\"some/lib/namespace/library\"<\/code> module of each library dependency.<\/code><\/li> <li>All eager dependencies must be listed in the <code>dependencies<\/code> property of the info object.<\/li> <li>All lazy dependencies <b>must not<\/b> be listed as AMD dependencies or in the <code>dependencies<\/code> property of the info object.<\/li> <\/ul>\n\nLast but not least, higher layer frameworks might want to include their own metadata for libraries. The property <code>extensions<\/code> might contain such additional metadata. Its structure is not defined by the framework, but it is strongly suggested that each extension only occupies a single property in the <code>extensions<\/code> object and that the name of that property contains some namespace information (e.g. library name that introduces the feature) to avoid conflicts with other extensions. The framework won't touch the content of <code>extensions<\/code> but will make it available in the library info objects provided by {@link #.load}.\n\n<h3>Relationship to Descriptor for Libraries (manifest.json)<\/h3>\n\nThe information contained in <code>mSettings<\/code> is partially redundant to the content of the descriptor for the same library (its <code>manifest.json<\/code> file). Future versions of UI5 will ignore the information provided in <code>mSettings<\/code> and will evaluate the descriptor file instead. Library developers therefore must keep the information in both files in sync if the <code>manifest.json<\/code> file is maintained manually.\n\n<h3>Library API-Version 2<\/h3>\n\nThe Library API Version 2 has been introduced to avoid access to the global namespace when retrieving enum types. With Library API Version 2 a library must declare its enum types via {@link module:sap/ui/base/DataType.registerEnum DataType.registerEnum}.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"load(\n\t{\n\t\tname: \"${name}\", // string\n\t\turl: \"${url}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Lib.load","description":"load(mOptions) : Promise<sap.ui.core.Lib>","helpDescription":"Loads the given library and its dependencies and makes its content available to the application.\n\n<h3>What it does<\/h3>\n\nWhen library preloads are not suppressed for the given library, then a library-preload bundle will be loaded for it.\n\nAfter preloading the bundle, dependency information from the bundle is evaluated and any missing libraries are also preloaded.\n\nOnly then the library entry module (named <code><i>your/lib<\/i>/library.js<\/code>) will be required and executed. The module is supposed to call {@link #.init} providing the framework with additional metadata about the library, e.g. its version, the set of contained enums, types, interfaces, controls and elements and whether the library requires CSS. If the library requires CSS, a &lt;link&gt; will be added to the page referring to the corresponding <code>library.css<\/code> stylesheet for the library and the current theme.\n\nWhen the optional parameter <code>mOptions.url<\/code> is given, then that URL will be registered for the namespace of the library and all resources will be loaded from that location. This is convenience for a call like <pre>\n  sap.ui.loader.config({\n    paths: {\n      \"lib/with/slashes\": mOptions.url\n    }\n  });\n<\/pre>\n\nWhen the given library has been loaded already, no further action will be taken, especially, a given URL will not be registered. A Promise will be returned, but will be resolved immediately.\n\n<h3>When to use<\/h3>\n\nFor applications that follow the best practices and use components with component descriptors (manifest.json), the framework will load all declared mandatory libraries and their dependencies automatically before instantiating the application component.\n\nThe same is true for libraries that are listed in the bootstrap configuration (e.g. with the attribute <code>data-sap-ui-libs<\/code>). They will be loaded before the <code>init<\/code> event of the UI5 Core is fired.\n\nOnly when an app declares a library to be a lazy library dependency or when code does not use descriptors at all, then an explicit call to <code>loadLibrary<\/code> becomes necessary. The call should be made before artifacts (controls, elements, types, helpers, modules etc.) from the library are used or required. This allows the framework to optimize access to those artifacts.\n\nFor example, when an app uses a heavy-weight charting library that shouldn't be loaded during startup, it can declare it as \"lazy\" and load it just before it loads and displays a view that uses the charting library: <pre>\n  await Library.load({name: \"heavy.charting\"});\n  await View.create({\n      name: \"myapp.views.HeavyChartingView\",\n      type: ViewType.XML\n  });\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.ListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: \"${icon}\", // string\n\t\tadditionalText: \"${additionalText}\" // string\n\t}\n)\n","static":"true","prefix":"ListItem","Experimental":false,"module":"sap/ui/core/ListItem","description":"ListItem(sId?, mSettings?) : sap.ui.core.ListItem","constructorDescription":"Constructor for a new ListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getAdditionalText additionalText} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.ui.core.ListItem","helpDescription":"An item that is used in list controls, such as <code>DropdownBox<\/code>.\n\nThe element foresees the usage of additional texts displayed in a second column.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.LocalBusyIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100px\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"100px\"} // sap.ui.core.CSSSize\n\t}\n)\n","static":"true","prefix":"LocalBusyIndicator","Experimental":false,"module":"sap/ui/core/LocalBusyIndicator","description":"LocalBusyIndicator(sId?, mSettings?) : sap.ui.core.LocalBusyIndicator","constructorDescription":"Constructor for a new LocalBusyIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: '100px')<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: '100px')<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":true,"name":"sap.ui.core.LocalBusyIndicator","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14.2 The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore.<br>The LocalBusyIndicator is a special version of the BusyIndicator. This one doesn't block the whole screen - it just blocks the corresponding control and puts a local animation over the control. To use the functionality of this control the corresponding control needs to be enabled via the 'LocalBusyIndicatorSupport' accordingly to the ListBox control (see the init-function of the ListBox).","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore.","since":"1.14.2"}},{"template":"new sap.ui.core.Manifest(\n\t\"${oManifest}\", // object\n\t{\n\t\tcomponentName: \"${componentName}\", // string\n\t\tbaseUrl: \"${baseUrl}\", // string\n\t\tprocess: ${bProcess}, // boolean\n\t\tactiveTerminologies: [${activeTerminologies}] // string[]\n\t}\n)\n","static":"true","prefix":"Manifest","Experimental":false,"module":"sap/ui/core/Manifest","description":"Manifest(oManifest, mOptions?) : sap.ui.core.Manifest","constructorDescription":"Creates and initializes a manifest wrapper which provides API access to\nthe content of the manifest.","extends":"sap.ui.base.Object","Deprecated":false,"name":"sap.ui.core.Manifest","helpDescription":"The Manifest class.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"_preprocess(\n\t{\n\t\tresolveUI5Urls: ${bResolveUI5Urls}, // boolean\n\t\ti18nProperties: [${i18nProperties}] // array\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Manifest._preprocess","description":"_preprocess(args)","helpDescription":"Generic preprocessing function. Current features: - resolve \"ui5://...\" urls. - collect \"i18n placeholder properties\"","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"load(\n\t{\n\t\tmanifestUrl: \"${manifestUrl}\", // string\n\t\tcomponentName: \"${componentName}\", // string\n\t\tasync: ${bAsync}, // boolean\n\t\tfailOnError: ${bFailOnError}, // boolean\n\t\tprocessJson: ${fn_processJson}, // function\n\t\tactiveTerminologies: [${activeTerminologies}] // string[]\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.Manifest.load","description":"load(mOptions) : sap.ui.core.Manifest|Promise<sap.ui.core.Manifest>","helpDescription":"Function to load the manifest by URL","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.Message(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\ttext: \"${text}\", // string\n\t\ttimestamp: \"${timestamp}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tlevel: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\treadOnly: ${bReadOnly} // boolean\n\t}\n)\n","static":"true","prefix":"Message","Experimental":false,"module":"sap/ui/core/Message","description":"Message(sId?, mSettings?) : sap.ui.core.Message","constructorDescription":"Constructor for a new Message.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getLevel level} : sap.ui.core.MessageType (default: None)<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":true,"name":"sap.ui.core.Message","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 Please use {@link sap.ui.core.message.Message} instead.<br>This element is used to provide messages.\n\nRendering must be done within the control that uses this kind of element. Its default level is none.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Please use {@link sap.ui.core.message.Message} instead.","since":"1.120"}},{"template":"new sap.ui.core.Placeholder(\n\t{\n\t\thtml: \"${html}\" // string\n\t}\n)\n","static":"true","prefix":"Placeholder","Experimental":false,"module":"sap/ui/core/Placeholder","description":"Placeholder(mParameters) : sap.ui.core.Placeholder","constructorDescription":"Creates a Placeholder instance. A path to a '.html' file containing the placeholder HTML content\nmust be provided.\n\nNote: As normal '.html' files are not bundled automatically, it is recommended to use an HTMLFragment\ndefinition ('.fragment.html') instead.","extends":"sap.ui.base.Object","Deprecated":false,"name":"sap.ui.core.Placeholder","helpDescription":"Represents a placeholder and its HTML content.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.ScrollBar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvertical: ${bVertical}, // boolean\n\t\tscrollPosition: ${scrollPosition}, // int\n\t\tsize: ${size}, // sap.ui.core.CSSSize\n\t\tcontentSize: ${contentSize}, // sap.ui.core.CSSSize\n\t\tsteps: ${steps}, // int\n\t\tscroll: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ScrollBar","Experimental":false,"module":"sap/ui/core/ScrollBar","description":"ScrollBar(sId?, mSettings?) : sap.ui.core.ScrollBar","constructorDescription":"Constructor for a new ScrollBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVertical vertical} : boolean (default: true)<\/li>\n<li>{@link #getScrollPosition scrollPosition} : int<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentSize contentSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSteps steps} : int<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:scroll scroll} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":true,"name":"sap.ui.core.ScrollBar","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 the concept has been discarded.<br>The ScrollBar control can be used for virtual scrolling of a certain area. This means: to simulate a very large scrollable area when technically the area is small and the control takes care of displaying the respective part only. E.g. a Table control can take care of only rendering the currently visible rows and use this ScrollBar control to make the user think he actually scrolls through a long list.","category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"the concept has been discarded.","since":"1.56"}},{"template":"fireScroll(\n\t{\n\t\taction: ${action}, // sap.ui.core.ScrollBarAction\n\t\tforward: ${bForward}, // boolean\n\t\tnewScrollPos: ${newScrollPos}, // int\n\t\toldScrollPos: ${oldScrollPos} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.ScrollBar.fireScroll","description":"fireScroll(mParameters?) : sap.ui.core.ScrollBar","helpDescription":"Fires event {@link #event:scroll scroll} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"the concept has been discarded.","since":"1.56"}},{"template":"new sap.ui.core.SeparatorItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\" // string\n\t}\n)\n","static":"true","prefix":"SeparatorItem","Experimental":false,"module":"sap/ui/core/SeparatorItem","description":"SeparatorItem(sId?, mSettings?) : sap.ui.core.SeparatorItem","constructorDescription":"Constructor for a new SeparatorItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Item#constructor sap.ui.core.Item} can be used.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.ui.core.SeparatorItem","helpDescription":"An item that provides a visual separation. It borrows all its methods from the classes sap.ui.core.Item, sap.ui.core.Element, sap.ui.base.EventProvider, and sap.ui.base.Object.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.Title(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\ttext: \"${text}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tlevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\temphasized: ${bEmphasized} // boolean\n\t}\n)\n","static":"true","prefix":"Title","Experimental":false,"module":"sap/ui/core/Title","description":"Title(sId?, mSettings?) : sap.ui.core.Title","constructorDescription":"Constructor for a new Title.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getLevel level} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.ui.core.Title","helpDescription":"Represents a title element that can be used for aggregation with other controls.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.TooltipBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\topenDuration: ${200}, // int\n\t\tcloseDuration: ${200}, // int\n\t\tmyPosition: ${\"begin top\"}, // sap.ui.core.Dock\n\t\tatPosition: ${\"begin bottom\"}, // sap.ui.core.Dock\n\t\toffset: ${\"10 3\"}, // string\n\t\tcollision: ${sap.ui.core.Collision.flip}, // sap.ui.core.Collision\n\t\topenDelay: ${500}, // int\n\t\tcloseDelay: ${100}, // int\n\t\tclosed: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TooltipBase","Experimental":false,"module":"sap/ui/core/TooltipBase","description":"TooltipBase(sId?, mSettings?) : sap.ui.core.TooltipBase","constructorDescription":"Constructor for a new TooltipBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getOpenDuration openDuration} : int (default: 200)<\/li>\n<li>{@link #getCloseDuration closeDuration} : int (default: 200)<\/li>\n<li>{@link #getMyPosition myPosition} : sap.ui.core.Dock (default: 'begin top')<\/li>\n<li>{@link #getAtPosition atPosition} : sap.ui.core.Dock (default: 'begin bottom')<\/li>\n<li>{@link #getOffset offset} : string (default: '10 3')<\/li>\n<li>{@link #getCollision collision} : sap.ui.core.Collision (default: 'flip')<\/li>\n<li>{@link #getOpenDelay openDelay} : int (default: 500)<\/li>\n<li>{@link #getCloseDelay closeDelay} : int (default: 100)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.core.TooltipBase","helpDescription":"Abstract class that can be extended in order to implement any extended tooltip. For example, RichTooltip Control is based on it. It provides the opening/closing behavior and the main \"text\" property.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.UIComponent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcomponentData: ${componentData} // any\n\t}\n)\n","static":"true","prefix":"UIComponent","Experimental":false,"module":"sap/ui/core/UIComponent","description":"UIComponent(sId?, mSettings?) : sap.ui.core.UIComponent","constructorDescription":"As <code>UIComponent<\/code> is an abstract base class for UI components, applications should not call the constructor.\nFor many use cases the static {@link sap.ui.core.Component.create Component.create} factory can be used to instantiate a <code>UIComponent<\/code>.\nDepending on the requirements, the framework also provides other ways to instantiate a <code>UIComponent<\/code>, documented under the\n{@link topic:958ead51e2e94ab8bcdc90fb7e9d53d0 \"Component\"} chapter.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there. See {@link sap.ui.core.Component}\nfor a general description of this argument.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Component#constructor sap.ui.core.Component}\ncan be used as well.","extends":"sap.ui.core.Component","Deprecated":false,"name":"sap.ui.core.UIComponent","helpDescription":"Base Class for UIComponent.\n\nIf you are extending a UIComponent make sure you read the {@link #.extend} documentation since the metadata is special.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"extend(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.core.Component.MetadataOptions\n\t},\n\t\"${FNMetaImpl}\" // function\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.UIComponent.extend","description":"extend(sClassName, oClassInfo?, FNMetaImpl?) : function","helpDescription":"Creates a new subclass of class <code>sap.ui.core.UIComponent<\/code> with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>. <code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.VariantLayoutData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tmultipleLayoutData: [${multipleLayoutData}] // sap.ui.core.LayoutData[]\n\t}\n)\n","static":"true","prefix":"VariantLayoutData","Experimental":false,"module":"sap/ui/core/VariantLayoutData","description":"VariantLayoutData(sId?, mSettings?) : sap.ui.core.VariantLayoutData","constructorDescription":"Constructor for a new VariantLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getMultipleLayoutData multipleLayoutData} : sap.ui.core.LayoutData[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","extends":"sap.ui.core.LayoutData","Deprecated":false,"name":"sap.ui.core.VariantLayoutData","helpDescription":"Allows to add multiple LayoutData to one control in case that an easy switch of layouts (e.g. in a Form) is needed.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.delegate.ScrollEnablement(\n\t\"${oControl}\", // sap.ui.core.Control\n\t\"${sScrollContentDom}\", // string\n\t{\n\t\thorizontal: ${bHorizontal}, // boolean\n\t\tvertical: ${bVertical}, // boolean\n\t\tzynga: ${bZynga}, // boolean\n\t\tiscroll: ${bIscroll}, // boolean\n\t\tpreventDefault: ${bPreventDefault}, // boolean\n\t\tnonTouchScrolling: ${bNonTouchScrolling}, // boolean\n\t\tscrollContainerId: \"${scrollContainerId}\", // string\n\t\tcallBefore: ${bCallBefore} // boolean\n\t}\n)\n","static":"true","prefix":"ScrollEnablement","Experimental":false,"module":"sap/ui/core/delegate/ScrollEnablement","description":"ScrollEnablement(oControl, sScrollContentDom, oConfig) : sap.ui.core.delegate.ScrollEnablement","constructorDescription":"Creates a ScrollEnablement delegate that can be attached to Controls requiring\ncapabilities for scrolling of a certain part of their DOM.","extends":"sap.ui.base.Object","Deprecated":false,"name":"sap.ui.core.delegate.ScrollEnablement","helpDescription":"Delegate for touch scrolling on mobile devices.\n\nThis delegate uses native scrolling of mobile and desktop browsers. Third party scrolling libraries are not supported.\n\nControls that implement ScrollEnablement should additionally provide the getScrollDelegate method that returns the current instance of this delegate object","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.dnd.DragDropBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tgroupName: \"${groupName}\", // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\tkeyboardHandling: ${bKeyboardHandling} // boolean\n\t}\n)\n","static":"true","prefix":"DragDropBase","Experimental":false,"module":"sap/ui/core/dnd/DragDropBase","description":"DragDropBase(sId?, mSettings?) : sap.ui.core.dnd.DragDropBase","constructorDescription":"Constructor for a new DragDropBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupName groupName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getKeyboardHandling keyboardHandling} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.ui.core.dnd.DragDropBase","helpDescription":"Provides the base class for all drag-and-drop configurations. This feature enables a native HTML5 drag-and-drop API for the controls, therefore it is limited to browser support. <h3>Restrictions<\/h3> <ul> <li>There is no accessible alternative for drag and drop. Applications which use the drag-and-drop functionality must provide an accessible alternative UI (for example, action buttons or menus) to perform the same operations.<\/li> <li>Transparency of the drag ghost element and the cursor during drag-and-drop operations depends on the browser implementation.<\/li> <li>Constraining a drag position is not possible, therefore there is no snap-to-grid or snap-to-element feature possible.<\/li> <li>Texts in draggable controls cannot be selected.<\/li> <li>The text of input fields in draggable controls can be selected, but not dragged.<\/li> <\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.dnd.DragDropInfo(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tgroupName: \"${groupName}\", // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\tkeyboardHandling: ${bKeyboardHandling}, // boolean\n\t\ttargetAggregation: \"${targetAggregation}\", // string\n\t\tdropEffect: ${sap.ui.core.dnd.DropEffect.Move}, // sap.ui.core.dnd.DropEffect\n\t\tdropPosition: ${sap.ui.core.dnd.DropPosition.On}, // sap.ui.core.dnd.DropPosition\n\t\tdropLayout: ${sap.ui.core.dnd.DropLayout.Default}, // sap.ui.core.dnd.DropLayout\n\t\tdragEnter: [function (oEvent) {}, this], // function|array\n\t\tdragOver: [function (oEvent) {}, this], // function|array\n\t\tdrop: [function (oEvent) {}, this], // function|array\n\t\tsourceAggregation: \"${sourceAggregation}\", // string\n\t\ttargetElement: ${targetElement}, // (sap.ui.core.Element|string)\n\t\tdragStart: [function (oEvent) {}, this], // function|array\n\t\tdragEnd: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DragDropInfo","Experimental":false,"module":"sap/ui/core/dnd/DragDropInfo","description":"DragDropInfo(sId?, mSettings?) : sap.ui.core.dnd.DragDropInfo","constructorDescription":"Constructor for a new DragDropInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSourceAggregation sourceAggregation} : string<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTargetElement targetElement} : (sap.ui.core.ID | sap.ui.core.Element)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragStart dragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragEnd dragEnd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DropInfo#constructor sap.ui.core.dnd.DropInfo}\ncan be used as well.","extends":"sap.ui.core.dnd.DropInfo","Deprecated":false,"name":"sap.ui.core.dnd.DragDropInfo","helpDescription":"Provides the configuration for drag-and-drop operations.\n\n<b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.dnd.DragInfo(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tgroupName: \"${groupName}\", // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\tkeyboardHandling: ${bKeyboardHandling}, // boolean\n\t\tsourceAggregation: \"${sourceAggregation}\", // string\n\t\tdragStart: [function (oEvent) {}, this], // function|array\n\t\tdragEnd: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DragInfo","Experimental":false,"module":"sap/ui/core/dnd/DragInfo","description":"DragInfo(sId?, mSettings?) : sap.ui.core.dnd.DragInfo","constructorDescription":"Constructor for a new DragInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSourceAggregation sourceAggregation} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragStart dragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragEnd dragEnd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DragDropBase#constructor sap.ui.core.dnd.DragDropBase}\ncan be used as well.","extends":"sap.ui.core.dnd.DragDropBase","Deprecated":false,"name":"sap.ui.core.dnd.DragInfo","helpDescription":"Provides the configuration for drag operations.\n\n<b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.dnd.DropInfo(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tgroupName: \"${groupName}\", // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\tkeyboardHandling: ${bKeyboardHandling}, // boolean\n\t\ttargetAggregation: \"${targetAggregation}\", // string\n\t\tdropEffect: ${sap.ui.core.dnd.DropEffect.Move}, // sap.ui.core.dnd.DropEffect\n\t\tdropPosition: ${sap.ui.core.dnd.DropPosition.On}, // sap.ui.core.dnd.DropPosition\n\t\tdropLayout: ${sap.ui.core.dnd.DropLayout.Default}, // sap.ui.core.dnd.DropLayout\n\t\tdragEnter: [function (oEvent) {}, this], // function|array\n\t\tdragOver: [function (oEvent) {}, this], // function|array\n\t\tdrop: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DropInfo","Experimental":false,"module":"sap/ui/core/dnd/DropInfo","description":"DropInfo(sId?, mSettings?) : sap.ui.core.dnd.DropInfo","constructorDescription":"Constructor for a new DropInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTargetAggregation targetAggregation} : string<\/li>\n<li>{@link #getDropEffect dropEffect} : sap.ui.core.dnd.DropEffect (default: \"Move\")<\/li>\n<li>{@link #getDropPosition dropPosition} : sap.ui.core.dnd.DropPosition (default: \"On\")<\/li>\n<li>{@link #getDropLayout dropLayout} : sap.ui.core.dnd.DropLayout (default: \"Default\")<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragEnter dragEnter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragOver dragOver} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drop drop} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DragDropBase#constructor sap.ui.core.dnd.DragDropBase}\ncan be used as well.","extends":"sap.ui.core.dnd.DragDropBase","Deprecated":false,"name":"sap.ui.core.dnd.DropInfo","helpDescription":"Provides the configuration for drop operations. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"getDateInstance(\n\t{\n\t\tcalendarWeekNumbering: ${calendarWeekNumbering}, // sap.ui.core.date.CalendarWeekNumbering\n\t\tfirstDayOfWeek: ${firstDayOfWeek}, // int\n\t\tminimalDaysInFirstWeek: ${minimalDaysInFirstWeek}, // int\n\t\tformat: \"${format}\", // string\n\t\tpattern: \"${pattern}\", // string\n\t\tstyle: \"${style}\", // string\n\t\tstrictParsing: ${bStrictParsing}, // boolean\n\t\trelative: ${bRelative}, // boolean\n\t\trelativeRange: [${relativeRange}], // int[]\n\t\trelativeScale: \"${relativeScale}\", // string\n\t\trelativeStyle: \"${relativeStyle}\", // string\n\t\tinterval: ${bInterval}, // boolean\n\t\tintervalDelimiter: \"${intervalDelimiter}\", // string\n\t\tsingleIntervalValue: ${bSingleIntervalValue}, // boolean\n\t\tUTC: ${bUTC}, // boolean\n\t\tcalendarType: ${calendarType} // sap.ui.core.CalendarType\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.DateFormat.getDateInstance","description":"getDateInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.DateFormat","helpDescription":"Get a date instance of the DateFormat, which can be used for formatting.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getDateTimeInstance(\n\t{\n\t\tcalendarWeekNumbering: ${calendarWeekNumbering}, // sap.ui.core.date.CalendarWeekNumbering\n\t\tfirstDayOfWeek: ${firstDayOfWeek}, // int\n\t\tminimalDaysInFirstWeek: ${minimalDaysInFirstWeek}, // int\n\t\tformat: \"${format}\", // string\n\t\tpattern: \"${pattern}\", // string\n\t\tstyle: \"${style}\", // string\n\t\tstrictParsing: ${bStrictParsing}, // boolean\n\t\trelative: ${bRelative}, // boolean\n\t\trelativeRange: [${relativeRange}], // int[]\n\t\trelativeScale: \"${relativeScale}\", // string\n\t\trelativeStyle: \"${relativeStyle}\", // string\n\t\tinterval: ${bInterval}, // boolean\n\t\tintervalDelimiter: \"${intervalDelimiter}\", // string\n\t\tsingleIntervalValue: ${bSingleIntervalValue}, // boolean\n\t\tUTC: ${bUTC}, // boolean\n\t\tcalendarType: ${calendarType} // sap.ui.core.CalendarType\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.DateFormat.getDateTimeInstance","description":"getDateTimeInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.DateFormat","helpDescription":"Get a datetime instance of the DateFormat, which can be used for formatting.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getDateTimeWithTimezoneInstance(\n\t{\n\t\tcalendarWeekNumbering: ${calendarWeekNumbering}, // sap.ui.core.date.CalendarWeekNumbering\n\t\tfirstDayOfWeek: ${firstDayOfWeek}, // int\n\t\tminimalDaysInFirstWeek: ${minimalDaysInFirstWeek}, // int\n\t\tformat: \"${format}\", // string\n\t\tpattern: \"${pattern}\", // string\n\t\tshowDate: ${bShowDate}, // boolean\n\t\tshowTime: ${bShowTime}, // boolean\n\t\tshowTimezone: ${bShowTimezone}, // boolean\n\t\tstyle: \"${style}\", // string\n\t\tstrictParsing: ${bStrictParsing}, // boolean\n\t\trelative: ${bRelative}, // boolean\n\t\trelativeRange: [${relativeRange}], // int[]\n\t\trelativeScale: \"${relativeScale}\", // string\n\t\trelativeStyle: \"${relativeStyle}\", // string\n\t\tcalendarType: ${calendarType} // sap.ui.core.CalendarType\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.DateFormat.getDateTimeWithTimezoneInstance","description":"getDateTimeWithTimezoneInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.DateFormat.DateTimeWithTimezone","helpDescription":"Get a datetimeWithTimezone instance of the DateFormat, which can be used for formatting.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getTimeInstance(\n\t{\n\t\tcalendarWeekNumbering: ${calendarWeekNumbering}, // sap.ui.core.date.CalendarWeekNumbering\n\t\tfirstDayOfWeek: ${firstDayOfWeek}, // int\n\t\tminimalDaysInFirstWeek: ${minimalDaysInFirstWeek}, // int\n\t\tformat: \"${format}\", // string\n\t\tpattern: \"${pattern}\", // string\n\t\tstyle: \"${style}\", // string\n\t\tstrictParsing: ${bStrictParsing}, // boolean\n\t\trelative: ${bRelative}, // boolean\n\t\trelativeRange: [${relativeRange}], // int[]\n\t\trelativeScale: \"${relativeScale}\", // string\n\t\trelativeStyle: \"${relativeStyle}\", // string\n\t\tinterval: ${bInterval}, // boolean\n\t\tintervalDelimiter: \"${intervalDelimiter}\", // string\n\t\tsingleIntervalValue: ${bSingleIntervalValue}, // boolean\n\t\tUTC: ${bUTC}, // boolean\n\t\tcalendarType: ${calendarType} // sap.ui.core.CalendarType\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.DateFormat.getTimeInstance","description":"getTimeInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.DateFormat","helpDescription":"Get a time instance of the DateFormat, which can be used for formatting.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getInstance(\n\t{\n\t\tbinaryFilesize: ${bBinaryFilesize} // boolean\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.FileSizeFormat.getInstance","description":"getInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.FileSizeFormat","helpDescription":"Get an instance of the FileSizeFormat, which can be used for formatting.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getCurrencyInstance(\n\t{\n\t\tcurrencyCode: ${bCurrencyCode}, // boolean\n\t\tcurrencyContext: \"${currencyContext}\", // string\n\t\tcustomCurrencies: ${customCurrencies}, // Object<string,object>\n\t\tdecimalPadding: ${decimalPadding}, // int\n\t\tdecimals: ${decimals}, // int\n\t\tdecimalSeparator: \"${decimalSeparator}\", // string\n\t\temptyString: ${emptyString}, // null|number|string\n\t\tgroupingBaseSize: ${groupingBaseSize}, // int\n\t\tgroupingEnabled: ${bGroupingEnabled}, // boolean\n\t\tgroupingSeparator: \"${groupingSeparator}\", // string\n\t\tgroupingSize: ${groupingSize}, // int\n\t\tmaxFractionDigits: ${maxFractionDigits}, // int\n\t\tmaxIntegerDigits: ${maxIntegerDigits}, // int\n\t\tminFractionDigits: ${minFractionDigits}, // int\n\t\tminIntegerDigits: ${minIntegerDigits}, // int\n\t\tminusSign: \"${minusSign}\", // string\n\t\tparseAsString: ${bParseAsString}, // boolean\n\t\tpattern: \"${pattern}\", // string\n\t\tplusSign: \"${plusSign}\", // string\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\troundingMode: ${roundingMode}, // sap.ui.core.format.NumberFormat.RoundingMode\n\t\tshortDecimals: ${shortDecimals}, // int\n\t\tshortLimit: ${shortLimit}, // int\n\t\tshortRefNumber: ${shortRefNumber}, // int\n\t\tshowMeasure: ${bShowMeasure}, // boolean\n\t\tshowNumber: ${bShowNumber}, // boolean\n\t\tshowScale: ${bShowScale}, // boolean\n\t\tstrictGroupingValidation: ${bStrictGroupingValidation}, // boolean\n\t\tstyle: \"${style}\", // string\n\t\ttrailingCurrencyCode: ${bTrailingCurrencyCode} // boolean\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.NumberFormat.getCurrencyInstance","description":"getCurrencyInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.NumberFormat","helpDescription":"Get a currency instance of the NumberFormat, which can be used for formatting.\n\n<p> This instance has HALF_AWAY_FROM_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>\n\nThe currency instance supports locally defined custom currency exclusive to the created instance. The following example shows how to use custom currencies (e.g. for Bitcoins): <pre>\nvar oFormat = NumberFormat.getCurrencyInstance({\n    \"currencyCode\": false,\n    \"customCurrencies\": {\n        \"BTC\": {\n            \"symbol\": \"\\u0243\",\n            \"decimals\": 3\n        }\n    }\n});\n\noFormat.format(123.4567, \"BTC\"); // \"Ƀ 123.457\"\n<\/pre>\n\nAs an alternative to using a fixed <code>symbol<\/code> for your custom currencies, you can also provide an ISO-Code. The provided ISO-Code will be used to look up the currency symbol in the global configuration, either defined in the CLDR or custom defined on the Format Settings (see {@link module:sap/base/i18n/Formatting.setCustomCurrencies Formatting.setCustomCurrencies}, {@link module:sap/base/i18n/Formatting.addCustomCurrencies Formatting.addCustomCurrencies}).\n\nIf no symbol is given at all, the custom currency key is used for formatting.\n\n<pre>\nvar oFormat = NumberFormat.getCurrencyInstance({\n    \"currencyCode\": false,\n    \"customCurrencies\": {\n        \"MyDollar\": {\n            \"isoCode\": \"USD\",\n            \"decimals\": 3\n        },\n        \"Bitcoin\": {\n            \"decimals\": 2\n        }\n    }\n});\n\n// symbol looked up from global configuration\noFormat.format(123.4567, \"MyDollar\"); // \"$123.457\"\n\n// no symbol available, custom currency key is rendered\noFormat.format(777.888, \"Bitcoin\"); // \"Bitcoin 777.89\"\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getFloatInstance(\n\t{\n\t\tdecimalPadding: ${decimalPadding}, // int\n\t\tdecimals: ${decimals}, // int\n\t\tdecimalSeparator: \"${decimalSeparator}\", // string\n\t\temptyString: ${emptyString}, // null|number|string\n\t\tgroupingBaseSize: ${groupingBaseSize}, // int\n\t\tgroupingEnabled: ${bGroupingEnabled}, // boolean\n\t\tgroupingSeparator: \"${groupingSeparator}\", // string\n\t\tgroupingSize: ${groupingSize}, // int\n\t\tmaxFractionDigits: ${maxFractionDigits}, // int\n\t\tmaxIntegerDigits: ${maxIntegerDigits}, // int\n\t\tminFractionDigits: ${minFractionDigits}, // int\n\t\tminIntegerDigits: ${minIntegerDigits}, // int\n\t\tminusSign: \"${minusSign}\", // string\n\t\tparseAsString: ${bParseAsString}, // boolean\n\t\tpattern: \"${pattern}\", // string\n\t\tplusSign: \"${plusSign}\", // string\n\t\tprecision: ${precision}, // int\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\troundingMode: ${roundingMode}, // sap.ui.core.format.NumberFormat.RoundingMode\n\t\tshortDecimals: ${shortDecimals}, // int\n\t\tshortLimit: ${shortLimit}, // int\n\t\tshortRefNumber: ${shortRefNumber}, // int\n\t\tshowScale: ${bShowScale}, // boolean\n\t\tstrictGroupingValidation: ${bStrictGroupingValidation}, // boolean\n\t\tstyle: \"${style}\" // string\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.NumberFormat.getFloatInstance","description":"getFloatInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.NumberFormat","helpDescription":"Get a float instance of the NumberFormat, which can be used for formatting.\n\n<p> This instance has HALF_AWAY_FROM_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>\n\nThe following example shows how grouping is done: <pre>\nvar oFormat = NumberFormat.getFloatInstance({\n    \"groupingEnabled\": true,  // grouping is enabled\n    \"groupingSeparator\": '.', // grouping separator is '.'\n    \"groupingSize\": 3,        // the amount of digits to be grouped (here: thousand)\n    \"decimalSeparator\": \",\"   // the decimal separator must be different from the grouping separator\n});\n\noFormat.format(1234.56); // \"1.234,56\"\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getIntegerInstance(\n\t{\n\t\tdecimalPadding: ${decimalPadding}, // int\n\t\tdecimals: ${decimals}, // int\n\t\tdecimalSeparator: \"${decimalSeparator}\", // string\n\t\temptyString: ${emptyString}, // null|number|string\n\t\tgroupingBaseSize: ${groupingBaseSize}, // int\n\t\tgroupingEnabled: ${bGroupingEnabled}, // boolean\n\t\tgroupingSeparator: \"${groupingSeparator}\", // string\n\t\tgroupingSize: ${groupingSize}, // int\n\t\tmaxFractionDigits: ${maxFractionDigits}, // int\n\t\tmaxIntegerDigits: ${maxIntegerDigits}, // int\n\t\tminFractionDigits: ${minFractionDigits}, // int\n\t\tminIntegerDigits: ${minIntegerDigits}, // int\n\t\tminusSign: \"${minusSign}\", // string\n\t\tparseAsString: ${bParseAsString}, // boolean\n\t\tpattern: \"${pattern}\", // string\n\t\tplusSign: \"${plusSign}\", // string\n\t\tprecision: ${precision}, // int\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\troundingMode: ${roundingMode}, // sap.ui.core.format.NumberFormat.RoundingMode\n\t\tshortDecimals: ${shortDecimals}, // int\n\t\tshortLimit: ${shortLimit}, // int\n\t\tshortRefNumber: ${shortRefNumber}, // int\n\t\tshowScale: ${bShowScale}, // boolean\n\t\tstrictGroupingValidation: ${bStrictGroupingValidation}, // boolean\n\t\tstyle: \"${style}\" // string\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.NumberFormat.getIntegerInstance","description":"getIntegerInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.NumberFormat","helpDescription":"Get an integer instance of the NumberFormat, which can be used for formatting.\n\n<p> This instance has TOWARDS_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>\n\nThe following example shows how grouping is done: <pre>\nvar oFormat = NumberFormat.getIntegerInstance({\n    \"groupingEnabled\": true,  // grouping is enabled\n    \"groupingSeparator\": '.', // grouping separator is '.'\n    \"groupingSize\": 3         // the amount of digits to be grouped (here: thousand)\n});\n\noFormat.format(1234); // \"1.234\"\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getPercentInstance(\n\t{\n\t\tdecimalPadding: ${decimalPadding}, // int\n\t\tdecimals: ${decimals}, // int\n\t\tdecimalSeparator: \"${decimalSeparator}\", // string\n\t\temptyString: ${emptyString}, // null|number|string\n\t\tgroupingBaseSize: ${groupingBaseSize}, // int\n\t\tgroupingEnabled: ${bGroupingEnabled}, // boolean\n\t\tgroupingSeparator: \"${groupingSeparator}\", // string\n\t\tgroupingSize: ${groupingSize}, // int\n\t\tmaxFractionDigits: ${maxFractionDigits}, // int\n\t\tmaxIntegerDigits: ${maxIntegerDigits}, // int\n\t\tminFractionDigits: ${minFractionDigits}, // int\n\t\tminIntegerDigits: ${minIntegerDigits}, // int\n\t\tminusSign: \"${minusSign}\", // string\n\t\tparseAsString: ${bParseAsString}, // boolean\n\t\tpattern: \"${pattern}\", // string\n\t\tpercentSign: \"${percentSign}\", // string\n\t\tplusSign: \"${plusSign}\", // string\n\t\tprecision: ${precision}, // int\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\troundingMode: ${roundingMode}, // sap.ui.core.format.NumberFormat.RoundingMode\n\t\tshortDecimals: ${shortDecimals}, // int\n\t\tshortLimit: ${shortLimit}, // int\n\t\tshortRefNumber: ${shortRefNumber}, // int\n\t\tshowScale: ${bShowScale}, // boolean\n\t\tstrictGroupingValidation: ${bStrictGroupingValidation}, // boolean\n\t\tstyle: \"${style}\" // string\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.NumberFormat.getPercentInstance","description":"getPercentInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.NumberFormat","helpDescription":"Get a percent instance of the NumberFormat, which can be used for formatting.\n\n<p> This instance has HALF_AWAY_FROM_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getUnitInstance(\n\t{\n\t\tallowedUnits: [${allowedUnits}], // array\n\t\tcustomUnits: ${customUnits}, // Object<string,object>\n\t\tdecimalPadding: ${decimalPadding}, // int\n\t\tdecimals: ${decimals}, // int\n\t\tdecimalSeparator: \"${decimalSeparator}\", // string\n\t\temptyString: ${emptyString}, // null|number|string\n\t\tgroupingBaseSize: ${groupingBaseSize}, // int\n\t\tgroupingEnabled: ${bGroupingEnabled}, // boolean\n\t\tgroupingSeparator: \"${groupingSeparator}\", // string\n\t\tgroupingSize: ${groupingSize}, // int\n\t\tmaxFractionDigits: ${maxFractionDigits}, // int\n\t\tmaxIntegerDigits: ${maxIntegerDigits}, // int\n\t\tminFractionDigits: ${minFractionDigits}, // int\n\t\tminIntegerDigits: ${minIntegerDigits}, // int\n\t\tminusSign: \"${minusSign}\", // string\n\t\tparseAsString: ${bParseAsString}, // boolean\n\t\tpattern: \"${pattern}\", // string\n\t\tplusSign: \"${plusSign}\", // string\n\t\tprecision: ${precision}, // int\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\troundingMode: ${roundingMode}, // sap.ui.core.format.NumberFormat.RoundingMode\n\t\tshortDecimals: ${shortDecimals}, // int\n\t\tshortLimit: ${shortLimit}, // int\n\t\tshortRefNumber: ${shortRefNumber}, // int\n\t\tshowMeasure: ${bShowMeasure}, // boolean\n\t\tshowNumber: ${bShowNumber}, // boolean\n\t\tshowScale: ${bShowScale}, // boolean\n\t\tstrictGroupingValidation: ${bStrictGroupingValidation}, // boolean\n\t\tstyle: \"${style}\" // string\n\t},\n\t\"${oLocale}\" // sap.ui.core.Locale\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.format.NumberFormat.getUnitInstance","description":"getUnitInstance(oFormatOptions?, oLocale?) : sap.ui.core.format.NumberFormat","helpDescription":"Get a unit instance of the NumberFormat, which can be used for formatting units.\n\n<p> This instance has HALF_AWAY_FROM_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.message.Message(\n\t{\n\t\tid: \"${id}\", // string\n\t\tmessage: \"${message}\", // string\n\t\tdescription: \"${description}\", // string\n\t\tdescriptionUrl: \"${descriptionUrl}\", // string\n\t\tadditionalText: \"${additionalText}\", // string\n\t\ttype: ${type}, // module:sap/ui/core/message/MessageType\n\t\tcode: \"${code}\", // string\n\t\ttechnical: ${bTechnical}, // boolean\n\t\ttechnicalDetails: ${technicalDetails}, // object\n\t\tprocessor: ${processor}, // sap.ui.core.message.MessageProcessor\n\t\ttarget: [${target}], // string|string[]\n\t\tpersistent: ${bPersistent}, // boolean\n\t\tdate: ${date}, // int\n\t\tfullTarget: [${fullTarget}] // string|string[]\n\t}\n)\n","static":"true","extends":"sap.ui.base.Object","Deprecated":false,"prefix":"Message","Experimental":false,"module":"sap/ui/core/message/Message","name":"sap.ui.core.message.Message","description":"Message(mParameters?) : sap.ui.core.message.Message","constructorDescription":"Constructor for a new Message.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireMessageChange(\n\t{\n\t\toldMessages: ${oldMessages}, // sap.ui.core.message.Message\n\t\tnewMessages: ${newMessages} // sap.ui.core.message.Message\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.message.MessageProcessor.fireMessageChange","description":"fireMessageChange(mParameters) : sap.ui.core.message.MessageProcessor","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.115 Use {@link module:sap/ui/core/Messaging.updateMessages} instead<br>Fires event {@link #event:messageChange messageChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link module:sap/ui/core/Messaging.updateMessages} instead","since":"1.115"}},{"template":"create(\n\t{\n\t\tname: \"${name}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.mvc.Controller.create","description":"create(mOptions) : Promise<sap.ui.core.mvc.Controller>","helpDescription":"Creates an instance of controller class.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"loadFragment(\n\t{\n\t\tname: \"${name}\", // string\n\t\taddToDependents: ${bAddToDependents}, // boolean\n\t\tautoPrefixId: ${bAutoPrefixId}, // boolean\n\t\tid: \"${id}\", // string\n\t\ttype: \"${type}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.mvc.Controller.loadFragment","description":"loadFragment(mOptions) : Promise<(sap.ui.core.Control|sap.ui.core.Control[])>","helpDescription":"Loads a Fragment by {@link sap.ui.core.Fragment.load}.\n\nThe fragment content will be added to the <code>dependents<\/code> aggregation of the view by default. This behavior can be suppressed by setting <code>mOptions.addToDependents<\/code> to false.\n\nThe controller is passed to the Fragment by default, so the (event handler) methods referenced in the Fragment will be called on this Controller.\n\nIf the controller has an owner component, it is passed to the fragment content. By default the fragment content will be prefixed with the view ID to avoid duplicate ID issues. The prefixing can be switched off with the <code>autoPrefixId<\/code> option.\n\nWhen <code>autoPrefixId<\/code> is enabled, the fragment content can be accessed by calling {@link sap.ui.core.mvc.Controller.byId}.\n\n<b>Destroy behavior<\/b>: Different scenarios concerning the destruction of the fragment's content exist, of which some must be addressed by the caller, while others are handled automatically. <ul> <li>The controller instance is destroyed before the fragment content creation has finished: In this case, the controller instance takes care of asynchronously destroying the fragment content<\/li> <li>The fragment content is aggregated within a control (e.g. <code>dependents<\/code> aggregation by default): In this case, the content will be destroyed during the regular destroy lifecycle.<\/li> <li>The fragment content is not aggregated within a control: In this case, <em>it must be destroyed manually<\/em> in the exit hook of the controller.<\/li> <\/ul>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.mvc.HTMLView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tcontrollerName: \"${controllerName}\", // string\n\t\tpreprocessors: ${preprocessors}, // Object\n\t\tresourceBundleName: \"${resourceBundleName}\", // string\n\t\tresourceBundleUrl: ${resourceBundleUrl}, // sap.ui.core.URI\n\t\tresourceBundleLocale: \"${resourceBundleLocale}\", // string\n\t\tresourceBundleAlias: \"${resourceBundleAlias}\", // string\n\t\ttype: \"${type}\", // string\n\t\tdefinition: ${definition}, // any\n\t\tviewContent: ${viewContent}, // any\n\t\tviewData: ${viewData}, // any\n\t\tasync: ${bAsync}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tviewName: \"${viewName}\", // string\n\t\tdisplayBlock: ${bDisplayBlock}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tafterInit: [function (oEvent) {}, this], // function|array\n\t\tbeforeExit: [function (oEvent) {}, this], // function|array\n\t\tafterRendering: [function (oEvent) {}, this], // function|array\n\t\tbeforeRendering: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"HTMLView","Experimental":false,"module":"sap/ui/core/mvc/HTMLView","description":"HTMLView(sId?, mSettings?) : sap.ui.core.mvc.HTMLView","constructorDescription":"Constructor for a new <code>HTMLView<\/code>.\n\n<strong>Note:<\/strong> Application code shouldn't call the constructor directly, but rather use the factory\n{@link sap.ui.core.mvc.HTMLView.create HTMLView.create} or {@link sap.ui.core.mvc.View.create View.create}\nwith type {@link sap.ui.core.mvc.ViewType.HTML HTML}. The factory simplifies asynchronous loading of a view\nand future features might be added to the factory only.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used.","extends":"sap.ui.core.mvc.View","Deprecated":true,"name":"sap.ui.core.mvc.HTMLView","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.108 as there are no more known usages of <code>HTMLViews<\/code>, and as the use of HTML as syntax does not bring any advantages over XML. The HTML necessary for the <code>HTMLView<\/code> is not re-used for the HTML of the controls, but is fully replaced.\n\nConsider using {@link sap.ui.core.mvc.XMLView XMLViews} or \"typed views\" (view classes written in JavaScript) instead. For more information, see the documentation on {@link topic:91f27e3e6f4d1014b6dd926db0e91070 View types}.<br>A view defined/constructed by declarative HTML.","category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"as there are no more known usages of <code>HTMLViews<\/code>, and as the use of HTML as syntax does not bring any advantages over XML. The HTML necessary for the <code>HTMLView<\/code> is not re-used for the HTML of the controls, but is fully replaced.\n\nConsider using {@link sap.ui.core.mvc.XMLView XMLViews} or \"typed views\" (view classes written in JavaScript) instead. For more information, see the documentation on {@link topic:91f27e3e6f4d1014b6dd926db0e91070 View types}.","since":"1.108"}},{"template":"create(\n\t{\n\t\tid: \"${id}\", // string\n\t\tviewName: \"${viewName}\", // string\n\t\tdefinition: \"${definition}\", // string\n\t\tcontroller: ${controller} // sap.ui.core.mvc.Controller\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.mvc.HTMLView.create","description":"create(oOptions) : Promise<sap.ui.core.mvc.HTMLView>","helpDescription":"Creates an instance of a declarative HTML view.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"as there are no more known usages of <code>HTMLViews<\/code>, and as the use of HTML as syntax does not bring any advantages over XML. The HTML necessary for the <code>HTMLView<\/code> is not re-used for the HTML of the controls, but is fully replaced.\n\nConsider using {@link sap.ui.core.mvc.XMLView XMLViews} or \"typed views\" (view classes written in JavaScript) instead. For more information, see the documentation on {@link topic:91f27e3e6f4d1014b6dd926db0e91070 View types}.","since":"1.108"}},{"template":"new sap.ui.core.mvc.JSONView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tcontrollerName: \"${controllerName}\", // string\n\t\tpreprocessors: ${preprocessors}, // Object\n\t\tresourceBundleName: \"${resourceBundleName}\", // string\n\t\tresourceBundleUrl: ${resourceBundleUrl}, // sap.ui.core.URI\n\t\tresourceBundleLocale: \"${resourceBundleLocale}\", // string\n\t\tresourceBundleAlias: \"${resourceBundleAlias}\", // string\n\t\ttype: \"${type}\", // string\n\t\tdefinition: ${definition}, // any\n\t\tviewContent: ${viewContent}, // any\n\t\tviewData: ${viewData}, // any\n\t\tasync: ${bAsync}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tviewName: \"${viewName}\", // string\n\t\tdisplayBlock: ${bDisplayBlock}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tafterInit: [function (oEvent) {}, this], // function|array\n\t\tbeforeExit: [function (oEvent) {}, this], // function|array\n\t\tafterRendering: [function (oEvent) {}, this], // function|array\n\t\tbeforeRendering: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"JSONView","Experimental":false,"module":"sap/ui/core/mvc/JSONView","description":"JSONView(sId?, mSettings?) : sap.ui.core.mvc.JSONView","constructorDescription":"Constructor for a new mvc/JSONView.\n\n<strong>Note:<\/strong> Application code shouldn't call the constructor directly, but rather use the factory\n{@link sap.ui.core.mvc.JSONView.create JSONView.create} or {@link sap.ui.core.mvc.View.create View.create}\nwith type {@link sap.ui.core.mvc.ViewType.JSON JSON}. The factory simplifies asynchronous loading of a view\nand future features might be added to the factory only.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used.","extends":"sap.ui.core.mvc.View","Deprecated":true,"name":"sap.ui.core.mvc.JSONView","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 please consider using {@link sap.ui.core.mvc.XMLView XMLViews} or \"typed views\" (view classes written in JavaScript) instead. For more information, see the documentation on {@link topic:91f27e3e6f4d1014b6dd926db0e91070 View types}.<br>A View defined using JSON.","category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"please consider using {@link sap.ui.core.mvc.XMLView XMLViews} or \"typed views\" (view classes written in JavaScript) instead. For more information, see the documentation on {@link topic:91f27e3e6f4d1014b6dd926db0e91070 View types}.","since":"1.120"}},{"template":"create(\n\t{\n\t\tid: \"${id}\", // string\n\t\tviewName: \"${viewName}\", // string\n\t\tdefinition: ${definition}, // string|object\n\t\tcontroller: ${controller} // sap.ui.core.mvc.Controller\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.mvc.JSONView.create","description":"create(oOptions) : Promise<sap.ui.core.mvc.JSONView>","helpDescription":"Creates a JSON view of the given configuration.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please consider using {@link sap.ui.core.mvc.XMLView XMLViews} or \"typed views\" (view classes written in JavaScript) instead. For more information, see the documentation on {@link topic:91f27e3e6f4d1014b6dd926db0e91070 View types}.","since":"1.120"}},{"template":"new sap.ui.core.mvc.JSView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tcontrollerName: \"${controllerName}\", // string\n\t\tpreprocessors: ${preprocessors}, // Object\n\t\tresourceBundleName: \"${resourceBundleName}\", // string\n\t\tresourceBundleUrl: ${resourceBundleUrl}, // sap.ui.core.URI\n\t\tresourceBundleLocale: \"${resourceBundleLocale}\", // string\n\t\tresourceBundleAlias: \"${resourceBundleAlias}\", // string\n\t\ttype: \"${type}\", // string\n\t\tdefinition: ${definition}, // any\n\t\tviewContent: ${viewContent}, // any\n\t\tviewData: ${viewData}, // any\n\t\tasync: ${bAsync}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tviewName: \"${viewName}\", // string\n\t\tdisplayBlock: ${bDisplayBlock}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tafterInit: [function (oEvent) {}, this], // function|array\n\t\tbeforeExit: [function (oEvent) {}, this], // function|array\n\t\tafterRendering: [function (oEvent) {}, this], // function|array\n\t\tbeforeRendering: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"JSView","Experimental":false,"module":"sap/ui/core/mvc/JSView","description":"JSView(sId?, mSettings?) : sap.ui.core.mvc.JSView","constructorDescription":"Constructor for a new <code>JSView<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used.","extends":"sap.ui.core.mvc.View","Deprecated":true,"name":"sap.ui.core.mvc.JSView","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.90 Instead use {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed Views} by defining the view class with {@link sap.ui.core.mvc.View.extend View.extend} and creating the view instances with {@link sap.ui.core.mvc.View.create View.create}.<br>A View defined/constructed by JavaScript code.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.View.create View.create} to create view instances","since":"1.90"}},{"template":"create(\n\t{\n\t\tid: \"${id}\", // string\n\t\tviewName: \"${viewName}\", // string\n\t\tcontroller: ${controller} // sap.ui.core.mvc.Controller\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.mvc.JSView.create","description":"create(oOptions) : Promise<sap.ui.core.mvc.JSView>","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.90 Use {@link sap.ui.core.mvc.View.create View.create} to create view instances<br>Creates an instance of the view with the given name (and id).","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.View.create View.create} to create view instances","since":"1.90"}},{"template":"new sap.ui.core.mvc.TemplateView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tcontrollerName: \"${controllerName}\", // string\n\t\tpreprocessors: ${preprocessors}, // Object\n\t\tresourceBundleName: \"${resourceBundleName}\", // string\n\t\tresourceBundleUrl: ${resourceBundleUrl}, // sap.ui.core.URI\n\t\tresourceBundleLocale: \"${resourceBundleLocale}\", // string\n\t\tresourceBundleAlias: \"${resourceBundleAlias}\", // string\n\t\ttype: \"${type}\", // string\n\t\tdefinition: ${definition}, // any\n\t\tviewContent: ${viewContent}, // any\n\t\tviewData: ${viewData}, // any\n\t\tasync: ${bAsync}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tviewName: \"${viewName}\", // string\n\t\tdisplayBlock: ${bDisplayBlock}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tafterInit: [function (oEvent) {}, this], // function|array\n\t\tbeforeExit: [function (oEvent) {}, this], // function|array\n\t\tafterRendering: [function (oEvent) {}, this], // function|array\n\t\tbeforeRendering: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TemplateView","Experimental":false,"module":"sap/ui/core/mvc/TemplateView","description":"TemplateView(sId?, mSettings?) : sap.ui.core.mvc.TemplateView","constructorDescription":"Constructor for a new mvc/TemplateView.\n\n<strong>Note:<\/strong> Application code shouldn't call the constructor directly, but rather use the\nfactory {@link sap.ui.templateview} or {@link sap.ui.core.mvc.View.create View.create} with type\n{@link sap.ui.core.mvc.ViewType.Template Template}.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used.","extends":"sap.ui.core.mvc.View","Deprecated":true,"name":"sap.ui.core.mvc.TemplateView","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56.0 use {@link sap.ui.core.mvc.XMLView} in combination with {@link topic:5ee619fc1370463ea674ee04b65ed83b XML Templating} instead.<br>A view defined in a template.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use {@link sap.ui.core.mvc.XMLView} in combination with {@link topic:5ee619fc1370463ea674ee04b65ed83b XML Templating} instead.","since":"1.56.0"}},{"template":"new sap.ui.core.mvc.View(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tcontrollerName: \"${controllerName}\", // string\n\t\tpreprocessors: ${preprocessors}, // Object\n\t\tresourceBundleName: \"${resourceBundleName}\", // string\n\t\tresourceBundleUrl: ${resourceBundleUrl}, // sap.ui.core.URI\n\t\tresourceBundleLocale: \"${resourceBundleLocale}\", // string\n\t\tresourceBundleAlias: \"${resourceBundleAlias}\", // string\n\t\ttype: \"${type}\", // string\n\t\tdefinition: ${definition}, // any\n\t\tviewContent: ${viewContent}, // any\n\t\tviewData: ${viewData}, // any\n\t\tasync: ${bAsync}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tviewName: \"${viewName}\", // string\n\t\tdisplayBlock: ${bDisplayBlock}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tafterInit: [function (oEvent) {}, this], // function|array\n\t\tbeforeExit: [function (oEvent) {}, this], // function|array\n\t\tafterRendering: [function (oEvent) {}, this], // function|array\n\t\tbeforeRendering: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"View","Experimental":false,"module":"sap/ui/core/mvc/View","description":"View(sId?, mSettings?) : sap.ui.core.mvc.View","constructorDescription":"Constructor for a new <code>View<\/code>.\n\nAs <code>View<\/code> is an abstract base class for views, applications should not call the constructor,\nbut rather use one of the view factories instead, e.g. {@link #.create View.create}, to create an instance\nof a concrete subclass (e.g. <code>XMLView<\/code>).\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: '100%')<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getViewName viewName} : string<\/li>\n<li>{@link #getDisplayBlock displayBlock} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterInit afterInit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeExit beforeExit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRendering beforeRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.core.mvc.View","helpDescription":"A base class for Views.\n\nIntroduces the relationship to a Controller, some basic visual appearance settings like width and height, and provides lifecycle events.\n\nViews form an ID scope for the elements and controls in their content. They can prefix the IDs of elements either automatically (e.g. XMLView) or programmatically (using {@link #createId}). With method {@link #byId}, elements or controls can be found with their view-local ID. Also see {@link topic:91f28be26f4d1014b6dd926db0e91070 \"Support for Unique IDs\"} in the documentation.\n\n<h3>View Definition<\/h3> A view can be defined by {@link sap.ui.core.mvc.View.extend extending} this class and implementing the {@link #createContent} method. The method must return one or many root controls that will be rendered as content of the view.\n\nViews that are defined that way are referred to as <b>typed views<\/b>, as each view definition is represented by its own class (type). See {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed Views} for further information.\n\n<b>Example:<\/b> Defining a typed view (module 'myapp/views/MainView.js') <pre>\n  // view definition\n  sap.ui.define([\n    \"sap/ui/core/mvc/View\",\n    \"sap/m/Panel\"\n  ], function(View, Panel) {\n\n    return View.extend(\"myapp.views.MainView\", {\n\n      // define, which controller to use\n      getControllerName: function() {\n        return \"myapp.controller.Main\";\n      },\n\n      // whether the ID of content controls should be prefixed automatically with the view's ID\n      getAutoPrefixId: function() {\n        return true; // default is false\n      }\n\n      // create view content and return the root control(s)\n      // or a Promise resolving with the control(s).\n      createContent: function() {\n        return new Promise(function(res, rej) {\n            res(new Panel({...}));\n        }).catch(function(err) {\n            rej(err);\n        });\n      }\n    });\n  });\n<\/pre>\n\n<h3>View Instantiation<\/h3> The preferred way of instantiating a typed view is via the generic factory {@link sap.ui.core.mvc.View.create View.create}.\n\nWhen the <code>viewName<\/code> starts with prefix <code>\"module:\"<\/code>, the remainder of the name is assumed to be the name of a module that exports a typed view (a subclass of <code>View<\/code>). The module name must use the same syntax as for <code>sap.ui.define/sap.ui.require<\/code> (slash-separated name without '.js' suffix).\n\n<b>Example:<\/b> Instantiating a typed view with <code>View.create<\/code> <pre>\n  View.create({\n    viewName: \"module:myapp/views/MainView\"\n  }).then(oView) {\n    oView.placeAt(\"content\");\n  });\n<\/pre>\n\nA typed view can also be instantiated by calling its constructor without any arguments: <pre>\n  sap.ui.require([\"myapp/views/MainView\"], function(MainView) {\n    new MainView().placeAt(\"content\");\n  });\n<\/pre>\n\n<h3>Other Methods<\/h3> Besides <code>createContent<\/code>, there are two other methods that a view can implement: Method {@link #getControllerName getControllerName} defines the name of the controller that should be instantiated and used for the view. The name must be in class name notation (dot notation), without the <code>\".controller\"<\/code> suffix. The suffix will be added by the framework when loading the module containing the controller.\n\n{@link #getAutoPrefixId getAutoPrefixId} defines whether the IDs of controls created during the execution of <code>createContent<\/code> will be prefixed with the ID of the view automatically. The default implementation of this method returns <code>false<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"create(\n\t{\n\t\tid: \"${id}\", // string\n\t\tviewName: \"${viewName}\", // string\n\t\tdefinition: ${definition}, // any\n\t\ttype: ${type}, // sap.ui.core.mvc.ViewType\n\t\tviewData: ${viewData}, // any\n\t\tpreprocessors: ${preprocessors}, // object\n\t\tcontroller: ${controller} // sap.ui.core.mvc.Controller\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.mvc.View.create","description":"create(oOptions) : Promise<sap.ui.core.mvc.View>","helpDescription":"Creates a view of the given type, name and with the given ID.\n\nIf the option <code>viewName<\/code> is given, the corresponding view module is loaded if needed.\n\nWhen the <code>viewName<\/code> starts with prefix <code>\"module:\"<\/code>, the remainder of the name is assumed to be the name of a module that exports a typed view (subclass of <code>View<\/code>). The module name must use the same syntax as for <code>sap.ui.define/sap.ui.require<\/code> (slash-separated name).","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.mvc.XMLView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tcontrollerName: \"${controllerName}\", // string\n\t\tpreprocessors: ${preprocessors}, // Object\n\t\tresourceBundleName: \"${resourceBundleName}\", // string\n\t\tresourceBundleUrl: ${resourceBundleUrl}, // sap.ui.core.URI\n\t\tresourceBundleLocale: \"${resourceBundleLocale}\", // string\n\t\tresourceBundleAlias: \"${resourceBundleAlias}\", // string\n\t\ttype: \"${type}\", // string\n\t\tdefinition: ${definition}, // any\n\t\tviewContent: ${viewContent}, // any\n\t\tviewData: ${viewData}, // any\n\t\tasync: ${bAsync}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tviewName: \"${viewName}\", // string\n\t\tdisplayBlock: ${bDisplayBlock}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tafterInit: [function (oEvent) {}, this], // function|array\n\t\tbeforeExit: [function (oEvent) {}, this], // function|array\n\t\tafterRendering: [function (oEvent) {}, this], // function|array\n\t\tbeforeRendering: [function (oEvent) {}, this], // function|array\n\t\tcache: ${cache} // Object\n\t}\n)\n","static":"true","prefix":"XMLView","Experimental":false,"module":"sap/ui/core/mvc/XMLView","description":"XMLView(sId?, mSettings?) : sap.ui.core.mvc.XMLView","constructorDescription":"Constructor for a new <code>XMLView<\/code>.\n\n<strong>Note:<\/strong> Application code shouldn't call the constructor directly, but rather use the factory\n{@link sap.ui.core.mvc.XMLView.create XMLView.create} or {@link sap.ui.core.mvc.View.create View.create}\nwith type {@link sap.ui.core.mvc.ViewType.XML XML}. The factory provides more features than the\nconstructor (e.g. caching and preprocessing) and simplifies asynchronous loading of a view.\nFuture features might only be available when using the factory.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used.","extends":"sap.ui.core.mvc.View","Deprecated":false,"name":"sap.ui.core.mvc.XMLView","helpDescription":"A View defined using XML and, optionally, pure HTML markup.\n\n<strong>Note:<\/strong><br> Be aware that modifications of the content aggregation of this control are not supported due to technical reasons. This includes calls to all content modifying methods like <code>addContent><\/code> etc., but also the implicit removal of controls contained by the content aggregation. For example the destruction of a Control via the <code> destroy<\/code> method. All functions can be called but may not work properly or lead to unexpected side effects.\n\n<strong>Note:<\/strong><br> The XML view offers special handling for context binding and style classes. You can specify them via the <code>binding<\/code> and <code>class<\/code> attributes on a control's XML node. Please be aware that these attributes are not properties of the respective controls and thus are not supported by a control's constructor. For more information, see {@link topic:91f05e8b6f4d1014b6dd926db0e91070 Context Binding (Element Binding)} and {@link topic:b564935324f449209354c7e2f9903f22 Using CSS Style Sheets in XML Views}.\n\n<strong>Note:<\/strong><br> When the content aggregation of this control is bound, no HTML markup is allowed in the binding template of the bound content aggregation. An error will be thrown when the above combination is detected.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"create(\n\t{\n\t\tid: \"${id}\", // string\n\t\tviewName: \"${viewName}\", // string\n\t\tdefinition: ${definition}, // string|Document\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tcache: ${cache}, // object\n\t\tpreprocessors: ${preprocessors} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.mvc.XMLView.create","description":"create(oOptions) : Promise<sap.ui.core.mvc.XMLView>","helpDescription":"Instantiates an XMLView from the given configuration options.\n\nIf a <code>viewName<\/code> is given, it must be a dot-separated name of an XML view resource (without the mandatory suffix \".view.xml\"). The resource will be loaded asynchronously via the module system (preload caches might apply) and will be parsed as XML. Alternatively, an already loaded view <code>definition<\/code> can be provided, either as XML string or as an already parsed XML document. Exactly one of <code>viewName<\/code> or <code>definition<\/code> must be given, if none or both are given, an error will be reported.\n\nThe <code>controller<\/code> property is optional and can hold a controller instance. When given, it overrides the controller class defined in the view definition.\n\n<strong>Note<\/strong>: On root level, you can only define content for the default aggregation, e.g. without adding the <code>&lt;content&gt;<\/code> tag. If you want to specify content for another aggregation of a view like <code>dependents<\/code>, place it in a child control's <code>dependents<\/code> aggregation or add it by using {@link sap.ui.core.mvc.XMLView#addDependent}.\n\n<strong>Note<\/strong>: If you enable caching, you need to take care of the invalidation via keys. Automatic invalidation takes only place if the UI5 version or the component descriptor (manifest.json) change. This is still an experimental feature and may experience slight changes of the invalidation parameters or the cache key format.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"delWithFilters(\n\t{\n\t\tprefix: \"${prefix}\", // string\n\t\tolderThan: ${olderThan} // Date\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/cache/CacheManager","name":"sap.ui.core.cache.CacheManager.delWithFilters","description":"delWithFilters(filters?) : Promise","helpDescription":"Deletes entries, filtered using several criteria.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireError(\n\t{\n\t\tsErrorMessage: \"${sErrorMessage}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.hyphenation.Hyphenation.fireError","description":"fireError(mParameters?) : sap.ui.core.hyphenation.Hyphenation","helpDescription":"Fires event {@link #event:error error} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"publish(\n\t{\n\t\ttarget: ${target}, // Window\n\t\torigin: \"${origin}\", // string\n\t\tchannelId: \"${channelId}\", // string\n\t\teventId: \"${eventId}\", // string\n\t\tdata: ${data} // *\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.postmessage.Bus.publish","description":"publish(mParameters)","helpDescription":"Publish message into cross-window communication channel","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.routing.Router(\n\t\"${oRoutes}\", // Object<string,sap.ui.core.routing.$RouteSettings>|sap.ui.core.routing.$RouteSettings[]\n\t{\n\t\tbypassed: ${bypassed}, // object\n\t\tasync: ${bAsync} // boolean\n\t},\n\t\"${oOwner}\", // sap.ui.core.UIComponent\n\t\"${oTargetsConfig}\" // Object<string,sap.ui.core.routing.$TargetSettings>\n)\n","static":"true","extends":"sap.ui.base.EventProvider","Deprecated":false,"prefix":"Router","Experimental":false,"module":"sap/ui/core/routing/Router","name":"sap.ui.core.routing.Router","description":"Router(oRoutes?, oConfig?, oOwner?, oTargetsConfig?) : sap.ui.core.routing.Router","constructorDescription":"Instantiates a router","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"navTo(\n\t\"${sName}\", // string\n\t\"${oParameters}\", // object\n\t{\n\t\tanyName: ${anyName} // object\n\t},\n\t\"${bReplace}\" // boolean\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.routing.Router.navTo","description":"navTo(sName, oParameters?, oComponentTargetInfo?, bReplace?) : sap.ui.core.routing.Router","helpDescription":"Navigates to a specific route defining a set of parameters.\n\nThe parameters will be URI encoded - the characters ; , / ? : @ & = + $ are reserved and will not be encoded. If you want to use special characters in your <code>oParameters<\/code>, you have to encode them (encodeURIComponent).\n\nIf the given route name can't be found, an error message is logged to the console and the hash will be changed to the empty string.\n\nThis method excecutes following steps: 1. Interpolates the pattern with the given parameters 2. Sets the interpolated pattern to the browser's hash 3. Reacts to the browser's <code>hashchange<\/code> event to find out the route which matches the hash\n\nIf there are multiple routes that have the same pattern, the call of navTo with a specific route won't necessarily trigger the matching process of this route. In the end, the first route in the router configuration list that matches the browser hash will be chosen.\n\nIf the browser hash is already set with the interpolated pattern from the navTo call, nothing will happen because the browser won't fire <code>hashchange<\/code> event in this case.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"_beforePlacingViewIntoContainer(\n\t{\n\t\tcontainer: ${container}, // sap.ui.core.Control\n\t\tview: ${view}, // sap.ui.core.Control\n\t\tdata: ${data} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.routing.Target._beforePlacingViewIntoContainer","description":"_beforePlacingViewIntoContainer(mArguments)","helpDescription":"This function is called between the target view is loaded and the view is added to the container.\n\nThis function can be used for applying modification on the view or the container to make the rerendering occur together with the later aggregation change.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.routing.Targets(\n\t{\n\t\tviews: ${views}, // sap.ui.core.routing.Views\n\t\tconfig: ${config}, // object\n\t\ttargets: ${targets} // Object<string,sap.ui.core.routing.$TargetSettings>\n\t}\n)\n","static":"true","prefix":"Targets","Experimental":false,"module":"sap/ui/core/routing/Targets","description":"Targets(oOptions) : sap.ui.core.routing.Targets","constructorDescription":"Constructor for a new Targets class.","extends":"sap.ui.base.EventProvider","Deprecated":false,"name":"sap.ui.core.routing.Targets","helpDescription":"Provides a convenient way for placing views into the correct containers of your application.\n\nThe main benefit of <code>Targets<\/code> is lazy loading: you do not have to create the views until you really need them. If you are using the mobile library, please use {@link sap.m.routing.Targets} instead of this class.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.routing.Views(\n\t{\n\t\tcomponent: ${component}, // sap.ui.core.UIComponent\n\t\tasync: ${bAsync} // boolean\n\t}\n)\n","static":"true","extends":"sap.ui.base.EventProvider","Deprecated":false,"prefix":"Views","Experimental":false,"module":"sap/ui/core/routing/Views","name":"sap.ui.core.routing.Views","description":"Views(oOptions?) : sap.ui.core.routing.Views","constructorDescription":"Instantiates a view repository that creates and caches views. If it is destroyed, all the Views it created are destroyed.\nUsually you do not have to create instances of this class, it is used by the {@link sap.ui.core.routing.Router}.\nIf you are using {@link sap.ui.core.routing.Targets} without using a {@link sap.ui.core.UIComponent} you have to create an instance of this class.\nThey will create an instance on their own, or if they are used with a {@link sap.ui.core.UIComponent} they will share the same instance of Views.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"getView(\n\t{\n\t\tviewName: \"${viewName}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.routing.Views.getView","description":"getView(oOptions) : Promise<sap.ui.core.mvc.View>","helpDescription":"Returns a cached view, for a given name. If it does not exist yet, it will create the view with the provided options. If you provide a viewId, it will be prefixed with the viewId of the component.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.search.OpenSearchProvider(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\ticon: \"${icon}\", // string\n\t\tsuggestUrl: ${suggestUrl}, // sap.ui.core.URI\n\t\tsuggestType: ${\"json\"} // string\n\t}\n)\n","static":"true","prefix":"OpenSearchProvider","Experimental":false,"module":"sap/ui/core/search/OpenSearchProvider","description":"OpenSearchProvider(sId?, mSettings?) : sap.ui.core.search.OpenSearchProvider","constructorDescription":"Constructor for a new search/OpenSearchProvider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSuggestUrl suggestUrl} : sap.ui.core.URI<\/li>\n<li>{@link #getSuggestType suggestType} : string (default: 'json')<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.search.SearchProvider#constructor sap.ui.core.search.SearchProvider}\ncan be used as well.","extends":"sap.ui.core.search.SearchProvider","Deprecated":true,"name":"sap.ui.core.search.OpenSearchProvider","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 There is no API replacement.<br>A SearchProvider which uses the OpenSearch protocol (either JSON or XML).","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"There is no API replacement.","since":"1.120"}},{"template":"new sap.ui.core.search.SearchProvider(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\ticon: \"${icon}\" // string\n\t}\n)\n","static":"true","prefix":"SearchProvider","Experimental":false,"module":"sap/ui/core/search/SearchProvider","description":"SearchProvider(sId?, mSettings?) : sap.ui.core.search.SearchProvider","constructorDescription":"Constructor for a new search/SearchProvider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":true,"name":"sap.ui.core.search.SearchProvider","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.120 There is no API replacement.<br>Abstract base class for all SearchProviders which can be e.g. attached to a SearchField.\n\nDo not create instances of this class, but use a concrete subclass instead.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"There is no API replacement.","since":"1.120"}},{"template":"createInstance(\n\t{\n\t\tscopeObject: ${scopeObject}, // object\n\t\tscopeType: \"${scopeType}\", // string\n\t\tsettings: \"${settings}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.service.ServiceFactory.createInstance","description":"createInstance(oServiceContext) : Promise<sap.ui.core.service.Service>","helpDescription":"Creates a new instance of a service. When used as a generic service factory by providing a service constructor function it will create a new service instance otherwise the function will fail. For custom service factories this function has to be overridden and should return a <code>Promise<\/code>.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"get(\n\t{\n\t\tname: [${name}], // string|string[]\n\t\tscopeElement: ${scopeElement}, // sap.ui.core.Element\n\t\tcallback: ${callback} // function(sap.ui.core.theming.Parameters.Value)\n\t},\n\t\"${oElement}\" // sap.ui.core.Element\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/theming/Parameters","name":"sap.ui.core.theming.Parameters.get","description":"get(vName, oElement?) : sap.ui.core.theming.Parameters.Value","helpDescription":"<p> Returns the current value for one or more theming parameters, depending on the given arguments. The synchronous usage of this API has been deprecated and only the asynchronous usage should still be used (see the 4th bullet point and the code examples below). <\/p>\n\n<p> The theming parameters are immutable and cannot be changed at runtime. Multiple <code>Parameters.get()<\/code> API calls for the same parameter name will always result in the same parameter value. <\/p>\n\n<p> The following API variants are available (see also the below examples): <ul> <li> <b>(deprecated since 1.92)<\/b> If no parameter is given a key-value map containing all parameters is returned<\/li> <li> <b>(deprecated since 1.94)<\/b> If a <code>string<\/code> is given as first parameter the value is returned as a <code>string<\/code><\/li> <li> <b>(deprecated since 1.94)<\/b> If an <code>array<\/code> is given as first parameter a key-value map containing all parameters from the <code>array<\/code> is returned<\/li> <li>If an <code>object<\/code> is given as first parameter the result is returned immediately in case all parameters are loaded and available or within the callback in case not all CSS files are already loaded. This is the <b>only asynchronous<\/b> API variant. This variant is the preferred way to retrieve theming parameters. The structure of the return value is the same as listed above depending on the type of the name property within the <code>object<\/code>.<\/li> <\/ul> <\/p>\n\n<p>The returned key-value maps are a copy so changing values in the map does not have any effect<\/p>\n\n<p> Please see the examples below for a detailed guide on how to use the <b>asynchronous variant<\/b> of the API. <\/p>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.tmpl.DOMAttribute(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tname: \"${name}\", // string\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","static":"true","prefix":"DOMAttribute","Experimental":false,"module":"sap/ui/core/tmpl/DOMAttribute","description":"DOMAttribute(sId?, mSettings?) : sap.ui.core.tmpl.DOMAttribute","constructorDescription":"Constructor for a new tmpl/DOMAttribute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":true,"name":"sap.ui.core.tmpl.DOMAttribute","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.<br>Represents a DOM attribute of a DOM element.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.","since":"1.56"}},{"template":"new sap.ui.core.tmpl.DOMElement(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttag: ${\"span\"}, // string\n\t\tattributes: [${attributes}], // sap.ui.core.tmpl.DOMAttribute[]\n\t\telements: [${elements}] // sap.ui.core.tmpl.DOMElement[]\n\t}\n)\n","static":"true","prefix":"DOMElement","Experimental":false,"module":"sap/ui/core/tmpl/DOMElement","description":"DOMElement(sId?, mSettings?) : sap.ui.core.tmpl.DOMElement","constructorDescription":"Constructor for a new tmpl/DOMElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTag tag} : string (default: 'span')<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.ui.core.tmpl.DOMAttribute[] (default)<\/li>\n<li>{@link #getElements elements} : sap.ui.core.tmpl.DOMElement[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":true,"name":"sap.ui.core.tmpl.DOMElement","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.<br>Represents a DOM element. It allows to use databinding for the properties and nested DOM attributes.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.","since":"1.56"}},{"template":"new sap.ui.core.tmpl.HandlebarsTemplate(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcontent: \"${content}\" // string\n\t}\n)\n","static":"true","prefix":"HandlebarsTemplate","Experimental":false,"module":"sap/ui/core/tmpl/HandlebarsTemplate","description":"HandlebarsTemplate(sId?, mSettings?) : sap.ui.core.tmpl.HandlebarsTemplate","constructorDescription":"Creates and initializes a new handlebars template with the given <code>sId<\/code>\nand settings.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.tmpl.Template#constructor sap.ui.core.tmpl.Template} can be used.","extends":"sap.ui.core.tmpl.Template","Deprecated":true,"name":"sap.ui.core.tmpl.HandlebarsTemplate","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.<br>The class for Handlebars Templates.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.","since":"1.56"}},{"template":"new sap.ui.core.tmpl.Template(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcontent: \"${content}\" // string\n\t}\n)\n","static":"true","prefix":"Template","Experimental":false,"module":"sap/ui/core/tmpl/Template","description":"Template(sId?, mSettings?) : sap.ui.core.tmpl.Template","constructorDescription":"Creates and initializes a new template with the given <code>sId<\/code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":true,"name":"sap.ui.core.tmpl.Template","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.<br>Base Class for Template.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.","since":"1.56"}},{"template":"new sap.ui.core.tmpl.TemplateControl(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcontext: ${context}, // object\n\t\ttemplate: ${template}, // (sap.ui.core.tmpl.Template|string)\n\t\tafterRendering: [function (oEvent) {}, this], // function|array\n\t\tbeforeRendering: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TemplateControl","Experimental":false,"module":"sap/ui/core/tmpl/TemplateControl","description":"TemplateControl(sId?, mSettings?) : sap.ui.core.tmpl.TemplateControl","constructorDescription":"Constructor for a new tmpl/TemplateControl.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContext context} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTemplate template} : (sap.ui.core.ID | sap.ui.core.tmpl.Template)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRendering beforeRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":true,"name":"sap.ui.core.tmpl.TemplateControl","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.<br>This is the base class for all template controls. Template controls are declared based on templates.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Use an {@link sap.ui.core.mvc.XMLView XMLView} or a {@link topic:e6bb33d076dc4f23be50c082c271b9f0 Typed View} instead.","since":"1.56"}},{"template":"new sap.ui.core.util.Export(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\texportType: ${exportType}, // sap.ui.core.util.ExportType\n\t\tcolumns: [${columns}], // sap.ui.core.util.ExportColumn[]\n\t\trows: [${rows}] // sap.ui.core.util.ExportRow[]\n\t}\n)\n","static":"true","prefix":"Export","Experimental":false,"module":"sap/ui/core/util/Export","description":"Export(sId?, mSettings?) : sap.ui.core.util.Export","constructorDescription":"Constructor for a new Export.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getExportType exportType} : sap.ui.core.util.ExportType<\/li>\n<li>{@link #getColumns columns} : sap.ui.core.util.ExportColumn[]<\/li>\n<li>{@link #getRows rows} : sap.ui.core.util.ExportRow[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":true,"name":"sap.ui.core.util.Export","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 replaced by the export functionality of the <code>sap.ui.export<\/code> library.<br>Export provides the possibility to generate a list of data in a specific format / type, e.g. CSV to use it in other programs / applications.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"replaced by the export functionality of the <code>sap.ui.export<\/code> library.","since":"1.73"}},{"template":"new sap.ui.core.util.ExportCell(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tcontent: \"${content}\" // string\n\t}\n)\n","static":"true","prefix":"ExportCell","Experimental":false,"module":"sap/ui/core/util/ExportCell","description":"ExportCell(sId?, mSettings?) : sap.ui.core.util.ExportCell","constructorDescription":"Constructor for a new ExportCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":true,"name":"sap.ui.core.util.ExportCell","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 replaced by the export functionality of the <code>sap.ui.export<\/code> library.<br>Contains content that can be used to export data. Used in {@link sap.ui.core.util.ExportColumn ExportColumn} / {@link sap.ui.core.util.Export Export}.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"replaced by the export functionality of the <code>sap.ui.export<\/code> library.","since":"1.73"}},{"template":"new sap.ui.core.util.ExportColumn(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tname: \"${name}\", // string\n\t\ttemplate: ${template} // sap.ui.core.util.ExportCell\n\t}\n)\n","static":"true","prefix":"ExportColumn","Experimental":false,"module":"sap/ui/core/util/ExportColumn","description":"ExportColumn(sId?, mSettings?) : sap.ui.core.util.ExportColumn","constructorDescription":"Constructor for a new ExportColumn.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTemplate template} : sap.ui.core.util.ExportCell<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":true,"name":"sap.ui.core.util.ExportColumn","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 replaced by the export functionality of the <code>sap.ui.export<\/code> library.<br>Can have a name and a cell template.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"replaced by the export functionality of the <code>sap.ui.export<\/code> library.","since":"1.73"}},{"template":"new sap.ui.core.util.ExportRow(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcells: [${cells}] // sap.ui.core.util.ExportCell[]\n\t}\n)\n","static":"true","prefix":"ExportRow","Experimental":false,"module":"sap/ui/core/util/ExportRow","description":"ExportRow(sId?, mSettings?) : sap.ui.core.util.ExportRow","constructorDescription":"Constructor for a new ExportRow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.core.util.ExportCell[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":true,"name":"sap.ui.core.util.ExportRow","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 replaced by the export functionality of the <code>sap.ui.export<\/code> library.<br>Internally used in {@link sap.ui.core.util.Export Export}.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"replaced by the export functionality of the <code>sap.ui.export<\/code> library.","since":"1.73"}},{"template":"new sap.ui.core.util.ExportType(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tfileExtension: \"${fileExtension}\", // string\n\t\tmimeType: \"${mimeType}\", // string\n\t\tcharset: \"${charset}\", // string\n\t\tbyteOrderMark: ${bByteOrderMark} // boolean\n\t}\n)\n","static":"true","prefix":"ExportType","Experimental":false,"module":"sap/ui/core/util/ExportType","description":"ExportType(sId?, mSettings?) : sap.ui.core.util.ExportType","constructorDescription":"Constructor for a new ExportType.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFileExtension fileExtension} : string<\/li>\n<li>{@link #getMimeType mimeType} : string<\/li>\n<li>{@link #getCharset charset} : string<\/li>\n<li>{@link #getByteOrderMark byteOrderMark} : boolean (default: undefined)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":true,"name":"sap.ui.core.util.ExportType","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 replaced by the export functionality of the <code>sap.ui.export<\/code> library.<br>Base export type. Subclasses can be used for {@link sap.ui.core.util.Export Export}.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"replaced by the export functionality of the <code>sap.ui.export<\/code> library.","since":"1.73"}},{"template":"new sap.ui.core.util.ExportTypeCSV(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tfileExtension: \"${fileExtension}\", // string\n\t\tmimeType: \"${mimeType}\", // string\n\t\tcharset: \"${charset}\", // string\n\t\tbyteOrderMark: ${bByteOrderMark}, // boolean\n\t\tseparatorChar: ${\",\"} // string\n\t}\n)\n","static":"true","prefix":"ExportTypeCSV","Experimental":false,"module":"sap/ui/core/util/ExportTypeCSV","description":"ExportTypeCSV(sId?, mSettings?) : sap.ui.core.util.ExportTypeCSV","constructorDescription":"Constructor for a new ExportTypeCSV.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSeparatorChar separatorChar} : string (default: ',')<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.util.ExportType#constructor sap.ui.core.util.ExportType}\ncan be used as well.","extends":"sap.ui.core.util.ExportType","Deprecated":true,"name":"sap.ui.core.util.ExportTypeCSV","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 replaced by the export functionality of the <code>sap.ui.export<\/code> library.<br>CSV export type. Can be used for {@link sap.ui.core.util.Export Export}.\n\nPlease note that there could be an issue with the separator char depending on the user's system language in some programs such as Microsoft Excel. To prevent those issues use the data-import functionality which enables the possibility to explicitly set the separator char that should be used. This way the content will be displayed correctly.\n\nPotential formulas (cell data starts with one of = + - @) will be escaped by prepending a single quote. As the export functionality is intended to be used with actual (user) data there is no reason to allow formulas.\n\nThe maximum cell length is limited to 32,760 characters. In case any string exceeds this limit, it will be cut off.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"replaced by the export functionality of the <code>sap.ui.export<\/code> library.","since":"1.73"}},{"template":"new sap.ui.core.util.MockServer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\trootUri: \"${rootUri}\", // string\n\t\trecordRequests: ${bRecordRequests}, // boolean\n\t\trequests: [${requests}] // object[]\n\t}\n)\n","static":"true","prefix":"MockServer","Experimental":false,"module":"sap/ui/core/util/MockServer","description":"MockServer(sId?, mSettings?) : sap.ui.core.util.MockServer","constructorDescription":"Creates a mocked server. This helps to mock some back-end calls, e.g. for OData V2/JSON Models or simple XHR calls, without\nchanging the application code. This class can also be used for qunit tests.\n\n<b>Note:<\/b> Not all features of mock and all properties are supported.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRootUri rootUri} : string<\/li>\n<li>{@link #getRecordRequests recordRequests} : boolean (default: true)<\/li>\n<li>{@link #getRequests requests} : object[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":false,"name":"sap.ui.core.util.MockServer","helpDescription":"Class to mock http requests made to a remote server supporting the OData V2 REST protocol.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"config(\n\t{\n\t\tautoRespond: ${bAutoRespond}, // boolean\n\t\tautoRespondAfter: ${autoRespondAfter}, // int\n\t\tfakeHTTPMethods: ${bFakeHTTPMethods} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.util.MockServer.config","description":"config(mConfig)","helpDescription":"Global configuration of all mock servers.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"simulate(\n\t\"${sMetadataString}\", // string\n\t{\n\t\tsMockdataBaseUrl: \"${sMockdataBaseUrl}\", // string\n\t\tbGenerateMissingMockData: ${bBGenerateMissingMockData}, // boolean\n\t\taEntitySetsNames: [${aEntitySetsNames}] // array\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.util.MockServer.simulate","description":"simulate(sMetadataString, vMockdataSettings?)","helpDescription":"Simulates an existing OData service by sepcifying the metadata URL and the base URL for the mockdata. The server configures the request handlers depending on the service metadata. The mockdata needs to be stored individually for each entity type in a separate JSON file. The name of the JSON file needs to match the name of the entity type. If no base url for the mockdata is specified then the mockdata are generated from the metadata","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bySelector(\n\t{\n\t\tid: \"${id}\", // string\n\t\tisLocalId: ${bIsLocalId} // boolean\n\t},\n\t\"${oAppComponent}\", // sap.ui.core.UIComponent\n\t\"${oView}\" // Element\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/util/reflection/BaseTreeModifier","name":"sap.ui.core.util.reflection.BaseTreeModifier.bySelector","description":"bySelector(oSelector, oAppComponent, oView) : sap.ui.base.ManagedObject|Element","helpDescription":"Function determining the control targeted by the change.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bySelectorExtensionPointEnabled(\n\t{\n\t\tid: \"${id}\", // string\n\t\tisLocalId: ${bIsLocalId}, // boolean\n\t\tname: \"${name}\" // string\n\t},\n\t\"${oAppComponent}\", // sap.ui.core.UIComponent\n\t\"${oView}\" // Element\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/util/reflection/BaseTreeModifier","name":"sap.ui.core.util.reflection.BaseTreeModifier.bySelectorExtensionPointEnabled","description":"bySelectorExtensionPointEnabled(oSelector, oAppComponent, oView) : Promise<(sap.ui.base.ManagedObject|Element)>","helpDescription":"Function determining the control targeted by the change. It is also possible to pass an extension point selector. In this case an extension point is referenced in the selector but the parent control of the extension point will be returned.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bySelectorTypeIndependent(\n\t{\n\t\tid: \"${id}\", // string\n\t\tisLocalId: ${bIsLocalId}, // boolean\n\t\tname: \"${name}\" // string\n\t},\n\t\"${oAppComponent}\", // sap.ui.core.UIComponent\n\t\"${oView}\" // Element\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/util/reflection/BaseTreeModifier","name":"sap.ui.core.util.reflection.BaseTreeModifier.bySelectorTypeIndependent","description":"bySelectorTypeIndependent(oSelector, oAppComponent, oView) : Promise<(sap.ui.base.ManagedObject|Element)>","helpDescription":"Function determining the control targeted by the change.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"createControl(\n\t\"${sClassName}\", // string\n\t\"${oAppComponent}\", // sap.ui.core.UIComponent\n\t\"${oView}\", // Element\n\t{\n\t\tid: \"${id}\", // string\n\t\tisLocalId: ${bIsLocalId} // boolean\n\t},\n\t\"${mSettings}\" // object\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/util/reflection/BaseTreeModifier","name":"sap.ui.core.util.reflection.BaseTreeModifier.createControl","description":"createControl(sClassName, oAppComponent?, oView?, oSelector?, mSettings?) : Promise<Element>","helpDescription":"Creates the control in the corresponding representation.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getControlIdBySelector(\n\t{\n\t\tid: \"${id}\", // string\n\t\tisLocalId: ${bIsLocalId} // boolean\n\t},\n\t\"${vAppComponent}\" // sap.ui.core.UIComponent|string\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/util/reflection/BaseTreeModifier","name":"sap.ui.core.util.reflection.BaseTreeModifier.getControlIdBySelector","description":"getControlIdBySelector(oSelector, vAppComponent) : string","helpDescription":"Function determining the control ID from the selector.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"templateControlFragment(\n\t\"${sFragmentName}\", // string\n\t{\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tmodels: ${models} // object\n\t},\n\t\"${oView}\" // sap.ui.core.mvc.View\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/core/util/reflection/BaseTreeModifier","name":"sap.ui.core.util.reflection.BaseTreeModifier.templateControlFragment","description":"templateControlFragment(sFragmentName, mPreprocessorSettings?, oView) : Promise<(Element[]|sap.ui.core.Element[])>","helpDescription":"Loads a fragment, processes the XML templating and turns the result into an array of nodes or controls. See {@link sap.ui.core.util.XMLPreprocessor.process}","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.core.webc.WebComponent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tfieldHelpDisplay: ${fieldHelpDisplay}, // (sap.ui.core.Element|string)\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: [${fieldGroupIds}], // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\t__isBusy: ${b__isBusy} // boolean\n\t}\n)\n","static":"true","prefix":"WebComponent","Experimental":true,"module":"sap/ui/core/webc/WebComponent","description":"WebComponent(sId?, mSettings?) : sap.ui.core.webc.WebComponent","constructorDescription":"Constructs and initializes a Web Component Wrapper with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #get__isBusy __isBusy} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.ui.core.webc.WebComponent","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"extend(\n\t\"${sClassName}\", // string\n\t{\n\t\tmetadata: ${metadata} // sap.ui.core.webc.WebComponent.MetadataOptions\n\t},\n\t\"${FNMetaImpl}\" // function\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.webc.WebComponent.extend","description":"extend(sClassName, oClassInfo?, FNMetaImpl?) : function","helpDescription":"Defines a new subclass of WebComponent with the name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> can contain the same information that {@link sap.ui.base.ManagedObject.extend} already accepts, plus the <code>dnd<\/code> property in the metadata object literal to configure drag-and-drop behavior (see {@link sap.ui.core.webc.WebComponent.MetadataOptions MetadataOptions} for details). Objects describing aggregations can also have a <code>dnd<\/code> property when used for a class extending <code>WebComponent<\/code> (see {@link sap.ui.base.ManagedObject.MetadataOptions.AggregationDnD AggregationDnD}).\n\nExample: <pre>\nWebComponent.extend('sap.mylib.MyElement', {\n  metadata : {\n    library : 'sap.mylib',\n    tag : 'my-webcomponent',\n    properties : {\n      value : 'string',\n      width : {\n        type: 'sap.ui.core.CSSSize',\n        mapping: 'style'\n      }\n    },\n    defaultAggregation: \"content\",\n    aggregations : {\n      content : {\n        type: 'sap.ui.core.Control',\n        multiple : true\n      },\n      header : {\n        type : 'sap.ui.core.Control',\n        multiple : false,\n        slot: 'header'\n      }\n    }\n  }\n});\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireMessage(\n\t{\n\t\tdata: \"${data}\", // string\n\t\tpcpFields: \"${pcpFields}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.ws.SapPcpWebSocket.fireMessage","description":"fireMessage(oParameters?) : sap.ui.core.ws.SapPcpWebSocket","helpDescription":"Fires event {@link #event:message message} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireClose(\n\t{\n\t\tcode: \"${code}\", // string\n\t\treason: \"${reason}\", // string\n\t\twasClean: \"${wasClean}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.ws.WebSocket.fireClose","description":"fireClose(oParameters?) : sap.ui.core.ws.WebSocket","helpDescription":"Fires event {@link #event:close close} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireMessage(\n\t{\n\t\tdata: \"${data}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.core.ws.WebSocket.fireMessage","description":"fireMessage(oParameters?) : sap.ui.core.ws.WebSocket","helpDescription":"Fires event {@link #event:message message} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireDataReceived(\n\t{\n\t\tdata: ${data} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.Binding.fireDataReceived","description":"fireDataReceived(oParameters)","helpDescription":"Fires event {@link #event:dataReceived dataReceived} to attached listeners.\n\nThis event may also be fired when an error occurred.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindProperty(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // object\n\t{\n\t\tignoreMessages: ${bIgnoreMessages} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.ClientModel.bindProperty","description":"bindProperty(sPath, oContext?, mParameters?) : sap.ui.model.PropertyBinding","helpDescription":"Creates a new property binding for this model.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.Filter(\n\t{\n\t\tpath: \"${path}\", // string\n\t\ttest: ${test}, // function(any) : boolean\n\t\tcomparator: ${comparator}, // function(any,any) : number\n\t\toperator: ${operator}, // sap.ui.model.FilterOperator\n\t\tvalue1: ${value1}, // any\n\t\tvalue2: ${value2}, // any\n\t\tvariable: \"${variable}\", // string\n\t\tcondition: ${condition}, // sap.ui.model.Filter\n\t\tfilters: [${filters}], // sap.ui.model.Filter[]\n\t\tand: ${bAnd}, // boolean\n\t\tcaseSensitive: ${bCaseSensitive} // boolean\n\t},\n\t\"${vOperator}\", // sap.ui.model.FilterOperator|boolean|function(any) : boolean\n\t\"${vValue1}\", // any\n\t\"${vValue2}\" // any\n)\n","static":"true","prefix":"Filter","Experimental":false,"module":"sap/ui/model/Filter","description":"Filter(vFilterInfo, vOperator?, vValue1?, vValue2?) : sap.ui.model.Filter","constructorDescription":"Constructor for Filter.\n\nYou either pass a single object literal with the filter parameters or use the individual\nconstructor arguments. No matter which variant is used, only certain combinations of\nparameters are supported (the following list uses the names from the object literal):\n<ul>\n<li>A <code>path<\/code>, <code>operator<\/code> and one or two values (<code>value1<\/code>,\n  <code>value2<\/code>), depending on the operator\n<li>A <code>path<\/code> and a custom filter function <code>test<\/code>\n<li>An array of other filters named <code>filters<\/code> and a Boolean flag <code>and<\/code>\n  that specifies whether to combine the filters with an AND (<code>true<\/code>) or an OR\n  (<code>false<\/code>) operator.\n<\/ul>\nAn error will be logged to the console if an invalid combination of parameters is provided.\n\nPlease note that a model implementation may not support a custom filter function, e.g. if the\nmodel does not perform client-side filtering. It also depends on the model implementation if\nthe filtering is case sensitive or not. Client models filter case insensitive compared to the\nOData models which filter case sensitive by default. See particular model documentation for\ndetails.\n\nThe filter operators {@link sap.ui.model.FilterOperator.Any \"Any\"} and\n{@link sap.ui.model.FilterOperator.All \"All\"} are only supported in V4 OData models. When\ncreating a filter instance with these filter operators, the argument <code>variable<\/code>\nonly accepts a string identifier and <code>condition<\/code> needs to be another filter\ninstance.","extends":"sap.ui.base.Object","Deprecated":false,"name":"sap.ui.model.Filter","helpDescription":"Filter for the list binding.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePropertyChange(\n\t{\n\t\treason: ${reason}, // sap.ui.model.ChangeReason\n\t\tpath: \"${path}\", // string\n\t\tcontext: ${context}, // object\n\t\tvalue: ${value} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.Model.firePropertyChange","description":"firePropertyChange(oParameters?) : sap.ui.model.Model","helpDescription":"Fires event {@link #event:propertyChange propertyChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireRequestCompleted(\n\t{\n\t\turl: \"${url}\", // string\n\t\ttype: \"${type}\", // string\n\t\tasync: ${bAsync}, // boolean\n\t\tinfo: \"${info}\", // string\n\t\tinfoObject: ${infoObject} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.Model.fireRequestCompleted","description":"fireRequestCompleted(oParameters?) : sap.ui.model.Model","helpDescription":"Fires event {@link #event:requestCompleted requestCompleted} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireRequestFailed(\n\t{\n\t\tmessage: \"${message}\", // string\n\t\tstatusCode: \"${statusCode}\", // string\n\t\tstatusText: \"${statusText}\", // string\n\t\tresponseText: \"${responseText}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.Model.fireRequestFailed","description":"fireRequestFailed(oParameters?) : sap.ui.model.Model","helpDescription":"Fires event {@link #event:requestFailed requestFailed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireRequestSent(\n\t{\n\t\turl: \"${url}\", // string\n\t\ttype: \"${type}\", // string\n\t\tasync: ${bAsync}, // boolean\n\t\tinfo: \"${info}\", // string\n\t\tinfoObject: ${infoObject} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.Model.fireRequestSent","description":"fireRequestSent(oParameters?) : sap.ui.model.Model","helpDescription":"Fires event {@link #event:requestSent requestSent} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChanged(\n\t{\n\t\tleadIndex: ${leadIndex}, // int\n\t\trowIndices: [${rowIndices}] // int[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.SelectionModel.fireSelectionChanged","description":"fireSelectionChanged(oParameters) : sap.ui.model.SelectionModel","helpDescription":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.\n\nExpects following event parameters: <ul> <li>'leadIndex' of type <code>int<\/code> Lead selection index.<\/li> <li>'rowIndices' of type <code>int[]<\/code> Other selected indices (if available)<\/li> <\/ul>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.Sorter(\n\t{\n\t\tcomparator: ${fn_comparator}, // function\n\t\tdescending: ${bDescending}, // boolean\n\t\tgroup: ${group}, // boolean|function\n\t\tpath: \"${path}\" // string\n\t},\n\t\"${bDescending}\", // boolean\n\t\"${vGroup}\", // boolean|function\n\t\"${fnComparator}\" // function\n)\n","static":"true","prefix":"Sorter","Experimental":false,"module":"sap/ui/model/Sorter","description":"Sorter(vSorterInfo, bDescending?, vGroup?, fnComparator?) : sap.ui.model.Sorter","constructorDescription":"Constructor for Sorter.","extends":"sap.ui.base.Object","Deprecated":false,"name":"sap.ui.model.Sorter","helpDescription":"Sorter for list bindings.\n\nInstances of this class define the sort order for a list binding.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChanged(\n\t{\n\t\tleadIndex: ${leadIndex}, // int\n\t\trowIndices: [${rowIndices}] // int[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/TreeBindingAdapter","name":"sap.ui.model.TreeBindingAdapter.fireSelectionChanged","description":"fireSelectionChanged(oParameters) : sap.ui.model.TreeBindingAdapter","helpDescription":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.\n\nExpects following event parameters: <ul> <li>'leadIndex' of type <code>int<\/code> Lead selection index.<\/li> <li>'rowIndices' of type <code>int[]<\/code> Other selected indices (if available)<\/li> <\/ul>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.analytics.AnalyticalBinding(\n\t\"${oModel}\", // sap.ui.model.Model\n\t\"${sPath}\", // string\n\t\"${oContext}\", // object\n\t\"${aSorters}\", // sap.ui.model.Sorter[]|sap.ui.model.Sorter\n\t\"${aFilters}\", // sap.ui.model.Filter[]|sap.ui.model.Filter\n\t{\n\t\tautoExpandMode: ${autoExpandMode}, // sap.ui.model.TreeAutoExpandMode\n\t\tentitySet: ${entitySet}, // undefined\n\t\tuseBatchRequests: ${useBatchRequests}, // undefined\n\t\tprovideGrandTotals: ${provideGrandTotals}, // undefined\n\t\tprovideTotalResultSize: ${provideTotalResultSize}, // undefined\n\t\treloadSingleUnitMeasures: ${reloadSingleUnitMeasures}, // undefined\n\t\tselect: \"${select}\" // string\n\t}\n)\n","static":"true","extends":"sap.ui.model.TreeBinding","Deprecated":false,"prefix":"AnalyticalBinding","Experimental":true,"module":"sap/ui/model/analytics/AnalyticalBinding","name":"sap.ui.model.analytics.AnalyticalBinding","description":"AnalyticalBinding(oModel, sPath, oContext?, aSorters?, aFilters?, mParameters?) : sap.ui.model.analytics.AnalyticalBinding","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"getNodeContexts(\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\tlevel: ${level}, // int\n\t\tnumberOfExpandedLevels: ${numberOfExpandedLevels}, // int\n\t\tstartIndex: ${startIndex}, // int\n\t\tlength: ${length}, // int\n\t\tthreshold: ${threshold} // int\n\t},\n\t\"${iLength}\", // int\n\t\"${iThreshold}\", // int\n\t\"${iLevel}\", // int\n\t\"${iNumberOfExpandedLevels}\" // int\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.analytics.AnalyticalBinding.getNodeContexts","description":"getNodeContexts(oContext, mParameters?, iLength?, iThreshold?, iLevel?, iNumberOfExpandedLevels?) : sap.ui.model.Context[]","helpDescription":"Gets child contexts for a specified parent context.\n\nContexts are returned in a stable order imposed by the dimension property that defines this aggregation level beneath the parent context: Either a sort order has been specified for this property, or the entries are returned in ascending order of the values of this dimension property by default.\n\nIf any of the requested data is missing, an OData request will be triggered to load it.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getRootContexts(\n\t{\n\t\tlength: ${length}, // int\n\t\tnumberOfExpandedLevels: ${numberOfExpandedLevels}, // int\n\t\tstartIndex: ${startIndex}, // int\n\t\tthreshold: ${threshold} // int\n\t},\n\t\"${iLength}\", // int\n\t\"${iNumberOfExpandedLevels}\", // int\n\t\"${iThreshold}\" // int\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.analytics.AnalyticalBinding.getRootContexts","description":"getRootContexts(mParameters?, iLength?, iNumberOfExpandedLevels?, iThreshold?) : sap.ui.model.Context[]","helpDescription":"Gets the context for the root aggregation level representing the grand total for all bound measure properties.\n\nThe context is assigned to parent group ID <code>null<\/code>. If the binding is configured not to provide a grand total, this context is empty. If data for this context is not locally available yet, an OData request will be triggered to load it.\n\nThis function must be called whenever the bound set of OData entities changes, e.g., by changing selected dimensions, modifying filter conditions, etc.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"hasChildren(\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\tlevel: ${level} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.analytics.AnalyticalBinding.hasChildren","description":"hasChildren(oContext, mParameters?) : boolean","helpDescription":"Determines if the contexts in a specified group have further children. If so, any of these group contexts can be a parent context of a nested sub-group in a subsequent aggregation level.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"setup(\n\t{\n\t\texecutedRequests: [${executedRequests}], // array\n\t\tbinding: ${binding}, // object\n\t\tlastAnalyticalInfoVersion: ${lastAnalyticalInfoVersion}, // int\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.analytics.BatchResponseCollector.setup","description":"setup(mParams?)","helpDescription":"Setup-Function to initialize/reset the BatchResponseCollector.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.json.JSONTreeBinding(\n\t\"${oModel}\", // sap.ui.model.json.JSONModel\n\t\"${sPath}\", // string\n\t\"${oContext}\", // object\n\t\"${aFilters}\", // sap.ui.model.Filter[]|sap.ui.model.Filter\n\t{\n\t\tarrayNames: [${arrayNames}] // string[]\n\t},\n\t\"${aSorters}\" // sap.ui.model.Sorter[]|sap.ui.model.Sorter\n)\n","static":"true","prefix":"JSONTreeBinding","Experimental":false,"module":"sap/ui/model/json/JSONTreeBinding","description":"JSONTreeBinding(oModel, sPath, oContext?, aFilters?, mParameters?, aSorters?) : sap.ui.model.json.JSONTreeBinding","constructorDescription":"Creates a new JSONListBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.json.JSONModel#bindTree JSONModel#bindTree} on the corresponding model instance instead.","extends":"sap.ui.model.ClientTreeBinding","Deprecated":false,"name":"sap.ui.model.json.JSONTreeBinding","helpDescription":"Tree binding implementation for JSON format.\n\nThe bound data can contain JSON objects and arrays. Both will be used to build the tree structure. You can optionally define a set of arrays to be used for the tree structure in the parameter <code>arrayNames<\/code>. If this parameter is set, all other objects and arrays will be ignored.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFailed(\n\t{\n\t\tmessage: \"${message}\", // string\n\t\tstatusCode: \"${statusCode}\", // string\n\t\tstatusText: \"${statusText}\", // string\n\t\tresponseText: \"${responseText}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataAnnotations.fireFailed","description":"fireFailed(oParameters?) : sap.ui.model.odata.ODataAnnotations","helpDescription":"Fires event {@link #event:failed failed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"setXML(\n\t\"${oXMLDocument}\", // object\n\t\"${sXMLContent}\", // string\n\t{\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\tfireEvents: ${bFireEvents} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataAnnotations.setXML","description":"setXML(oXMLDocument, sXMLContent, mOptions?) : boolean","helpDescription":"Sets an XML document.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.ODataListBinding(\n\t\"${oModel}\", // sap.ui.model.odata.ODataModel\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t\"${aSorters}\", // array\n\t\"${aFilters}\", // array\n\t{\n\t\texpand: \"${expand}\", // string\n\t\tselect: \"${select}\", // string\n\t\tcustom: ${custom}, // Object<string,string>\n\t\tcountMode: ${countMode} // sap.ui.model.odata.CountMode\n\t}\n)\n","static":"true","extends":"sap.ui.model.ListBinding","Deprecated":true,"prefix":"ODataListBinding","Experimental":false,"module":"sap/ui/model/odata/ODataListBinding","name":"sap.ui.model.odata.ODataListBinding","description":"ODataListBinding(oModel, sPath, oContext, aSorters?, aFilters?, mParameters?) : sap.ui.model.odata.ODataListBinding","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.66 please use {@link sap.ui.model.odata.v2.ODataListBinding} instead.<br>List binding implementation for OData format.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"please use {@link sap.ui.model.odata.v2.ODataListBinding} instead.","since":"1.66"}},{"template":"new sap.ui.model.odata.ODataMetadata(\n\t\"${sMetadataURI}\", // string\n\t{\n\t\tasync: ${bAsync}, // boolean\n\t\tuser: \"${user}\", // string\n\t\tpassword: \"${password}\", // string\n\t\theaders: ${headers}, // object\n\t\tcacheKey: \"${cacheKey}\", // string\n\t\tmetadata: \"${metadata}\" // string\n\t}\n)\n","static":"true","prefix":"ODataMetadata","Experimental":false,"module":"sap/ui/model/odata/ODataMetadata","description":"ODataMetadata(sMetadataURI, mParams) : sap.ui.model.odata.ODataMetadata","constructorDescription":"Constructor for a new ODataMetadata.","extends":"sap.ui.base.EventProvider","Deprecated":false,"name":"sap.ui.model.odata.ODataMetadata","helpDescription":"Implementation to access OData metadata","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFailed(\n\t{\n\t\tmessage: \"${message}\", // string\n\t\tstatusCode: \"${statusCode}\", // string\n\t\tstatusText: \"${statusText}\", // string\n\t\tresponseText: \"${responseText}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataMetadata.fireFailed","description":"fireFailed(oParameters?) : sap.ui.model.odata.ODataMetadata","helpDescription":"Fires event {@link #event:failed failed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.ODataModel(\n\t\"${sServiceUrl}\", // string\n\t{\n\t\tjson: ${bJson}, // boolean\n\t\tuser: \"${user}\", // string\n\t\tpassword: \"${password}\", // string\n\t\theaders: ${headers}, // Object<string,string>\n\t\ttokenHandling: ${bTokenHandling}, // boolean\n\t\twithCredentials: ${bWithCredentials}, // boolean\n\t\tloadMetadataAsync: ${loadMetadataAsync}, // object\n\t\tmaxDataServiceVersion: ${maxDataServiceVersion}, // undefined\n\t\tuseBatch: ${bUseBatch}, // boolean\n\t\trefreshAfterChange: ${bRefreshAfterChange}, // boolean\n\t\tannotationURI: [${annotationURI}], // string|string[]\n\t\tloadAnnotationsJoined: ${bLoadAnnotationsJoined}, // boolean\n\t\tserviceUrlParams: ${serviceUrlParams}, // Object<string,string>\n\t\tmetadataUrlParams: ${metadataUrlParams}, // Object<string,string>\n\t\tdefaultCountMode: \"${defaultCountMode}\", // string\n\t\tmetadataNamespaces: ${metadataNamespaces}, // Object<string,string>\n\t\tskipMetadataAnnotationParsing: ${bSkipMetadataAnnotationParsing} // boolean\n\t}\n)\n","static":"true","prefix":"ODataModel","Experimental":false,"module":"sap/ui/model/odata/ODataModel","description":"ODataModel(sServiceUrl?, mParameters?) : sap.ui.model.odata.ODataModel","constructorDescription":"Constructor for a new ODataModel.","extends":"sap.ui.model.Model","Deprecated":true,"name":"sap.ui.model.odata.ODataModel","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 please use {@link sap.ui.model.odata.v2.ODataModel} instead.<br>Model implementation for OData format","category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"bindList(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t\"${aSorters}\", // sap.ui.model.Sorter|sap.ui.model.Sorter[]\n\t\"${aFilters}\", // sap.ui.model.Filter|sap.ui.model.Filter[]\n\t{\n\t\texpand: \"${expand}\", // string\n\t\tselect: \"${select}\", // string\n\t\tcustom: ${custom}, // Object<string,string>\n\t\tcountMode: ${countMode} // sap.ui.model.odata.CountMode\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.bindList","description":"bindList(sPath, oContext?, aSorters?, aFilters?, mParameters?) : sap.ui.model.ListBinding","helpDescription":"Creates a new list binding for this model.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"callFunction(\n\t\"${sFunctionName}\", // string\n\t{\n\t\tmethod: \"${method}\", // string\n\t\turlParameters: ${urlParameters}, // Object<string,string>\n\t\tcontext: ${context}, // object\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\tasync: ${bAsync} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.callFunction","description":"callFunction(sFunctionName, mParameters?) : object","helpDescription":"Trigger a request to the function import odata service that was specified in the model constructor.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"create(\n\t\"${sPath}\", // string\n\t\"${oData}\", // object\n\t{\n\t\tcontext: ${context}, // object\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\tasync: ${bAsync}, // boolean\n\t\turlParameters: ${urlParameters} // Object<string,string>\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.create","description":"create(sPath, oData, mParameters?) : object","helpDescription":"Trigger a POST request to the odata service that was specified in the model constructor. Please note that deep creates are not supported and may not work.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"createBatchOperation(\n\t\"${sPath}\", // string\n\t\"${sMethod}\", // string\n\t\"${oData}\", // object\n\t{\n\t\tsETag: \"${sETag}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.createBatchOperation","description":"createBatchOperation(sPath, sMethod, oData?, oParameters?) : object","helpDescription":"Creates a single batch operation (read or change operation) which can be used in a batch request.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"fireAnnotationsFailed(\n\t{\n\t\tmessage: \"${message}\", // string\n\t\tstatusCode: \"${statusCode}\", // string\n\t\tstatusText: \"${statusText}\", // string\n\t\tresponseText: \"${responseText}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.fireAnnotationsFailed","description":"fireAnnotationsFailed(oParameters?) : sap.ui.model.odata.ODataModel","helpDescription":"Fires event {@link #event:annotationsFailed annotationsFailed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"fireAnnotationsLoaded(\n\t{\n\t\tannotations: ${annotations} // sap.ui.model.odata.ODataAnnotations\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.fireAnnotationsLoaded","description":"fireAnnotationsLoaded(oParameters?) : sap.ui.model.odata.ODataModel","helpDescription":"Fires event {@link #event:annotationsLoaded annotationsLoaded} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"fireMetadataFailed(\n\t{\n\t\tmessage: \"${message}\", // string\n\t\tstatusCode: \"${statusCode}\", // string\n\t\tstatusText: \"${statusText}\", // string\n\t\tresponseText: \"${responseText}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.fireMetadataFailed","description":"fireMetadataFailed(oParameters?) : sap.ui.model.odata.ODataModel","helpDescription":"Fires event {@link #event:metadataFailed metadataFailed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"fireMetadataLoaded(\n\t{\n\t\tmetadata: ${metadata} // sap.ui.model.odata.ODataMetadata\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.fireMetadataLoaded","description":"fireMetadataLoaded(oParameters?) : sap.ui.model.odata.ODataModel","helpDescription":"Fires event {@link #event:metadataLoaded metadataLoaded} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"read(\n\t\"${sPath}\", // string\n\t{\n\t\tcontext: ${context}, // object\n\t\turlParameters: ${urlParameters}, // Object<string,string>\n\t\tasync: ${bAsync}, // boolean\n\t\tfilters: [${filters}], // array\n\t\tsorters: [${sorters}], // array\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.read","description":"read(sPath, mParameters?) : object","helpDescription":"Trigger a GET request to the odata service that was specified in the model constructor. The data will not be stored in the model. The requested data is returned with the response.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"remove(\n\t\"${sPath}\", // string\n\t{\n\t\tcontext: ${context}, // object\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\teTag: \"${eTag}\", // string\n\t\tpayload: ${payload}, // object\n\t\tasync: ${bAsync}, // boolean\n\t\turlParameters: ${urlParameters} // Object<string,string>\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.remove","description":"remove(sPath, mParameters?) : object","helpDescription":"Trigger a DELETE request to the odata service that was specified in the model constructor.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"submitChanges(\n\t\"${fnSuccess}\", // function\n\t\"${fnError}\", // function\n\t{\n\t\tsETag: \"${sETag}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.submitChanges","description":"submitChanges(fnSuccess?, fnError?, oParameters?) : object","helpDescription":"Submits the collected changes which were collected by the setProperty method. A MERGE request will be triggered to only update the changed properties. If a URI with a $expand System Query Option was used then the expand entries will be removed from the collected changes. Changes to this entries should be done on the entry itself. So no deep updates are supported.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"update(\n\t\"${sPath}\", // string\n\t\"${oData}\", // object\n\t{\n\t\tcontext: ${context}, // object\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\tmerge: ${bMerge}, // boolean\n\t\teTag: \"${eTag}\", // string\n\t\tasync: ${bAsync}, // boolean\n\t\turlParameters: ${urlParameters} // Object<string,string>\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.ODataModel.update","description":"update(sPath, oData, mParameters?) : object","helpDescription":"Trigger a PUT/MERGE request to the odata service that was specified in the model constructor. Please note that deep updates are not supported and may not work. These should be done seperate on the entry directly.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"please use {@link sap.ui.model.odata.v2.ODataModel} instead.","since":"1.48"}},{"template":"setOrigin(\n\t\"${sServiceURL}\", // string\n\t{\n\t\talias: \"${alias}\", // string\n\t\tsystem: \"${system}\", // string\n\t\tclient: \"${client}\", // string\n\t\tforce: ${bForce} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/odata/ODataUtils","name":"sap.ui.model.odata.ODataUtils.setOrigin","description":"setOrigin(sServiceURL, vParameters) : string","helpDescription":"Adds an origin to the given service URL. If an origin is already present, it will only be replaced if the parameters object contains the flag \"force: true\". In case the URL already contains URL parameters, these will be kept. As a parameter, a sole alias is sufficient. The parameters vParameters.system and vParameters.client however have to be given in pairs. In case all three origin specifying parameters are given (system/client/alias), the alias has precedence.\n\nExamples: setOrigin(\"/backend/service/url/\", \"DEMO_123\"); - result: /backend/service/url;o=DEMO_123/\n\nsetOrigin(\"/backend/service/url;o=OTHERSYS8?myUrlParam=true&x=4\", {alias: \"DEMO_123\", force: true}); - result /backend/service/url;o=DEMO_123?myUrlParam=true&x=4\n\nsetOrigin(\"/backend/service;o=NOT_TOUCHED/url;v=2;o=OTHERSYS8;srv=XVC\", {alias: \"DEMO_123\", force: true}); - result /backend/service;o=NOT_TOUCHED/url;v=2;o=DEMO_123;srv=XVC\n\nsetOrigin(\"/backend/service/url/\", {system: \"DEMO\", client: 134}); - result /backend/service/url;o=sid(DEMO.134)/","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Boolean(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Boolean","Experimental":false,"module":"sap/ui/model/odata/type/Boolean","description":"Boolean(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Boolean","constructorDescription":"Constructor for an OData primitive type <code>Edm.Boolean<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Boolean","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Boolean<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>boolean<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Byte(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Byte","Experimental":false,"module":"sap/ui/model/odata/type/Byte","description":"Byte(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Byte","constructorDescription":"Constructor for a primitive type <code>Edm.Byte<\/code>.","extends":"sap.ui.model.odata.type.Int","Deprecated":false,"name":"sap.ui.model.odata.type.Byte","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Byte<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Currency(\n\t{\n\t\tcustomCurrencies: ${customCurrencies}, // object\n\t\tparseAsString: ${bParseAsString}, // boolean\n\t\tunitOptional: ${bUnitOptional}, // boolean\n\t\temptyString: ${emptyString}, // any\n\t\tpreserveDecimals: ${bPreserveDecimals} // boolean\n\t},\n\t{\n\t\tskipDecimalsValidation: ${bSkipDecimalsValidation} // boolean\n\t}\n)\n","static":"true","prefix":"Currency","Experimental":false,"module":"sap/ui/model/odata/type/Currency","description":"Currency(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Currency","constructorDescription":"Constructor for a <code>Currency<\/code> composite type.","extends":"sap.ui.model.type.Currency","Deprecated":false,"name":"sap.ui.model.odata.type.Currency","helpDescription":"This class represents the <code>Currency<\/code> composite type with the parts amount, currency, and currency customizing. The type may only be used for amount and currency parts from a {@link sap.ui.model.odata.v4.ODataModel} or a {@link sap.ui.model.odata.v2.ODataModel}. The amount part is formatted according to the customizing for the currency. Use the result of the promise returned by {@link sap.ui.model.odata.v4.ODataMetaModel#requestCurrencyCodes} for OData V4 or by {@link sap.ui.model.odata.ODataMetaModel#requestCurrencyCodes} for OData V2 as currency customizing part. See {@link topic:4d1b9d44941f483f9b7f579873d38685 Currency and Unit Customizing in OData V4} resp. {@link topic:6c47b2b39db9404582994070ec3d57a2#loioaa9024c7c5444822a68daeb21a92bd51 Currency and Unit Customizing in OData V2} for more information. If no currency customizing is available, UI5's default formatting applies.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Date(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Date","Experimental":false,"module":"sap/ui/model/odata/type/Date","description":"Date(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Date","constructorDescription":"Constructor for an OData primitive type <code>Edm.Date<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Date","helpDescription":"This class represents the OData V4 primitive type <code>Edm.Date<\/code>.\n\nIn {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code> in the format \"yyyy-MM-dd\".\n\n<b>Note: For an OData V2 service use {@link sap.ui.model.odata.type.DateTime} with the constraint <code>displayFormat: \"Date\"<\/code> to display only a date.<\/b>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.DateTime(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${nullable}, // boolean|string\n\t\tdisplayFormat: \"${displayFormat}\" // string\n\t}\n)\n","static":"true","prefix":"DateTime","Experimental":false,"module":"sap/ui/model/odata/type/DateTime","description":"DateTime(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.DateTime","constructorDescription":"Constructor for a primitive type <code>Edm.DateTime<\/code>.","extends":"sap.ui.model.odata.type.DateTimeBase","Deprecated":false,"name":"sap.ui.model.odata.type.DateTime","helpDescription":"This class represents the OData V2 primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.DateTime<\/code><\/a>.\n\nIf you want to display a date and a time, prefer {@link sap.ui.model.odata.type.DateTimeOffset}, specifically designed for this purpose.\n\nUse <code>DateTime<\/code> with the SAP-specific annotation <code>display-format=Date<\/code> (resp. the constraint <code>displayFormat: \"Date\"<\/code>) to display only a date.\n\nIn {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a <code>Date<\/code>. With the constraint <code>displayFormat: \"Date\"<\/code>, the time zone is UTC, and all time related parts (hours, minutes, etc.) are set to zero; otherwise it is a date/time value in local time.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.DateTimeBase(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tisDateOnly: ${bIsDateOnly}, // boolean\n\t\tnullable: ${nullable}, // boolean|string\n\t\tprecision: ${bPrecision} // boolean\n\t}\n)\n","static":"true","prefix":"DateTimeBase","Experimental":false,"module":"sap/ui/model/odata/type/DateTimeBase","description":"DateTimeBase(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.DateTimeBase","constructorDescription":"Base constructor for the primitive types <code>Edm.DateTime<\/code> and\n<code>Edm.DateTimeOffset<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.DateTimeBase","helpDescription":"This is an abstract base class for the OData primitive types <code>Edm.DateTime<\/code> and <code>Edm.DateTimeOffset<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.DateTimeOffset(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${nullable}, // boolean|string\n\t\tprecision: ${bPrecision}, // boolean\n\t\tV4: ${bV4} // boolean\n\t}\n)\n","static":"true","prefix":"DateTimeOffset","Experimental":false,"module":"sap/ui/model/odata/type/DateTimeOffset","description":"DateTimeOffset(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.DateTimeOffset","constructorDescription":"Constructor for a primitive type <code>Edm.DateTimeOffset<\/code>.","extends":"sap.ui.model.odata.type.DateTimeBase","Deprecated":false,"name":"sap.ui.model.odata.type.DateTimeOffset","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.DateTimeOffset<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a <code>Date<\/code> instance in local time. In {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code> like \"1970-12-31T23:59:58Z\". See parameter <code>oConstraints.V4<\/code> for more information.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Decimal(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero}, // boolean\n\t\tpreserveDecimals: ${bPreserveDecimals} // boolean\n\t},\n\t{\n\t\tmaximum: \"${maximum}\", // string\n\t\tmaximumExclusive: ${bMaximumExclusive}, // boolean\n\t\tminimum: \"${minimum}\", // string\n\t\tminimumExclusive: ${bMinimumExclusive}, // boolean\n\t\tnullable: ${nullable}, // boolean|string\n\t\tprecision: ${precision}, // int|string\n\t\tscale: ${scale} // int|string\n\t}\n)\n","static":"true","prefix":"Decimal","Experimental":false,"module":"sap/ui/model/odata/type/Decimal","description":"Decimal(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Decimal","constructorDescription":"Constructor for a primitive type <code>Edm.Decimal<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Decimal","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Decimal<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>. It never uses exponential format (\"1e-5\").","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Double(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero}, // boolean\n\t\tpreserveDecimals: ${bPreserveDecimals} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Double","Experimental":false,"module":"sap/ui/model/odata/type/Double","description":"Double(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Double","constructorDescription":"Constructor for a primitive type <code>Edm.Double<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Double","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Double<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Guid(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Guid","Experimental":false,"module":"sap/ui/model/odata/type/Guid","description":"Guid(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Guid","constructorDescription":"Constructor for an OData primitive type <code>Edm.Guid<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Guid","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Guid<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Int(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Int","Experimental":false,"module":"sap/ui/model/odata/type/Int","description":"Int(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Int","constructorDescription":"Constructor for a new <code>Int<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Int","helpDescription":"This is an abstract base class for integer-based <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> OData primitive types<\/a> like <code>Edm.Int16<\/code> or <code>Edm.Int32<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Int16(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Int16","Experimental":false,"module":"sap/ui/model/odata/type/Int16","description":"Int16(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Int16","constructorDescription":"Constructor for a primitive type <code>Edm.Int16<\/code>.","extends":"sap.ui.model.odata.type.Int","Deprecated":false,"name":"sap.ui.model.odata.type.Int16","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int16<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Int32(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Int32","Experimental":false,"module":"sap/ui/model/odata/type/Int32","description":"Int32(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Int32","constructorDescription":"Constructor for a primitive type <code>Edm.Int32<\/code>.","extends":"sap.ui.model.odata.type.Int","Deprecated":false,"name":"sap.ui.model.odata.type.Int32","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int32<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Int64(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Int64","Experimental":false,"module":"sap/ui/model/odata/type/Int64","description":"Int64(oFormatOptions?, oConstraints) : sap.ui.model.odata.type.Int64","constructorDescription":"Constructor for a primitive type <code>Edm.Int64<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Int64","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int64<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.SByte(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"SByte","Experimental":false,"module":"sap/ui/model/odata/type/SByte","description":"SByte(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.SByte","constructorDescription":"Constructor for a primitive type <code>Edm.SByte<\/code>.","extends":"sap.ui.model.odata.type.Int","Deprecated":false,"name":"sap.ui.model.odata.type.SByte","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.SByte<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Single(\n\t{\n\t\tparseEmptyValueToZero: ${bParseEmptyValueToZero}, // boolean\n\t\tpreserveDecimals: ${bPreserveDecimals} // boolean\n\t},\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Single","Experimental":false,"module":"sap/ui/model/odata/type/Single","description":"Single(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Single","constructorDescription":"Constructor for a primitive type <code>Edm.Single<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Single","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Single<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Stream(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${bNullable} // boolean\n\t}\n)\n","static":"true","prefix":"Stream","Experimental":false,"module":"sap/ui/model/odata/type/Stream","description":"Stream(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Stream","constructorDescription":"Constructor for an OData primitive type <code>Edm.Stream<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Stream","helpDescription":"This class represents the OData V4 primitive type {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element <code>Edm.Stream<\/code>}. The values for stream properties do not appear in the entity payload. Instead, the values are read or written through URLs.\n\nThis type only supports reading streams. For this purpose bind the stream property to a control property of type <code>sap.ui.core.URI<\/code>. {#formatValue} will then deliver the correct URL to read the stream.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.String(\n\t{\n\t\tparseKeepsEmptyString: ${bParseKeepsEmptyString} // boolean\n\t},\n\t{\n\t\tisDigitSequence: ${isDigitSequence}, // boolean|string\n\t\tmaxLength: ${maxLength}, // int|string\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"String","Experimental":false,"module":"sap/ui/model/odata/type/String","description":"String(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.String","constructorDescription":"Constructor for an OData primitive type <code>Edm.String<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.String","helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.String<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Time(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${nullable} // boolean|string\n\t}\n)\n","static":"true","prefix":"Time","Experimental":false,"module":"sap/ui/model/odata/type/Time","description":"Time(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.Time","constructorDescription":"Constructor for an OData primitive type <code>Edm.Time<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.Time","helpDescription":"This class represents the OData V2 primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Time<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as an object with two properties: <ul> <li><code>__edmType<\/code> with the value \"Edm.Time\" <li><code>ms<\/code> with the number of milliseconds since midnight <\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"formatValue(\n\t{\n\t\t__edmType: \"${__edmType}\", // string\n\t\tms: ${iMs} // number\n\t},\n\t\"${sTargetType}\" // string\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.type.Time.formatValue","description":"formatValue(oValue, sTargetType) : string","helpDescription":"Formats the given value to the given target type","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getDateValue(\n\t{\n\t\tms: ${ms} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.type.Time.getDateValue","description":"getDateValue(oModelValue) : Date|module:sap/ui/core/date/UI5Date|null","helpDescription":"Returns a date object for a given model value.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getISOStringFromModelValue(\n\t{\n\t\tms: ${ms} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.type.Time.getISOStringFromModelValue","description":"getISOStringFromModelValue(oModelValue) : string|null","helpDescription":"Returns the ISO string for the given model value.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.TimeOfDay(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tnullable: ${bNullable}, // boolean\n\t\tprecision: ${iPrecision} // number\n\t}\n)\n","static":"true","prefix":"TimeOfDay","Experimental":false,"module":"sap/ui/model/odata/type/TimeOfDay","description":"TimeOfDay(oFormatOptions?, oConstraints?) : sap.ui.model.odata.type.TimeOfDay","constructorDescription":"Constructor for an OData primitive type <code>Edm.TimeOfDay<\/code>.","extends":"sap.ui.model.odata.type.ODataType","Deprecated":false,"name":"sap.ui.model.odata.type.TimeOfDay","helpDescription":"This class represents the OData V4 primitive type {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element <code>Edm.TimeOfDay<\/code>}. In {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.type.Unit(\n\t{\n\t\tcustomUnits: ${customUnits}, // object\n\t\tparseAsString: ${bParseAsString}, // boolean\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\tunitOptional: ${bUnitOptional}, // boolean\n\t\temptyString: ${emptyString} // any\n\t},\n\t{\n\t\tskipDecimalsValidation: ${bSkipDecimalsValidation} // boolean\n\t},\n\t\"${aDynamicFormatOptionNames}\" // string[]\n)\n","static":"true","prefix":"Unit","Experimental":false,"module":"sap/ui/model/odata/type/Unit","description":"Unit(oFormatOptions?, oConstraints?, aDynamicFormatOptionNames?) : sap.ui.model.odata.type.Unit","constructorDescription":"Constructor for a <code>Unit<\/code> composite type.","extends":"sap.ui.model.type.Unit","Deprecated":false,"name":"sap.ui.model.odata.type.Unit","helpDescription":"This class represents the <code>Unit<\/code> composite type with the parts measure, unit, and unit customizing. The type may only be used for measure and unit parts from a {@link sap.ui.model.odata.v4.ODataModel} or a {@link sap.ui.model.odata.v2.ODataModel}. The measure part is formatted according to the customizing for the unit. Use the result of the promise returned by {@link sap.ui.model.odata.v4.ODataMetaModel#requestUnitsOfMeasure} for OData V4 or by {@link sap.ui.model.odata.ODataMetaModel#requestUnitsOfMeasure} for OData V2 as unit customizing part. See {@link topic:4d1b9d44941f483f9b7f579873d38685 Currency and Unit Customizing in OData V4} resp. {@link topic:6c47b2b39db9404582994070ec3d57a2#loioaa9024c7c5444822a68daeb21a92bd51 Currency and Unit Customizing in OData V2} for more information. If no unit customizing is available, UI5's default formatting applies.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"delete(\n\t{\n\t\tgroupId: \"${groupId}\", // string\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\trefreshAfterChange: ${bRefreshAfterChange} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.Context.delete","description":"delete(mParameters?) : Promise<undefined>","helpDescription":"Deletes the OData entity this context points to. Persisted contexts are only removed from the UI after their successful deletion in the back end. In this case, the <code>Promise<\/code> returned by this method is only resolved when the back-end request has been successful. <b>Example:<\/b> A persisted entry in a table control is deleted by this method. It remains visible on the UI and only disappears upon successful deletion in the back end. <b>Note:<\/b> The context must not be used anymore after successful deletion.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.v2.ODataAnnotations(\n\t\"${oMetadata}\", // sap.ui.model.odata.ODataMetadata\n\t{\n\t\tsource: [${source}], // string|map|string[]|map[]\n\t\theaders: ${headers}, // Object<string,string>\n\t\tskipMetadata: ${bSkipMetadata}, // boolean\n\t\tcacheKey: \"${cacheKey}\" // string\n\t}\n)\n","static":"true","prefix":"ODataAnnotations","Experimental":false,"module":"sap/ui/model/odata/v2/ODataAnnotations","description":"ODataAnnotations(oMetadata, mOptions) : sap.ui.model.odata.v2.ODataAnnotations","constructorDescription":"Creates a new instance of the ODataAnnotations annotation loader.","extends":"sap.ui.base.EventProvider","Deprecated":false,"name":"sap.ui.model.odata.v2.ODataAnnotations","helpDescription":"Annotation loader for OData V2 services","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.v2.ODataContextBinding(\n\t\"${oModel}\", // sap.ui.model.odata.v2.ODataModel\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\tcreatePreliminaryContext: ${bCreatePreliminaryContext}, // boolean\n\t\tcustom: ${custom}, // Object<string,string>\n\t\texpand: \"${expand}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\tselect: \"${select}\", // string\n\t\tusePreliminaryContext: ${bUsePreliminaryContext}, // boolean\n\t\tbatchGroupId: \"${batchGroupId}\" // string\n\t}\n)\n","static":"true","extends":"sap.ui.model.ContextBinding","Deprecated":false,"prefix":"ODataContextBinding","Experimental":false,"module":"sap/ui/model/odata/v2/ODataContextBinding","name":"sap.ui.model.odata.v2.ODataContextBinding","description":"ODataContextBinding(oModel, sPath, oContext?, mParameters?) : sap.ui.model.odata.v2.ODataContextBinding","helpDescription":"Context binding for an OData V2 model.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.v2.ODataListBinding(\n\t\"${oModel}\", // sap.ui.model.odata.v2.ODataModel\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t\"${aSorters}\", // sap.ui.model.Sorter[]|sap.ui.model.Sorter\n\t\"${aFilters}\", // sap.ui.model.Filter[]|sap.ui.model.Filter\n\t{\n\t\tcountMode: ${countMode}, // sap.ui.model.odata.CountMode\n\t\tcreatedEntitiesKey: \"${createdEntitiesKey}\", // string\n\t\tcustom: ${custom}, // Object<string,string>\n\t\texpand: \"${expand}\", // string\n\t\tfaultTolerant: ${bFaultTolerant}, // boolean\n\t\tgroupId: \"${groupId}\", // string\n\t\toperationMode: ${operationMode}, // sap.ui.model.odata.OperationMode\n\t\tselect: \"${select}\", // string\n\t\ttransitionMessagesOnly: ${bTransitionMessagesOnly}, // boolean\n\t\tusePreliminaryContext: ${bUsePreliminaryContext}, // boolean\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tthreshold: ${threshold} // int\n\t}\n)\n","static":"true","extends":"sap.ui.model.ListBinding","Deprecated":false,"prefix":"ODataListBinding","Experimental":false,"module":"sap/ui/model/odata/v2/ODataListBinding","name":"sap.ui.model.odata.v2.ODataListBinding","description":"ODataListBinding(oModel, sPath, oContext?, aSorters?, aFilters?, mParameters?) : sap.ui.model.odata.v2.ODataListBinding","helpDescription":"List binding for an OData V2 model.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"create(\n\t\"${oInitialData}\", // object\n\t\"${bAtEnd}\", // boolean\n\t{\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\terror: ${fn_error}, // function\n\t\texpand: \"${expand}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\tinactive: ${bInactive}, // boolean\n\t\tsuccess: ${fn_success} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataListBinding.create","description":"create(oInitialData?, bAtEnd?, mParameters?) : sap.ui.model.odata.v2.Context","helpDescription":"Creates a new entity for this binding's collection via {@link sap.ui.model.odata.v2.ODataModel#createEntry} using the parameters given in <code>mParameters<\/code> and inserts it at the list position specified by the <code>bAtEnd<\/code> parameter. See {@link topic:6c47b2b39db9404582994070ec3d57a2#loio4c4cd99af9b14e08bb72470cc7cabff4 Creating Entities documentation} for comprehensive information on the topic.\n\nNote: This method requires that the model metadata has been loaded; see {@link sap.ui.model.odata.v2.ODataModel#metadataLoaded}.\n\nSince 1.108.0, this method supports deep create, which means it may be called if this binding's context is transient. The restrictions specified for {@link sap.ui.model.odata.v2.ODataModel#createEntry} regarding deep create apply.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.v2.ODataModel(\n\t\"${vServiceUrl}\", // string|object\n\t{\n\t\tannotationURI: [${annotationURI}], // string|string[]\n\t\tbindableResponseHeaders: [${bindableResponseHeaders}], // string[]\n\t\tcanonicalRequests: ${bCanonicalRequests}, // boolean\n\t\tdefaultBindingMode: ${defaultBindingMode}, // sap.ui.model.BindingMode\n\t\tdefaultCountMode: ${defaultCountMode}, // sap.ui.model.odata.CountMode\n\t\tdefaultOperationMode: ${defaultOperationMode}, // sap.ui.model.odata.OperationMode\n\t\tdefaultUpdateMethod: ${defaultUpdateMethod}, // sap.ui.model.odata.UpdateMethod\n\t\tdisableHeadRequestForToken: ${bDisableHeadRequestForToken}, // boolean\n\t\tdisableSoftStateHeader: ${bDisableSoftStateHeader}, // boolean\n\t\tearlyTokenRequest: ${bEarlyTokenRequest}, // boolean\n\t\theaders: ${headers}, // Object<string,string>\n\t\tignoreAnnotationsFromMetadata: ${bIgnoreAnnotationsFromMetadata}, // boolean\n\t\tjson: ${bJson}, // boolean\n\t\tloadAnnotationsJoined: ${bLoadAnnotationsJoined}, // boolean\n\t\tmaxDataServiceVersion: \"${maxDataServiceVersion}\", // string\n\t\tmetadataNamespaces: ${metadataNamespaces}, // Object<string,string>\n\t\tmetadataUrlParams: ${metadataUrlParams}, // Object<string,string>\n\t\tpersistTechnicalMessages: ${bPersistTechnicalMessages}, // boolean\n\t\tpreliminaryContext: ${bPreliminaryContext}, // boolean\n\t\trefreshAfterChange: ${bRefreshAfterChange}, // boolean\n\t\tsequentializeRequests: ${bSequentializeRequests}, // boolean\n\t\tserviceUrl: \"${serviceUrl}\", // string\n\t\tserviceUrlParams: ${serviceUrlParams}, // Object<string,string>\n\t\ttokenHandling: ${tokenHandling}, // boolean|\"skipServerCache\"\n\t\ttokenHandlingForGet: ${bTokenHandlingForGet}, // boolean\n\t\tuseBatch: ${bUseBatch}, // boolean\n\t\twithCredentials: ${bWithCredentials}, // boolean\n\t\tpassword: \"${password}\", // string\n\t\tskipMetadataAnnotationParsing: ${bSkipMetadataAnnotationParsing}, // boolean\n\t\tuser: \"${user}\" // string\n\t}\n)\n","static":"true","prefix":"ODataModel","Experimental":false,"module":"sap/ui/model/odata/v2/ODataModel","description":"ODataModel(vServiceUrl, mParameters?) : sap.ui.model.odata.v2.ODataModel","constructorDescription":"Constructor for a new ODataModel.","extends":"sap.ui.model.Model","Deprecated":false,"name":"sap.ui.model.odata.v2.ODataModel","helpDescription":"Model implementation based on the OData protocol.\n\nSee chapter {@link topic:6c47b2b39db9404582994070ec3d57a2 OData V2 Model} for a general introduction.\n\nThis model is not prepared to be inherited from.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindContext(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\tcreatePreliminaryContext: ${bCreatePreliminaryContext}, // boolean\n\t\tcustom: ${custom}, // Object<string,string>\n\t\texpand: \"${expand}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\tselect: \"${select}\", // string\n\t\tusePreliminaryContext: ${bUsePreliminaryContext}, // boolean\n\t\tbatchGroupId: \"${batchGroupId}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.bindContext","description":"bindContext(sPath, oContext?, mParameters?) : sap.ui.model.odata.v2.ODataContextBinding","helpDescription":"Creates a context binding for this model.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindList(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t\"${aSorters}\", // sap.ui.model.Sorter[]|sap.ui.model.Sorter\n\t\"${aFilters}\", // sap.ui.model.Filter[]|sap.ui.model.Filter\n\t{\n\t\tcountMode: ${countMode}, // sap.ui.model.odata.CountMode\n\t\tcreatedEntitiesKey: \"${createdEntitiesKey}\", // string\n\t\tcustom: ${custom}, // Object<string,string>\n\t\texpand: \"${expand}\", // string\n\t\tfaultTolerant: ${bFaultTolerant}, // boolean\n\t\tgroupId: \"${groupId}\", // string\n\t\toperationMode: ${operationMode}, // sap.ui.model.odata.OperationMode\n\t\tselect: \"${select}\", // string\n\t\ttransitionMessagesOnly: ${bTransitionMessagesOnly}, // boolean\n\t\tusePreliminaryContext: ${bUsePreliminaryContext}, // boolean\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tthreshold: ${threshold} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.bindList","description":"bindList(sPath, oContext?, aSorters?, aFilters?, mParameters?) : sap.ui.model.odata.v2.ODataListBinding","helpDescription":"Creates a new list binding for this model.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindProperty(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // object\n\t{\n\t\tignoreMessages: ${bIgnoreMessages}, // boolean\n\t\tuseUndefinedIfUnresolved: ${bUseUndefinedIfUnresolved} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.bindProperty","description":"bindProperty(sPath, oContext?, mParameters?) : sap.ui.model.PropertyBinding","helpDescription":"Creates a new property binding for this model.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindTree(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t\"${vFilters}\", // sap.ui.model.Filter|sap.ui.model.Filter[]\n\t{\n\t\ttransitionMessagesOnly: ${bTransitionMessagesOnly}, // boolean\n\t\ttreeAnnotationProperties: ${treeAnnotationProperties}, // object\n\t\tnumberOfExpandedLevels: ${iNumberOfExpandedLevels}, // number\n\t\trootLevel: ${iRootLevel}, // number\n\t\tgroupId: \"${groupId}\", // string\n\t\toperationMode: ${operationMode}, // sap.ui.model.odata.OperationMode\n\t\tthreshold: ${iThreshold}, // number\n\t\tuseServersideApplicationFilters: ${bUseServersideApplicationFilters}, // boolean\n\t\ttreeState: ${treeState}, // any\n\t\tcountMode: ${countMode}, // sap.ui.model.odata.CountMode\n\t\tusePreliminaryContext: ${bUsePreliminaryContext}, // boolean\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tnavigation: ${navigation} // object\n\t},\n\t\"${vSorters}\" // sap.ui.model.Sorter[]|sap.ui.model.Sorter\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.bindTree","description":"bindTree(sPath, oContext?, vFilters?, mParameters?, vSorters?) : sap.ui.model.odata.v2.ODataTreeBinding","helpDescription":"Creates a new tree binding for this model.\n\n<h3>Hierarchy Annotations<\/h3> To use the v2.ODataTreeBinding with an OData service which exposes hierarchy annotations, see the <b>\"SAP Annotations for OData Version 2.0\"<\/b> specification. The required property annotations as well as accepted / default values are documented in this specification.\n\nServices which include the <code>hierarchy-node-descendant-count-for<\/code> annotation and expose the data points sorted in a depth-first, pre-order manner, can use an optimized auto-expand feature by specifying the <code>numberOfExpandedLevels<\/code> in the binding parameters. This will pre-expand the hierarchy to the given number of levels, with only a single initial OData request.\n\nFor services without the <code>hierarchy-node-descendant-count-for<\/code> annotation, the <code>numberOfExpandedLevels<\/code> property is not supported and deprecated.\n\n<h3>Operation Modes<\/h3> For a full definition and explanation of all OData binding operation modes, see {@link sap.ui.model.odata.OperationMode}.\n\n<h4>OperationMode.Server<\/h4> Filtering on the <code>ODataTreeBinding<\/code> is only supported with filters of type {@link sap.ui.model.FilterType.Application}. Be aware that this applies only to filters which do not prevent the creation of a hierarchy. So filtering on a property (e.g. a \"Customer\") is fine, as long as the application ensures that the responses from the back end are sufficient to create a valid hierarchy on the client. Subsequent paging requests for sibling and child nodes must also return responses, since the filters are sent with every request. Using control-defined filters (see {@link sap.ui.model.FilterType.Control}) via the {@link #filter} function is not supported for the operation mode <code>Server<\/code>.\n\n<h4>OperationMode.Client and OperationMode.Auto<\/h4> The ODataTreeBinding supports control-defined filters only in operation modes <code>Client<\/code> and <code>Auto<\/code>. With these operation modes, the filters and sorters are applied on the client, like for the {@link sap.ui.model.odata.v2.ODataListBinding}.\n\nThe operation modes <code>Client<\/code> and <code>Auto<\/code> are only supported for services which expose the hierarchy annotations mentioned above, but do <b>not<\/b> expose the <code>hierarchy-node-descendant-count-for<\/code> annotation. Services with hierarchy annotations including the <code>hierarchy-node-descendant-count-for<\/code> annotation, do <b>not<\/b> support the operation modes <code>Client<\/code> and <code>Auto<\/code>. <b>Note:<\/b> {@link sap.ui.model.odata.OperationMode.Auto} is deprecated since 1.102.0.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"callFunction(\n\t\"${sFunctionName}\", // string\n\t{\n\t\tadjustDeepPath: ${fn_adjustDeepPath}, // function\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\terror: ${fn_error}, // function\n\t\teTag: \"${eTag}\", // string\n\t\texpand: \"${expand}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\theaders: ${headers}, // Object<string,string>\n\t\tmethod: \"${method}\", // string\n\t\trefreshAfterChange: ${bRefreshAfterChange}, // boolean\n\t\tsuccess: ${fn_success}, // function\n\t\turlParameters: ${urlParameters}, // Object<string,any>\n\t\tbatchGroupId: \"${batchGroupId}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.callFunction","description":"callFunction(sFunctionName, mParameters?) : object","helpDescription":"Triggers a request for the given function import.\n\nIf the return type of the function import is either an entity type or a collection of an entity type, then this OData model's cache is updated with the values of the returned entities. Otherwise they are ignored, and the <code>response<\/code> can be processed in the <code>success<\/code> callback.\n\nThe <code>contextCreated<\/code> property of the returned object is a function that returns a Promise which resolves with an <code>sap.ui.model.odata.v2.Context<\/code>. This context can be used to modify the function import parameter values and to bind the function call's result. Changes of a parameter value via that context after the function import has been processed lead to another function call with the modified parameters. Changed function import parameters are considered as pending changes, see {@link #hasPendingChanges} or {@link #getPendingChanges}, and can be reset via {@link #resetChanges}. If the function import returns an entity or a collection of entities, the <code>$result<\/code> property relative to that context can be used to bind the result to a control, see {@link topic:6c47b2b39db9404582994070ec3d57a2#loio6cb8d585ed594ee4b447b5b560f292a4 Binding of Function Import Parameters}.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"create(\n\t\"${sPath}\", // string\n\t\"${oData}\", // object\n\t{\n\t\tcontext: ${context}, // object\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\turlParameters: ${urlParameters}, // Object<string,string>\n\t\theaders: ${headers}, // Object<string,string>\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\trefreshAfterChange: ${bRefreshAfterChange} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.create","description":"create(sPath, oData, mParameters?) : object","helpDescription":"Trigger a <code>POST<\/code> request to the OData service that was specified in the model constructor; see {@link topic:6c47b2b39db9404582994070ec3d57a2#loio4c4cd99af9b14e08bb72470cc7cabff4 Creating Entities documentation} for comprehensive information on the topic.\n\n<b>Note:<\/b> This function does not support a \"deep create\" scenario. Use {@link #createEntry} or {@link sap.ui.model.odata.v2.ODataListBinding#create} instead.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"createBindingContext(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // object\n\t{\n\t\texpand: \"${expand}\", // string\n\t\tselect: \"${select}\", // string\n\t\tcreatePreliminaryContext: ${bCreatePreliminaryContext}, // boolean\n\t\tcustom: ${custom} // Object<string,string>\n\t},\n\t\"${fnCallBack}\", // function\n\t\"${bReload}\" // boolean\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.createBindingContext","description":"createBindingContext(sPath, oContext?, mParameters?, fnCallBack?, bReload?) : sap.ui.model.odata.v2.Context|undefined","helpDescription":"Creates a binding context for the given path.\n\nIf the data of the context is not yet available, it can not be created, but first the entity needs to be fetched from the server asynchronously. In case no callback function is provided, the request will not be triggered.\n\nIf a callback function is given, the created binding context for a fetched entity is passed as argument to the given callback function.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"createEntry(\n\t\"${sPath}\", // string\n\t{\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\tcontext: ${context}, // sap.ui.model.Context\n\t\tcreated: ${fn_created}, // function\n\t\terror: ${fn_error}, // function\n\t\texpand: \"${expand}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\theaders: ${headers}, // Object<string,string>\n\t\tinactive: ${bInactive}, // boolean\n\t\tproperties: [${properties}], // object|string[]\n\t\trefreshAfterChange: ${bRefreshAfterChange}, // boolean\n\t\tsuccess: ${fn_success}, // function\n\t\turlParameters: ${urlParameters} // Object<string,string>\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.createEntry","description":"createEntry(sPath, mParameters) : sap.ui.model.odata.v2.Context|undefined","helpDescription":"Creates a new entry object which is described by the metadata of the entity type of the specified <code>sPath<\/code> Name. A context object is returned which can be used to bind against the newly created object. See {@link topic:6c47b2b39db9404582994070ec3d57a2#loio4c4cd99af9b14e08bb72470cc7cabff4 Creating Entities documentation} for comprehensive information on the topic.\n\nFor each created entry a request is created and stored in a request queue. The request queue can be submitted by calling {@link #submitChanges}. As long as the context is transient (see {@link sap.ui.model.odata.v2.Context#isTransient}), {@link sap.ui.model.odata.v2.ODataModel#resetChanges} with the <code>bDeleteCreatedEntities<\/code> parameter set to <code>true<\/code> can be used to delete the created entity again.\n\nIf the creation of the entity on the server failed, it is repeated automatically.\n\nThe optional parameter <code>mParameters.properties<\/code> can be used as follows: <ul> <li><code>properties<\/code> could be an array containing the property names which should be included in the new entry. Other properties defined in the entity type won't be included. <\/li> <li><code>properties<\/code> could be an object which includes the desired properties and the corresponding values which should be used for the created entry. <\/li> <\/ul> If <code>properties<\/code> is not specified, all properties in the entity type will be included in the created entry.\n\nIf there are no values specified, the properties will have <code>undefined<\/code> values.\n\nThe <code>properties<\/code> can be modified via property bindings relative to the returned context instance.\n\nThe parameter <code>expand<\/code> is supported since 1.78.0. If this parameter is set, the given navigation properties are expanded automatically with the same $batch request in which the POST request for the creation is contained. Ensure that the batch mode is used and the back-end service supports GET requests relative to a content ID outside the changeset. The success and error callback functions are called only once, even if there are two requests in the <code>$batch<\/code> related to a single call of {@link #createEntry}: <ul> <li>a POST request for creating an entity,<\/li> <li>a GET request for requesting the navigation properties for the just created entity. <\/li> <\/ul> The following outcomes are possible: <ul> <li>If both requests succeed, the success handler is called with the merged data of the POST and the GET request and with the response of the POST request.<\/li> <li>If the POST request fails, the GET request also fails. In that case the error callback handler is called with the error response of the POST request.<\/li> <li>If the POST request succeeds but the GET request for the navigation properties fails, the success handler is called with the data and the response of the POST request. The response object of the success handler call and the response parameter of the corresponding <code>requestFailed<\/code> and <code>requestCompleted<\/code> events have an additional property <code>expandAfterCreateFailed<\/code> set to <code>true<\/code>. <\/li> <\/ul>\n\nNote: If a server requires a property in the request, you must supply this property in the initial data, for example if the server requires a unit for an amount. This also applies if this property has a default value.\n\nNote: Deep create is only supported since 1.108.0, where \"deep create\" means creation of a sub-entity for a navigation property of a transient, not yet persisted root entity. Before 1.108.0, the sub-entity had to be created after the transient entity had been saved successfully in the back-end system. Since 1.108.0, a deep create is triggered when the <code>sPath<\/code> parameter is a navigation property for the entity type associated with the transient context given in <code>mParameters.context<\/code>. The payload of the OData request to create the root entity then contains its sub-entities. On creation of a sub-entity, only the <code>sPath<\/code>, <code>mParameters.context<\/code> and <code>mParameters.properties<\/code> method parameters are allowed; the context given in <code>mParameters.context<\/code> must not be inactive.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAnnotationsFailed(\n\t{\n\t\tmessage: \"${message}\", // string\n\t\tstatusCode: \"${statusCode}\", // string\n\t\tstatusText: \"${statusText}\", // string\n\t\tresponseText: \"${responseText}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.fireAnnotationsFailed","description":"fireAnnotationsFailed(oParameters?) : sap.ui.model.odata.v2.ODataModel","helpDescription":"Fires event {@link #event:annotationsFailed annotationsFailed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAnnotationsLoaded(\n\t{\n\t\tannotations: ${annotations} // sap.ui.model.odata.v2.ODataAnnotations\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.fireAnnotationsLoaded","description":"fireAnnotationsLoaded(oParameters?) : sap.ui.model.odata.v2.ODataModel","helpDescription":"Fires event {@link #event:annotationsLoaded annotationsLoaded} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBatchRequestCompleted(\n\t{\n\t\tID: \"${ID}\", // string\n\t\turl: \"${url}\", // string\n\t\tmethod: \"${method}\", // string\n\t\theaders: ${headers}, // Object<string,string>\n\t\tsuccess: ${bSuccess}, // boolean\n\t\tasync: ${bAsync}, // boolean\n\t\trequests: [${requests}], // array\n\t\tresponse: ${response} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.fireBatchRequestCompleted","description":"fireBatchRequestCompleted(oParameters) : sap.ui.model.odata.v2.ODataModel","helpDescription":"Fires event {@link #event:batchRequestCompleted batchRequestCompleted} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBatchRequestFailed(\n\t{\n\t\tID: \"${ID}\", // string\n\t\turl: \"${url}\", // string\n\t\tmethod: \"${method}\", // string\n\t\theaders: ${headers}, // Object<string,string>\n\t\tasync: ${bAsync}, // boolean\n\t\tsuccess: ${bSuccess}, // boolean\n\t\tresponse: ${response}, // object\n\t\trequests: [${requests}] // array\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.fireBatchRequestFailed","description":"fireBatchRequestFailed(oParameters) : sap.ui.model.odata.v2.ODataModel","helpDescription":"Fires event {@link #event:batchRequestFailed batchRequestFailed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBatchRequestSent(\n\t{\n\t\turl: \"${url}\", // string\n\t\ttype: \"${type}\", // string\n\t\tasync: ${bAsync}, // boolean\n\t\trequests: [${requests}] // array\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.fireBatchRequestSent","description":"fireBatchRequestSent(oParameters?) : sap.ui.model.odata.v2.ODataModel","helpDescription":"Fires event {@link #event:batchRequestSent batchRequestSent} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireMetadataFailed(\n\t{\n\t\tmessage: \"${message}\", // string\n\t\tstatusCode: \"${statusCode}\", // string\n\t\tstatusText: \"${statusText}\", // string\n\t\tresponseText: \"${responseText}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.fireMetadataFailed","description":"fireMetadataFailed(oParameters?) : sap.ui.model.odata.v2.ODataModel","helpDescription":"Fires event {@link #event:metadataFailed metadataFailed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireMetadataLoaded(\n\t{\n\t\tmetadata: ${metadata} // sap.ui.model.odata.ODataMetadata\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.fireMetadataLoaded","description":"fireMetadataLoaded(oParameters?) : sap.ui.model.odata.v2.ODataModel","helpDescription":"Fires event {@link #event:metadataLoaded metadataLoaded} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getObject(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\tselect: \"${select}\", // string\n\t\texpand: \"${expand}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.getObject","description":"getObject(sPath, oContext?, mParameters?) : any|undefined","helpDescription":"Returns a JSON object that is a copy of the entity data referenced by the given <code>sPath<\/code> and <code>oContext<\/code>. It does not load any data and may not return all requested data if it is not available.\n\nWith the <code>mParameters.select<\/code> parameter it is possible to specify comma-separated property or navigation property names which should be included in the result object. This works like the OData <code>$select<\/code> URL parameter. With the <code>mParameters.expand<\/code> parameter it is possible to specify comma-separated navigation property names which should be included inline in the result object. This works like the OData <code>$expand<\/code> parameter.\n\n<b>Note:<\/b> <code>mParameters.expand<\/code> can only be used if the corresponding navigation properties have been read via {@link sap.ui.model.odata.v2.ODataModel#read} using the OData <code>$expand<\/code> URL parameter. If a navigation property has not been read via the OData <code>$expand<\/code> URL parameter, it is left out in the result. Keep in mind that navigation properties referencing a collection are usually not loaded via the OData <code>$expand<\/code> URL parameter but directly via its navigation property.\n\n<b>Note:<\/b> If <code>mParameters.select<\/code> is not specified, the returned object may contain model-internal attributes. This may lead to problems when submitting this data to the service for an update or create operation. To get a copy of the entity without internal attributes, use <code>{select: \"*\"}<\/code> instead.\n\n<b>Note:<\/b> If <code>mParameters.select<\/code> is given and not all selected properties are available, this method returns <code>undefined<\/code> instead of incomplete data.\n\n<b>Note:<\/b> If <code>mParameters.select<\/code> is not given, all properties and navigation properties available on the client are returned.\n\nExample:<br> With <code>mParameters<\/code> given as <code>{select: \"Products/ProductName, Products\", expand:\"Products\"}<\/code> no properties of the entity itself are returned, but only the <code>ProductName<\/code> property of the <code>Products<\/code> navigation property. If <code>Products/ProductName<\/code> has not been loaded before, <code>undefined<\/code> is returned.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"read(\n\t\"${sPath}\", // string\n\t{\n\t\tcontext: ${context}, // object\n\t\turlParameters: ${urlParameters}, // Object<string,string>\n\t\tfilters: [${filters}], // sap.ui.model.Filter[]\n\t\tsorters: [${sorters}], // sap.ui.model.Sorter[]\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\tupdateAggregatedMessages: ${bUpdateAggregatedMessages} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.read","description":"read(sPath, mParameters?) : object","helpDescription":"Trigger a <code>GET<\/code> request to the OData service that was specified in the model constructor.\n\nThe data will be stored in the model. The requested data is returned with the response.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"remove(\n\t\"${sPath}\", // string\n\t{\n\t\tcontext: ${context}, // object\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\teTag: \"${eTag}\", // string\n\t\turlParameters: ${urlParameters}, // Object<string,string>\n\t\theaders: ${headers}, // Object<string,string>\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\trefreshAfterChange: ${bRefreshAfterChange} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.remove","description":"remove(sPath, mParameters?) : object","helpDescription":"Trigger a <code>DELETE<\/code> request to the OData service that was specified in the model constructor.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"requestSideEffects(\n\t\"${oContext}\", // sap.ui.model.odata.v2.Context\n\t{\n\t\tgroupId: \"${groupId}\", // string\n\t\turlParameters: ${urlParameters} // Object<string,string>\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.requestSideEffects","description":"requestSideEffects(oContext, mParameters?) : Promise<sap.ui.model.odata.v2.ODataListBinding[]>","helpDescription":"Requests side effects for the entity referred to by the given context using a GET request with the given URL parameters, esp. <code>$expand<\/code> and <code>$select<\/code>, which represent the paths affected by side effects on the entity. List bindings which are affected by the given <code>$expand<\/code>, and are using custom parameters or filters/sorters in <code>OperationMode.Server<\/code> are refreshed with additional GET requests within the same batch request.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"submitChanges(\n\t{\n\t\tgroupId: \"${groupId}\", // string\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tmerge: ${bMerge} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.submitChanges","description":"submitChanges(mParameters?) : object","helpDescription":"Submits the collected changes which were collected by the {@link #setProperty} method and other deferred requests.\n\nThe update method is defined by the global <code>defaultUpdateMethod<\/code> parameter which is <code>sap.ui.model.odata.UpdateMethod.Merge<\/code> by default. In case of a <code>sap.ui.model.odata.UpdateMethod.Merge<\/code> request only the changed properties will be updated. If a URI with a <code>$expand<\/code> query option was used then the expand entries will be removed from the collected changes. Changes to this entries should be done on the entry itself. So no deep updates are supported.\n\n<b>Important<\/b>: The success/error handler will only be called if batch support is enabled. If multiple batch groups are submitted the handlers will be called for every batch group. If there are no changes/requests or all contained requests are aborted before a batch request returns, the success handler will be called with an empty response object. If the abort method on the return object is called, all contained batch requests will be aborted and the error handler will be called for each of them.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"submitChangesWithChangeHeaders(\n\t{\n\t\tchangeHeaders: ${changeHeaders}, // Object<string,string>\n\t\terror: ${fn_error}, // function\n\t\tgroupId: \"${groupId}\", // string\n\t\tsuccess: ${fn_success}, // function\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tmerge: ${bMerge} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.submitChangesWithChangeHeaders","description":"submitChangesWithChangeHeaders(mParameters?) : object","helpDescription":"Submits all deferred requests just like {@link #submitChanges} but in addition adds the given headers to all requests in the $batch request(s).","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"update(\n\t\"${sPath}\", // string\n\t\"${oData}\", // object\n\t{\n\t\tcontext: ${context}, // object\n\t\tsuccess: ${fn_success}, // function\n\t\terror: ${fn_error}, // function\n\t\teTag: \"${eTag}\", // string\n\t\turlParameters: ${urlParameters}, // Object<string,string>\n\t\theaders: ${headers}, // Object<string,string>\n\t\tbatchGroupId: \"${batchGroupId}\", // string\n\t\tgroupId: \"${groupId}\", // string\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\trefreshAfterChange: ${bRefreshAfterChange} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataModel.update","description":"update(sPath, oData, mParameters?) : object","helpDescription":"Trigger a <code>PUT/MERGE<\/code> request to the OData service that was specified in the model constructor.\n\nThe update method used is defined by the global <code>defaultUpdateMethod<\/code> parameter which is <code>sap.ui.model.odata.UpdateMethod.Merge<\/code> by default. Please note that deep updates are not supported and may not work. These should be done separately and directly on the corresponding entry.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"createEntry(\n\t{\n\t\tchangeSetId: \"${changeSetId}\", // string\n\t\tcreated: ${fn_created}, // function\n\t\terror: ${fn_error}, // function\n\t\theaders: ${headers}, // Object<string,string>\n\t\tproperties: [${properties}], // array|object\n\t\tsuccess: ${fn_success}, // function\n\t\turlParameters: ${urlParameters} // Object<string,string>\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v2.ODataTreeBinding.createEntry","description":"createEntry(mParameters?) : sap.ui.model.odata.v2.Context|undefined","helpDescription":"Creates a new entry for the tree.\n\nA context object is returned which can be inserted in the tree hierarchy via {@link sap.ui.model.odata.v2.ODataTreeBinding#addContexts addContexts}. <b>Note:<\/b> The back-end request to create the entry is sent with the batch group stored at this binding's model for this binding's resolved path.\n\nThis feature is only available when the underlying OData service exposes the \"hierarchy-node-descendant-count-for\" annotation. See {@link sap.ui.model.odata.v2.ODataModel#bindTree} for more details.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"format(\n\t\"${vRawValue}\", // any\n\t{\n\t\targuments: [${arguments}], // any[]\n\t\tcontext: ${context}, // sap.ui.model.Context\n\t\toverload: ${overload} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/odata/v4/AnnotationHelper","name":"sap.ui.model.odata.v4.AnnotationHelper.format","description":"format(vRawValue, oDetails) : string|Promise<string>","helpDescription":"A function that helps to interpret OData V4 annotations.\n\nUnsupported or incorrect values are turned into a string nevertheless, but are indicated as such. In such a case, an error describing the problem is logged to the console. Proper escaping is used to make sure that data binding syntax is not corrupted.\n\nExample: <pre>\n&lt;Text text=\"{meta>Value/@@sap.ui.model.odata.v4.AnnotationHelper.format}\" />\n<\/pre>\n\n<h3>Supported Expressions<\/h3> <ul> <li> \"14.4 Constant Expressions\" for \"edm:Bool\", \"edm:Date\", \"edm:DateTimeOffset\", \"edm:Decimal\", \"edm:Float\", \"edm:Guid\", \"edm:Int\", \"edm:TimeOfDay\". <li> constant \"14.4.11 Expression edm:String\": This is turned into a fixed text (for example <code>\"Width\"<\/code>). String constants that contain a simple binding <code>\"{@i18n>...}\"<\/code> to the hard-coded model name \"@i18n\" with arbitrary path are not turned into a fixed text, but kept as a data binding expression; this allows local annotation files to refer to a resource bundle for internationalization. <li> dynamic \"14.5.1 Comparison and Logical Operators\": These are turned into expression bindings to perform the operations at runtime. <li> dynamic \"14.5.3 Expression edm:Apply\": <ul> <li> \"14.5.3.1.1 Function odata.concat\": This is turned into a data binding expression relative to an entity. <li> \"14.5.3.1.2 Function odata.fillUriTemplate\": This is turned into an expression binding to fill the template at runtime. <li> \"14.5.3.1.3 Function odata.uriEncode\": This is turned into an expression binding to encode the parameter at runtime. <li> Apply functions may be nested arbitrarily. <\/ul> <li> dynamic \"14.5.5 Expression edm:Collection\": This is turned into an expression binding to be evaluated at runtime. Elements can be conditionally added to the collection when using dynamic \"14.5.6 Expression edm:If\" as a direct child. <li> dynamic \"14.5.6 Expression edm:If\": This is turned into an expression binding to be evaluated at runtime. The expression is a conditional expression like <code>\"{=condition ? expression1 : expression2}\"<\/code>. <li> dynamic \"14.5.10 Expression edm:Null\": This is turned into a <code>null<\/code> value. It is ignored in <code>odata.concat<\/code>. <li> dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression edm:PropertyPath\": These are turned into data bindings relative to an entity, including type information and constraints as available from metadata, for example <code>\"{path : 'Name', type : 'sap.ui.model.odata.type.String', constraints : {'maxLength' : 255}, formatOptions : {'parseKeepsEmptyString' : true}}\"<\/code>. Depending on the used type, some additional constraints and format options of this type are set: <ul> <li> Edm.DateTime: The \"displayFormat\" constraint is set to the value of the \"sap:display-format\" annotation of the referenced property. <li> Edm.Decimal: The \"precision\" and \"scale\" constraints are set to the values of the corresponding attributes of the referenced property. The \"minimum\", \"maximum\", \"minimumExclusive\", and \"maximumExclusive\" constraints are set to the values of the corresponding \"Org.OData.Validation.V1\" annotation of the referenced property; note that in this case only constant expressions are supported to determine the annotation value. <li> Edm.String: The \"maxLength\" constraint is set to the value of the corresponding attribute of the referenced property, and the \"isDigitSequence\" constraint is set to the value of the \"com.sap.vocabularies.Common.v1.IsDigitSequence\" annotation of the referenced property; note that in this case only constant expressions are supported to determine the annotation value. The \"parseKeepsEmptyString\" format option is set. <\/ul> Since 1.78.0, both \"edm:Path\" and \"edm:PropertyPath\" are also supported if <code>vRawValue<\/code> is the path itself, and not the object wrapping it. <\/ul> <b>Note: Import the <code>sap/ui/model/odata/ODataExpressionAddons<\/code> module when using 14.5.1 or 14.5.3<\/b>\n\n<h3>$AnnotationPath and $Path<\/h3> If <code>oDetails.context.getPath()<\/code> contains a single \"$AnnotationPath\" or \"$Path\" segment, the value corresponding to that segment is considered as a data binding path prefix whenever a dynamic \"14.5.12 Expression edm:Path\" or \"14.5.13 Expression edm:PropertyPath\" is turned into a data binding. Use {@link sap.ui.model.odata.v4.AnnotationHelper.resolve$Path} to avoid these prefixes in cases where they are not applicable.\n\n<h4>$AnnotationPath<\/h4> Example for \"$AnnotationPath\" in the context's path: <pre>\n&lt;Annotations Target=\"com.sap.gateway.default.iwbep.tea_busi.v0001.EQUIPMENT\">\n  &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.Facets\">\n    &lt;Collection>\n      &lt;Record Type=\"com.sap.vocabularies.UI.v1.ReferenceFacet\">\n        &lt;PropertyValue Property=\"Target\" AnnotationPath=\"EQUIPMENT_2_PRODUCT/@com.sap.vocabularies.Common.v1.QuickInfo\" />\n      &lt;/Record>\n    &lt;/Collection>\n  &lt;/Annotation>\n&lt;/Annotations>\n&lt;Annotations Target=\"com.sap.gateway.default.iwbep.tea_busi_product.v0001.Product\">\n  &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.QuickInfo\" Path=\"Name\" />\n&lt;/Annotations>\n<\/pre> <pre>\n&lt;Text text=\"{meta>/Equipments/@com.sap.vocabularies.UI.v1.Facets/0/Target/$AnnotationPath/@@sap.ui.model.odata.v4.AnnotationHelper.format}\" />\n<\/pre> <code>format<\/code> returns a binding with path \"EQUIPMENT_2_PRODUCT/Name\".\n\n<h4>$Path<\/h4> Example for \"$Path\" in the context's path: <pre>\n&lt;Annotations Target=\"com.sap.gateway.default.iwbep.tea_busi.v0001.EQUIPMENT\">\n  &lt;Annotation Term=\"com.sap.vocabularies.UI.v1.LineItem\">\n    &lt;Collection>\n      &lt;Record Type=\"com.sap.vocabularies.UI.v1.DataField\">\n        &lt;PropertyValue Property=\"Value\" Path=\"EQUIPMENT_2_PRODUCT/Name\" />\n      &lt;/Record>\n    &lt;/Collection>\n  &lt;/Annotation>\n&lt;/Annotations>\n&lt;Annotations Target=\"com.sap.gateway.default.iwbep.tea_busi_product.v0001.Product/Name\">\n  &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.QuickInfo\" Path=\"PRODUCT_2_SUPPLIER/Supplier_Name\" />\n&lt;/Annotations>\n<\/pre> <pre>\n&lt;Text text=\"{meta>/Equipments/@com.sap.vocabularies.UI.v1.LineItem/0/Value/$Path@com.sap.vocabularies.Common.v1.QuickInfo@@sap.ui.model.odata.v4.AnnotationHelper.format}\" />\n<\/pre> <code>format<\/code> returns a binding with path \"EQUIPMENT_2_PRODUCT/PRODUCT_2_SUPPLIER/Supplier_Name\".\n\n<h3>Annotations on an Operation or a Parameter<\/h3> Since 1.71.0, for annotations on an operation or a parameter, the binding parameter's name is stripped off any dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression edm:PropertyPath\" where it might be used as a first segment. Since 1.76.0 this does not apply to annotations on a parameter. In the former case, we assume that the resulting data binding is relative to the parent context of the operation binding, that is, to the context representing the binding parameter itself. In the latter case, we assume that the resulting data binding is relative to the parameter context of the operation binding (see {@link sap.ui.model.odata.v4.ODataContextBinding#getParameterContext}).\n\nExample: <pre>\n   &lt;Action Name=\"ShipProduct\" EntitySetPath=\"_it\" IsBound=\"true\" >\n       &lt;Parameter Name=\"_it\" Type=\"name.space.Product\" Nullable=\"false\"/>\n       &lt;Parameter Name=\"City\" Type=\"Edm.String\"/>\n   &lt;/Action>\n<\/pre> For the operation <code>ShipProduct<\/code> mentioned above, the following annotation targets an operation parameter and refers back to the binding parameter. <pre>\n    &lt;Annotations Target=\"name.space.ShipProduct(name.space.Product)/City\">\n       &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.Text\" Path=\"_it/SupplierIdentifier\"/>\n    &lt;/Annotations>\n<\/pre>\n\nUsing <code>AnnotationHelper.format<\/code> like <pre>\n&lt;Text text=\"{meta>/Products/name.space.ShipProduct/$Parameter/City@com.sap.vocabularies.Common.v1.Text@@sap.ui.model.odata.v4.AnnotationHelper.format}\" />\n<\/pre> results in <pre>\n&lt;Text text=\"{path:'_it/SupplierIdentifier',type:'sap.ui.model.odata.type.Int32'}\" />\n<\/pre> and the data binding evaluates to the <code>SupplierIdentifier<\/code> property of the entity the operation is called on.\n\n<h3>Operation Parameters<\/h3> Since 1.73.0, this function can be used on action or function parameters and results in a relative data binding, just like a \"14.5.12 Expression edm:Path\".\n\nAssume we have the following metadata for an unbound action \"AcChangeTeamBudgetByID\": <pre>\n   &lt;Action Name=\"AcChangeTeamBudgetByID\">\n       &lt;Parameter Name=\"TeamID\" Type=\"Edm.String\" Nullable=\"false\" MaxLength=\"10\"/>\n       &lt;Parameter Name=\"Budget\" Type=\"Edm.Decimal\" Nullable=\"false\" Precision=\"16\" Scale=\"variable\"/>\n   &lt;/Action>\n<\/pre>\n\nLet <code>ChangeTeamBudgetByID<\/code> be the action import of this action. Using <code>AnnotationHelper.format<\/code> for the <code>TeamID<\/code> like <pre>\n&lt;Text text=\"{meta>/ChangeTeamBudgetByID/TeamID@@sap.ui.model.odata.v4.AnnotationHelper.format}\" />\n<\/pre> results in <pre>\n&lt;Text text=\"{path:'TeamID',type:'sap.ui.model.odata.type.String',constraints:{'maxLength':10,'nullable':false},formatOptions:{'parseKeepsEmptyString':true}}\" />\n<\/pre>\n\n<h3>Binding Parameters and Format Options<\/h3> Since 1.77.0, binding parameters and format options can be given. The usage <pre>\n&lt;Input value=\"{meta>/ChangeTeamBudgetByID/Budget@@sap.ui.model.odata.v4.AnnotationHelper.format($($$noPatch : true$), $(groupingEnabled : false$))}\" />\n<\/pre> results in a data binding with the given binding parameters and format options. Note how, for an object notation, curly brackets must be replaced by <code>$(<\/code> and <code>$)<\/code> respectively. Use <code>null<\/code>, not <code>undefined<\/code>, in case no binding parameters are needed.\n\n<h3>Structural Properties<\/h3> Since 1.78.0, this function can be used on a structural property and results in a relative data binding, just like a \"14.5.12 Expression edm:Path\". The usage <pre>\n&lt;Input value=\"{meta>/Department/Name@@sap.ui.model.odata.v4.AnnotationHelper.format}\"/>\n<\/pre> results in <pre>\n&lt; Input value=\"{path:'Name',type:'sap.ui.model.odata.type.String',constraints:{'maxLength':40,'nullable':false},formatOptions:{'parseKeepsEmptyString':true}}\"/>\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getValueListType(\n\t\"${vRawValue}\", // any\n\t{\n\t\t$$valueAsPromise: ${b$$valueAsPromise}, // boolean\n\t\tcontext: ${context}, // sap.ui.model.Context\n\t\tschemaChildName: \"${schemaChildName}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/odata/v4/AnnotationHelper","name":"sap.ui.model.odata.v4.AnnotationHelper.getValueListType","description":"getValueListType(vRawValue, oDetails) : sap.ui.model.odata.v4.ValueListType|Promise<sap.ui.model.odata.v4.ValueListType>","helpDescription":"Determines which type of value list exists for the given property.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"isMultiple(\n\t\"${sPath}\", // string\n\t{\n\t\t$$valueAsPromise: ${b$$valueAsPromise}, // boolean\n\t\tcontext: ${context}, // sap.ui.model.Context\n\t\tschemaChildName: \"${schemaChildName}\" // string\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/odata/v4/AnnotationHelper","name":"sap.ui.model.odata.v4.AnnotationHelper.isMultiple","description":"isMultiple(sPath, oDetails) : boolean|Promise<boolean>","helpDescription":"A function that helps to interpret OData V4 annotations. It knows about the syntax of the path value used by the following dynamic expressions: <ul> <li> \"14.5.2 Expression edm:AnnotationPath\" <li> \"14.5.11 Expression edm:NavigationPropertyPath\" <li> \"14.5.12 Expression edm:Path\" <li> \"14.5.13 Expression edm:PropertyPath\" <\/ul> It returns the information whether the given path ends with \"$count\" or with a multi-valued structural or navigation property. Term casts and annotations on navigation properties are ignored.\n\nExample: <pre>\n&lt;template:if test=\"{facet>Target/$AnnotationPath@@sap.ui.model.odata.v4.AnnotationHelper.isMultiple}\">\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"label(\n\t\"${vRawValue}\", // any\n\t{\n\t\t$$valueAsPromise: ${b$$valueAsPromise}, // boolean\n\t\tcontext: ${context} // sap.ui.model.Context\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/odata/v4/AnnotationHelper","name":"sap.ui.model.odata.v4.AnnotationHelper.label","description":"label(vRawValue, oDetails) : string|Promise<(string|undefined)>|undefined","helpDescription":"Returns the value for the label of a <code>com.sap.vocabularies.UI.v1.DataFieldAbstract<\/code> from the meta model. If no <code>Label<\/code> property is available, but the data field has a <code>Value<\/code> property with an <code>edm:Path<\/code> expression as value, the label will be taken from the <code>com.sap.vocabularies.Common.v1.Label<\/code> annotation of the path's target property.\n\nExample: <pre>\n&lt;Label text=\"{meta>@@sap.ui.model.odata.v4.AnnotationHelper.label}\" />\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"value(\n\t\"${vRawValue}\", // any\n\t{\n\t\targuments: [${arguments}], // any[]\n\t\tcontext: ${context}, // sap.ui.model.Context\n\t\toverload: ${overload} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/odata/v4/AnnotationHelper","name":"sap.ui.model.odata.v4.AnnotationHelper.value","description":"value(vRawValue, oDetails) : string","helpDescription":"A function that helps to interpret OData V4 annotations.\n\nUnsupported or incorrect values are turned into a string nevertheless, but are indicated as such. In such a case, an error describing the problem is logged to the console.\n\nExample: <pre>\n&lt;Text text=\"{meta>Value/@@sap.ui.model.odata.v4.AnnotationHelper.value}\" />\n<\/pre>\n\n<h3>Supported Expressions<\/h3> <ul> <li> \"14.4 Constant Expressions\" for \"edm:Bool\", \"edm:Date\", \"edm:DateTimeOffset\", \"edm:Decimal\", \"edm:Float\", \"edm:Guid\", \"edm:Int\", \"edm:TimeOfDay\". <li> constant \"14.4.11 Expression edm:String\": This is turned into a fixed text (for example <code>\"Width\"<\/code>). String constants that contain a simple binding <code>\"{@i18n>...}\"<\/code> to the hard-coded model name \"@i18n\" with arbitrary path are not turned into a fixed text, but kept as a data binding expression; this allows local annotation files to refer to a resource bundle for internationalization. <li> dynamic \"14.5.1 Comparison and Logical Operators\": These are turned into expression bindings to perform the operations at runtime. <li> dynamic \"14.5.3 Expression edm:Apply\": <ul> <li> \"14.5.3.1.1 Function odata.concat\": This is turned into a data binding expression. <li> \"14.5.3.1.2 Function odata.fillUriTemplate\": This is turned into an expression binding to fill the template at runtime. <li> \"14.5.3.1.3 Function odata.uriEncode\": This is turned into an expression binding to encode the parameter at runtime. <li> Apply functions may be nested arbitrarily. <\/ul> <li> dynamic \"14.5.5 Expression edm:Collection\": This is turned into an expression binding to be evaluated at runtime. Elements can be conditionally added to the collection when using dynamic \"14.5.6 Expression edm:If\" as a direct child. <li> dynamic \"14.5.6 Expression edm:If\": This is turned into an expression binding to be evaluated at runtime. The expression is a conditional expression like <code>\"{=condition ? expression1 : expression2}\"<\/code>. <li> dynamic \"14.5.10 Expression edm:Null\": This is turned into a <code>null<\/code> value. It is ignored in <code>odata.concat<\/code>. <li> dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression edm:PropertyPath\": These are turned into simple data bindings, for example <code>\"{Name}\"<\/code>. Since 1.78.0, both are also supported if <code>vRawValue<\/code> is the path itself, and not the object wrapping it. <\/ul>\n\n<h3>Annotations on an Operation or a Parameter<\/h3> Since 1.71.0, for annotations on an operation or a parameter, the binding parameter's name is stripped off any dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression edm:PropertyPath\" where it might be used as a first segment. Since 1.76.0 this does not apply to annotations on a parameter. In the former case, we assume that the resulting data binding is relative to the parent context of the operation binding, that is, to the context representing the binding parameter itself. In the latter case, we assume that the resulting data binding is relative to the parameter context of the operation binding (see {@link sap.ui.model.odata.v4.ODataContextBinding#getParameterContext}).\n\nExample: <pre>\n   &lt;Action Name=\"ShipProduct\" EntitySetPath=\"_it\" IsBound=\"true\" >\n       &lt;Parameter Name=\"_it\" Type=\"name.space.Product\" Nullable=\"false\"/>\n       &lt;Parameter Name=\"City\" Type=\"Edm.String\"/>\n   &lt;/Action>\n<\/pre> For the operation <code>ShipProduct<\/code> mentioned above, the following annotation targets an operation parameter and refers back to the binding parameter. <pre>\n    &lt;Annotations Target=\"name.space.ShipProduct(name.space.Product)/City\">\n       &lt;Annotation Term=\"com.sap.vocabularies.Common.v1.Text\" Path=\"_it/SupplierIdentifier\"/>\n    &lt;/Annotations>\n<\/pre>\n\nUsing <code>AnnotationHelper.value<\/code> like <pre>\n&lt;Text text=\"{meta>/Products/name.space.ShipProduct/$Parameter/City@com.sap.vocabularies.Common.v1.Text@@sap.ui.model.odata.v4.AnnotationHelper.value}\" />\n<\/pre> results in <pre>\n&lt;Text text=\"{_it/SupplierIdentifier}\" />\n<\/pre> and the data binding evaluates to the <code>SupplierIdentifier<\/code> property of the entity the operation is called on.\n\n<h3>Operation Parameters<\/h3> Since 1.73.0, this function can be used on action or function parameters and results in a relative data binding, just like a \"14.5.12 Expression edm:Path\".\n\nAssume we have the following metadata for an unbound action \"AcChangeTeamBudgetByID\": <pre>\n   &lt;Action Name=\"AcChangeTeamBudgetByID\">\n       &lt;Parameter Name=\"TeamID\" Type=\"Edm.String\" Nullable=\"false\" MaxLength=\"10\"/>\n       &lt;Parameter Name=\"Budget\" Type=\"Edm.Decimal\" Nullable=\"false\" Precision=\"16\" Scale=\"variable\"/>\n   &lt;/Action>\n<\/pre>\n\nLet <code>ChangeTeamBudgetByID<\/code> be the action import of this action. Using <code>AnnotationHelper.value<\/code> for the <code>TeamID<\/code> like <pre>\n&lt;Text text=\"{meta>/ChangeTeamBudgetByID/TeamID@@sap.ui.model.odata.v4.AnnotationHelper.value}\" />\n<\/pre> results in <pre>\n&lt;Text text=\"{TeamID}\" />\n<\/pre>\n\n<h3>Binding Parameters<\/h3> Since 1.77.0, binding parameters can be given. The usage <pre>\n&lt;Input value=\"{meta>/ChangeTeamBudgetByID/Budget@@sap.ui.model.odata.v4.AnnotationHelper.value($($$noPatch : true$))}\" />\n<\/pre> results in a data binding with the given binding parameters. Note how, for an object notation, curly brackets must be replaced by <code>$(<\/code> and <code>$)<\/code> respectively.\n\n<h3>Structural Properties<\/h3> Since 1.78.0, this function can be used on a structural property and results in a relative data binding, just like a \"14.5.12 Expression edm:Path\". The usage <pre>\n&lt;Input value=\"{meta>/Department/Name@@sap.ui.model.odata.v4.AnnotationHelper.value}\"/>\n<\/pre> results in <pre>\n&lt; Input value=\"{Name}\"/>\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"move(\n\t{\n\t\tnextSibling: ${nextSibling}, // sap.ui.model.odata.v4.Context|null\n\t\tparent: ${parent} // sap.ui.model.odata.v4.Context|null\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.Context.move","description":"move(oParameters) : Promise<void>","helpDescription":"In a {@link sap.ui.model.odata.v4.ODataListBinding#setAggregation recursive hierarchy}, this method moves a node to the given new parent, just before the given next sibling. No other {@link sap.ui.model.odata.v4.ODataListBinding#create creation}, {@link #delete deletion}, or move must be pending, and no other modification (including the collapse of an ancestor node) must happen while this move is pending!\n\nThe move potentially changes the {@link #getIndex index} of this context, of all of its descendants, and of all other nodes affected by the move. Any index change can, however, only be observed reliably for this context itself or (since 1.126.0) the next sibling's context if that is {@link #isKeepAlive kept alive} or {@link #isSelected selected} (and the preconditions of {@link #setKeepAlive} hold). For a kept-alive or selected next sibling, the index must be retrieved as soon as the returned promise resolves. If such a next sibling is not one of the binding's {@link sap.ui.model.odata.v4.ODataListBinding#getCurrentContexts current contexts} after the move, it is not in the collection anymore and thus loses its index pretty soon.\n\nThe move changes the {@link topic:c9723f8265f644af91c0ed941e114d46/section_CST context states} of the nodes as follows: <ul> <li> If the moved node is in the \"created\" state, it becomes simply \"persisted\", with {@link #isTransient} returning <code>undefined<\/code>. In this case, any descendants of this node are themselves in the \"created\" state and also become \"persisted\"; otherwise, their states remain unaffected by the move. <li> If the moved node's new parent node is in the \"created\" state, the parent's lowest-level {@link getParent ancestor} is determined that is also in the \"created\" state (if no ancestor nodes are in \"created\" state, this will be the new parent itself). Any descendants of that node are then themselves in the \"created\" state and also become \"persisted\"; otherwise, their states remain unaffected by the move. <\/ul>\n\nNote that nodes in the \"created\" state are not shown in their usual position as defined by the service and the current sort order, but out of place as the first children of their parent or as the first roots. They are even shown if they don't match current search or filter criteria! Once they become simply \"persisted\" due to the move (as described above), this special handling ends. These nodes are then shown in place again, or they might even not be shown anymore due to the search or filter criteria. If the latter happens to this context, its {@link #getIndex index} becomes <code>undefined<\/code>.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"setAggregation(\n\t{\n\t\taggregate: ${aggregate}, // object\n\t\tcreateInPlace: ${bCreateInPlace}, // boolean\n\t\texpandTo: ${iExpandTo}, // number\n\t\tgrandTotalAtBottomOnly: ${bGrandTotalAtBottomOnly}, // boolean\n\t\tgroup: ${group}, // object\n\t\tgroupLevels: [${groupLevels}], // string[]\n\t\thierarchyQualifier: \"${hierarchyQualifier}\", // string\n\t\tsearch: \"${search}\", // string\n\t\tsubtotalsAtBottomOnly: ${bSubtotalsAtBottomOnly} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataListBinding.setAggregation","description":"setAggregation(oAggregation?)","helpDescription":"Sets a new data aggregation object and derives the system query option <code>$apply<\/code> implicitly from it.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"updateAnalyticalInfo(\n\t{\n\t\tname: \"${name}\", // string\n\t\tgrouped: ${bGrouped}, // boolean\n\t\tinResult: ${bInResult}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\ttotal: ${bTotal}, // boolean\n\t\tmax: ${bMax}, // boolean\n\t\tmin: ${bMin}, // boolean\n\t\twith: \"${with}\", // string\n\t\tas: \"${as}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataListBinding.updateAnalyticalInfo","description":"updateAnalyticalInfo(aAggregation) : {measureRangePromise:Promise<Object<{min:number,max:number}>>}|undefined","helpDescription":"Updates the binding's system query option <code>$apply<\/code> based on the given data aggregation information. Its value is \"groupby((&lt;dimension_1,...,dimension_N,unit_or_text_1,...,unit_or_text_K>), aggregate(&lt;measure> with &lt;method> as &lt;alias>, ...))\" where the \"aggregate\" part is only present if measures are given and both \"with\" and \"as\" are optional. Since 1.93.0, a previous \"search before data aggregation\" is considered (see the <code>oAggregation.search<\/code> parameter of {@link #setAggregation}).","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindProperty(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\t$$valueAsPromise: ${b$$valueAsPromise}, // boolean\n\t\tscope: ${scope} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataMetaModel.bindProperty","description":"bindProperty(sPath, oContext?, mParameters?) : sap.ui.model.PropertyBinding","helpDescription":"Creates a property binding for this metadata model which refers to the content from the given path (relative to the given context).","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getObject(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\tscope: ${scope} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataMetaModel.getObject","description":"getObject(sPath, oContext?, mParameters?) : any|undefined","helpDescription":"Returns the metadata object for the given path relative to the given context. Returns <code>undefined<\/code> in case the metadata is not (yet) available. Use {@link #requestObject} for asynchronous access.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"requestCurrencyCodes(\n\t\"${vRawValue}\", // any\n\t{\n\t\tcontext: ${context} // sap.ui.model.Context\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataMetaModel.requestCurrencyCodes","description":"requestCurrencyCodes(vRawValue?, oDetails?) : Promise<(Object<string,{StandardCode:string,Text:string,UnitSpecificScale:string}>|null)>","helpDescription":"Request currency customizing based on the code list reference given in the entity container's <code>com.sap.vocabularies.CodeList.v1.CurrencyCodes<\/code> annotation. The corresponding HTTP request uses the HTTP headers obtained via {@link sap.ui.model.odata.v4.ODataModel#getHttpHeaders} from this meta model's data model.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"requestObject(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\tscope: ${scope} // Object<(object|function)>\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataMetaModel.requestObject","description":"requestObject(sPath, oContext?, mParameters?) : Promise<any>","helpDescription":"Requests the metadata value for the given path relative to the given context. Returns a <code>Promise<\/code> which is resolved with the requested metadata value or rejected with an error (only in case metadata cannot be loaded). An invalid path leads to an <code>undefined<\/code> result and a warning is logged. Use {@link #getObject} for synchronous access.\n\nA relative path is appended to the context's path separated by a forward slash(\"/\"). A relative path starting with \"@\" (that is, an annotation) is appended without a separator. Use \"./\" as a prefix for such a relative path to enforce a separator.\n\nExample: <pre>\n&lt;template:with path=\"/EMPLOYEES/ENTRYDATE\" var=\"property\">\n  &lt;!-- /EMPLOYEES/ENTRYDATE/$Type -->\n  \"{property>$Type}\"\n\n  &lt;!-- /EMPLOYEES/ENTRYDATE@com.sap.vocabularies.Common.v1.Text -->\n  \"{property>@com.sap.vocabularies.Common.v1.Text}\"\n\n  &lt;!-- /EMPLOYEES/ENTRYDATE/@com.sap.vocabularies.Common.v1.Text -->\n  \"{property>./@com.sap.vocabularies.Common.v1.Text}\"\n&lt;/template:with>\n<\/pre>\n\nThe basic idea is that every path described in <a href= \"https://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html#_Attribute_Target\" >\"14.2.1 Attribute Target\"<\/a> in specification \"OData Version 4.0 Part 3: Common Schema Definition Language\" is a valid absolute path within the metadata model if a leading slash is added; for example \"/\" + \"MySchema.MyEntityContainer/MyEntitySet/MyComplexProperty/MyNavigationProperty\". Also, every path described in \"14.5.2 Expression edm:AnnotationPath\", \"14.5.11 Expression edm:NavigationPropertyPath\", \"14.5.12 Expression edm:Path\", and \"14.5.13 Expression edm:PropertyPath\" is a valid relative path within the metadata model if a suitable prefix is added which addresses an entity container, entity set, singleton, complex type, entity type, or property; for example \"/MySchema.MyEntityType/MyProperty\" + \"@vCard.Address#work/FullName\".\n\nThe absolute path is split into segments and followed step-by-step, starting at the global scope of all known qualified OData names. There are two technical properties there: \"$Version\" (typically \"4.0\") and \"$EntityContainer\" with the name of the single entity container for this metadata model's service.\n\nAn empty segment in between is invalid, except to force return type lookup for operation overloads (see below). An empty segment at the end caused by a trailing slash differentiates between a name and the object it refers to. This way, \"/$EntityContainer\" refers to the name of the single entity container and \"/$EntityContainer/\" refers to the single entity container as an object.\n\nThe segment \"@sapui.name\" refers back to the last OData name (simple identifier or qualified name) or annotation name encountered during path traversal immediately before \"@sapui.name\": <ul> <li> \"/EMPLOYEES@sapui.name\" results in \"EMPLOYEES\" and \"/EMPLOYEES/@sapui.name\" results in the same as \"/EMPLOYEES/$Type\", that is, the qualified name of the entity set's type (see below how \"$Type\" is inserted implicitly). Note how the separating slash again makes a difference here. <li> \"/EMPLOYEES/@com.sap.vocabularies.Common.v1.Label@sapui.name\" results in \"@com.sap.vocabularies.Common.v1.Label\" and a slash does not make any difference as long as the annotation does not have a \"$Type\" property. <li> A technical property (that is, a numerical segment or one starting with a \"$\") immediately before \"@sapui.name\" is invalid, for example \"/$EntityContainer@sapui.name\". <li> Since 1.127.0, \"@sapui.name\" can also be used to access the resulting name of an entity set via a navigation property binding. This allows XML Templating to use \"${entitySet>@sapui.name}\" no matter whether the variable \"entitySet\" refers to \"/TEAMS\" or \"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES\". This way, \"/TEAMS@sapui.name\" results in \"TEAMS\" and \"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES@sapui.name\" results either in a simple name like \"EMPLOYEES\" or maybe in a path like \"some.other.EntityContainer/SomeEntitySet\". <\/ul> The path must not continue after \"@sapui.name\".\n\nIf the current object is a string value, that string value is treated as a relative path and followed step-by-step before the next segment is processed. Except for this, a path must not continue if it comes across a non-object value. Such a string value can be a qualified name (example path \"/$EntityContainer/...\"), a simple identifier (example path \"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES/...\") including the special name \"$ReturnType\" (since 1.71.0), or even a path according to \"14.5.12 Expression edm:Path\" etc. (example path \"/TEAMS/@com.sap.vocabularies.UI.v1.LineItem/0/Value/$Path/...\".\n\nSegments starting with an \"@\" character, for example \"@com.sap.vocabularies.Common.v1.Label\", address annotations at the current object. As the first segment, they refer to the single entity container. For objects which can only be annotated inline (see \"14.3 Element edm:Annotation\" minus \"14.2.1 Attribute Target\"), the object already contains the annotations as a property. For objects which can (only or also) be annotated via external targeting, the object does not contain any annotation as a property. Such annotations MUST be accessed via a path. Such objects include operations (that is, actions and functions) and their parameters, which can be annotated for a single overload or for all overloads at the same time.\n\nSegments starting with an OData name followed by an \"@\" character, for example \"/TEAMS@Org.OData.Capabilities.V1.TopSupported\", address annotations at an entity set, singleton, or property, not at the corresponding type. In contrast, \"/TEAMS/@com.sap.vocabularies.Common.v1.Deletable\" (note the separating slash) addresses an annotation at the entity set's type. This is in line with the special rule of \"14.5.12 Expression edm:Path\" regarding annotations at a navigation property itself.\n\n\"@\" can be used as a segment to address a map of all annotations of the current object. This is useful for iteration, for example via <code>&lt;template:repeat list=\"{entityType>@}\" ...><\/code>.\n\nAnnotations of an annotation are addressed not by two separate segments, but by a single segment like \"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.Common.v1.TextArrangement\". Each annotation can have a qualifier, for example \"@first#foo@second#bar\". Note: If the first annotation's value is a record, a separate segment addresses an annotation of that record, not an annotation of the first annotation itself. In a similar way, annotations of \"7.2 Element edm:ReferentialConstraint\", \"7.3 Element edm:OnDelete\", \"10.2 Element edm:Member\" and \"14.5.14.2 Element edm:PropertyValue\" are addressed by segments like \"&lt;7.2.1 Attribute Property>@...\", \"$OnDelete@...\", \"&lt;10.2.1 Attribute Name>@...\" and \"&lt;14.5.14.2.1 Attribute Property>@...\" (where angle brackets denote a variable part and sections refer to specification <a href= \"https://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.htm\" >\"OData Version 4.0 Part 3: Common Schema Definition Language\"<\/a>).\n\nAnnotations starting with \"@@\", for example \"@@sap.ui.model.odata.v4.AnnotationHelper.isMultiple\" or \"@@.AH.isMultiple\" or \"@@.isMultiple\", represent computed annotations. Their name without the \"@@\" prefix must refer to a function in <code>mParameters.scope<\/code> in case of a relative name starting with a dot, which is stripped before lookup; see the <code>&lt;template:alias><\/code> instruction for XML Templating. In case of an absolute name, it is searched in <code>mParameters.scope<\/code> first and then in the global namespace. (Using the global namespace is <b>deprecated<\/b> as of version 1.120.3). The names \"requestCurrencyCodes\" and \"requestUnitsOfMeasure\" default to {@link #requestCurrencyCodes} and {@link #requestUnitsOfMeasure} resp. if not present in <code>mParameters.scope<\/code>. This function is called with the current object (or primitive value) and additional details and returns the result of this {@link #requestObject} call. The additional details are given as an object with the following properties: <ul> <li> <code>{boolean} $$valueAsPromise<\/code> Whether the computed annotation may return a <code>Promise<\/code> resolving with its value (since 1.57.0) <li> <code>{@link sap.ui.model.Context} context<\/code> Points to the current object <li> <code>{object} overload<\/code> In case of annotations of an operation or a parameter, if filtering by binding parameter determines a single operation overload, that overload is passed (since 1.71.0), else <code>undefined<\/code> <li> <code>{string} schemaChildName<\/code> The qualified name of the schema child where the computed annotation has been found <\/ul> Computed annotations cannot be iterated by \"@\". The path must not continue after a computed annotation. Since 1.77.0, arguments can be given to a computed annotation much like a JavaScript function call. The left parenthesis must immediately follow the name and no whitespace must follow the right parenthesis. In between, a comma separated list of JSON values may be given (see <code>JSON.parse<\/code>); string literals may be enclosed in single or double quotes; property names in object literals need not be quoted; curly brackets must be replaced by <code>$(<\/code> and <code>$)<\/code> respectively, no matter where they appear, and there is no escaping for <code>$(<\/code> and <code>$)<\/code> to prevent replacement back to curly brackets before parsing; as usual, <code>null<\/code> is supported while <code>undefined<\/code> is not. Example: \"@@AH.format($(style : 'short'$)))\" or \"@@AH.format(null, $($$noPatch : true$)))\".\n\nA segment which represents an OData qualified name is looked up in the global scope (\"scope lookup\") and thus determines a schema child which is used later on. Unknown qualified names are invalid. This way, \"/acme.DefaultContainer/EMPLOYEES\" addresses the \"EMPLOYEES\" child of the schema child named \"acme.DefaultContainer\". This also works indirectly (\"/$EntityContainer/EMPLOYEES\") and implicitly (\"/EMPLOYEES\", see below).\n\nA segment which represents an OData simple identifier (or the special names \"$ReturnType\", since 1.71.0, or \"$Parameter\", since 1.73.0) needs special preparations. The same applies to the empty segment after a trailing slash. <ol> <li> If the current object has a \"$Action\", \"$Function\" or \"$Type\" property, it is used for scope lookup first. This way, \"/EMPLOYEES/ENTRYDATE\" addresses the same object as \"/EMPLOYEES/$Type/ENTRYDATE\", namely the \"ENTRYDATE\" child of the entity type corresponding to the \"EMPLOYEES\" child of the entity container. The other cases jump from an operation import to the corresponding operation overloads. <li> Else if the segment is the first one within its path, the last schema child addressed via scope lookup is used instead of the current object. This can only happen indirectly as in \"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES/...\" where the schema child is the entity container and the navigation property binding can contain the simple identifier of another entity set within the same container.\n\nIf the segment is the first one overall, \"$EntityContainer\" is inserted into the path implicitly. In other words, the entity container is used as the initial schema child. This way, \"/EMPLOYEES\" addresses the same object as \"/$EntityContainer/EMPLOYEES\", namely the \"EMPLOYEES\" child of the entity container. <li> Afterwards, if the current object is an array, it represents overloads for an operation. Annotations of an operation (since 1.71.0) or a parameter (since 1.66.0) can be immediately addressed, no matter if they apply for a single overload or for all overloads at the same time, for example \"/TEAMS/acme.NewAction@\" or \"/TEAMS/acme.NewAction/Team_ID@\". Annotations of an unbound operation overload can be addressed like \"/OperationImport/@$ui5.overload@\", while \"/OperationImport/@\" addresses annotations of the operation import itself. The special name \"$ReturnType\" can be used (since 1.71.0) like a parameter to address annotations of the return type instead, for example \"/TEAMS/acme.NewAction/$ReturnType@\".\n\nOperation overloads are then filtered by binding parameter; multiple overloads after filtering are invalid except if addressing all overloads via the segment \"@$ui5.overload\", for example \"/acme.NewAction/@$ui5.overload\".\n\nOnce a single overload has been determined, its parameters can be immediately addressed, for example \"/TEAMS/acme.NewAction/Team_ID\", or the special name \"$Parameter\" can be used (since 1.73.0), for example \"/TEAMS/acme.NewAction/$Parameter/Team_ID\". The special name \"$ReturnType\" can be used (since 1.71.0) like a parameter to address the return type instead, for example \"/TEAMS/acme.NewAction/$ReturnType\". For all other names, the overload's \"$ReturnType/$Type\" is used for scope lookup. This way, \"/GetOldestWorker/AGE\" addresses the same object as \"/GetOldestWorker/$ReturnType/AGE\" or \"/GetOldestWorker/$Function/0/$ReturnType/$Type/AGE\", and \"/TEAMS/acme.NewAction/MemberCount\" (assuming \"MemberCount\" is not a parameter in this example) addresses the same object as \"/TEAMS/acme.NewAction/$ReturnType/MemberCount\" or \"/TEAMS/acme.NewAction/@$ui5.overload/0/$ReturnType/$Type/MemberCount\". In case a name can refer both to a parameter and to a property of the return type, an empty segment can be used instead of \"@$ui5.overload/0/$ReturnType/$Type\" or \"$ReturnType\" to force return type lookup, for example \"/TEAMS/acme.NewAction//Team_ID\".\n\nFor primitive return types, the special segment \"value\" can be used to refer to the return type itself (see {@link sap.ui.model.odata.v4.ODataContextBinding#invoke}). This way, \"/GetOldestAge/value\" addresses the same object as \"/GetOldestAge/$ReturnType\" or \"/GetOldestAge/$Function/0/$ReturnType\" or \"/GetOldestAge/@$ui5.overload/0/$ReturnType\" (which is needed for automatic type determination, see {@link #requestUI5Type}). <\/ol>\n\nA trailing slash can be used to continue a path and thus force scope lookup or OData simple identifier preparations, but then stay at the current object. This way, \"/EMPLOYEES/$Type/\" addresses the entity type itself corresponding to the \"EMPLOYEES\" child of the entity container. Although the empty segment is not an OData simple identifier, it can be used as a placeholder for one. In this way, \"/EMPLOYEES/\" addresses the same entity type as \"/EMPLOYEES/$Type/\". That entity type in turn is a map of all its OData children (that is, structural and navigation properties) and determines the set of possible child names that might be used after the trailing slash.\n\n\"$\" can be used as the last segment to continue a path and thus force scope lookup, but no OData simple identifier preparations. In this way, it serves as a placeholder for a technical property. The path must not continue after \"$\", except for a computed annotation. Example: \"/TEAMS/@com.sap.vocabularies.UI.v1.LineItem/0/Value/$Path/$\" addresses the referenced property itself, not the corresponding type like \"/TEAMS/@com.sap.vocabularies.UI.v1.LineItem/0/Value/$Path/\" does. \"/TEAMS/@com.sap.vocabularies.UI.v1.LineItem/0/Target/$NavigationPropertyPath/$@@.isMultiple\" calls a computed annotation on the navigation property itself, not on the corresponding type.\n\nAny other segment, including an OData simple identifier, is looked up as a property of the current object. Segments which themselves represent a path, such as the keys for the \"$ReferentialConstraint\" and \"$NavigationPropertyBinding\" maps, need to use URL encoding for the slash character (\"%2F\"), for example \"/TEAMS/$NavigationPropertyBinding/Address%2FCountries/...\".","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"requestUnitsOfMeasure(\n\t\"${vRawValue}\", // any\n\t{\n\t\tcontext: ${context} // sap.ui.model.Context\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataMetaModel.requestUnitsOfMeasure","description":"requestUnitsOfMeasure(vRawValue?, oDetails?) : Promise<(Object<string,{StandardCode:string,Text:string,UnitSpecificScale:string}>|null)>","helpDescription":"Request unit customizing based on the code list reference given in the entity container's <code>com.sap.vocabularies.CodeList.v1.UnitOfMeasure<\/code> annotation. The corresponding HTTP request uses the HTTP headers obtained via {@link sap.ui.model.odata.v4.ODataModel#getHttpHeaders} from this meta model's data model.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.odata.v4.ODataModel(\n\t{\n\t\tannotationURI: [${annotationURI}], // string|string[]\n\t\tautoExpandSelect: ${bAutoExpandSelect}, // boolean\n\t\tearlyRequests: ${bEarlyRequests}, // boolean\n\t\tgroupId: \"${groupId}\", // string\n\t\tgroupProperties: ${groupProperties}, // object\n\t\thttpHeaders: ${httpHeaders}, // object\n\t\tignoreAnnotationsFromMetadata: ${bIgnoreAnnotationsFromMetadata}, // boolean\n\t\tmetadataUrlParams: ${metadataUrlParams}, // object\n\t\todataVersion: \"${odataVersion}\", // string\n\t\toperationMode: ${operationMode}, // sap.ui.model.odata.OperationMode\n\t\tserviceUrl: \"${serviceUrl}\", // string\n\t\tsharedRequests: ${bSharedRequests}, // boolean\n\t\tsupportReferences: ${bSupportReferences}, // boolean\n\t\tsynchronizationMode: \"${synchronizationMode}\", // string\n\t\tupdateGroupId: \"${updateGroupId}\", // string\n\t\twithCredentials: ${bWithCredentials} // boolean\n\t}\n)\n","static":"true","prefix":"ODataModel","Experimental":false,"module":"sap/ui/model/odata/v4/ODataModel","description":"ODataModel(mParameters) : sap.ui.model.odata.v4.ODataModel","constructorDescription":"Constructor for a new ODataModel.","extends":"sap.ui.model.Model","Deprecated":false,"name":"sap.ui.model.odata.v4.ODataModel","helpDescription":"Model implementation for OData V4.\n\nThis model is not prepared to be inherited from.\n\nEvery resource path (relative to the service root URL, no query options) according to <a href= \"https://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part2-url-conventions.html#resource-pathurl4\" >\"4 Resource Path\"<\/a> in specification \"OData Version 4.0 Part 2: URL Conventions\" is a valid data binding path within this model if a leading slash is added; for example \"/\" + \"SalesOrderList('A%2FB%26C')\" to access an entity instance with key \"A/B&C\". Note that appropriate URI encoding is necessary, see the example of {@link sap.ui.model.odata.v4.ODataUtils.formatLiteral}. \"4.5.1 Addressing Actions\" needs an operation binding, see {@link sap.ui.model.odata.v4.ODataContextBinding}.\n\nNote that the OData V4 model has its own {@link sap.ui.model.odata.v4.Context} class. Bindings which are relative to such a V4 context depend on their corresponding parent binding and do not access data with their own service requests unless parameters are provided.\n\n<b>Group IDs<\/b> control the model's use of batch requests. Valid group IDs are: <ul> <li> <b>$auto<\/b> and <b>$auto.*<\/b>: Bundles requests from the model in a batch request which is sent automatically before rendering. You can use different '$auto.*' group IDs to use different batch requests. The suffix may be any non-empty string consisting of alphanumeric characters from the basic Latin alphabet, including the underscore. The submit mode for these group IDs is always {@link sap.ui.model.odata.v4.SubmitMode#Auto}. <li> <b>$direct<\/b>: Sends requests directly without batch. The submit mode for this group ID is always {@link sap.ui.model.odata.v4.SubmitMode#Direct}. <li> An application group ID, which is a non-empty string consisting of alphanumeric characters from the basic Latin alphabet, including the underscore. By default, an application group has the submit mode {@link sap.ui.model.odata.v4.SubmitMode#API}. It is possible to use a different submit mode; for details see <code>mParameters.groupProperties<\/code>. <\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindContext(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.odata.v4.Context\n\t{\n\t\t$expand: ${$expand}, // string|object\n\t\t$select: [${$select}], // string|string[]\n\t\t$$canonicalPath: ${b$$canonicalPath}, // boolean\n\t\t$$groupId: \"${$$groupId}\", // string\n\t\t$$inheritExpandSelect: ${b$$inheritExpandSelect}, // boolean\n\t\t$$ownRequest: ${b$$ownRequest}, // boolean\n\t\t$$patchWithoutSideEffects: ${b$$patchWithoutSideEffects}, // boolean\n\t\t$$updateGroupId: \"${$$updateGroupId}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataModel.bindContext","description":"bindContext(sPath, oContext?, mParameters?) : sap.ui.model.odata.v4.ODataContextBinding","helpDescription":"Creates a new context binding for the given path, context and parameters.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindList(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t\"${vSorters}\", // sap.ui.model.Sorter|sap.ui.model.Sorter[]\n\t\"${vFilters}\", // sap.ui.model.Filter|sap.ui.model.Filter[]\n\t{\n\t\t$apply: \"${$apply}\", // string\n\t\t$count: ${$count}, // string|boolean\n\t\t$expand: ${$expand}, // string|object\n\t\t$filter: \"${$filter}\", // string\n\t\t$orderby: ${$orderby}, // string|number\n\t\t$search: \"${$search}\", // string\n\t\t$select: [${$select}], // string|string[]\n\t\t$$aggregation: ${$$aggregation}, // object\n\t\t$$canonicalPath: ${b$$canonicalPath}, // boolean\n\t\t$$clearSelectionOnFilter: ${b$$clearSelectionOnFilter}, // boolean\n\t\t$$getKeepAliveContext: ${b$$getKeepAliveContext}, // boolean\n\t\t$$groupId: \"${$$groupId}\", // string\n\t\t$$operationMode: ${$$operationMode}, // sap.ui.model.odata.OperationMode\n\t\t$$patchWithoutSideEffects: ${b$$patchWithoutSideEffects}, // boolean\n\t\t$$ownRequest: ${b$$ownRequest}, // boolean\n\t\t$$separate: [${$$separate}], // string[]\n\t\t$$sharedRequest: ${b$$sharedRequest}, // boolean\n\t\t$$updateGroupId: \"${$$updateGroupId}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataModel.bindList","description":"bindList(sPath, oContext?, vSorters?, vFilters?, mParameters?) : sap.ui.model.odata.v4.ODataListBinding","helpDescription":"Creates a new list binding for the given path and optional context which must resolve to an absolute OData path for an entity set.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"bindProperty(\n\t\"${sPath}\", // string\n\t\"${oContext}\", // sap.ui.model.Context\n\t{\n\t\t$apply: \"${$apply}\", // string\n\t\t$filter: \"${$filter}\", // string\n\t\t$search: \"${$search}\", // string\n\t\t$$groupId: \"${$$groupId}\", // string\n\t\t$$ignoreMessages: ${b$$ignoreMessages}, // boolean\n\t\t$$noPatch: ${b$$noPatch}, // boolean\n\t\tscope: ${scope} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataModel.bindProperty","description":"bindProperty(sPath, oContext?, mParameters?) : sap.ui.model.odata.v4.ODataPropertyBinding","helpDescription":"Creates a new property binding for the given path. This binding is inactive and will not know the property value initially. You have to call {@link sap.ui.model.Binding#initialize} to get it updated asynchronously and register a change listener at the binding to be informed when the value is available.\n\nIt is possible to create a property binding pointing to metadata. A '##' in the binding's path is recognized as a separator and splits it into two parts. The part before the separator is resolved with the binding's context and the result is transformed into a metadata context (see {@link sap.ui.model.odata.v4.ODataMetaModel#getMetaContext}). The part following the separator is then interpreted relative to this metadata context, even if it starts with a '/'; see {@link sap.ui.model.odata.v4.ODataMetaModel#requestObject} for more details.\n\nIf the target type specified in the corresponding control property's binding info is \"any\" and the binding is relative or points to metadata, the binding may have an object value; in this case and unless the binding refers to an action advertisement the binding's mode must be {@link sap.ui.model.BindingMode.OneTime}. {@link sap.ui.model.BindingMode.OneWay OneWay} is also supported (since 1.130.0) for complex types and collections thereof; for entity types, use {@link #bindContext} instead.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getKeepAliveContext(\n\t\"${sPath}\", // string\n\t\"${bRequestMessages}\", // boolean\n\t{\n\t\t$$groupId: \"${$$groupId}\", // string\n\t\t$$patchWithoutSideEffects: ${b$$patchWithoutSideEffects}, // boolean\n\t\t$$updateGroupId: \"${$$updateGroupId}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.odata.v4.ODataModel.getKeepAliveContext","description":"getKeepAliveContext(sPath, bRequestMessages?, mParameters?) : sap.ui.model.odata.v4.Context","helpDescription":"Returns a context with the given path belonging to a matching list binding that has been marked with <code>$$getKeepAliveContext<\/code> (see {@link #bindList}). If such a matching binding can be found, a context is returned and kept alive (see {@link sap.ui.model.odata.v4.ODataListBinding#getKeepAliveContext}). Since 1.100.0 a temporary binding is used if no such binding could be found. If such a binding is created or resolved later, the context and its data are transferred to it, and the temporary binding is destroyed again.\n\nA <code>$$getKeepAliveContext<\/code> binding matches if its resolved binding path is the collection path of the context. If the context is created using a temporary binding and the parameters of the <code>$$getKeepAliveContext<\/code> binding differ from the given <code>mParameters<\/code> (except <code>$$groupId<\/code> which is especially used for the context), that binding later runs into an error when trying to read data.\n\n<b>Note<\/b>: The context received by this function may change its {@link sap.ui.model.odata.v4.Context#getBinding binding} during its lifetime.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"serializeBatchRequest(\n\t{\n\t\tmethod: \"${method}\", // string\n\t\turl: \"${url}\", // string\n\t\theaders: ${headers}, // object\n\t\tbody: ${body} // object\n\t},\n\t\"${sEpilogue}\" // string\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/model/odata/v4/ODataUtils","name":"sap.ui.model.odata.v4.ODataUtils.serializeBatchRequest","description":"serializeBatchRequest(aRequests, sEpilogue?) : object","helpDescription":"Serializes an array of requests to an object containing the batch request body and mandatory headers for the batch request.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.resource.ResourceModel(\n\t{\n\t\tactiveTerminologies: [${activeTerminologies}], // string[]\n\t\tasync: ${bAsync}, // boolean\n\t\tbundle: ${bundle}, // module:sap/base/i18n/ResourceBundle\n\t\tbundleLocale: \"${bundleLocale}\", // string\n\t\tbundleName: \"${bundleName}\", // string\n\t\tbundleUrl: \"${bundleUrl}\", // string\n\t\tdefaultBindingMode: ${defaultBindingMode}, // sap.ui.model.BindingMode\n\t\tenhanceWith: [${enhanceWith}], // module:sap/base/i18n/ResourceBundle[]|module:sap/base/i18n/ResourceBundle.Configuration[]\n\t\tfallbackLocale: \"${fallbackLocale}\", // string\n\t\tsupportedLocales: [${supportedLocales}], // string[]\n\t\tterminologies: ${terminologies} // Object<string,module:sap/base/i18n/ResourceBundle.TerminologyConfiguration>\n\t}\n)\n","static":"true","prefix":"ResourceModel","Experimental":false,"module":"sap/ui/model/resource/ResourceModel","description":"ResourceModel(oData) : sap.ui.model.resource.ResourceModel","constructorDescription":"Constructor for a new ResourceModel.\n\n<h3>Declarative Usage<\/h3>\nThe ResourceModel can be created using configuration objects instead of\n<code>ResourceBundle<\/code> instances.\nThis is the recommended way and enables:\n<ul>\n<li>use of terminologies in the bundle and in the enhancements<\/li>\n<li>a guaranteed order of resolution<\/li>\n<\/ul>\n\n<h3>Programmatic Usage<\/h3>\nThe ResourceModel can be created in a programmatic manner which means that\n<code>ResourceBundle<\/code> instances are used instead of configurations.\nExisting ResourceBundles can either be used in the <code>bundle<\/code> parameter or in the\n<code>enhanceWith<\/code> array.\nRuntime errors are thrown when <code>ResourceBundle<\/code> instances are used with\n<code>terminologies<\/code>.\nAlso when using <code>ResourceModel#enhance<\/code> with <code>terminologies<\/code>.","extends":"sap.ui.model.Model","Deprecated":false,"name":"sap.ui.model.resource.ResourceModel","helpDescription":"Model implementation for resource bundles.\n\nThis model is not prepared to be inherited from.\n\nThis model allows to bind control properties against translatable texts. Its data is taken from a {@link module:sap/base/i18n/ResourceBundle} and it only supports property bindings.\n\nIn contrast to most other models, binding paths for a <code>ResourceModel<\/code> must not start with a slash; they are absolute by default, and there's no further structure. Each key in the underlying resource bundle is a valid binding path.\n\nIn extensibility scenarios, the texts of the resource bundle can be {@link #enhance enhanced} with additional resource bundles. These additional bundles can define new texts for existing keys, texts for new keys, or both. When texts for existing keys are replaced, the latest enhancement wins.\n\nThis model supports the binding modes <code>OneWay<\/code> and <code>OneTime<\/code>, but not <code>TwoWay<\/code>. When the recommended asynchronous loading of the bundle is used, binding mode <code>OneTime<\/code> can't be used.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"enhance(\n\t{\n\t\tbundleLocale: \"${bundleLocale}\", // string\n\t\tbundleName: \"${bundleName}\", // string\n\t\tbundleUrl: \"${bundleUrl}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.resource.ResourceModel.enhance","description":"enhance(oData) : Promise|null","helpDescription":"Enhances the resource model with a custom resource bundle.\n\nThe custom bundle can define new texts for keys existing in the main bundle, texts for new keys, or both. A resource model can be enhanced with multiple resource bundles by calling this method multiple times. Each call appends to the list of enhancements, but no bundle can be removed from the list.\n\nWhen looking up a text for a key, the enhancements are processed in reverse order. Texts from the last added resource bundle are preferred over texts from previously added bundles or texts from the main bundle.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"loadResourceBundle(\n\t{\n\t\tactiveTerminologies: [${activeTerminologies}], // string[]\n\t\tbundleLocale: \"${bundleLocale}\", // string\n\t\tbundleName: \"${bundleName}\", // string\n\t\tbundleUrl: \"${bundleUrl}\", // string\n\t\tenhanceWith: [${enhanceWith}], // module:sap/base/i18n/ResourceBundle[]|module:sap/base/i18n/ResourceBundle.Configuration[]\n\t\tfallbackLocale: \"${fallbackLocale}\", // string\n\t\tsupportedLocales: [${supportedLocales}], // string[]\n\t\tterminologies: ${terminologies} // Object<string,module:sap/base/i18n/ResourceBundle.TerminologyConfiguration>\n\t},\n\t\"${bAsync}\" // boolean\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.model.resource.ResourceModel.loadResourceBundle","description":"loadResourceBundle(oData, bAsync) : module:sap/base/i18n/ResourceBundle|Promise<module:sap/base/i18n/ResourceBundle>","helpDescription":"Returns the resource bundle or a promise resolving with the resource bundle.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.Currency(\n\t{\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${iMinimum}, // number\n\t\tmaximum: ${iMaximum} // number\n\t}\n)\n","static":"true","prefix":"Currency","Experimental":false,"module":"sap/ui/model/type/Currency","description":"Currency(oFormatOptions?, oConstraints?) : sap.ui.model.type.Currency","constructorDescription":"Constructor for a <code>Currency<\/code> type.","extends":"sap.ui.model.CompositeType","Deprecated":false,"name":"sap.ui.model.type.Currency","helpDescription":"This class represents the composite type <code>Currency<\/code>, which consists of the parts \"amount\" (of type <code>number<\/code> or <code>string<\/code>) and \"currency\" (of type <code>string<\/code>). In case the amount is a <code>string<\/code>, it must be the JavaScript representation of the corresponding number. If the <code>source<\/code> format option is given, the composite type has only one part of type <code>string<\/code>, holding both amount and currency in the source format.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.Date(\n\t{\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${minimum}, // Date|string\n\t\tmaximum: ${maximum} // Date|string\n\t}\n)\n","static":"true","prefix":"Date","Experimental":false,"module":"sap/ui/model/type/Date","description":"Date(oFormatOptions?, oConstraints?) : sap.ui.model.type.Date","constructorDescription":"Constructor for a Date type.","extends":"sap.ui.model.SimpleType","Deprecated":false,"name":"sap.ui.model.type.Date","helpDescription":"This class represents date simple types.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.DateInterval(\n\t{\n\t\tinterval: ${bInterval}, // boolean\n\t\tsingleIntervalValue: ${bSingleIntervalValue}, // boolean\n\t\tsource: ${source}, // object\n\t\tUTC: ${bUTC} // boolean\n\t},\n\t{\n\t\tminimum: ${minimum}, // Date|module:sap/ui/core/date/UI5Date|string\n\t\tmaximum: ${maximum} // Date|module:sap/ui/core/date/UI5Date|string\n\t}\n)\n","static":"true","prefix":"DateInterval","Experimental":false,"module":"sap/ui/model/type/DateInterval","description":"DateInterval(oFormatOptions?, oConstraints?) : sap.ui.model.type.DateInterval","constructorDescription":"Constructor for a date interval type.","extends":"sap.ui.model.CompositeType","Deprecated":false,"name":"sap.ui.model.type.DateInterval","helpDescription":"This class represents the date interval composite type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.DateTime(\n\t{\n\t\tsource: ${source} // object\n\t},\n\t\"${oConstraints}\" // object\n)\n","static":"true","prefix":"DateTime","Experimental":false,"module":"sap/ui/model/type/DateTime","description":"DateTime(oFormatOptions?, oConstraints?) : sap.ui.model.type.DateTime","constructorDescription":"Constructor for a DateTime type.","extends":"sap.ui.model.type.Date","Deprecated":false,"name":"sap.ui.model.type.DateTime","helpDescription":"This class represents datetime simple types.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.DateTimeInterval(\n\t{\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${minimum}, // Date|string\n\t\tmaximum: ${maximum} // Date|string\n\t}\n)\n","static":"true","prefix":"DateTimeInterval","Experimental":false,"module":"sap/ui/model/type/DateTimeInterval","description":"DateTimeInterval(oFormatOptions?, oConstraints?) : sap.ui.model.type.DateTimeInterval","constructorDescription":"Constructor for a DateTime interval type.","extends":"sap.ui.model.type.DateInterval","Deprecated":false,"name":"sap.ui.model.type.DateTimeInterval","helpDescription":"This class represents the DateTime interval composite type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.FileSize(\n\t{\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${minimum}, // float\n\t\tmaximum: ${maximum} // float\n\t}\n)\n","static":"true","prefix":"FileSize","Experimental":false,"module":"sap/ui/model/type/FileSize","description":"FileSize(oFormatOptions?, oConstraints?) : sap.ui.model.type.FileSize","constructorDescription":"Constructor for a FileSize type.","extends":"sap.ui.model.SimpleType","Deprecated":false,"name":"sap.ui.model.type.FileSize","helpDescription":"This class represents file size simple types.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.Float(\n\t{\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${minimum}, // float\n\t\tmaximum: ${maximum} // float\n\t}\n)\n","static":"true","prefix":"Float","Experimental":false,"module":"sap/ui/model/type/Float","description":"Float(oFormatOptions?, oConstraints?) : sap.ui.model.type.Float","constructorDescription":"Constructor for a Float type.","extends":"sap.ui.model.SimpleType","Deprecated":false,"name":"sap.ui.model.type.Float","helpDescription":"This class represents float simple types.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.Integer(\n\t{\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${minimum}, // int\n\t\tmaximum: ${maximum} // int\n\t}\n)\n","static":"true","prefix":"Integer","Experimental":false,"module":"sap/ui/model/type/Integer","description":"Integer(oFormatOptions?, oConstraints?) : sap.ui.model.type.Integer","constructorDescription":"Constructor for an Integer type.","extends":"sap.ui.model.SimpleType","Deprecated":false,"name":"sap.ui.model.type.Integer","helpDescription":"This class represents integer simple types.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.String(\n\t\"${oFormatOptions}\", // object\n\t{\n\t\tmaxLength: ${maxLength}, // int\n\t\tminLength: ${minLength}, // int\n\t\tstartsWith: \"${startsWith}\", // string\n\t\tstartsWithIgnoreCase: \"${startsWithIgnoreCase}\", // string\n\t\tendsWith: \"${endsWith}\", // string\n\t\tendsWithIgnoreCase: \"${endsWithIgnoreCase}\", // string\n\t\tcontains: \"${contains}\", // string\n\t\tequals: \"${equals}\", // string\n\t\tsearch: ${search} // RegExp|string\n\t}\n)\n","static":"true","prefix":"String","Experimental":false,"module":"sap/ui/model/type/String","description":"String(oFormatOptions?, oConstraints?) : sap.ui.model.type.String","constructorDescription":"Constructor for a <code>String<\/code> type.","extends":"sap.ui.model.SimpleType","Deprecated":false,"name":"sap.ui.model.type.String","helpDescription":"This class represents the string simple type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.Time(\n\t{\n\t\tsource: ${source} // object\n\t},\n\t\"${oConstraints}\" // object\n)\n","static":"true","prefix":"Time","Experimental":false,"module":"sap/ui/model/type/Time","description":"Time(oFormatOptions?, oConstraints?) : sap.ui.model.type.Time","constructorDescription":"Constructor for a Time type.","extends":"sap.ui.model.type.Date","Deprecated":false,"name":"sap.ui.model.type.Time","helpDescription":"This class represents time simple types.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.TimeInterval(\n\t{\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${minimum}, // Date|string\n\t\tmaximum: ${maximum} // Date|string\n\t}\n)\n","static":"true","prefix":"TimeInterval","Experimental":false,"module":"sap/ui/model/type/TimeInterval","description":"TimeInterval(oFormatOptions?, oConstraints?) : sap.ui.model.type.TimeInterval","constructorDescription":"Constructor for a Time interval type.","extends":"sap.ui.model.type.DateInterval","Deprecated":false,"name":"sap.ui.model.type.TimeInterval","helpDescription":"This class represents the Time interval composite type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.model.type.Unit(\n\t{\n\t\tdecimals: ${decimals}, // object\n\t\tpreserveDecimals: ${bPreserveDecimals}, // boolean\n\t\tsource: ${source} // object\n\t},\n\t{\n\t\tminimum: ${minimum}, // float\n\t\tmaximum: ${maximum}, // float\n\t\tdecimals: ${decimals} // float\n\t},\n\t\"${aDynamicFormatOptionNames}\" // array\n)\n","static":"true","prefix":"Unit","Experimental":false,"module":"sap/ui/model/type/Unit","description":"Unit(oFormatOptions?, oConstraints?, aDynamicFormatOptionNames?) : sap.ui.model.type.Unit","constructorDescription":"Constructor for a Unit type.","extends":"sap.ui.model.CompositeType","Deprecated":false,"name":"sap.ui.model.type.Unit","helpDescription":"This class represents the Unit composite type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"iStartMyAppInAFrame(\n\t{\n\t\tsource: \"${source}\", // string\n\t\ttimeout: ${iTimeout}, // number\n\t\tautoWait: ${bAutoWait}, // boolean\n\t\twidth: ${width}, // string|number\n\t\theight: ${height} // string|number\n\t},\n\t\"${iTimeout}\", // number\n\t\"${autoWait}\", // boolean\n\t\"${width}\", // string|number\n\t\"${height}\" // string|number\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.Opa5.iStartMyAppInAFrame","description":"iStartMyAppInAFrame(vSourceOrOptions, iTimeout?, autoWait?, width?, height?) : jQuery.promise","helpDescription":"Starts an app in an iframe. Only works reliably if running on the same server.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"iStartMyAppInAFrame(\n\t{\n\t\tsource: \"${source}\", // string\n\t\ttimeout: ${iTimeout}, // number\n\t\tautoWait: ${bAutoWait}, // boolean\n\t\twidth: ${width}, // string|number\n\t\theight: ${height} // string|number\n\t},\n\t\"${iTimeout}\", // number\n\t\"${autoWait}\", // boolean\n\t\"${width}\", // string|number\n\t\"${height}\" // string|number\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.Opa5.iStartMyAppInAFrame","description":"iStartMyAppInAFrame(vSourceOrOptions, iTimeout?, autoWait?, width?, height?) : jQuery.promise","helpDescription":"Starts an app in an iframe. Only works reliably if running on the same server.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"iStartMyUIComponent(\n\t{\n\t\tcomponentConfig: ${componentConfig}, // object\n\t\thash: \"${hash}\", // string\n\t\ttimeout: ${iTimeout}, // number\n\t\tautoWait: ${bAutoWait} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.Opa5.iStartMyUIComponent","description":"iStartMyUIComponent(oOptions) : jQuery.promise","helpDescription":"Starts a UIComponent.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getControlByGlobalId(\n\t{\n\t\tid: [${id}], // string|string[]\n\t\tcontrolType: ${controlType} // string|function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.OpaPlugin.getControlByGlobalId","description":"getControlByGlobalId(oOptions) : sap.ui.core.Element|sap.ui.core.Element[]|null","helpDescription":"Find a control by its global ID.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getControlInView(\n\t{\n\t\tviewName: \"${viewName}\", // string\n\t\tviewNamespace: \"${viewNamespace}\", // string\n\t\tviewId: \"${viewId}\", // string\n\t\tfragmentId: \"${fragmentId}\", // string\n\t\tid: ${id}, // string|RegExp|Array<(string|RegExp)>\n\t\tcontrolType: ${fn_controlType} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.OpaPlugin.getControlInView","description":"getControlInView(options) : sap.ui.core.Element|sap.ui.core.Element[]|null","helpDescription":"Gets a control inside the view (same as calling oView.byId) Returns all matching controls inside a view (also nested views and their children).<br/> The view can be specified by viewName, viewNamespace, viewId, and any combination of three. eg : { id : \"foo\" } will search globally for a control with the ID foo<br/> eg : { id : \"foo\" , viewName : \"bar\" } will search for a control with the ID foo inside the view with the name bar<br/> eg : { viewName : \"bar\" } will return all the controls inside the view with the name bar<br/> eg : { viewName : \"bar\", controlType : sap.m.Button } will return all the Buttons inside a view with the name bar<br/> eg : { viewName : \"bar\", viewNamespace : \"baz.\" } will return all the Controls in the view with the name baz.bar<br/> eg : { viewId : \"viewBar\" } will return all the controls inside the view with the ID viewBar<br/>","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"getMatchingControls(\n\t{\n\t\tviewName: \"${viewName}\", // string\n\t\tviewId: \"${viewId}\", // string\n\t\tid: [${id}], // string|string[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tinteractable: ${bInteractable}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tsearchOpenDialogs: ${bSearchOpenDialogs}, // boolean\n\t\tcontrolType: ${controlType} // string|function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.OpaPlugin.getMatchingControls","description":"getMatchingControls(oOptions?) : sap.ui.core.Element|sap.ui.core.Element[]|null","helpDescription":"Find a control matching the provided options","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"findAllDOMElementsByControlSelector(\n\t{\n\t\tselector: ${selector} // sap.ui.test.RecordReplay.ControlSelector\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.RecordReplay.findAllDOMElementsByControlSelector","description":"findAllDOMElementsByControlSelector(oOptions) : Promise<(array|Error)>","helpDescription":"Find DOM element representations of all controls specified by a selector object. Useful when the selector matches multiple controls and you want all the results.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"findControlSelectorByDOMElement(\n\t{\n\t\tdomElement: ${domElement}, // Element\n\t\tsettings: ${settings} // object\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.RecordReplay.findControlSelectorByDOMElement","description":"findControlSelectorByDOMElement(oOptions) : Promise<(sap.ui.test.RecordReplay.ControlSelector|Error)>","helpDescription":"Find the best control selector for a DOM element. A selector uniquely represents a single element. The 'best' selector is the one with which it is most likely to uniquely identify a control with the least possible inspection of the control tree.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"findDOMElementByControlSelector(\n\t{\n\t\tselector: ${selector} // sap.ui.test.RecordReplay.ControlSelector\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.RecordReplay.findDOMElementByControlSelector","description":"findDOMElementByControlSelector(oOptions) : Promise<(Element|Error)>","helpDescription":"Find DOM element representation of a control specified by a selector object.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"interactWithControl(\n\t{\n\t\tselector: ${selector}, // Object\n\t\tinteractionType: ${interactionType}, // sap.ui.test.RecordReplay.InteractionType\n\t\tenterText: \"${enterText}\", // string\n\t\tclearTextFirst: \"${clearTextFirst}\", // string\n\t\tpressEnterKey: ${bPressEnterKey}, // boolean\n\t\tkeepFocus: ${bKeepFocus} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.RecordReplay.interactWithControl","description":"interactWithControl(oOptions) : Promise<(undefined|Error)>","helpDescription":"Interact with specific control.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"waitForUI5(\n\t{\n\t\ttimeout: ${timeout}, // int\n\t\tinterval: ${interval} // int\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.ui.test.RecordReplay.waitForUI5","description":"waitForUI5(oOptions) : Promise<(undefined|Error)>","helpDescription":"Wait for UI5 to complete processing, poll until all asynchronous work is finished, or timeout.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.test.actions.Drag(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tidSuffix: \"${idSuffix}\" // string\n\t}\n)\n","static":"true","extends":"sap.ui.test.actions.Action","Deprecated":false,"prefix":"Drag","Experimental":false,"module":"sap/ui/test/actions/Drag","name":"sap.ui.test.actions.Drag","description":"Drag(sId?, mSettings?) : sap.ui.test.actions.Drag","helpDescription":"The <code>Drag<\/code> action is used to simulate a drag interaction with a control. The control should be draggable, as defined by its dnd aggregation configuration. The drop location will be defined by a consequtive {@link sap.ui.test.actions.Drop} action.\n\nThe <code>Drag<\/code> action targets the DOM focus reference of the control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.test.actions.Drop(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tidSuffix: \"${idSuffix}\", // string\n\t\taggregationName: \"${aggregationName}\", // string\n\t\tbefore: ${bBefore}, // boolean\n\t\tafter: ${bAfter} // boolean\n\t}\n)\n","static":"true","prefix":"Drop","Experimental":false,"module":"sap/ui/test/actions/Drop","description":"Drop(sId?, mSettings?) : sap.ui.test.actions.Drop","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAggregationName aggregationName} : string<\/li>\n<li>{@link #getBefore before} : boolean<\/li>\n<li>{@link #getAfter after} : boolean<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.actions.Action#constructor sap.ui.test.actions.Action}\ncan be used as well.","extends":"sap.ui.test.actions.Action","Deprecated":false,"name":"sap.ui.test.actions.Drop","helpDescription":"The <code>Drop<\/code> action is used to simulate drop on a control. The control should be droppable, as defined by its dnd aggregation configuration. The dropped control should be defined in a preceding {@link sap.ui.test.actions.Drag} action.\n\nThe <code>Drop<\/code> action targets a special DOM element representing the control. This DOM element can be customized.\n\nFor most most controls, the target will be the DOM focus reference. You can choose a different DOM element by specifying its ID suffix. You can do this by directly passing the ID suffix to the Drop constructor, or by defining a control adapter function. You can also set the traget to be the root DOM element of a given aggregation, by specifying the aggregation name in the Drop constructor.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.test.actions.EnterText(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tidSuffix: \"${idSuffix}\", // string\n\t\ttext: \"${text}\", // string\n\t\tclearTextFirst: ${bClearTextFirst}, // boolean\n\t\tkeepFocus: ${bKeepFocus}, // boolean\n\t\tpressEnterKey: ${bPressEnterKey} // boolean\n\t}\n)\n","static":"true","prefix":"EnterText","Experimental":false,"module":"sap/ui/test/actions/EnterText","description":"EnterText(sId?, mSettings?) : sap.ui.test.actions.EnterText","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getClearTextFirst clearTextFirst} : boolean (default: true)<\/li>\n<li>{@link #getKeepFocus keepFocus} : boolean (default: false)<\/li>\n<li>{@link #getPressEnterKey pressEnterKey} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.actions.Action#constructor sap.ui.test.actions.Action}\ncan be used as well.","extends":"sap.ui.test.actions.Action","Deprecated":false,"name":"sap.ui.test.actions.EnterText","helpDescription":"The <code>EnterText<\/code> action is used to simulate a user entering texts to inputs. <code>EnterText<\/code> will be executed on a control's focus dom ref. Supported controls are (for other controls this action still might work): <ul> <li><code>sap.m.Input<\/code><\/li> <li><code>sap.m.SearchField<\/code><\/li> <li><code>sap.m.TextArea<\/code><\/li> <\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.test.actions.Press(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tidSuffix: \"${idSuffix}\", // string\n\t\taltKey: ${bAltKey}, // boolean\n\t\tshiftKey: ${bShiftKey}, // boolean\n\t\tctrlKey: ${bCtrlKey}, // boolean\n\t\txPercentage: ${xPercentage}, // float\n\t\tyPercentage: ${yPercentage} // float\n\t}\n)\n","static":"true","prefix":"Press","Experimental":false,"module":"sap/ui/test/actions/Press","description":"Press(sId?, mSettings?) : sap.ui.test.actions.Press","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAltKey altKey} : boolean<\/li>\n<li>{@link #getShiftKey shiftKey} : boolean<\/li>\n<li>{@link #getCtrlKey ctrlKey} : boolean<\/li>\n<li>{@link #getXPercentage xPercentage} : float<\/li>\n<li>{@link #getYPercentage yPercentage} : float<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.actions.Action#constructor sap.ui.test.actions.Action}\ncan be used as well.","extends":"sap.ui.test.actions.Action","Deprecated":false,"name":"sap.ui.test.actions.Press","helpDescription":"The <code>Press<\/code> action is used to simulate a press interaction with a control. Most controls are supported, for example buttons, links, list items, tables, filters, and form controls.\n\nThe <code>Press<\/code> action targets a special DOM element representing the control. This DOM element can be customized.\n\nFor most most controls (even custom ones), the DOM focus reference is an appropriate choice. You can choose a different DOM element by specifying its ID suffix. You can do this by directly passing the ID suffix to the Press constructor, or by defining a control adapter.\n\nThere are some basic controls for which OPA5 has defined <code>Press<\/code> control adapters. For more information, see <code>controlAdapters<\/code> at {@link sap.ui.test.actions.Press}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.test.actions.Scroll(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tidSuffix: \"${idSuffix}\", // string\n\t\tx: ${0}, // int\n\t\ty: ${0} // int\n\t}\n)\n","static":"true","prefix":"Scroll","Experimental":false,"module":"sap/ui/test/actions/Scroll","description":"Scroll(sId?, mSettings?) : sap.ui.test.actions.Scroll","constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : int (default: 0)<\/li>\n<li>{@link #getY y} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.actions.Action#constructor sap.ui.test.actions.Action}\ncan be used as well.","extends":"sap.ui.test.actions.Action","Deprecated":false,"name":"sap.ui.test.actions.Scroll","helpDescription":"The <code>Scroll<\/code> action is used to simulate a scroll interaction with a control. The control should be scrollable and use a {@link sap.ui.core.delegate.ScrollEnablement} delegate. Supported controls include: sap.uxap.ObjectPageLayout, sap.m.Dialog, sap.m.Page, sap.f.DynamicPage","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"createTestsuiteConfig(\n\t{\n\t\tlibrary: \"${library}\", // string\n\t\tobjectCapabilities: ${objectCapabilities}, // object\n\t\tskipTests: [${skipTests}] // sap.ui.test.generic.GenericTestCollection.Test[]\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/test/generic/GenericTestCollection","name":"sap.ui.test.generic.GenericTestCollection.createTestsuiteConfig","description":"createTestsuiteConfig(mConfig) : object","helpDescription":"Create the testsuite config.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"test(\n\t{\n\t\tfeaturePath: \"${featurePath}\", // string\n\t\tsteps: ${fn_steps}, // function\n\t\tgenerateMissingSteps: ${bGenerateMissingSteps} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/test/gherkin/opa5TestHarness","name":"sap.ui.test.gherkin.opa5TestHarness.test","description":"test(args)","helpDescription":"Dynamically generates Opa5 tests\n\nIf a test step is missing and args.generateMissingSteps is true then the Gherkin step will be converted into Opa Page Object code and executed. The text will be converted to camelCase and have any non-alphanumeric character removed. Here are two pertinent examples:\n\n(1) The simple step \"Given I start my app\" will be converted into the call \"Given.iStartMyApp();\"\n\n(2) The step \"Then on page 1: I should see the page 1 text\" will become the call \"Then.onPage1.iShouldSeeThePage1Text();\"\n\nChaining function calls, such as \"Then.iStartMyApp().and.iCloseMyApp()\" is not possible at this time.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"test(\n\t{\n\t\tfeaturePath: \"${featurePath}\", // string\n\t\tsteps: ${fn_steps} // function\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/test/gherkin/qUnitTestHarness","name":"sap.ui.test.gherkin.qUnitTestHarness.test","description":"test(args)","helpDescription":"Dynamically generates and executes QUnit tests","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.ui.test.matchers.Sibling(\n\t\"${vSibling}\", // object|string\n\t{\n\t\tuseDom: ${bUseDom}, // boolean\n\t\tprev: ${bPrev}, // boolean\n\t\tnext: ${bNext}, // boolean\n\t\tlevel: ${bLevel} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"Sibling","Experimental":false,"module":"sap/ui/test/matchers/Sibling","name":"sap.ui.test.matchers.Sibling","description":"Sibling(vSibling, oOptions?) : sap.ui.test.matchers.Sibling","helpDescription":"Checks if a control has a defined sibling. Available as a declarative matcher with the following syntax: <code><pre>{\n    sibling: \"object\" // where \"object\" is a declarative matcher for the sibling\n}\n<\/code><\/pre> The declarative matcher for Sibling does not support <b>oOptions<\/b> parameters.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"component(\n\t{\n\t\tname: \"${name}\", // string\n\t\turl: \"${url}\", // string\n\t\tcomponentData: ${componentData}, // object\n\t\tid: \"${id}\", // string\n\t\tsettings: ${settings}, // object\n\t\tactiveTerminologies: [${activeTerminologies}], // string[]\n\t\tasync: ${bAsync}, // boolean\n\t\tasyncHints: ${asyncHints}, // object\n\t\tmanifest: ${manifest}, // boolean|string|object\n\t\tmanifestUrl: \"${manifestUrl}\", // string\n\t\tmanifestFirst: ${bManifestFirst}, // boolean\n\t\thandleValidation: \"${handleValidation}\" // string\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.component","description":"component(vConfig) : sap.ui.core.Component|Promise","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 use {@link sap.ui.core.Component.get Component.get} or {@link sap.ui.core.Component.create Component.create} instead. Note: {@link sap.ui.core.Component.create Component.create} does not support synchronous loading or the deprecated options <em>manifestFirst<\/em> and <em>manifestUrl<\/em>.<br>Creates a new instance of a <code>Component<\/code> or returns the instance of an existing <code>Component<\/code>.\n\nIf you want to look up an existing <code>Component<\/code> you can call this function with a Component ID as parameter: <pre>\n  var oComponent = sap.ui.component(sComponentId);\n<\/pre>\n\nTo create a new instance of a component you pass a component configuration object into this function: <pre>\n  var oComponent = sap.ui.component({\n    name: \"my.Component\",\n    url: \"my/component/location\",\n    id: \"myCompId1\"\n  });\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"fragment(\n\t{\n\t\tid: \"${id}\", // string\n\t\tfragmentContent: ${fragmentContent}, // string|object\n\t\tfragmentName: \"${fragmentName}\", // string\n\t\ttype: \"${type}\" // string\n\t},\n\t\"${vType}\", // string|sap.ui.core.mvc.Controller|object\n\t\"${oController}\" // sap.ui.core.mvc.Controller|object\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.fragment","description":"fragment(vName, vType, oController?) : sap.ui.core.Control|sap.ui.core.Control[]","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Refer to {@link topic:04129b2798c447368f4c8922c3c33cd7 Instantiation of Fragments}.<br>Loads and instantiates a fragment. The fragment object itself is not an entity that has any further significance beyond this factory function.\n\nTo instantiate a fragment that is already defined separately, call: <pre>\nsap.ui.fragment(sName, sType, oController?);\n<\/pre>\n\nAdvanced usage to give further configuration options: <pre>\nsap.ui.fragment(oFragmentConfig, oController?);\n<\/pre> In addition to <code>id<\/code> and <code>type<\/code>, the <code>oFragmentConfig<\/code> object can have either a <code>fragmentName<\/code> or a <code>fragmentContent<\/code> property, but not both.\n\nTo define a fragment ID, which can be used as a prefix for the created control IDs, you must use either the above advanced version with an <code>id<\/code> or one of the typed factory functions like {@link sap.ui.xmlfragment} or {@link sap.ui.jsfragment}.\n\nA fragment type must be given in all cases. The fragment types <code>\"XML\"<\/code>, <code>\"JS\"<\/code>, and <code>\"HTML\"<\/code> (type <code>\"HTML\"<\/code> is deprecated) are available by default. Additional fragment types can be implemented and added using the {@link sap.ui.core.Fragment.registerType} function.\n\nCustom fragment types can support further properties. Any given properties will be forwarded to the fragment implementation.\n\nThe optional <code>oController<\/code> can be either the controller of an enclosing view, a new controller instance, or a simple object with the necessary methods attached. Note that a fragment has no runtime representation besides its contained controls. Therefore, there is no API to retrieve the controller from the return value. Note also that fragments may require a controller to be given and certain methods to be available.\n\n<b>Note:<\/b> In case you are embedding a Fragment into an existing View, please also have a look at the {@link sap.ui.core.mvc.Controller.loadFragment loadFragment} factory for a closer coupling to the corresponding Controller instance.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"getVersionInfo(\n\t{\n\t\tlibrary: ${bLibrary}, // boolean\n\t\tasync: ${bAsync}, // boolean\n\t\tfailOnError: ${bFailOnError} // boolean\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.getVersionInfo","description":"getVersionInfo(mOptions?) : object|undefined|Promise","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use {@link module:sap/ui/VersionInfo.load} instead<br>Loads the version info file (resources/sap-ui-version.json) and returns it or if a library name is specified then the version info of the individual library will be returned.\n\nIn case of the version info file is not available an error will occur when calling this function.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"htmlfragment(\n\t{\n\t\tid: \"${id}\", // string\n\t\tfragmentContent: \"${fragmentContent}\", // string\n\t\tfragmentName: \"${fragmentName}\" // string\n\t},\n\t\"${vFragment}\", // string|sap.ui.core.mvc.Controller|object\n\t\"${oController}\" // sap.ui.core.mvc.Controller|object\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.htmlfragment","description":"htmlfragment(vId?, vFragment, oController?) : sap.ui.core.Control|sap.ui.core.Control[]","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Additionally, use of fragments based on type <code>\"HTML\"<\/code> is deprecated since 1.108. If you need declarative fragments, use XML fragments instead. Refer to {@link topic:04129b2798c447368f4c8922c3c33cd7 Instantiation of Fragments}.<br>Loads and instantiates an HTML-based fragment.\n\nTo instantiate a fragment that is already defined separately, call: <pre>\nsap.ui.htmlfragment(sId?, sFragmentName, oController?);\n<\/pre>\n\nAdvanced usage: <pre>\nsap.ui.htmlfragment(oFragmentConfig, oController?);\n<\/pre> In addition to an <code>id<\/code>, the <code>oFragmentConfig<\/code> object can have either a <code>fragmentName<\/code> or a <code>fragmentContent<\/code> property, but not both.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"htmlview(\n\t\"${sId}\", // string\n\t{\n\t\tasync: ${bAsync} // boolean\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.htmlview","description":"htmlview(sId?, vView) : sap.ui.core.mvc.HTMLView|undefined","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use {@link sap.ui.core.mvc.HTMLView.create HTMLView.create} to create view instances<br>Defines or creates an instance of a declarative HTML view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul> <li>View Definition <code>sap.ui.htmlview(sId, vView)<\/code>: Defines a view of the given name with the given implementation. sId must be the views name, vView must be an object and can contain implementations for any of the hooks provided by HTMLView<\/li> <li>View Instantiation <code>sap.ui.htmlview(sId?, vView)<\/code>: Creates an instance of the view with the given name (and id)<\/li>. <\/ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will be created automatically.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"jsfragment(\n\t{\n\t\tid: \"${id}\", // string\n\t\tfragmentName: \"${fragmentName}\" // string\n\t},\n\t\"${vFragmentDefinition}\", // object|string\n\t\"${oController}\" // sap.ui.core.mvc.Controller|object\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.jsfragment","description":"jsfragment(vName, vFragmentDefinition, oController?) : sap.ui.core.Control|sap.ui.core.Control[]","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Refer to {@link topic:04129b2798c447368f4c8922c3c33cd7 Instantiation of Fragments}.<br>Defines <strong>or<\/strong> instantiates a JS-based fragment.\n\nTo define a JS fragment, call: <pre>\nsap.ui.jsfragment(sName, oFragmentDefinition);\n<\/pre>\n\nTo instantiate a JS fragment that is already defined, call: <pre>\nsap.ui.jsfragment(sId?, sFragmentName, oController?);\n<\/pre> Advanced usage: <pre>\nsap.ui.jsfragment(oFragmentConfig, oController?);\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"jsonview(\n\t\"${sId}\", // string\n\t{\n\t\tviewName: \"${viewName}\", // string\n\t\tviewContent: ${viewContent}, // string|object\n\t\tasync: ${bAsync}, // boolean\n\t\tcontroller: ${controller} // sap.ui.core.mvc.Controller\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.jsonview","description":"jsonview(sId?, vView) : sap.ui.core.mvc.JSONView","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use {@link sap.ui.core.mvc.JSONView.create JSONView.create} to create view instances<br>Creates a JSON view of the given name and id.\n\nThe <code>viewName<\/code> must either correspond to a JSON module that can be loaded via the module system (viewName + suffix \".view.json\") and which defines the view or it must be a configuration object for a view. The configuration object can have a viewName, viewContent and a controller property. The viewName behaves as described above, viewContent can hold the view description as JSON string or as object literal.\n\n<strong>Note<\/strong>: when an object literal is given, it might be modified during view construction.\n\nThe controller property can hold a controller instance. If a controller instance is given, it overrides the controller defined in the view.\n\nWhen property <code>async<\/code> is set to true, the view definition and the controller class (and its dependencies) will be loaded asynchronously. Any controls used in the view might be loaded sync or async, depending on the view configuration. Even when the view definition is provided as string or object tree, controller or controls might be loaded asynchronously. In any case, a view instance will be returned synchronously by this factory API, but its content (control tree) might appear only later. Also see {@link sap.ui.core.mvc.View#loaded}.\n\nLike with any other control, an id is optional and will be created when missing.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"template(\n\t{\n\t\tid: \"${id}\", // string\n\t\tdomref: ${domref}, // Element\n\t\ttype: \"${type}\", // string\n\t\tcontext: ${context}, // object\n\t\tsrc: \"${src}\", // string\n\t\tcontrol: \"${control}\" // string\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.template","description":"template(oTemplate?) : sap.ui.core.tmpl.Template|sap.ui.core.tmpl.Template[]","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 use an {@link sap.ui.core.mvc.XMLView XMLView} or {@link sap.ui.core.mvc.JSView JSView} instead.<br>Creates a Template for the given ID, DOM reference or a configuration object.\n\nIf no parameter is defined, this function makes a lookup of DOM elements which are specifying a type attribute. If the value of this type attribute matches a registered type then the content of this DOM element will be used to create a new <code>Template<\/code> instance.\n\nIf you want to lookup all kind of existing and known templates and parse them directly you can simply call: <pre>\n  sap.ui.template();\n<\/pre>\n\nTo parse a concrete DOM element you can do so by using this function in the following way: <pre>\n  sap.ui.template(\"theTemplateId\");\n<\/pre>\n\nOr you can pass the reference to a DOM element and use this DOM element as a source for the template: <pre>\n  sap.ui.template(oDomRef);\n<\/pre>\n\nThe last option to use this function is to pass the information via a configuration object. This configuration object can be used to pass a context for the templating framework when compiling the template: <pre>\n  var oTemplateById = sap.ui.template({\n    id: \"theTemplateId\",\n    context: { ... }\n  });\n\n  var oTemplateByDomRef = sap.ui.template({\n    domref: oDomRef,\n    context: { ... }\n  });\n<\/pre>\n\nIt can also be used to load a template from another file: <pre>\n  var oTemplate = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\"\n  });\n\n  var oTemplateWithContext = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\",\n    context: { ... }\n  });\n<\/pre>","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"view(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // object\n\t\tviewName: ${viewName}, // object\n\t\tcontroller: ${controller}, // sap.ui.core.mvc.Controller\n\t\tasync: ${bAsync}, // boolean\n\t\ttype: ${type}, // sap.ui.core.mvc.ViewType\n\t\tviewData: ${viewData}, // object\n\t\tpreprocessors: [${preprocessors}] // Map<string,object[]>\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.view","description":"view(sId?, vView?) : sap.ui.core.mvc.View","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use {@link sap.ui.core.mvc.View.extend View.extend} to define the view class and {@link sap.ui.core.mvc.View.create View.create} to create view instances<br>Creates a view of the given type, name and with the given ID.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"xmlfragment(\n\t{\n\t\tid: \"${id}\", // string\n\t\tfragmentContent: \"${fragmentContent}\", // string\n\t\tfragmentName: \"${fragmentName}\" // string\n\t},\n\t\"${vFragment}\", // string|sap.ui.core.mvc.Controller|object\n\t\"${oController}\" // sap.ui.core.mvc.Controller|object\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.xmlfragment","description":"xmlfragment(vId?, vFragment, oController?) : sap.ui.core.Control|sap.ui.core.Control[]","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Refer to {@link topic:04129b2798c447368f4c8922c3c33cd7 Instantiation of Fragments}.<br>Loads and instantiates an XML-based fragment.\n\nTo instantiate a fragment that is already defined separately, call: <pre>\nsap.ui.xmlfragment(sId?, sFragmentName, oController?);\n<\/pre>\n\nAdvanced usage: <pre>\nsap.ui.xmlfragment(oFragmentConfig, oController?);\n<\/pre> In addition to an <code>id<\/code>, the <code>oFragmentConfig<\/code> object can have either a <code>fragmentName<\/code> or a <code>fragmentContent<\/code> property, but not both.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}},{"template":"xmlview(\n\t\"${sId}\", // string\n\t{\n\t\tviewName: \"${viewName}\", // string\n\t\tviewContent: ${viewContent}, // string|Document\n\t\tasync: ${bAsync}, // boolean\n\t\tcache: ${cache}, // object\n\t\tpreprocessors: ${preprocessors}, // object\n\t\tcontroller: ${controller} // sap.ui.core.mvc.Controller\n\t}\n)\n","static":"true","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"module":"sap/ui/Global","name":"sap.ui.xmlview","description":"xmlview(sId?, vView) : sap.ui.core.mvc.XMLView","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances<br>Instantiates an XMLView of the given name and with the given ID.\n\nThe <code>vView<\/code> can either be the name of the module that contains the view definition or it can be a configuration object with properties <code>viewName<\/code>, <code>viewContent<\/code> and a <code>controller<\/code> property (more properties are described in the parameters section below).\n\nIf a <code>viewName<\/code> is given, it behaves the same as when <code>vView<\/code> is a string: the named resource will be loaded and parsed as XML. Alternatively, an already loaded view definition can be provided as <code>viewContent<\/code>, either as XML string or as an already parsed XML document. Exactly one of <code>viewName<\/code> and <code>viewContent<\/code> must be given, if none or both are given, an error will be reported. The <code>controller<\/code> property is optional and can hold a controller instance. When given, it overrides the controller class defined in the view definition.\n\nWhen property <code>async<\/code> is set to true, the view definition and the controller class (and its dependencies) will be loaded asynchronously. Any controls used in the view might be loaded sync or async, depending on the processingMode. Even when the view definition is provided as string or XML Document, controller or controls might be loaded asynchronously. In any case a view instance will be returned synchronously by this factory API, but its content (control tree) might appear only later. Also see {@link sap.ui.core.mvc.View#loaded}.\n\n<strong>Note<\/strong>: If an XML document is given, it might be modified during view construction.\n\n<strong>Note<\/strong>: On root level, you can only define content for the default aggregation, e.g. without adding the <code>&lt;content&gt;<\/code> tag. If you want to specify content for another aggregation of a view like <code>dependents<\/code>, place it in a child control's dependents aggregation or add it by using {@link sap.ui.core.mvc.XMLView#addDependent}.\n\n<strong>Note<\/strong>: If you enable caching, you need to take care of the invalidation via keys. Automatic invalidation takes only place if the UI5 version or the component descriptor (manifest.json) change. This is still an experimental feature and may experience slight changes of the invalidation parameters or the cache key format.\n\nLike with any other control, <code>sId<\/code> is optional and an ID will be created automatically.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Use {@link sap.ui.core.mvc.XMLView.create XMLView.create} to create view instances","since":"1.56"}}],"!version":"1.21.1"}