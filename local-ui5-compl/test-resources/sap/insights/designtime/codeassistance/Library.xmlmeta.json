{"enums":[],"metadatas":{"sap.insights.ManageCards":{"associations":{"fieldHelpDisplay":{"method":"#getFieldHelpDisplay,setFieldHelpDisplay","Deprecated":false,"Experimental":false,"multiple":"false","description":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","fullName":"sap.insights.ManageCards#fieldHelpDisplay","helpDescription":"Reference to the element to show the field help for this control; if unset, field help is show on the control itself.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}}},"filetype":"class","Experimental":false,"module":"sap/insights/ManageCards","description":"This control shows list of all user cards and allows perform actions like change visibility, change order. It also allows user to get preview of particular card, delete or copy.","constructorDescription":"Constructor for  ManageCards.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableResetAllCards enableResetAllCards} : boolean (default: false)<\/li>\n<li>{@link #getCardId cardId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extend":"sap.ui.core.Control","Deprecated":false,"helpDescription":"This control shows list of all user cards and allows perform actions like change visibility, change order. It also allows user to get preview of particular card, delete or copy.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{"layoutData":{"method":"#getLayoutData,destroyLayoutData,setLayoutData","Deprecated":false,"Experimental":false,"multiple":"false","description":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","fullName":"sap.insights.ManageCards#layoutData","helpDescription":"Defines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","type":"sap.ui.core.LayoutData","DeprecatedInfo":{"isDeprecated":false}},"_navContainer":{"method":"#get_navContainer,destroy_navContainer,set_navContainer","Deprecated":false,"Experimental":false,"multiple":"false","fullName":"sap.insights.ManageCards#_navContainer","type":"sap.m.NavContainer","DeprecatedInfo":{"isDeprecated":false}},"tooltip":{"method":"#getTooltip,destroyTooltip,setTooltip","Deprecated":false,"Experimental":false,"multiple":"false","description":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","fullName":"sap.insights.ManageCards#tooltip","helpDescription":"The tooltip that should be shown for this Element.\n\nIn the most simple case, a tooltip is a string that will be rendered by the control and displayed by the browser when the mouse pointer hovers over the control's DOM. In this variant, <code>tooltip<\/code> behaves like a simple control property.\n\nControls need to explicitly support this kind of tooltip as they have to render it, but most controls do. Exceptions will be documented for the corresponding controls (e.g. <code>sap.ui.core.HTML<\/code> does not support tooltips).\n\nAlternatively, <code>tooltip<\/code> can act like a 0..1 aggregation and can be set to a tooltip control (an instance of a subclass of <code>sap.ui.core.TooltipBase<\/code>). In that case, the framework will take care of rendering the tooltip control in a popup-like manner. Such a tooltip control can display arbitrary content, not only a string.\n\nUI5 currently does not provide a recommended implementation of <code>TooltipBase<\/code> as the use of content-rich tooltips is discouraged by the Fiori Design Guidelines. Existing subclasses of <code>TooltipBase<\/code> therefore have been deprecated. However, apps can still subclass from <code>TooltipBase<\/code> and create their own implementation when needed (potentially taking the deprecated implementations as a starting point).\n\nSee the section {@link https://experience.sap.com/fiori-design-web/using-tooltips/ Using Tooltips} in the Fiori Design Guideline.","type":"sap.ui.core.TooltipBase","DeprecatedInfo":{"isDeprecated":false}},"customData":{"method":"#getCustomData,destroyCustomData,insertCustomData,addCustomData,removeCustomData,indexOfCustomData,removeAllCustomData","Deprecated":false,"Experimental":false,"multiple":"true","description":"Custom Data, a data structure like a map containing arbitrary key value pairs.","fullName":"sap.insights.ManageCards#customData","helpDescription":"Custom Data, a data structure like a map containing arbitrary key value pairs.","type":"sap.ui.core.CustomData","DeprecatedInfo":{"isDeprecated":false}},"dependents":{"method":"#getDependents,destroyDependents,insertDependent,addDependent,removeDependent,indexOfDependent,removeAllDependents","Deprecated":false,"Experimental":false,"multiple":"true","description":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","fullName":"sap.insights.ManageCards#dependents","helpDescription":"Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","type":"sap.ui.core.Element","DeprecatedInfo":{"isDeprecated":false}},"dragDropConfig":{"method":"#getDragDropConfig,destroyDragDropConfig,insertDragDropConfig,addDragDropConfig,removeDragDropConfig,indexOfDragDropConfig,removeAllDragDropConfig","Deprecated":false,"Experimental":false,"multiple":"true","description":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","fullName":"sap.insights.ManageCards#dragDropConfig","helpDescription":"Defines the drag-and-drop configuration. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","type":"sap.ui.core.dnd.DragDropBase","DeprecatedInfo":{"isDeprecated":false}}},"properties":{"models":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.insights.ManageCards#models","type":"object"},"visible":{"method":"#getVisible,setVisible","Deprecated":false,"defaultValue":"true","Experimental":false,"description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","fullName":"sap.insights.ManageCards#visible","helpDescription":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"enableResetAllCards":{"method":"#getEnableResetAllCards,setEnableResetAllCards","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Sets enableResetAllCards property","fullName":"sap.insights.ManageCards#enableResetAllCards","helpDescription":"Sets enableResetAllCards property","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"objectBindings":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.insights.ManageCards#objectBindings","type":"object"},"busyIndicatorSize":{"method":"#getBusyIndicatorSize,setBusyIndicatorSize","Deprecated":false,"defaultValue":"Medium","Experimental":false,"description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","fullName":"sap.insights.ManageCards#busyIndicatorSize","helpDescription":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","type":"sap.ui.core.BusyIndicatorSize","DeprecatedInfo":{"isDeprecated":false}},"metadataContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected. The special setting is only for internal use.","fullName":"sap.insights.ManageCards#metadataContexts","type":"object"},"blocked":{"method":"#getBlocked,setBlocked","Deprecated":true,"defaultValue":"false","Experimental":false,"description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","fullName":"sap.insights.ManageCards#blocked","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","type":"boolean","DeprecatedInfo":{"isDeprecated":true,"description":"The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.","since":"1.69"}},"busyIndicatorDelay":{"method":"#getBusyIndicatorDelay,setBusyIndicatorDelay","Deprecated":false,"defaultValue":"1000","Experimental":false,"description":"The delay in milliseconds, after which the busy indicator will show up for this control.","fullName":"sap.insights.ManageCards#busyIndicatorDelay","helpDescription":"The delay in milliseconds, after which the busy indicator will show up for this control.","type":"int","DeprecatedInfo":{"isDeprecated":false}},"busy":{"method":"#getBusy,setBusy","Deprecated":false,"defaultValue":"false","Experimental":false,"description":"Whether the control is currently in busy state.","fullName":"sap.insights.ManageCards#busy","helpDescription":"Whether the control is currently in busy state.","type":"boolean","DeprecatedInfo":{"isDeprecated":false}},"cardId":{"method":"#getCardId,setCardId","Deprecated":false,"Experimental":false,"description":"Sets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered","fullName":"sap.insights.ManageCards#cardId","helpDescription":"Sets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered","type":"string","DeprecatedInfo":{"isDeprecated":false}},"fieldGroupIds":{"method":"#getFieldGroupIds,setFieldGroupIds","Deprecated":false,"Experimental":false,"description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.insights.ManageCards#fieldGroupIds","helpDescription":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"string[]","DeprecatedInfo":{"isDeprecated":false}},"id":{"defaultValue":"","description":"Unique ID of this instance. If not given, a so called autoID will be generated by the framework. AutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates. It can be configured option 'autoIDPrefix', see {@link topic:91f2d03b6f4d1014b6dd926db0e91070 Configuration Options and URL Parameters}.","fullName":"sap.insights.ManageCards#id","type":"sap.ui.core.ID"},"bindingContexts":{"defaultValue":{},"description":"A map of model instances to which the object should be attached. The models are keyed by their model name. For the default model, String(undefined) is expected.","fullName":"sap.insights.ManageCards#bindingContexts","type":"object"}},"events":{"formatError":{"method":"sap.insights.ManageCards#event:formatError","Deprecated":false,"Experimental":false,"name":"formatError","description":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","fullName":"sap.insights.ManageCards#formatError","helpDescription":"Fired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"parseError":{"method":"sap.insights.ManageCards#event:parseError","Deprecated":false,"Experimental":false,"name":"parseError","description":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","fullName":"sap.insights.ManageCards#parseError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationSuccess":{"method":"sap.insights.ManageCards#event:validationSuccess","Deprecated":false,"Experimental":false,"name":"validationSuccess","description":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","fullName":"sap.insights.ManageCards#validationSuccess","helpDescription":"Fired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"modelContextChange":{"method":"sap.insights.ManageCards#event:modelContextChange","Deprecated":false,"Experimental":false,"name":"modelContextChange","description":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","fullName":"sap.insights.ManageCards#modelContextChange","helpDescription":"Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validateFieldGroup":{"method":"sap.insights.ManageCards#event:validateFieldGroup","Deprecated":false,"Experimental":false,"name":"validateFieldGroup","description":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","fullName":"sap.insights.ManageCards#validateFieldGroup","helpDescription":"Event is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or when the user explicitly pressed the key combination that triggers validation.\n\nBy default, the <code>RETURN<\/code> key without any modifier keys triggers validation, see {@link #triggerValidateFieldGroup}.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link #setFieldGroupIds}, or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}},"validationError":{"method":"sap.insights.ManageCards#event:validationError","Deprecated":false,"Experimental":false,"name":"validationError","description":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","fullName":"sap.insights.ManageCards#validationError","helpDescription":"Fired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","type":"fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]","DeprecatedInfo":{"isDeprecated":false}}}},"sap.insights":{"filetype":"library","types":["sap.insights.CardHelper"],"controls":["sap.insights.ManageCards"],"typesWithClasses":["sap.insights.channels"],"module":"sap/insights/library","name":"sap.insights","description":"SAP UI library: sap.insights","helpDescription":"SAP UI library: sap.insights","version":"1.132.0"},"sap.insights.CardsChannel":{"extend":"sap.ui.base.Object","associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/insights/CardsChannel","constructorDescription":"Provides a communication between card providers and consumers in FLP and included iframes.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}},"sap.insights.channels.ContextChannel":{"extend":"sap.ui.base.Object","associations":{},"filetype":"class","Deprecated":false,"Experimental":false,"module":"sap/insights/channels/ContextChannel","constructorDescription":"Provides a communication between card providers and consumers in FLP and included iframes.","DeprecatedInfo":{"isDeprecated":false},"aggregations":{},"properties":{},"events":{}}},"!version":"1.21.1"}