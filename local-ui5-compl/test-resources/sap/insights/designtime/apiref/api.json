{"$schema-ref":"http://schemas.sap.com/sapui5/designtime/api.json/1.0","version":"1.132.0","library":"sap.insights","symbols":[{"kind":"namespace","name":"sap.insights","basename":"insights","resource":"sap/insights/library.js","module":"sap/insights/library","export":"","static":true,"visibility":"public","description":"<p><p>SAP UI library: sap.insights</p></p>","displayName":"sap.insights","nodes":[{"name":"sap.insights.CardHelper","description":"<p>Provides functionality for Insight cards CRUD operations.</p>","href":"api/sap.insights.CardHelper"},{"name":"sap.insights.CardHelperService","description":"<p>Public (experimental) interface of the sap.insights.CardHelperService</p>","href":"api/sap.insights.CardHelperService"},{"name":"sap.insights.CardsChannel","description":"","href":"api/sap.insights.CardsChannel"},{"name":"sap.insights.ICardConsumer","description":"<p>Interface required for classes that would like to consume cards using the <code>sap.insights.CardsChannel</code>.</p>","href":"api/sap.insights.ICardConsumer"},{"name":"sap.insights.ICardProvider","description":"<p>Interface required for classes that would like to provide cards using the <code>sap.insights.CardsChannel</code>.</p>","href":"api/sap.insights.ICardProvider"},{"name":"sap.insights.ManageCards","description":"<p>This control shows list of all user cards and allows perform actions like change visibility, change order. </p>","href":"api/sap.insights.ManageCards"},{"name":"sap.insights.channels","description":"","href":"api/sap.insights.channels"}],"component":"CA-FLP-EXT-INS","title":"namespace sap.insights","subTitle":""},{"kind":"namespace","name":"sap.insights.CardHelper","basename":"CardHelper","resource":"sap/insights/CardHelper.js","module":"sap/insights/CardHelper","export":"","static":true,"visibility":"public","since":"1.102","description":"<p><p>Provides functionality for Insight cards CRUD operations.</p></p>","experimental":{"since":"1.102"},"displayName":"sap.insights.CardHelper","component":"CA-FLP-EXT-INS","title":"namespace sap.insights.CardHelper","subTitle":""},{"kind":"interface","name":"sap.insights.CardHelperService","basename":"CardHelperService","resource":"sap/insights/CardHelper.js","module":"sap/insights/CardHelper","static":true,"visibility":"public","description":"<p><p>Public (experimental) interface of the sap.insights.CardHelperService</p></p>","experimental":{},"properties":[{"name":"sap.insights.CardHelperService.showAddCardWithSearchDialog","visibility":"public","description":"<p>Show preview for Add Card With Search Dialog</p>","experimental":{},"typeInfo":{"template":"undefined"}}],"methods":[{"name":"sap.insights.CardHelperService.handleDndCardsRanking","visibility":"public","static":true,"returnValue":{"type":"Array","description":"<p>Returns an array of updated object</p>","typeInfo":{"template":"Array"}},"parameters":[{"name":"iDragItemIndex","optional":false,"description":"<p>card drag index</p>","typeInfo":{"template":"number"},"defaultValue":""},{"name":"iDropItemIndex","optional":false,"description":"<p>card drop index</p>","typeInfo":{"template":"number"},"defaultValue":""},{"name":"aCards","optional":false,"description":"<p>array of all cards</p>","typeInfo":{"template":"Array"},"defaultValue":""}],"description":"<p>Updates Cards Ranking in case of Drag & Drop of Cards</p>","experimental":{},"href":"api/sap.insights.CardHelperService#methods/sap.insights.CardHelperService.handleDndCardsRanking","code":"<pre>sap.insights.CardHelperService.handleDndCardsRanking(iDragItemIndex, iDropItemIndex, aCards) : Array</pre>"},{"name":"sap.insights.CardHelperService.showCardPreview","visibility":"public","static":true,"returnValue":{"type":"Promise<void>","description":"<p>Returns promise, which generates preview for the passed card manifest</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"oCard","optional":false,"description":"<p>card manifest for which preview will be generated</p>","typeInfo":{"template":"object"},"defaultValue":""},{"name":"bTransform","optional":false,"description":"<p>boolean to determine whether card can be transfrormed</p>","typeInfo":{"template":"boolean"},"defaultValue":""},{"name":"oCardMessageInfo","optional":false,"description":"<p>object which includes type and message text related to Message</p>","typeInfo":{"template":"object"},"defaultValue":""},{"name":"sConfirmButtonText","optional":false,"description":"<p>text for confirm button on the dialog</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"onConfirm","optional":false,"description":"<p>callback event to be called when confirm button is pressed</p>","typeInfo":{"template":"function"},"defaultValue":""}],"description":"<p>Show preview for a given card</p>","experimental":{},"href":"api/sap.insights.CardHelperService#methods/sap.insights.CardHelperService.showCardPreview","code":"<pre>sap.insights.CardHelperService.showCardPreview(oCard, bTransform, oCardMessageInfo, sConfirmButtonText, onConfirm) : Promise<void></pre>"}],"displayName":"sap.insights.CardHelperService","component":"CA-FLP-EXT-INS","title":"interface sap.insights.CardHelperService","subTitle":""},{"kind":"class","name":"sap.insights.CardsChannel","basename":"CardsChannel","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","export":"","static":true,"visibility":"public","extends":"sap.ui.base.Object","experimental":{},"ui5-metadata":{"stereotype":"object"},"constructor":{"visibility":"public","description":"<p>Provides a communication between card providers and consumers in FLP and included iframes.</p>","references":[],"codeExample":"<pre>new sap.insights.CardsChannel()</pre>"},"methods":[{"name":"sap.insights.CardsChannel.extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"<p>Created class / constructor function</p>","typeInfo":{"template":"function"}},"parameters":[{"name":"sClassName","optional":false,"description":"<p>Name of the class being created</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"oClassInfo","optional":true,"description":"<p>Object literal with information about the class</p>","typeInfo":{"template":"object"},"defaultValue":""},{"name":"FNMetaImpl","optional":true,"description":"<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>","typeInfo":{"template":"function"},"defaultValue":""}],"description":"<p>Creates a new subclass of class sap.insights.CardsChannel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.base.Object#methods/sap.ui.base.Object.extend\">sap.ui.base.Object.extend</a>.</p>","href":"api/sap.insights.CardsChannel#methods/sap.insights.CardsChannel.extend","code":"<pre>sap.insights.CardsChannel.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"},{"name":"sap.insights.CardsChannel.getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.base.Metadata","description":"<p>Metadata object describing this class</p>","typeInfo":{"UI5Types":["sap.ui.base.Metadata"]}},"description":"<p>Returns a metadata object for class sap.insights.CardsChannel.</p>","href":"api/sap.insights.CardsChannel#methods/sap.insights.CardsChannel.getMetadata","code":"<pre>sap.insights.CardsChannel.getMetadata() : sap.ui.base.Metadata</pre>"},{"name":"init","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"description":"<p>Initialize the CardsChannel either with the FLP message broker or an internal implementation for iframes.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/init","code":"<pre>init() : Promise<void></pre>"},{"name":"isEnabled","visibility":"public","returnValue":{"type":"boolean","description":"<p>true if the broker is enabled</p>","typeInfo":{"template":"boolean"}},"description":"<p>Checks if the broker is enabled.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/isEnabled","code":"<pre>isEnabled() : boolean</pre>"},{"name":"publishAvailableCards","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"providerId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"cardInfos","optional":false,"description":"<p>.</p>","typeInfo":{"template":"Array<${0}>","UI5Types":["sap.insights.CardsChannel.CardInfo"]},"defaultValue":""},{"name":"consumerId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Send a list of all available cards to a given consumer or broadcast it to all consumers.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/publishAvailableCards","code":"<pre>publishAvailableCards(providerId, cardInfos, consumerId) : Promise<void></pre>"},{"name":"publishCard","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"providerId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"card","optional":false,"description":"<p>.</p>","typeInfo":{"UI5Types":["sap.insights.CardsChannel.Card"]},"defaultValue":""},{"name":"consumerId","optional":true,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Send a card to a given consumer or broadcast it to all consumers.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/publishCard","code":"<pre>publishCard(providerId, card, consumerId?) : Promise<void></pre>"},{"name":"registerConsumer","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"id","optional":false,"description":"<p>Unique id of the consumer</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"consumer","optional":false,"description":"<p>Implementation of the consumer</p>","typeInfo":{"UI5Types":["sap.insights.ICardConsumer"]},"defaultValue":""}],"description":"<p>Register a card consumer with a unique id. The consumer will be notified through its callback when corresponding messages are received.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/registerConsumer","code":"<pre>registerConsumer(id, consumer) : Promise<void></pre>"},{"name":"registerProvider","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"id","optional":false,"description":"<p>Unique id of the provider</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"provider","optional":false,"description":"<p>Object implementing the ICardProvider interface</p>","typeInfo":{"UI5Types":["sap.insights.ICardProvider"]},"defaultValue":""}],"description":"<p>Register a card provider with a unique id. The provider will be notified if new consumers get registered.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/registerProvider","code":"<pre>registerProvider(id, provider) : Promise<void></pre>"},{"name":"requestCard","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"consumerId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"cardId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"providerId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Request a card from a given provider.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/requestCard","code":"<pre>requestCard(consumerId, cardId, providerId) : Promise<void></pre>"},{"name":"requestCardCreation","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"consumerId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"card","optional":false,"description":"<p>.</p>","typeInfo":{"UI5Types":["sap.insights.CardsChannel.Card"]},"defaultValue":""},{"name":"providerId","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Request card creation to a given provider.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/requestCardCreation","code":"<pre>requestCardCreation(consumerId, card, providerId) : Promise<void></pre>"},{"name":"unregister","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"id","optional":false,"description":"<p>.</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Unregister a previously registered consumer or provider.</p>","experimental":{},"href":"api/sap.insights.CardsChannel#methods/unregister","code":"<pre>unregister(id) : Promise<void></pre>"}],"displayName":"sap.insights.CardsChannel","nodes":[{"name":"sap.insights.CardsChannel.Card","description":"<p>The card object</p>","href":"api/sap.insights.CardsChannel.Card"},{"name":"sap.insights.CardsChannel.CardInfo","description":"<p>The cardInfo object</p>","href":"api/sap.insights.CardsChannel.CardInfo"}],"component":"CA-FLP-EXT-INS","title":"class sap.insights.CardsChannel","subTitle":""},{"kind":"typedef","name":"sap.insights.CardsChannel.Card","basename":"Card","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"<p><p>The card object</p></p>","experimental":{},"properties":[{"name":"id","optional":false,"visibility":"public","description":"<p>Unique identifier for the card.</p>","typeInfo":{"template":"string"}},{"name":"descriptorContent","optional":false,"visibility":"public","description":"<p>manifest of the card.</p>","typeInfo":{"template":"Object"}}],"displayName":"sap.insights.CardsChannel.Card","component":"CA-FLP-EXT-INS","title":"typedef sap.insights.CardsChannel.Card","subTitle":""},{"kind":"typedef","name":"sap.insights.CardsChannel.CardInfo","basename":"CardInfo","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"<p><p>The cardInfo object</p></p>","experimental":{},"properties":[{"name":"id","optional":false,"visibility":"public","description":"<p>Unique identifier for the card.</p>","typeInfo":{"template":"string"}},{"name":"title","optional":false,"visibility":"public","description":"<p>Title of the card.</p>","typeInfo":{"template":"string"}},{"name":"parentAppId","optional":false,"visibility":"public","description":"<p>Id of the parent app.</p>","typeInfo":{"template":"string"}},{"name":"description","optional":false,"visibility":"public","description":"<p>Subtitle of the card</p>","typeInfo":{"template":"string"}}],"displayName":"sap.insights.CardsChannel.CardInfo","component":"CA-FLP-EXT-INS","title":"typedef sap.insights.CardsChannel.CardInfo","subTitle":""},{"kind":"class","name":"sap.insights.channels.ContextChannel","basename":"ContextChannel","resource":"sap/insights/channels/ContextChannel.js","module":"sap/insights/channels/ContextChannel","export":"","static":true,"visibility":"public","extends":"sap.ui.base.Object","experimental":{},"ui5-metadata":{"stereotype":"object"},"constructor":{"visibility":"public","description":"<p>Provides a communication between card providers and consumers in FLP and included iframes.</p>","references":[],"codeExample":"<pre>new sap.insights.channels.ContextChannel()</pre>"},"methods":[{"name":"sap.insights.channels.ContextChannel.extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"<p>Created class / constructor function</p>","typeInfo":{"template":"function"}},"parameters":[{"name":"sClassName","optional":false,"description":"<p>Name of the class being created</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"oClassInfo","optional":true,"description":"<p>Object literal with information about the class</p>","typeInfo":{"template":"object"},"defaultValue":""},{"name":"FNMetaImpl","optional":true,"description":"<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>","typeInfo":{"template":"function"},"defaultValue":""}],"description":"<p>Creates a new subclass of class sap.insights.channels.ContextChannel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.base.Object#methods/sap.ui.base.Object.extend\">sap.ui.base.Object.extend</a>.</p>","href":"api/sap.insights.channels.ContextChannel#methods/sap.insights.channels.ContextChannel.extend","code":"<pre>sap.insights.channels.ContextChannel.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"},{"name":"getContext","visibility":"public","returnValue":{"type":"Promise<object>","description":"<p>.</p>","typeInfo":{"template":"Promise<object>"}},"description":"<p>Get the context from the active provider.</p>","experimental":{},"href":"api/sap.insights.channels.ContextChannel#methods/getContext","code":"<pre>getContext() : Promise<object></pre>"},{"name":"sap.insights.channels.ContextChannel.getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.base.Metadata","description":"<p>Metadata object describing this class</p>","typeInfo":{"UI5Types":["sap.ui.base.Metadata"]}},"description":"<p>Returns a metadata object for class sap.insights.channels.ContextChannel.</p>","href":"api/sap.insights.channels.ContextChannel#methods/sap.insights.channels.ContextChannel.getMetadata","code":"<pre>sap.insights.channels.ContextChannel.getMetadata() : sap.ui.base.Metadata</pre>"},{"name":"init","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"description":"<p>Initialize the ContextChannel either with the FLP message broker or an internal implementation for iframes.</p>","experimental":{},"href":"api/sap.insights.channels.ContextChannel#methods/init","code":"<pre>init() : Promise<void></pre>"},{"name":"registerProvider","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"provider","optional":false,"description":"<p>Object implementing the TBD interface</p>","typeInfo":{"UI5Types":["sap.insights.channels.IContextProvider"]},"defaultValue":""}],"description":"<p>Register a card provider with a unique id. The provider will be notified if new consumers get registered.</p>","experimental":{},"href":"api/sap.insights.channels.ContextChannel#methods/registerProvider","code":"<pre>registerProvider(provider) : Promise<void></pre>"},{"name":"unregisterProvider","visibility":"public","returnValue":{"type":"Promise<void>","description":"<p>.</p>","typeInfo":{"template":"Promise<void>"}},"parameters":[{"name":"provider","optional":false,"description":"<p>Object implementing the TBD interface</p>","typeInfo":{"UI5Types":["sap.insights.channels.IContextProvider"]},"defaultValue":""}],"description":"<p>Unregister a previously registered consumer or provider.</p>","experimental":{},"href":"api/sap.insights.channels.ContextChannel#methods/unregisterProvider","code":"<pre>unregisterProvider(provider) : Promise<void></pre>"}],"displayName":"sap.insights.channels.ContextChannel","component":"CA-FLP-EXT-INS","title":"class sap.insights.channels.ContextChannel","subTitle":""},{"kind":"interface","name":"sap.insights.channels.IContextProvider","basename":"IContextProvider","resource":"sap/insights/channels/ContextChannel.js","module":"sap/insights/channels/ContextChannel","static":true,"visibility":"public","description":"<p><p>Interface required for classes that would like to provide cards using the <code>sap.insights.CardsChannel</code>.</p></p>","experimental":{},"methods":[{"name":"sap.insights.channels.IContextProvider.getContext","visibility":"public","static":true,"returnValue":{"type":"Promise<object>","description":"<p>returns a promise of the context</p>","typeInfo":{"template":"Promise<object>"}},"description":"<p>Getter of the current context as promise.</p>","experimental":{},"href":"api/sap.insights.channels.IContextProvider#methods/sap.insights.channels.IContextProvider.getContext","code":"<pre>sap.insights.channels.IContextProvider.getContext() : Promise<object></pre>"},{"name":"sap.insights.channels.IContextProvider.getId","visibility":"public","static":true,"returnValue":{"type":"string","description":"<p>unique id of the context provider</p>","typeInfo":{"template":"string"}},"description":"<p>Get the unique identifier of the context provider (e.g. app id)</p>","experimental":{},"href":"api/sap.insights.channels.IContextProvider#methods/sap.insights.channels.IContextProvider.getId","code":"<pre>sap.insights.channels.IContextProvider.getId() : string</pre>"}],"displayName":"sap.insights.channels.IContextProvider","component":"CA-FLP-EXT-INS","title":"interface sap.insights.channels.IContextProvider","subTitle":""},{"kind":"interface","name":"sap.insights.ICardConsumer","basename":"ICardConsumer","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"<p><p>Interface required for classes that would like to consume cards using the <code>sap.insights.CardsChannel</code>.</p></p>","experimental":{},"methods":[{"name":"sap.insights.ICardConsumer.onCardProvided","visibility":"public","static":true,"parameters":[{"name":"providerId","optional":false,"description":"<p>Unique id of the ICardsProvider that offers cards</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"card","optional":false,"typeInfo":{"template":"object"},"defaultValue":"","description":""}],"description":"<p>Callback when a card is created for this consumer.</p>","experimental":{},"href":"api/sap.insights.ICardConsumer#methods/sap.insights.ICardConsumer.onCardProvided","code":"<pre>sap.insights.ICardConsumer.onCardProvided(providerId, card) : void</pre>"},{"name":"sap.insights.ICardConsumer.onCardsAvailable","visibility":"public","static":true,"parameters":[{"name":"providerId","optional":false,"description":"<p>Unique id of the ICardsProvider that offers cards</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"cardInfos","optional":false,"description":"<p>Array of simple objects with card information</p>","typeInfo":{"template":"Array<object>"},"defaultValue":""}],"description":"<p>Callback when cards are available.</p>","experimental":{},"href":"api/sap.insights.ICardConsumer#methods/sap.insights.ICardConsumer.onCardsAvailable","code":"<pre>sap.insights.ICardConsumer.onCardsAvailable(providerId, cardInfos) : void</pre>"}],"displayName":"sap.insights.ICardConsumer","component":"CA-FLP-EXT-INS","title":"interface sap.insights.ICardConsumer","subTitle":""},{"kind":"interface","name":"sap.insights.ICardProvider","basename":"ICardProvider","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"<p><p>Interface required for classes that would like to provide cards using the <code>sap.insights.CardsChannel</code>.</p></p>","experimental":{},"methods":[{"name":"sap.insights.ICardProvider.onCardRequested","visibility":"public","static":true,"parameters":[{"name":"consumerId","optional":false,"description":"<p>Unique id of the ICardsConsumer that offers cards</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"cardId","optional":false,"description":"<p>Unique id of a card</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Callback when a consumer requests a specific card.</p>","experimental":{},"href":"api/sap.insights.ICardProvider#methods/sap.insights.ICardProvider.onCardRequested","code":"<pre>sap.insights.ICardProvider.onCardRequested(consumerId, cardId) : void</pre>"},{"name":"sap.insights.ICardProvider.onConsumerConnected","visibility":"public","static":true,"parameters":[{"name":"consumerId","optional":false,"description":"<p>Unique id of the ICardsConsumer that offers cards</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Callback when a consumer is connected.</p>","experimental":{},"href":"api/sap.insights.ICardProvider#methods/sap.insights.ICardProvider.onConsumerConnected","code":"<pre>sap.insights.ICardProvider.onConsumerConnected(consumerId) : void</pre>"},{"name":"sap.insights.ICardProvider.onConsumerDisconnected","visibility":"public","static":true,"parameters":[{"name":"consumerId","optional":false,"description":"<p>Unique id of the ICardsConsumer that offers cards</p>","typeInfo":{"template":"string"},"defaultValue":""}],"description":"<p>Callback when a consumer is disconnected.</p>","experimental":{},"href":"api/sap.insights.ICardProvider#methods/sap.insights.ICardProvider.onConsumerDisconnected","code":"<pre>sap.insights.ICardProvider.onConsumerDisconnected(consumerId) : void</pre>"}],"displayName":"sap.insights.ICardProvider","component":"CA-FLP-EXT-INS","title":"interface sap.insights.ICardProvider","subTitle":""},{"kind":"class","name":"sap.insights.ManageCards","basename":"ManageCards","resource":"sap/insights/ManageCards.js","module":"sap/insights/ManageCards","export":"","static":true,"visibility":"public","since":"1.119","extends":"sap.ui.core.Control","description":"<p>This control shows list of all user cards and allows perform actions like change visibility, change order. It also allows user to get preview of particular card, delete or copy.</p>","ui5-metadata":{"stereotype":"control","properties":[{"name":"cardId","defaultValue":"","group":"Behavior","visibility":"public","description":"<p>Sets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered</p>","methods":["getCardId","setCardId"],"typeInfo":{"template":"string"}},{"name":"enableResetAllCards","defaultValue":false,"group":"Behavior","visibility":"public","description":"<p>Sets enableResetAllCards property</p>","methods":["getEnableResetAllCards","setEnableResetAllCards"],"typeInfo":{"template":"boolean"}}],"aggregations":[{"name":"_navContainer","singularName":"_navContainer","type":"sap.m.NavContainer","cardinality":"0..1","visibility":"hidden","methods":["get_navContainer","destroy_navContainer","set_navContainer"],"linkEnabled":true,"description":""}]},"constructor":{"visibility":"public","description":"<p>Constructor for ManageCards.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" href=\"api/sap.ui.base.ManagedObject#constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>","references":[],"codeExample":"<pre>new sap.insights.ManageCards()</pre>"},"methods":[{"name":"clearPage","visibility":"public","description":"<p>Function to Clear Activities like navigation, filters</p>","experimental":{"since":"1.119"},"href":"api/sap.insights.ManageCards#methods/clearPage","code":"<pre>clearPage() : void</pre>"},{"name":"sap.insights.ManageCards.extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"<p>Created class / constructor function</p>","typeInfo":{"template":"function"}},"parameters":[{"name":"sClassName","optional":false,"description":"<p>Name of the class being created</p>","typeInfo":{"template":"string"},"defaultValue":""},{"name":"oClassInfo","optional":true,"description":"<p>Object literal with information about the class</p>","typeInfo":{"template":"object"},"defaultValue":""},{"name":"FNMetaImpl","optional":true,"description":"<p>Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class</p>","typeInfo":{"template":"function"},"defaultValue":""}],"description":"<p>Creates a new subclass of class sap.insights.ManageCards with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" href=\"api/sap.ui.core.Control#methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>","href":"api/sap.insights.ManageCards#methods/sap.insights.ManageCards.extend","code":"<pre>sap.insights.ManageCards.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"},{"name":"getCardId","visibility":"public","returnValue":{"type":"string","description":"<p>Value of property <code>cardId</code></p>","typeInfo":{"template":"string"}},"description":"<p>Gets current value of property <a target=\"_self\" href=\"api/sap.insights.ManageCards#methods/getCardId\">cardId</a>.</p><p>Sets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered</p>","href":"api/sap.insights.ManageCards#methods/getCardId","code":"<pre>getCardId() : string</pre>"},{"name":"getEnableResetAllCards","visibility":"public","returnValue":{"type":"boolean","description":"<p>Value of property <code>enableResetAllCards</code></p>","typeInfo":{"template":"boolean"}},"description":"<p>Gets current value of property <a target=\"_self\" href=\"api/sap.insights.ManageCards#methods/getEnableResetAllCards\">enableResetAllCards</a>.</p><p>Sets enableResetAllCards property</p><p>Default value is <code>false</code>.</p>","href":"api/sap.insights.ManageCards#methods/getEnableResetAllCards","code":"<pre>getEnableResetAllCards() : boolean</pre>"},{"name":"sap.insights.ManageCards.getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"<p>Metadata object describing this class</p>","typeInfo":{"UI5Types":["sap.ui.core.ElementMetadata"]}},"description":"<p>Returns a metadata object for class sap.insights.ManageCards.</p>","href":"api/sap.insights.ManageCards#methods/sap.insights.ManageCards.getMetadata","code":"<pre>sap.insights.ManageCards.getMetadata() : sap.ui.core.ElementMetadata</pre>"},{"name":"navigateTo","visibility":"public","parameters":[{"name":"oEvent","optional":false,"description":"<p>oEvent object</p>","typeInfo":{"template":"Object"},"defaultValue":""},{"name":"sPageId","optional":false,"description":"<p>page id to which to navigate to</p>","typeInfo":{"template":"String"},"defaultValue":""}],"description":"<p>Function to navigate to the specified page, if no sPageId provided navigate to CardList by default</p>","href":"api/sap.insights.ManageCards#methods/navigateTo","code":"<pre>navigateTo(oEvent, sPageId) : void</pre>"},{"name":"setCardId","visibility":"public","returnValue":{"type":"this","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","typeInfo":{"template":"this"}},"parameters":[{"name":"sCardId","optional":true,"defaultValue":"","description":"<p>New value for property <code>cardId</code></p>","typeInfo":{"template":"string"}}],"description":"<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.insights.ManageCards#methods/getCardId\">cardId</a>.</p><p>Sets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p>","href":"api/sap.insights.ManageCards#methods/setCardId","code":"<pre>setCardId(sCardId?) : this</pre>"},{"name":"setEnableResetAllCards","visibility":"public","returnValue":{"type":"this","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","typeInfo":{"template":"this"}},"parameters":[{"name":"bEnableResetAllCards","optional":true,"defaultValue":false,"description":"<p>New value for property <code>enableResetAllCards</code></p>","typeInfo":{"template":"boolean"}}],"description":"<p>Sets a new value for property <a target=\"_self\" href=\"api/sap.insights.ManageCards#methods/getEnableResetAllCards\">enableResetAllCards</a>.</p><p>Sets enableResetAllCards property</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>false</code>.</p>","href":"api/sap.insights.ManageCards#methods/setEnableResetAllCards","code":"<pre>setEnableResetAllCards(bEnableResetAllCards?) : this</pre>"}],"displayName":"sap.insights.ManageCards","component":"CA-FLP-EXT-INS","title":"class sap.insights.ManageCards","subTitle":""},{"name":"sap","displayName":"sap","kind":"namespace","nodes":[{"name":"sap.insights","description":"<p>SAP UI library: sap.insights</p>","href":"api/sap.insights"}],"title":"namespace sap","subTitle":""},{"name":"sap.insights.channels","displayName":"sap.insights.channels","kind":"namespace","nodes":[{"name":"sap.insights.channels.ContextChannel","description":"","href":"api/sap.insights.channels.ContextChannel"},{"name":"sap.insights.channels.IContextProvider","description":"<p>Interface required for classes that would like to provide cards using the <code>sap.insights.CardsChannel</code>.</p>","href":"api/sap.insights.channels.IContextProvider"}],"component":"CA-FLP-EXT-INS","title":"namespace sap.insights.channels","subTitle":""}],"defaultComponent":"CA-FLP-EXT-INS"}