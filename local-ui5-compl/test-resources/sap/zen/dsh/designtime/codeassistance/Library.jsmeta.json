{"!name":"sap.zen.dsh","!version":"1.21.1","!define":{"sap":{"zen":"sap.zen","sap":"sap","!category":"namespace"},"sap.zen.dsh.Dsh":{"getSystemAlias":{"!description":"Gets current value of property {@link #getSystemAlias systemAlias}.\n\nthe system alias","!static":false,"!category":"function","!type":"fn() -> String"},"getDataSource":{"!static":false,"!category":"function","!type":"fn(sName: String) -> Object","parameters":{"sName":"type: string, description: the namw of the data source"}},"initializeAppStateData":{"!description":"Initialize cross-application navigation state directly with AppStateData. e.g., when calculated by sap.ui.generic.app.navigation.service.NavigationHandler","!static":false,"!category":"function","!type":"fn(oOStateData: Object, oONavParams: Object)","parameters":{"oOStateData":"type: object, description: The AppStateData to apply","oONavParams":"type: object, description: Simple Javascript object containing name-value pairs of additional navigation state to be mixed in"}},"getSemanticMappings":{"!description":"Gets current value of property {@link #getSemanticMappings semanticMappings}.\n\nthe semantic mappings","!static":false,"!category":"function","!type":"fn() -> Object"},"getDshAppName":{"!description":"Gets current value of property {@link #getDshAppName dshAppName}.\n\nName of the Design Studio application to be opened.\n\nDefault value is <code>\"0ANALYSIS\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getPage":{"!static":false,"!category":"function","!type":"fn() -> Object"},"setDeferCreation":{"!description":"Sets a new value for property {@link #getDeferCreation deferCreation}.\n\nwhether to defer the creation\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDeferCreation?: Boolean) -> sap.zen.dsh.Dsh","parameters":{"bDeferCreation":"type: boolean, description: New value for property <code>deferCreation<\/code>"}},"setProtocol":{"!description":"Sets a new value for property {@link #getProtocol protocol}.\n\nthe protocol\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sProtocol?: String) -> sap.zen.dsh.Dsh","parameters":{"sProtocol":"type: string, description: New value for property <code>protocol<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDesired width of the Design Studio Control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addParameter":{"!static":false,"!category":"function","!type":"fn(sName: String, sValue: String) -> String","parameters":{"sName":"type: string, description: the name of the parameter","sValue":"type: string, description: the value of the parameter"}},"setSystemAlias":{"!description":"Sets a new value for property {@link #getSystemAlias systemAlias}.\n\nthe system alias\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSystemAlias?: String) -> sap.zen.dsh.Dsh","parameters":{"sSystemAlias":"type: string, description: New value for property <code>systemAlias<\/code>"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDesired height of the Design Studio Control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setClient":{"!description":"Sets a new value for property {@link #getClient client}.\n\nthe client\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sClient?: String) -> sap.zen.dsh.Dsh","parameters":{"sClient":"type: string, description: New value for property <code>client<\/code>"}},"!constructorDescription":"Constructor for a new Dsh.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDshAppName dshAppName} : string (default: \"0ANALYSIS\")<\/li>\n<li>{@link #getRepoPath repoPath} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDeployment deployment} : string (default: \"bw\")<\/li>\n<li>{@link #getProtocol protocol} : string<\/li>\n<li>{@link #getClient client} : string<\/li>\n<li>{@link #getLanguage language} : string<\/li>\n<li>{@link #getSemanticMappings semanticMappings} : object<\/li>\n<li>{@link #getAppComponent appComponent} : object<\/li>\n<li>{@link #getDeferCreation deferCreation} : boolean (default: false)<\/li>\n<li>{@link #getSystemAlias systemAlias} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","initializeAppState":{"!description":"Initialize cross-application navigation state with an AppState object","!static":false,"!category":"function","!type":"fn(oOStartupAppState: Object, oONavParams: Object)","parameters":{"oOStartupAppState":"type: object, description: The AppState object from which to retrieve and apply Application State.","oONavParams":"type: object, description: Simple Javascript object containing name-value pairs of additional navigation state to be mixed in"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Control for embedding a Design Studio application full-screen in an S/4 HANA Fiori application","getDeployment":{"!description":"Gets current value of property {@link #getDeployment deployment}.\n\nthe type of deployment\n\nDefault value is <code>\"bw\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getAppComponent":{"!description":"Gets current value of property {@link #getAppComponent appComponent}.\n\nthe application component","!static":false,"!category":"function","!type":"fn() -> Object"},"getLanguage":{"!description":"Gets current value of property {@link #getLanguage language}.\n\nthe language","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.zen.dsh.Dsh.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setAppComponent":{"!description":"Sets a new value for property {@link #getAppComponent appComponent}.\n\nthe application component\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAppComponent?: Object) -> sap.zen.dsh.Dsh","parameters":{"oAppComponent":"type: object, description: New value for property <code>appComponent<\/code>"}},"setDshAppName":{"!description":"Sets a new value for property {@link #getDshAppName dshAppName}.\n\nName of the Design Studio application to be opened.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"0ANALYSIS\"<\/code>.","!static":false,"!category":"function","!type":"fn(sDshAppName?: String) -> sap.zen.dsh.Dsh","parameters":{"sDshAppName":"type: string, description: New value for property <code>dshAppName<\/code>"}},"executeScript":{"!static":false,"!category":"function","!type":"fn(sScript: String)","parameters":{"sScript":"type: string, description: the content of the script"}},"getDeferCreation":{"!description":"Gets current value of property {@link #getDeferCreation deferCreation}.\n\nwhether to defer the creation\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getProtocol":{"!description":"Gets current value of property {@link #getProtocol protocol}.\n\nthe protocol","!static":false,"!category":"function","!type":"fn() -> String"},"getClient":{"!description":"Gets current value of property {@link #getClient client}.\n\nthe client","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDesired height of the Design Studio Control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.zen.dsh.Dsh","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDesired width of the Design Studio Control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.zen.dsh.Dsh","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.zen.dsh.Dsh with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"createPage":{"!static":false,"!category":"function","!type":"fn()"},"setSemanticMappings":{"!description":"Sets a new value for property {@link #getSemanticMappings semanticMappings}.\n\nthe semantic mappings\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSemanticMappings?: Object) -> sap.zen.dsh.Dsh","parameters":{"oSemanticMappings":"type: object, description: New value for property <code>semanticMappings<\/code>"}},"!module":"sap/zen/dsh/Dsh","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Control for embedding a Design Studio application full-screen in an S/4 HANA Fiori application","setRepoPath":{"!description":"Sets a new value for property {@link #getRepoPath repoPath}.\n\nPath to application specified by dshAppName\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRepoPath?: String) -> sap.zen.dsh.Dsh","parameters":{"sRepoPath":"type: string, description: New value for property <code>repoPath<\/code>"}},"setDeployment":{"!description":"Sets a new value for property {@link #getDeployment deployment}.\n\nthe type of deployment\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"bw\"<\/code>.","!static":false,"!category":"function","!type":"fn(sDeployment?: String) -> sap.zen.dsh.Dsh","parameters":{"sDeployment":"type: string, description: New value for property <code>deployment<\/code>"}},"getComponent":{"!static":false,"!category":"function","!type":"fn(sName: String) -> Object","parameters":{"sName":"type: string, description: the Name of the Component"}},"getRepoPath":{"!description":"Gets current value of property {@link #getRepoPath repoPath}.\n\nPath to application specified by dshAppName","!static":false,"!category":"function","!type":"fn() -> String"},"setLanguage":{"!description":"Sets a new value for property {@link #getLanguage language}.\n\nthe language\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLanguage?: String) -> sap.zen.dsh.Dsh","parameters":{"sLanguage":"type: string, description: New value for property <code>language<\/code>"}}},"sap.zen":{"dsh":"sap.zen.dsh","!category":"namespace"},"sap.zen.dsh.AnalyticGrid_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.dsh.AnalyticGrid with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.dsh.AnalyticGrid"},"sap.zen.dsh.Dsh_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.dsh.Dsh with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.dsh.Dsh"},"sap.zen.dsh.widgets.SDKModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.dsh.widgets.SDKModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oData: Object)","prototype":"sap.zen.dsh.widgets.SDKModel"},"sap.zen.dsh":{"AnalyticGrid":"sap.zen.dsh.AnalyticGrid_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"escapeHandler":{"!description":"This property expects a function with one parameter of type Promise. In the function, you should call either <code>resolve()<\/code> or <code>reject()<\/code> on the Promise object.<br/> The function allows you to define custom behavior which will be executed when the Escape key is pressed. By default, when the Escape key is pressed, the Dialog is immediately closed.","!category":"enum","!type":"fn()"},"language":{"!description":"the language","!category":"enum","!type":"String"},"type":{"!description":"The <code>type<\/code> of the Dialog. In some themes, the type Message will limit the Dialog width within 480px on tablet and desktop.","!category":"enum","!type":"sap.m.DialogType"},"supportMultiselect":{"!description":"Enables multi-selection in the table used.","!category":"enum","!type":"Boolean"},"maxExcludeRanges":{"!description":"Defines the maximum number of exclude ranges.","!category":"enum","!type":"String"},"protocol":{"!description":"the protocol","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"Dsh":"sap.zen.dsh.Dsh_obj","dshAppName":{"!description":"Name of the Design Studio application to be opened.","!category":"enum","!type":"String"},"state":{"!description":"Affects the <code>icon<\/code> and the <code>title<\/code> color.\n\nIf a value other than <code>None<\/code> is set, a predefined icon will be added to the Dialog. Setting the <code>icon<\/code> property will overwrite the predefined icon.","!category":"enum","!type":"sap.ui.core.ValueState"},"height":{"!description":"Desired height of the Design Studio Control","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"Design Studio Runtime Library. Intended only to be used within S/4 HANA Fiori applications.","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"!module":"sap/zen/dsh/library","selection":{"!description":"A SelectionVariant specifying the initial selection state used by the AnalyticGrid. Depending on the specific query and selection variant state, this will result in setting one or more variables' values and setting one or more filters on the datasource.","!category":"enum","!type":"Object"},"systemAlias":{"!description":"the system alias","!category":"enum","!type":"String"},"!helpDescription":"Design Studio Runtime Library. Intended only to be used within S/4 HANA Fiori applications.","queryName":{"!description":"Name of the Query to bind the AnalyticGrid to.","!category":"enum","!type":"String"},"deferCreation":{"!description":"whether to defer the creation","!category":"enum","!type":"Boolean"},"role":{"!description":"Specifies the ARIA role of the Dialog. If the state of the control is \"Error\" or \"Warning\" the role will be \"AlertDialog\" regardless of what is set.","!category":"enum","!type":"sap.m.DialogRoleType"},"horizontalScrolling":{"!description":"Indicates if the user can scroll horizontally inside the Dialog when the content is bigger than the content area. The Dialog detects if there's <code>sap.m.NavContainer<\/code>, <code>sap.m.Page<\/code>, <code>sap.m.ScrollContainer<\/code> or <code>sap.m.SplitContainer<\/code> as a direct child added to the Dialog. If there is, the Dialog will turn off <code>scrolling<\/code> by setting this property to <code>false<\/code>, automatically ignoring the existing value of the property.","!category":"enum","!type":"Boolean"},"keys":{"!description":"Defines the list of additional keys of the column used for the internal key handling.","!category":"enum","!type":"[String]"},"maxIncludeRanges":{"!description":"Defines the maximum number of include ranges.","!category":"enum","!type":"String"},"icon":{"!description":"Icon displayed in the Dialog header. This <code>icon<\/code> is invisible on the iOS platform and it is density-aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen.","!category":"enum","!type":"sap.ui.core.URI"},"!category":"namespace","ValueHelpDialog":"sap.zen.dsh.ValueHelpDialog_obj","repoPath":{"!description":"Path to application specified by dshAppName","!category":"enum","!type":"String"},"widgets":"sap.zen.dsh.widgets","ValueHelpRangeOperation":"sap.zen.dsh.ValueHelpRangeOperation","title":{"!description":"Title text appears in the Dialog header. <br/><b>Note:<\/b> The heading level of the Dialog is <code>H1<\/code>. Headings in the Dialog content should start with <code>H2<\/code> heading level.","!category":"enum","!type":"String"},"tokenDisplayBehaviour":{"!description":"Represents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour<\/code> values.","!category":"enum","!type":"String"},"stretch":{"!description":"Determines if the Dialog will be stretched to full screen on mobile. On desktop, the Dialog will be stretched to approximately 90% of the viewport. This property is only applicable to a Standard Dialog. Message-type Dialog ignores it.","!category":"enum","!type":"Boolean"},"filterMode":{"!description":"Sets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.","!category":"enum","!type":"Boolean"},"contentWidth":{"!description":"Preferred width of the content in the Dialog. This property affects the width of the Dialog on a phone in landscape mode, a tablet or a desktop, because the Dialog has a fixed width on a phone in portrait mode. If the preferred width is less than the minimum width of the Dialog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of the Dialog width on tablet is 400px.","!category":"enum","!type":"sap.ui.core.CSSSize"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"draggable":{"!description":"Indicates whether the Dialog is draggable. If this property is set to <code>true<\/code>, the Dialog will be draggable by its header. This property has a default value <code>false<\/code>. The Dialog can be draggable only in desktop mode.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"client":{"!description":"the client","!category":"enum","!type":"String"},"appComponent":{"!description":"the application component","!category":"enum","!type":"Object"},"key":{"!description":"Defines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.","!category":"enum","!type":"String"},"deployment":{"!description":"the type of deployment","!category":"enum","!type":"String"},"semanticMappings":{"!description":"the semantic mappings","!category":"enum","!type":"Object"},"stretchOnPhone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.1 Please use the new stretch property instead. This enables a stretched Dialog even on tablet and desktop. If you want to achieve the same effect as <code>stretchOnPhone<\/code>, please set the stretch with <code>Device.system.phone<\/code>, then the Dialog is only stretched when it runs on a phone.<br>Determines whether the Dialog will be displayed on full screen on a phone.","!category":"enum","!type":"Boolean"},"verticalScrolling":{"!description":"Indicates if the user can scroll vertically inside the Dialog when the content is bigger than the content area. The Dialog detects if there's <code>sap.m.NavContainer<\/code>, <code>sap.m.Page<\/code>, <code>sap.m.ScrollContainer<\/code> or <code>sap.m.SplitContainer<\/code> as a direct child added to the Dialog. If there is, the Dialog will turn off <code>scrolling<\/code> by setting this property to <code>false<\/code>, automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"resizable":{"!description":"Indicates whether the Dialog is resizable. If this property is set to <code>true<\/code>, the Dialog will have a resize handler in its bottom right corner. This property has a default value <code>false<\/code>. The Dialog can be resizable only in desktop mode.","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"Determines whether the header is shown inside the Dialog. If this property is set to <code>false<\/code>, the <code>text<\/code> and <code>icon<\/code> properties are ignored. This property has a default value <code>true<\/code>.","!category":"enum","!type":"Boolean"},"supportRangesOnly":{"!description":"If this property is set to <code>true<\/code>, the value help dialog only supports the ranges (conditions) feature.","!category":"enum","!type":"Boolean"},"descriptionKey":{"!description":"Defines the key of the column used for the token text.","!category":"enum","!type":"String"},"titleAlignment":{"!description":"Specifies the Title alignment (theme specific). If set to <code>TitleAlignment.Auto<\/code>, the Title will be aligned as it is set in the theme (if not set, the default value is <code>center<\/code>); Other possible values are <code>TitleAlignment.Start<\/code> (left or right depending on LTR/RTL), and <code>TitleAlignment.Center<\/code> (centered)","!category":"enum","!type":"sap.m.TitleAlignment"},"basicSearchText":{"!description":"Defines the value for the basic search field. The value is set into the basic search field of the filter bar used.","!category":"enum","!type":"String"},"displayFormat":{"!description":"Represents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.","!category":"enum","!type":"String"},"contentHeight":{"!description":"Preferred height of the content in the Dialog. If the preferred height is bigger than the available space on a screen, it will be overwritten by the maximum available height on a screen in order to make sure that the Dialog isn't cut off.","!category":"enum","!type":"sap.ui.core.CSSSize"},"closeOnNavigation":{"!description":"Indicates whether the Dialog will be closed automatically when a routing navigation occurs.","!category":"enum","!type":"Boolean"},"width":{"!description":"Desired width of the Design Studio Control","!category":"enum","!type":"sap.ui.core.CSSSize"},"supportRanges":{"!description":"Enables the ranges (conditions) feature in the dialog.","!category":"enum","!type":"Boolean"}},"sap.zen.dsh.AnalyticGrid":{"getSystemAlias":{"!description":"Gets current value of property {@link #getSystemAlias systemAlias}.\n\nTarget System alias for data connectivity","!static":false,"!category":"function","!type":"fn() -> String"},"fireStateChange":{"!description":"Fires event {@link #event:stateChange stateChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.zen.dsh.AnalyticGrid","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.zen.dsh.AnalyticGrid","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.core.Control","!category":"class","getQueryName":{"!description":"Gets current value of property {@link #getQueryName queryName}.\n\nName of the Query to bind the AnalyticGrid to.","!static":false,"!category":"function","!type":"fn() -> String"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDesired width of the AnalyticGrid control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setSystemAlias":{"!description":"Sets a new value for property {@link #getSystemAlias systemAlias}.\n\nTarget System alias for data connectivity\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSystemAlias?: String) -> sap.zen.dsh.AnalyticGrid","parameters":{"sSystemAlias":"type: string, description: New value for property <code>systemAlias<\/code>"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDesired width of the AnalyticGrid control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new AnalyticGrid.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSelection selection} : object<\/li>\n<li>{@link #getQueryName queryName} : string<\/li>\n<li>{@link #getSystemAlias systemAlias} : string<\/li>\n<li>{@link #getState state} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChange stateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.zen.dsh.AnalyticGrid<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.AnalyticGrid","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.zen.dsh.AnalyticGrid<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.zen.dsh.AnalyticGrid<\/code> itself.\n\nEvent is triggered when the selection is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.AnalyticGrid","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.zen.dsh.AnalyticGrid<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Control for embedding a Design Studio Analytic Grid in an S/4 HANA Fiori application","getMetadata":{"!description":"Returns a metadata object for class sap.zen.dsh.AnalyticGrid.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:stateChange stateChange} event of this <code>sap.zen.dsh.AnalyticGrid<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.AnalyticGrid","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:stateChange stateChange} event of this <code>sap.zen.dsh.AnalyticGrid<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.zen.dsh.AnalyticGrid<\/code> itself.\n\nEvent is triggered when the state of the AnalyticGrid is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.AnalyticGrid","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.zen.dsh.AnalyticGrid<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDesired width of the AnalyticGrid control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.zen.dsh.AnalyticGrid","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDesired width of the AnalyticGrid control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.zen.dsh.AnalyticGrid","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.zen.dsh.AnalyticGrid with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelection":{"!description":"Gets current value of property {@link #getSelection selection}.\n\nA SelectionVariant specifying the initial selection state used by the AnalyticGrid. Depending on the specific query and selection variant state, this will result in setting one or more variables' values and setting one or more filters on the datasource.","!static":false,"!category":"function","!type":"fn() -> Object"},"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nA string representing the current state of the analytic grid, including data selection and navigation state. Intended to be used for saving and recreating inner application state in navigation scenarios, for example.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelection":{"!description":"Sets a new value for property {@link #getSelection selection}.\n\nA SelectionVariant specifying the initial selection state used by the AnalyticGrid. Depending on the specific query and selection variant state, this will result in setting one or more variables' values and setting one or more filters on the datasource.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSelection?: Object) -> sap.zen.dsh.AnalyticGrid","parameters":{"oSelection":"type: object, description: New value for property <code>selection<\/code>"}},"!module":"sap/zen/dsh/AnalyticGrid","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Control for embedding a Design Studio Analytic Grid in an S/4 HANA Fiori application","setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nA string representing the current state of the analytic grid, including data selection and navigation state. Intended to be used for saving and recreating inner application state in navigation scenarios, for example.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sState?: String) -> sap.zen.dsh.AnalyticGrid","parameters":{"sState":"type: string, description: New value for property <code>state<\/code>"}},"setQueryName":{"!description":"Sets a new value for property {@link #getQueryName queryName}.\n\nName of the Query to bind the AnalyticGrid to.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sQueryName?: String) -> sap.zen.dsh.AnalyticGrid","parameters":{"sQueryName":"type: string, description: New value for property <code>queryName<\/code>"}}},"sap.zen.dsh.ValueHelpDialog":{"getBasicSearchText":{"!description":"Gets current value of property {@link #getBasicSearchText basicSearchText}.\n\nDefines the value for the basic search field. The value is set into the basic search field of the filter bar used.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireTokenRemove":{"!description":"Fires event {@link #event:tokenRemove tokenRemove} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachOk":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:ok ok} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setTokens":{"!description":"Sets the array of tokens. The <code>sap.m.Tokens<\/code> are added to the dialog tokenizer Selected Items or Excluded Items. Normal tokens are added to the Selected Items tokenizer only and are selected in the table. <code> new sap.m.Token({key: \"0001\", text:\"SAP A.G. (0001)\"}); <\/code> Tokens with the extra data with value 'range' are handled as range tokens or exclude range tokens. <code> new sap.m.Token({key: \"i1\", text: \"ID: a..z\"}).data(\"range\", { \"exclude\": false, \"operation\": sap.ui.comp.valuehelpdialog.ValueHelpRangeOperation.BT, \"keyField\": \"CompanyCode\", \"value1\": \"a\", \"value2\": \"z\"}); <\/code> The selected items or range tokens are returned in the event parameters of the Ok event.","!static":false,"!category":"function","!type":"fn(aTokens: [sap.m.Token])","parameters":{"aTokens":"type: sap.m.Token[], description: An array of token controls"}},"getSupportMultiselect":{"!description":"Gets current value of property {@link #getSupportMultiselect supportMultiselect}.\n\nEnables multi-selection in the table used.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSupportRanges":{"!description":"Gets current value of property {@link #getSupportRanges supportRanges}.\n\nEnables the ranges (conditions) feature in the dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the user selects an item in the items table.\n\n<b>Note:<\/b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFilterMode":{"!description":"Gets current value of property {@link #getFilterMode filterMode}.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachOk":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:ok ok} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the OK button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachUpdateSelection":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:updateSelection updateSelection} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sKey?: String) -> sap.zen.dsh.ValueHelpDialog","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>The ValueHelpDialog control can be used to implement a value help for an input field.","getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nDefines the key of the column used for the internal key handling. The value of the column is used for the token key and also to identify the row in the table.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireUpdateSelection":{"!description":"Fires event {@link #event:updateSelection updateSelection} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.zen.dsh.ValueHelpDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMaxIncludeRanges":{"!description":"Gets current value of property {@link #getMaxIncludeRanges maxIncludeRanges}.\n\nDefines the maximum number of include ranges.\n\nDefault value is <code>\"-1\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setExcludeRangeOperations":{"!description":"setExcludeRangeOperations Sets the array for the supported exclude range operations.","!static":false,"!category":"function","!type":"fn(aOperation: [sap.zen.dsh.ValueHelpRangeOperation], sType: String)","parameters":{"sType":"type: string, description: the type for which the operations are defined","aOperation":"type: sap.zen.dsh.ValueHelpRangeOperation[], description: An array of range operations"}},"setMaxIncludeRanges":{"!description":"Sets a new value for property {@link #getMaxIncludeRanges maxIncludeRanges}.\n\nDefines the maximum number of include ranges.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"-1\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxIncludeRanges?: String) -> sap.zen.dsh.ValueHelpDialog","parameters":{"sMaxIncludeRanges":"type: string, description: New value for property <code>maxIncludeRanges<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.zen.dsh.ValueHelpDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getDisplayFormat":{"!description":"Gets current value of property {@link #getDisplayFormat displayFormat}.\n\nRepresents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/zen/dsh/widgets/ValueHelpDialog","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>The ValueHelpDialog control can be used to implement a value help for an input field.","getTable":{"!description":"getTable Gives access to the internal table instance.","!static":false,"!category":"function","!type":"fn() -> Object"},"setTable":{"!description":"setTable Sets the table used in the value help dialog. If not used, the dialog creates a sap.ui.table.Table or sap.m.Table instance internally.","!static":false,"!category":"function","!type":"fn(oTable: Object)","parameters":{"oTable":"type: object, description: The used table control instance"}},"fireOk":{"!description":"Fires event {@link #event:ok ok} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setKeys":{"!description":"Sets a new value for property {@link #getKeys keys}.\n\nDefines the list of additional keys of the column used for the internal key handling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKeys?: [String]) -> sap.zen.dsh.ValueHelpDialog","parameters":{"sKeys":"type: string[], description: New value for property <code>keys<\/code>"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the Cancel button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setTokenDisplayBehaviour":{"!description":"Sets a new value for property {@link #getTokenDisplayBehaviour tokenDisplayBehaviour}.\n\nRepresents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour<\/code> values.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTokenDisplayBehaviour?: String) -> sap.zen.dsh.ValueHelpDialog","parameters":{"sTokenDisplayBehaviour":"type: string, description: New value for property <code>tokenDisplayBehaviour<\/code>"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.m.Dialog","update":{"!description":"Update the Control\n\nUpdates the selection of rows in the table. This function must be called after a first binding or binding update of the table. It will set a table row as selected if a token for this row exists.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","setIncludeRangeOperations":{"!description":"setIncludeRangeOperations Sets the array for the supported include range operations.","!static":false,"!category":"function","!type":"fn(aOperation: [sap.zen.dsh.ValueHelpRangeOperation], sType: String)","parameters":{"sType":"type: string, description: the type for which the operations are defined","aOperation":"type: sap.zen.dsh.ValueHelpRangeOperation[], description: An array of range operations"}},"destroyFilterBar":{"!description":"Destroys the filterBar in the aggregation {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn() -> sap.zen.dsh.ValueHelpDialog"},"!constructorDescription":"Constructor for a new valuehelpdialog/ValueHelpDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBasicSearchText basicSearchText} : string (default: \"\")<\/li>\n<li>{@link #getSupportMultiselect supportMultiselect} : boolean (default: true)<\/li>\n<li>{@link #getSupportRanges supportRanges} : boolean (default: false)<\/li>\n<li>{@link #getSupportRangesOnly supportRangesOnly} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string (default: \"\")<\/li>\n<li>{@link #getKeys keys} : string[]<\/li>\n<li>{@link #getDescriptionKey descriptionKey} : string (default: \"\")<\/li>\n<li>{@link #getMaxIncludeRanges maxIncludeRanges} : string (default: \"-1\")<\/li>\n<li>{@link #getMaxExcludeRanges maxExcludeRanges} : string (default: \"-1\")<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string (default: \"\")<\/li>\n<li>{@link #getTokenDisplayBehaviour tokenDisplayBehaviour} : string (default: \"\")<\/li>\n<li>{@link #getFilterMode filterMode} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterBar filterBar} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenRemove tokenRemove} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateSelection updateSelection} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well.","setRangeKeyFields":{"!description":"setRangeKeyFields Sets a RangeKeyFields array. This method allows you to specify the KeyFields for the ranges. You can set an array of objects with Key and Label properties to define the key fields.","!static":false,"!category":"function","!type":"fn(aRangeKeyFields: [Object])","parameters":{"aRangeKeyFields":"type: object[], description: An array of range KeyFields <code>[{key: \"CompanyCode\", label: \"ID\"}, {key:\"CompanyName\", label : \"Name\"}]<\/code>"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMaxExcludeRanges":{"!description":"Gets current value of property {@link #getMaxExcludeRanges maxExcludeRanges}.\n\nDefines the maximum number of exclude ranges.\n\nDefault value is <code>\"-1\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxExcludeRanges":{"!description":"Sets a new value for property {@link #getMaxExcludeRanges maxExcludeRanges}.\n\nDefines the maximum number of exclude ranges.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"-1\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxExcludeRanges?: String) -> sap.zen.dsh.ValueHelpDialog","parameters":{"sMaxExcludeRanges":"type: string, description: New value for property <code>maxExcludeRanges<\/code>"}},"getTokenDisplayBehaviour":{"!description":"Gets current value of property {@link #getTokenDisplayBehaviour tokenDisplayBehaviour}.\n\nRepresents how the item token text should be displayed in ValueHelpDialog. Use one of the valid <code>sap.ui.comp.smartfilterbar.DisplayBehaviour<\/code> values.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachUpdateSelection":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:updateSelection updateSelection} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the table gets an update and all existing tokens must be selected in the table.\n\n<b>Note:<\/b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachTokenRemove":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tokenRemove tokenRemove} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself.\n\nThis event is fired when the user removes one or multiple existing token(s) from the dialog.\n\n<b>Note:<\/b> The event will only be raised when the dialog gets a table instance from outside via <code>setTable<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.zen.dsh.ValueHelpDialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getKeys":{"!description":"Gets current value of property {@link #getKeys keys}.\n\nDefines the list of additional keys of the column used for the internal key handling.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setFilterMode":{"!description":"Sets a new value for property {@link #getFilterMode filterMode}.\n\nSets the dialog into a filter mode, which only shows ranges (conditions) and hides the tokens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterMode?: Boolean) -> sap.zen.dsh.ValueHelpDialog","parameters":{"bFilterMode":"type: boolean, description: New value for property <code>filterMode<\/code>"}},"detachTokenRemove":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tokenRemove tokenRemove} event of this <code>sap.zen.dsh.ValueHelpDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.zen.dsh.ValueHelpDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSupportRangesOnly":{"!description":"Gets current value of property {@link #getSupportRangesOnly supportRangesOnly}.\n\nIf this property is set to <code>true<\/code>, the value help dialog only supports the ranges (conditions) feature.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDisplayFormat":{"!description":"Sets a new value for property {@link #getDisplayFormat displayFormat}.\n\nRepresents the display format of the range values. With the <code>displayFormat<\/code> value UpperCase, the entered value of the range (condition) is converted to uppercase letters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayFormat?: String) -> sap.zen.dsh.ValueHelpDialog","parameters":{"sDisplayFormat":"type: string, description: New value for property <code>displayFormat<\/code>"}},"getDescriptionKey":{"!description":"Gets current value of property {@link #getDescriptionKey descriptionKey}.\n\nDefines the key of the column used for the token text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setDescriptionKey":{"!description":"Sets a new value for property {@link #getDescriptionKey descriptionKey}.\n\nDefines the key of the column used for the token text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDescriptionKey?: String) -> sap.zen.dsh.ValueHelpDialog","parameters":{"sDescriptionKey":"type: string, description: New value for property <code>descriptionKey<\/code>"}}},"sap.zen.dsh.widgets.SDKModel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Model implementation for JSON format","extend":{"!description":"Creates a new subclass of class sap.zen.dsh.widgets.SDKModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.zen.dsh.widgets.SDKModel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SDKModel.","!module":"sap/zen/dsh/widgets/SDKModel","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Model implementation for JSON format","!proto":"sap.ui.model.Model","!category":"class"},"sap.zen.dsh.ValueHelpRangeOperation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Sort Type","BT":{"!description":"The Between operation for the ranges.","!category":"enum","!type":"String"},"!module":"sap/zen/dsh/ValueHelpRangeOperation","Contains":{"!description":"The Contains operation for the ranges.","!category":"enum","!type":"String"},"LT":{"!description":"The Less operation for the ranges.","!category":"enum","!type":"String"},"LE":{"!description":"The Less or equals operation for the ranges.","!category":"enum","!type":"String"},"!category":"static class","EQ":{"!description":"The Equals operation for the ranges.","!category":"enum","!type":"String"},"GT":{"!description":"The Greater operation for the ranges.","!category":"enum","!type":"String"},"StartsWith":{"!description":"The StartsWith operation for the ranges.","!category":"enum","!type":"String"},"EndsWith":{"!description":"The EndsWith operation for the ranges.","!category":"enum","!type":"String"},"GE":{"!description":"The Between or equals operation for the ranges.","!category":"enum","!type":"String"}},"sap.zen.dsh.ValueHelpDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.dsh.ValueHelpDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.dsh.ValueHelpDialog"},"sap.zen.dsh.widgets":{"SDKModel":"sap.zen.dsh.widgets.SDKModel_obj","!category":"namespace"}}}