{"!name":"sap.zen.commons","!version":"1.21.1","!define":{"sap.zen.commons.layout.MatrixLayoutRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.MatrixLayoutRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.commons.layout.MatrixLayoutRow"},"sap.zen.commons":{"!description":"Design Studio Commons Library. Intended only to be used within S/4 HANA Fiori applications.","layout":"sap.zen.commons.layout","Separation":"sap.zen.commons.Separation","!module":"sap/zen/commons/library","!helpDescription":"Design Studio Commons Library. Intended only to be used within S/4 HANA Fiori applications.","VAlign":"sap.zen.commons.VAlign","Padding":"sap.zen.commons.Padding","!category":"namespace","HAlign":"sap.zen.commons.HAlign"},"sap.zen.commons.layout.PositionContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89 the concept has been discarded.<br>Is used to specify the position of a control in the AbsoluteLayout","setCenterVertically":{"!description":"Sets a new value for property {@link #getCenterVertically centerVertically}.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area. The values of the attributes top and bottom are ignored when this feature is activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCenterVertically?: Boolean) -> sap.zen.commons.layout.PositionContainer","parameters":{"bCenterVertically":"type: boolean, description: New value for property <code>centerVertically<\/code>"}},"destroyControl":{"!description":"Destroys the control in the aggregation {@link #getControl control}.","!static":false,"!category":"function","!type":"fn() -> sap.zen.commons.layout.PositionContainer"},"getMetadata":{"!description":"Returns a metadata object for class sap.zen.commons.layout.PositionContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"updatePosition":{"!description":"Updates the position properties of the container according to the given position in JSON style.","!static":false,"!category":"function","!type":"fn(oPos: Object)","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control in the absolute layout. The object is expected to have one or more out of the attributes top, bottom, left, right (each with a value of type sap.ui.core.CSSSize). If no object is given, nothing is updated."}},"getControl":{"!description":"Gets content of aggregation {@link #getControl control}.\n\nChild control of the position container","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getBottom":{"!description":"Gets current value of property {@link #getBottom bottom}.\n\nDefines the distance to the bottom of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setLeft":{"!description":"Sets a new value for property {@link #getLeft left}.\n\nDefines the distance to the left of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLeft?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.PositionContainer","parameters":{"sLeft":"type: sap.ui.core.CSSSize, description: New value for property <code>left<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","setControl":{"!description":"Sets the aggregated {@link #getControl control}.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.zen.commons.layout.PositionContainer","parameters":{"oControl":"type: sap.ui.core.Control, description: The control to set"}},"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.PositionContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getCenterHorizontally":{"!description":"Gets current value of property {@link #getCenterHorizontally centerHorizontally}.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area. The values of the attributes left and right are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCenterHorizontally":{"!description":"Sets a new value for property {@link #getCenterHorizontally centerHorizontally}.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area. The values of the attributes left and right are ignored when this feature is activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCenterHorizontally?: Boolean) -> sap.zen.commons.layout.PositionContainer","parameters":{"bCenterHorizontally":"type: boolean, description: New value for property <code>centerHorizontally<\/code>"}},"setTop":{"!description":"Sets a new value for property {@link #getTop top}.\n\nDefines the distance to the top of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTop?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.PositionContainer","parameters":{"sTop":"type: sap.ui.core.CSSSize, description: New value for property <code>top<\/code>"}},"!constructorDescription":"Constructor for a new layout/PositionContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTop top} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getBottom bottom} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLeft left} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRight right} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getCenterHorizontally centerHorizontally} : boolean (default: false)<\/li>\n<li>{@link #getCenterVertically centerVertically} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControl control} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getCenterVertically":{"!description":"Gets current value of property {@link #getCenterVertically centerVertically}.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area. The values of the attributes top and bottom are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getRight":{"!description":"Gets current value of property {@link #getRight right}.\n\nDefines the distance to the right of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!module":"sap/zen/commons/layout/PositionContainer","setBottom":{"!description":"Sets a new value for property {@link #getBottom bottom}.\n\nDefines the distance to the bottom of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBottom?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.PositionContainer","parameters":{"sBottom":"type: sap.ui.core.CSSSize, description: New value for property <code>bottom<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89 the concept has been discarded.<br>Is used to specify the position of a control in the AbsoluteLayout","getTop":{"!description":"Gets current value of property {@link #getTop top}.\n\nDefines the distance to the top of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setRight":{"!description":"Sets a new value for property {@link #getRight right}.\n\nDefines the distance to the right of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRight?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.PositionContainer","parameters":{"sRight":"type: sap.ui.core.CSSSize, description: New value for property <code>right<\/code>"}},"getLeft":{"!description":"Gets current value of property {@link #getLeft left}.\n\nDefines the distance to the left of the layout (as specified in HTML)","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"}},"sap.zen.commons.HAlign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Horizontal alignment, e.g. of a layout cell's content within the cell's borders. Note that some values depend on the current locale's writing direction while others do not.","Center":{"!description":"Horizontally centered.","!category":"enum","!type":"String"},"Left":{"!description":"Left aligned, regardless of the current locale's writing direction.","!category":"enum","!type":"String"},"!module":"sap/zen/commons/HAlign","Begin":{"!description":"Aligned towards the beginning of a line, in the current locale's writing direction.","!category":"enum","!type":"String"},"Right":{"!description":"Right aligned, regardless of the current locale's writing direction.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"Aligned towards the end of a line, in the current locale's writing direction.","!category":"enum","!type":"String"}},"sap":{"zen":"sap.zen","sap":"sap","!category":"namespace"},"sap.zen":{"!category":"namespace","commons":"sap.zen.commons"},"sap.zen.commons.layout.MatrixLayout":{"setColumns":{"!description":"Sets a new value for property {@link #getColumns columns}.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumns?: Number) -> sap.zen.commons.layout.MatrixLayout","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getRows":{"!description":"Gets content of aggregation {@link #getRows rows}.\n\nThe matrix layout's individual rows.","!static":false,"!category":"function","!type":"fn() -> [sap.zen.commons.layout.MatrixLayoutRow]"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nCSS width of the matrix layout. If the LayoutFixed = true a adequate width should be provided.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addRow":{"!description":"Adds some row to the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn(oRow: sap.zen.commons.layout.MatrixLayoutRow) -> sap.zen.commons.layout.MatrixLayout","parameters":{"oRow":"type: sap.zen.commons.layout.MatrixLayoutRow, description: The row to add; if empty, nothing is inserted"}},"getColumns":{"!description":"Gets current value of property {@link #getColumns columns}.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.","!static":false,"!category":"function","!type":"fn() -> Number"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nCSS height of the matrix layout.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new layout/MatrixLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLayoutFixed layoutFixed} : boolean (default: true)<\/li>\n<li>{@link #getColumns columns} : int<\/li>\n<li>{@link #getWidths widths} : sap.ui.core.CSSSize[]<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.zen.commons.layout.MatrixLayoutRow[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","createRow":{"!description":"Creates a new matrix layout row and appends it to this matrix layout.\n\nEach argument must be either a matrix layout cell, which is added to the row \"as is\", or an arbitrary content control, which is wrapped with a new (default) matrix layout cell first and then added to the row.","!static":false,"!category":"function","!type":"fn(rowContent: sap.ui.core.Control | sap.zen.commons.layout.MatrixLayoutCell | String) -> sap.zen.commons.layout.MatrixLayout","parameters":{"rowContent":"type: sap.ui.core.Control|sap.zen.commons.layout.MatrixLayoutCell|string, description: to add"}},"removeAllRows":{"!description":"Removes all the controls from the aggregation {@link #getRows rows}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.zen.commons.layout.MatrixLayoutRow]"},"setLayoutFixed":{"!description":"Sets a new value for property {@link #getLayoutFixed layoutFixed}.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority. The default is \"fixed\". If the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bLayoutFixed?: Boolean) -> sap.zen.commons.layout.MatrixLayout","parameters":{"bLayoutFixed":"type: boolean, description: New value for property <code>layoutFixed<\/code>"}},"removeRow":{"!description":"Removes a row from the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn(vRow: Number | String | sap.zen.commons.layout.MatrixLayoutRow) -> sap.zen.commons.layout.MatrixLayoutRow | null","parameters":{"vRow":"type: int|string|sap.zen.commons.layout.MatrixLayoutRow, description: The row to remove or its index or id"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>undefined","getMetadata":{"!description":"Returns a metadata object for class sap.zen.commons.layout.MatrixLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLayoutFixed":{"!description":"Gets current value of property {@link #getLayoutFixed layoutFixed}.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority. The default is \"fixed\". If the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyRows":{"!description":"Destroys all the rows in the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn() -> sap.zen.commons.layout.MatrixLayout"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nCSS height of the matrix layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.MatrixLayout","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nCSS width of the matrix layout. If the LayoutFixed = true a adequate width should be provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.MatrixLayout","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.MatrixLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"indexOfRow":{"!description":"Checks for the provided <code>sap.zen.commons.layout.MatrixLayoutRow<\/code> in the aggregation {@link #getRows rows}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRow: sap.zen.commons.layout.MatrixLayoutRow) -> Number","parameters":{"oRow":"type: sap.zen.commons.layout.MatrixLayoutRow, description: The row whose index is looked for"}},"!module":"sap/zen/commons/layout/MatrixLayout","insertRow":{"!description":"Inserts a row into the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn(oRow: sap.zen.commons.layout.MatrixLayoutRow, iIndex: Number) -> sap.zen.commons.layout.MatrixLayout","parameters":{"oRow":"type: sap.zen.commons.layout.MatrixLayoutRow, description: The row to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the row should be inserted at; for a negative value of <code>iIndex<\/code>, the row is inserted at position 0; for a value greater than the current size of the aggregation, the row is inserted at the last position"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>undefined","setWidths":{"!description":"Sets a new value for property {@link #getWidths widths}.\n\nWidths of the columns. Use an array to define the widths of the columns. If a column shall have an automatical sizing enter \"auto\" for this column width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidths?: [sap.ui.core.CSSSize]) -> sap.zen.commons.layout.MatrixLayout","parameters":{"sWidths":"type: sap.ui.core.CSSSize[], description: New value for property <code>widths<\/code>"}},"getWidths":{"!description":"Gets current value of property {@link #getWidths widths}.\n\nWidths of the columns. Use an array to define the widths of the columns. If a column shall have an automatical sizing enter \"auto\" for this column width.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.CSSSize]"}},"sap.zen.commons.layout.AbsoluteLayout":{"removePosition":{"!description":"Removes a position from the aggregation {@link #getPositions positions}.","!static":false,"!category":"function","!type":"fn(vPosition: Number | String | sap.zen.commons.layout.PositionContainer) -> sap.zen.commons.layout.PositionContainer | null","parameters":{"vPosition":"type: int|string|sap.zen.commons.layout.PositionContainer, description: The position to remove or its index or id"}},"getVerticalScrolling":{"!description":"Gets current value of property {@link #getVerticalScrolling verticalScrolling}.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Scrolling"},"removeAllPositions":{"!description":"Removes all the controls from the aggregation {@link #getPositions positions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.zen.commons.layout.PositionContainer]"},"setHorizontalScrolling":{"!description":"Sets a new value for property {@link #getHorizontalScrolling horizontalScrolling}.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn(sHorizontalScrolling?: sap.ui.core.Scrolling) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"sHorizontalScrolling":"type: sap.ui.core.Scrolling, description: New value for property <code>horizontalScrolling<\/code>"}},"getContent":{"!description":"Returns an array of the controls contained in the aggregated position containers (might be empty).","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"indexOfPosition":{"!description":"Checks for the provided <code>sap.zen.commons.layout.PositionContainer<\/code> in the aggregation {@link #getPositions positions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPosition: sap.zen.commons.layout.PositionContainer) -> Number","parameters":{"oPosition":"type: sap.zen.commons.layout.PositionContainer, description: The position whose index is looked for"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new layout/AbsoluteLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : sap.ui.core.Scrolling (default: Hidden)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : sap.ui.core.Scrolling (default: Hidden)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPositions positions} : sap.zen.commons.layout.PositionContainer[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setVerticalScrolling":{"!description":"Sets a new value for property {@link #getVerticalScrolling verticalScrolling}.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn(sVerticalScrolling?: sap.ui.core.Scrolling) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"sVerticalScrolling":"type: sap.ui.core.Scrolling, description: New value for property <code>verticalScrolling<\/code>"}},"getPositions":{"!description":"Gets content of aggregation {@link #getPositions positions}.\n\nPositioned child controls within the layout","!static":false,"!category":"function","!type":"fn() -> [sap.zen.commons.layout.PositionContainer]"},"setPositionOfChild":{"!description":"Allows to set or change the position information of the given child control","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, oPos: Object) -> Boolean","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control. The object is expected to have one or more from the attribute set top, bottom, left, right; each with a value of type sap.ui.core.CSSSize. If no object is given, the default is used which is left=0px,right=0px.","oControl":"type: sap.ui.core.Control, description: The child control for which to change the position information; if empty or not aggregated, nothing is changed"}},"destroyContent":{"!description":"Destroys all aggregated position containers and their child controls. Returns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn() -> sap.zen.commons.layout.AbsoluteLayout"},"getHorizontalScrolling":{"!description":"Gets current value of property {@link #getHorizontalScrolling horizontalScrolling}.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Scrolling"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 the concept has been discarded.<br>The Absolute Layout positions its child controls absolutely","getMetadata":{"!description":"Returns a metadata object for class sap.zen.commons.layout.AbsoluteLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided sap.ui.core.Control in the aggregated position containers, and returns the index of the container in the positions aggregation if found, or '-1' otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content of which the index is looked for"}},"removeAllContent":{"!description":"Removes all aggregated position containers. Returns an array of the controls contained in the removed position containers (might be empty).","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addPosition":{"!description":"Adds some position to the aggregation {@link #getPositions positions}.","!static":false,"!category":"function","!type":"fn(oPosition: sap.zen.commons.layout.PositionContainer) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"oPosition":"type: sap.zen.commons.layout.PositionContainer, description: The position to add; if empty, nothing is inserted"}},"destroyPositions":{"!description":"Destroys all the positions in the aggregation {@link #getPositions positions}.","!static":false,"!category":"function","!type":"fn() -> sap.zen.commons.layout.AbsoluteLayout"},"addContent":{"!description":"Adds the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, oPos: Object) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control in the layout. The object is expected to have one or more from the attribute set top, bottom, left, right; each with a value of type sap.ui.core.CSSSize. If no object is given, the default is left=0px,right=0px","oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted."}},"insertPosition":{"!description":"Inserts a position into the aggregation {@link #getPositions positions}.","!static":false,"!category":"function","!type":"fn(oPosition: sap.zen.commons.layout.PositionContainer, iIndex: Number) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"oPosition":"type: sap.zen.commons.layout.PositionContainer, description: The position to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the position should be inserted at; for a negative value of <code>iIndex<\/code>, the position is inserted at position 0; for a value greater than the current size of the aggregation, the position is inserted at the last position"}},"removeContent":{"!description":"Removes the given control and its corresponding position container from the aggregation named 'positions'.","!static":false,"!category":"function","!type":"fn(oContent: Object) -> sap.ui.core.Control","parameters":{"oContent":"type: object, description: The content control to remove, its ID, or the index of the corresponding position container in the 'positions' aggregation."}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.AbsoluteLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/zen/commons/layout/AbsoluteLayout","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 the concept has been discarded.<br>The Absolute Layout positions its child controls absolutely","insertContent":{"!description":"Inserts the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number, oPos: Object) -> sap.zen.commons.layout.AbsoluteLayout","parameters":{"oPos":"type: object, description: JSON-like object which defines the position of the child control within the layout. The object is expected to have one or more from the attribute set top, bottom, left, right; each with a value of type sap.ui.core.CSSSize. If no object is given, the default is left=0px,right=0px.","oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The '0'-based index where the content shall be inserted at. For a negative value of iIndex, the content is inserted at position '0'; for a value greater than the current size of the aggregation, the content is inserted at the last position."}}},"sap.zen.commons.layout.MatrixLayoutRow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.ui.layout.Grid}.<br>Non-control element used as part of a matrix layout's inner structure.","removeAllCells":{"!description":"Removes all the controls from the aggregation {@link #getCells cells}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.zen.commons.layout.MatrixLayoutCell]"},"addCell":{"!description":"Adds some cell to the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn(oCell: sap.zen.commons.layout.MatrixLayoutCell) -> sap.zen.commons.layout.MatrixLayoutRow","parameters":{"oCell":"type: sap.zen.commons.layout.MatrixLayoutCell, description: The cell to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.zen.commons.layout.MatrixLayoutRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> Boolean","parameters":{"sStyleClass":"type: string, description: the style to check for"}},"destroyCells":{"!description":"Destroys all the cells in the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn() -> sap.zen.commons.layout.MatrixLayoutRow"},"!proto":"sap.ui.core.Element","!category":"class","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of the row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.zen.commons.layout.MatrixLayoutRow","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"indexOfCell":{"!description":"Checks for the provided <code>sap.zen.commons.layout.MatrixLayoutCell<\/code> in the aggregation {@link #getCells cells}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCell: sap.zen.commons.layout.MatrixLayoutCell) -> Number","parameters":{"oCell":"type: sap.zen.commons.layout.MatrixLayoutCell, description: The cell whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.MatrixLayoutRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of the row.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new layout/MatrixLayoutRow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.zen.commons.layout.MatrixLayoutCell[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/zen/commons/layout/MatrixLayoutRow","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.ui.layout.Grid}.<br>Non-control element used as part of a matrix layout's inner structure.","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which special styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then make the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed. Quotes are not allowed and this method will ignore any strings containing quotes. Strings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them as different classes) and can only removed later by calling removeStyleClass() with exactly the same (space-containing) string as parameter. Multiple calls with the same sStyleClass will have no different effect than calling once. If sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.zen.commons.layout.MatrixLayoutRow","parameters":{"sStyleClass":"type: string, description: the CSS class name to be added"}},"insertCell":{"!description":"Inserts a cell into the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn(oCell: sap.zen.commons.layout.MatrixLayoutCell, iIndex: Number) -> sap.zen.commons.layout.MatrixLayoutRow","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the cell should be inserted at; for a negative value of <code>iIndex<\/code>, the cell is inserted at position 0; for a value greater than the current size of the aggregation, the cell is inserted at the last position","oCell":"type: sap.zen.commons.layout.MatrixLayoutCell, description: The cell to insert; if empty, nothing is inserted"}},"removeCell":{"!description":"Removes a cell from the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn(vCell: Number | String | sap.zen.commons.layout.MatrixLayoutCell) -> sap.zen.commons.layout.MatrixLayoutCell | null","parameters":{"vCell":"type: int|string|sap.zen.commons.layout.MatrixLayoutCell, description: The cell to remove or its index or id"}},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously. Regular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.zen.commons.layout.MatrixLayoutRow","parameters":{"sStyleClass":"type: string, description: the style to be removed"}},"getCells":{"!description":"Gets content of aggregation {@link #getCells cells}.\n\nThe matrix layout row's individual cells.","!static":false,"!category":"function","!type":"fn() -> [sap.zen.commons.layout.MatrixLayoutCell]"}},"sap.zen.commons.layout.MatrixLayoutCell_obj":{"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.commons.layout.MatrixLayoutCell"},"sap.zen.commons.layout.PositionContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.PositionContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.commons.layout.PositionContainer"},"sap.zen.commons.layout.MatrixLayoutCell":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>Non-control element used as part of a matrix layout's inner structure.","hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> Boolean","parameters":{"sStyleClass":"type: string, description: the style to check for"}},"!constructorDescription":"Constructor for a new layout/MatrixLayoutCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.zen.commons.BackgroundDesign (default: 'Transparent')<\/li>\n<li>{@link #getColSpan colSpan} : int (default: 1)<\/li>\n<li>{@link #getHAlign hAlign} : sap.zen.commons.HAlign (default: 'Begin')<\/li>\n<li>{@link #getPadding padding} : sap.zen.commons.Padding (default: 'End')<\/li>\n<li>{@link #getRowSpan rowSpan} : int (default: 1)<\/li>\n<li>{@link #getSeparation separation} : sap.zen.commons.Separation (default: 'None')<\/li>\n<li>{@link #getVAlign vAlign} : sap.zen.commons.VAlign (default: 'Middle')<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/zen/commons/layout/MatrixLayoutCell","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>Non-control element used as part of a matrix layout's inner structure.","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which special styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then make the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed. Quotes are not allowed and this method will ignore any strings containing quotes. Strings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them as different classes) and can only removed later by calling removeStyleClass() with exactly the same (space-containing) string as parameter. Multiple calls with the same sStyleClass will have no different effect than calling once. If sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.zen.commons.layout.MatrixLayoutCell","parameters":{"sStyleClass":"type: string, description: the CSS class name to be added"}},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously. Regular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.zen.commons.layout.MatrixLayoutCell","parameters":{"sStyleClass":"type: string, description: the style to be removed"}},"!proto":"sap.ui.core.Element","!category":"class"},"sap.zen.commons.VAlign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Vertical alignment, e.g. of a layout cell's content within the cell's borders.","!module":"sap/zen/commons/VAlign","Top":{"!description":"Aligned at the top.","!category":"enum","!type":"String"},"Bottom":{"!description":"Aligned at the bottom.","!category":"enum","!type":"String"},"!category":"static class","Middle":{"!description":"Vertically centered.","!category":"enum","!type":"String"}},"sap.zen.commons.layout.AbsoluteLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.AbsoluteLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.commons.layout.AbsoluteLayout"},"sap.zen.commons.layout":{"horizontalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!category":"enum","!type":"sap.ui.core.Scrolling"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"columns":{"!description":"Number of columns. If not specified, the number of columns will be determined from the given cells.","!category":"enum","!type":"Number"},"!category":"namespace","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"top":{"!description":"Defines the distance to the top of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"centerHorizontally":{"!description":"Indicates whether this container shall be centered horizontally within the AbsoluteLayout area. The values of the attributes left and right are ignored when this feature is activated.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"centerVertically":{"!description":"Indicates whether this container should be centered vertically within the AbsoluteLayout area. The values of the attributes top and bottom are ignored when this feature is activated.","!category":"enum","!type":"Boolean"},"height":{"!description":"Height of the row.","!category":"enum","!type":"sap.ui.core.CSSSize"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"verticalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!category":"enum","!type":"sap.ui.core.Scrolling"},"bottom":{"!description":"Defines the distance to the bottom of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"widths":{"!description":"Widths of the columns. Use an array to define the widths of the columns. If a column shall have an automatical sizing enter \"auto\" for this column width.","!category":"enum","!type":"[sap.ui.core.CSSSize]"},"layoutFixed":{"!description":"Sets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority. The default is \"fixed\". If the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.","!category":"enum","!type":"Boolean"},"right":{"!description":"Defines the distance to the right of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"MatrixLayoutRow":"sap.zen.commons.layout.MatrixLayoutRow_obj","AbsoluteLayout":"sap.zen.commons.layout.AbsoluteLayout_obj","MatrixLayout":"sap.zen.commons.layout.MatrixLayout_obj","left":{"!description":"Defines the distance to the left of the layout (as specified in HTML)","!category":"enum","!type":"sap.ui.core.CSSSize"},"width":{"!description":"CSS width of the matrix layout. If the LayoutFixed = true a adequate width should be provided.","!category":"enum","!type":"sap.ui.core.CSSSize"},"PositionContainer":"sap.zen.commons.layout.PositionContainer_obj","MatrixLayoutCell":"sap.zen.commons.layout.MatrixLayoutCell_obj"},"sap.zen.commons.layout.MatrixLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.zen.commons.layout.MatrixLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.zen.commons.layout.MatrixLayout"},"sap.zen.commons.Padding":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Padding, e.g. of a layout cell's content within the cell's borders. Note that all options except \"None\" include a padding of 2px at the top and bottom, and differ only in the presence of a 4px padding towards the beginning or end of a line, in the current locale's writing direction.","!module":"sap/zen/commons/Padding","Begin":{"!description":"Top and bottom padding of 2px. Padding of 4px towards the beginning of a line, in the current locale's writing direction, but none towards its end.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"Top and bottom padding of 2px. Padding of 4px towards the end of a line, in the current locale's writing direction, but none towards its beginning.","!category":"enum","!type":"String"},"None":{"!description":"No padding at all.","!category":"enum","!type":"String"},"Both":{"!description":"Top and bottom padding of 2px. Padding of 4px towards both the beginning and end of a line.","!category":"enum","!type":"String"},"Neither":{"!description":"Top and bottom padding of 2px. No padding towards neither the beginning nor end of a line.","!category":"enum","!type":"String"}},"sap.zen.commons.Separation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.89.0 Please use the WD Grid control instead.<br>Separation, e.g. of a layout cell from its neighbor, via a vertical gutter of defined width, with or without a vertical line in its middle.","Small":{"!description":"A small (17px) vertical gutter without a vertical line.","!category":"enum","!type":"String"},"!module":"sap/zen/commons/Separation","SmallWithLine":{"!description":"A small (17px) vertical gutter with a vertical line in its middle.","!category":"enum","!type":"String"},"Medium":{"!description":"A medium (31px) vertical gutter without a vertical line.","!category":"enum","!type":"String"},"Large":{"!description":"A large (63px) vertical gutter without a vertical line.","!category":"enum","!type":"String"},"LargeWithLine":{"!description":"A large (63px) vertical gutter with a vertical line in its middle.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"No gutter at all (0px), and without a vertical line, of course.","!category":"enum","!type":"String"},"MediumWithLine":{"!description":"A medium (31px) vertical gutter with a vertical line in its middle.","!category":"enum","!type":"String"}}}}