{"!name":"sap.esh.search.ui","!version":"1.21.1","!define":{"sap":{"sap":"sap","!category":"namespace","esh":"sap.esh"},"sap.esh.search.ui.SearchCompositeControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.esh.search.ui.SearchCompositeControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.esh.search.ui.SearchCompositeControl"},"sap.esh.search.ui":{"quickSelectDataSources":{"!description":"A list of data sources to be displayed in the facet panel in the section \"Collection\".","!category":"enum","!type":"Object"},"limitAjaxRequests":{"!description":"Prevents too many ajax requests in a short time.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"pageSize":{"!description":"The maximum count of search result items displayed on a page after a search. By clicking 'Show More' button, another page of result items of the same count (if available) will be displayed.","!category":"enum","!type":"Number"},"applicationComponent":{"!description":"Relevant for SAP partners and SAP, the \"Application Component\" you expect customers to create incidents.","!category":"enum","!type":"String"},"facetPanelResizable":{"!description":"Display a splitter bar to resize the left hand panel, containing all facets and filter criteria.","!category":"enum","!type":"Boolean"},"folderMode":{"!description":"Activates the folder mode. Precondition for folder mode is 1) Search model: In the search model for the current datasource a hierarchy attribute (representing the folders) is defined 1.1) the hierarchy attribute is annotated with displayType=TREE and for the hierarchy there is a helper connector representing the hierarchy or 1.2) the current datasource is the helper datasource representing the folder hierarchy. The hierarchy attribute is annotated with displayType=FLAT 2) Search query: The folder mode is only active in case the search query has an empty search term and no filter conditions (except the hierarchy attribute) are set.\n\nIn folder mode and in case a folder filter is set the result view only shows direct children of a folder. In contrast the counts in the facets are calculated by counting direct and not direct children. In case the folder mode is not active the UI uses the search mode: The result list shows direct and not direct children of a folder. * @since 1.106.0","!category":"enum","!type":"Boolean"},"searchTerm":{"!description":"Defines the initial search term for the search input.","!category":"enum","!type":"String"},"cssClass":{"!description":"An additional CSS class to add to this control","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"filterRootCondition":{"!description":"Defines the filter root condition of a filter tree which shall be applied to the search request. This control only allows filter trees which have a the following structure: complex condition (root level) \\ complex condition (attribute level) \\ simple condition (attribute value level) Filter root conditions which do not follow this structure won't be accepted and an error will be thrown. Please see the below for a more in-depth example.","!category":"enum","!type":"Object"},"formatFilterBarText":{"!description":"Callback for formatting the filter string to be displayed on the filter bar (for closed facet panel).","!category":"enum","!type":"fn()"},"!description":"UI5 library: sap.esh.search.ui.","eventConsumers":{"!description":"Adds a callback function which is called whenever there is a user triggered event.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"isSearchUrl":{"!description":"A callback for checking whether a URL is a search-relevant URL. The callback receives a URL and returns 'true' in case the URL is a search-relevant URL. Typically you need to register this callback in case of 'updateUrl = true'.","!category":"enum","!type":"fn()"},"autoAdjustResultViewTypeInFolderMode":{"!description":"In case folder mode is active: Automatically switch result view type to list in search mode and to table in folder mode.","!category":"enum","!type":"Boolean"},"sinaConfiguration":{"!description":"Configuration for the Enterprise Search Client API.","!category":"enum","!type":"Object"},"resultViewTypes":{"!description":"Defines selectable search result view types. The value can be set/get in attach event \"searchFinished\". Case 1: Search in Apps: result is displayed in a mandatory view type <code>[\"appSearchResult\"]<\/code>, and it is not switchable. Case 2: Search in All or other Category: result is switchable between different view types. Possible values for the array items are <code>\"searchResultList\"<\/code> and <code>\"searchResultGrid\"<\/code>. Case 3, Search in Business Object: result is switchable between different view types. Possible values for the array items are <code>\"searchResultList\"<\/code>, <code>\"searchResultTable\"<\/code> and <code>\"searchResultGrid\"<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.","!category":"enum","!type":"[String]"},"enableMultiSelectionResultItems":{"!description":"Enables the multiselection mode of search result items. A checkbox is provided for each result item if the value is set to 'true'.","!category":"enum","!type":"Boolean"},"searchTermLengthLimit":{"!description":"Limit for length of searchterm.","!category":"enum","!type":"Number"},"SearchCompositeControl":"sap.esh.search.ui.SearchCompositeControl_obj","initAsync":{"!description":"An asynchronues callback which is called after the initialization of the search composite control.","!category":"enum","!type":"fn()"},"optimizeForValueHelp":{"!description":"The layout is optimized for object selection / value help (narrow view w/o facet panel).","!category":"enum","!type":"Boolean"},"searchOnStart":{"!description":"Defines if the search composite control will send a search request directly after loading, using given search term, data source and filter root condition settings.","!category":"enum","!type":"Boolean"},"!module":"sap/esh/search/ui/library","!helpDescription":"UI5 library: sap.esh.search.ui.","updateUrl":{"!description":"A boolean indicating that the search state is written to the URL.","!category":"enum","!type":"Boolean"},"enableQueryLanguage":{"!description":"Enables the query language for the hana_odata provider. With query language it is possible for the end user to enter complex search queries with logical operators.","!category":"enum","!type":"Boolean"},"dataSource":{"!description":"The id of the data source in which it will search right after initialization.","!category":"enum","!type":"String"},"getCustomNoResultScreen":{"!description":"Whenever a search has no results, a 'No Results Screen' is displayed. You can provide a custom control to be more specific and add some hints, links, buttons or other content.","!category":"enum","!type":"fn()"},"tabStripsFormatter":{"!description":"Function callback for formatting the datasource tabstrips in the top toolbar. To the callback function a list of datasources is passed. The callback functions return a modified list of datasources to be displayed in the tabstrips.","!category":"enum","!type":"fn()"},"facetVisibility":{"!description":"A boolean which indicates whether the facet panel is initially openend or closed. This affects only the initial state of the facet panel. This initial state of the facet panel can be overwritten by the user, depending on the user's personalization settings.","!category":"enum","!type":"Boolean"},"!category":"namespace","facetPanelWidthInPercent":{"!description":"Default size (percent) of the left hand panel, containing all facets and filter criteria. If \"facetPanelResizable\" is true, the width of the facet panel can be changed by the user.","!category":"enum","!type":"Number"},"boSuggestions":{"!description":"A boolean for enabling (business) object suggestions.","!category":"enum","!type":"Boolean"},"isFilterBarVisible":{"!description":"Callback for checking whether the filter bar is visible.","!category":"enum","!type":"fn()"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"resultViewType":{"!description":"Defines active search result view type. The value can be set/get in attach event \"searchFinished\", and it must be contained in resultViewTypes. Case 1, Search in Apps: result is displayed in a mandatory view type <code>\"appSearchResult\"<\/code>. Case 2.1, Search in All or other Category (configuration.isUshell !== true): result is switchable between different view types. Possible value is <code>\"searchResultList\"<\/code>, or <code>\"searchResultGrid\"<\/code>. Case 2.2, Search in All or other Category (configuration.isUshell === true): result is displayed in a mandatory view type <code>\"searchResultList\"<\/code>. Case 3, Search in Business Object: result is switchable between different view types. Possible value is <code>\"searchResultList\"<\/code>, <code>\"searchResultTable\"<\/code> or <code>\"searchResultGrid\"<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.","!category":"enum","!type":"String"},"parseSearchUrlParameters":{"!description":"A callback for parsing URL parameters. The callback receices URL parameters and returns modified URL parameters. This is an optional callback. In case you set 'updateUrl = true' typcically this callback is not needed.","!category":"enum","!type":"fn()"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"selectionChange":{"!description":"A callback which is called whenever the selection of result view items changes.","!category":"enum","!type":"fn()"},"displayFacetPanelInCaseOfNoResults":{"!description":"When set to true the facet panel is displayed also in case there are no search results.","!category":"enum","!type":"Boolean"},"exclusiveDataSource":{"!description":"Data source id which is set when the UI is loaded and cannot be changed at run time. The following UI parts will be hidden: - data source select (dropdown) - data source tab bar - data source facet (facet panel) - data source name/link on result list (header section of item)","!category":"enum","!type":"String"},"folderModeForInitialSearch":{"!description":"In case folderMode is set to true this boolean indicates whether for the initial search the folder mode is enabled.","!category":"enum","!type":"Boolean"},"filterDataSources":{"!description":"Callback for filtering the datasources displayed in the datasource dropdown listbox. The callback gets a list of datsources and returns the filtered list of datasources.","!category":"enum","!type":"fn()"},"overwriteBrowserTitle":{"!description":"Shall the window title be overwritten by this control? If true, the control will set the current search condition as window title. If false, it will not set or update the window title.","!category":"enum","!type":"Boolean"},"renderSearchUrl":{"!description":"A callback for rendering the search URL. The callback gets a list of url encoded parameters and returns the URL string. Typically you need to register this callback in case of 'updateUrl = true'.","!category":"enum","!type":"fn()"},"getSearchInputPlaceholderLabel":{"!description":"A callback which returns customized \"label\" for placeholder text of search box in case there is no search term. The placeholder text (en) will be \"Search In: <customPlaceholderLabel>\".","!category":"enum","!type":"fn()"},"defaultDataSource":{"!description":"Data source id which is set when the UI is loaded or filter is reset. If dataSource is also set, dataSource will be used during UI load and this parameter will used only after filter is reset. When setting 'exclusiveDataSource' to 'true', do not set this parameter (will be ignored).","!category":"enum","!type":"String"},"resultViewSettings":{"!description":"Defines a pair of search result view settings. The value is an object of properties <code>resultViewTypes<\/code> and <code>resultViewType<\/code>. An example: <code>{resultViewTypes: [\"searchResultList\", \"searchResultTable\"], resultViewType: \"searchResultList\"}<\/code> Find more detail in the definition of each child property. The value can be set/get in attached event \"searchFinished\". Function <code>setResultViewSettings<\/code> prevents incompatibility of sequential execution of functions <code>setResultViewTypes<\/code> and <code>setResultViewType<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.","!category":"enum","!type":"String"}},"sap.esh.search":{"ui":"sap.esh.search.ui","!category":"namespace"},"sap.esh.search.ui.SearchCompositeControl":{"getFilterRootCondition":{"!description":"Gets current value of property {@link #getFilterRootCondition filterRootCondition}.\n\nDefines the filter root condition of a filter tree which shall be applied to the search request. This control only allows filter trees which have a the following structure: complex condition (root level) \\ complex condition (attribute level) \\ simple condition (attribute value level) Filter root conditions which do not follow this structure won't be accepted and an error will be thrown. Please see the below for a more in-depth example.","!static":false,"!category":"function","!type":"fn() -> Object"},"setDefaultDataSource":{"!description":"Sets a new value for property {@link #getDefaultDataSource defaultDataSource}.\n\nData source id which is set when the UI is loaded or filter is reset. If dataSource is also set, dataSource will be used during UI load and this parameter will used only after filter is reset. When setting 'exclusiveDataSource' to 'true', do not set this parameter (will be ignored).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultDataSource: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sDefaultDataSource":"type: string, description: New value for property <code>defaultDataSource<\/code>"}},"setParseSearchUrlParameters":{"!description":"Sets a new value for property {@link #getParseSearchUrlParameters parseSearchUrlParameters}.\n\nA callback for parsing URL parameters. The callback receices URL parameters and returns modified URL parameters. This is an optional callback. In case you set 'updateUrl = true' typcically this callback is not needed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnParseSearchUrlParameters: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnParseSearchUrlParameters":"type: function, description: New value for property <code>parseSearchUrlParameters<\/code>"}},"getOverwriteBrowserTitle":{"!description":"Gets current value of property {@link #getOverwriteBrowserTitle overwriteBrowserTitle}.\n\nShall the window title be overwritten by this control? If true, the control will set the current search condition as window title. If false, it will not set or update the window title.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnableMultiSelectionResultItems":{"!description":"Sets a new value for property {@link #getEnableMultiSelectionResultItems enableMultiSelectionResultItems}.\n\nEnables the multiselection mode of search result items. A checkbox is provided for each result item if the value is set to 'true'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableMultiSelectionResultItems?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bEnableMultiSelectionResultItems":"type: boolean, description: New value for property <code>enableMultiSelectionResultItems<\/code>"}},"getUpdateUrl":{"!description":"Gets current value of property {@link #getUpdateUrl updateUrl}.\n\nA boolean indicating that the search state is written to the URL.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setSearchTermLengthLimit":{"!description":"Sets a new value for property {@link #getSearchTermLengthLimit searchTermLengthLimit}.\n\nLimit for length of searchterm.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn(iSearchTermLengthLimit?: Number) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"iSearchTermLengthLimit":"type: int, description: New value for property <code>searchTermLengthLimit<\/code>"}},"setFilterDataSources":{"!description":"Sets a new value for property {@link #getFilterDataSources filterDataSources}.\n\nCallback for filtering the datasources displayed in the datasource dropdown listbox. The callback gets a list of datsources and returns the filtered list of datasources.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnFilterDataSources: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnFilterDataSources":"type: function, description: New value for property <code>filterDataSources<\/code>"}},"getEnableMultiSelectionResultItems":{"!description":"Gets current value of property {@link #getEnableMultiSelectionResultItems enableMultiSelectionResultItems}.\n\nEnables the multiselection mode of search result items. A checkbox is provided for each result item if the value is set to 'true'.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getExclusiveDataSource":{"!description":"Gets current value of property {@link #getExclusiveDataSource exclusiveDataSource}.\n\nData source id which is set when the UI is loaded and cannot be changed at run time. The following UI parts will be hidden: - data source select (dropdown) - data source tab bar - data source facet (facet panel) - data source name/link on result list (header section of item)","!static":false,"!category":"function","!type":"fn() -> String"},"setQuickSelectDataSources":{"!description":"Sets a new value for property {@link #getQuickSelectDataSources quickSelectDataSources}.\n\nA list of data sources to be displayed in the facet panel in the section \"Collection\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oQuickSelectDataSources: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oQuickSelectDataSources":"type: object, description: New value for property <code>quickSelectDataSources<\/code>"}},"!description":"This is the SAPUI5 composite control by the Enterprise Search Team which helps to make full use of the Enterprise Search Engine features built into ABAP and HANA. It includes a search input box including a suggestion dropdown, a result view which can have different visualisation, including tiles, list and table, filtering facets and more. This control is ready to use with an enterprise search backend service but also allows deep extension to match requirements of adopting applications.","setResultViewTypes":{"!description":"Sets a new value for property {@link #getResultViewTypes resultViewTypes}.\n\nDefines selectable search result view types. The value can be set/get in attach event \"searchFinished\". Case 1: Search in Apps: result is displayed in a mandatory view type <code>[\"appSearchResult\"]<\/code>, and it is not switchable. Case 2: Search in All or other Category: result is switchable between different view types. Possible values for the array items are <code>\"searchResultList\"<\/code> and <code>\"searchResultGrid\"<\/code>. Case 3, Search in Business Object: result is switchable between different view types. Possible values for the array items are <code>\"searchResultList\"<\/code>, <code>\"searchResultTable\"<\/code> and <code>\"searchResultGrid\"<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[\"searchResultList\", \"searchResultTable\"]<\/code>.","!static":false,"!category":"function","!type":"fn(sResultViewTypes?: [String]) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sResultViewTypes":"type: string[], description: New value for property <code>resultViewTypes<\/code>"}},"setApplicationComponent":{"!description":"Sets a new value for property {@link #getApplicationComponent applicationComponent}.\n\nRelevant for SAP partners and SAP, the \"Application Component\" you expect customers to create incidents.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"HAN-AS-INA-UI\"<\/code>.","!static":false,"!category":"function","!type":"fn(sApplicationComponent?: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sApplicationComponent":"type: string, description: New value for property <code>applicationComponent<\/code>"}},"getResultViewSettings":{"!description":"Gets current value of property {@link #getResultViewSettings resultViewSettings}.\n\nDefines a pair of search result view settings. The value is an object of properties <code>resultViewTypes<\/code> and <code>resultViewType<\/code>. An example: <code>{resultViewTypes: [\"searchResultList\", \"searchResultTable\"], resultViewType: \"searchResultList\"}<\/code> Find more detail in the definition of each child property. The value can be set/get in attached event \"searchFinished\". Function <code>setResultViewSettings<\/code> prevents incompatibility of sequential execution of functions <code>setResultViewTypes<\/code> and <code>setResultViewType<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.esh.search.ui.SearchCompositeControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setFilterRootCondition":{"!description":"Sets a new value for property {@link #getFilterRootCondition filterRootCondition}.\n\nDefines the filter root condition of a filter tree which shall be applied to the search request. This control only allows filter trees which have a the following structure: complex condition (root level) \\ complex condition (attribute level) \\ simple condition (attribute value level) Filter root conditions which do not follow this structure won't be accepted and an error will be thrown. Please see the below for a more in-depth example.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFilterRootCondition: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oFilterRootCondition":"type: object, description: New value for property <code>filterRootCondition<\/code>"}},"getFacetVisibility":{"!description":"Gets current value of property {@link #getFacetVisibility facetVisibility}.\n\nA boolean which indicates whether the facet panel is initially openend or closed. This affects only the initial state of the facet panel. This initial state of the facet panel can be overwritten by the user, depending on the user's personalization settings.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/esh/search/ui/SearchCompositeControl","setLimitAjaxRequests":{"!description":"Sets a new value for property {@link #getLimitAjaxRequests limitAjaxRequests}.\n\nPrevents too many ajax requests in a short time.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bLimitAjaxRequests?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bLimitAjaxRequests":"type: boolean, description: New value for property <code>limitAjaxRequests<\/code>"}},"setFolderMode":{"!description":"Sets a new value for property {@link #getFolderMode folderMode}.\n\nActivates the folder mode. Precondition for folder mode is 1) Search model: In the search model for the current datasource a hierarchy attribute (representing the folders) is defined 1.1) the hierarchy attribute is annotated with displayType=TREE and for the hierarchy there is a helper connector representing the hierarchy or 1.2) the current datasource is the helper datasource representing the folder hierarchy. The hierarchy attribute is annotated with displayType=FLAT 2) Search query: The folder mode is only active in case the search query has an empty search term and no filter conditions (except the hierarchy attribute) are set.\n\nIn folder mode and in case a folder filter is set the result view only shows direct children of a folder. In contrast the counts in the facets are calculated by counting direct and not direct children. In case the folder mode is not active the UI uses the search mode: The result list shows direct and not direct children of a folder.","!static":false,"!category":"function","!type":"fn(bFolderMode?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bFolderMode":"type: boolean, description: New value for property <code>folderMode<\/code>"}},"setUpdateUrl":{"!description":"Sets a new value for property {@link #getUpdateUrl updateUrl}.\n\nA boolean indicating that the search state is written to the URL.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUpdateUrl?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bUpdateUrl":"type: boolean, description: New value for property <code>updateUrl<\/code>"}},"getLimitAjaxRequests":{"!description":"Gets current value of property {@link #getLimitAjaxRequests limitAjaxRequests}.\n\nPrevents too many ajax requests in a short time.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSearchTerm":{"!description":"Sets a new value for property {@link #getSearchTerm searchTerm}.\n\nDefines the initial search term for the search input.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sSearchTerm?: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sSearchTerm":"type: string, description: New value for property <code>searchTerm<\/code>"}},"fireSelectionChanged":{"!description":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getDataSource":{"!description":"Gets current value of property {@link #getDataSource dataSource}.\n\nThe id of the data source in which it will search right after initialization.","!static":false,"!category":"function","!type":"fn() -> String"},"getParseSearchUrlParameters":{"!description":"Gets current value of property {@link #getParseSearchUrlParameters parseSearchUrlParameters}.\n\nA callback for parsing URL parameters. The callback receices URL parameters and returns modified URL parameters. This is an optional callback. In case you set 'updateUrl = true' typcically this callback is not needed.","!static":false,"!category":"function","!type":"fn() -> fn()"},"getSelectionChange":{"!description":"Gets current value of property {@link #getSelectionChange selectionChange}.\n\nA callback which is called whenever the selection of result view items changes.","!static":false,"!category":"function","!type":"fn() -> fn()"},"setResultViewSettings":{"!description":"Sets a new value for property {@link #getResultViewSettings resultViewSettings}.\n\nDefines a pair of search result view settings. The value is an object of properties <code>resultViewTypes<\/code> and <code>resultViewType<\/code>. An example: <code>{resultViewTypes: [\"searchResultList\", \"searchResultTable\"], resultViewType: \"searchResultList\"}<\/code> Find more detail in the definition of each child property. The value can be set/get in attached event \"searchFinished\". Function <code>setResultViewSettings<\/code> prevents incompatibility of sequential execution of functions <code>setResultViewTypes<\/code> and <code>setResultViewType<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(sResultViewSettings?: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sResultViewSettings":"type: string, description: New value for property <code>resultViewSettings<\/code>"}},"setSearchOnStart":{"!description":"Sets a new value for property {@link #getSearchOnStart searchOnStart}.\n\nDefines if the search composite control will send a search request directly after loading, using given search term, data source and filter root condition settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSearchOnStart?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bSearchOnStart":"type: boolean, description: New value for property <code>searchOnStart<\/code>"}},"setFolderModeForInitialSearch":{"!description":"Sets a new value for property {@link #getFolderModeForInitialSearch folderModeForInitialSearch}.\n\nIn case folderMode is set to true this boolean indicates whether for the initial search the folder mode is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFolderModeForInitialSearch?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bFolderModeForInitialSearch":"type: boolean, description: New value for property <code>folderModeForInitialSearch<\/code>"}},"getSinaConfiguration":{"!description":"Gets current value of property {@link #getSinaConfiguration sinaConfiguration}.\n\nConfiguration for the Enterprise Search Client API.","!static":false,"!category":"function","!type":"fn() -> Object"},"getFilterDataSources":{"!description":"Gets current value of property {@link #getFilterDataSources filterDataSources}.\n\nCallback for filtering the datasources displayed in the datasource dropdown listbox. The callback gets a list of datsources and returns the filtered list of datasources.","!static":false,"!category":"function","!type":"fn() -> fn()"},"setExclusiveDataSource":{"!description":"Sets a new value for property {@link #getExclusiveDataSource exclusiveDataSource}.\n\nData source id which is set when the UI is loaded and cannot be changed at run time. The following UI parts will be hidden: - data source select (dropdown) - data source tab bar - data source facet (facet panel) - data source name/link on result list (header section of item)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sExclusiveDataSource: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sExclusiveDataSource":"type: string, description: New value for property <code>exclusiveDataSource<\/code>"}},"setDataSource":{"!description":"Sets a new value for property {@link #getDataSource dataSource}.\n\nThe id of the data source in which it will search right after initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDataSource: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sDataSource":"type: string, description: New value for property <code>dataSource<\/code>"}},"setIsFilterBarVisible":{"!description":"Sets a new value for property {@link #getIsFilterBarVisible isFilterBarVisible}.\n\nCallback for checking whether the filter bar is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnIsFilterBarVisible: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnIsFilterBarVisible":"type: function, description: New value for property <code>isFilterBarVisible<\/code>"}},"getAutoAdjustResultViewTypeInFolderMode":{"!description":"Gets current value of property {@link #getAutoAdjustResultViewTypeInFolderMode autoAdjustResultViewTypeInFolderMode}.\n\nIn case folder mode is active: Automatically switch result view type to list in search mode and to table in folder mode.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDefaultDataSource":{"!description":"Gets current value of property {@link #getDefaultDataSource defaultDataSource}.\n\nData source id which is set when the UI is loaded or filter is reset. If dataSource is also set, dataSource will be used during UI load and this parameter will used only after filter is reset. When setting 'exclusiveDataSource' to 'true', do not set this parameter (will be ignored).","!static":false,"!category":"function","!type":"fn() -> String"},"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself.\n\nEvent is fired when selection on result view (list, table or grid) has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setOverwriteBrowserTitle":{"!description":"Sets a new value for property {@link #getOverwriteBrowserTitle overwriteBrowserTitle}.\n\nShall the window title be overwritten by this control? If true, the control will set the current search condition as window title. If false, it will not set or update the window title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bOverwriteBrowserTitle: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bOverwriteBrowserTitle":"type: boolean, description: New value for property <code>overwriteBrowserTitle<\/code>"}},"getSearchOnStart":{"!description":"Gets current value of property {@link #getSearchOnStart searchOnStart}.\n\nDefines if the search composite control will send a search request directly after loading, using given search term, data source and filter root condition settings.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachResultViewTypeChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:resultViewTypeChanged resultViewTypeChanged} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setAutoAdjustResultViewTypeInFolderMode":{"!description":"Sets a new value for property {@link #getAutoAdjustResultViewTypeInFolderMode autoAdjustResultViewTypeInFolderMode}.\n\nIn case folder mode is active: Automatically switch result view type to list in search mode and to table in folder mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoAdjustResultViewTypeInFolderMode?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bAutoAdjustResultViewTypeInFolderMode":"type: boolean, description: New value for property <code>autoAdjustResultViewTypeInFolderMode<\/code>"}},"getIsSearchUrl":{"!description":"Gets current value of property {@link #getIsSearchUrl isSearchUrl}.\n\nA callback for checking whether a URL is a search-relevant URL. The callback receives a URL and returns 'true' in case the URL is a search-relevant URL. Typically you need to register this callback in case of 'updateUrl = true'.","!static":false,"!category":"function","!type":"fn() -> fn()"},"setTabStripsFormatter":{"!description":"Sets a new value for property {@link #getTabStripsFormatter tabStripsFormatter}.\n\nFunction callback for formatting the datasource tabstrips in the top toolbar. To the callback function a list of datasources is passed. The callback functions return a modified list of datasources to be displayed in the tabstrips.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnTabStripsFormatter: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnTabStripsFormatter":"type: function, description: New value for property <code>tabStripsFormatter<\/code>"}},"getOptimizeForValueHelp":{"!description":"Gets current value of property {@link #getOptimizeForValueHelp optimizeForValueHelp}.\n\nThe layout is optimized for object selection / value help (narrow view w/o facet panel).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPageSize":{"!description":"Sets a new value for property {@link #getPageSize pageSize}.\n\nThe maximum count of search result items displayed on a page after a search. By clicking 'Show More' button, another page of result items of the same count (if available) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn(iPageSize?: Number) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"iPageSize":"type: int, description: New value for property <code>pageSize<\/code>"}},"getResultViewTypes":{"!description":"Gets current value of property {@link #getResultViewTypes resultViewTypes}.\n\nDefines selectable search result view types. The value can be set/get in attach event \"searchFinished\". Case 1: Search in Apps: result is displayed in a mandatory view type <code>[\"appSearchResult\"]<\/code>, and it is not switchable. Case 2: Search in All or other Category: result is switchable between different view types. Possible values for the array items are <code>\"searchResultList\"<\/code> and <code>\"searchResultGrid\"<\/code>. Case 3, Search in Business Object: result is switchable between different view types. Possible values for the array items are <code>\"searchResultList\"<\/code>, <code>\"searchResultTable\"<\/code> and <code>\"searchResultGrid\"<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.\n\nDefault value is <code>[\"searchResultList\", \"searchResultTable\"]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setEnableQueryLanguage":{"!description":"Sets a new value for property {@link #getEnableQueryLanguage enableQueryLanguage}.\n\nEnables the query language for the hana_odata provider. With query language it is possible for the end user to enter complex search queries with logical operators.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableQueryLanguage?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bEnableQueryLanguage":"type: boolean, description: New value for property <code>enableQueryLanguage<\/code>"}},"setGetSearchInputPlaceholderLabel":{"!description":"Sets a new value for property {@link #getGetSearchInputPlaceholderLabel getSearchInputPlaceholderLabel}.\n\nA callback which returns customized \"label\" for placeholder text of search box in case there is no search term. The placeholder text (en) will be \"Search In: <customPlaceholderLabel>\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnGetSearchInputPlaceholderLabel: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnGetSearchInputPlaceholderLabel":"type: function, description: New value for property <code>getSearchInputPlaceholderLabel<\/code>"}},"setCssClass":{"!description":"Sets a new value for property {@link #getCssClass cssClass}.\n\nAn additional CSS class to add to this control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCssClass: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sCssClass":"type: string, description: New value for property <code>cssClass<\/code>"}},"getGetCustomNoResultScreen":{"!description":"Gets current value of property {@link #getGetCustomNoResultScreen getCustomNoResultScreen}.\n\nWhenever a search has no results, a 'No Results Screen' is displayed. You can provide a custom control to be more specific and add some hints, links, buttons or other content.","!static":false,"!category":"function","!type":"fn() -> fn()"},"fireResultViewTypeChanged":{"!description":"Fires event {@link #event:resultViewTypeChanged resultViewTypeChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setRenderSearchUrl":{"!description":"Sets a new value for property {@link #getRenderSearchUrl renderSearchUrl}.\n\nA callback for rendering the search URL. The callback gets a list of url encoded parameters and returns the URL string. Typically you need to register this callback in case of 'updateUrl = true'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnRenderSearchUrl: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnRenderSearchUrl":"type: function, description: New value for property <code>renderSearchUrl<\/code>"}},"fireSearchStarted":{"!description":"Fires event {@link #event:searchStarted searchStarted} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.esh.search.ui.SearchCompositeControl"},"getBoSuggestions":{"!description":"Gets current value of property {@link #getBoSuggestions boSuggestions}.\n\nA boolean for enabling (business) object suggestions.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.esh.search.ui.SearchCompositeControl.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectionChange":{"!description":"Sets a new value for property {@link #getSelectionChange selectionChange}.\n\nA callback which is called whenever the selection of result view items changes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnSelectionChange: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnSelectionChange":"type: function, description: New value for property <code>selectionChange<\/code>"}},"attachSearchStarted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:searchStarted searchStarted} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself.\n\nEvent is fired when search is started.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDisplayFacetPanelInCaseOfNoResults":{"!description":"Gets current value of property {@link #getDisplayFacetPanelInCaseOfNoResults displayFacetPanelInCaseOfNoResults}.\n\nWhen set to true the facet panel is displayed also in case there are no search results.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFacetPanelResizable":{"!description":"Gets current value of property {@link #getFacetPanelResizable facetPanelResizable}.\n\nDisplay a splitter bar to resize the left hand panel, containing all facets and filter criteria.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFolderModeForInitialSearch":{"!description":"Gets current value of property {@link #getFolderModeForInitialSearch folderModeForInitialSearch}.\n\nIn case folderMode is set to true this boolean indicates whether for the initial search the folder mode is enabled.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTabStripsFormatter":{"!description":"Gets current value of property {@link #getTabStripsFormatter tabStripsFormatter}.\n\nFunction callback for formatting the datasource tabstrips in the top toolbar. To the callback function a list of datasources is passed. The callback functions return a modified list of datasources to be displayed in the tabstrips.","!static":false,"!category":"function","!type":"fn() -> fn()"},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setIsSearchUrl":{"!description":"Sets a new value for property {@link #getIsSearchUrl isSearchUrl}.\n\nA callback for checking whether a URL is a search-relevant URL. The callback receives a URL and returns 'true' in case the URL is a search-relevant URL. Typically you need to register this callback in case of 'updateUrl = true'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnIsSearchUrl: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnIsSearchUrl":"type: function, description: New value for property <code>isSearchUrl<\/code>"}},"attachResultViewTypeChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:resultViewTypeChanged resultViewTypeChanged} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself.\n\nEvent is fired after result view type got changed (list, table or grid).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSearchFinished":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:searchFinished searchFinished} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getEnableQueryLanguage":{"!description":"Gets current value of property {@link #getEnableQueryLanguage enableQueryLanguage}.\n\nEnables the query language for the hana_odata provider. With query language it is possible for the end user to enter complex search queries with logical operators.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getPageSize":{"!description":"Gets current value of property {@link #getPageSize pageSize}.\n\nThe maximum count of search result items displayed on a page after a search. By clicking 'Show More' button, another page of result items of the same count (if available) will be displayed.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getGetSearchInputPlaceholderLabel":{"!description":"Gets current value of property {@link #getGetSearchInputPlaceholderLabel getSearchInputPlaceholderLabel}.\n\nA callback which returns customized \"label\" for placeholder text of search box in case there is no search term. The placeholder text (en) will be \"Search In: <customPlaceholderLabel>\".","!static":false,"!category":"function","!type":"fn() -> fn()"},"setInitAsync":{"!description":"Sets a new value for property {@link #getInitAsync initAsync}.\n\nAn asynchronues callback which is called after the initialization of the search composite control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnInitAsync: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnInitAsync":"type: function, description: New value for property <code>initAsync<\/code>"}},"!helpDescription":"This is the SAPUI5 composite control by the Enterprise Search Team which helps to make full use of the Enterprise Search Engine features built into ABAP and HANA. It includes a search input box including a suggestion dropdown, a result view which can have different visualisation, including tiles, list and table, filtering facets and more. This control is ready to use with an enterprise search backend service but also allows deep extension to match requirements of adopting applications.","setEventConsumers":{"!description":"Sets a new value for property {@link #getEventConsumers eventConsumers}.\n\nAdds a callback function which is called whenever there is a user triggered event.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEventConsumers: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sEventConsumers":"type: string, description: New value for property <code>eventConsumers<\/code>"}},"detachSearchStarted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:searchStarted searchStarted} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"setSinaConfiguration":{"!description":"Sets a new value for property {@link #getSinaConfiguration sinaConfiguration}.\n\nConfiguration for the Enterprise Search Client API.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSinaConfiguration: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oSinaConfiguration":"type: object, description: New value for property <code>sinaConfiguration<\/code>"}},"getEventConsumers":{"!description":"Gets current value of property {@link #getEventConsumers eventConsumers}.\n\nAdds a callback function which is called whenever there is a user triggered event.","!static":false,"!category":"function","!type":"fn() -> String"},"setBoSuggestions":{"!description":"Sets a new value for property {@link #getBoSuggestions boSuggestions}.\n\nA boolean for enabling (business) object suggestions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bBoSuggestions?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bBoSuggestions":"type: boolean, description: New value for property <code>boSuggestions<\/code>"}},"setDisplayFacetPanelInCaseOfNoResults":{"!description":"Sets a new value for property {@link #getDisplayFacetPanelInCaseOfNoResults displayFacetPanelInCaseOfNoResults}.\n\nWhen set to true the facet panel is displayed also in case there are no search results.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayFacetPanelInCaseOfNoResults?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bDisplayFacetPanelInCaseOfNoResults":"type: boolean, description: New value for property <code>displayFacetPanelInCaseOfNoResults<\/code>"}},"getFolderMode":{"!description":"Gets current value of property {@link #getFolderMode folderMode}.\n\nActivates the folder mode. Precondition for folder mode is 1) Search model: In the search model for the current datasource a hierarchy attribute (representing the folders) is defined 1.1) the hierarchy attribute is annotated with displayType=TREE and for the hierarchy there is a helper connector representing the hierarchy or 1.2) the current datasource is the helper datasource representing the folder hierarchy. The hierarchy attribute is annotated with displayType=FLAT 2) Search query: The folder mode is only active in case the search query has an empty search term and no filter conditions (except the hierarchy attribute) are set.\n\nIn folder mode and in case a folder filter is set the result view only shows direct children of a folder. In contrast the counts in the facets are calculated by counting direct and not direct children. In case the folder mode is not active the UI uses the search mode: The result list shows direct and not direct children of a folder.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nControl instances which are part of this composite control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","setResultViewType":{"!description":"Sets a new value for property {@link #getResultViewType resultViewType}.\n\nDefines active search result view type. The value can be set/get in attach event \"searchFinished\", and it must be contained in resultViewTypes. Case 1, Search in Apps: result is displayed in a mandatory view type <code>\"appSearchResult\"<\/code>. Case 2.1, Search in All or other Category (configuration.isUshell !== true): result is switchable between different view types. Possible value is <code>\"searchResultList\"<\/code>, or <code>\"searchResultGrid\"<\/code>. Case 2.2, Search in All or other Category (configuration.isUshell === true): result is displayed in a mandatory view type <code>\"searchResultList\"<\/code>. Case 3, Search in Business Object: result is switchable between different view types. Possible value is <code>\"searchResultList\"<\/code>, <code>\"searchResultTable\"<\/code> or <code>\"searchResultGrid\"<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"searchResultList\"<\/code>.","!static":false,"!category":"function","!type":"fn(sResultViewType?: String) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"sResultViewType":"type: string, description: New value for property <code>resultViewType<\/code>"}},"!category":"class","setFormatFilterBarText":{"!description":"Sets a new value for property {@link #getFormatFilterBarText formatFilterBarText}.\n\nCallback for formatting the filter string to be displayed on the filter bar (for closed facet panel).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnFormatFilterBarText: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnFormatFilterBarText":"type: function, description: New value for property <code>formatFilterBarText<\/code>"}},"getResultViewType":{"!description":"Gets current value of property {@link #getResultViewType resultViewType}.\n\nDefines active search result view type. The value can be set/get in attach event \"searchFinished\", and it must be contained in resultViewTypes. Case 1, Search in Apps: result is displayed in a mandatory view type <code>\"appSearchResult\"<\/code>. Case 2.1, Search in All or other Category (configuration.isUshell !== true): result is switchable between different view types. Possible value is <code>\"searchResultList\"<\/code>, or <code>\"searchResultGrid\"<\/code>. Case 2.2, Search in All or other Category (configuration.isUshell === true): result is displayed in a mandatory view type <code>\"searchResultList\"<\/code>. Case 3, Search in Business Object: result is switchable between different view types. Possible value is <code>\"searchResultList\"<\/code>, <code>\"searchResultTable\"<\/code> or <code>\"searchResultGrid\"<\/code>. Note: The value of <code>resultViewTypes<\/code> and <code>resultViewType<\/code> must be compatible to each other.\n\nAfter the result view type has been changed, the event 'resultViewTypeChanged' is fired.\n\nDefault value is <code>\"searchResultList\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSearchTerm":{"!description":"Gets current value of property {@link #getSearchTerm searchTerm}.\n\nDefines the initial search term for the search input.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setGetCustomNoResultScreen":{"!description":"Sets a new value for property {@link #getGetCustomNoResultScreen getCustomNoResultScreen}.\n\nWhenever a search has no results, a 'No Results Screen' is displayed. You can provide a custom control to be more specific and add some hints, links, buttons or other content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnGetCustomNoResultScreen: fn()) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fnGetCustomNoResultScreen":"type: function, description: New value for property <code>getCustomNoResultScreen<\/code>"}},"getCssClass":{"!description":"Gets current value of property {@link #getCssClass cssClass}.\n\nAn additional CSS class to add to this control","!static":false,"!category":"function","!type":"fn() -> String"},"getSearchTermLengthLimit":{"!description":"Gets current value of property {@link #getSearchTermLengthLimit searchTermLengthLimit}.\n\nLimit for length of searchterm.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getApplicationComponent":{"!description":"Gets current value of property {@link #getApplicationComponent applicationComponent}.\n\nRelevant for SAP partners and SAP, the \"Application Component\" you expect customers to create incidents.\n\nDefault value is <code>\"HAN-AS-INA-UI\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructs a new <code>SearchCompositeControl<\/code> to interact with SAP Enterprise Search Services.","setFacetPanelResizable":{"!description":"Sets a new value for property {@link #getFacetPanelResizable facetPanelResizable}.\n\nDisplay a splitter bar to resize the left hand panel, containing all facets and filter criteria.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFacetPanelResizable?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bFacetPanelResizable":"type: boolean, description: New value for property <code>facetPanelResizable<\/code>"}},"getIsFilterBarVisible":{"!description":"Gets current value of property {@link #getIsFilterBarVisible isFilterBarVisible}.\n\nCallback for checking whether the filter bar is visible.","!static":false,"!category":"function","!type":"fn() -> fn()"},"setOptimizeForValueHelp":{"!description":"Sets a new value for property {@link #getOptimizeForValueHelp optimizeForValueHelp}.\n\nThe layout is optimized for object selection / value help (narrow view w/o facet panel).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bOptimizeForValueHelp: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bOptimizeForValueHelp":"type: boolean, description: New value for property <code>optimizeForValueHelp<\/code>"}},"getRenderSearchUrl":{"!description":"Gets current value of property {@link #getRenderSearchUrl renderSearchUrl}.\n\nA callback for rendering the search URL. The callback gets a list of url encoded parameters and returns the URL string. Typically you need to register this callback in case of 'updateUrl = true'.","!static":false,"!category":"function","!type":"fn() -> fn()"},"getFormatFilterBarText":{"!description":"Gets current value of property {@link #getFormatFilterBarText formatFilterBarText}.\n\nCallback for formatting the filter string to be displayed on the filter bar (for closed facet panel).","!static":false,"!category":"function","!type":"fn() -> fn()"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getFacetPanelWidthInPercent":{"!description":"Gets current value of property {@link #getFacetPanelWidthInPercent facetPanelWidthInPercent}.\n\nDefault size (percent) of the left hand panel, containing all facets and filter criteria. If \"facetPanelResizable\" is true, the width of the facet panel can be changed by the user.\n\nDefault value is <code>25<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireSearchFinished":{"!description":"Fires event {@link #event:searchFinished searchFinished} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"attachSearchFinished":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:searchFinished searchFinished} event of this <code>sap.esh.search.ui.SearchCompositeControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself.\n\nEvent is fired when search is finished.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.esh.search.ui.SearchCompositeControl<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFacetPanelWidthInPercent":{"!description":"Sets a new value for property {@link #getFacetPanelWidthInPercent facetPanelWidthInPercent}.\n\nDefault size (percent) of the left hand panel, containing all facets and filter criteria. If \"facetPanelResizable\" is true, the width of the facet panel can be changed by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>25<\/code>.","!static":false,"!category":"function","!type":"fn(fFacetPanelWidthInPercent?: Number) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"fFacetPanelWidthInPercent":"type: float, description: New value for property <code>facetPanelWidthInPercent<\/code>"}},"getQuickSelectDataSources":{"!description":"Gets current value of property {@link #getQuickSelectDataSources quickSelectDataSources}.\n\nA list of data sources to be displayed in the facet panel in the section \"Collection\".","!static":false,"!category":"function","!type":"fn() -> Object"},"getInitAsync":{"!description":"Gets current value of property {@link #getInitAsync initAsync}.\n\nAn asynchronues callback which is called after the initialization of the search composite control.","!static":false,"!category":"function","!type":"fn() -> fn()"},"setFacetVisibility":{"!description":"Sets a new value for property {@link #getFacetVisibility facetVisibility}.\n\nA boolean which indicates whether the facet panel is initially openend or closed. This affects only the initial state of the facet panel. This initial state of the facet panel can be overwritten by the user, depending on the user's personalization settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFacetVisibility?: Boolean) -> sap.esh.search.ui.SearchCompositeControl","parameters":{"bFacetVisibility":"type: boolean, description: New value for property <code>facetVisibility<\/code>"}}},"sap.esh":{"search":"sap.esh.search","!category":"namespace"}}}